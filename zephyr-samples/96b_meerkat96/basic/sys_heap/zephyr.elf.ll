; ModuleID = 'build/96b_meerkat96/sys_heap/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, i32, i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.z_heap_bucket, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.z_heap_bucket, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.k_spinlock = type {}
%struct._thread_arch = type { i32, i32 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.sys_memory_stats = type { i32, i32, i32 }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.z_heap_stress_result = type { i32, i32, i32, i64 }
%struct.z_heap_stress_rec = type { i8* (i8*, i32)*, void (i8*, i8*)*, i8*, i32, %struct.z_heap_stress_block*, i32, i32, i32, i32 }
%struct.z_heap_stress_block = type { i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.11], [13808 x i8], [191 x %struct.anon.11], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.11 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.11] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.11], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536850052 to i8*), void (i8*)* inttoptr (i32 536848937 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536850028 to i8*), void (i8*)* inttoptr (i32 536848777 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536850028 to i8*), void (i8*)* inttoptr (i32 536848777 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [21 x i8] c"System heap sample\0A\0A\00", align 1
@heap = internal global %struct.sys_heap zeroinitializer, align 4, !dbg !25
@heap_mem = internal global [256 x i8] zeroinitializer, align 1, !dbg !105
@.str.1 = private unnamed_addr constant [58 x i8] c"allocated %zu, free %zu, max allocated %zu, heap size %u\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !122
@.str.24 = private unnamed_addr constant [45 x i8] c"Heap at %p contains %d units in %d buckets\0A\0A\00", align 1
@.str.1.25 = private unnamed_addr constant [187 x i8] c"  bucket#    min units        total      largest      largest\0A             threshold       chunks      (units)      (bytes)\0A  -----------------------------------------------------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%9d %12d %12d %12d %12zd\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"\0AChunk dump:\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"chunk %4d: [%c] size=%-4d left=%-4d right=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [72 x i8] c"\0A%zd free bytes, %zd allocated bytes, overhead = %zd bytes (%zd.%zd%%)\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 123456789, align 8, !dbg !131
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [11 x i8*] [i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*)], section "llvm.metadata"
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !165
@_vector_start = external dso_local global [0 x i8], align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !596
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !606
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !715
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !902
@.str.43 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.z_heap_bucket { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !852
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !883
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !850
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !838
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !826
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !828
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !885
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !897
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !907
@.str.47 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !913
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1170
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1168
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1162
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1153
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1155
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1172
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1174
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1179
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1184
@overflow_cyc = internal global i32 0, align 4, !dbg !1195
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1454
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1456
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1452
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1422
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1458
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.2 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1488
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1494
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !1705
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1714
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !1721
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1726
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.90 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.92, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.93, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.94, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.95, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !1752
@.str.91 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.92 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.93 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.94 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.95 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.96 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !1858
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !1872
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !1974
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !1977
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !1979
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1719
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1716
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !1981
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2017
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1581
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2015
@.str.148 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2669 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #22, !dbg !2673, !srcloc !2674
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #22, !dbg !2675, !srcloc !2676
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #22, !dbg !2677, !srcloc !2678
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #22, !dbg !2679, !srcloc !2680
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #22, !dbg !2681, !srcloc !2682
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #22, !dbg !2683, !srcloc !2684
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #22, !dbg !2685, !srcloc !2686
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #22, !dbg !2687, !srcloc !2688
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #22, !dbg !2689, !srcloc !2690
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #22, !dbg !2691, !srcloc !2692
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #22, !dbg !2693, !srcloc !2694
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #22, !dbg !2695, !srcloc !2696
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #22, !dbg !2697, !srcloc !2698
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #22, !dbg !2699, !srcloc !2700
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #22, !dbg !2701, !srcloc !2702
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #22, !dbg !2703, !srcloc !2704
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #22, !dbg !2705, !srcloc !2706
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #22, !dbg !2707, !srcloc !2708
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #22, !dbg !2709, !srcloc !2710
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #22, !dbg !2711, !srcloc !2712
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #22, !dbg !2713, !srcloc !2714
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #22, !dbg !2715, !srcloc !2716
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #22, !dbg !2717, !srcloc !2718
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #22, !dbg !2719, !srcloc !2720
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #22, !dbg !2721, !srcloc !2724
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #22, !dbg !2725, !srcloc !2726
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #22, !dbg !2727, !srcloc !2728
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #22, !dbg !2729, !srcloc !2730
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #22, !dbg !2731, !srcloc !2732
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #22, !dbg !2733, !srcloc !2734
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #22, !dbg !2735, !srcloc !2736
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #22, !dbg !2737, !srcloc !2738
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #22, !dbg !2739, !srcloc !2740
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #22, !dbg !2741, !srcloc !2742
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #22, !dbg !2743, !srcloc !2744
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #22, !dbg !2745, !srcloc !2746
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #22, !dbg !2747, !srcloc !2748
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #22, !dbg !2749, !srcloc !2750
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #22, !dbg !2751, !srcloc !2752
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #22, !dbg !2753, !srcloc !2754
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #22, !dbg !2755, !srcloc !2756
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #22, !dbg !2757, !srcloc !2758
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #22, !dbg !2759, !srcloc !2760
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #22, !dbg !2761, !srcloc !2762
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #22, !dbg !2763, !srcloc !2764
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #22, !dbg !2765, !srcloc !2766
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #22, !dbg !2767, !srcloc !2768
  ret void, !dbg !2769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2772 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0)) #23, !dbg !2775
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @heap, i8* noundef getelementptr inbounds ([256 x i8], [256 x i8]* @heap_mem, i32 0, i32 0), i32 noundef 256) #23, !dbg !2776
  tail call void @print_sys_memory_stats() #24, !dbg !2777
  %1 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull @heap, i32 noundef 150) #23, !dbg !2778
  call void @llvm.dbg.value(metadata i8* %1, metadata !2774, metadata !DIExpression()), !dbg !2779
  tail call void @print_sys_memory_stats() #24, !dbg !2780
  %2 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @heap, i8* noundef %1, i32 noundef 0, i32 noundef 100) #23, !dbg !2781
  call void @llvm.dbg.value(metadata i8* %2, metadata !2774, metadata !DIExpression()), !dbg !2779
  tail call void @print_sys_memory_stats() #24, !dbg !2782
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @heap, i8* noundef %2) #23, !dbg !2783
  tail call void @print_sys_memory_stats() #24, !dbg !2784
  ret void, !dbg !2785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_sys_memory_stats() local_unnamed_addr #1 !dbg !2786 {
  %1 = alloca %struct.sys_memory_stats, align 4
  %2 = bitcast %struct.sys_memory_stats* %1 to i8*, !dbg !2795
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #22, !dbg !2795
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %1, metadata !2788, metadata !DIExpression()), !dbg !2796
  %3 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef nonnull @heap, %struct.sys_memory_stats* noundef nonnull %1) #23, !dbg !2797
  %4 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !2798
  %5 = load i32, i32* %4, align 4, !dbg !2798
  %6 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !2799
  %7 = load i32, i32* %6, align 4, !dbg !2799
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !2800
  %9 = load i32, i32* %8, align 4, !dbg !2800
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef 256) #23, !dbg !2801
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #22, !dbg !2802
  ret void, !dbg !2802
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2805, metadata !DIExpression()), !dbg !2806
  ret i32 0, !dbg !2807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !2808 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2812, metadata !DIExpression()), !dbg !2813
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2814
  ret void, !dbg !2815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !2816 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2819
  ret i8* %1, !dbg !2820
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2821 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2833, metadata !DIExpression()), !dbg !2842
  call void @llvm.dbg.value(metadata i8* %0, metadata !2832, metadata !DIExpression()), !dbg !2842
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !2843
  ret void, !dbg !2845
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !2846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2850, metadata !DIExpression()), !dbg !2852
  call void @llvm.dbg.value(metadata i8* %1, metadata !2851, metadata !DIExpression()), !dbg !2852
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2853
  %4 = tail call i32 %3(i32 noundef %0) #23, !dbg !2853
  ret i32 %4, !dbg !2854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !2855 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2867, metadata !DIExpression()), !dbg !2868
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !2864, metadata !DIExpression()), !dbg !2868
  call void @llvm.dbg.value(metadata i8* %1, metadata !2865, metadata !DIExpression()), !dbg !2868
  call void @llvm.dbg.value(metadata i8* %2, metadata !2866, metadata !DIExpression()), !dbg !2868
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #23, !dbg !2869
  ret void, !dbg !2870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !2871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2875, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i32 %1, metadata !2876, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i32 0, metadata !2877, metadata !DIExpression()), !dbg !2878
  %3 = icmp eq i32 %1, 0, !dbg !2879
  br i1 %3, label %13, label %4, !dbg !2882

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !2877, metadata !DIExpression()), !dbg !2878
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2883
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !2885
  %8 = load i8, i8* %7, align 1, !dbg !2885
  %9 = zext i8 %8 to i32, !dbg !2885
  %10 = tail call i32 %6(i32 noundef %9) #23, !dbg !2883
  %11 = add nuw i32 %5, 1, !dbg !2886
  call void @llvm.dbg.value(metadata i32 %11, metadata !2877, metadata !DIExpression()), !dbg !2878
  %12 = icmp eq i32 %11, %1, !dbg !2879
  br i1 %12, label %13, label %4, !dbg !2882, !llvm.loop !2887

13:                                               ; preds = %4, %2
  ret void, !dbg !2889
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !2890 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2894, metadata !DIExpression()), !dbg !2896
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !2897
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !2897
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !2895, metadata !DIExpression()), !dbg !2898
  call void @llvm.va_start(i8* nonnull %3), !dbg !2899
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !2900
  %5 = load i32, i32* %4, align 4, !dbg !2900
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !2900
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !2900
  call void @llvm.va_end(i8* nonnull %3), !dbg !2901
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !2902
  ret void, !dbg !2902
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !2903 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2907, metadata !DIExpression()), !dbg !2912
  call void @llvm.dbg.value(metadata i32 %1, metadata !2908, metadata !DIExpression()), !dbg !2912
  call void @llvm.dbg.value(metadata i8* %2, metadata !2909, metadata !DIExpression()), !dbg !2912
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !2913
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !2913
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2910, metadata !DIExpression()), !dbg !2914
  call void @llvm.va_start(i8* nonnull %5), !dbg !2915
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !2916
  %7 = load i32, i32* %6, align 4, !dbg !2916
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2916
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !2916
  call void @llvm.dbg.value(metadata i32 %9, metadata !2911, metadata !DIExpression()), !dbg !2912
  call void @llvm.va_end(i8* nonnull %5), !dbg !2917
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !2918
  ret i32 %9, !dbg !2919
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !2920 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !2927, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.value(metadata i8* %0, metadata !2924, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.value(metadata i32 %1, metadata !2925, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.value(metadata i8* %2, metadata !2926, metadata !DIExpression()), !dbg !2934
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !2935
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #22, !dbg !2935
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !2928, metadata !DIExpression()), !dbg !2936
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !2937
  store i8* %0, i8** %7, align 4, !dbg !2937
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !2937
  store i32 %1, i32* %8, align 4, !dbg !2937
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !2937
  store i32 0, i32* %9, align 4, !dbg !2937
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !2938
  %10 = load i32, i32* %9, align 4, !dbg !2939
  %11 = load i32, i32* %8, align 4, !dbg !2941
  %12 = icmp slt i32 %10, %11, !dbg !2942
  br i1 %12, label %13, label %15, !dbg !2943

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !2944
  store i8 0, i8* %14, align 1, !dbg !2946
  br label %15, !dbg !2947

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #22, !dbg !2948
  ret i32 %10, !dbg !2949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !2950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2955, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !2956, metadata !DIExpression()), !dbg !2957
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !2958
  %4 = load i8*, i8** %3, align 4, !dbg !2958
  %5 = icmp eq i8* %4, null, !dbg !2960
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !2961
  br i1 %5, label %12, label %8, !dbg !2962

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !2963
  %10 = load i32, i32* %9, align 4, !dbg !2963
  %11 = icmp slt i32 %7, %10, !dbg !2964
  br i1 %11, label %15, label %12, !dbg !2965

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !2966
  %14 = add nsw i32 %7, 1, !dbg !2968
  store i32 %14, i32* %13, align 4, !dbg !2968
  br label %25, !dbg !2969

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !2970
  %17 = icmp eq i32 %7, %16, !dbg !2972
  br i1 %17, label %18, label %21, !dbg !2973

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !2974
  store i32 %19, i32* %6, align 4, !dbg !2974
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !2976
  store i8 0, i8* %20, align 1, !dbg !2977
  br label %25, !dbg !2978

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !2979
  %23 = add nsw i32 %7, 1, !dbg !2981
  store i32 %23, i32* %6, align 4, !dbg !2981
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !2982
  store i8 %22, i8* %24, align 1, !dbg !2983
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !2984
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !2985 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !2995, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i8* %1, metadata !2996, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i8* %2, metadata !2997, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i8* %3, metadata !2998, metadata !DIExpression()), !dbg !2999
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #23, !dbg !3000
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #25, !dbg !3001
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !3002
  unreachable, !dbg !3003
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3004 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #25, !dbg !3102
  ret %struct.k_thread* %1, !dbg !3103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3109, metadata !DIExpression()), !dbg !3110
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !3111, !srcloc !3113
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #23, !dbg !3114
  ret void, !dbg !3115
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3116 {
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !3117, !srcloc !3119
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #23, !dbg !3120
  ret %struct.k_thread* %1, !dbg !3121
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3122 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3133, metadata !DIExpression()), !dbg !3137
  call void @llvm.dbg.value(metadata i8* %1, metadata !3134, metadata !DIExpression()), !dbg !3137
  %3 = icmp eq i8* %1, null, !dbg !3138
  br i1 %3, label %13, label %4, !dbg !3140

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3141
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3141
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3135, metadata !DIExpression()), !dbg !3137
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #24, !dbg !3142, !range !3143
  call void @llvm.dbg.value(metadata i32 %7, metadata !3136, metadata !DIExpression()), !dbg !3137
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #24, !dbg !3144
  %8 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %7) #24, !dbg !3145, !range !3146
  %9 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %8) #24, !dbg !3147
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3148
  %11 = load i32, i32* %10, align 4, !dbg !3149
  %12 = sub i32 %11, %9, !dbg !3149
  store i32 %12, i32* %10, align 4, !dbg !3149
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #24, !dbg !3150
  br label %13

13:                                               ; preds = %2, %4
  ret void, !dbg !3151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3152 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3156, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i8* %1, metadata !3157, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i8* %1, metadata !3158, metadata !DIExpression()), !dbg !3160
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3161
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3159, metadata !DIExpression()), !dbg !3160
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3162
  %5 = ptrtoint i8* %4 to i32, !dbg !3163
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3163
  %7 = sub i32 %5, %6, !dbg !3163
  %8 = lshr i32 %7, 3, !dbg !3164
  ret i32 %8, !dbg !3165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3166 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3170, metadata !DIExpression()), !dbg !3175
  call void @llvm.dbg.value(metadata i32 %1, metadata !3171, metadata !DIExpression()), !dbg !3175
  call void @llvm.dbg.value(metadata i1 %2, metadata !3172, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3175
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3176
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3173, metadata !DIExpression()), !dbg !3175
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3174, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3175
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3177
  %6 = bitcast i8* %5 to i16*, !dbg !3177
  %7 = load i16, i16* %6, align 2, !dbg !3177
  %8 = and i16 %7, -2, !dbg !3181
  %9 = zext i1 %2 to i16, !dbg !3181
  %10 = or i16 %8, %9, !dbg !3181
  store i16 %10, i16* %6, align 2, !dbg !3177
  ret void, !dbg !3182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3183 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3188, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata i32 %1, metadata !3189, metadata !DIExpression()), !dbg !3190
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #24, !dbg !3191
  %4 = lshr i32 %3, 1, !dbg !3192
  ret i32 %4, !dbg !3193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3194 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3198, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.value(metadata i32 %1, metadata !3199, metadata !DIExpression()), !dbg !3200
  %3 = shl i32 %1, 3, !dbg !3201
  %4 = add i32 %3, -4, !dbg !3202
  ret i32 %4, !dbg !3203
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3204 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3208, metadata !DIExpression()), !dbg !3210
  call void @llvm.dbg.value(metadata i32 %1, metadata !3209, metadata !DIExpression()), !dbg !3210
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3211
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3213
  br i1 %4, label %7, label %5, !dbg !3214

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3215
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3217
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #24, !dbg !3218
  br label %7, !dbg !3219

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3220, !range !3222
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #24, !dbg !3223
  br i1 %9, label %13, label %10, !dbg !3224

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #24, !dbg !3225
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3227, !range !3222
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #24, !dbg !3228
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3229
  call void @llvm.dbg.value(metadata i32 %12, metadata !3209, metadata !DIExpression()), !dbg !3210
  br label %13, !dbg !3230

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3209, metadata !DIExpression()), !dbg !3210
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #24, !dbg !3231
  ret void, !dbg !3232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3233 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3237, metadata !DIExpression()), !dbg !3239
  call void @llvm.dbg.value(metadata i32 %1, metadata !3238, metadata !DIExpression()), !dbg !3239
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3240
  %4 = add i32 %3, %1, !dbg !3241
  ret i32 %4, !dbg !3242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3243 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3247, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %1, metadata !3248, metadata !DIExpression()), !dbg !3249
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #24, !dbg !3250
  %4 = and i32 %3, 1, !dbg !3251
  %5 = icmp ne i32 %4, 0, !dbg !3250
  ret i1 %5, !dbg !3252
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3253 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3255, metadata !DIExpression()), !dbg !3260
  call void @llvm.dbg.value(metadata i32 %1, metadata !3256, metadata !DIExpression()), !dbg !3260
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3261, !range !3146
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3262
  call void @llvm.dbg.value(metadata i32 %4, metadata !3257, metadata !DIExpression()), !dbg !3263
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #24, !dbg !3264
  ret void, !dbg !3265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3266 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3270, metadata !DIExpression()), !dbg !3274
  call void @llvm.dbg.value(metadata i32 %1, metadata !3271, metadata !DIExpression()), !dbg !3274
  call void @llvm.dbg.value(metadata i32 %2, metadata !3272, metadata !DIExpression()), !dbg !3274
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3275
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !3276
  %6 = add i32 %5, %4, !dbg !3277
  call void @llvm.dbg.value(metadata i32 %6, metadata !3273, metadata !DIExpression()), !dbg !3274
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #24, !dbg !3278
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !3279
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #24, !dbg !3280
  ret void, !dbg !3281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3282 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3284, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %1, metadata !3285, metadata !DIExpression()), !dbg !3286
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #24, !dbg !3287
  %4 = sub i32 %1, %3, !dbg !3288
  ret i32 %4, !dbg !3289
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3290 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3292, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i32 %1, metadata !3293, metadata !DIExpression()), !dbg !3297
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3298, !range !3146
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3299
  call void @llvm.dbg.value(metadata i32 %4, metadata !3294, metadata !DIExpression()), !dbg !3300
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #24, !dbg !3301
  ret void, !dbg !3302
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3303 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3307, metadata !DIExpression()), !dbg !3310
  call void @llvm.dbg.value(metadata i32 %1, metadata !3308, metadata !DIExpression()), !dbg !3310
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #24, !dbg !3311
  %4 = add i32 %1, 1, !dbg !3312
  %5 = sub i32 %4, %3, !dbg !3313
  call void @llvm.dbg.value(metadata i32 %5, metadata !3309, metadata !DIExpression()), !dbg !3310
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3314, !range !3315
  %7 = sub nsw i32 31, %6, !dbg !3316
  ret i32 %7, !dbg !3317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3318 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3322, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata i32 %1, metadata !3323, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata i32 %2, metadata !3324, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3325, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3331
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, i32 0, !dbg !3332
  %5 = load i32, i32* %4, align 4, !dbg !3332
  %6 = icmp eq i32 %5, 0, !dbg !3333
  br i1 %6, label %7, label %12, !dbg !3334

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3335
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3337
  %10 = load i32, i32* %9, align 4, !dbg !3338
  %11 = or i32 %10, %8, !dbg !3338
  store i32 %11, i32* %9, align 4, !dbg !3338
  store i32 %1, i32* %4, align 4, !dbg !3339
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #24, !dbg !3340
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #24, !dbg !3341
  br label %14, !dbg !3342

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3327, metadata !DIExpression()), !dbg !3343
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #24, !dbg !3344, !range !3345
  call void @llvm.dbg.value(metadata i32 %13, metadata !3330, metadata !DIExpression()), !dbg !3343
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #24, !dbg !3346
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #24, !dbg !3347
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #24, !dbg !3348
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #24, !dbg !3349
  br label %14

14:                                               ; preds = %12, %7
  %15 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #24, !dbg !3350, !range !3146
  %16 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %15) #24, !dbg !3351
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3352
  %18 = load i32, i32* %17, align 4, !dbg !3353
  %19 = add i32 %18, %16, !dbg !3353
  store i32 %19, i32* %17, align 4, !dbg !3353
  ret void, !dbg !3354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3355 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3357, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %1, metadata !3358, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %2, metadata !3359, metadata !DIExpression()), !dbg !3360
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #24, !dbg !3361
  ret void, !dbg !3362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3363 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3365, metadata !DIExpression()), !dbg !3368
  call void @llvm.dbg.value(metadata i32 %1, metadata !3366, metadata !DIExpression()), !dbg !3368
  call void @llvm.dbg.value(metadata i32 %2, metadata !3367, metadata !DIExpression()), !dbg !3368
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #24, !dbg !3369
  ret void, !dbg !3370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3371 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3373, metadata !DIExpression()), !dbg !3375
  call void @llvm.dbg.value(metadata i32 %1, metadata !3374, metadata !DIExpression()), !dbg !3375
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #24, !dbg !3376
  ret i32 %3, !dbg !3377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3378 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3382, metadata !DIExpression()), !dbg !3387
  call void @llvm.dbg.value(metadata i32 %1, metadata !3383, metadata !DIExpression()), !dbg !3387
  call void @llvm.dbg.value(metadata i32 %2, metadata !3384, metadata !DIExpression()), !dbg !3387
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3388
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3385, metadata !DIExpression()), !dbg !3387
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3386, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3387
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3386, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3387
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3389
  call void @llvm.dbg.value(metadata i8* %5, metadata !3386, metadata !DIExpression()), !dbg !3387
  %6 = bitcast i8* %5 to i16*, !dbg !3390
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3393
  %8 = load i16, i16* %7, align 2, !dbg !3393
  %9 = zext i16 %8 to i32, !dbg !3393
  ret i32 %9, !dbg !3394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3395 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3399, metadata !DIExpression()), !dbg !3400
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3401
  ret %struct.chunk_unit_t* %2, !dbg !3402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3403 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3407, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %1, metadata !3408, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %2, metadata !3409, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %3, metadata !3410, metadata !DIExpression()), !dbg !3413
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3414
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3411, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3412, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3413
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3415
  call void @llvm.dbg.value(metadata i8* %6, metadata !3412, metadata !DIExpression()), !dbg !3413
  %7 = trunc i32 %3 to i16, !dbg !3416
  %8 = bitcast i8* %6 to i16*, !dbg !3419
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3420
  store i16 %7, i16* %9, align 2, !dbg !3421
  ret void, !dbg !3422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3423 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3427, metadata !DIExpression()), !dbg !3428
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #24, !dbg !3429
  ret i32 %2, !dbg !3430
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3431 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3435, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.value(metadata i32 %1, metadata !3436, metadata !DIExpression()), !dbg !3437
  %3 = add i32 %1, 4, !dbg !3438
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #24, !dbg !3439
  ret i32 %4, !dbg !3440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3445, metadata !DIExpression()), !dbg !3446
  %2 = add i32 %0, 7, !dbg !3447
  %3 = lshr i32 %2, 3, !dbg !3448
  ret i32 %3, !dbg !3449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3450 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3454, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i32 %1, metadata !3455, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i32 %2, metadata !3456, metadata !DIExpression()), !dbg !3457
  %4 = shl i32 %2, 1, !dbg !3458
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #24, !dbg !3459
  ret void, !dbg !3460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3461 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3463, metadata !DIExpression()), !dbg !3466
  call void @llvm.dbg.value(metadata i32 %1, metadata !3464, metadata !DIExpression()), !dbg !3466
  call void @llvm.dbg.value(metadata i32 %2, metadata !3465, metadata !DIExpression()), !dbg !3466
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #24, !dbg !3467
  ret void, !dbg !3468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3469 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3471, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata i32 %1, metadata !3472, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata i32 %2, metadata !3473, metadata !DIExpression()), !dbg !3479
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, !dbg !3480
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3474, metadata !DIExpression()), !dbg !3479
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3481
  %6 = icmp eq i32 %5, %1, !dbg !3482
  br i1 %6, label %7, label %14, !dbg !3483

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3484
  %9 = xor i32 %8, -1, !dbg !3486
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3487
  %11 = load i32, i32* %10, align 4, !dbg !3488
  %12 = and i32 %11, %9, !dbg !3488
  store i32 %12, i32* %10, align 4, !dbg !3488
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3489
  store i32 0, i32* %13, align 4, !dbg !3490
  br label %17, !dbg !3491

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3492
  call void @llvm.dbg.value(metadata i32 %15, metadata !3475, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i32 %5, metadata !3478, metadata !DIExpression()), !dbg !3493
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3494
  store i32 %5, i32* %16, align 4, !dbg !3495
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #24, !dbg !3496
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #24, !dbg !3497
  br label %17

17:                                               ; preds = %14, %7
  %18 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #24, !dbg !3498, !range !3146
  %19 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %18) #24, !dbg !3499
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3500
  %21 = load i32, i32* %20, align 4, !dbg !3501
  %22 = sub i32 %21, %19, !dbg !3501
  store i32 %22, i32* %20, align 4, !dbg !3501
  ret void, !dbg !3502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3503 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3505, metadata !DIExpression()), !dbg !3507
  call void @llvm.dbg.value(metadata i32 %1, metadata !3506, metadata !DIExpression()), !dbg !3507
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #24, !dbg !3508
  ret i32 %3, !dbg !3509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3510 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3514, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.value(metadata i8* %1, metadata !3515, metadata !DIExpression()), !dbg !3521
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3522
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3522
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3516, metadata !DIExpression()), !dbg !3521
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #24, !dbg !3523
  call void @llvm.dbg.value(metadata i32 %5, metadata !3517, metadata !DIExpression()), !dbg !3521
  %6 = ptrtoint i8* %1 to i32, !dbg !3524
  call void @llvm.dbg.value(metadata i32 %6, metadata !3518, metadata !DIExpression()), !dbg !3521
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #24, !dbg !3525
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3525
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3526
  call void @llvm.dbg.value(metadata i32 %9, metadata !3519, metadata !DIExpression()), !dbg !3521
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #24, !dbg !3527
  %11 = shl i32 %10, 3, !dbg !3528
  call void @llvm.dbg.value(metadata i32 %11, metadata !3520, metadata !DIExpression()), !dbg !3521
  %12 = sub i32 %9, %6, !dbg !3529
  %13 = add i32 %12, %11, !dbg !3530
  ret i32 %13, !dbg !3531
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3532 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3536, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i32 %1, metadata !3537, metadata !DIExpression()), !dbg !3542
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3543
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3543
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3538, metadata !DIExpression()), !dbg !3542
  %5 = icmp eq i32 %1, 0, !dbg !3544
  br i1 %5, label %21, label %6, !dbg !3546

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #24, !dbg !3547
  br i1 %7, label %21, label %8, !dbg !3548

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #24, !dbg !3549, !range !3143
  call void @llvm.dbg.value(metadata i32 %9, metadata !3540, metadata !DIExpression()), !dbg !3542
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #24, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %10, metadata !3541, metadata !DIExpression()), !dbg !3542
  %11 = icmp eq i32 %10, 0, !dbg !3551
  br i1 %11, label %21, label %12, !dbg !3553

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #24, !dbg !3554
  %14 = icmp ugt i32 %13, %9, !dbg !3556
  br i1 %14, label %15, label %17, !dbg !3557

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3558
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #24, !dbg !3560
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #24, !dbg !3561
  br label %17, !dbg !3562

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #24, !dbg !3563
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #24, !dbg !3564
  call void @llvm.dbg.value(metadata i8* %18, metadata !3539, metadata !DIExpression()), !dbg !3542
  %19 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #24, !dbg !3565, !range !3146
  %20 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %4, i32 noundef %19) #24, !dbg !3566, !range !3567
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %4, i32 noundef %20) #24, !dbg !3568
  br label %21, !dbg !3569

21:                                               ; preds = %17, %8, %2, %6
  %22 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3542
  ret i8* %22, !dbg !3570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3571 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3575, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %1, metadata !3576, metadata !DIExpression()), !dbg !3577
  %3 = lshr i32 %1, 3, !dbg !3578
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3579
  %5 = load i32, i32* %4, align 4, !dbg !3579
  %6 = icmp uge i32 %3, %5, !dbg !3580
  ret i1 %6, !dbg !3581
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3582 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3586, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.value(metadata i32 %1, metadata !3587, metadata !DIExpression()), !dbg !3601
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3602
  call void @llvm.dbg.value(metadata i32 %3, metadata !3588, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3601
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %3, i32 0, !dbg !3603
  %5 = load i32, i32* %4, align 4, !dbg !3603
  %6 = icmp eq i32 %5, 0, !dbg !3604
  br i1 %6, label %19, label %7, !dbg !3605

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3606
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3607
  call void @llvm.dbg.value(metadata i32 %9, metadata !3593, metadata !DIExpression()), !dbg !3607
  call void @llvm.dbg.value(metadata i32 %8, metadata !3594, metadata !DIExpression()), !dbg !3608
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #24, !dbg !3609
  %11 = icmp ult i32 %10, %1, !dbg !3611
  br i1 %11, label %13, label %12, !dbg !3612

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #24, !dbg !3613
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #24, !dbg !3615
  store i32 %14, i32* %4, align 4, !dbg !3616
  %15 = add nsw i32 %9, -1, !dbg !3617
  call void @llvm.dbg.value(metadata i32 %15, metadata !3593, metadata !DIExpression()), !dbg !3607
  %16 = icmp eq i32 %15, 0, !dbg !3617
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3618
  br i1 %18, label %19, label %7, !dbg !3618, !llvm.loop !3619

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3622
  %21 = load i32, i32* %20, align 4, !dbg !3622
  %22 = add nsw i32 %3, 1, !dbg !3623
  %23 = shl nsw i32 -1, %22, !dbg !3623
  %24 = and i32 %21, %23, !dbg !3624
  call void @llvm.dbg.value(metadata i32 %24, metadata !3596, metadata !DIExpression()), !dbg !3601
  %25 = icmp eq i32 %24, 0, !dbg !3625
  br i1 %25, label %30, label %26, !dbg !3626

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3627, !range !3315
  call void @llvm.dbg.value(metadata i32 %27, metadata !3597, metadata !DIExpression()), !dbg !3628
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %27, i32 0, !dbg !3629
  %29 = load i32, i32* %28, align 4, !dbg !3629
  call void @llvm.dbg.value(metadata i32 %29, metadata !3600, metadata !DIExpression()), !dbg !3628
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #24, !dbg !3630
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3601
  ret i32 %31, !dbg !3631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3632 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3634, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %1, metadata !3635, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %2, metadata !3636, metadata !DIExpression()), !dbg !3640
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3641
  call void @llvm.dbg.value(metadata i32 %4, metadata !3637, metadata !DIExpression()), !dbg !3640
  %5 = sub i32 %2, %1, !dbg !3642
  call void @llvm.dbg.value(metadata i32 %5, metadata !3638, metadata !DIExpression()), !dbg !3640
  %6 = sub i32 %4, %5, !dbg !3643
  call void @llvm.dbg.value(metadata i32 %6, metadata !3639, metadata !DIExpression()), !dbg !3640
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #24, !dbg !3644
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #24, !dbg !3645
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #24, !dbg !3646
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !3647
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #24, !dbg !3648
  ret void, !dbg !3649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3650 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3654, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i32 %1, metadata !3655, metadata !DIExpression()), !dbg !3658
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3659
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3656, metadata !DIExpression()), !dbg !3658
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3660
  call void @llvm.dbg.value(metadata i8* %4, metadata !3657, metadata !DIExpression()), !dbg !3658
  ret i8* %4, !dbg !3661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @increase_allocated_bytes(%struct.z_heap* nocapture noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3662 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3666, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata i32 %1, metadata !3667, metadata !DIExpression()), !dbg !3668
  %3 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 4, !dbg !3669
  %4 = load i32, i32* %3, align 4, !dbg !3670
  %5 = add i32 %4, %1, !dbg !3670
  store i32 %5, i32* %3, align 4, !dbg !3670
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 5, !dbg !3671
  %7 = load i32, i32* %6, align 4, !dbg !3671
  %8 = icmp ugt i32 %7, %5, !dbg !3671
  %9 = select i1 %8, i32 %7, i32 %5, !dbg !3671
  store i32 %9, i32* %6, align 4, !dbg !3672
  ret void, !dbg !3673
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3674 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3678, metadata !DIExpression()), !dbg !3690
  call void @llvm.dbg.value(metadata i32 %1, metadata !3679, metadata !DIExpression()), !dbg !3690
  call void @llvm.dbg.value(metadata i32 %2, metadata !3680, metadata !DIExpression()), !dbg !3690
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3691
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3691
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3681, metadata !DIExpression()), !dbg !3690
  %6 = sub i32 0, %1, !dbg !3692
  %7 = and i32 %6, %1, !dbg !3693
  call void @llvm.dbg.value(metadata i32 %7, metadata !3683, metadata !DIExpression()), !dbg !3690
  %8 = icmp eq i32 %7, %1, !dbg !3694
  br i1 %8, label %13, label %9, !dbg !3696

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %10, metadata !3679, metadata !DIExpression()), !dbg !3690
  %11 = icmp ult i32 %7, 4, !dbg !3699
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3699
  br label %17, !dbg !3699

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !3700
  br i1 %14, label %15, label %17, !dbg !3703

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #24, !dbg !3704
  br label %59, !dbg !3706

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3690
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !3707
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3679, metadata !DIExpression()), !dbg !3690
  call void @llvm.dbg.value(metadata i32 %19, metadata !3682, metadata !DIExpression()), !dbg !3690
  call void @llvm.dbg.value(metadata i32 %18, metadata !3683, metadata !DIExpression()), !dbg !3690
  %21 = icmp eq i32 %2, 0, !dbg !3708
  br i1 %21, label %59, label %22, !dbg !3710

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #24, !dbg !3711
  br i1 %23, label %59, label %24, !dbg !3712

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !3713
  %26 = add i32 %25, %20, !dbg !3714
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #24, !dbg !3715, !range !3143
  call void @llvm.dbg.value(metadata i32 %27, metadata !3684, metadata !DIExpression()), !dbg !3690
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #24, !dbg !3716
  call void @llvm.dbg.value(metadata i32 %28, metadata !3685, metadata !DIExpression()), !dbg !3690
  %29 = icmp eq i32 %28, 0, !dbg !3717
  br i1 %29, label %59, label %30, !dbg !3719

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #24, !dbg !3720
  call void @llvm.dbg.value(metadata i8* %31, metadata !3686, metadata !DIExpression()), !dbg !3690
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !3721
  %33 = ptrtoint i8* %32 to i32, !dbg !3721
  %34 = add i32 %20, -1, !dbg !3721
  %35 = add i32 %34, %33, !dbg !3721
  %36 = sub i32 0, %20, !dbg !3721
  %37 = and i32 %35, %36, !dbg !3721
  %38 = inttoptr i32 %37 to i8*, !dbg !3722
  %39 = sub i32 0, %18, !dbg !3723
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !3723
  call void @llvm.dbg.value(metadata i8* %40, metadata !3686, metadata !DIExpression()), !dbg !3690
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !3724
  %42 = ptrtoint i8* %41 to i32, !dbg !3724
  %43 = add i32 %42, 7, !dbg !3724
  %44 = and i32 %43, -8, !dbg !3724
  call void @llvm.dbg.value(metadata i32 %44, metadata !3687, metadata !DIExpression()), !dbg !3690
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #24, !dbg !3725
  call void @llvm.dbg.value(metadata i32 %45, metadata !3688, metadata !DIExpression()), !dbg !3690
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #24, !dbg !3726
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !3727
  %48 = sub i32 %44, %47, !dbg !3727
  %49 = ashr exact i32 %48, 3, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %49, metadata !3689, metadata !DIExpression()), !dbg !3690
  %50 = icmp ugt i32 %45, %28, !dbg !3728
  br i1 %50, label %51, label %52, !dbg !3730

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #24, !dbg !3731
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #24, !dbg !3733
  br label %52, !dbg !3734

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #24, !dbg !3735
  %54 = icmp ugt i32 %53, %49, !dbg !3737
  br i1 %54, label %55, label %56, !dbg !3738

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #24, !dbg !3739
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #24, !dbg !3741
  br label %56, !dbg !3742

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #24, !dbg !3743
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %5, i32 noundef %45) #24, !dbg !3744, !range !3146
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %5, i32 noundef %57) #24, !dbg !3745, !range !3567
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %5, i32 noundef %58) #24, !dbg !3746
  br label %59

59:                                               ; preds = %56, %24, %17, %22, %15
  %60 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3690
  ret i8* %60, !dbg !3747
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !3748 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3752, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8* %1, metadata !3753, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %2, metadata !3754, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %3, metadata !3755, metadata !DIExpression()), !dbg !3771
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3772
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3772
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3756, metadata !DIExpression()), !dbg !3771
  %7 = icmp eq i8* %1, null, !dbg !3773
  br i1 %7, label %8, label %10, !dbg !3775

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #24, !dbg !3776
  br label %65, !dbg !3778

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !3779
  br i1 %11, label %12, label %13, !dbg !3781

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #24, !dbg !3782
  br label %65, !dbg !3784

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #24, !dbg !3785
  br i1 %14, label %65, label %15, !dbg !3787

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #24, !dbg !3788, !range !3143
  call void @llvm.dbg.value(metadata i32 %16, metadata !3757, metadata !DIExpression()), !dbg !3771
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !3789
  call void @llvm.dbg.value(metadata i32 %17, metadata !3758, metadata !DIExpression()), !dbg !3771
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !3790
  %19 = ptrtoint i8* %1 to i32, !dbg !3791
  %20 = ptrtoint i8* %18 to i32, !dbg !3791
  %21 = sub i32 %19, %20, !dbg !3791
  call void @llvm.dbg.value(metadata i32 %21, metadata !3759, metadata !DIExpression()), !dbg !3771
  %22 = add i32 %21, %3, !dbg !3792
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #24, !dbg !3793
  call void @llvm.dbg.value(metadata i32 %23, metadata !3760, metadata !DIExpression()), !dbg !3771
  %24 = icmp eq i32 %2, 0, !dbg !3794
  br i1 %24, label %29, label %25, !dbg !3795

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !3796
  %27 = and i32 %26, %19, !dbg !3797
  %28 = icmp eq i32 %27, 0, !dbg !3797
  br i1 %28, label %29, label %55, !dbg !3798

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !3799
  %31 = icmp eq i32 %23, %30, !dbg !3800
  br i1 %31, label %65, label %32, !dbg !3801

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !3802
  br i1 %33, label %34, label %41, !dbg !3803

34:                                               ; preds = %32
  %35 = sub i32 %23, %30, !dbg !3804
  %36 = shl i32 %35, 3, !dbg !3806
  %37 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3807
  %38 = load i32, i32* %37, align 4, !dbg !3808
  %39 = add i32 %38, %36, !dbg !3808
  store i32 %39, i32* %37, align 4, !dbg !3808
  %40 = add i32 %23, %16, !dbg !3809
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %40) #24, !dbg !3810
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #24, !dbg !3811
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %40) #24, !dbg !3812
  br label %65, !dbg !3813

41:                                               ; preds = %32
  %42 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !3814
  br i1 %42, label %55, label %43, !dbg !3815

43:                                               ; preds = %41
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !3816
  %45 = add i32 %44, %30, !dbg !3817
  %46 = icmp ult i32 %45, %23, !dbg !3818
  br i1 %46, label %55, label %47, !dbg !3819

47:                                               ; preds = %43
  %48 = sub i32 %23, %30, !dbg !3820
  call void @llvm.dbg.value(metadata i32 %48, metadata !3761, metadata !DIExpression()), !dbg !3821
  %49 = shl i32 %48, 3, !dbg !3822
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %6, i32 noundef %49) #24, !dbg !3823
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !3824
  %50 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !3825
  %51 = icmp ult i32 %48, %50, !dbg !3827
  br i1 %51, label %52, label %54, !dbg !3828

52:                                               ; preds = %47
  %53 = add i32 %48, %17, !dbg !3829
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %53) #24, !dbg !3831
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %53) #24, !dbg !3832
  br label %54, !dbg !3833

54:                                               ; preds = %52, %47
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #24, !dbg !3834
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #24, !dbg !3835
  br label %65

55:                                               ; preds = %43, %41, %25
  %56 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #24, !dbg !3836
  call void @llvm.dbg.value(metadata i8* %56, metadata !3767, metadata !DIExpression()), !dbg !3771
  %57 = icmp eq i8* %56, null, !dbg !3837
  br i1 %57, label %65, label %58, !dbg !3838

58:                                               ; preds = %55
  %59 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !3839, !range !3146
  %60 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %59) #24, !dbg !3840
  %61 = sub i32 %60, %21, !dbg !3841
  call void @llvm.dbg.value(metadata i32 %61, metadata !3768, metadata !DIExpression()), !dbg !3842
  %62 = icmp ult i32 %61, %3, !dbg !3843
  %63 = select i1 %62, i32 %61, i32 %3, !dbg !3843
  %64 = tail call i8* @memcpy(i8* noundef nonnull %56, i8* noundef nonnull %1, i32 noundef %63) #23, !dbg !3844
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #24, !dbg !3845
  br label %65, !dbg !3846

65:                                               ; preds = %34, %54, %29, %58, %55, %13, %12, %8
  %66 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %54 ], [ %1, %29 ], [ %56, %58 ], [ null, %55 ], !dbg !3771
  ret i8* %66, !dbg !3847
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3848 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3852, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8* %1, metadata !3853, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i32 %2, metadata !3854, metadata !DIExpression()), !dbg !3863
  %4 = add i32 %2, -4, !dbg !3864
  call void @llvm.dbg.value(metadata i32 %4, metadata !3854, metadata !DIExpression()), !dbg !3863
  %5 = ptrtoint i8* %1 to i32, !dbg !3865
  %6 = add i32 %5, 7, !dbg !3865
  %7 = and i32 %6, -8, !dbg !3865
  call void @llvm.dbg.value(metadata i32 %7, metadata !3855, metadata !DIExpression()), !dbg !3863
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !3866
  %9 = ptrtoint i8* %8 to i32, !dbg !3866
  %10 = and i32 %9, -8, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %10, metadata !3856, metadata !DIExpression()), !dbg !3863
  %11 = sub i32 %10, %7, !dbg !3867
  %12 = lshr exact i32 %11, 3, !dbg !3868
  call void @llvm.dbg.value(metadata i32 %12, metadata !3857, metadata !DIExpression()), !dbg !3863
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !3869
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !3858, metadata !DIExpression()), !dbg !3863
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3870
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !3871
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !3872
  store i32 %12, i32* %15, align 8, !dbg !3873
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !3874
  store i32 0, i32* %16, align 4, !dbg !3875
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, !dbg !3876
  store i32 0, i32* %17, align 8, !dbg !3877
  %18 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 4, !dbg !3878
  store i32 0, i32* %18, align 4, !dbg !3879
  %19 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 5, !dbg !3880
  store i32 0, i32* %19, align 8, !dbg !3881
  %20 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #24, !dbg !3882
  call void @llvm.dbg.value(metadata i32 %20, metadata !3859, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3863
  %21 = shl i32 %20, 2, !dbg !3883
  %22 = add i32 %21, 32, !dbg !3884
  %23 = tail call fastcc i32 @chunksz(i32 noundef %22) #24, !dbg !3885
  call void @llvm.dbg.value(metadata i32 %23, metadata !3860, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i32 0, metadata !3861, metadata !DIExpression()), !dbg !3886
  %24 = icmp slt i32 %20, 0, !dbg !3887
  br i1 %24, label %25, label %27, !dbg !3889

25:                                               ; preds = %27, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %23) #24, !dbg !3890
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #24, !dbg !3891
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #24, !dbg !3892
  %26 = sub i32 %12, %23, !dbg !3893
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %26) #24, !dbg !3894
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %23) #24, !dbg !3895
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #24, !dbg !3896
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %26) #24, !dbg !3897
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #24, !dbg !3898
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %23) #24, !dbg !3899
  ret void, !dbg !3900

27:                                               ; preds = %3, %27
  %28 = phi i32 [ %30, %27 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !3861, metadata !DIExpression()), !dbg !3886
  %29 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 6, i32 %28, i32 0, !dbg !3901
  store i32 0, i32* %29, align 4, !dbg !3903
  %30 = add nuw i32 %28, 1, !dbg !3904
  call void @llvm.dbg.value(metadata i32 %30, metadata !3861, metadata !DIExpression()), !dbg !3886
  %31 = icmp eq i32 %28, %20, !dbg !3887
  br i1 %31, label %25, label %27, !dbg !3889, !llvm.loop !3905
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local zeroext i1 @sys_heap_validate(%struct.sys_heap* noundef %0) local_unnamed_addr #12 !dbg !3907 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sys_memory_stats, align 4
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3931, metadata !DIExpression()), !dbg !3957
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3958
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3958
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3932, metadata !DIExpression()), !dbg !3957
  %7 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef 0) #24, !dbg !3959
  call void @llvm.dbg.value(metadata i32 %7, metadata !3933, metadata !DIExpression()), !dbg !3957
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %7, metadata !3933, metadata !DIExpression()), !dbg !3957
  %10 = icmp ult i32 %7, %9, !dbg !3961
  br i1 %10, label %11, label %17, !dbg !3963

11:                                               ; preds = %1, %14
  %12 = phi i32 [ %15, %14 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !3933, metadata !DIExpression()), !dbg !3957
  %13 = tail call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef nonnull %6, i32 noundef %12) #24, !dbg !3964
  br i1 %13, label %14, label %138, !dbg !3967

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %12) #24, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %15, metadata !3933, metadata !DIExpression()), !dbg !3957
  %16 = icmp ult i32 %15, %9, !dbg !3961
  br i1 %16, label %11, label %17, !dbg !3963, !llvm.loop !3969

17:                                               ; preds = %14, %1
  %18 = phi i32 [ %7, %1 ], [ %15, %14 ], !dbg !3971
  %19 = icmp eq i32 %18, %9, !dbg !3972
  br i1 %19, label %20, label %138, !dbg !3974

20:                                               ; preds = %17
  %21 = bitcast i32* %2 to i8*, !dbg !3975
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #22, !dbg !3975
  %22 = bitcast i32* %3 to i8*, !dbg !3975
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #22, !dbg !3975
  %23 = bitcast %struct.sys_memory_stats* %4 to i8*, !dbg !3976
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #22, !dbg !3976
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %4, metadata !3936, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32* %2, metadata !3934, metadata !DIExpression(DW_OP_deref)), !dbg !3957
  call void @llvm.dbg.value(metadata i32* %3, metadata !3935, metadata !DIExpression(DW_OP_deref)), !dbg !3957
  call fastcc void @get_alloc_info(%struct.z_heap* noundef nonnull %6, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !3978
  %24 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef %0, %struct.sys_memory_stats* noundef nonnull %4) #24, !dbg !3979
  %25 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 1, !dbg !3980
  %26 = load i32, i32* %25, align 4, !dbg !3980
  %27 = load i32, i32* %2, align 4, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %27, metadata !3934, metadata !DIExpression()), !dbg !3957
  %28 = icmp eq i32 %26, %27, !dbg !3983
  br i1 %28, label %29, label %136, !dbg !3984

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 0, !dbg !3985
  %31 = load i32, i32* %30, align 4, !dbg !3985
  %32 = load i32, i32* %3, align 4, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %32, metadata !3935, metadata !DIExpression()), !dbg !3957
  %33 = icmp eq i32 %31, %32, !dbg !3987
  br i1 %33, label %34, label %136, !dbg !3988

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !3942, metadata !DIExpression()), !dbg !3989
  %35 = load i32, i32* %8, align 4, !dbg !3990
  %36 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %35) #24, !dbg !3991
  %37 = icmp slt i32 %36, 0, !dbg !3992
  br i1 %37, label %84, label %38, !dbg !3993

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 2
  br label %40, !dbg !3993

40:                                               ; preds = %38, %79
  %41 = phi i32 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !3942, metadata !DIExpression()), !dbg !3989
  %42 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %41, i32 0, !dbg !3994
  %43 = load i32, i32* %42, align 4, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %43, metadata !3944, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.value(metadata i32 0, metadata !3947, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.value(metadata i32 %43, metadata !3933, metadata !DIExpression()), !dbg !3957
  %44 = icmp eq i32 %43, 0, !dbg !3996
  br i1 %44, label %45, label %50, !dbg !3999

45:                                               ; preds = %40
  %46 = load i32, i32* %39, align 4, !dbg !4000
  %47 = shl nuw i32 1, %41, !dbg !4001
  %48 = and i32 %46, %47, !dbg !4002
  %49 = icmp eq i32 %48, 0, !dbg !4003
  call void @llvm.dbg.value(metadata i1 %71, metadata !3948, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3995
  call void @llvm.dbg.value(metadata i1 %72, metadata !3949, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3995
  br i1 %49, label %76, label %136, !dbg !4004

50:                                               ; preds = %40, %63
  %51 = phi i32 [ %65, %63 ], [ %43, %40 ]
  %52 = phi i32 [ %64, %63 ], [ 0, %40 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !3933, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32 %52, metadata !3947, metadata !DIExpression()), !dbg !3995
  %53 = icmp eq i32 %52, 0, !dbg !4005
  %54 = icmp ne i32 %51, %43, !dbg !4006
  %55 = select i1 %53, i1 true, i1 %54, !dbg !4006
  br i1 %55, label %61, label %56, !dbg !4007

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4, !dbg !4000
  %58 = shl nuw i32 1, %41, !dbg !4001
  %59 = and i32 %57, %58, !dbg !4002
  %60 = icmp eq i32 %59, 0, !dbg !4003
  call void @llvm.dbg.value(metadata i1 %71, metadata !3948, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3995
  call void @llvm.dbg.value(metadata i1 %72, metadata !3949, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3995
  br i1 %60, label %136, label %74, !dbg !4004

61:                                               ; preds = %50
  %62 = call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %6, i32 noundef %51) #24, !dbg !4008
  br i1 %62, label %63, label %136, !dbg !4011

63:                                               ; preds = %61
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %51, i1 noundef zeroext true) #24, !dbg !4012
  %64 = add i32 %52, 1, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %64, metadata !3947, metadata !DIExpression()), !dbg !3995
  %65 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %51) #24, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %65, metadata !3933, metadata !DIExpression()), !dbg !3957
  %66 = icmp eq i32 %65, 0, !dbg !3996
  br i1 %66, label %67, label %50, !dbg !3999, !llvm.loop !4015

67:                                               ; preds = %63
  %68 = load i32, i32* %39, align 4, !dbg !4000
  %69 = shl nuw i32 1, %41, !dbg !4001
  %70 = and i32 %68, %69, !dbg !4002
  %71 = icmp eq i32 %70, 0, !dbg !4003
  call void @llvm.dbg.value(metadata i1 %71, metadata !3948, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3995
  %72 = icmp ne i32 %64, 0, !dbg !4017
  call void @llvm.dbg.value(metadata i1 %72, metadata !3949, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3995
  %73 = xor i1 %72, %71, !dbg !4018
  br i1 %73, label %74, label %136, !dbg !4004

74:                                               ; preds = %56, %67
  %75 = phi i1 [ %71, %67 ], [ %60, %56 ]
  br i1 %75, label %76, label %79, !dbg !4020

76:                                               ; preds = %45, %74
  %77 = load i32, i32* %42, align 4, !dbg !4022
  %78 = icmp eq i32 %77, 0, !dbg !4023
  br i1 %78, label %79, label %136, !dbg !4024

79:                                               ; preds = %76, %74
  %80 = add nuw nsw i32 %41, 1, !dbg !4025
  call void @llvm.dbg.value(metadata i32 %80, metadata !3942, metadata !DIExpression()), !dbg !3989
  %81 = load i32, i32* %8, align 4, !dbg !3990
  %82 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %81) #24, !dbg !3991
  %83 = icmp slt i32 %41, %82, !dbg !3992
  br i1 %83, label %40, label %84, !dbg !3993, !llvm.loop !4026

84:                                               ; preds = %79, %34
  %85 = phi i32 [ %35, %34 ], [ %81, %79 ], !dbg !4028
  call void @llvm.dbg.value(metadata i32 0, metadata !3950, metadata !DIExpression()), !dbg !3957
  %86 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #24, !dbg !4031
  call void @llvm.dbg.value(metadata i32 %86, metadata !3933, metadata !DIExpression()), !dbg !3957
  %87 = icmp ult i32 %86, %85, !dbg !4032
  br i1 %87, label %88, label %99, !dbg !4033

88:                                               ; preds = %84, %95
  %89 = phi i32 [ %90, %95 ], [ 0, %84 ]
  %90 = phi i32 [ %96, %95 ], [ %86, %84 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !3950, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32 %90, metadata !3933, metadata !DIExpression()), !dbg !3957
  %91 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #24, !dbg !4034
  br i1 %91, label %92, label %136, !dbg !4037

92:                                               ; preds = %88
  %93 = call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #24, !dbg !4038
  %94 = icmp eq i32 %93, %89, !dbg !4040
  br i1 %94, label %95, label %136, !dbg !4041

95:                                               ; preds = %92
  call void @llvm.dbg.value(metadata i32 %90, metadata !3950, metadata !DIExpression()), !dbg !3957
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %90, i1 noundef zeroext false) #24, !dbg !4042
  %96 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %90) #24, !dbg !4043
  call void @llvm.dbg.value(metadata i32 %96, metadata !3933, metadata !DIExpression()), !dbg !3957
  %97 = load i32, i32* %8, align 4, !dbg !4028
  %98 = icmp ult i32 %96, %97, !dbg !4032
  br i1 %98, label %88, label %99, !dbg !4033, !llvm.loop !4044

99:                                               ; preds = %95, %84
  %100 = phi i32 [ %86, %84 ], [ %96, %95 ], !dbg !4046
  %101 = phi i32 [ %85, %84 ], [ %97, %95 ], !dbg !4028
  %102 = icmp eq i32 %100, %101, !dbg !4047
  br i1 %102, label %103, label %136, !dbg !4049

103:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i32 0, metadata !3951, metadata !DIExpression()), !dbg !4050
  %104 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %100) #24, !dbg !4051
  %105 = icmp slt i32 %104, 0, !dbg !4052
  br i1 %105, label %125, label %106, !dbg !4053

106:                                              ; preds = %103, %120
  %107 = phi i32 [ %121, %120 ], [ %100, %103 ]
  %108 = phi i32 [ %122, %120 ], [ 0, %103 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !3951, metadata !DIExpression()), !dbg !4050
  %109 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %108, i32 0, !dbg !4054
  %110 = load i32, i32* %109, align 4, !dbg !4054
  call void @llvm.dbg.value(metadata i32 %110, metadata !3953, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i32 0, metadata !3956, metadata !DIExpression()), !dbg !4055
  %111 = icmp eq i32 %110, 0, !dbg !4056
  br i1 %111, label %120, label %112, !dbg !4058

112:                                              ; preds = %106, %115
  %113 = phi i32 [ %116, %115 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 poison, metadata !3956, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %113, metadata !3933, metadata !DIExpression()), !dbg !3957
  %114 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %6, i32 noundef %113) #24, !dbg !4059
  br i1 %114, label %136, label %115, !dbg !4064

115:                                              ; preds = %112
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %113, i1 noundef zeroext true) #24, !dbg !4065
  call void @llvm.dbg.value(metadata i32 poison, metadata !3956, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4055
  %116 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %113) #24, !dbg !4066
  call void @llvm.dbg.value(metadata i32 %116, metadata !3933, metadata !DIExpression()), !dbg !3957
  %117 = icmp eq i32 %116, %110, !dbg !4067
  br i1 %117, label %118, label %112, !dbg !4068, !llvm.loop !4069

118:                                              ; preds = %115
  %119 = load i32, i32* %8, align 4, !dbg !4071
  br label %120, !dbg !4072

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %107, %106 ], !dbg !4071
  %122 = add nuw nsw i32 %108, 1, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %122, metadata !3951, metadata !DIExpression()), !dbg !4050
  %123 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %121) #24, !dbg !4051
  %124 = icmp slt i32 %108, %123, !dbg !4052
  br i1 %124, label %106, label %125, !dbg !4053, !llvm.loop !4073

125:                                              ; preds = %120, %103
  %126 = phi i32 [ %100, %103 ], [ %121, %120 ], !dbg !4075
  %127 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #24, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %127, metadata !3933, metadata !DIExpression()), !dbg !3957
  %128 = icmp ult i32 %127, %126, !dbg !4079
  br i1 %128, label %129, label %136, !dbg !4080

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %133, %129 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !3933, metadata !DIExpression()), !dbg !3957
  %131 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #24, !dbg !4081
  %132 = xor i1 %131, true, !dbg !4083
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef nonnull %6, i32 noundef %130, i1 noundef zeroext %132) #24, !dbg !4084
  %133 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #24, !dbg !4085
  call void @llvm.dbg.value(metadata i32 %133, metadata !3933, metadata !DIExpression()), !dbg !3957
  %134 = load i32, i32* %8, align 4, !dbg !4075
  %135 = icmp ult i32 %133, %134, !dbg !4079
  br i1 %135, label %129, label %136, !dbg !4080, !llvm.loop !4086

136:                                              ; preds = %76, %67, %45, %56, %61, %88, %92, %112, %129, %125, %99, %20, %29
  %137 = phi i1 [ false, %29 ], [ false, %20 ], [ false, %99 ], [ true, %125 ], [ true, %129 ], [ false, %112 ], [ false, %92 ], [ false, %88 ], [ false, %61 ], [ false, %56 ], [ false, %45 ], [ false, %67 ], [ false, %76 ], !dbg !3957
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #22, !dbg !4088
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #22, !dbg !4088
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #22, !dbg !4088
  br label %138

138:                                              ; preds = %11, %17, %136
  %139 = phi i1 [ %137, %136 ], [ false, %17 ], [ false, %11 ], !dbg !3957
  ret i1 %139, !dbg !4088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4089 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4093, metadata !DIExpression()), !dbg !4095
  call void @llvm.dbg.value(metadata i32 %1, metadata !4094, metadata !DIExpression()), !dbg !4095
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4096
  %4 = add i32 %3, %1, !dbg !4097
  ret i32 %4, !dbg !4098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4099 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4103, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.value(metadata i32 %1, metadata !4104, metadata !DIExpression()), !dbg !4105
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4106
  %4 = icmp eq i32 %3, 0, !dbg !4106
  br i1 %4, label %33, label %5, !dbg !4109

5:                                                ; preds = %2
  %6 = add i32 %3, %1, !dbg !4110
  %7 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4110
  %8 = load i32, i32* %7, align 4, !dbg !4110
  %9 = icmp ugt i32 %6, %8, !dbg !4110
  br i1 %9, label %33, label %10, !dbg !4113

10:                                               ; preds = %5
  %11 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #24, !dbg !4114
  br i1 %11, label %12, label %33, !dbg !4117

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #24, !dbg !4118
  %14 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #24, !dbg !4118
  %15 = icmp eq i32 %14, %1, !dbg !4118
  br i1 %15, label %16, label %33, !dbg !4121

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #24, !dbg !4122
  %18 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #24, !dbg !4122
  %19 = icmp eq i32 %18, %1, !dbg !4122
  br i1 %19, label %20, label %33, !dbg !4125

20:                                               ; preds = %16
  %21 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #24, !dbg !4126
  br i1 %21, label %32, label %22, !dbg !4128

22:                                               ; preds = %20
  %23 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #24, !dbg !4129
  br i1 %23, label %24, label %33, !dbg !4133

24:                                               ; preds = %22
  %25 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #24, !dbg !4134
  br i1 %25, label %26, label %33, !dbg !4137

26:                                               ; preds = %24
  %27 = tail call fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #24, !dbg !4138, !range !3345
  %28 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %27) #24, !dbg !4138
  br i1 %28, label %29, label %33, !dbg !4143

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #24, !dbg !4144, !range !3345
  %31 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %30) #24, !dbg !4144
  br i1 %31, label %32, label %33, !dbg !4147

32:                                               ; preds = %20, %29
  br label %33, !dbg !4148

33:                                               ; preds = %29, %26, %24, %22, %16, %12, %10, %5, %2, %32
  %34 = phi i1 [ true, %32 ], [ false, %2 ], [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %29 ], !dbg !4105
  ret i1 %34, !dbg !4149
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* nocapture noundef %1, i32* nocapture noundef %2) unnamed_addr #13 !dbg !4150 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4154, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.value(metadata i32* %1, metadata !4155, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.value(metadata i32* %2, metadata !4156, metadata !DIExpression()), !dbg !4158
  store i32 0, i32* %1, align 4, !dbg !4159
  store i32 0, i32* %2, align 4, !dbg !4160
  %4 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #24, !dbg !4161
  call void @llvm.dbg.value(metadata i32 %4, metadata !4157, metadata !DIExpression()), !dbg !4158
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !4157, metadata !DIExpression()), !dbg !4158
  %6 = load i32, i32* %5, align 4, !dbg !4163
  %7 = icmp ult i32 %4, %6, !dbg !4165
  br i1 %7, label %8, label %19, !dbg !4166

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %16, %8 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4157, metadata !DIExpression()), !dbg !4158
  %10 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #24, !dbg !4167
  %11 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #24, !dbg !4170, !range !3146
  %12 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef nonnull %0, i32 noundef %11) #24, !dbg !4170
  %13 = select i1 %10, i32* %1, i32* %2, !dbg !4170
  %14 = load i32, i32* %13, align 4, !dbg !4170
  %15 = add i32 %14, %12, !dbg !4170
  store i32 %15, i32* %13, align 4, !dbg !4170
  %16 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %9) #24, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %16, metadata !4157, metadata !DIExpression()), !dbg !4158
  %17 = load i32, i32* %5, align 4, !dbg !4163
  %18 = icmp ult i32 %16, %17, !dbg !4165
  br i1 %18, label %8, label %19, !dbg !4166, !llvm.loop !4172

19:                                               ; preds = %8, %3
  ret void, !dbg !4174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef readonly %0, %struct.sys_memory_stats* noundef writeonly %1) local_unnamed_addr #7 !dbg !4175 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4180, metadata !DIExpression()), !dbg !4182
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !4181, metadata !DIExpression()), !dbg !4182
  %3 = icmp eq %struct.sys_heap* %0, null, !dbg !4183
  %4 = icmp eq %struct.sys_memory_stats* %1, null
  %5 = or i1 %3, %4, !dbg !4185
  br i1 %5, label %20, label %6, !dbg !4185

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4186
  %8 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4186
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %8, i32 0, i32 3, !dbg !4187
  %10 = load i32, i32* %9, align 4, !dbg !4187
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !4188
  store i32 %10, i32* %11, align 4, !dbg !4189
  %12 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4190
  %13 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %12, i32 0, i32 4, !dbg !4191
  %14 = load i32, i32* %13, align 4, !dbg !4191
  %15 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !4192
  store i32 %14, i32* %15, align 4, !dbg !4193
  %16 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4194
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %16, i32 0, i32 5, !dbg !4195
  %18 = load i32, i32* %17, align 4, !dbg !4195
  %19 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !4196
  store i32 %18, i32* %19, align 4, !dbg !4197
  br label %20, !dbg !4198

20:                                               ; preds = %2, %6
  %21 = phi i32 [ 0, %6 ], [ -22, %2 ], !dbg !4182
  ret i32 %21, !dbg !4199
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx.14(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4200 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4204, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.value(metadata i32 %1, metadata !4205, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.value(metadata i32 %1, metadata !4206, metadata !DIExpression()), !dbg !4207
  %3 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4208, !range !3315
  %4 = sub nsw i32 31, %3, !dbg !4209
  ret i32 %4, !dbg !4210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used.15(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !4211 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4215, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata i32 %1, metadata !4216, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata i1 %2, metadata !4217, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4220
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #24, !dbg !4221
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4218, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4219, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4220
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4222
  %6 = bitcast i8* %5 to i16*, !dbg !4222
  %7 = load i16, i16* %6, align 2, !dbg !4222
  %8 = and i16 %7, -2, !dbg !4226
  %9 = zext i1 %2 to i16, !dbg !4226
  %10 = or i16 %8, %9, !dbg !4226
  store i16 %10, i16* %6, align 2, !dbg !4222
  ret void, !dbg !4227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4228 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4230, metadata !DIExpression()), !dbg !4232
  call void @llvm.dbg.value(metadata i32 %1, metadata !4231, metadata !DIExpression()), !dbg !4232
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #24, !dbg !4233
  ret i32 %3, !dbg !4234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4235 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4237, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata i32 %1, metadata !4238, metadata !DIExpression()), !dbg !4239
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #24, !dbg !4240
  %4 = and i32 %3, 1, !dbg !4241
  %5 = icmp ne i32 %4, 0, !dbg !4240
  ret i1 %5, !dbg !4242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4243 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4245, metadata !DIExpression()), !dbg !4247
  call void @llvm.dbg.value(metadata i32 %1, metadata !4246, metadata !DIExpression()), !dbg !4247
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #24, !dbg !4248
  %4 = sub i32 %1, %3, !dbg !4249
  ret i32 %4, !dbg !4250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field.19(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4251 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4255, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata i32 %1, metadata !4256, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata i32 %2, metadata !4257, metadata !DIExpression()), !dbg !4260
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #24, !dbg !4261
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4258, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4259, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4260
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4259, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4260
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4262
  call void @llvm.dbg.value(metadata i8* %5, metadata !4259, metadata !DIExpression()), !dbg !4260
  %6 = bitcast i8* %5 to i16*, !dbg !4263
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4266
  %8 = load i16, i16* %7, align 2, !dbg !4266
  %9 = zext i16 %8 to i32, !dbg !4266
  ret i32 %9, !dbg !4267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4268 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4272, metadata !DIExpression()), !dbg !4273
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4274
  ret %struct.chunk_unit_t* %2, !dbg !4275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4276 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4280, metadata !DIExpression()), !dbg !4282
  call void @llvm.dbg.value(metadata i32 %1, metadata !4281, metadata !DIExpression()), !dbg !4282
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #24, !dbg !4283
  %4 = lshr i32 %3, 1, !dbg !4284
  ret i32 %4, !dbg !4285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4286 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4290, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata i32 %1, metadata !4291, metadata !DIExpression()), !dbg !4292
  %3 = shl i32 %1, 3, !dbg !4293
  %4 = add i32 %3, -4, !dbg !4294
  ret i32 %4, !dbg !4295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4296 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4298, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata i32 %1, metadata !4299, metadata !DIExpression()), !dbg !4300
  %3 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #24, !dbg !4301
  %4 = icmp ugt i32 %3, %1, !dbg !4301
  br i1 %4, label %12, label %5, !dbg !4304

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4305
  %7 = load i32, i32* %6, align 4, !dbg !4305
  %8 = icmp ugt i32 %7, %1, !dbg !4305
  br i1 %8, label %9, label %12, !dbg !4308

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #24, !dbg !4309
  %11 = icmp ult i32 %10, %7, !dbg !4309
  br label %12, !dbg !4300

12:                                               ; preds = %9, %5, %2
  %13 = phi i1 [ false, %2 ], [ false, %5 ], [ %11, %9 ], !dbg !4300
  ret i1 %13, !dbg !4312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4313 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4315, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.value(metadata i32 %1, metadata !4316, metadata !DIExpression()), !dbg !4317
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #24, !dbg !4318
  ret i32 %3, !dbg !4319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_stress(i8* (i8*, i32)* noundef %0, void (i8*, i8*)* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i8* noundef %5, i32 noundef %6, i32 noundef %7, %struct.z_heap_stress_result* nocapture noundef %8) local_unnamed_addr #1 !dbg !4320 {
  %10 = alloca %struct.z_heap_stress_rec, align 4
  call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, metadata !4337, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %1, metadata !4338, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i8* %2, metadata !4339, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i32 %3, metadata !4340, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i32 %4, metadata !4341, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i8* %5, metadata !4342, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i32 %6, metadata !4343, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i32 %7, metadata !4344, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_result* %8, metadata !4345, metadata !DIExpression()), !dbg !4375
  %11 = bitcast %struct.z_heap_stress_rec* %10 to i8*, !dbg !4376
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #22, !dbg !4376
  call void @llvm.dbg.declare(metadata %struct.z_heap_stress_rec* %10, metadata !4346, metadata !DIExpression()), !dbg !4377
  %12 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 0, !dbg !4378
  store i8* (i8*, i32)* %0, i8* (i8*, i32)** %12, align 4, !dbg !4378
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 1, !dbg !4378
  store void (i8*, i8*)* %1, void (i8*, i8*)** %13, align 4, !dbg !4378
  %14 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 2, !dbg !4378
  store i8* %2, i8** %14, align 4, !dbg !4378
  %15 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 3, !dbg !4378
  store i32 %3, i32* %15, align 4, !dbg !4378
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 4, !dbg !4378
  %17 = bitcast %struct.z_heap_stress_block** %16 to i8**, !dbg !4378
  store i8* %5, i8** %17, align 4, !dbg !4378
  %18 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 5, !dbg !4378
  %19 = lshr i32 %6, 3, !dbg !4379
  store i32 %19, i32* %18, align 4, !dbg !4378
  %20 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 6, !dbg !4378
  store i32 0, i32* %20, align 4, !dbg !4378
  %21 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 7, !dbg !4378
  store i32 0, i32* %21, align 4, !dbg !4378
  %22 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 8, !dbg !4378
  store i32 %7, i32* %22, align 4, !dbg !4378
  %23 = bitcast %struct.z_heap_stress_result* %8 to i8*, !dbg !4380
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i32 24, i1 false), !dbg !4380
  call void @llvm.dbg.value(metadata i32 0, metadata !4363, metadata !DIExpression()), !dbg !4381
  %24 = icmp eq i32 %4, 0, !dbg !4382
  %25 = bitcast i8* %5 to %struct.z_heap_stress_block*, !dbg !4383
  br i1 %24, label %31, label %26, !dbg !4383

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 2
  %28 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 1
  %30 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 3
  br label %32, !dbg !4383

31:                                               ; preds = %65, %9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #22, !dbg !4384
  ret void, !dbg !4384

32:                                               ; preds = %26, %65
  %33 = phi i32 [ 0, %26 ], [ %66, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %67, %65 ]
  %35 = phi i32 [ 0, %26 ], [ %71, %65 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !4363, metadata !DIExpression()), !dbg !4381
  %36 = call fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #24, !dbg !4385
  br i1 %36, label %37, label %50, !dbg !4386

37:                                               ; preds = %32
  %38 = tail call fastcc i32 @rand_alloc_size() #24, !dbg !4387
  call void @llvm.dbg.value(metadata i32 %38, metadata !4365, metadata !DIExpression()), !dbg !4388
  %39 = tail call i8* %0(i8* noundef %2, i32 noundef %38) #23, !dbg !4389
  call void @llvm.dbg.value(metadata i8* %39, metadata !4370, metadata !DIExpression()), !dbg !4388
  %40 = load i32, i32* %28, align 8, !dbg !4390
  %41 = add i32 %40, 1, !dbg !4390
  store i32 %41, i32* %28, align 8, !dbg !4390
  %42 = icmp eq i8* %39, null, !dbg !4391
  br i1 %42, label %65, label %43, !dbg !4393

43:                                               ; preds = %37
  %44 = load i32, i32* %29, align 4, !dbg !4394
  %45 = add i32 %44, 1, !dbg !4394
  store i32 %45, i32* %29, align 4, !dbg !4394
  %46 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 0, !dbg !4396
  store i8* %39, i8** %46, align 4, !dbg !4397
  %47 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 1, !dbg !4398
  store i32 %38, i32* %47, align 4, !dbg !4399
  %48 = add i32 %34, 1, !dbg !4400
  store i32 %48, i32* %20, align 4, !dbg !4400
  %49 = add i32 %33, %38, !dbg !4401
  store i32 %49, i32* %21, align 4, !dbg !4401
  br label %65, !dbg !4402

50:                                               ; preds = %32
  %51 = call fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #24, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %51, metadata !4371, metadata !DIExpression()), !dbg !4404
  %52 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 0, !dbg !4405
  %53 = load i8*, i8** %52, align 4, !dbg !4405
  call void @llvm.dbg.value(metadata i8* %53, metadata !4373, metadata !DIExpression()), !dbg !4404
  %54 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 1, !dbg !4406
  %55 = load i32, i32* %54, align 4, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %55, metadata !4374, metadata !DIExpression()), !dbg !4404
  %56 = load i32, i32* %27, align 8, !dbg !4407
  %57 = add i32 %56, 1, !dbg !4407
  store i32 %57, i32* %27, align 8, !dbg !4407
  %58 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, !dbg !4408
  %59 = add i32 %34, -1, !dbg !4409
  %60 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %59, !dbg !4410
  %61 = bitcast %struct.z_heap_stress_block* %60 to i64*, !dbg !4410
  %62 = bitcast %struct.z_heap_stress_block* %58 to i64*, !dbg !4410
  %63 = load i64, i64* %61, align 4, !dbg !4410
  store i64 %63, i64* %62, align 4, !dbg !4410
  store i32 %59, i32* %20, align 4, !dbg !4411
  %64 = sub i32 %33, %55, !dbg !4412
  store i32 %64, i32* %21, align 4, !dbg !4412
  tail call void %1(i8* noundef %2, i8* noundef %53) #23, !dbg !4413
  br label %65

65:                                               ; preds = %37, %43, %50
  %66 = phi i32 [ %33, %37 ], [ %49, %43 ], [ %64, %50 ], !dbg !4414
  %67 = phi i32 [ %34, %37 ], [ %48, %43 ], [ %59, %50 ]
  %68 = zext i32 %66 to i64, !dbg !4415
  %69 = load i64, i64* %30, align 8, !dbg !4416
  %70 = add i64 %69, %68, !dbg !4416
  store i64 %70, i64* %30, align 8, !dbg !4416
  %71 = add nuw i32 %35, 1, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %71, metadata !4363, metadata !DIExpression()), !dbg !4381
  %72 = icmp eq i32 %71, %4, !dbg !4382
  br i1 %72, label %31, label %32, !dbg !4383, !llvm.loop !4418
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4420 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4425, metadata !DIExpression()), !dbg !4432
  %2 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4433
  %3 = load i32, i32* %2, align 4, !dbg !4433
  %4 = icmp eq i32 %3, 0, !dbg !4434
  br i1 %4, label %26, label %5, !dbg !4435

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 5, !dbg !4436
  %7 = load i32, i32* %6, align 4, !dbg !4436
  %8 = icmp ult i32 %3, %7, !dbg !4437
  br i1 %8, label %9, label %26, !dbg !4438

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 7, !dbg !4439
  %11 = load i32, i32* %10, align 4, !dbg !4439
  %12 = mul i32 %11, 100, !dbg !4440
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 3, !dbg !4441
  %14 = load i32, i32* %13, align 4, !dbg !4441
  %15 = udiv i32 %12, %14, !dbg !4442
  call void @llvm.dbg.value(metadata i32 %15, metadata !4426, metadata !DIExpression()), !dbg !4443
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 8, !dbg !4444
  %17 = load i32, i32* %16, align 4, !dbg !4444
  call void @llvm.dbg.value(metadata i32 undef, metadata !4430, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i32 -1, metadata !4431, metadata !DIExpression()), !dbg !4443
  %18 = icmp ult i32 %15, %17, !dbg !4445
  br i1 %18, label %19, label %22, !dbg !4447

19:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %17, metadata !4430, metadata !DIExpression()), !dbg !4443
  %20 = udiv i32 -2147483648, %17, !dbg !4448
  %21 = mul i32 %20, %15, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %21, metadata !4431, metadata !DIExpression()), !dbg !4443
  br label %22, !dbg !4451

22:                                               ; preds = %19, %9
  %23 = phi i32 [ %21, %19 ], [ -1, %9 ], !dbg !4443
  call void @llvm.dbg.value(metadata i32 %23, metadata !4431, metadata !DIExpression()), !dbg !4443
  %24 = tail call fastcc i32 @rand32() #24, !dbg !4452
  %25 = icmp ugt i32 %24, %23, !dbg !4453
  br label %26

26:                                               ; preds = %5, %1, %22
  %27 = phi i1 [ %25, %22 ], [ true, %1 ], [ false, %5 ], !dbg !4454
  ret i1 %27, !dbg !4455
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc i32 @rand_alloc_size() unnamed_addr #10 !dbg !4456 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* undef, metadata !4460, metadata !DIExpression()), !dbg !4462
  %1 = tail call fastcc i32 @rand32() #24, !dbg !4463
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4464, !range !3315
  call void @llvm.dbg.value(metadata i32 %2, metadata !4461, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !4462
  %3 = tail call fastcc i32 @rand32() #24, !dbg !4465
  %4 = shl i32 16, %2, !dbg !4466
  %5 = add i32 %4, -1, !dbg !4466
  %6 = and i32 %5, %3, !dbg !4467
  ret i32 %6, !dbg !4468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4469 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4471, metadata !DIExpression()), !dbg !4472
  %2 = tail call fastcc i32 @rand32() #24, !dbg !4473
  %3 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4474
  %4 = load i32, i32* %3, align 4, !dbg !4474
  %5 = urem i32 %2, %4, !dbg !4475
  ret i32 %5, !dbg !4476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand32() unnamed_addr #7 !dbg !133 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !4477
  %2 = mul i64 %1, 2862933555777941757, !dbg !4478
  %3 = add i64 %2, 3037000493, !dbg !4479
  store i64 %3, i64* @rand32.state, align 8, !dbg !4480
  %4 = lshr i64 %3, 32, !dbg !4481
  %5 = trunc i64 %4 to i32, !dbg !4482
  ret i32 %5, !dbg !4483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @heap_print_info(%struct.z_heap* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4484 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4488, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i1 %1, metadata !4489, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4509
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4510
  %6 = load i32, i32* %5, align 4, !dbg !4510
  %7 = tail call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef %0, i32 noundef %6) #24, !dbg !4511
  %8 = add i32 %7, 1, !dbg !4512
  call void @llvm.dbg.value(metadata i32 %8, metadata !4491, metadata !DIExpression()), !dbg !4509
  %9 = bitcast i32* %3 to i8*, !dbg !4513
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !4513
  %10 = bitcast i32* %4 to i8*, !dbg !4513
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !4513
  %11 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #24, !dbg !4514
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i32 0, i32 0), %struct.chunk_unit_t* noundef %11, i32 noundef %6, i32 noundef %8) #23, !dbg !4515
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([187 x i8], [187 x i8]* @.str.1.25, i32 0, i32 0)) #23, !dbg !4516
  call void @llvm.dbg.value(metadata i32 0, metadata !4490, metadata !DIExpression()), !dbg !4509
  %12 = icmp slt i32 %7, 0, !dbg !4517
  br i1 %12, label %34, label %13, !dbg !4518

13:                                               ; preds = %2, %31
  %14 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4490, metadata !DIExpression()), !dbg !4509
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %14, i32 0, !dbg !4519
  %16 = load i32, i32* %15, align 4, !dbg !4519
  call void @llvm.dbg.value(metadata i32 %16, metadata !4496, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i32 0, metadata !4500, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i32 0, metadata !4501, metadata !DIExpression()), !dbg !4520
  %17 = icmp eq i32 %16, 0, !dbg !4521
  br i1 %17, label %31, label %18, !dbg !4522

18:                                               ; preds = %13, %18
  %19 = phi i32 [ %25, %18 ], [ 0, %13 ], !dbg !4520
  %20 = phi i32 [ %22, %18 ], [ 0, %13 ], !dbg !4520
  %21 = phi i32 [ %26, %18 ], [ %16, %13 ], !dbg !4523
  call void @llvm.dbg.value(metadata i32 %21, metadata !4502, metadata !DIExpression()), !dbg !4523
  call void @llvm.dbg.value(metadata i32 %20, metadata !4501, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i32 %19, metadata !4500, metadata !DIExpression()), !dbg !4520
  %22 = add nuw nsw i32 %20, 1, !dbg !4524
  call void @llvm.dbg.value(metadata i32 %22, metadata !4501, metadata !DIExpression()), !dbg !4520
  %23 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %21) #24, !dbg !4526
  %24 = icmp ugt i32 %19, %23, !dbg !4526
  %25 = select i1 %24, i32 %19, i32 %23, !dbg !4526
  call void @llvm.dbg.value(metadata i32 %25, metadata !4500, metadata !DIExpression()), !dbg !4520
  %26 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %0, i32 noundef %21) #24, !dbg !4527
  call void @llvm.dbg.value(metadata i32 %26, metadata !4502, metadata !DIExpression()), !dbg !4523
  %27 = icmp eq i32 %26, %16, !dbg !4528
  br i1 %27, label %28, label %18, !dbg !4529, !llvm.loop !4530

28:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %22, metadata !4501, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i32 %25, metadata !4500, metadata !DIExpression()), !dbg !4520
  %29 = shl nuw i32 1, %14, !dbg !4533
  %30 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef %0, i32 noundef %25) #24, !dbg !4536, !range !3567
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 noundef %14, i32 noundef %29, i32 noundef %22, i32 noundef %25, i32 noundef %30) #23, !dbg !4537
  br label %31, !dbg !4538

31:                                               ; preds = %13, %28
  %32 = add nuw i32 %14, 1, !dbg !4539
  call void @llvm.dbg.value(metadata i32 %32, metadata !4490, metadata !DIExpression()), !dbg !4509
  %33 = icmp eq i32 %14, %7, !dbg !4517
  br i1 %33, label %34, label %13, !dbg !4518, !llvm.loop !4540

34:                                               ; preds = %31, %2
  br i1 %1, label %35, label %47, !dbg !4542

35:                                               ; preds = %34
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #23, !dbg !4543
  call void @llvm.dbg.value(metadata i32 0, metadata !4505, metadata !DIExpression()), !dbg !4544
  br label %36, !dbg !4545

36:                                               ; preds = %45, %35
  %37 = phi i32 [ 0, %35 ], [ %46, %45 ], !dbg !4544
  call void @llvm.dbg.value(metadata i32 %37, metadata !4505, metadata !DIExpression()), !dbg !4544
  %38 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %37) #24, !dbg !4546
  %39 = select i1 %38, i32 42, i32 45, !dbg !4546
  %40 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %37) #24, !dbg !4549
  %41 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %37) #24, !dbg !4550
  %42 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %37) #24, !dbg !4551
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i32 noundef %37, i32 noundef %39, i32 noundef %40, i32 noundef %41, i32 noundef %42) #23, !dbg !4552
  %43 = load i32, i32* %5, align 4, !dbg !4553
  %44 = icmp eq i32 %37, %43, !dbg !4555
  br i1 %44, label %47, label %45, !dbg !4556

45:                                               ; preds = %36
  %46 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %37) #24, !dbg !4557
  call void @llvm.dbg.value(metadata i32 %46, metadata !4505, metadata !DIExpression()), !dbg !4544
  br label %36, !dbg !4558, !llvm.loop !4559

47:                                               ; preds = %36, %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !4492, metadata !DIExpression(DW_OP_deref)), !dbg !4509
  call void @llvm.dbg.value(metadata i32* %4, metadata !4493, metadata !DIExpression(DW_OP_deref)), !dbg !4509
  call fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* noundef nonnull %4, i32* noundef nonnull %3) #24, !dbg !4562
  %48 = load i32, i32* %5, align 4, !dbg !4563
  %49 = shl i32 %48, 3, !dbg !4564
  %50 = or i32 %49, 4, !dbg !4565
  call void @llvm.dbg.value(metadata i32 %50, metadata !4494, metadata !DIExpression()), !dbg !4509
  %51 = load i32, i32* %3, align 4, !dbg !4566
  call void @llvm.dbg.value(metadata i32 %51, metadata !4492, metadata !DIExpression()), !dbg !4509
  %52 = load i32, i32* %4, align 4, !dbg !4567
  call void @llvm.dbg.value(metadata i32 %52, metadata !4493, metadata !DIExpression()), !dbg !4509
  %53 = add i32 %52, %51, !dbg !4568
  %54 = sub i32 %50, %53, !dbg !4568
  call void @llvm.dbg.value(metadata i32 %54, metadata !4495, metadata !DIExpression()), !dbg !4509
  %55 = mul i32 %54, 1000, !dbg !4569
  %56 = lshr exact i32 %50, 1, !dbg !4570
  %57 = add i32 %55, %56, !dbg !4571
  %58 = udiv i32 %57, %50, !dbg !4572
  %59 = freeze i32 %58
  %60 = udiv i32 %59, 10, !dbg !4573
  %61 = mul i32 %60, 10
  %62 = sub i32 %59, %61
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i32 0, i32 0), i32 noundef %51, i32 noundef %52, i32 noundef %54, i32 noundef %60, i32 noundef %62) #23, !dbg !4574
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !4575
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !4575
  ret void, !dbg !4575
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_print_info(%struct.sys_heap* nocapture noundef readonly %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4576 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4580, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i1 %1, metadata !4581, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4582
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4583
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4583
  tail call void @heap_print_info(%struct.z_heap* noundef %4, i1 noundef zeroext %1) #24, !dbg !4584
  ret void, !dbg !4585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_reset_max(%struct.sys_heap* noundef readonly %0) local_unnamed_addr #7 !dbg !4586 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4590, metadata !DIExpression()), !dbg !4591
  %2 = icmp eq %struct.sys_heap* %0, null, !dbg !4592
  br i1 %2, label %9, label %3, !dbg !4594

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4595
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4595
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 4, !dbg !4596
  %7 = load i32, i32* %6, align 4, !dbg !4596
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 5, !dbg !4597
  store i32 %7, i32* %8, align 4, !dbg !4598
  br label %9, !dbg !4599

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -22, %1 ], !dbg !4591
  ret i32 %10, !dbg !4600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4601 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4614, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4611, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i8* %1, metadata !4612, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i8* %2, metadata !4613, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %4, metadata !4615, metadata !DIExpression()), !dbg !4742
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4743
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #22, !dbg !4743
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4616, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i32 0, metadata !4620, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i1 undef, metadata !4622, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4742
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4745

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4745

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4746
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4614, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i8* %30, metadata !4613, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %29, metadata !4620, metadata !DIExpression()), !dbg !4742
  %31 = load i8, i8* %30, align 1, !dbg !4747
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4745

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4747
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4748
  call void @llvm.dbg.value(metadata i8* %34, metadata !4613, metadata !DIExpression()), !dbg !4742
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #23, !dbg !4748
  call void @llvm.dbg.value(metadata i32 %35, metadata !4624, metadata !DIExpression()), !dbg !4749
  %36 = icmp slt i32 %35, 0, !dbg !4750
  %37 = add i32 %29, 1, !dbg !4748
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  br i1 %36, label %365, label %28, !llvm.loop !4752

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #22, !dbg !4754
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4629, metadata !DIExpression()), !dbg !4755
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4755
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4674, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4677, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8* %30, metadata !4680, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 -1, metadata !4681, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 -1, metadata !4682, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8* null, metadata !4683, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8* %14, metadata !4684, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8 0, metadata !4685, metadata !DIExpression()), !dbg !4756
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4757
  call void @llvm.dbg.value(metadata i8* %39, metadata !4613, metadata !DIExpression()), !dbg !4742
  %40 = load i24, i24* %15, align 8, !dbg !4758
  %41 = and i24 %40, 256, !dbg !4758
  %42 = icmp eq i24 %41, 0, !dbg !4758
  br i1 %42, label %51, label %43, !dbg !4760

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4761
  call void @llvm.dbg.value(metadata i8* %44, metadata !4614, metadata !DIExpression()), !dbg !4742
  %45 = bitcast i8* %27 to i32*, !dbg !4761
  %46 = load i32, i32* %45, align 4, !dbg !4761
  call void @llvm.dbg.value(metadata i32 %46, metadata !4681, metadata !DIExpression()), !dbg !4756
  %47 = icmp slt i32 %46, 0, !dbg !4763
  br i1 %47, label %48, label %56, !dbg !4765

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4766
  store i24 %49, i24* %15, align 8, !dbg !4766
  %50 = sub nsw i32 0, %46, !dbg !4768
  call void @llvm.dbg.value(metadata i32 %50, metadata !4681, metadata !DIExpression()), !dbg !4756
  br label %56, !dbg !4769

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4770
  %53 = icmp eq i24 %52, 0, !dbg !4770
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4772
  br label %56, !dbg !4772

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4773
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4756
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4614, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %58, metadata !4681, metadata !DIExpression()), !dbg !4756
  %60 = and i24 %57, 1024, !dbg !4773
  %61 = icmp eq i24 %60, 0, !dbg !4773
  br i1 %61, label %69, label %62, !dbg !4774

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4775
  call void @llvm.dbg.value(metadata i8* %63, metadata !4614, metadata !DIExpression()), !dbg !4742
  %64 = bitcast i8* %59 to i32*, !dbg !4775
  %65 = load i32, i32* %64, align 4, !dbg !4775
  call void @llvm.dbg.value(metadata i32 %65, metadata !4686, metadata !DIExpression()), !dbg !4776
  %66 = icmp slt i32 %65, 0, !dbg !4777
  br i1 %66, label %67, label %74, !dbg !4779

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4780
  store i24 %68, i24* %15, align 8, !dbg !4780
  br label %74, !dbg !4782

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4783
  %71 = icmp eq i24 %70, 0, !dbg !4783
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4785
  br label %74, !dbg !4785

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4786
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4756
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4756
  call void @llvm.dbg.value(metadata i8* %77, metadata !4614, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %76, metadata !4682, metadata !DIExpression()), !dbg !4756
  store i32 0, i32* %16, align 4, !dbg !4787
  store i32 0, i32* %17, align 8, !dbg !4788
  %78 = lshr i24 %75, 16, !dbg !4786
  call void @llvm.dbg.value(metadata i24 %78, metadata !4689, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4756
  %79 = lshr i24 %75, 11, !dbg !4789
  %80 = and i24 %79, 15, !dbg !4789
  %81 = zext i24 %80 to i32, !dbg !4789
  call void @llvm.dbg.value(metadata i32 %81, metadata !4690, metadata !DIExpression()), !dbg !4756
  %82 = trunc i24 %78 to i3, !dbg !4790
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4790

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4791

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4794
  call void @llvm.dbg.value(metadata i8* %85, metadata !4614, metadata !DIExpression()), !dbg !4742
  %86 = bitcast i8* %77 to i32*, !dbg !4794
  %87 = load i32, i32* %86, align 4, !dbg !4794
  %88 = sext i32 %87 to i64, !dbg !4794
  store i64 %88, i64* %20, align 8, !dbg !4796
  br label %115, !dbg !4797

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4798
  call void @llvm.dbg.value(metadata i8* %90, metadata !4614, metadata !DIExpression()), !dbg !4742
  %91 = bitcast i8* %77 to i32*, !dbg !4798
  %92 = load i32, i32* %91, align 4, !dbg !4798
  %93 = sext i32 %92 to i64, !dbg !4798
  store i64 %93, i64* %20, align 8, !dbg !4801
  br label %115, !dbg !4802

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4803
  %96 = add i32 %95, 7, !dbg !4803
  %97 = and i32 %96, -8, !dbg !4803
  %98 = inttoptr i32 %97 to i8*, !dbg !4803
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4803
  call void @llvm.dbg.value(metadata i8* %99, metadata !4614, metadata !DIExpression()), !dbg !4742
  %100 = inttoptr i32 %97 to i64*, !dbg !4803
  %101 = load i64, i64* %100, align 8, !dbg !4803
  store i64 %101, i64* %20, align 8, !dbg !4804
  br label %115, !dbg !4805

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4806
  %104 = add i32 %103, 7, !dbg !4806
  %105 = and i32 %104, -8, !dbg !4806
  %106 = inttoptr i32 %105 to i8*, !dbg !4806
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4806
  call void @llvm.dbg.value(metadata i8* %107, metadata !4614, metadata !DIExpression()), !dbg !4742
  %108 = inttoptr i32 %105 to i64*, !dbg !4806
  %109 = load i64, i64* %108, align 8, !dbg !4806
  store i64 %109, i64* %20, align 8, !dbg !4807
  br label %115, !dbg !4808

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4809
  call void @llvm.dbg.value(metadata i8* %111, metadata !4614, metadata !DIExpression()), !dbg !4742
  %112 = bitcast i8* %77 to i32*, !dbg !4809
  %113 = load i32, i32* %112, align 4, !dbg !4809
  %114 = sext i32 %113 to i64, !dbg !4810
  store i64 %114, i64* %20, align 8, !dbg !4811
  br label %115, !dbg !4812

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4813
  call void @llvm.dbg.value(metadata i8* %117, metadata !4614, metadata !DIExpression()), !dbg !4742
  %118 = trunc i24 %79 to i4, !dbg !4814
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4814

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4815
  %121 = ashr exact i64 %120, 56, !dbg !4815
  store i64 %121, i64* %20, align 8, !dbg !4818
  br label %177, !dbg !4819

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4820
  %124 = ashr exact i64 %123, 48, !dbg !4820
  store i64 %124, i64* %20, align 8, !dbg !4823
  br label %177, !dbg !4824

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4825

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %127, metadata !4614, metadata !DIExpression()), !dbg !4742
  %128 = bitcast i8* %77 to i32*, !dbg !4828
  %129 = load i32, i32* %128, align 4, !dbg !4828
  %130 = zext i32 %129 to i64, !dbg !4828
  store i64 %130, i64* %20, align 8, !dbg !4830
  br label %157, !dbg !4831

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4832
  call void @llvm.dbg.value(metadata i8* %132, metadata !4614, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i8* %132, metadata !4614, metadata !DIExpression()), !dbg !4742
  %133 = bitcast i8* %77 to i32*, !dbg !4832
  %134 = load i32, i32* %133, align 4, !dbg !4832
  %135 = zext i32 %134 to i64, !dbg !4832
  store i64 %135, i64* %20, align 8, !dbg !4832
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4834
  %138 = add i32 %137, 7, !dbg !4834
  %139 = and i32 %138, -8, !dbg !4834
  %140 = inttoptr i32 %139 to i8*, !dbg !4834
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %141, metadata !4614, metadata !DIExpression()), !dbg !4742
  %142 = inttoptr i32 %139 to i64*, !dbg !4834
  %143 = load i64, i64* %142, align 8, !dbg !4834
  store i64 %143, i64* %20, align 8, !dbg !4835
  br label %157, !dbg !4836

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4837
  %146 = add i32 %145, 7, !dbg !4837
  %147 = and i32 %146, -8, !dbg !4837
  %148 = inttoptr i32 %147 to i8*, !dbg !4837
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %149, metadata !4614, metadata !DIExpression()), !dbg !4742
  %150 = inttoptr i32 %147 to i64*, !dbg !4837
  %151 = load i64, i64* %150, align 8, !dbg !4837
  store i64 %151, i64* %20, align 8, !dbg !4838
  br label %157, !dbg !4839

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4840
  call void @llvm.dbg.value(metadata i8* %153, metadata !4614, metadata !DIExpression()), !dbg !4742
  %154 = bitcast i8* %77 to i32*, !dbg !4840
  %155 = load i32, i32* %154, align 4, !dbg !4840
  %156 = zext i32 %155 to i64, !dbg !4841
  store i64 %156, i64* %20, align 8, !dbg !4842
  br label %157, !dbg !4843

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4844
  call void @llvm.dbg.value(metadata i8* %159, metadata !4614, metadata !DIExpression()), !dbg !4742
  %160 = trunc i24 %79 to i4, !dbg !4845
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4845

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4846
  store i64 %162, i64* %20, align 8, !dbg !4849
  br label %177, !dbg !4850

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4851
  store i64 %164, i64* %20, align 8, !dbg !4854
  br label %177, !dbg !4855

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4856
  %167 = add i32 %166, 7, !dbg !4856
  %168 = and i32 %167, -8, !dbg !4856
  %169 = inttoptr i32 %168 to i8*, !dbg !4856
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4856
  call void @llvm.dbg.value(metadata i8* %170, metadata !4614, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i8* %170, metadata !4614, metadata !DIExpression()), !dbg !4742
  %171 = inttoptr i32 %168 to double*, !dbg !4856
  %172 = load double, double* %171, align 8, !dbg !4856
  store double %172, double* %19, align 8, !dbg !4856
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4860
  call void @llvm.dbg.value(metadata i8* %174, metadata !4614, metadata !DIExpression()), !dbg !4742
  %175 = bitcast i8* %77 to i8**, !dbg !4860
  %176 = load i8*, i8** %175, align 4, !dbg !4860
  store i8* %176, i8** %18, align 8, !dbg !4863
  br label %177, !dbg !4864

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4756
  call void @llvm.dbg.value(metadata i8* %178, metadata !4614, metadata !DIExpression()), !dbg !4742
  %179 = and i24 %75, 3, !dbg !4865
  %180 = icmp eq i24 %179, 0, !dbg !4865
  br i1 %180, label %185, label %181, !dbg !4865

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %182, metadata !4691, metadata !DIExpression()), !dbg !4867
  %183 = icmp slt i32 %182, 0, !dbg !4868
  %184 = add i32 %182, %29, !dbg !4866
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4870
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4871

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #23, !dbg !4872
  call void @llvm.dbg.value(metadata i32 %188, metadata !4695, metadata !DIExpression()), !dbg !4873
  %189 = icmp slt i32 %188, 0, !dbg !4874
  %190 = add i32 %29, 1, !dbg !4872
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4876
  call void @llvm.dbg.value(metadata i8* %192, metadata !4683, metadata !DIExpression()), !dbg !4756
  %193 = icmp sgt i32 %76, -1, !dbg !4877
  br i1 %193, label %194, label %196, !dbg !4879

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #23, !dbg !4880
  call void @llvm.dbg.value(metadata i32 %195, metadata !4698, metadata !DIExpression()), !dbg !4882
  br label %241, !dbg !4883

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #23, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %197, metadata !4698, metadata !DIExpression()), !dbg !4882
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4683, metadata !DIExpression()), !dbg !4756
  %199 = load i64, i64* %20, align 8, !dbg !4886
  %200 = trunc i64 %199 to i8, !dbg !4887
  store i8 %200, i8* %10, align 1, !dbg !4888
  call void @llvm.dbg.value(metadata i8* %23, metadata !4684, metadata !DIExpression()), !dbg !4756
  br label %245, !dbg !4889

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4890
  %203 = icmp eq i24 %202, 0, !dbg !4890
  %204 = trunc i24 %75 to i8, !dbg !4892
  %205 = shl i8 %204, 1, !dbg !4892
  %206 = and i8 %205, 32, !dbg !4892
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4892
  call void @llvm.dbg.value(metadata i8 %207, metadata !4685, metadata !DIExpression()), !dbg !4756
  %208 = load i64, i64* %20, align 8, !dbg !4893
  call void @llvm.dbg.value(metadata i64 %208, metadata !4621, metadata !DIExpression()), !dbg !4742
  %209 = icmp slt i64 %208, 0, !dbg !4894
  br i1 %209, label %210, label %212, !dbg !4896

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4685, metadata !DIExpression()), !dbg !4756
  %211 = sub nsw i64 0, %208, !dbg !4897
  store i64 %211, i64* %20, align 8, !dbg !4899
  br label %212, !dbg !4900

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4756
  call void @llvm.dbg.value(metadata i8 %213, metadata !4685, metadata !DIExpression()), !dbg !4756
  %214 = load i64, i64* %20, align 8, !dbg !4901
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4902
  call void @llvm.dbg.value(metadata i8* %215, metadata !4683, metadata !DIExpression()), !dbg !4756
  br label %216, !dbg !4903

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4904
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4905
  call void @llvm.dbg.value(metadata i8* %218, metadata !4683, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8 %217, metadata !4685, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.label(metadata !4741), !dbg !4906
  %219 = icmp sgt i32 %76, -1, !dbg !4907
  br i1 %219, label %222, label %220, !dbg !4908

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4909
  br label %245, !dbg !4908

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4911
  %224 = sub i32 %22, %223, !dbg !4911
  call void @llvm.dbg.value(metadata i32 %224, metadata !4700, metadata !DIExpression()), !dbg !4912
  %225 = load i24, i24* %15, align 8, !dbg !4913
  %226 = and i24 %225, -65, !dbg !4913
  store i24 %226, i24* %15, align 8, !dbg !4913
  %227 = icmp ugt i32 %76, %224, !dbg !4914
  br i1 %227, label %228, label %245, !dbg !4916

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4917
  store i32 %229, i32* %16, align 4, !dbg !4919
  br label %245, !dbg !4920

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4921
  %232 = icmp eq i8* %231, null, !dbg !4923
  br i1 %232, label %245, label %233, !dbg !4924

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4925
  %235 = zext i32 %234 to i64, !dbg !4925
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4927
  call void @llvm.dbg.value(metadata i8* %236, metadata !4683, metadata !DIExpression()), !dbg !4756
  %237 = load i24, i24* %15, align 8, !dbg !4928
  %238 = or i24 %237, 1048576, !dbg !4928
  store i24 %238, i24* %15, align 8, !dbg !4928
  store i8 120, i8* %21, align 1, !dbg !4929
  br label %216, !dbg !4930

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4931
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4934
  br label %363, !dbg !4935

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4936
  call void @llvm.dbg.value(metadata i32 %242, metadata !4698, metadata !DIExpression()), !dbg !4882
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4937
  call void @llvm.dbg.value(metadata i32 -1, metadata !4682, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %29, metadata !4620, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i8* %192, metadata !4683, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8* %243, metadata !4684, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8 0, metadata !4685, metadata !DIExpression()), !dbg !4756
  %244 = icmp eq i8* %192, null, !dbg !4938
  br i1 %244, label %363, label %245, !dbg !4940, !llvm.loop !4752

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4909
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4756
  call void @llvm.dbg.value(metadata i32 0, metadata !4704, metadata !DIExpression()), !dbg !4756
  %250 = zext i8 %249 to i32, !dbg !4941
  %251 = icmp eq i8 %249, 0, !dbg !4943
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4756
  call void @llvm.dbg.value(metadata i32 undef, metadata !4703, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4756
  call void @llvm.dbg.value(metadata i32 undef, metadata !4703, metadata !DIExpression()), !dbg !4756
  %252 = icmp sgt i32 %58, 0, !dbg !4944
  br i1 %252, label %253, label %302, !dbg !4945

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4909
  %255 = icmp eq i24 %254, 0, !dbg !4909
  %256 = ptrtoint i8* %248 to i32, !dbg !4946
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4756
  %257 = ptrtoint i8* %247 to i32, !dbg !4946
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4756
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4756
  %258 = xor i1 %251, true, !dbg !4947
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4756
  %259 = sext i1 %258 to i32, !dbg !4947
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4756
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4756
  %260 = lshr i24 %246, 19, !dbg !4948
  %261 = and i24 %260, 1, !dbg !4948
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4948
  %263 = zext i24 %262 to i32, !dbg !4948
  %264 = add i32 %257, %259, !dbg !4948
  %265 = add i32 %256, %263, !dbg !4948
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4756
  %266 = and i24 %246, 4194304, !dbg !4949
  %267 = icmp eq i24 %266, 0, !dbg !4949
  %268 = load i32, i32* %16, align 4, !dbg !4951
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4703, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4756
  call void @llvm.dbg.value(metadata i32 undef, metadata !4703, metadata !DIExpression()), !dbg !4756
  %269 = load i32, i32* %17, align 8, !dbg !4952
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4952
  call void @llvm.dbg.value(metadata i32 undef, metadata !4703, metadata !DIExpression()), !dbg !4756
  %271 = add i32 %264, %58, !dbg !4952
  %272 = add i32 %265, %268, !dbg !4952
  %273 = add i32 %272, %270, !dbg !4953
  %274 = sub i32 %271, %273, !dbg !4953
  call void @llvm.dbg.value(metadata i32 %274, metadata !4681, metadata !DIExpression()), !dbg !4756
  %275 = and i24 %246, 4, !dbg !4954
  %276 = icmp eq i24 %275, 0, !dbg !4954
  br i1 %276, label %277, label %302, !dbg !4955

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4705, metadata !DIExpression()), !dbg !4956
  %278 = and i24 %246, 64, !dbg !4957
  %279 = icmp eq i24 %278, 0, !dbg !4957
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4958
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4958
  %282 = select i1 %279, i32 32, i32 48, !dbg !4958
  br i1 %280, label %287, label %283, !dbg !4958

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #23, !dbg !4959
  call void @llvm.dbg.value(metadata i32 %284, metadata !4710, metadata !DIExpression()), !dbg !4960
  %285 = icmp slt i32 %284, 0, !dbg !4961
  %286 = add i32 %29, 1, !dbg !4959
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4756
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4746
  call void @llvm.dbg.value(metadata i32 %290, metadata !4620, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i8 undef, metadata !4705, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i8 %288, metadata !4685, metadata !DIExpression()), !dbg !4756
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4963
  %292 = add i32 %291, -1, !dbg !4963
  br label %293, !dbg !4963

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4964
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4746
  call void @llvm.dbg.value(metadata i32 %295, metadata !4620, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %294, metadata !4681, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %294, metadata !4681, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4756
  %296 = icmp sgt i32 %294, 0, !dbg !4965
  br i1 %296, label %297, label %302, !dbg !4963

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4966
  call void @llvm.dbg.value(metadata i32 %298, metadata !4681, metadata !DIExpression()), !dbg !4756
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #23, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %299, metadata !4716, metadata !DIExpression()), !dbg !4968
  %300 = icmp slt i32 %299, 0, !dbg !4969
  %301 = add i32 %295, 1, !dbg !4967
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  br i1 %300, label %361, label %293, !llvm.loop !4971

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4756
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4756
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4746
  call void @llvm.dbg.value(metadata i32 %305, metadata !4620, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %304, metadata !4681, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8 %303, metadata !4685, metadata !DIExpression()), !dbg !4756
  %306 = icmp eq i8 %303, 0, !dbg !4973
  br i1 %306, label %312, label %307, !dbg !4974

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4975
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #23, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %309, metadata !4719, metadata !DIExpression()), !dbg !4977
  %310 = icmp slt i32 %309, 0, !dbg !4978
  %311 = add i32 %305, 1, !dbg !4976
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4746
  call void @llvm.dbg.value(metadata i32 %313, metadata !4620, metadata !DIExpression()), !dbg !4742
  %314 = lshr i24 %246, 20, !dbg !4980
  %315 = lshr i24 %246, 19, !dbg !4981
  %316 = or i24 %314, %315, !dbg !4982
  %317 = and i24 %316, 1, !dbg !4982
  %318 = icmp eq i24 %317, 0, !dbg !4982
  br i1 %318, label %323, label %319, !dbg !4983

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #23, !dbg !4984
  call void @llvm.dbg.value(metadata i32 %320, metadata !4723, metadata !DIExpression()), !dbg !4985
  %321 = icmp slt i32 %320, 0, !dbg !4986
  %322 = add i32 %313, 1, !dbg !4984
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4746
  call void @llvm.dbg.value(metadata i32 %324, metadata !4620, metadata !DIExpression()), !dbg !4742
  %325 = and i24 %246, 1048576, !dbg !4988
  %326 = icmp eq i24 %325, 0, !dbg !4988
  br i1 %326, label %333, label %327, !dbg !4989

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4990
  %329 = zext i8 %328 to i32, !dbg !4990
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #23, !dbg !4990
  call void @llvm.dbg.value(metadata i32 %330, metadata !4729, metadata !DIExpression()), !dbg !4991
  %331 = icmp slt i32 %330, 0, !dbg !4992
  %332 = add i32 %324, 1, !dbg !4990
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4746
  call void @llvm.dbg.value(metadata i32 %334, metadata !4620, metadata !DIExpression()), !dbg !4742
  %335 = load i32, i32* %16, align 4, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %335, metadata !4704, metadata !DIExpression()), !dbg !4756
  br label %336, !dbg !4995

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4996
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4746
  call void @llvm.dbg.value(metadata i32 %338, metadata !4620, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %337, metadata !4704, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4756
  %339 = icmp sgt i32 %337, 0, !dbg !4997
  br i1 %339, label %340, label %345, !dbg !4995

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4998
  call void @llvm.dbg.value(metadata i32 %341, metadata !4704, metadata !DIExpression()), !dbg !4756
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #23, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %342, metadata !4733, metadata !DIExpression()), !dbg !5000
  %343 = icmp slt i32 %342, 0, !dbg !5001
  %344 = add i32 %338, 1, !dbg !4999
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  br i1 %343, label %361, label %336, !llvm.loop !5003

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %346, metadata !4736, metadata !DIExpression()), !dbg !5006
  %347 = icmp slt i32 %346, 0, !dbg !5007
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %349, metadata !4620, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %304, metadata !4681, metadata !DIExpression()), !dbg !4756
  %350 = icmp sgt i32 %304, 0, !dbg !5009
  br i1 %350, label %351, label %363, !dbg !5010

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5010
  %353 = add i32 %352, %338, !dbg !5010
  br label %354, !dbg !5010

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %355, metadata !4681, metadata !DIExpression()), !dbg !4756
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #23, !dbg !5011
  call void @llvm.dbg.value(metadata i32 %356, metadata !4738, metadata !DIExpression()), !dbg !5012
  %357 = icmp slt i32 %356, 0, !dbg !5013
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5015
  call void @llvm.dbg.value(metadata i32 undef, metadata !4620, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %359, metadata !4681, metadata !DIExpression()), !dbg !4756
  %360 = icmp sgt i32 %355, 1, !dbg !5009
  br i1 %360, label %354, label %363, !dbg !5010, !llvm.loop !5016

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4620, metadata !DIExpression()), !dbg !4742
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #22, !dbg !4753
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4746
  call void @llvm.dbg.value(metadata i32 %364, metadata !4620, metadata !DIExpression()), !dbg !4742
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #22, !dbg !4753
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4742
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #22, !dbg !5018
  ret i32 %366, !dbg !5018
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5019 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5023, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata i8* %1, metadata !5024, metadata !DIExpression()), !dbg !5025
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5026
  store i24 0, i24* %3, align 4, !dbg !5026
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5026
  store i8 0, i8* %4, align 1, !dbg !5026
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5026
  store i32 0, i32* %5, align 4, !dbg !5026
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5026
  store i32 0, i32* %6, align 4, !dbg !5026
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5027
  call void @llvm.dbg.value(metadata i8* %7, metadata !5024, metadata !DIExpression()), !dbg !5025
  %8 = load i8, i8* %7, align 1, !dbg !5028
  %9 = icmp eq i8 %8, 37, !dbg !5030
  br i1 %9, label %10, label %12, !dbg !5031

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5032
  call void @llvm.dbg.value(metadata i8* %11, metadata !5024, metadata !DIExpression()), !dbg !5025
  store i8 37, i8* %4, align 1, !dbg !5034
  br label %18, !dbg !5035

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5036
  call void @llvm.dbg.value(metadata i8* %13, metadata !5024, metadata !DIExpression()), !dbg !5025
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5037
  call void @llvm.dbg.value(metadata i8* %14, metadata !5024, metadata !DIExpression()), !dbg !5025
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5038
  call void @llvm.dbg.value(metadata i8* %15, metadata !5024, metadata !DIExpression()), !dbg !5025
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %16, metadata !5024, metadata !DIExpression()), !dbg !5025
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %17, metadata !5024, metadata !DIExpression()), !dbg !5025
  br label %18, !dbg !5041

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5025
  ret i8* %19, !dbg !5042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5043 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5047, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i8* %1, metadata !5048, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i8* %2, metadata !5049, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i8* %3, metadata !5050, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i32 0, metadata !5051, metadata !DIExpression()), !dbg !5054
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5055

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5056
  call void @llvm.dbg.value(metadata i32 %9, metadata !5051, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i8* %8, metadata !5049, metadata !DIExpression()), !dbg !5054
  %10 = icmp ult i8* %8, %3, !dbg !5057
  br i1 %10, label %11, label %13, !dbg !5058

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5059
  br label %17, !dbg !5058

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5060

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5061
  %16 = icmp eq i8 %15, 0, !dbg !5060
  br i1 %16, label %24, label %17, !dbg !5055

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5059
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5062
  call void @llvm.dbg.value(metadata i8* %19, metadata !5049, metadata !DIExpression()), !dbg !5054
  %20 = zext i8 %18 to i32, !dbg !5063
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #23, !dbg !5064
  call void @llvm.dbg.value(metadata i32 %21, metadata !5052, metadata !DIExpression()), !dbg !5065
  %22 = icmp slt i32 %21, 0, !dbg !5066
  %23 = add i32 %9, 1, !dbg !5068
  call void @llvm.dbg.value(metadata i32 undef, metadata !5051, metadata !DIExpression()), !dbg !5054
  br i1 %22, label %24, label %7, !llvm.loop !5069

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5054
  ret i32 %25, !dbg !5071
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5072 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5076, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5077, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %2, metadata !5078, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %3, metadata !5079, metadata !DIExpression()), !dbg !5086
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5087
  %6 = load i8, i8* %5, align 1, !dbg !5087
  %7 = zext i8 %6 to i32, !dbg !5088
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5089
  %9 = icmp eq i32 %8, 0, !dbg !5089
  call void @llvm.dbg.value(metadata i1 %9, metadata !5080, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5086
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5090
  call void @llvm.dbg.value(metadata i32 %10, metadata !5081, metadata !DIExpression()), !dbg !5086
  %11 = ptrtoint i8* %3 to i32, !dbg !5091
  %12 = ptrtoint i8* %2 to i32, !dbg !5091
  %13 = sub i32 %11, %12, !dbg !5091
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5092
  call void @llvm.dbg.value(metadata i8* %14, metadata !5083, metadata !DIExpression()), !dbg !5086
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5093

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5086
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5076, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %18, metadata !5083, metadata !DIExpression()), !dbg !5086
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5094
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5095
  call void @llvm.dbg.value(metadata i32 %25, metadata !5084, metadata !DIExpression()), !dbg !5096
  %26 = icmp ult i32 %25, 10, !dbg !5097
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5098
  %28 = add i32 %27, %25, !dbg !5096
  %29 = trunc i32 %28 to i8, !dbg !5098
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5099
  call void @llvm.dbg.value(metadata i8* %30, metadata !5083, metadata !DIExpression()), !dbg !5086
  store i8 %29, i8* %30, align 1, !dbg !5100
  call void @llvm.dbg.value(metadata i64 %22, metadata !5076, metadata !DIExpression()), !dbg !5086
  %31 = icmp uge i64 %19, %15, !dbg !5101
  %32 = icmp ugt i8* %30, %2, !dbg !5102
  %33 = and i1 %31, %32, !dbg !5102
  br i1 %33, label %17, label %34, !dbg !5103, !llvm.loop !5104

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5106
  %36 = load i24, i24* %35, align 4, !dbg !5106
  %37 = and i24 %36, 32, !dbg !5106
  %38 = icmp eq i24 %37, 0, !dbg !5106
  br i1 %38, label %44, label %39, !dbg !5108

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5109

40:                                               ; preds = %39
  br label %41, !dbg !5111

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5115
  store i24 %43, i24* %35, align 4, !dbg !5115
  br label %44, !dbg !5116

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5116
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5117 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5123, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.value(metadata i8* %1, metadata !5124, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.value(metadata i32 %2, metadata !5125, metadata !DIExpression()), !dbg !5126
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5127
  %5 = load i24, i24* %4, align 4, !dbg !5127
  %6 = lshr i24 %5, 11, !dbg !5127
  %7 = and i24 %6, 15, !dbg !5127
  %8 = zext i24 %7 to i32, !dbg !5127
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5128

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5129
  store i32 %2, i32* %10, align 4, !dbg !5131
  br label %28, !dbg !5132

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5133
  store i8 %12, i8* %1, align 1, !dbg !5134
  br label %28, !dbg !5135

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5136
  %15 = bitcast i8* %1 to i16*, !dbg !5137
  store i16 %14, i16* %15, align 2, !dbg !5138
  br label %28, !dbg !5139

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5140
  store i32 %2, i32* %17, align 4, !dbg !5141
  br label %28, !dbg !5142

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5143
  %20 = bitcast i8* %1 to i64*, !dbg !5144
  store i64 %19, i64* %20, align 8, !dbg !5145
  br label %28, !dbg !5146

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5147
  %23 = bitcast i8* %1 to i64*, !dbg !5148
  store i64 %22, i64* %23, align 8, !dbg !5149
  br label %28, !dbg !5150

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5151
  store i32 %2, i32* %25, align 4, !dbg !5152
  br label %28, !dbg !5153

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5154
  store i32 %2, i32* %27, align 4, !dbg !5155
  br label %28, !dbg !5156

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5157
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5161, metadata !DIExpression()), !dbg !5162
  %2 = add i32 %0, -65, !dbg !5163
  %3 = icmp ult i32 %2, 26, !dbg !5164
  %4 = zext i1 %3 to i32, !dbg !5164
  ret i32 %4, !dbg !5165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5166 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5170, metadata !DIExpression()), !dbg !5171
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5172

2:                                                ; preds = %1
  br label %4, !dbg !5173

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5175

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5176
  ret i32 %5, !dbg !5177
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5178 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5180, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.value(metadata i8* %1, metadata !5181, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.value(metadata i8 1, metadata !5182, metadata !DIExpression()), !dbg !5183
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5184

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5182, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.value(metadata i8* %5, metadata !5181, metadata !DIExpression()), !dbg !5183
  %6 = load i8, i8* %5, align 1, !dbg !5185
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5187

7:                                                ; preds = %4
  br label %11, !dbg !5188

8:                                                ; preds = %4
  br label %11, !dbg !5190

9:                                                ; preds = %4
  br label %11, !dbg !5191

10:                                               ; preds = %4
  br label %11, !dbg !5192

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5193
  %14 = or i24 %13, %12, !dbg !5193
  store i24 %14, i24* %3, align 4, !dbg !5193
  call void @llvm.dbg.value(metadata i8 poison, metadata !5182, metadata !DIExpression()), !dbg !5183
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5181, metadata !DIExpression()), !dbg !5183
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5182, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.value(metadata i8* %15, metadata !5181, metadata !DIExpression()), !dbg !5183
  %17 = load i24, i24* %3, align 4, !dbg !5194
  %18 = and i24 %17, 68, !dbg !5196
  %19 = icmp eq i24 %18, 68, !dbg !5196
  br i1 %19, label %20, label %22, !dbg !5196

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5197
  store i24 %21, i24* %3, align 4, !dbg !5197
  br label %22, !dbg !5199

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5200
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5201 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5203, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata i8* %1, metadata !5204, metadata !DIExpression()), !dbg !5207
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5208
  %5 = load i24, i24* %4, align 4, !dbg !5209
  %6 = or i24 %5, 128, !dbg !5209
  store i24 %6, i24* %4, align 4, !dbg !5209
  call void @llvm.dbg.value(metadata i8* %1, metadata !5204, metadata !DIExpression()), !dbg !5207
  %7 = load i8, i8* %1, align 1, !dbg !5210
  %8 = icmp eq i8 %7, 42, !dbg !5212
  br i1 %8, label %9, label %12, !dbg !5213

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5214
  store i24 %10, i24* %4, align 4, !dbg !5214
  call void @llvm.dbg.value(metadata i8* %1, metadata !5204, metadata !DIExpression()), !dbg !5207
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5216
  call void @llvm.dbg.value(metadata i8* %11, metadata !5204, metadata !DIExpression()), !dbg !5207
  store i8* %11, i8** %3, align 4, !dbg !5216
  br label %29, !dbg !5217

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5205, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata i8** %3, metadata !5204, metadata !DIExpression(DW_OP_deref)), !dbg !5207
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5218
  call void @llvm.dbg.value(metadata i32 %13, metadata !5206, metadata !DIExpression()), !dbg !5207
  %14 = load i8*, i8** %3, align 4, !dbg !5219
  call void @llvm.dbg.value(metadata i8* %14, metadata !5204, metadata !DIExpression()), !dbg !5207
  %15 = icmp eq i8* %14, %1, !dbg !5221
  br i1 %15, label %29, label %16, !dbg !5222

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5223
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5225
  store i32 %13, i32* %18, align 4, !dbg !5226
  %19 = lshr i32 %13, 31, !dbg !5227
  %20 = lshr i24 %17, 1, !dbg !5228
  %21 = and i24 %20, 1, !dbg !5228
  %22 = zext i24 %21 to i32, !dbg !5228
  %23 = or i32 %19, %22, !dbg !5228
  %24 = trunc i32 %23 to i24, !dbg !5228
  %25 = shl nuw nsw i24 %24, 1, !dbg !5228
  %26 = and i24 %17, -131, !dbg !5228
  %27 = or i24 %26, 128, !dbg !5228
  %28 = or i24 %25, %27, !dbg !5228
  store i24 %28, i24* %4, align 4, !dbg !5228
  br label %29, !dbg !5229

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5207
  ret i8* %30, !dbg !5230
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5231 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5233, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i8* %1, metadata !5234, metadata !DIExpression()), !dbg !5236
  %4 = load i8, i8* %1, align 1, !dbg !5237
  %5 = icmp eq i8 %4, 46, !dbg !5238
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5239
  %7 = load i24, i24* %6, align 4, !dbg !5240
  %8 = select i1 %5, i24 512, i24 0, !dbg !5240
  %9 = and i24 %7, -513, !dbg !5240
  %10 = or i24 %9, %8, !dbg !5240
  store i24 %10, i24* %6, align 4, !dbg !5240
  br i1 %5, label %11, label %32, !dbg !5241

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5234, metadata !DIExpression()), !dbg !5236
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5242
  call void @llvm.dbg.value(metadata i8* %12, metadata !5234, metadata !DIExpression()), !dbg !5236
  store i8* %12, i8** %3, align 4, !dbg !5242
  %13 = load i8, i8* %12, align 1, !dbg !5243
  %14 = icmp eq i8 %13, 42, !dbg !5245
  br i1 %14, label %15, label %18, !dbg !5246

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5247
  store i24 %16, i24* %6, align 4, !dbg !5247
  call void @llvm.dbg.value(metadata i8* %12, metadata !5234, metadata !DIExpression()), !dbg !5236
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5249
  call void @llvm.dbg.value(metadata i8* %17, metadata !5234, metadata !DIExpression()), !dbg !5236
  store i8* %17, i8** %3, align 4, !dbg !5249
  br label %32, !dbg !5250

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5234, metadata !DIExpression(DW_OP_deref)), !dbg !5236
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5251
  call void @llvm.dbg.value(metadata i32 %19, metadata !5235, metadata !DIExpression()), !dbg !5236
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5252
  store i32 %19, i32* %20, align 4, !dbg !5253
  %21 = lshr i32 %19, 31, !dbg !5254
  %22 = load i24, i24* %6, align 4, !dbg !5255
  %23 = lshr i24 %22, 1, !dbg !5255
  %24 = and i24 %23, 1, !dbg !5255
  %25 = zext i24 %24 to i32, !dbg !5255
  %26 = or i32 %21, %25, !dbg !5255
  %27 = trunc i32 %26 to i24, !dbg !5255
  %28 = shl nuw nsw i24 %27, 1, !dbg !5255
  %29 = and i24 %22, -3, !dbg !5255
  %30 = or i24 %28, %29, !dbg !5255
  store i24 %30, i24* %6, align 4, !dbg !5255
  %31 = load i8*, i8** %3, align 4, !dbg !5256
  call void @llvm.dbg.value(metadata i8* %31, metadata !5234, metadata !DIExpression()), !dbg !5236
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5236
  ret i8* %33, !dbg !5257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5258 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5260, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %1, metadata !5261, metadata !DIExpression()), !dbg !5262
  %3 = load i8, i8* %1, align 1, !dbg !5263
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5264

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5265
  call void @llvm.dbg.value(metadata i8* %5, metadata !5261, metadata !DIExpression()), !dbg !5262
  %6 = load i8, i8* %5, align 1, !dbg !5268
  %7 = icmp eq i8 %6, 104, !dbg !5269
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5270
  %9 = load i24, i24* %8, align 4, !dbg !5270
  %10 = and i24 %9, -30721, !dbg !5270
  br i1 %7, label %11, label %14, !dbg !5271

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5272
  store i24 %12, i24* %8, align 4, !dbg !5272
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5274
  call void @llvm.dbg.value(metadata i8* %13, metadata !5261, metadata !DIExpression()), !dbg !5262
  br label %56, !dbg !5275

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5276
  store i24 %15, i24* %8, align 4, !dbg !5276
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5278
  call void @llvm.dbg.value(metadata i8* %17, metadata !5261, metadata !DIExpression()), !dbg !5262
  %18 = load i8, i8* %17, align 1, !dbg !5280
  %19 = icmp eq i8 %18, 108, !dbg !5281
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5282
  %21 = load i24, i24* %20, align 4, !dbg !5282
  %22 = and i24 %21, -30721, !dbg !5282
  br i1 %19, label %23, label %26, !dbg !5283

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5284
  store i24 %24, i24* %20, align 4, !dbg !5284
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5286
  call void @llvm.dbg.value(metadata i8* %25, metadata !5261, metadata !DIExpression()), !dbg !5262
  br label %56, !dbg !5287

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5288
  store i24 %27, i24* %20, align 4, !dbg !5288
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5290
  %30 = load i24, i24* %29, align 4, !dbg !5291
  %31 = and i24 %30, -30721, !dbg !5291
  %32 = or i24 %31, 10240, !dbg !5291
  store i24 %32, i24* %29, align 4, !dbg !5291
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5292
  call void @llvm.dbg.value(metadata i8* %33, metadata !5261, metadata !DIExpression()), !dbg !5262
  br label %56, !dbg !5293

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5294
  %36 = load i24, i24* %35, align 4, !dbg !5295
  %37 = and i24 %36, -30721, !dbg !5295
  %38 = or i24 %37, 12288, !dbg !5295
  store i24 %38, i24* %35, align 4, !dbg !5295
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5296
  call void @llvm.dbg.value(metadata i8* %39, metadata !5261, metadata !DIExpression()), !dbg !5262
  br label %56, !dbg !5297

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5298
  %42 = load i24, i24* %41, align 4, !dbg !5299
  %43 = and i24 %42, -30721, !dbg !5299
  %44 = or i24 %43, 14336, !dbg !5299
  store i24 %44, i24* %41, align 4, !dbg !5299
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5300
  call void @llvm.dbg.value(metadata i8* %45, metadata !5261, metadata !DIExpression()), !dbg !5262
  br label %56, !dbg !5301

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5302
  %48 = load i24, i24* %47, align 4, !dbg !5303
  %49 = and i24 %48, -30723, !dbg !5303
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5304
  call void @llvm.dbg.value(metadata i8* %50, metadata !5261, metadata !DIExpression()), !dbg !5262
  %51 = or i24 %49, 16386, !dbg !5305
  store i24 %51, i24* %47, align 4, !dbg !5305
  br label %56, !dbg !5306

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5307
  %54 = load i24, i24* %53, align 4, !dbg !5308
  %55 = and i24 %54, -30721, !dbg !5308
  store i24 %55, i24* %53, align 4, !dbg !5308
  br label %56, !dbg !5309

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5261, metadata !DIExpression()), !dbg !5262
  ret i8* %57, !dbg !5310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5311 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5313, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i8* %1, metadata !5314, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i8 0, metadata !5315, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i8* %1, metadata !5314, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5318
  %3 = load i8, i8* %1, align 1, !dbg !5319
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5320
  store i8 %3, i8* %4, align 1, !dbg !5321
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5322

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5323

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5324
  %9 = load i24, i24* %8, align 4, !dbg !5324
  %10 = and i24 %9, -458753, !dbg !5324
  %11 = or i24 %10, %7, !dbg !5324
  call void @llvm.dbg.label(metadata !5316), !dbg !5325
  %12 = and i24 %9, 30720, !dbg !5326
  %13 = icmp eq i24 %12, 16384, !dbg !5326
  %14 = zext i1 %13 to i24, !dbg !5328
  %15 = or i24 %11, %14, !dbg !5328
  %16 = icmp eq i8 %3, 99, !dbg !5329
  br i1 %16, label %17, label %43, !dbg !5331

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5332
  %19 = icmp ne i24 %18, 0, !dbg !5332
  call void @llvm.dbg.value(metadata i1 %19, metadata !5315, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5318
  br label %43, !dbg !5334

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5335
  %22 = load i24, i24* %21, align 4, !dbg !5336
  %23 = and i24 %22, -458753, !dbg !5336
  %24 = or i24 %23, 262144, !dbg !5336
  call void @llvm.dbg.value(metadata i8 1, metadata !5315, metadata !DIExpression()), !dbg !5318
  br label %43, !dbg !5337

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5340
  %27 = load i24, i24* %26, align 4, !dbg !5341
  %28 = and i24 %27, -458753, !dbg !5341
  %29 = or i24 %28, 196608, !dbg !5341
  %30 = and i24 %27, 30720, !dbg !5342
  %31 = icmp eq i24 %30, 16384, !dbg !5342
  br label %43, !dbg !5344

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5345
  %34 = load i24, i24* %33, align 4, !dbg !5346
  %35 = and i24 %34, -458753, !dbg !5346
  %36 = or i24 %35, 196608, !dbg !5346
  %37 = and i24 %34, 30720, !dbg !5347
  %38 = icmp ne i24 %37, 0, !dbg !5347
  br label %43, !dbg !5349

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5350
  %41 = load i24, i24* %40, align 4, !dbg !5351
  %42 = or i24 %41, 1, !dbg !5351
  br label %43, !dbg !5352

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5353
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5354
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5355
  call void @llvm.dbg.value(metadata i8* %48, metadata !5314, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i8 poison, metadata !5315, metadata !DIExpression()), !dbg !5318
  %49 = lshr i24 %44, 1, !dbg !5353
  %50 = and i24 %49, 1, !dbg !5353
  %51 = zext i24 %50 to i32, !dbg !5353
  %52 = or i32 %51, %47, !dbg !5353
  %53 = trunc i32 %52 to i24, !dbg !5353
  %54 = shl nuw nsw i24 %53, 1, !dbg !5353
  %55 = and i24 %44, -3, !dbg !5353
  %56 = or i24 %54, %55, !dbg !5353
  store i24 %56, i24* %46, align 4, !dbg !5353
  ret i8* %48, !dbg !5356
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5357 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5362, metadata !DIExpression()), !dbg !5365
  %2 = load i8*, i8** %0, align 4, !dbg !5366
  call void @llvm.dbg.value(metadata i8* %2, metadata !5363, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 0, metadata !5364, metadata !DIExpression()), !dbg !5365
  %3 = load i8, i8* %2, align 1, !dbg !5367
  %4 = zext i8 %3 to i32, !dbg !5368
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5369
  %6 = icmp eq i32 %5, 0, !dbg !5370
  br i1 %6, label %19, label %7, !dbg !5370

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5364, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i8* %10, metadata !5363, metadata !DIExpression()), !dbg !5365
  %11 = mul i32 %9, 10, !dbg !5371
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5373
  call void @llvm.dbg.value(metadata i8* %12, metadata !5363, metadata !DIExpression()), !dbg !5365
  %13 = add i32 %11, -48, !dbg !5374
  %14 = add i32 %13, %8, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %14, metadata !5364, metadata !DIExpression()), !dbg !5365
  %15 = load i8, i8* %12, align 1, !dbg !5367
  %16 = zext i8 %15 to i32, !dbg !5368
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5369
  %18 = icmp eq i32 %17, 0, !dbg !5370
  br i1 %18, label %19, label %7, !dbg !5370, !llvm.loop !5376

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5365
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5365
  store i8* %20, i8** %0, align 4, !dbg !5378
  ret i32 %21, !dbg !5379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5382, metadata !DIExpression()), !dbg !5383
  %2 = add i32 %0, -48, !dbg !5384
  %3 = icmp ult i32 %2, 10, !dbg !5385
  %4 = zext i1 %3 to i32, !dbg !5385
  ret i32 %4, !dbg !5386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5387 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #22, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #22, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #22, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #22, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #22, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #22, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #22, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #22, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #22, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #22, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #22, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #22, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #22, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #22, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #22, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #22, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #22, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #22, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #22, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #22, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #22, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #22, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #22, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #22, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #22, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #22, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #22, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #22, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #22, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #22, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #22, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #22, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #22, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #22, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #22, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #22, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #22, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #22, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #22, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #22, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #22, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #22, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #22, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #22, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #22, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #22, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #22, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #22, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #22, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #22, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #22, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #22, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #22, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #22, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #22, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #22, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #22, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #22, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #22, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #22, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #22, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #22, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #22, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #22, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #22, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #22, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #22, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #22, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #22, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #22, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #22, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #22, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #22, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #22, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #22, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #22, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #22, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #22, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #22, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #22, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #22, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #22, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #22, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #22, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #22, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #22, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #22, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #22, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #22, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #22, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #22, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #22, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #22, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #22, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #22, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #22, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #22, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #22, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #22, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #22, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #22, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #22, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #22, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #22, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #22, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #22, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #22, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #22, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #22, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #22, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #22, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #22, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #22, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #22, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #22, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #22, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #22, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #22, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #22, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #22, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #22, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #22, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #22, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #22, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #22, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #22, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #22, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #22, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #22, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #22, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #22, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #22, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #22, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #22, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #22, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #22, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #22, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #22, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #22, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #22, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #22, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #22, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #22, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #22, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #22, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #22, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #22, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #22, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #22, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #22, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #22, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #22, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #22, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #22, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #22, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #22, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #22, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #22, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #22, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #22, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #22, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #22, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #22, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #22, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #22, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #22, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #22, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #22, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #22, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #22, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #22, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #22, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #22, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #22, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #22, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #22, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #22, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #22, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #22, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #22, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #22, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #22, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #22, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #22, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #22, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #22, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #22, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #22, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #22, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #22, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #22, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #22, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #22, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #22, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #22, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_RUNTIME_STATS\0A\09.equ\09CONFIG_SYS_HEAP_RUNTIME_STATS,1\0A\09.type\09CONFIG_SYS_HEAP_RUNTIME_STATS,%object", ""() #22, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #22, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #22, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #22, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #22, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #22, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #22, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #22, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #22, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #22, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #22, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #22, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #22, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #22, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #22, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #22, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #22, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #22, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #22, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #22, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #22, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #22, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #22, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #22, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #22, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #22, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #22, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #22, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #22, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #22, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #22, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #22, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #22, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #22, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #22, !dbg !5847, !srcloc !5848
  ret void, !dbg !5849
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5852, metadata !DIExpression()), !dbg !5853
  tail call void @SOC_RdcInit() #24, !dbg !5854
  tail call void @SOC_ClockInit() #24, !dbg !5855
  tail call fastcc void @nxp_mcimx7_gpio_config() #24, !dbg !5856
  ret i32 0, !dbg !5857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #15 !dbg !5858 {
  tail call fastcc void @RDC_SetDomainID() #24, !dbg !5859
  ret void, !dbg !5860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !5861 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #23, !dbg !5862
  tail call fastcc void @CCM_EnableRoot() #24, !dbg !5863
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #24, !dbg !5864
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #24, !dbg !5865
  tail call fastcc void @WDOG_DisablePowerdown() #24, !dbg !5866
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #24, !dbg !5867
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #24, !dbg !5868
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #24, !dbg !5869
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #24, !dbg !5870
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #24, !dbg !5871
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #24, !dbg !5872
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #24, !dbg !5873
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #24, !dbg !5874
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #24, !dbg !5875
  ret void, !dbg !5876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #15 !dbg !5877 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #24, !dbg !5878
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #24, !dbg !5879
  ret void, !dbg !5880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5881 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5886, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i32 %0, metadata !5887, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i8 %1, metadata !5888, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i8 0, metadata !5889, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i8 0, metadata !5890, metadata !DIExpression()), !dbg !5891
  %3 = zext i8 %1 to i32, !dbg !5892
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !5893
  store volatile i32 %3, i32* %4, align 4, !dbg !5894
  ret void, !dbg !5895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5896 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5900, metadata !DIExpression()), !dbg !5903
  call void @llvm.dbg.value(metadata i32 %0, metadata !5901, metadata !DIExpression()), !dbg !5903
  call void @llvm.dbg.value(metadata i32 %1, metadata !5902, metadata !DIExpression()), !dbg !5903
  %3 = inttoptr i32 %0 to i32*, !dbg !5904
  store volatile i32 %1, i32* %3, align 4, !dbg !5905
  ret void, !dbg !5906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #15 !dbg !5907 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5911, metadata !DIExpression()), !dbg !5913
  call void @llvm.dbg.value(metadata i32 809024384, metadata !5912, metadata !DIExpression()), !dbg !5913
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !5914
  ret void, !dbg !5915
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #15 !dbg !5916 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !5921, metadata !DIExpression()), !dbg !5922
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5923
  %2 = and i16 %1, -2, !dbg !5923
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5923
  ret void, !dbg !5924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #15 !dbg !5925 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5929, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.value(metadata i32 1, metadata !5930, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.value(metadata i32 1, metadata !5931, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.value(metadata i8 0, metadata !5932, metadata !DIExpression()), !dbg !5933
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !5934
  ret void, !dbg !5935
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5985, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5986, metadata !DIExpression()), !dbg !5987
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #23, !dbg !5988
  ret void, !dbg !5989
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5990 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6007, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6008, metadata !DIExpression()), !dbg !6010
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6011
  %4 = load i32, i32* %3, align 4, !dbg !6011
  call void @llvm.dbg.value(metadata i32 %4, metadata !6009, metadata !DIExpression()), !dbg !6010
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6012
  ret void, !dbg !6013
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6014 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6018, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i8* %0, metadata !6019, metadata !DIExpression()), !dbg !6021
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6022
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #22, !dbg !6022
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6020, metadata !DIExpression()), !dbg !6023
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6023
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6024
  %5 = bitcast i8* %4 to i32*, !dbg !6024
  %6 = load i32, i32* %5, align 4, !dbg !6024
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6025
  store i32 %6, i32* %7, align 4, !dbg !6026
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6027
  unreachable, !dbg !6028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6034, metadata !DIExpression()), !dbg !6035
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6036
  ret void, !dbg !6037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6042, metadata !DIExpression()), !dbg !6043
  %2 = icmp sgt i32 %0, -1, !dbg !6044
  br i1 %2, label %3, label %8, !dbg !6046

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6047, !srcloc !6049
  %4 = and i32 %0, 31, !dbg !6050
  %5 = shl nuw i32 1, %4, !dbg !6051
  %6 = lshr i32 %0, 5, !dbg !6052
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6053
  store volatile i32 %5, i32* %7, align 4, !dbg !6054
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6055, !srcloc !6056
  br label %8, !dbg !6057

8:                                                ; preds = %3, %1
  ret void, !dbg !6058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6061, metadata !DIExpression()), !dbg !6062
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6063
  ret void, !dbg !6064
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6067, metadata !DIExpression()), !dbg !6068
  %2 = icmp sgt i32 %0, -1, !dbg !6069
  br i1 %2, label %3, label %8, !dbg !6071

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6072
  %5 = shl nuw i32 1, %4, !dbg !6074
  %6 = lshr i32 %0, 5, !dbg !6075
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6076
  store volatile i32 %5, i32* %7, align 4, !dbg !6077
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !6078, !srcloc !6082
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !6083, !srcloc !6086
  br label %8, !dbg !6087

8:                                                ; preds = %3, %1
  ret void, !dbg !6088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6093, metadata !DIExpression()), !dbg !6094
  %2 = lshr i32 %0, 5, !dbg !6095
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6096
  %4 = load volatile i32, i32* %3, align 4, !dbg !6096
  %5 = and i32 %0, 31, !dbg !6097
  %6 = shl nuw i32 1, %5, !dbg !6097
  %7 = and i32 %4, %6, !dbg !6098
  ret i32 %7, !dbg !6099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6104, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i32 %1, metadata !6105, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i32 %2, metadata !6106, metadata !DIExpression()), !dbg !6107
  %4 = add i32 %1, 1, !dbg !6108
  call void @llvm.dbg.value(metadata i32 %4, metadata !6105, metadata !DIExpression()), !dbg !6107
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6111
  ret void, !dbg !6112
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6117, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i32 %1, metadata !6118, metadata !DIExpression()), !dbg !6119
  %3 = trunc i32 %1 to i8, !dbg !6120
  %4 = shl i8 %3, 4, !dbg !6120
  %5 = and i32 %0, 15, !dbg !6122
  %6 = add nsw i32 %5, -4, !dbg !6122
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6122
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6122
  %9 = icmp slt i32 %0, 0, !dbg !6122
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6122
  store volatile i8 %4, i8* %10, align 1, !dbg !6120
  ret void, !dbg !6123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6124 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6126, metadata !DIExpression()), !dbg !6127
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #23, !dbg !6128
  ret void, !dbg !6129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6130 {
  tail call void @z_SysNmiOnReset() #23, !dbg !6132
  tail call void @z_arm_int_exit() #23, !dbg !6133
  ret void, !dbg !6134
}

; Function Attrs: optsize
declare !dbg !6135 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6136 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6138 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6140
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6141
  tail call void @z_bss_zero() #23, !dbg !6142
  tail call void @z_data_copy() #23, !dbg !6143
  tail call void @z_arm_interrupt_init() #23, !dbg !6144
  tail call void @z_cstart() #26, !dbg !6145
  unreachable, !dbg !6145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6146 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6147
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !6148, !srcloc !6151
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !6152, !srcloc !6155
  ret void, !dbg !6156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6157 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6158
  %2 = and i32 %1, -15728641, !dbg !6158
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6158
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #22, !dbg !6159, !srcloc !6164
  call void @llvm.dbg.value(metadata i32 %3, metadata !6162, metadata !DIExpression()) #22, !dbg !6165
  %4 = and i32 %3, -5, !dbg !6166
  call void @llvm.dbg.value(metadata i32 %4, metadata !6167, metadata !DIExpression()) #22, !dbg !6172
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #22, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !6176, !srcloc !6155
  ret void, !dbg !6178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6182, metadata !DIExpression()), !dbg !6183
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6184
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 0, !dbg !6185
  store i32 %0, i32* %3, align 8, !dbg !6186
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6187
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 1, !dbg !6188
  store i32 %4, i32* %5, align 4, !dbg !6189
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6190
  %7 = or i32 %6, 268435456, !dbg !6190
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6190
  call void @llvm.dbg.value(metadata i32 0, metadata !6191, metadata !DIExpression()) #22, !dbg !6195
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #22, !dbg !6197, !srcloc !6198
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6199
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 6, i32 1, !dbg !6200
  %10 = load i32, i32* %9, align 4, !dbg !6200
  ret i32 %10, !dbg !6201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6202 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6306, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6307, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.value(metadata i8* %2, metadata !6308, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6309, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.value(metadata i8* %4, metadata !6310, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.value(metadata i8* %5, metadata !6311, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.value(metadata i8* %6, metadata !6312, metadata !DIExpression()), !dbg !6314
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6315
  call void @llvm.dbg.value(metadata i8* %8, metadata !6313, metadata !DIExpression()), !dbg !6314
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6316
  %10 = bitcast i8* %9 to i32*, !dbg !6316
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6317
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6318
  %12 = bitcast i8* %8 to i32*, !dbg !6319
  store i32 %11, i32* %12, align 4, !dbg !6320
  %13 = ptrtoint i8* %4 to i32, !dbg !6321
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6322
  %15 = bitcast i8* %14 to i32*, !dbg !6322
  store i32 %13, i32* %15, align 4, !dbg !6323
  %16 = ptrtoint i8* %5 to i32, !dbg !6324
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6325
  %18 = bitcast i8* %17 to i32*, !dbg !6325
  store i32 %16, i32* %18, align 4, !dbg !6326
  %19 = ptrtoint i8* %6 to i32, !dbg !6327
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6328
  %21 = bitcast i8* %20 to i32*, !dbg !6328
  store i32 %19, i32* %21, align 4, !dbg !6329
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6330
  %23 = bitcast i8* %22 to i32*, !dbg !6330
  store i32 16777216, i32* %23, align 4, !dbg !6331
  %24 = ptrtoint i8* %8 to i32, !dbg !6332
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6333
  store i32 %24, i32* %25, align 8, !dbg !6334
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !6335
  store i32 0, i32* %26, align 8, !dbg !6336
  ret void, !dbg !6337
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6342, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata i8* %1, metadata !6343, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6344, metadata !DIExpression()), !dbg !6345
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6346
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #22, !dbg !6347, !srcloc !6348
  unreachable, !dbg !6349
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6350 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6368, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i32 %1, metadata !6369, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i32 %2, metadata !6370, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6371, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i32 0, metadata !6372, metadata !DIExpression()), !dbg !6378
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6379
  %9 = and i32 %8, 511, !dbg !6380
  call void @llvm.dbg.value(metadata i32 %9, metadata !6373, metadata !DIExpression()), !dbg !6378
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #22, !dbg !6381
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #22, !dbg !6381
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6382
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #22, !dbg !6382
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6377, metadata !DIExpression()), !dbg !6383
  call void @llvm.dbg.value(metadata i32 0, metadata !6384, metadata !DIExpression()) #22, !dbg !6387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #22, !dbg !6389, !srcloc !6390
  call void @llvm.dbg.value(metadata i8* %6, metadata !6375, metadata !DIExpression(DW_OP_deref)), !dbg !6378
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6391
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6376, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i8* %5, metadata !6374, metadata !DIExpression(DW_OP_deref)), !dbg !6378
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !6392
  call void @llvm.dbg.value(metadata i32 %12, metadata !6372, metadata !DIExpression()), !dbg !6378
  %13 = load i8, i8* %5, align 1, !dbg !6393, !range !6395
  call void @llvm.dbg.value(metadata i8 %13, metadata !6374, metadata !DIExpression()), !dbg !6378
  %14 = icmp eq i8 %13, 0, !dbg !6393
  br i1 %14, label %15, label %32, !dbg !6396

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6397
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #23, !dbg !6398
  %18 = load i8, i8* %6, align 1, !dbg !6399, !range !6395
  call void @llvm.dbg.value(metadata i8 %18, metadata !6375, metadata !DIExpression()), !dbg !6378
  %19 = icmp eq i8 %18, 0, !dbg !6399
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6401
  %21 = load i32, i32* %20, align 4, !dbg !6401
  br i1 %19, label %27, label %22, !dbg !6402

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6403
  %24 = icmp eq i32 %23, 0, !dbg !6406
  br i1 %24, label %25, label %31, !dbg !6407

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6408
  br label %29, !dbg !6410

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6411
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6401
  br label %31, !dbg !6413

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #23, !dbg !6413
  br label %32, !dbg !6414

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #22, !dbg !6414
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #22, !dbg !6414
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #22, !dbg !6414
  ret void, !dbg !6414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6420, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i32 %1, metadata !6421, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i32 %2, metadata !6422, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i8* %3, metadata !6423, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i8 0, metadata !6424, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6425, metadata !DIExpression()), !dbg !6426
  store i8 0, i8* %3, align 1, !dbg !6427
  %5 = icmp ult i32 %2, -16777216, !dbg !6428
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6430
  br i1 %8, label %16, label %9, !dbg !6430

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6431
  %11 = icmp eq i32 %10, 0, !dbg !6431
  br i1 %11, label %12, label %13, !dbg !6433

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6425, metadata !DIExpression()), !dbg !6426
  store i8 1, i8* %3, align 1, !dbg !6436
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6426
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6425, metadata !DIExpression()), !dbg !6426
  br label %16, !dbg !6439

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6426
  ret %struct.__esf* %17, !dbg !6440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6441 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6445, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i32 %1, metadata !6446, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i8* %2, metadata !6447, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i32 0, metadata !6448, metadata !DIExpression()), !dbg !6449
  store i8 0, i8* %2, align 1, !dbg !6450
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !6451

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6452
  call void @llvm.dbg.value(metadata i32 %5, metadata !6448, metadata !DIExpression()), !dbg !6449
  br label %10, !dbg !6454

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6455
  call void @llvm.dbg.value(metadata i32 0, metadata !6448, metadata !DIExpression()), !dbg !6449
  br label %10, !dbg !6456

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6457
  call void @llvm.dbg.value(metadata i32 0, metadata !6448, metadata !DIExpression()), !dbg !6449
  br label %10, !dbg !6458

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6459
  call void @llvm.dbg.value(metadata i32 0, metadata !6448, metadata !DIExpression()), !dbg !6449
  br label %10, !dbg !6460

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6461
  br label %10, !dbg !6462

10:                                               ; preds = %4, %6, %7, %8, %9, %3
  %11 = phi i32 [ 0, %3 ], [ %5, %4 ], [ 0, %6 ], [ 0, %7 ], [ 0, %8 ], [ 0, %9 ]
  ret i32 %11, !dbg !6463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6464 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6468, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* %1, metadata !6469, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 0, metadata !6470, metadata !DIExpression()), !dbg !6471
  store i8 0, i8* %1, align 1, !dbg !6472
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6473
  %4 = and i32 %3, 2, !dbg !6475
  %5 = icmp eq i32 %4, 0, !dbg !6476
  br i1 %5, label %6, label %32, !dbg !6477

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6478
  %8 = icmp sgt i32 %7, -1, !dbg !6480
  br i1 %8, label %9, label %32, !dbg !6481

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6482
  %11 = and i32 %10, 1073741824, !dbg !6484
  %12 = icmp eq i32 %11, 0, !dbg !6485
  br i1 %12, label %32, label %13, !dbg !6486

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6487
  br i1 %14, label %15, label %18, !dbg !6490

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6491
  %17 = load i32, i32* %16, align 4, !dbg !6491
  call void @llvm.dbg.value(metadata i32 %17, metadata !6470, metadata !DIExpression()), !dbg !6471
  br label %32, !dbg !6493

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6494
  %20 = and i32 %19, 255, !dbg !6496
  %21 = icmp eq i32 %20, 0, !dbg !6497
  br i1 %21, label %23, label %22, !dbg !6498

22:                                               ; preds = %18
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6499
  call void @llvm.dbg.value(metadata i32 0, metadata !6470, metadata !DIExpression()), !dbg !6471
  br label %32, !dbg !6501

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6502
  %25 = and i32 %24, 65280, !dbg !6504
  %26 = icmp eq i32 %25, 0, !dbg !6505
  br i1 %26, label %28, label %27, !dbg !6506

27:                                               ; preds = %23
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6507
  call void @llvm.dbg.value(metadata i32 0, metadata !6470, metadata !DIExpression()), !dbg !6471
  br label %32, !dbg !6509

28:                                               ; preds = %23
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6510
  %30 = icmp ult i32 %29, 65536, !dbg !6512
  br i1 %30, label %32, label %31, !dbg !6513

31:                                               ; preds = %28
  tail call fastcc void @usage_fault() #24, !dbg !6514
  call void @llvm.dbg.value(metadata i32 0, metadata !6470, metadata !DIExpression()), !dbg !6471
  br label %32, !dbg !6516

32:                                               ; preds = %6, %9, %15, %27, %28, %31, %22, %2
  %33 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ 0, %22 ], [ 0, %27 ], [ 0, %31 ], [ 0, %28 ], [ 0, %9 ], !dbg !6471
  call void @llvm.dbg.value(metadata i32 %33, metadata !6470, metadata !DIExpression()), !dbg !6471
  ret i32 %33, !dbg !6517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6518 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6520, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i32 %0, metadata !6521, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i8* %1, metadata !6522, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i32 0, metadata !6523, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i32 -22, metadata !6524, metadata !DIExpression()), !dbg !6528
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6529
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6531
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6533
  %6 = and i32 %5, 2, !dbg !6534
  %7 = icmp eq i32 %6, 0, !dbg !6535
  br i1 %7, label %18, label %8, !dbg !6536

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6537
  call void @llvm.dbg.value(metadata i32 %9, metadata !6525, metadata !DIExpression()), !dbg !6538
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6539
  %11 = and i32 %10, 128, !dbg !6541
  %12 = icmp eq i32 %11, 0, !dbg !6542
  %13 = icmp eq i32 %0, 0
  %14 = or i1 %13, %12, !dbg !6543
  call void @llvm.dbg.value(metadata i32 %9, metadata !6524, metadata !DIExpression()), !dbg !6528
  br i1 %14, label %18, label %15, !dbg !6543

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6544
  %17 = and i32 %16, -129, !dbg !6544
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6544
  br label %18, !dbg !6548

18:                                               ; preds = %8, %15, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !6524, metadata !DIExpression()), !dbg !6528
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6549
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6551
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6553
  %22 = and i32 %21, 16, !dbg !6555
  %23 = icmp eq i32 %22, 0, !dbg !6555
  br i1 %23, label %24, label %26, !dbg !6556

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6557
  br label %26, !dbg !6558

26:                                               ; preds = %24, %18
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6559
  %28 = and i32 %27, 32, !dbg !6561
  %29 = icmp eq i32 %28, 0, !dbg !6562
  br i1 %29, label %33, label %30, !dbg !6563

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6564
  %32 = and i32 %31, -8193, !dbg !6564
  store volatile i32 %32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6564
  br label %33, !dbg !6566

33:                                               ; preds = %30, %26
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6567
  %35 = or i32 %34, 255, !dbg !6567
  store volatile i32 %35, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6567
  store i8 0, i8* %1, align 1, !dbg !6568
  ret void, !dbg !6569
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6570 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6574, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.value(metadata i32 %0, metadata !6575, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.value(metadata i8* %1, metadata !6576, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.value(metadata i32 0, metadata !6577, metadata !DIExpression()), !dbg !6581
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6582
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6584
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6586
  %6 = and i32 %5, 512, !dbg !6587
  %7 = icmp eq i32 %6, 0, !dbg !6587
  br i1 %7, label %18, label %8, !dbg !6588

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6589
  call void @llvm.dbg.value(metadata i32 %9, metadata !6578, metadata !DIExpression()), !dbg !6590
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6591
  %11 = and i32 %10, 32768, !dbg !6593
  %12 = icmp ne i32 %11, 0, !dbg !6594
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6595
  br i1 %14, label %15, label %18, !dbg !6595

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6596
  %17 = and i32 %16, -32769, !dbg !6596
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6596
  br label %18, !dbg !6600

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6601
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6603
  %21 = and i32 %20, 256, !dbg !6605
  %22 = icmp eq i32 %21, 0, !dbg !6606
  br i1 %22, label %23, label %25, !dbg !6607

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6608
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6610
  %27 = or i32 %26, 65280, !dbg !6610
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6610
  store i8 0, i8* %1, align 1, !dbg !6611
  ret void, !dbg !6612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6613 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6619, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.value(metadata i32 0, metadata !6620, metadata !DIExpression()), !dbg !6621
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6622
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6624
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6626
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6628
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6630
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6632
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6634
  %8 = or i32 %7, -65536, !dbg !6634
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6634
  ret void, !dbg !6635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6636 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6640, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.value(metadata i8* %0, metadata !6641, metadata !DIExpression()), !dbg !6642
  store i8 0, i8* %0, align 1, !dbg !6643
  ret void, !dbg !6644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6645 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6649, metadata !DIExpression()), !dbg !6652
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6653
  %3 = load i32, i32* %2, align 4, !dbg !6653
  %4 = inttoptr i32 %3 to i16*, !dbg !6654
  call void @llvm.dbg.value(metadata i16* %4, metadata !6650, metadata !DIExpression()), !dbg !6652
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6655
  %6 = or i32 %5, 256, !dbg !6655
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6655
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !6656, !srcloc !6659
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !6660, !srcloc !6663
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6664
  %8 = load i16, i16* %7, align 2, !dbg !6665
  call void @llvm.dbg.value(metadata i16 %8, metadata !6651, metadata !DIExpression()), !dbg !6652
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6666
  %10 = and i32 %9, -257, !dbg !6666
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6666
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !6667, !srcloc !6659
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !6669, !srcloc !6663
  %11 = icmp eq i16 %8, -8446, !dbg !6671
  ret i1 %11, !dbg !6673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6674 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6675
  %2 = or i32 %1, 16, !dbg !6675
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6675
  ret void, !dbg !6676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6677 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6680, metadata !DIExpression()), !dbg !6681
  br label %1, !dbg !6682

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6680, metadata !DIExpression()), !dbg !6681
  tail call fastcc void @__NVIC_SetPriority.33(i32 noundef %2) #24, !dbg !6684
  %3 = add nuw nsw i32 %2, 1, !dbg !6687
  call void @llvm.dbg.value(metadata i32 %3, metadata !6680, metadata !DIExpression()), !dbg !6681
  %4 = icmp eq i32 %3, 127, !dbg !6688
  br i1 %4, label %5, label %1, !dbg !6682, !llvm.loop !6689

5:                                                ; preds = %1
  ret void, !dbg !6691
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.33(i32 noundef %0) unnamed_addr #15 !dbg !6692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6694, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i32 1, metadata !6695, metadata !DIExpression()), !dbg !6696
  %2 = and i32 %0, 15, !dbg !6697
  %3 = add nsw i32 %2, -4, !dbg !6697
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6697
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6697
  %6 = icmp slt i32 %0, 0, !dbg !6697
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6697
  store volatile i8 16, i8* %7, align 1, !dbg !6698
  ret void, !dbg !6700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6801, metadata !DIExpression()), !dbg !6802
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6803
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6805
  br i1 %3, label %4, label %12, !dbg !6806

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !6807, !srcloc !6819
  call void @llvm.dbg.value(metadata i32 %5, metadata !6810, metadata !DIExpression()) #22, !dbg !6820
  %6 = icmp eq i32 %5, 0, !dbg !6821
  br i1 %6, label %12, label %7, !dbg !6822

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6823
  %9 = or i32 %8, 268435456, !dbg !6823
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6823
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6825
  %11 = and i32 %10, -32769, !dbg !6825
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6825
  br label %12, !dbg !6826

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #23, !dbg !6827
  ret void, !dbg !6828
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !6829 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6836, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i8* %1, metadata !6837, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i8* %0, metadata !6838, metadata !DIExpression()), !dbg !6839
  %3 = load i8, i8* %1, align 1, !dbg !6840
  %4 = icmp eq i8 %3, 0, !dbg !6841
  br i1 %4, label %13, label %5, !dbg !6842

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6836, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i8* %8, metadata !6837, metadata !DIExpression()), !dbg !6839
  store i8 %6, i8* %7, align 1, !dbg !6843
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6845
  call void @llvm.dbg.value(metadata i8* %9, metadata !6836, metadata !DIExpression()), !dbg !6839
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6846
  call void @llvm.dbg.value(metadata i8* %10, metadata !6837, metadata !DIExpression()), !dbg !6839
  %11 = load i8, i8* %10, align 1, !dbg !6840
  %12 = icmp eq i8 %11, 0, !dbg !6841
  br i1 %12, label %13, label %5, !dbg !6842, !llvm.loop !6847

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6849
  ret i8* %0, !dbg !6850
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !6851 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6855, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i8* %1, metadata !6856, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 %2, metadata !6857, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i8* %0, metadata !6858, metadata !DIExpression()), !dbg !6859
  %4 = icmp eq i32 %2, 0, !dbg !6860
  br i1 %4, label %22, label %5, !dbg !6861

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6855, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 %7, metadata !6857, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i8* %8, metadata !6856, metadata !DIExpression()), !dbg !6859
  %9 = load i8, i8* %8, align 1, !dbg !6862
  %10 = icmp eq i8 %9, 0, !dbg !6863
  br i1 %10, label %16, label %11, !dbg !6864

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6865
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6867
  call void @llvm.dbg.value(metadata i8* %12, metadata !6856, metadata !DIExpression()), !dbg !6859
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6868
  call void @llvm.dbg.value(metadata i8* %13, metadata !6855, metadata !DIExpression()), !dbg !6859
  %14 = add i32 %7, -1, !dbg !6869
  call void @llvm.dbg.value(metadata i32 %14, metadata !6857, metadata !DIExpression()), !dbg !6859
  %15 = icmp eq i32 %14, 0, !dbg !6860
  br i1 %15, label %22, label %5, !dbg !6861, !llvm.loop !6870

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6855, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 %18, metadata !6857, metadata !DIExpression()), !dbg !6859
  store i8 0, i8* %17, align 1, !dbg !6872
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6874
  call void @llvm.dbg.value(metadata i8* %19, metadata !6855, metadata !DIExpression()), !dbg !6859
  %20 = add i32 %18, -1, !dbg !6875
  call void @llvm.dbg.value(metadata i32 %20, metadata !6857, metadata !DIExpression()), !dbg !6859
  %21 = icmp eq i32 %20, 0, !dbg !6876
  br i1 %21, label %22, label %16, !dbg !6877, !llvm.loop !6878

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6880
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !6881 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6885, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.value(metadata i32 %1, metadata !6886, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.value(metadata i32 %1, metadata !6887, metadata !DIExpression()), !dbg !6888
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6889

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6885, metadata !DIExpression()), !dbg !6888
  %6 = load i8, i8* %5, align 1, !dbg !6890
  %7 = icmp eq i8 %6, %3, !dbg !6891
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6892
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6893
  call void @llvm.dbg.value(metadata i8* %10, metadata !6885, metadata !DIExpression()), !dbg !6888
  br i1 %9, label %11, label %4, !dbg !6892, !llvm.loop !6895

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6897
  ret i8* %12, !dbg !6898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !6899 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6901, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 %1, metadata !6902, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i8* null, metadata !6903, metadata !DIExpression()), !dbg !6904
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6905

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6904
  call void @llvm.dbg.value(metadata i8* %6, metadata !6903, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i8* %5, metadata !6901, metadata !DIExpression()), !dbg !6904
  %7 = load i8, i8* %5, align 1, !dbg !6906
  %8 = icmp eq i8 %7, %3, !dbg !6909
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6910
  call void @llvm.dbg.value(metadata i8* %9, metadata !6903, metadata !DIExpression()), !dbg !6904
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6911
  call void @llvm.dbg.value(metadata i8* %10, metadata !6901, metadata !DIExpression()), !dbg !6904
  %11 = icmp eq i8 %7, 0, !dbg !6912
  br i1 %11, label %12, label %4, !dbg !6912, !llvm.loop !6913

12:                                               ; preds = %4
  ret i8* %9, !dbg !6915
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #17 !dbg !6916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6920, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.value(metadata i32 0, metadata !6921, metadata !DIExpression()), !dbg !6922
  %2 = load i8, i8* %0, align 1, !dbg !6923
  %3 = icmp eq i8 %2, 0, !dbg !6924
  br i1 %3, label %11, label %4, !dbg !6925

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6921, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.value(metadata i8* %6, metadata !6920, metadata !DIExpression()), !dbg !6922
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6926
  call void @llvm.dbg.value(metadata i8* %7, metadata !6920, metadata !DIExpression()), !dbg !6922
  %8 = add i32 %5, 1, !dbg !6928
  call void @llvm.dbg.value(metadata i32 %8, metadata !6921, metadata !DIExpression()), !dbg !6922
  %9 = load i8, i8* %7, align 1, !dbg !6923
  %10 = icmp eq i8 %9, 0, !dbg !6924
  br i1 %10, label %11, label %4, !dbg !6925, !llvm.loop !6929

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6922
  ret i32 %12, !dbg !6931
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !6932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6936, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.value(metadata i32 %1, metadata !6937, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.value(metadata i32 0, metadata !6938, metadata !DIExpression()), !dbg !6939
  %3 = load i8, i8* %0, align 1, !dbg !6940
  %4 = icmp ne i8 %3, 0, !dbg !6941
  %5 = icmp ne i32 %1, 0, !dbg !6942
  %6 = and i1 %4, %5, !dbg !6942
  br i1 %6, label %7, label %16, !dbg !6943

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6938, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.value(metadata i8* %9, metadata !6936, metadata !DIExpression()), !dbg !6939
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6944
  call void @llvm.dbg.value(metadata i8* %10, metadata !6936, metadata !DIExpression()), !dbg !6939
  %11 = add nuw i32 %8, 1, !dbg !6946
  call void @llvm.dbg.value(metadata i32 %11, metadata !6938, metadata !DIExpression()), !dbg !6939
  %12 = load i8, i8* %10, align 1, !dbg !6940
  %13 = icmp ne i8 %12, 0, !dbg !6941
  %14 = icmp ult i32 %11, %1, !dbg !6942
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6942
  br i1 %15, label %7, label %16, !dbg !6943, !llvm.loop !6947

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6939
  ret i32 %17, !dbg !6949
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !6950 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6954, metadata !DIExpression()), !dbg !6956
  call void @llvm.dbg.value(metadata i8* %1, metadata !6955, metadata !DIExpression()), !dbg !6956
  %3 = load i8, i8* %0, align 1, !dbg !6957
  %4 = load i8, i8* %1, align 1, !dbg !6958
  %5 = icmp ne i8 %3, %4, !dbg !6959
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6960
  br i1 %7, label %18, label %8, !dbg !6960

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6955, metadata !DIExpression()), !dbg !6956
  call void @llvm.dbg.value(metadata i8* %10, metadata !6954, metadata !DIExpression()), !dbg !6956
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6961
  call void @llvm.dbg.value(metadata i8* %11, metadata !6954, metadata !DIExpression()), !dbg !6956
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6963
  call void @llvm.dbg.value(metadata i8* %12, metadata !6955, metadata !DIExpression()), !dbg !6956
  %13 = load i8, i8* %11, align 1, !dbg !6957
  %14 = load i8, i8* %12, align 1, !dbg !6958
  %15 = icmp ne i8 %13, %14, !dbg !6959
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6960
  br i1 %17, label %18, label %8, !dbg !6960, !llvm.loop !6964

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6957
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6958
  %21 = zext i8 %19 to i32, !dbg !6967
  %22 = zext i8 %20 to i32, !dbg !6968
  %23 = sub nsw i32 %21, %22, !dbg !6969
  ret i32 %23, !dbg !6970
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !6971 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6975, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.value(metadata i8* %1, metadata !6976, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.value(metadata i32 %2, metadata !6977, metadata !DIExpression()), !dbg !6978
  %4 = icmp eq i32 %2, 0, !dbg !6979
  br i1 %4, label %23, label %5, !dbg !6979

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6977, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.value(metadata i8* %7, metadata !6976, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.value(metadata i8* %8, metadata !6975, metadata !DIExpression()), !dbg !6978
  %9 = load i8, i8* %8, align 1, !dbg !6980
  %10 = load i8, i8* %7, align 1, !dbg !6981
  %11 = icmp ne i8 %9, %10, !dbg !6982
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6983
  br i1 %13, label %19, label %14, !dbg !6983

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6984
  call void @llvm.dbg.value(metadata i8* %15, metadata !6975, metadata !DIExpression()), !dbg !6978
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6986
  call void @llvm.dbg.value(metadata i8* %16, metadata !6976, metadata !DIExpression()), !dbg !6978
  %17 = add i32 %6, -1, !dbg !6987
  call void @llvm.dbg.value(metadata i32 %17, metadata !6977, metadata !DIExpression()), !dbg !6978
  %18 = icmp eq i32 %17, 0, !dbg !6979
  br i1 %18, label %23, label %5, !dbg !6979, !llvm.loop !6988

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6991
  %21 = zext i8 %10 to i32, !dbg !6992
  %22 = sub nsw i32 %20, %21, !dbg !6993
  br label %23, !dbg !6994

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6994
  ret i32 %24, !dbg !6995
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !6996 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7001, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8* %1, metadata !7002, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8** %2, metadata !7003, metadata !DIExpression()), !dbg !7006
  %4 = icmp eq i8* %0, null, !dbg !7007
  br i1 %4, label %5, label %7, !dbg !7007

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7008
  br label %7, !dbg !7007

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7007
  call void @llvm.dbg.value(metadata i8* %8, metadata !7004, metadata !DIExpression()), !dbg !7006
  %9 = load i8, i8* %8, align 1, !dbg !7009
  %10 = icmp eq i8 %9, 0, !dbg !7009
  br i1 %10, label %33, label %11, !dbg !7010

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7004, metadata !DIExpression()), !dbg !7006
  %14 = zext i8 %12 to i32, !dbg !7009
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7011
  %16 = icmp eq i8* %15, null, !dbg !7010
  br i1 %16, label %21, label %17, !dbg !7012

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7013
  call void @llvm.dbg.value(metadata i8* %18, metadata !7004, metadata !DIExpression()), !dbg !7006
  %19 = load i8, i8* %18, align 1, !dbg !7009
  %20 = icmp eq i8 %19, 0, !dbg !7009
  br i1 %20, label %33, label %11, !dbg !7010, !llvm.loop !7015

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7005, metadata !DIExpression()), !dbg !7006
  %24 = zext i8 %22 to i32, !dbg !7017
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7018
  %26 = icmp eq i8* %25, null, !dbg !7019
  br i1 %26, label %27, label %31, !dbg !7020

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7021
  call void @llvm.dbg.value(metadata i8* %28, metadata !7005, metadata !DIExpression()), !dbg !7006
  %29 = load i8, i8* %28, align 1, !dbg !7017
  %30 = icmp eq i8 %29, 0, !dbg !7017
  br i1 %30, label %33, label %21, !dbg !7023, !llvm.loop !7024

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7026
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7029
  br label %33, !dbg !7030

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7006
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7006
  store i8* %34, i8** %2, align 4, !dbg !7006
  ret i8* %35, !dbg !7031
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7032 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7034, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.value(metadata i8* %1, metadata !7035, metadata !DIExpression()), !dbg !7036
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7037
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7038
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7039
  ret i8* %0, !dbg !7040
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7041 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7043, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8* %1, metadata !7044, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %2, metadata !7045, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8* %0, metadata !7046, metadata !DIExpression()), !dbg !7048
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7049
  call void @llvm.dbg.value(metadata i32 %4, metadata !7047, metadata !DIExpression()), !dbg !7048
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7050
  call void @llvm.dbg.value(metadata i8* %5, metadata !7043, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8* %1, metadata !7044, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %2, metadata !7045, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %2, metadata !7045, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7048
  %6 = icmp eq i32 %2, 0, !dbg !7051
  br i1 %6, label %18, label %7, !dbg !7052

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7053
  call void @llvm.dbg.value(metadata i8* %9, metadata !7043, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8* %10, metadata !7044, metadata !DIExpression()), !dbg !7048
  %12 = load i8, i8* %10, align 1, !dbg !7054
  %13 = icmp eq i8 %12, 0, !dbg !7055
  br i1 %13, label %18, label %14, !dbg !7056

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7057
  call void @llvm.dbg.value(metadata i8* %15, metadata !7044, metadata !DIExpression()), !dbg !7048
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7059
  call void @llvm.dbg.value(metadata i8* %16, metadata !7043, metadata !DIExpression()), !dbg !7048
  store i8 %12, i8* %9, align 1, !dbg !7060
  call void @llvm.dbg.value(metadata i32 %11, metadata !7045, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %11, metadata !7045, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7048
  %17 = icmp eq i32 %11, 0, !dbg !7051
  br i1 %17, label %18, label %7, !dbg !7052, !llvm.loop !7061

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7048
  store i8 0, i8* %19, align 1, !dbg !7063
  ret i8* %0, !dbg !7064
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7065 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7069, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i8* %1, metadata !7070, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32 %2, metadata !7071, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i8* %0, metadata !7072, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i8* %1, metadata !7073, metadata !DIExpression()), !dbg !7074
  %4 = icmp eq i32 %2, 0, !dbg !7075
  br i1 %4, label %31, label %5, !dbg !7077

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i8* %0, metadata !7072, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32 %2, metadata !7071, metadata !DIExpression()), !dbg !7074
  %6 = add i32 %2, -1, !dbg !7078
  call void @llvm.dbg.value(metadata i32 %6, metadata !7071, metadata !DIExpression()), !dbg !7074
  %7 = icmp eq i32 %6, 0, !dbg !7079
  br i1 %7, label %23, label %8, !dbg !7080

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7081
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7081
  br label %11, !dbg !7081

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i8* %14, metadata !7072, metadata !DIExpression()), !dbg !7074
  %15 = load i8, i8* %14, align 1, !dbg !7082
  %16 = load i8, i8* %13, align 1, !dbg !7083
  %17 = icmp eq i8 %15, %16, !dbg !7084
  br i1 %17, label %18, label %23, !dbg !7081

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7085
  call void @llvm.dbg.value(metadata i8* %19, metadata !7072, metadata !DIExpression()), !dbg !7074
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7087
  call void @llvm.dbg.value(metadata i8* %20, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32 %12, metadata !7071, metadata !DIExpression()), !dbg !7074
  %21 = add i32 %12, -1, !dbg !7078
  call void @llvm.dbg.value(metadata i32 %21, metadata !7071, metadata !DIExpression()), !dbg !7074
  %22 = icmp eq i32 %21, 0, !dbg !7079
  br i1 %22, label %23, label %11, !dbg !7080, !llvm.loop !7088

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7074
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7074
  %26 = load i8, i8* %24, align 1, !dbg !7090
  %27 = zext i8 %26 to i32, !dbg !7090
  %28 = load i8, i8* %25, align 1, !dbg !7091
  %29 = zext i8 %28 to i32, !dbg !7091
  %30 = sub nsw i32 %27, %29, !dbg !7092
  br label %31, !dbg !7093

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7074
  ret i32 %32, !dbg !7094
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7095 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7099, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i8* %1, metadata !7100, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i32 %2, metadata !7101, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i8* %0, metadata !7102, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i8* %1, metadata !7103, metadata !DIExpression()), !dbg !7104
  %4 = ptrtoint i8* %0 to i32, !dbg !7105
  %5 = ptrtoint i8* %1 to i32, !dbg !7105
  %6 = sub i32 %4, %5, !dbg !7105
  %7 = icmp ult i32 %6, %2, !dbg !7107
  br i1 %7, label %10, label %8, !dbg !7108

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7103, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i8* %0, metadata !7102, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i32 %2, metadata !7101, metadata !DIExpression()), !dbg !7104
  %9 = icmp eq i32 %2, 0, !dbg !7109
  br i1 %9, label %26, label %17, !dbg !7111

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7101, metadata !DIExpression()), !dbg !7104
  %12 = add i32 %11, -1, !dbg !7112
  call void @llvm.dbg.value(metadata i32 %12, metadata !7101, metadata !DIExpression()), !dbg !7104
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7115
  %14 = load i8, i8* %13, align 1, !dbg !7115
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7116
  store i8 %14, i8* %15, align 1, !dbg !7117
  %16 = icmp eq i32 %12, 0, !dbg !7118
  br i1 %16, label %26, label %10, !dbg !7119, !llvm.loop !7120

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7103, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i8* %19, metadata !7102, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i32 %20, metadata !7101, metadata !DIExpression()), !dbg !7104
  %21 = load i8, i8* %18, align 1, !dbg !7122
  store i8 %21, i8* %19, align 1, !dbg !7124
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7125
  call void @llvm.dbg.value(metadata i8* %22, metadata !7102, metadata !DIExpression()), !dbg !7104
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7126
  call void @llvm.dbg.value(metadata i8* %23, metadata !7103, metadata !DIExpression()), !dbg !7104
  %24 = add i32 %20, -1, !dbg !7127
  call void @llvm.dbg.value(metadata i32 %24, metadata !7101, metadata !DIExpression()), !dbg !7104
  %25 = icmp eq i32 %24, 0, !dbg !7109
  br i1 %25, label %26, label %17, !dbg !7111, !llvm.loop !7128

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7130
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7131 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7137, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i8* %1, metadata !7138, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i32 %2, metadata !7139, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i8* %0, metadata !7140, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i8* %1, metadata !7141, metadata !DIExpression()), !dbg !7142
  %4 = icmp eq i32 %2, 0, !dbg !7143
  br i1 %4, label %14, label %5, !dbg !7144

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7141, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i8* %7, metadata !7140, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i32 %8, metadata !7139, metadata !DIExpression()), !dbg !7142
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7145
  call void @llvm.dbg.value(metadata i8* %9, metadata !7141, metadata !DIExpression()), !dbg !7142
  %10 = load i8, i8* %6, align 1, !dbg !7147
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7148
  call void @llvm.dbg.value(metadata i8* %11, metadata !7140, metadata !DIExpression()), !dbg !7142
  store i8 %10, i8* %7, align 1, !dbg !7149
  %12 = add i32 %8, -1, !dbg !7150
  call void @llvm.dbg.value(metadata i32 %12, metadata !7139, metadata !DIExpression()), !dbg !7142
  %13 = icmp eq i32 %12, 0, !dbg !7143
  br i1 %13, label %14, label %5, !dbg !7144, !llvm.loop !7151

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7153
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7154 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7158, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i32 %1, metadata !7159, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i32 %2, metadata !7160, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i8* %0, metadata !7161, metadata !DIExpression()), !dbg !7163
  %4 = trunc i32 %1 to i8, !dbg !7164
  call void @llvm.dbg.value(metadata i8 %4, metadata !7162, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i32 %2, metadata !7160, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i8* %0, metadata !7161, metadata !DIExpression()), !dbg !7163
  %5 = icmp eq i32 %2, 0, !dbg !7165
  br i1 %5, label %12, label %6, !dbg !7166

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7160, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i8* %8, metadata !7161, metadata !DIExpression()), !dbg !7163
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7167
  call void @llvm.dbg.value(metadata i8* %9, metadata !7161, metadata !DIExpression()), !dbg !7163
  store i8 %4, i8* %8, align 1, !dbg !7169
  %10 = add i32 %7, -1, !dbg !7170
  call void @llvm.dbg.value(metadata i32 %10, metadata !7160, metadata !DIExpression()), !dbg !7163
  %11 = icmp eq i32 %10, 0, !dbg !7165
  br i1 %11, label %12, label %6, !dbg !7166, !llvm.loop !7171

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7173
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7174 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7178, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.value(metadata i32 %1, metadata !7179, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.value(metadata i32 %2, metadata !7180, metadata !DIExpression()), !dbg !7184
  %4 = icmp eq i32 %2, 0, !dbg !7185
  br i1 %4, label %17, label %5, !dbg !7186

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7187

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7188
  call void @llvm.dbg.value(metadata i8* %9, metadata !7181, metadata !DIExpression()), !dbg !7188
  call void @llvm.dbg.value(metadata i32 %8, metadata !7180, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.value(metadata i8* %9, metadata !7181, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7188
  %10 = load i8, i8* %9, align 1, !dbg !7189
  %11 = icmp eq i8 %10, %6, !dbg !7192
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7193
  call void @llvm.dbg.value(metadata i8* %12, metadata !7181, metadata !DIExpression()), !dbg !7188
  call void @llvm.dbg.value(metadata i32 %13, metadata !7180, metadata !DIExpression()), !dbg !7184
  br i1 %15, label %16, label %7, !dbg !7193, !llvm.loop !7194

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7196

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7184
  ret i8* %19, !dbg !7197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7198 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7200, metadata !DIExpression()), !dbg !7201
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7202
  ret void, !dbg !7203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7206, metadata !DIExpression()), !dbg !7207
  ret i32 -1, !dbg !7208
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7213, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.value(metadata i32* %1, metadata !7214, metadata !DIExpression()), !dbg !7215
  %3 = ptrtoint i32* %1 to i32, !dbg !7216
  %4 = and i32 %3, -2, !dbg !7216
  %5 = icmp eq i32 %4, 2, !dbg !7216
  br i1 %5, label %6, label %9, !dbg !7216

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7217
  %8 = tail call i32 %7(i32 noundef %0) #23, !dbg !7217
  br label %9, !dbg !7218

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7218
  ret i32 %10, !dbg !7219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7222, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i32* %1, metadata !7223, metadata !DIExpression()), !dbg !7224
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !7225
  ret i32 %3, !dbg !7226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7230, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32* %1, metadata !7231, metadata !DIExpression()), !dbg !7232
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7233, !srcloc !7235
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !7236
  ret i32 %3, !dbg !7237
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7238 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7243, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata i32* %1, metadata !7244, metadata !DIExpression()), !dbg !7247
  %3 = tail call i32 @strlen(i8* noundef %0) #23, !dbg !7248
  call void @llvm.dbg.value(metadata i32 %3, metadata !7245, metadata !DIExpression()), !dbg !7247
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !7249
  call void @llvm.dbg.value(metadata i32 %4, metadata !7246, metadata !DIExpression()), !dbg !7247
  %5 = icmp ne i32 %3, %4, !dbg !7250
  %6 = sext i1 %5 to i32, !dbg !7251
  ret i32 %6, !dbg !7252
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7253 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7257, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.value(metadata i32 %1, metadata !7258, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.value(metadata i32 %2, metadata !7259, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.value(metadata i32* %3, metadata !7260, metadata !DIExpression()), !dbg !7261
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !7262
  ret i32 %5, !dbg !7263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7266, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata i32 %1, metadata !7267, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata i32 %2, metadata !7268, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata i32* %3, metadata !7269, metadata !DIExpression()), !dbg !7270
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7271, !srcloc !7273
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !7274
  ret i32 %5, !dbg !7275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7276 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7278, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %1, metadata !7279, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %2, metadata !7280, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32* %3, metadata !7281, metadata !DIExpression()), !dbg !7286
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7287
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7289
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7289
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7289
  br i1 %11, label %33, label %12, !dbg !7289

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7286
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7286
  call void @llvm.dbg.value(metadata i8* %14, metadata !7284, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %13, metadata !7282, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %1, metadata !7283, metadata !DIExpression()), !dbg !7286
  br label %15, !dbg !7290

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7292
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7286
  call void @llvm.dbg.value(metadata i8* %17, metadata !7284, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %16, metadata !7283, metadata !DIExpression()), !dbg !7286
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7293
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7296
  call void @llvm.dbg.value(metadata i8* %19, metadata !7284, metadata !DIExpression()), !dbg !7286
  %20 = load i8, i8* %17, align 1, !dbg !7297
  %21 = zext i8 %20 to i32, !dbg !7298
  %22 = tail call i32 %18(i32 noundef %21) #23, !dbg !7293
  %23 = icmp eq i32 %22, -1, !dbg !7299
  br i1 %23, label %30, label %24, !dbg !7300

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7301
  call void @llvm.dbg.value(metadata i32 %25, metadata !7283, metadata !DIExpression()), !dbg !7286
  %26 = icmp eq i32 %25, 0, !dbg !7302
  br i1 %26, label %27, label %15, !dbg !7303, !llvm.loop !7304

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7306
  call void @llvm.dbg.value(metadata i32 %28, metadata !7282, metadata !DIExpression()), !dbg !7286
  %29 = icmp eq i32 %28, 0, !dbg !7307
  br i1 %29, label %30, label %12, !dbg !7308, !llvm.loop !7309

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7286
  call void @llvm.dbg.value(metadata i32 %31, metadata !7282, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.label(metadata !7285), !dbg !7312
  %32 = sub i32 %2, %31, !dbg !7313
  br label %33, !dbg !7314

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7286
  ret i32 %34, !dbg !7315
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7316 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7320, metadata !DIExpression()), !dbg !7321
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !7322
  %3 = icmp eq i32 %2, -1, !dbg !7324
  br i1 %3, label %8, label %4, !dbg !7325

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !7326
  %6 = icmp eq i32 %5, -1, !dbg !7327
  %7 = sext i1 %6 to i32, !dbg !7326
  br label %8, !dbg !7328

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7321
  ret i32 %9, !dbg !7329
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7330 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7332, metadata !DIExpression()), !dbg !7333
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !7334
  br i1 %2, label %3, label %4, !dbg !7336

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !7337
  br label %4, !dbg !7338

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7333
  ret i32 %5, !dbg !7339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7340 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7345, metadata !DIExpression()), !dbg !7346
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7347, !srcloc !7349
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !7350
  ret i1 %1, !dbg !7351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7352 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #23, !dbg !7353
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #23, !dbg !7354
  ret void, !dbg !7355
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7358, metadata !DIExpression()), !dbg !7359
  %2 = icmp eq i32 %0, 10, !dbg !7360
  br i1 %2, label %3, label %4, !dbg !7362

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !7363
  br label %4, !dbg !7365

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7366
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !7367
  ret i32 %0, !dbg !7368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7369 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7372, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.value(metadata i8 %0, metadata !7373, metadata !DIExpression()), !dbg !7374
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7375, !srcloc !7377
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !7378
  ret void, !dbg !7379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7380 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7382, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i8 %0, metadata !7383, metadata !DIExpression()), !dbg !7385
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7386
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7384, metadata !DIExpression()), !dbg !7385
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7387
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7387
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #23, !dbg !7388
  ret void, !dbg !7389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7390 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7392, metadata !DIExpression()), !dbg !7393
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !7394
  ret i1 %1, !dbg !7395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !7396 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7443, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7444, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7445, metadata !DIExpression()), !dbg !7446
  ret void, !dbg !7447
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7448 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7450, metadata !DIExpression()), !dbg !7463
  call void @llvm.dbg.value(metadata i8 %1, metadata !7451, metadata !DIExpression()), !dbg !7463
  call void @llvm.dbg.value(metadata i32 %2, metadata !7452, metadata !DIExpression()), !dbg !7463
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7464
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !7464
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !7464
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !7453, metadata !DIExpression()), !dbg !7463
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !7465
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7465
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !7455, metadata !DIExpression()), !dbg !7463
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !7466
  %13 = icmp eq i32 %12, 196608, !dbg !7466
  br i1 %13, label %66, label %14, !dbg !7466

14:                                               ; preds = %3
  %15 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !7468
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #22, !dbg !7468
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !7456, metadata !DIExpression()), !dbg !7469
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !7470
  %17 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %16, align 4, !dbg !7470
  %18 = zext i8 %1 to i32, !dbg !7471
  %19 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, i32 1, !dbg !7472
  %20 = load i32, i32* %19, align 4, !dbg !7472
  %21 = inttoptr i32 %20 to i32*, !dbg !7473
  call void @llvm.dbg.value(metadata i32* %21, metadata !7461, metadata !DIExpression()), !dbg !7463
  %22 = load volatile i32, i32* %21, align 4, !dbg !7474
  call void @llvm.dbg.value(metadata i32 %22, metadata !7462, metadata !DIExpression()), !dbg !7463
  %23 = and i32 %2, 2, !dbg !7475
  %24 = icmp eq i32 %23, 0, !dbg !7477
  br i1 %24, label %25, label %64, !dbg !7478

25:                                               ; preds = %14
  %26 = and i32 %2, 48, !dbg !7479
  %27 = icmp eq i32 %26, 0, !dbg !7479
  br i1 %27, label %36, label %28, !dbg !7479

28:                                               ; preds = %25
  %29 = and i32 %2, 16, !dbg !7481
  %30 = icmp eq i32 %29, 0, !dbg !7482
  call void @llvm.dbg.value(metadata i32 %22, metadata !7462, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7463
  br i1 %30, label %33, label %31, !dbg !7483

31:                                               ; preds = %28
  %32 = or i32 %22, 48, !dbg !7485
  call void @llvm.dbg.value(metadata i32 %32, metadata !7462, metadata !DIExpression()), !dbg !7463
  br label %38, !dbg !7488

33:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %22, metadata !7462, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7463
  %34 = and i32 %22, -49, !dbg !7489
  %35 = or i32 %34, 16, !dbg !7489
  call void @llvm.dbg.value(metadata i32 %35, metadata !7462, metadata !DIExpression()), !dbg !7463
  br label %38

36:                                               ; preds = %25
  %37 = and i32 %22, -17, !dbg !7491
  call void @llvm.dbg.value(metadata i32 %37, metadata !7462, metadata !DIExpression()), !dbg !7463
  br label %38

38:                                               ; preds = %31, %33, %36
  %39 = phi i32 [ %32, %31 ], [ %35, %33 ], [ %37, %36 ], !dbg !7493
  call void @llvm.dbg.value(metadata i32 %39, metadata !7462, metadata !DIExpression()), !dbg !7463
  %40 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, !dbg !7494
  %41 = bitcast %struct.pinctrl_soc_pinmux* %40 to i8*, !dbg !7495
  %42 = call i8* @memcpy(i8* noundef nonnull %15, i8* noundef %41, i32 noundef 20) #23, !dbg !7496
  %43 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !7497
  store i32 %39, i32* %43, align 4, !dbg !7498
  %44 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #23, !dbg !7499
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #23, !dbg !7500
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #23, !dbg !7501
  br i1 %11, label %58, label %45, !dbg !7502

45:                                               ; preds = %38
  %46 = and i32 %2, 262144, !dbg !7503
  %47 = icmp eq i32 %46, 0, !dbg !7507
  br i1 %47, label %48, label %51, !dbg !7508

48:                                               ; preds = %45
  %49 = and i32 %2, 524288, !dbg !7509
  %50 = icmp eq i32 %49, 0, !dbg !7511
  br i1 %50, label %53, label %51, !dbg !7512

51:                                               ; preds = %48, %45
  %52 = phi i32 [ 0, %45 ], [ 1, %48 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %18, i32 noundef %52) #23, !dbg !7513
  br label %53, !dbg !7514

53:                                               ; preds = %51, %48
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7514
  %55 = load volatile i32, i32* %54, align 4, !dbg !7514
  %56 = shl nuw i32 1, %18, !dbg !7514
  %57 = or i32 %55, %56, !dbg !7514
  store volatile i32 %57, i32* %54, align 4, !dbg !7514
  br label %64, !dbg !7515

58:                                               ; preds = %38
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7516
  %60 = load volatile i32, i32* %59, align 4, !dbg !7516
  %61 = shl nuw i32 1, %18, !dbg !7516
  %62 = xor i32 %61, -1, !dbg !7516
  %63 = and i32 %60, %62, !dbg !7516
  store volatile i32 %63, i32* %59, align 4, !dbg !7516
  br label %64

64:                                               ; preds = %53, %58, %14
  %65 = phi i32 [ -134, %14 ], [ 0, %58 ], [ 0, %53 ], !dbg !7463
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #22, !dbg !7518
  br label %66

66:                                               ; preds = %3, %64
  %67 = phi i32 [ %65, %64 ], [ -134, %3 ], !dbg !7463
  ret i32 %67, !dbg !7518
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !7519 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7523, metadata !DIExpression()), !dbg !7527
  call void @llvm.dbg.value(metadata i32* %1, metadata !7524, metadata !DIExpression()), !dbg !7527
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7528
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7528
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7528
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7525, metadata !DIExpression()), !dbg !7527
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7529
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7529
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7526, metadata !DIExpression()), !dbg !7527
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !7530
  store i32 %8, i32* %1, align 4, !dbg !7531
  ret i32 0, !dbg !7532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !7533 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7535, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i32 %1, metadata !7536, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i32 %2, metadata !7537, metadata !DIExpression()), !dbg !7540
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7541
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !7541
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !7541
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !7538, metadata !DIExpression()), !dbg !7540
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !7542
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !7542
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !7539, metadata !DIExpression()), !dbg !7540
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #24, !dbg !7543
  %10 = xor i32 %1, -1, !dbg !7544
  %11 = and i32 %9, %10, !dbg !7545
  %12 = and i32 %2, %1, !dbg !7546
  %13 = or i32 %11, %12, !dbg !7547
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #24, !dbg !7548
  ret i32 0, !dbg !7549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7552, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.value(metadata i32 %1, metadata !7553, metadata !DIExpression()), !dbg !7556
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7557
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7557
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7557
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7554, metadata !DIExpression()), !dbg !7556
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7558
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7558
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7555, metadata !DIExpression()), !dbg !7556
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !7559
  %9 = or i32 %8, %1, !dbg !7560
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #24, !dbg !7561
  ret i32 0, !dbg !7562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7563 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7565, metadata !DIExpression()), !dbg !7569
  call void @llvm.dbg.value(metadata i32 %1, metadata !7566, metadata !DIExpression()), !dbg !7569
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7570
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7570
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7570
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7567, metadata !DIExpression()), !dbg !7569
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7571
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7571
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7568, metadata !DIExpression()), !dbg !7569
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !7572
  %9 = xor i32 %1, -1, !dbg !7573
  %10 = and i32 %8, %9, !dbg !7574
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #24, !dbg !7575
  ret i32 0, !dbg !7576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7579, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.value(metadata i32 %1, metadata !7580, metadata !DIExpression()), !dbg !7583
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7584
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7584
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7584
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7581, metadata !DIExpression()), !dbg !7583
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7585
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7585
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7582, metadata !DIExpression()), !dbg !7583
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !7586
  %9 = xor i32 %8, %1, !dbg !7587
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #24, !dbg !7588
  ret i32 0, !dbg !7589
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7590 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7592, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata i8 %1, metadata !7593, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata i32 %2, metadata !7594, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata i32 %3, metadata !7595, metadata !DIExpression()), !dbg !7602
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7603
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !7603
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !7603
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !7596, metadata !DIExpression()), !dbg !7602
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !7604
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7604
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !7597, metadata !DIExpression()), !dbg !7602
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7605
  %11 = load volatile i32, i32* %10, align 4, !dbg !7605
  %12 = zext i8 %1 to i32, !dbg !7607
  %13 = shl nuw i32 1, %12, !dbg !7607
  %14 = and i32 %11, %13, !dbg !7608
  %15 = icmp ne i32 %14, 0, !dbg !7609
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !7610
  br i1 %17, label %77, label %18, !dbg !7610

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !7611
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !7613
  br i1 %21, label %29, label %22, !dbg !7613

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !7614
  br i1 %24, label %29, label %25, !dbg !7614

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !7616
  %27 = and i1 %26, %23, !dbg !7618
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !7619
  call void @llvm.dbg.value(metadata i32 %30, metadata !7600, metadata !DIExpression()), !dbg !7602
  %31 = icmp ult i8 %1, 16, !dbg !7620
  br i1 %31, label %32, label %35, !dbg !7622

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !7623
  call void @llvm.dbg.value(metadata i8 %33, metadata !7601, metadata !DIExpression()), !dbg !7602
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !7625
  call void @llvm.dbg.value(metadata i32* %34, metadata !7598, metadata !DIExpression()), !dbg !7602
  br label %41, !dbg !7626

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !7627
  br i1 %36, label %37, label %77, !dbg !7629

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !7630
  %39 = add nsw i8 %38, -32, !dbg !7630
  call void @llvm.dbg.value(metadata i8 %39, metadata !7601, metadata !DIExpression()), !dbg !7602
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !7632
  call void @llvm.dbg.value(metadata i32* %40, metadata !7598, metadata !DIExpression()), !dbg !7602
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !7633
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !7633
  call void @llvm.dbg.value(metadata i8 %43, metadata !7601, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata i32* %42, metadata !7598, metadata !DIExpression()), !dbg !7602
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !7634, !srcloc !7642
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !7634
  call void @llvm.dbg.value(metadata i32 %45, metadata !7639, metadata !DIExpression()) #22, !dbg !7643
  call void @llvm.dbg.value(metadata i32 undef, metadata !7640, metadata !DIExpression()) #22, !dbg !7643
  call void @llvm.dbg.value(metadata i32 %45, metadata !7599, metadata !DIExpression()), !dbg !7602
  %46 = load volatile i32, i32* %42, align 4, !dbg !7644
  %47 = zext i8 %43 to i32, !dbg !7645
  %48 = shl nuw i32 3, %47, !dbg !7646
  %49 = xor i32 %48, -1, !dbg !7647
  %50 = and i32 %46, %49, !dbg !7648
  %51 = shl nuw i32 %30, %47, !dbg !7649
  %52 = or i32 %50, %51, !dbg !7650
  store volatile i32 %52, i32* %42, align 4, !dbg !7651
  %53 = icmp eq i32 %3, 100663296, !dbg !7652
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !7652
  %55 = load volatile i32, i32* %54, align 4, !dbg !7652
  %56 = or i32 %55, %13, !dbg !7652
  %57 = xor i32 %13, -1, !dbg !7652
  %58 = and i32 %55, %57, !dbg !7652
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !7652
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !7652
  store volatile i32 %59, i32* %60, align 4, !dbg !7652
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !7653
  %62 = load volatile i32, i32* %61, align 4, !dbg !7653
  br i1 %16, label %63, label %68, !dbg !7653

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !7653
  store volatile i32 %64, i32* %61, align 4, !dbg !7653
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7654
  %66 = load volatile i32, i32* %65, align 4, !dbg !7654
  %67 = or i32 %66, %13, !dbg !7654
  br label %74, !dbg !7654

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !7653
  %70 = and i32 %62, %69, !dbg !7653
  store volatile i32 %70, i32* %61, align 4, !dbg !7653
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7654
  %72 = load volatile i32, i32* %71, align 4, !dbg !7654
  %73 = and i32 %72, %69, !dbg !7654
  br label %74, !dbg !7654

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !7654
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7654
  store volatile i32 %75, i32* %76, align 4, !dbg !7654
  call void @llvm.dbg.value(metadata i32 %45, metadata !7655, metadata !DIExpression()) #22, !dbg !7658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #22, !dbg !7660, !srcloc !7661
  br label %77, !dbg !7662

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !7602
  ret i32 %78, !dbg !7663
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #13 !dbg !7664 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7666, metadata !DIExpression()), !dbg !7671
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7667, metadata !DIExpression()), !dbg !7671
  call void @llvm.dbg.value(metadata i1 %2, metadata !7668, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7671
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7672
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !7672
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !7672
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !7669, metadata !DIExpression()), !dbg !7671
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !7673
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !7674
  ret i32 %8, !dbg !7675
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #13 !dbg !7676 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7682, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7683, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i1 %2, metadata !7684, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7685
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !7686
  br i1 %4, label %10, label %5, !dbg !7688

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7689
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !7692
  %8 = or i1 %7, %2, !dbg !7693
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7693
  br i1 %2, label %11, label %13, !dbg !7693

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7694

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7695
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !7698
  br label %13, !dbg !7699

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7685
  ret i32 %14, !dbg !7700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7701 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7705, metadata !DIExpression()), !dbg !7706
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7707
  %3 = icmp eq %struct._snode* %2, null, !dbg !7707
  ret i1 %3, !dbg !7707
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !7708 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7712, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7713, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7714, metadata !DIExpression()), !dbg !7716
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7717
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7715, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7714, metadata !DIExpression()), !dbg !7716
  %4 = icmp eq %struct._snode* %3, null, !dbg !7719
  br i1 %4, label %15, label %5, !dbg !7717

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7715, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7714, metadata !DIExpression()), !dbg !7716
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7721
  br i1 %6, label %9, label %11, !dbg !7724

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7715, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7714, metadata !DIExpression()), !dbg !7716
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7721
  br i1 %8, label %9, label %11, !dbg !7724, !llvm.loop !7725

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !7726
  br label %15, !dbg !7726

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7715, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7714, metadata !DIExpression()), !dbg !7716
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !7719
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7715, metadata !DIExpression()), !dbg !7716
  %14 = icmp eq %struct._snode* %13, null, !dbg !7719
  br i1 %14, label %15, label %7, !dbg !7717, !llvm.loop !7725

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7729 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7733, metadata !DIExpression()), !dbg !7735
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7734, metadata !DIExpression()), !dbg !7735
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7736
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !7736
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !7736
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7737
  %5 = icmp eq %struct._snode* %4, null, !dbg !7737
  br i1 %5, label %6, label %8, !dbg !7736

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7739
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !7739
  br label %8, !dbg !7739

8:                                                ; preds = %6, %2
  ret void, !dbg !7736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7741 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7745, metadata !DIExpression()), !dbg !7746
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7747
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7747
  ret %struct._snode* %3, !dbg !7748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7749 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7753, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7754, metadata !DIExpression()), !dbg !7755
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7756
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7757
  ret void, !dbg !7758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7759 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7761, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7762, metadata !DIExpression()), !dbg !7763
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7764
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7765
  ret void, !dbg !7766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7767 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7769, metadata !DIExpression()), !dbg !7770
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7771
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7771
  ret %struct._snode* %3, !dbg !7772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7773 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7775, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7776, metadata !DIExpression()), !dbg !7777
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7778
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7779
  ret void, !dbg !7780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !7781 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7785, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7786, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7787, metadata !DIExpression()), !dbg !7788
  %4 = icmp eq %struct._snode* %1, null, !dbg !7789
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !7791
  br i1 %4, label %6, label %11, !dbg !7792

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !7793
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7795
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7795
  br i1 %8, label %9, label %15, !dbg !7793

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7797
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !7797
  br label %15, !dbg !7797

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !7799
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7801
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7801
  br i1 %13, label %14, label %15, !dbg !7799

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !7803
  br label %15, !dbg !7803

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !7792
  ret void, !dbg !7792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !7805 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7809, metadata !DIExpression()), !dbg !7810
  %2 = icmp eq %struct._snode* %0, null, !dbg !7811
  br i1 %2, label %5, label %3, !dbg !7811

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !7811
  br label %5, !dbg !7811

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7811
  ret %struct._snode* %6, !dbg !7811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7812 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7814, metadata !DIExpression()), !dbg !7815
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !7816
  ret %struct._snode* %2, !dbg !7816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7817 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7819, metadata !DIExpression()), !dbg !7820
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7821
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7821
  ret %struct._snode* %3, !dbg !7822
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #16 !dbg !7823 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !7827, metadata !DIExpression()), !dbg !7828
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !7829
  %3 = load volatile i32, i32* %2, align 4, !dbg !7829
  ret i32 %3, !dbg !7830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7831 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !7835, metadata !DIExpression()), !dbg !7837
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()), !dbg !7837
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !7838
  store volatile i32 %1, i32* %3, align 4, !dbg !7839
  ret void, !dbg !7840
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !7841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7845, metadata !DIExpression()), !dbg !7849
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7850
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !7850
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !7850
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !7846, metadata !DIExpression()), !dbg !7849
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7851
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !7851
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !7851
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !7847, metadata !DIExpression()), !dbg !7849
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !7852
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7852
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !7853
  %11 = load volatile i32, i32* %10, align 4, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %11, metadata !7848, metadata !DIExpression()), !dbg !7849
  store volatile i32 %11, i32* %10, align 4, !dbg !7854
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !7855
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #24, !dbg !7856
  ret void, !dbg !7857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7858 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7862, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7863, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i32 %2, metadata !7864, metadata !DIExpression()), !dbg !7867
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7868
  %5 = icmp eq %struct._snode* %4, null, !dbg !7868
  br i1 %5, label %21, label %6, !dbg !7868

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !7870
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7866, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7865, metadata !DIExpression()), !dbg !7867
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7871
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7871
  %11 = load i32, i32* %10, align 4, !dbg !7871
  %12 = and i32 %11, %2, !dbg !7875
  %13 = icmp eq i32 %12, 0, !dbg !7875
  br i1 %13, label %19, label %14, !dbg !7876

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7865, metadata !DIExpression()), !dbg !7867
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7877
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7877
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7877
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #23, !dbg !7879
  br label %19, !dbg !7880

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7865, metadata !DIExpression()), !dbg !7867
  %20 = icmp eq %struct._snode* %8, null, !dbg !7881
  br i1 %20, label %21, label %6, !dbg !7881

21:                                               ; preds = %19, %3
  ret void, !dbg !7882
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !887 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !889, metadata !DIExpression()), !dbg !7883
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #23, !dbg !7884
  tail call void @arch_irq_enable(i32 noundef 64) #23, !dbg !7886
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #23, !dbg !7887
  tail call void @arch_irq_enable(i32 noundef 65) #23, !dbg !7886
  ret i32 0, !dbg !7886
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !7889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7891, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i8* %1, metadata !7892, metadata !DIExpression()), !dbg !7895
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7896
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !7896
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !7896
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !7896
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !7896
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !7893, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 -1, metadata !7894, metadata !DIExpression()), !dbg !7895
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #24, !dbg !7897
  br i1 %8, label %9, label %13, !dbg !7899

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #24, !dbg !7900
  store i8 %10, i8* %1, align 1, !dbg !7902
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #24, !dbg !7903
  br i1 %11, label %12, label %13, !dbg !7905

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #23, !dbg !7906
  br label %13, !dbg !7908

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !7895
  call void @llvm.dbg.value(metadata i32 %14, metadata !7894, metadata !DIExpression()), !dbg !7895
  ret i32 %14, !dbg !7909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !7910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7912, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.value(metadata i8 %1, metadata !7913, metadata !DIExpression()), !dbg !7915
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7916
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !7916
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !7916
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !7916
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !7916
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !7914, metadata !DIExpression()), !dbg !7915
  br label %8, !dbg !7917

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #24, !dbg !7918
  br i1 %9, label %10, label %8, !dbg !7917, !llvm.loop !7919

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #24, !dbg !7921
  ret void, !dbg !7922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #15 !dbg !7923 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7925, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i8* %1, metadata !7926, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i32 %2, metadata !7927, metadata !DIExpression()), !dbg !7930
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7931
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !7931
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !7931
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !7931
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !7931
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !7928, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i32 0, metadata !7929, metadata !DIExpression()), !dbg !7930
  %9 = icmp eq i32 %2, 0, !dbg !7932
  br i1 %9, label %18, label %10, !dbg !7933

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7929, metadata !DIExpression()), !dbg !7930
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #24, !dbg !7934
  br i1 %12, label %13, label %18, !dbg !7935

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7936
  %15 = load i8, i8* %14, align 1, !dbg !7936
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #24, !dbg !7938
  %16 = add nuw i32 %11, 1, !dbg !7939
  call void @llvm.dbg.value(metadata i32 %16, metadata !7929, metadata !DIExpression()), !dbg !7930
  %17 = icmp eq i32 %16, %2, !dbg !7932
  br i1 %17, label %18, label %10, !dbg !7933, !llvm.loop !7940

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !7930
  ret i32 %19, !dbg !7942
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !7943 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7945, metadata !DIExpression()), !dbg !7950
  call void @llvm.dbg.value(metadata i8* %1, metadata !7946, metadata !DIExpression()), !dbg !7950
  call void @llvm.dbg.value(metadata i32 %2, metadata !7947, metadata !DIExpression()), !dbg !7950
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7951
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !7951
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !7951
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !7951
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !7951
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !7948, metadata !DIExpression()), !dbg !7950
  call void @llvm.dbg.value(metadata i32 0, metadata !7949, metadata !DIExpression()), !dbg !7950
  %9 = icmp eq i32 %2, 0, !dbg !7952
  br i1 %9, label %18, label %10, !dbg !7953

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7949, metadata !DIExpression()), !dbg !7950
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #24, !dbg !7954
  br i1 %12, label %13, label %18, !dbg !7955

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #24, !dbg !7956
  %15 = add nuw i32 %11, 1, !dbg !7958
  call void @llvm.dbg.value(metadata i32 %15, metadata !7949, metadata !DIExpression()), !dbg !7950
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7959
  store i8 %14, i8* %16, align 1, !dbg !7960
  %17 = icmp eq i32 %15, %2, !dbg !7952
  br i1 %17, label %18, label %10, !dbg !7953, !llvm.loop !7961

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !7950
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #24, !dbg !7963
  br i1 %20, label %21, label %22, !dbg !7965

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #23, !dbg !7966
  br label %22, !dbg !7968

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !7969
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !7970 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7972, metadata !DIExpression()), !dbg !7974
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7975
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7975
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7975
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7975
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7975
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7973, metadata !DIExpression()), !dbg !7974
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #23, !dbg !7976
  ret void, !dbg !7977
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !7978 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7980, metadata !DIExpression()), !dbg !7982
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7983
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7983
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7983
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7983
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7983
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7981, metadata !DIExpression()), !dbg !7982
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #23, !dbg !7984
  ret void, !dbg !7985
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !7986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7988, metadata !DIExpression()), !dbg !7990
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7991
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7991
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7991
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7991
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7991
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7989, metadata !DIExpression()), !dbg !7990
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #24, !dbg !7992
  %8 = zext i1 %7 to i32, !dbg !7992
  ret i32 %8, !dbg !7993
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !7994 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7996, metadata !DIExpression()), !dbg !7998
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7999
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7999
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7999
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7999
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7999
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7997, metadata !DIExpression()), !dbg !7998
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #23, !dbg !8000
  ret void, !dbg !8001
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8002 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8004, metadata !DIExpression()), !dbg !8006
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8007
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8007
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8007
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8007
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8007
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8005, metadata !DIExpression()), !dbg !8006
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #23, !dbg !8008
  ret void, !dbg !8009
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !8010 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8012, metadata !DIExpression()), !dbg !8014
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8015
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8015
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8015
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8015
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8015
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8013, metadata !DIExpression()), !dbg !8014
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #24, !dbg !8016
  %8 = zext i1 %7 to i32, !dbg !8016
  ret i32 %8, !dbg !8017
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8018 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8020, metadata !DIExpression()), !dbg !8022
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8023
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8023
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8023
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8023
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8023
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8021, metadata !DIExpression()), !dbg !8022
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #23, !dbg !8024
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #23, !dbg !8025
  ret void, !dbg !8026
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8029, metadata !DIExpression()), !dbg !8031
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8032
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8032
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8032
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8032
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8032
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8030, metadata !DIExpression()), !dbg !8031
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #23, !dbg !8033
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #23, !dbg !8034
  ret void, !dbg !8035
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !8036 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8038, metadata !DIExpression()), !dbg !8040
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8041
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8041
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8041
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8041
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8041
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8039, metadata !DIExpression()), !dbg !8040
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #24, !dbg !8042
  br i1 %7, label %11, label %8, !dbg !8043

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #24, !dbg !8044
  %10 = zext i1 %9 to i32, !dbg !8043
  br label %11, !dbg !8043

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !8045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !8046 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8048, metadata !DIExpression()), !dbg !8049
  ret i32 1, !dbg !8050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #7 !dbg !8051 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8053, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !8054, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %2, metadata !8055, metadata !DIExpression()), !dbg !8058
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8059
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !8059
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !8059
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !8056, metadata !DIExpression()), !dbg !8058
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !8060
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !8061
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !8062
  store i8* %2, i8** %8, align 4, !dbg !8063
  ret void, !dbg !8064
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8065 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8069, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i32 %1, metadata !8070, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i32* null, metadata !8071, metadata !DIExpression()), !dbg !8072
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !8073
  %4 = lshr i32 %1, 16, !dbg !8074
  %5 = add i32 %4, %3, !dbg !8075
  %6 = inttoptr i32 %5 to i32*, !dbg !8076
  call void @llvm.dbg.value(metadata i32* %6, metadata !8071, metadata !DIExpression()), !dbg !8072
  %7 = load volatile i32, i32* %6, align 4, !dbg !8077
  %8 = and i32 %1, 65535, !dbg !8078
  %9 = shl nuw i32 1, %8, !dbg !8079
  %10 = and i32 %7, %9, !dbg !8079
  %11 = icmp ne i32 %10, 0, !dbg !8079
  ret i1 %11, !dbg !8080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !8081 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8085, metadata !DIExpression()), !dbg !8086
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !8087
  %3 = load volatile i32, i32* %2, align 4, !dbg !8087
  %4 = trunc i32 %3 to i8, !dbg !8088
  ret i8 %4, !dbg !8089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !8090 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8094, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.value(metadata i8 %1, metadata !8095, metadata !DIExpression()), !dbg !8096
  %3 = zext i8 %1 to i32, !dbg !8097
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !8098
  store volatile i32 %3, i32* %4, align 4, !dbg !8099
  ret void, !dbg !8100
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1186 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1188, metadata !DIExpression()), !dbg !8101
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #23, !dbg !8102
  tail call void @arch_irq_enable(i32 noundef 26) #23, !dbg !8104
  ret void, !dbg !8104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !8105 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8107, metadata !DIExpression()), !dbg !8109
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8110
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !8110
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !8110
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !8108, metadata !DIExpression()), !dbg !8109
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !8111
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !8111
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !8113
  br i1 %7, label %11, label %8, !dbg !8114

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !8115
  %10 = load i8*, i8** %9, align 4, !dbg !8115
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #23, !dbg !8117
  br label %11, !dbg !8118

11:                                               ; preds = %8, %1
  ret void, !dbg !8119
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !8120 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8122, metadata !DIExpression()), !dbg !8137
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8138
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !8138
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !8138
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !8138
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !8138
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !8123, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !8124, metadata !DIExpression()), !dbg !8137
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !8139, !srcloc !8145
  call void @llvm.dbg.value(metadata i32 undef, metadata !8142, metadata !DIExpression()) #22, !dbg !8146
  call void @llvm.dbg.value(metadata i32 undef, metadata !8143, metadata !DIExpression()) #22, !dbg !8146
  call void @llvm.dbg.value(metadata i32 undef, metadata !8125, metadata !DIExpression()), !dbg !8137
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !8147
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #22, !dbg !8147
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !8127, metadata !DIExpression()), !dbg !8148
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !8149
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !8150
  %12 = load i32, i32* %11, align 4, !dbg !8150
  store i32 %12, i32* %10, align 4, !dbg !8149
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !8149
  store i32 32, i32* %13, align 4, !dbg !8149
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !8149
  store i32 0, i32* %14, align 4, !dbg !8149
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !8149
  store i32 0, i32* %15, align 4, !dbg !8149
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !8149
  store i32 6, i32* %16, align 4, !dbg !8149
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !8151
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !8151
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #24, !dbg !8152
  call void @llvm.dbg.value(metadata i32 %19, metadata !8126, metadata !DIExpression()), !dbg !8137
  %20 = icmp eq i32 %19, 0, !dbg !8153
  br i1 %20, label %21, label %30, !dbg !8155

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !8149
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !8139
  call void @llvm.dbg.value(metadata i32 %23, metadata !8142, metadata !DIExpression()) #22, !dbg !8146
  call void @llvm.dbg.value(metadata i32 %23, metadata !8125, metadata !DIExpression()), !dbg !8137
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #23, !dbg !8156
  store i32 %24, i32* %22, align 4, !dbg !8157
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #23, !dbg !8158
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #24, !dbg !8159
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #24, !dbg !8160
  call void @llvm.dbg.value(metadata i32 undef, metadata !8161, metadata !DIExpression()) #22, !dbg !8164
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #22, !dbg !8166, !srcloc !8167
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !8168
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !8168
  call void %26(%struct.device* noundef nonnull %0) #23, !dbg !8169
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !8170
  %28 = load i8, i8* %27, align 4, !dbg !8170
  %29 = zext i8 %28 to i32, !dbg !8171
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #23, !dbg !8172
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #24, !dbg !8173
  br label %30, !dbg !8174

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #22, !dbg !8175
  ret i32 %19, !dbg !8175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8176 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8180, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i8 0, metadata !8181, metadata !DIExpression()), !dbg !8184
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !8185
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8183, metadata !DIExpression(DW_OP_deref)), !dbg !8184
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #23, !dbg !8186
  call void @llvm.dbg.value(metadata i32 %4, metadata !8182, metadata !DIExpression()), !dbg !8184
  %5 = icmp slt i32 %4, 0, !dbg !8187
  br i1 %5, label %9, label %6, !dbg !8189

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8190
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8183, metadata !DIExpression()), !dbg !8184
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !8191
  br label %9, !dbg !8192

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8184
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !8193
  ret i32 %10, !dbg !8193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !8194 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i8 2, metadata !8197, metadata !DIExpression()), !dbg !8198
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !8199
  %3 = load volatile i32, i32* %2, align 4, !dbg !8199
  %4 = and i32 %3, -64513, !dbg !8200
  %5 = or i32 %4, 2048, !dbg !8201
  store volatile i32 %5, i32* %2, align 4, !dbg !8202
  ret void, !dbg !8203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !8204 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8206, metadata !DIExpression()), !dbg !8208
  call void @llvm.dbg.value(metadata i8 1, metadata !8207, metadata !DIExpression()), !dbg !8208
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !8209
  %3 = load volatile i32, i32* %2, align 4, !dbg !8209
  %4 = and i32 %3, -64, !dbg !8210
  %5 = or i32 %4, 1, !dbg !8211
  store volatile i32 %5, i32* %2, align 4, !dbg !8212
  ret void, !dbg !8213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !8214 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8218, metadata !DIExpression()), !dbg !8219
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !8220
  %3 = load volatile i32, i32* %2, align 4, !dbg !8221
  %4 = or i32 %3, 1, !dbg !8221
  store volatile i32 %4, i32* %2, align 4, !dbg !8221
  ret void, !dbg !8222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8223 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8227, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8228, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 0, metadata !8229, metadata !DIExpression()), !dbg !8230
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8231
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !8231
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8232
  %5 = load i8, i8* %4, align 4, !dbg !8232
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #23, !dbg !8233
  ret i32 %6, !dbg !8234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !8235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8237, metadata !DIExpression()), !dbg !8238
  tail call fastcc void @__NVIC_SetPriority.50() #24, !dbg !8239
  store i32 19999, i32* @last_load, align 4, !dbg !8240
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8241
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8242
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8243
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8244
  %3 = or i32 %2, 7, !dbg !8244
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8244
  ret i32 0, !dbg !8245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.50() unnamed_addr #15 !dbg !8246 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8248, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata i32 1, metadata !8249, metadata !DIExpression()), !dbg !8250
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8251
  ret void, !dbg !8254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8255 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8257, metadata !DIExpression()), !dbg !8259
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !8260
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8261
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8262
  %5 = add i32 %4, %3, !dbg !8262
  store i32 %5, i32* @cycle_count, align 4, !dbg !8262
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8263
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8264
  %7 = sub i32 %5, %6, !dbg !8267
  %8 = udiv i32 %7, 20000, !dbg !8268
  call void @llvm.dbg.value(metadata i32 %8, metadata !8258, metadata !DIExpression()), !dbg !8259
  %9 = mul nuw i32 %8, 20000, !dbg !8269
  %10 = add i32 %9, %6, !dbg !8270
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8270
  tail call void @sys_clock_announce(i32 noundef %8) #23, !dbg !8271
  tail call void @z_arm_int_exit() #23, !dbg !8272
  ret void, !dbg !8273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !8274 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8279
  call void @llvm.dbg.value(metadata i32 %1, metadata !8276, metadata !DIExpression()), !dbg !8280
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8281
  call void @llvm.dbg.value(metadata i32 %2, metadata !8277, metadata !DIExpression()), !dbg !8280
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8282
  call void @llvm.dbg.value(metadata i32 %3, metadata !8278, metadata !DIExpression()), !dbg !8280
  %4 = and i32 %2, 65536, !dbg !8283
  %5 = icmp ne i32 %4, 0, !dbg !8283
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8285
  %8 = load i32, i32* @last_load, align 4, !dbg !8280
  br i1 %7, label %9, label %13, !dbg !8285

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8286
  %11 = add i32 %10, %8, !dbg !8286
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8286
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8288
  br label %13, !dbg !8289

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8290
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8291
  %16 = add i32 %14, %15, !dbg !8292
  ret i32 %16, !dbg !8293
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8298, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.value(metadata i1 %1, metadata !8299, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8311
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8312
  br i1 %4, label %5, label %8, !dbg !8312

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8314
  %7 = and i32 %6, -2, !dbg !8314
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8314
  store i32 -16777216, i32* @last_load, align 4, !dbg !8316
  br label %54, !dbg !8317

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8318
  call void @llvm.dbg.value(metadata i32 %9, metadata !8303, metadata !DIExpression()), !dbg !8311
  br i1 %3, label %18, label %10, !dbg !8319

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8319
  call void @llvm.dbg.value(metadata i32 undef, metadata !8298, metadata !DIExpression()), !dbg !8311
  %12 = icmp slt i32 %11, 1, !dbg !8320
  br i1 %12, label %18, label %13, !dbg !8320

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !8320
  %15 = select i1 %14, i32 %11, i32 837, !dbg !8320
  %16 = mul nuw nsw i32 %15, 20000, !dbg !8320
  %17 = add nuw nsw i32 %16, 19999, !dbg !8320
  br label %18, !dbg !8320

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8298, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8321, metadata !DIExpression()) #22, !dbg !8328
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !8330, !srcloc !8336
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8330
  call void @llvm.dbg.value(metadata i32 %21, metadata !8333, metadata !DIExpression()) #22, !dbg !8337
  call void @llvm.dbg.value(metadata i32 undef, metadata !8334, metadata !DIExpression()) #22, !dbg !8337
  call void @llvm.dbg.value(metadata i32 %21, metadata !8327, metadata !DIExpression()) #22, !dbg !8328
  call void @llvm.dbg.value(metadata i32 %21, metadata !8304, metadata !DIExpression()), !dbg !8311
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !8338
  call void @llvm.dbg.value(metadata i32 %22, metadata !8309, metadata !DIExpression()), !dbg !8311
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8339
  call void @llvm.dbg.value(metadata i32 %23, metadata !8301, metadata !DIExpression()), !dbg !8311
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8340
  %25 = add i32 %24, %22, !dbg !8340
  store i32 %25, i32* @cycle_count, align 4, !dbg !8340
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8341
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8342
  %27 = sub i32 %25, %26, !dbg !8343
  call void @llvm.dbg.value(metadata i32 %27, metadata !8310, metadata !DIExpression()), !dbg !8311
  %28 = icmp slt i32 %27, 0, !dbg !8344
  br i1 %28, label %38, label %29, !dbg !8346

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8300, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.value(metadata i32 undef, metadata !8300, metadata !DIExpression()), !dbg !8311
  %30 = add nuw i32 %19, %27, !dbg !8347
  %31 = urem i32 %30, 20000, !dbg !8349
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8300, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8311
  %32 = sub nuw nsw i32 %19, %31, !dbg !8350
  call void @llvm.dbg.value(metadata i32 %32, metadata !8300, metadata !DIExpression()), !dbg !8311
  %33 = icmp ugt i32 %32, 1250, !dbg !8351
  br i1 %33, label %34, label %36, !dbg !8351

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8300, metadata !DIExpression()), !dbg !8311
  %35 = icmp ugt i32 %32, 16740000, !dbg !8352
  br i1 %35, label %38, label %36, !dbg !8354

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1250, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1250, %18 ], [ 16740000, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8355
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8356
  call void @llvm.dbg.value(metadata i32 %40, metadata !8302, metadata !DIExpression()), !dbg !8311
  %41 = add nsw i32 %39, -1, !dbg !8357
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8358
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8359
  %42 = icmp ult i32 %23, %40, !dbg !8360
  br i1 %42, label %43, label %48, !dbg !8362

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8363
  %45 = add i32 %23, %9, !dbg !8365
  %46 = sub i32 %45, %40, !dbg !8366
  %47 = add i32 %46, %44, !dbg !8363
  br label %52, !dbg !8367

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8368
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8370
  %51 = add i32 %49, %50, !dbg !8370
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8371
  store i32 %53, i32* @cycle_count, align 4, !dbg !8371
  call void @llvm.dbg.value(metadata i32 %21, metadata !8372, metadata !DIExpression()) #22, !dbg !8378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8377, metadata !DIExpression()) #22, !dbg !8378
  call void @llvm.dbg.value(metadata i32 %21, metadata !8380, metadata !DIExpression()) #22, !dbg !8383
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #22, !dbg !8385, !srcloc !8386
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8387
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8388 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8321, metadata !DIExpression()) #22, !dbg !8392
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !8394, !srcloc !8336
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8394
  call void @llvm.dbg.value(metadata i32 %2, metadata !8333, metadata !DIExpression()) #22, !dbg !8396
  call void @llvm.dbg.value(metadata i32 undef, metadata !8334, metadata !DIExpression()) #22, !dbg !8396
  call void @llvm.dbg.value(metadata i32 %2, metadata !8327, metadata !DIExpression()) #22, !dbg !8392
  call void @llvm.dbg.value(metadata i32 %2, metadata !8390, metadata !DIExpression()), !dbg !8397
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !8398
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8399
  %5 = add i32 %4, %3, !dbg !8400
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8401
  %7 = sub i32 %5, %6, !dbg !8402
  call void @llvm.dbg.value(metadata i32 %7, metadata !8391, metadata !DIExpression()), !dbg !8397
  call void @llvm.dbg.value(metadata i32 %2, metadata !8372, metadata !DIExpression()) #22, !dbg !8403
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8377, metadata !DIExpression()) #22, !dbg !8403
  call void @llvm.dbg.value(metadata i32 %2, metadata !8380, metadata !DIExpression()) #22, !dbg !8405
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !8407, !srcloc !8386
  %8 = udiv i32 %7, 20000, !dbg !8408
  ret i32 %8, !dbg !8409
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8410 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8321, metadata !DIExpression()) #22, !dbg !8414
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !8416, !srcloc !8336
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8416
  call void @llvm.dbg.value(metadata i32 %2, metadata !8333, metadata !DIExpression()) #22, !dbg !8418
  call void @llvm.dbg.value(metadata i32 undef, metadata !8334, metadata !DIExpression()) #22, !dbg !8418
  call void @llvm.dbg.value(metadata i32 %2, metadata !8327, metadata !DIExpression()) #22, !dbg !8414
  call void @llvm.dbg.value(metadata i32 %2, metadata !8412, metadata !DIExpression()), !dbg !8419
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !8420
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8421
  %5 = add i32 %4, %3, !dbg !8422
  call void @llvm.dbg.value(metadata i32 %5, metadata !8413, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.value(metadata i32 %2, metadata !8372, metadata !DIExpression()) #22, !dbg !8423
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8377, metadata !DIExpression()) #22, !dbg !8423
  call void @llvm.dbg.value(metadata i32 %2, metadata !8380, metadata !DIExpression()) #22, !dbg !8425
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !8427, !srcloc !8386
  ret i32 %5, !dbg !8428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !8429 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8430
  %2 = icmp eq i32 %1, -16777216, !dbg !8432
  br i1 %2, label %3, label %6, !dbg !8433

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8434
  %5 = or i32 %4, 1, !dbg !8434
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8434
  br label %6, !dbg !8436

6:                                                ; preds = %3, %0
  ret void, !dbg !8437
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !8438 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8439
  %2 = and i32 %1, -2, !dbg !8439
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8439
  ret void, !dbg !8440
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !8441 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8474, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i8 %1, metadata !8475, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8476, metadata !DIExpression()), !dbg !8477
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !8478
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8478
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !8477
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8479
  %8 = load i8, i8* %6, align 4, !dbg !8480
  %9 = zext i8 %8 to i32, !dbg !8481
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !8481
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !8482
  br i1 %11, label %18, label %24, !dbg !8483

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !8477
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8479
  %14 = load i8, i8* %6, align 4, !dbg !8480
  %15 = zext i8 %14 to i32, !dbg !8481
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !8481
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !8482
  br i1 %17, label %18, label %24, !dbg !8483, !llvm.loop !8484

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !8486
  %21 = load i8, i8* %20, align 1, !dbg !8486
  %22 = icmp eq i8 %21, %1, !dbg !8489
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !8490
  br i1 %22, label %24, label %12, !dbg !8491

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !8477
  ret i32 %25, !dbg !8492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #11 !dbg !8493 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8495, metadata !DIExpression()), !dbg !8496
  ret i32 0, !dbg !8497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8498 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !8516, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata i8 %1, metadata !8517, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata i32 %2, metadata !8518, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata i8 0, metadata !8519, metadata !DIExpression()), !dbg !8530
  %4 = icmp eq i8 %1, 0, !dbg !8531
  br i1 %4, label %7, label %5, !dbg !8532

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !8531
  br label %8, !dbg !8532

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !8533

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8519, metadata !DIExpression()), !dbg !8530
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !8534
  %11 = load i32, i32* %10, align 4, !dbg !8534
  call void @llvm.dbg.value(metadata i32 %11, metadata !8521, metadata !DIExpression()), !dbg !8535
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !8536
  %13 = load i8, i8* %12, align 4, !dbg !8536
  call void @llvm.dbg.value(metadata i8 %13, metadata !8524, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8535
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !8537
  %15 = load i32, i32* %14, align 4, !dbg !8537
  call void @llvm.dbg.value(metadata i32 %15, metadata !8525, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.value(metadata i8 %13, metadata !8526, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8535
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !8538
  %17 = load i32, i32* %16, align 4, !dbg !8538
  call void @llvm.dbg.value(metadata i32 %17, metadata !8527, metadata !DIExpression()), !dbg !8535
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !8539
  %19 = load i32, i32* %18, align 4, !dbg !8539
  call void @llvm.dbg.value(metadata i32 %19, metadata !8528, metadata !DIExpression()), !dbg !8535
  %20 = and i8 %13, 15, !dbg !8540
  %21 = zext i8 %20 to i32, !dbg !8540
  %22 = lshr i32 %19, 27, !dbg !8541
  %23 = and i32 %22, 16, !dbg !8541
  %24 = or i32 %23, %21, !dbg !8542
  %25 = inttoptr i32 %11 to i32*, !dbg !8543
  store volatile i32 %24, i32* %25, align 4, !dbg !8544
  %26 = icmp eq i32 %15, 0, !dbg !8545
  br i1 %26, label %32, label %27, !dbg !8547

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !8548
  call void @llvm.dbg.value(metadata i8 %28, metadata !8526, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8535
  %29 = and i8 %28, 7, !dbg !8549
  %30 = zext i8 %29 to i32, !dbg !8549
  %31 = inttoptr i32 %15 to i32*, !dbg !8551
  store volatile i32 %30, i32* %31, align 4, !dbg !8552
  br label %32, !dbg !8553

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !8554
  br i1 %33, label %37, label %34, !dbg !8556

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !8557
  %36 = inttoptr i32 %17 to i32*, !dbg !8559
  store volatile i32 %35, i32* %36, align 4, !dbg !8560
  br label %37, !dbg !8561

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !8562
  call void @llvm.dbg.value(metadata i32 %38, metadata !8519, metadata !DIExpression()), !dbg !8530
  %39 = icmp eq i32 %38, %6, !dbg !8531
  br i1 %39, label %7, label %8, !dbg !8532, !llvm.loop !8563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !8565 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8622, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i32 %1, metadata !8623, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i32 %2, metadata !8624, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i32 %3, metadata !8625, metadata !DIExpression()), !dbg !8626
  %5 = inttoptr i32 %1 to i32*, !dbg !8627
  %6 = load volatile i32, i32* %5, align 4, !dbg !8627
  %7 = and i32 %6, -458816, !dbg !8628
  %8 = shl i32 %2, 16, !dbg !8629
  %9 = and i32 %8, 458752, !dbg !8629
  %10 = and i32 %3, 63, !dbg !8630
  %11 = or i32 %10, %9, !dbg !8631
  %12 = or i32 %11, %7, !dbg !8632
  store volatile i32 %12, i32* %5, align 4, !dbg !8633
  ret void, !dbg !8634
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #16 !dbg !8635 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8639, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 %1, metadata !8640, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32* %2, metadata !8641, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32* %3, metadata !8642, metadata !DIExpression()), !dbg !8643
  %5 = inttoptr i32 %1 to i32*, !dbg !8644
  %6 = load volatile i32, i32* %5, align 4, !dbg !8644
  %7 = lshr i32 %6, 16, !dbg !8645
  %8 = and i32 %7, 7, !dbg !8645
  store i32 %8, i32* %2, align 4, !dbg !8646
  %9 = load volatile i32, i32* %5, align 4, !dbg !8647
  %10 = and i32 %9, 63, !dbg !8648
  store i32 %10, i32* %3, align 4, !dbg !8649
  ret void, !dbg !8650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #15 !dbg !8651 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8655, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i32 %1, metadata !8656, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i32 %2, metadata !8657, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i32 %3, metadata !8658, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i32 %4, metadata !8659, metadata !DIExpression()), !dbg !8660
  %6 = inttoptr i32 %1 to i32*, !dbg !8661
  %7 = load volatile i32, i32* %6, align 4, !dbg !8661
  %8 = and i32 %7, -117899328, !dbg !8662
  %9 = shl i32 %2, 24, !dbg !8663
  %10 = and i32 %9, 117440512, !dbg !8663
  %11 = shl i32 %3, 16, !dbg !8664
  %12 = and i32 %11, 458752, !dbg !8664
  %13 = and i32 %4, 63, !dbg !8665
  %14 = or i32 %12, %10, !dbg !8666
  %15 = or i32 %14, %13, !dbg !8667
  %16 = or i32 %15, %8, !dbg !8668
  store volatile i32 %16, i32* %6, align 4, !dbg !8669
  ret void, !dbg !8670
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8671 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8676, metadata !DIExpression()), !dbg !8677
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #24, !dbg !8678
  br i1 %2, label %7, label %3, !dbg !8680

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !8681
  %5 = and i32 %4, 127, !dbg !8682
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !8683
  br label %7, !dbg !8684

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !8677
  ret i32 %8, !dbg !8685
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8686 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8690, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.value(metadata i32 %1, metadata !8691, metadata !DIExpression()), !dbg !8692
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !8693
  %4 = and i32 %1, 65535, !dbg !8693
  %5 = add i32 %4, %3, !dbg !8693
  %6 = inttoptr i32 %5 to i32*, !dbg !8693
  %7 = load volatile i32, i32* %6, align 4, !dbg !8693
  %8 = and i32 %7, 65536, !dbg !8694
  %9 = icmp ne i32 %8, 0, !dbg !8695
  ret i1 %9, !dbg !8696
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8697 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8699, metadata !DIExpression()), !dbg !8700
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #24, !dbg !8701
  br i1 %2, label %8, label %3, !dbg !8703

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !8704
  %5 = and i32 %4, 1, !dbg !8706
  %6 = icmp eq i32 %5, 0, !dbg !8706
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !8707
  br label %8, !dbg !8707

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !8700
  ret i32 %9, !dbg !8708
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8709 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8711, metadata !DIExpression()), !dbg !8715
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #24, !dbg !8716
  br i1 %2, label %40, label %3, !dbg !8718

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !8719
  %5 = trunc i32 %4 to i8, !dbg !8719
  %6 = and i8 %5, 127, !dbg !8719
  call void @llvm.dbg.value(metadata i8 %6, metadata !8712, metadata !DIExpression()), !dbg !8715
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !8720
  %8 = lshr i32 %7, 21, !dbg !8721
  %9 = and i32 %8, 3, !dbg !8722
  call void @llvm.dbg.value(metadata i32 %9, metadata !8713, metadata !DIExpression()), !dbg !8715
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %9, !dbg !8723
  %11 = load i32, i32* %10, align 4, !dbg !8723
  call void @llvm.dbg.value(metadata i8 undef, metadata !8713, metadata !DIExpression()), !dbg !8715
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !8724
  %13 = load volatile i32, i32* %12, align 4, !dbg !8724
  %14 = and i32 %13, 32768, !dbg !8726
  %15 = icmp eq i32 %14, 0, !dbg !8726
  br i1 %15, label %36, label %16, !dbg !8727

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !8728
  %18 = and i32 %17, 32767, !dbg !8730
  %19 = uitofp i32 %18 to float, !dbg !8731
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !8732
  %21 = load volatile i32, i32* %20, align 4, !dbg !8732
  %22 = and i32 %21, 1073741823, !dbg !8733
  %23 = uitofp i32 %22 to float, !dbg !8734
  %24 = fdiv float %19, %23, !dbg !8735
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !8736
  %26 = load volatile i32, i32* %25, align 4, !dbg !8736
  %27 = and i32 %26, 1073741823, !dbg !8737
  %28 = uitofp i32 %27 to float, !dbg !8738
  %29 = fmul float %24, %28, !dbg !8739
  call void @llvm.dbg.value(metadata float %29, metadata !8714, metadata !DIExpression()), !dbg !8715
  %30 = lshr i32 24000000, %11, !dbg !8740
  %31 = uitofp i32 %30 to float, !dbg !8741
  %32 = uitofp i8 %6 to float, !dbg !8742
  %33 = fadd float %29, %32, !dbg !8743
  %34 = fmul float %33, %31, !dbg !8744
  %35 = fptoui float %34 to i32, !dbg !8745
  br label %40, !dbg !8746

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !8747
  %38 = zext i8 %6 to i32, !dbg !8749
  %39 = mul nuw i32 %37, %38, !dbg !8750
  br label %40, !dbg !8751

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !8715
  ret i32 %41, !dbg !8752
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8753 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8755, metadata !DIExpression()), !dbg !8756
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #24, !dbg !8757
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !8756
  ret i32 %3, !dbg !8759
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8760 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8762, metadata !DIExpression()), !dbg !8767
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #24, !dbg !8768
  br i1 %2, label %47, label %3, !dbg !8770

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8771
  %5 = trunc i32 %4 to i8, !dbg !8771
  %6 = and i8 %5, 127, !dbg !8771
  call void @llvm.dbg.value(metadata i8 %6, metadata !8763, metadata !DIExpression()), !dbg !8767
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8772
  %8 = lshr i32 %7, 22, !dbg !8773
  %9 = and i32 %8, 3, !dbg !8774
  call void @llvm.dbg.value(metadata i32 %8, metadata !8764, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8767
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8775
  %11 = lshr i32 %10, 19, !dbg !8776
  %12 = and i32 %11, 3, !dbg !8777
  call void @llvm.dbg.value(metadata i32 %11, metadata !8765, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8767
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !8778
  %14 = load i32, i32* %13, align 4, !dbg !8778
  call void @llvm.dbg.value(metadata i8 undef, metadata !8764, metadata !DIExpression()), !dbg !8767
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !8779
  %16 = load i32, i32* %15, align 4, !dbg !8779
  call void @llvm.dbg.value(metadata i8 undef, metadata !8765, metadata !DIExpression()), !dbg !8767
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !8780
  %18 = load volatile i32, i32* %17, align 4, !dbg !8780
  %19 = and i32 %18, 32768, !dbg !8782
  %20 = icmp eq i32 %19, 0, !dbg !8782
  br i1 %20, label %42, label %21, !dbg !8783

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !8784
  %23 = and i32 %22, 32767, !dbg !8786
  %24 = uitofp i32 %23 to float, !dbg !8787
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !8788
  %26 = load volatile i32, i32* %25, align 4, !dbg !8788
  %27 = and i32 %26, 1073741823, !dbg !8789
  %28 = uitofp i32 %27 to float, !dbg !8790
  %29 = fdiv float %24, %28, !dbg !8791
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !8792
  %31 = load volatile i32, i32* %30, align 4, !dbg !8792
  %32 = and i32 %31, 1073741823, !dbg !8793
  %33 = uitofp i32 %32 to float, !dbg !8794
  %34 = fmul float %29, %33, !dbg !8795
  call void @llvm.dbg.value(metadata float %34, metadata !8766, metadata !DIExpression()), !dbg !8767
  %35 = lshr i32 24000000, %16, !dbg !8796
  %36 = lshr i32 %35, %14, !dbg !8797
  %37 = uitofp i32 %36 to float, !dbg !8798
  %38 = uitofp i8 %6 to float, !dbg !8799
  %39 = fadd float %34, %38, !dbg !8800
  %40 = fmul float %39, %37, !dbg !8801
  %41 = fptoui float %40 to i32, !dbg !8802
  br label %47, !dbg !8803

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !8804
  %44 = lshr i32 %43, %14, !dbg !8806
  %45 = zext i8 %6 to i32, !dbg !8807
  %46 = mul nuw i32 %44, %45, !dbg !8808
  br label %47, !dbg !8809

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !8767
  ret i32 %48, !dbg !8810
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8811 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8813, metadata !DIExpression()), !dbg !8818
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #24, !dbg !8819
  br i1 %2, label %47, label %3, !dbg !8821

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8822
  %5 = trunc i32 %4 to i8, !dbg !8822
  %6 = and i8 %5, 127, !dbg !8822
  call void @llvm.dbg.value(metadata i8 %6, metadata !8814, metadata !DIExpression()), !dbg !8818
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8823
  %8 = lshr i32 %7, 22, !dbg !8824
  %9 = and i32 %8, 3, !dbg !8825
  call void @llvm.dbg.value(metadata i32 %8, metadata !8815, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8818
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8826
  %11 = lshr i32 %10, 19, !dbg !8827
  %12 = and i32 %11, 3, !dbg !8828
  call void @llvm.dbg.value(metadata i32 %11, metadata !8816, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8818
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !8829
  %14 = load i32, i32* %13, align 4, !dbg !8829
  call void @llvm.dbg.value(metadata i8 undef, metadata !8815, metadata !DIExpression()), !dbg !8818
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !8830
  %16 = load i32, i32* %15, align 4, !dbg !8830
  call void @llvm.dbg.value(metadata i8 undef, metadata !8816, metadata !DIExpression()), !dbg !8818
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !8831
  %18 = load volatile i32, i32* %17, align 4, !dbg !8831
  %19 = and i32 %18, 32768, !dbg !8833
  %20 = icmp eq i32 %19, 0, !dbg !8833
  br i1 %20, label %42, label %21, !dbg !8834

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !8835
  %23 = and i32 %22, 32767, !dbg !8837
  %24 = uitofp i32 %23 to float, !dbg !8838
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !8839
  %26 = load volatile i32, i32* %25, align 4, !dbg !8839
  %27 = and i32 %26, 1073741823, !dbg !8840
  %28 = uitofp i32 %27 to float, !dbg !8841
  %29 = fdiv float %24, %28, !dbg !8842
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !8843
  %31 = load volatile i32, i32* %30, align 4, !dbg !8843
  %32 = and i32 %31, 1073741823, !dbg !8844
  %33 = uitofp i32 %32 to float, !dbg !8845
  %34 = fmul float %29, %33, !dbg !8846
  call void @llvm.dbg.value(metadata float %34, metadata !8817, metadata !DIExpression()), !dbg !8818
  %35 = lshr i32 24000000, %16, !dbg !8847
  %36 = lshr i32 %35, %14, !dbg !8848
  %37 = uitofp i32 %36 to float, !dbg !8849
  %38 = uitofp i8 %6 to float, !dbg !8850
  %39 = fadd float %34, %38, !dbg !8851
  %40 = fmul float %39, %37, !dbg !8852
  %41 = fptoui float %40 to i32, !dbg !8853
  br label %47, !dbg !8854

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !8855
  %44 = lshr i32 %43, %14, !dbg !8857
  %45 = zext i8 %6 to i32, !dbg !8858
  %46 = mul nuw i32 %44, %45, !dbg !8859
  br label %47, !dbg !8860

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !8818
  ret i32 %48, !dbg !8861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !8862 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8866, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.value(metadata i32 %1, metadata !8867, metadata !DIExpression()), !dbg !8870
  %3 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #24, !dbg !8871
  call void @llvm.dbg.value(metadata i32 %3, metadata !8868, metadata !DIExpression()), !dbg !8870
  %4 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #24, !dbg !8872
  call void @llvm.dbg.value(metadata i32 %4, metadata !8869, metadata !DIExpression()), !dbg !8870
  %5 = udiv i32 %3, %4, !dbg !8873
  %6 = mul i32 %5, 18, !dbg !8874
  ret i32 %6, !dbg !8875
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8876 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8878, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.value(metadata i32 %1, metadata !8879, metadata !DIExpression()), !dbg !8880
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !8881
  %4 = and i32 %1, 65535, !dbg !8881
  %5 = add i32 %4, %3, !dbg !8881
  %6 = inttoptr i32 %5 to i32*, !dbg !8881
  %7 = load volatile i32, i32* %6, align 4, !dbg !8881
  %8 = lshr i32 %1, 16, !dbg !8882
  %9 = and i32 %8, 31, !dbg !8882
  %10 = lshr i32 %7, %9, !dbg !8883
  %11 = and i32 %10, 63, !dbg !8884
  ret i32 %11, !dbg !8885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8886 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !8913, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !8914, metadata !DIExpression()), !dbg !8917
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !8918
  store volatile i32 0, i32* %3, align 4, !dbg !8919
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !8920
  store volatile i32 0, i32* %4, align 4, !dbg !8921
  %5 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !8922
  %6 = load i32, i32* %5, align 4, !dbg !8922
  call void @llvm.dbg.value(metadata i32 %6, metadata !8915, metadata !DIExpression()), !dbg !8917
  %7 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !8923
  %8 = load i32, i32* %7, align 4, !dbg !8923
  %9 = icmp eq i32 %8, 1, !dbg !8925
  %10 = shl nuw i32 1, %6, !dbg !8926
  br i1 %9, label %11, label %15, !dbg !8927

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !8928
  %13 = load volatile i32, i32* %12, align 4, !dbg !8929
  %14 = or i32 %13, %10, !dbg !8929
  store volatile i32 %14, i32* %12, align 4, !dbg !8929
  br label %20, !dbg !8928

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !8930
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !8931
  %18 = load volatile i32, i32* %17, align 4, !dbg !8932
  %19 = and i32 %18, %16, !dbg !8932
  store volatile i32 %19, i32* %17, align 4, !dbg !8932
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !8933
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !8935
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !8935
  %24 = add i32 %6, -16, !dbg !8935
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !8935
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !8935
  call void @llvm.dbg.value(metadata i32* %26, metadata !8916, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.value(metadata i32 %25, metadata !8915, metadata !DIExpression()), !dbg !8917
  %27 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !8936
  %28 = load i32, i32* %27, align 4, !dbg !8936
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !8937

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !8938
  %31 = shl i32 3, %30, !dbg !8941
  %32 = xor i32 %31, -1, !dbg !8942
  %33 = load volatile i32, i32* %26, align 4, !dbg !8943
  %34 = and i32 %33, %32, !dbg !8943
  br label %56, !dbg !8944

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !8945
  %37 = shl i32 %25, 1, !dbg !8947
  %38 = shl i32 3, %37, !dbg !8948
  %39 = xor i32 %38, -1, !dbg !8949
  %40 = and i32 %36, %39, !dbg !8950
  %41 = shl nuw i32 1, %37, !dbg !8951
  %42 = or i32 %40, %41, !dbg !8952
  br label %56, !dbg !8953

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !8954
  %45 = shl i32 %25, 1, !dbg !8956
  %46 = shl i32 3, %45, !dbg !8957
  %47 = xor i32 %46, -1, !dbg !8958
  %48 = and i32 %44, %47, !dbg !8959
  %49 = shl i32 2, %45, !dbg !8960
  %50 = or i32 %48, %49, !dbg !8961
  br label %56, !dbg !8962

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !8963
  %53 = shl i32 3, %52, !dbg !8965
  %54 = load volatile i32, i32* %26, align 4, !dbg !8966
  %55 = or i32 %54, %53, !dbg !8966
  br label %56, !dbg !8967

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !8968
  br label %58, !dbg !8969

58:                                               ; preds = %56, %20
  ret void, !dbg !8969
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8970 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !8975, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.value(metadata i32 %1, metadata !8976, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.value(metadata i32 %2, metadata !8977, metadata !DIExpression()), !dbg !8978
  %4 = icmp eq i32 %2, 1, !dbg !8979
  %5 = shl nuw i32 1, %1, !dbg !8981
  br i1 %4, label %6, label %10, !dbg !8982

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !8983
  %8 = load volatile i32, i32* %7, align 4, !dbg !8985
  %9 = or i32 %8, %5, !dbg !8985
  store volatile i32 %9, i32* %7, align 4, !dbg !8985
  br label %15, !dbg !8986

10:                                               ; preds = %3
  %11 = xor i32 %5, -1, !dbg !8987
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !8989
  %13 = load volatile i32, i32* %12, align 4, !dbg !8990
  %14 = and i32 %13, %11, !dbg !8990
  store volatile i32 %14, i32* %12, align 4, !dbg !8990
  br label %15

15:                                               ; preds = %10, %6
  ret void, !dbg !8991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !8992 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !8996, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 %1, metadata !8997, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i1 %2, metadata !8998, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8999
  %4 = shl nuw i32 1, %1, !dbg !9000
  br i1 %2, label %5, label %9, !dbg !9002

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !9003
  %7 = load volatile i32, i32* %6, align 4, !dbg !9004
  %8 = or i32 %7, %4, !dbg !9004
  store volatile i32 %8, i32* %6, align 4, !dbg !9004
  br label %14, !dbg !9003

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !9005
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !9006
  %12 = load volatile i32, i32* %11, align 4, !dbg !9007
  %13 = and i32 %12, %10, !dbg !9007
  store volatile i32 %13, i32* %11, align 4, !dbg !9007
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !9008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9009 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9011, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i32 %1, metadata !9012, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i1 %2, metadata !9013, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9014
  %4 = shl nuw i32 1, %1, !dbg !9015
  br i1 %2, label %5, label %9, !dbg !9017

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !9018
  %7 = load volatile i32, i32* %6, align 4, !dbg !9019
  %8 = or i32 %7, %4, !dbg !9019
  store volatile i32 %8, i32* %6, align 4, !dbg !9019
  br label %14, !dbg !9018

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !9020
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !9021
  %12 = load volatile i32, i32* %11, align 4, !dbg !9022
  %13 = and i32 %12, %10, !dbg !9022
  store volatile i32 %13, i32* %11, align 4, !dbg !9022
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !9023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9024 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9063, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !9064, metadata !DIExpression()), !dbg !9065
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9066
  %4 = load volatile i32, i32* %3, align 4, !dbg !9067
  %5 = and i32 %4, -2, !dbg !9067
  store volatile i32 %5, i32* %3, align 4, !dbg !9067
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #24, !dbg !9068
  %6 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !9069
  %7 = load i32, i32* %6, align 4, !dbg !9069
  %8 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !9070
  %9 = load i32, i32* %8, align 4, !dbg !9070
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !9071
  %11 = load i32, i32* %10, align 4, !dbg !9071
  %12 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !9072
  %13 = load i32, i32* %12, align 4, !dbg !9072
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9073
  %15 = load volatile i32, i32* %14, align 4, !dbg !9074
  %16 = or i32 %7, %9, !dbg !9075
  %17 = or i32 %16, %11, !dbg !9076
  %18 = or i32 %17, %13, !dbg !9077
  %19 = or i32 %18, %15, !dbg !9074
  %20 = or i32 %19, 16384, !dbg !9074
  store volatile i32 %20, i32* %14, align 4, !dbg !9074
  %21 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9078
  %22 = load volatile i32, i32* %21, align 4, !dbg !9079
  %23 = or i32 %22, 4, !dbg !9079
  store volatile i32 %23, i32* %21, align 4, !dbg !9079
  %24 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !9080
  %25 = load i32, i32* %24, align 4, !dbg !9080
  %26 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !9081
  %27 = load i32, i32* %26, align 4, !dbg !9081
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %25, i32 noundef %27) #24, !dbg !9082
  ret void, !dbg !9083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #15 !dbg !9084 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9088, metadata !DIExpression()), !dbg !9089
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9090
  %3 = load volatile i32, i32* %2, align 4, !dbg !9091
  %4 = and i32 %3, -2, !dbg !9091
  store volatile i32 %4, i32* %2, align 4, !dbg !9091
  store volatile i32 0, i32* %2, align 4, !dbg !9092
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9093
  store volatile i32 1, i32* %5, align 4, !dbg !9094
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9095
  store volatile i32 1792, i32* %6, align 4, !dbg !9096
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9097
  store volatile i32 32768, i32* %7, align 4, !dbg !9098
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9099
  store volatile i32 2049, i32* %8, align 4, !dbg !9100
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !9101
  store volatile i32 43, i32* %9, align 4, !dbg !9102
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !9103
  store volatile i32 0, i32* %10, align 4, !dbg !9104
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !9105
  store volatile i32 0, i32* %11, align 4, !dbg !9106
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !9107
  store volatile i32 96, i32* %12, align 4, !dbg !9108
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9109
  store volatile i32 0, i32* %13, align 4, !dbg !9110
  %14 = load volatile i32, i32* %5, align 4, !dbg !9111
  %15 = and i32 %14, -2, !dbg !9111
  store volatile i32 %15, i32* %5, align 4, !dbg !9111
  br label %16, !dbg !9112

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !9113
  %18 = and i32 %17, 1, !dbg !9114
  %19 = icmp eq i32 %18, 0, !dbg !9115
  br i1 %19, label %16, label %20, !dbg !9112, !llvm.loop !9116

20:                                               ; preds = %16
  ret void, !dbg !9118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9119 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9123, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %1, metadata !9124, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %2, metadata !9125, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 1, metadata !9130, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %1, metadata !9126, metadata !DIExpression()), !dbg !9136
  %4 = shl i32 %2, 4, !dbg !9137
  call void @llvm.dbg.value(metadata i32 %4, metadata !9127, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 1, metadata !9128, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %1, metadata !9126, metadata !DIExpression()), !dbg !9136
  %5 = icmp eq i32 %4, 0, !dbg !9138
  br i1 %5, label %11, label %6, !dbg !9139

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9126, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %8, metadata !9127, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %8, metadata !9128, metadata !DIExpression()), !dbg !9136
  %9 = urem i32 %7, %8, !dbg !9140
  call void @llvm.dbg.value(metadata i32 %8, metadata !9126, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %9, metadata !9127, metadata !DIExpression()), !dbg !9136
  %10 = icmp eq i32 %9, 0, !dbg !9138
  br i1 %10, label %11, label %6, !dbg !9139, !llvm.loop !9142

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !9136
  %13 = udiv i32 %1, %12, !dbg !9144
  call void @llvm.dbg.value(metadata i32 %13, metadata !9126, metadata !DIExpression()), !dbg !9136
  %14 = udiv i32 %4, %12, !dbg !9145
  call void @llvm.dbg.value(metadata i32 %14, metadata !9127, metadata !DIExpression()), !dbg !9136
  %15 = icmp ugt i32 %13, 458745, !dbg !9146
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !9147
  br i1 %17, label %18, label %33, !dbg !9147

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !9148
  %20 = udiv i32 %19, 458745, !dbg !9149
  %21 = add nuw nsw i32 %20, 1, !dbg !9150
  call void @llvm.dbg.value(metadata i32 %21, metadata !9131, metadata !DIExpression()), !dbg !9151
  %22 = add i32 %14, -1, !dbg !9152
  %23 = udiv i32 %22, 65535, !dbg !9153
  %24 = add nuw nsw i32 %23, 1, !dbg !9154
  call void @llvm.dbg.value(metadata i32 %24, metadata !9134, metadata !DIExpression()), !dbg !9151
  %25 = icmp ugt i32 %21, %24, !dbg !9155
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !9156
  call void @llvm.dbg.value(metadata i32 %26, metadata !9135, metadata !DIExpression()), !dbg !9151
  %27 = udiv i32 %13, %26, !dbg !9157
  call void @llvm.dbg.value(metadata i32 %27, metadata !9126, metadata !DIExpression()), !dbg !9136
  %28 = udiv i32 %14, %26, !dbg !9158
  call void @llvm.dbg.value(metadata i32 %28, metadata !9127, metadata !DIExpression()), !dbg !9136
  %29 = icmp ugt i32 %26, %13, !dbg !9159
  %30 = select i1 %29, i32 1, i32 %27, !dbg !9161
  call void @llvm.dbg.value(metadata i32 %30, metadata !9126, metadata !DIExpression()), !dbg !9136
  %31 = icmp ugt i32 %26, %14, !dbg !9162
  %32 = select i1 %31, i32 1, i32 %28, !dbg !9164
  call void @llvm.dbg.value(metadata i32 %32, metadata !9127, metadata !DIExpression()), !dbg !9136
  br label %33, !dbg !9165

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !9136
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !9136
  call void @llvm.dbg.value(metadata i32 %35, metadata !9126, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %34, metadata !9127, metadata !DIExpression()), !dbg !9136
  %36 = add i32 %35, -1, !dbg !9166
  %37 = udiv i32 %36, 65535, !dbg !9167
  %38 = add nuw nsw i32 %37, 1, !dbg !9168
  call void @llvm.dbg.value(metadata i32 %38, metadata !9130, metadata !DIExpression()), !dbg !9136
  %39 = add nsw i32 %37, -1, !dbg !9169
  %40 = icmp ult i32 %39, 6, !dbg !9169
  br i1 %40, label %41, label %44, !dbg !9169

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !9169
  %43 = load i32, i32* %42, align 4, !dbg !9169
  br label %44, !dbg !9169

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !9170
  call void @llvm.dbg.value(metadata i32 %45, metadata !9129, metadata !DIExpression()), !dbg !9136
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9172
  %47 = load volatile i32, i32* %46, align 4, !dbg !9173
  %48 = and i32 %47, -897, !dbg !9173
  store volatile i32 %48, i32* %46, align 4, !dbg !9173
  %49 = load volatile i32, i32* %46, align 4, !dbg !9174
  %50 = or i32 %49, %45, !dbg !9174
  store volatile i32 %50, i32* %46, align 4, !dbg !9174
  %51 = add i32 %34, 65535, !dbg !9175
  %52 = and i32 %51, 65535, !dbg !9175
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !9176
  store volatile i32 %52, i32* %53, align 4, !dbg !9177
  %54 = udiv i32 %35, %38, !dbg !9178
  %55 = add i32 %54, 65535, !dbg !9178
  %56 = and i32 %55, 65535, !dbg !9178
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !9179
  store volatile i32 %56, i32* %57, align 4, !dbg !9180
  %58 = mul nuw nsw i32 %38, 1000, !dbg !9181
  %59 = udiv i32 %1, %58, !dbg !9181
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !9182
  store volatile i32 %59, i32* %60, align 4, !dbg !9183
  ret void, !dbg !9184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9185 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9189, metadata !DIExpression()), !dbg !9192
  call void @llvm.dbg.value(metadata i32 %1, metadata !9190, metadata !DIExpression()), !dbg !9192
  call void @llvm.dbg.value(metadata i1 %2, metadata !9191, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9192
  %4 = and i32 %1, 2, !dbg !9193
  %5 = icmp eq i32 %4, 0, !dbg !9193
  br i1 %2, label %6, label %18, !dbg !9195

6:                                                ; preds = %3
  br i1 %5, label %11, label %7, !dbg !9196

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9198
  %9 = load volatile i32, i32* %8, align 4, !dbg !9200
  %10 = or i32 %9, 512, !dbg !9200
  store volatile i32 %10, i32* %8, align 4, !dbg !9200
  br label %11, !dbg !9198

11:                                               ; preds = %7, %6
  %12 = and i32 %1, 4, !dbg !9201
  %13 = icmp eq i32 %12, 0, !dbg !9201
  br i1 %13, label %30, label %14, !dbg !9203

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9204
  %16 = load volatile i32, i32* %15, align 4, !dbg !9205
  %17 = or i32 %16, 2, !dbg !9205
  store volatile i32 %17, i32* %15, align 4, !dbg !9205
  br label %30, !dbg !9204

18:                                               ; preds = %3
  br i1 %5, label %23, label %19, !dbg !9206

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9208
  %21 = load volatile i32, i32* %20, align 4, !dbg !9210
  %22 = and i32 %21, -513, !dbg !9210
  store volatile i32 %22, i32* %20, align 4, !dbg !9210
  br label %23, !dbg !9208

23:                                               ; preds = %19, %18
  %24 = and i32 %1, 4, !dbg !9211
  %25 = icmp eq i32 %24, 0, !dbg !9211
  br i1 %25, label %30, label %26, !dbg !9213

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9214
  %28 = load volatile i32, i32* %27, align 4, !dbg !9215
  %29 = and i32 %28, -3, !dbg !9215
  store volatile i32 %29, i32* %27, align 4, !dbg !9215
  br label %30, !dbg !9214

30:                                               ; preds = %23, %26, %11, %14
  ret void, !dbg !9216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9217 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9221, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.value(metadata i1 %1, metadata !9222, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9223
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9224
  %4 = load volatile i32, i32* %3, align 4, !dbg !9224
  %5 = and i32 %4, 2, !dbg !9226
  %6 = select i1 %1, i32 0, i32 -3, !dbg !9226
  %7 = or i32 %5, %6, !dbg !9226
  store volatile i32 %7, i32* %3, align 4, !dbg !9224
  ret void, !dbg !9227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9228 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9230, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.value(metadata i1 %1, metadata !9231, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9232
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9233
  %4 = load volatile i32, i32* %3, align 4, !dbg !9233
  %5 = and i32 %4, -17, !dbg !9235
  %6 = select i1 %1, i32 0, i32 16, !dbg !9235
  %7 = or i32 %5, %6, !dbg !9235
  store volatile i32 %7, i32* %3, align 4, !dbg !9233
  ret void, !dbg !9236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9237 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9239, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata i32 %1, metadata !9240, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata i1 %2, metadata !9241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9244
  call void @llvm.dbg.value(metadata i32* null, metadata !9242, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata i32 0, metadata !9243, metadata !DIExpression()), !dbg !9244
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9245
  %5 = lshr i32 %1, 16, !dbg !9246
  %6 = add i32 %5, %4, !dbg !9247
  %7 = inttoptr i32 %6 to i32*, !dbg !9248
  call void @llvm.dbg.value(metadata i32* %7, metadata !9242, metadata !DIExpression()), !dbg !9244
  %8 = and i32 %1, 65535, !dbg !9249
  %9 = shl nuw i32 1, %8, !dbg !9250
  call void @llvm.dbg.value(metadata i32 %9, metadata !9243, metadata !DIExpression()), !dbg !9244
  br i1 %2, label %10, label %13, !dbg !9251

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !9252
  %12 = or i32 %11, %9, !dbg !9252
  br label %17, !dbg !9254

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !9255
  %15 = load volatile i32, i32* %7, align 4, !dbg !9256
  %16 = and i32 %15, %14, !dbg !9256
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !9257
  ret void, !dbg !9258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9259 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9263, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32 %1, metadata !9264, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32* null, metadata !9265, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32 0, metadata !9266, metadata !DIExpression()), !dbg !9267
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9268
  %4 = lshr i32 %1, 16, !dbg !9269
  %5 = add i32 %4, %3, !dbg !9270
  %6 = inttoptr i32 %5 to i32*, !dbg !9271
  call void @llvm.dbg.value(metadata i32* %6, metadata !9265, metadata !DIExpression()), !dbg !9267
  %7 = and i32 %1, 65535, !dbg !9272
  %8 = shl nuw i32 1, %7, !dbg !9273
  call void @llvm.dbg.value(metadata i32 %8, metadata !9266, metadata !DIExpression()), !dbg !9267
  store volatile i32 %8, i32* %6, align 4, !dbg !9274
  ret void, !dbg !9275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9276 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9278, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i32 %1, metadata !9279, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i1 %2, metadata !9280, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9283
  call void @llvm.dbg.value(metadata i32* null, metadata !9281, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i32 0, metadata !9282, metadata !DIExpression()), !dbg !9283
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9284
  %5 = lshr i32 %1, 16, !dbg !9285
  %6 = add i32 %5, %4, !dbg !9286
  %7 = inttoptr i32 %6 to i32*, !dbg !9287
  call void @llvm.dbg.value(metadata i32* %7, metadata !9281, metadata !DIExpression()), !dbg !9283
  %8 = and i32 %1, 65535, !dbg !9288
  %9 = shl nuw i32 1, %8, !dbg !9289
  call void @llvm.dbg.value(metadata i32 %9, metadata !9282, metadata !DIExpression()), !dbg !9283
  br i1 %2, label %10, label %13, !dbg !9290

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !9291
  %12 = or i32 %11, %9, !dbg !9291
  br label %17, !dbg !9293

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !9294
  %15 = load volatile i32, i32* %7, align 4, !dbg !9295
  %16 = and i32 %15, %14, !dbg !9295
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !9296
  ret void, !dbg !9297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9298 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9300, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata i1 %1, metadata !9301, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9302
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9303
  %4 = load volatile i32, i32* %3, align 4, !dbg !9303
  %5 = and i32 %4, -16385, !dbg !9305
  %6 = select i1 %1, i32 0, i32 16384, !dbg !9305
  %7 = or i32 %5, %6, !dbg !9305
  store volatile i32 %7, i32* %3, align 4, !dbg !9303
  ret void, !dbg !9306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9307 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9309, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.value(metadata i1 %1, metadata !9310, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9311
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9312
  %4 = load volatile i32, i32* %3, align 4, !dbg !9312
  %5 = and i32 %4, -8193, !dbg !9314
  %6 = select i1 %1, i32 8192, i32 0, !dbg !9314
  %7 = or i32 %5, %6, !dbg !9314
  store volatile i32 %7, i32* %3, align 4, !dbg !9312
  ret void, !dbg !9315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9316 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9318, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.value(metadata i1 %1, metadata !9319, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9320
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9321
  %4 = load volatile i32, i32* %3, align 4, !dbg !9321
  %5 = and i32 %4, -4097, !dbg !9323
  %6 = select i1 %1, i32 4096, i32 0, !dbg !9323
  %7 = or i32 %5, %6, !dbg !9323
  store volatile i32 %7, i32* %3, align 4, !dbg !9321
  ret void, !dbg !9324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9325 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9327, metadata !DIExpression()), !dbg !9329
  call void @llvm.dbg.value(metadata i32 %1, metadata !9328, metadata !DIExpression()), !dbg !9329
  %3 = icmp eq i32 %1, 0, !dbg !9330
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9332
  %5 = load volatile i32, i32* %4, align 4, !dbg !9332
  %6 = and i32 %5, -65, !dbg !9333
  %7 = select i1 %3, i32 0, i32 64, !dbg !9333
  %8 = or i32 %6, %7, !dbg !9333
  store volatile i32 %8, i32* %4, align 4, !dbg !9332
  ret void, !dbg !9334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9335 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9337, metadata !DIExpression()), !dbg !9339
  call void @llvm.dbg.value(metadata i1 %1, metadata !9338, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9339
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9340
  %4 = load volatile i32, i32* %3, align 4, !dbg !9340
  %5 = and i32 %4, -1025, !dbg !9342
  %6 = select i1 %1, i32 1024, i32 0, !dbg !9342
  %7 = or i32 %5, %6, !dbg !9342
  store volatile i32 %7, i32* %3, align 4, !dbg !9340
  ret void, !dbg !9343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9344 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9346, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i1 %1, metadata !9347, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9348
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9349
  %4 = load volatile i32, i32* %3, align 4, !dbg !9349
  %5 = and i32 %4, -513, !dbg !9351
  %6 = select i1 %1, i32 512, i32 0, !dbg !9351
  %7 = or i32 %5, %6, !dbg !9351
  store volatile i32 %7, i32* %3, align 4, !dbg !9349
  ret void, !dbg !9352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9353 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9355, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata i1 %1, metadata !9356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9357
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9358
  %4 = load volatile i32, i32* %3, align 4, !dbg !9358
  %5 = and i32 %4, -257, !dbg !9360
  %6 = select i1 %1, i32 256, i32 0, !dbg !9360
  %7 = or i32 %5, %6, !dbg !9360
  store volatile i32 %7, i32* %3, align 4, !dbg !9358
  ret void, !dbg !9361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #15 !dbg !9362 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9366, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.value(metadata i16 %1, metadata !9367, metadata !DIExpression()), !dbg !9368
  %3 = zext i16 %1 to i32, !dbg !9369
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9371
  %5 = load volatile i32, i32* %4, align 4, !dbg !9371
  %6 = and i32 %5, -5, !dbg !9372
  %7 = lshr i32 %3, 6, !dbg !9372
  %8 = and i32 %7, 4, !dbg !9372
  %9 = or i32 %6, %8, !dbg !9372
  store volatile i32 %9, i32* %4, align 4, !dbg !9371
  %10 = and i32 %3, 255, !dbg !9373
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !9374
  store volatile i32 %10, i32* %11, align 4, !dbg !9375
  ret void, !dbg !9376
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #16 !dbg !9377 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9381, metadata !DIExpression()), !dbg !9383
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !9384
  %3 = load volatile i32, i32* %2, align 4, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %3, metadata !9382, metadata !DIExpression()), !dbg !9383
  %4 = trunc i32 %3 to i16, !dbg !9385
  %5 = and i16 %4, 255, !dbg !9385
  %6 = lshr i16 %4, 2, !dbg !9385
  %7 = and i16 %6, 256, !dbg !9385
  %8 = or i16 %7, %5, !dbg !9385
  call void @llvm.dbg.value(metadata i16 %8, metadata !9382, metadata !DIExpression()), !dbg !9383
  ret i16 %8, !dbg !9386
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9387 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9389, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.value(metadata i1 %1, metadata !9390, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9391
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9392
  %4 = load volatile i32, i32* %3, align 4, !dbg !9392
  %5 = and i32 %4, -2, !dbg !9394
  %6 = zext i1 %1 to i32, !dbg !9394
  %7 = or i32 %5, %6, !dbg !9394
  store volatile i32 %7, i32* %3, align 4, !dbg !9392
  ret void, !dbg !9395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9396 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9398, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.value(metadata i1 %1, metadata !9399, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9400
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9401
  %4 = load volatile i32, i32* %3, align 4, !dbg !9401
  %5 = and i32 %4, -3, !dbg !9403
  %6 = select i1 %1, i32 2, i32 0, !dbg !9403
  %7 = or i32 %5, %6, !dbg !9403
  store volatile i32 %7, i32* %3, align 4, !dbg !9401
  ret void, !dbg !9404
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9405 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9407, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata i1 %1, metadata !9408, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9409
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9410
  %4 = load volatile i32, i32* %3, align 4, !dbg !9410
  %5 = and i32 %4, -129, !dbg !9412
  %6 = select i1 %1, i32 128, i32 0, !dbg !9412
  %7 = or i32 %5, %6, !dbg !9412
  store volatile i32 %7, i32* %3, align 4, !dbg !9410
  ret void, !dbg !9413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9414 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9416, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i32 %1, metadata !9417, metadata !DIExpression()), !dbg !9418
  %3 = icmp eq i32 %1, 0, !dbg !9419
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9421
  %5 = load volatile i32, i32* %4, align 4, !dbg !9421
  %6 = and i32 %5, -33, !dbg !9422
  %7 = select i1 %3, i32 32, i32 0, !dbg !9422
  %8 = or i32 %6, %7, !dbg !9422
  store volatile i32 %8, i32* %4, align 4, !dbg !9421
  ret void, !dbg !9423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9424 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9426, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata i1 %1, metadata !9427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9428
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9429
  %4 = load volatile i32, i32* %3, align 4, !dbg !9429
  %5 = and i32 %4, -16385, !dbg !9431
  %6 = select i1 %1, i32 16384, i32 0, !dbg !9431
  %7 = or i32 %5, %6, !dbg !9431
  store volatile i32 %7, i32* %3, align 4, !dbg !9429
  ret void, !dbg !9432
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9433 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9435, metadata !DIExpression()), !dbg !9437
  call void @llvm.dbg.value(metadata i1 %1, metadata !9436, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9437
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9438
  %4 = load volatile i32, i32* %3, align 4, !dbg !9438
  %5 = and i32 %4, -17, !dbg !9440
  %6 = select i1 %1, i32 16, i32 0, !dbg !9440
  %7 = or i32 %5, %6, !dbg !9440
  store volatile i32 %7, i32* %3, align 4, !dbg !9438
  ret void, !dbg !9441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9442 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9444, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata i1 %1, metadata !9445, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9446
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9447
  %4 = load volatile i32, i32* %3, align 4, !dbg !9447
  %5 = and i32 %4, -2049, !dbg !9449
  %6 = select i1 %1, i32 2048, i32 0, !dbg !9449
  %7 = or i32 %5, %6, !dbg !9449
  store volatile i32 %7, i32* %3, align 4, !dbg !9447
  ret void, !dbg !9450
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !9451 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !9470, metadata !DIExpression()), !dbg !9475
  %4 = bitcast i32* %2 to i8*, !dbg !9476
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !9476
  %5 = bitcast i32* %3 to i8*, !dbg !9476
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9476
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !9477
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !9478

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9471, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32* %2, metadata !9473, metadata !DIExpression(DW_OP_deref)), !dbg !9475
  call void @llvm.dbg.value(metadata i32* %3, metadata !9474, metadata !DIExpression(DW_OP_deref)), !dbg !9475
  br label %8, !dbg !9479

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !9481
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !9481
  call void @llvm.dbg.value(metadata i32 %10, metadata !9471, metadata !DIExpression()), !dbg !9475
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !9482

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #23, !dbg !9483
  call void @llvm.dbg.value(metadata i32 %12, metadata !9472, metadata !DIExpression()), !dbg !9475
  br label %13, !dbg !9485

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !9486
  call void @llvm.dbg.value(metadata i32 %14, metadata !9472, metadata !DIExpression()), !dbg !9475
  %15 = load i32, i32* %2, align 4, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %15, metadata !9473, metadata !DIExpression()), !dbg !9475
  %16 = add i32 %15, 1, !dbg !9488
  %17 = udiv i32 %14, %16, !dbg !9489
  %18 = load i32, i32* %3, align 4, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %18, metadata !9474, metadata !DIExpression()), !dbg !9475
  %19 = add i32 %18, 1, !dbg !9491
  %20 = udiv i32 %17, %19, !dbg !9492
  br label %21, !dbg !9493

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !9475
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9494
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !9494
  ret i32 %22, !dbg !9494
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #16 !dbg !9495 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !9499, metadata !DIExpression()), !dbg !9501
  call void @llvm.dbg.value(metadata i32 %0, metadata !9500, metadata !DIExpression()), !dbg !9501
  %2 = inttoptr i32 %0 to i32*, !dbg !9502
  %3 = load volatile i32, i32* %2, align 4, !dbg !9502
  %4 = lshr i32 %3, 24, !dbg !9503
  %5 = and i32 %4, 7, !dbg !9503
  ret i32 %5, !dbg !9504
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !9505 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !9527, metadata !DIExpression()), !dbg !9532
  %4 = bitcast i32* %2 to i8*, !dbg !9533
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !9533
  %5 = bitcast i32* %3 to i8*, !dbg !9533
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9533
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !9534
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !9535

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9528, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata i32* %2, metadata !9530, metadata !DIExpression(DW_OP_deref)), !dbg !9532
  call void @llvm.dbg.value(metadata i32* %3, metadata !9531, metadata !DIExpression(DW_OP_deref)), !dbg !9532
  br label %8, !dbg !9536

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !9538
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !9538
  call void @llvm.dbg.value(metadata i32 %10, metadata !9528, metadata !DIExpression()), !dbg !9532
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !9539

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #23, !dbg !9540
  call void @llvm.dbg.value(metadata i32 %12, metadata !9529, metadata !DIExpression()), !dbg !9532
  br label %13, !dbg !9542

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !9543
  call void @llvm.dbg.value(metadata i32 %14, metadata !9529, metadata !DIExpression()), !dbg !9532
  %15 = load i32, i32* %2, align 4, !dbg !9544
  call void @llvm.dbg.value(metadata i32 %15, metadata !9530, metadata !DIExpression()), !dbg !9532
  %16 = add i32 %15, 1, !dbg !9545
  %17 = udiv i32 %14, %16, !dbg !9546
  %18 = load i32, i32* %3, align 4, !dbg !9547
  call void @llvm.dbg.value(metadata i32 %18, metadata !9531, metadata !DIExpression()), !dbg !9532
  %19 = add i32 %18, 1, !dbg !9548
  %20 = udiv i32 %17, %19, !dbg !9549
  br label %21, !dbg !9550

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !9532
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9551
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !9551
  ret i32 %22, !dbg !9551
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !9552 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !9598, metadata !DIExpression()), !dbg !9603
  %4 = bitcast i32* %2 to i8*, !dbg !9604
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !9604
  %5 = bitcast i32* %3 to i8*, !dbg !9604
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9604
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !9605
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !9606

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9599, metadata !DIExpression()), !dbg !9603
  call void @llvm.dbg.value(metadata i32* %2, metadata !9601, metadata !DIExpression(DW_OP_deref)), !dbg !9603
  call void @llvm.dbg.value(metadata i32* %3, metadata !9602, metadata !DIExpression(DW_OP_deref)), !dbg !9603
  br label %8, !dbg !9607

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !9609
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !9609
  call void @llvm.dbg.value(metadata i32 %10, metadata !9599, metadata !DIExpression()), !dbg !9603
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !9610

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !9611
  %13 = lshr i32 %12, 2, !dbg !9613
  call void @llvm.dbg.value(metadata i32 %13, metadata !9600, metadata !DIExpression()), !dbg !9603
  br label %16, !dbg !9614

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %15, metadata !9600, metadata !DIExpression()), !dbg !9603
  br label %16, !dbg !9616

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !9617
  call void @llvm.dbg.value(metadata i32 %17, metadata !9600, metadata !DIExpression()), !dbg !9603
  %18 = load i32, i32* %2, align 4, !dbg !9618
  call void @llvm.dbg.value(metadata i32 %18, metadata !9601, metadata !DIExpression()), !dbg !9603
  %19 = add i32 %18, 1, !dbg !9619
  %20 = udiv i32 %17, %19, !dbg !9620
  %21 = load i32, i32* %3, align 4, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %21, metadata !9602, metadata !DIExpression()), !dbg !9603
  %22 = add i32 %21, 1, !dbg !9622
  %23 = udiv i32 %20, %22, !dbg !9623
  br label %24, !dbg !9624

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !9603
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9625
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !9625
  ret i32 %25, !dbg !9625
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !9626 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !9644, metadata !DIExpression()), !dbg !9649
  %4 = bitcast i32* %2 to i8*, !dbg !9650
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !9650
  %5 = bitcast i32* %3 to i8*, !dbg !9650
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9650
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !9651
  %7 = add i32 %6, -815923200, !dbg !9652
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !9652
  %9 = icmp ult i32 %8, 4, !dbg !9652
  br i1 %9, label %10, label %25, !dbg !9652

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !9652
  %12 = add i32 %11, 809020800, !dbg !9652
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #24, !dbg !9653
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !9653
  call void @llvm.dbg.value(metadata i32 %13, metadata !9645, metadata !DIExpression()), !dbg !9649
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !9655

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !9656
  %16 = lshr i32 %15, 2, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %16, metadata !9646, metadata !DIExpression()), !dbg !9649
  br label %17, !dbg !9659

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !9660
  call void @llvm.dbg.value(metadata i32 %18, metadata !9646, metadata !DIExpression()), !dbg !9649
  %19 = load i32, i32* %2, align 4, !dbg !9661
  call void @llvm.dbg.value(metadata i32 %19, metadata !9647, metadata !DIExpression()), !dbg !9649
  %20 = add i32 %19, 1, !dbg !9662
  %21 = udiv i32 %18, %20, !dbg !9663
  %22 = load i32, i32* %3, align 4, !dbg !9664
  call void @llvm.dbg.value(metadata i32 %22, metadata !9648, metadata !DIExpression()), !dbg !9649
  %23 = add i32 %22, 1, !dbg !9665
  %24 = udiv i32 %21, %23, !dbg !9666
  br label %25, !dbg !9667

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !9649
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9668
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !9668
  ret i32 %26, !dbg !9668
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !9669 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9696, metadata !DIExpression()), !dbg !9701
  %4 = bitcast i32* %2 to i8*, !dbg !9702
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !9702
  %5 = bitcast i32* %3 to i8*, !dbg !9702
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9702
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9703
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !9704

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9697, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %2, metadata !9699, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %3, metadata !9700, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  br label %13, !dbg !9705

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9697, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %2, metadata !9699, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %3, metadata !9700, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  br label %13, !dbg !9707

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9697, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %2, metadata !9699, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %3, metadata !9700, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  br label %13, !dbg !9708

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9697, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %2, metadata !9699, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %3, metadata !9700, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  br label %13, !dbg !9709

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9697, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %2, metadata !9699, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %3, metadata !9700, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  br label %13, !dbg !9710

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !9697, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %2, metadata !9699, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  call void @llvm.dbg.value(metadata i32* %3, metadata !9700, metadata !DIExpression(DW_OP_deref)), !dbg !9701
  br label %13, !dbg !9711

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #24, !dbg !9712
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %15, metadata !9697, metadata !DIExpression()), !dbg !9701
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !9713

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !9714
  %18 = lshr i32 %17, 1, !dbg !9716
  call void @llvm.dbg.value(metadata i32 %18, metadata !9698, metadata !DIExpression()), !dbg !9701
  br label %21, !dbg !9717

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !9718
  call void @llvm.dbg.value(metadata i32 %20, metadata !9698, metadata !DIExpression()), !dbg !9701
  br label %21, !dbg !9719

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !9720
  call void @llvm.dbg.value(metadata i32 %22, metadata !9698, metadata !DIExpression()), !dbg !9701
  %23 = load i32, i32* %2, align 4, !dbg !9721
  call void @llvm.dbg.value(metadata i32 %23, metadata !9699, metadata !DIExpression()), !dbg !9701
  %24 = add i32 %23, 1, !dbg !9722
  %25 = udiv i32 %22, %24, !dbg !9723
  %26 = load i32, i32* %3, align 4, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %26, metadata !9700, metadata !DIExpression()), !dbg !9701
  %27 = add i32 %26, 1, !dbg !9725
  %28 = udiv i32 %25, %27, !dbg !9726
  br label %29, !dbg !9727

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !9701
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9728
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !9728
  ret i32 %30, !dbg !9728
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #19 !dbg !9729 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !9732, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i32 undef, metadata !9732, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i32 undef, metadata !9732, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !9748
  ret void, !dbg !9749
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !9750 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9754, metadata !DIExpression()), !dbg !9756
  %2 = icmp eq i8* %0, null, !dbg !9757
  br i1 %2, label %29, label %3, !dbg !9759

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !9760
  %5 = icmp eq i8 %4, 0, !dbg !9761
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !9762
  br i1 %6, label %29, label %8, !dbg !9762

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !9755, metadata !DIExpression()), !dbg !9756
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !9763

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !9755, metadata !DIExpression()), !dbg !9756
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !9765
  br i1 %10, label %11, label %15, !dbg !9770

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !9771
  %13 = load i8*, i8** %12, align 4, !dbg !9771
  %14 = icmp eq i8* %13, %0, !dbg !9772
  br i1 %14, label %29, label %15, !dbg !9773

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !9774
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !9755, metadata !DIExpression()), !dbg !9756
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !9775
  br i1 %17, label %7, label %8, !dbg !9776, !llvm.loop !9777

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !9755, metadata !DIExpression()), !dbg !9756
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !9779
  br i1 %20, label %21, label %26, !dbg !9783

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !9784
  %23 = load i8*, i8** %22, align 4, !dbg !9784
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #23, !dbg !9785
  %25 = icmp eq i32 %24, 0, !dbg !9786
  br i1 %25, label %29, label %26, !dbg !9787

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !9788
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !9755, metadata !DIExpression()), !dbg !9756
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !9789
  br i1 %28, label %29, label %18, !dbg !9763, !llvm.loop !9790

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !9756
  ret %struct.device* %30, !dbg !9792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !9793 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9797, metadata !DIExpression()), !dbg !9798
  %2 = icmp eq %struct.device* %0, null, !dbg !9799
  br i1 %2, label %14, label %3, !dbg !9801

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9802
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !9802
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !9803
  %7 = load i8, i8* %6, align 1, !dbg !9803
  %8 = and i8 %7, 1, !dbg !9803
  %9 = icmp eq i8 %8, 0, !dbg !9803
  br i1 %9, label %14, label %10, !dbg !9804

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !9805
  %12 = load i8, i8* %11, align 1, !dbg !9805
  %13 = icmp eq i8 %12, 0, !dbg !9806
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !9798
  ret i1 %15, !dbg !9807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !9808 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !9813, metadata !DIExpression()), !dbg !9814
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !9815
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !9816
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !9817 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9825, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !9826, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i8* %2, metadata !9827, metadata !DIExpression()), !dbg !9830
  %5 = bitcast i32* %4 to i8*, !dbg !9831
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9831
  call void @llvm.dbg.value(metadata i32 0, metadata !9828, metadata !DIExpression()), !dbg !9830
  store i32 0, i32* %4, align 4, !dbg !9832
  call void @llvm.dbg.value(metadata i32* %4, metadata !9828, metadata !DIExpression(DW_OP_deref)), !dbg !9830
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !9833
  call void @llvm.dbg.value(metadata i16* %6, metadata !9829, metadata !DIExpression()), !dbg !9830
  %7 = load i32, i32* %4, align 4, !dbg !9834
  call void @llvm.dbg.value(metadata i32 %7, metadata !9828, metadata !DIExpression()), !dbg !9830
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !9835
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9836
  ret i32 %8, !dbg !9837
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !9838 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9842, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i32* %1, metadata !9843, metadata !DIExpression()), !dbg !9848
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !9849
  %4 = load i16*, i16** %3, align 4, !dbg !9849
  call void @llvm.dbg.value(metadata i16* %4, metadata !9844, metadata !DIExpression()), !dbg !9848
  %5 = icmp eq i16* %4, null, !dbg !9850
  br i1 %5, label %14, label %6, !dbg !9851

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !9852
  call void @llvm.dbg.value(metadata i32 %7, metadata !9845, metadata !DIExpression()), !dbg !9852
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !9853
  %9 = load i16, i16* %8, align 2, !dbg !9853
  %10 = add i16 %9, -32767, !dbg !9854
  %11 = icmp ult i16 %10, 2, !dbg !9854
  %12 = add i32 %7, 1, !dbg !9855
  call void @llvm.dbg.value(metadata i32 %12, metadata !9845, metadata !DIExpression()), !dbg !9852
  br i1 %11, label %13, label %6, !dbg !9854, !llvm.loop !9857

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !9860
  br label %14, !dbg !9861

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !9862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !9863 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !9867, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 %1, metadata !9868, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !9869, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i8* %3, metadata !9870, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9871, metadata !DIExpression()), !dbg !9879
  %5 = icmp eq i32 %1, 0, !dbg !9880
  br i1 %5, label %16, label %8, !dbg !9881

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !9871, metadata !DIExpression()), !dbg !9879
  %7 = icmp eq i32 %15, %1, !dbg !9880
  br i1 %7, label %16, label %8, !dbg !9881, !llvm.loop !9882

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9871, metadata !DIExpression()), !dbg !9879
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !9884
  %11 = load i16, i16* %10, align 2, !dbg !9884
  call void @llvm.dbg.value(metadata i16 %11, metadata !9873, metadata !DIExpression()), !dbg !9885
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !9886
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !9876, metadata !DIExpression()), !dbg !9885
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #23, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %13, metadata !9877, metadata !DIExpression()), !dbg !9885
  %14 = icmp slt i32 %13, 0, !dbg !9888
  %15 = add nuw i32 %9, 1, !dbg !9890
  call void @llvm.dbg.value(metadata i32 %15, metadata !9871, metadata !DIExpression()), !dbg !9879
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !9891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !9892 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9896, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !9897, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !9898, metadata !DIExpression()), !dbg !9899
  %2 = sext i16 %0 to i32, !dbg !9900
  %3 = icmp slt i16 %0, 1, !dbg !9902
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !9903
  %6 = add nsw i32 %2, -1, !dbg !9903
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !9903
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9897, metadata !DIExpression()), !dbg !9899
  ret %struct.device* %8, !dbg !9904
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !9905 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9907, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !9908, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8* %2, metadata !9909, metadata !DIExpression()), !dbg !9912
  %5 = bitcast i32* %4 to i8*, !dbg !9913
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9913
  call void @llvm.dbg.value(metadata i32 0, metadata !9910, metadata !DIExpression()), !dbg !9912
  store i32 0, i32* %4, align 4, !dbg !9914
  call void @llvm.dbg.value(metadata i32* %4, metadata !9910, metadata !DIExpression(DW_OP_deref)), !dbg !9912
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !9915
  call void @llvm.dbg.value(metadata i16* %6, metadata !9911, metadata !DIExpression()), !dbg !9912
  %7 = load i32, i32* %4, align 4, !dbg !9916
  call void @llvm.dbg.value(metadata i32 %7, metadata !9910, metadata !DIExpression()), !dbg !9912
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !9917
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9918
  ret i32 %8, !dbg !9919
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !9920 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9922, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i32* %1, metadata !9923, metadata !DIExpression()), !dbg !9927
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !9928
  %4 = load i16*, i16** %3, align 4, !dbg !9928
  call void @llvm.dbg.value(metadata i16* %4, metadata !9924, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i32 0, metadata !9925, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i32 0, metadata !9926, metadata !DIExpression()), !dbg !9927
  %5 = icmp eq i16* %4, null, !dbg !9929
  br i1 %5, label %22, label %6, !dbg !9931

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9925, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i16* %8, metadata !9924, metadata !DIExpression()), !dbg !9927
  %9 = load i16, i16* %8, align 2, !dbg !9932
  %10 = icmp eq i16 %9, -32768, !dbg !9936
  call void @llvm.dbg.value(metadata i32 undef, metadata !9925, metadata !DIExpression()), !dbg !9927
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !9937
  call void @llvm.dbg.value(metadata i16* %11, metadata !9924, metadata !DIExpression()), !dbg !9927
  %12 = zext i1 %10 to i32, !dbg !9938
  %13 = add i32 %7, %12, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %13, metadata !9925, metadata !DIExpression()), !dbg !9927
  %14 = icmp eq i32 %13, 2, !dbg !9939
  br i1 %14, label %15, label %6, !dbg !9940

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !9927
  call void @llvm.dbg.value(metadata i32 %16, metadata !9926, metadata !DIExpression()), !dbg !9927
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !9941
  %18 = load i16, i16* %17, align 2, !dbg !9941
  %19 = icmp eq i16 %18, 32767, !dbg !9942
  %20 = add i32 %16, 1, !dbg !9943
  call void @llvm.dbg.value(metadata i32 %20, metadata !9926, metadata !DIExpression()), !dbg !9927
  br i1 %19, label %21, label %15, !dbg !9945, !llvm.loop !9946

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !9948
  br label %22, !dbg !9949

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !9950
  call void @llvm.dbg.value(metadata i16* %23, metadata !9924, metadata !DIExpression()), !dbg !9927
  ret i16* %23, !dbg !9951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !9952 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9955
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !9956
  ret i32* %2, !dbg !9957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !9958 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10100, metadata !DIExpression()), !dbg !10103
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10101, metadata !DIExpression()), !dbg !10103
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10102, metadata !DIExpression()), !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !10105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10109, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 %1, metadata !10110, metadata !DIExpression()), !dbg !10111
  ret void, !dbg !10112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !10113 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10117, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata i32 %1, metadata !10118, metadata !DIExpression()), !dbg !10119
  ret void, !dbg !10120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !10121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10125, metadata !DIExpression()), !dbg !10127
  call void @llvm.dbg.value(metadata i8* %1, metadata !10126, metadata !DIExpression()), !dbg !10127
  ret i32 -134, !dbg !10128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !10129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10133, metadata !DIExpression()), !dbg !10135
  call void @llvm.dbg.value(metadata i8* %1, metadata !10134, metadata !DIExpression()), !dbg !10135
  ret i32 -134, !dbg !10136
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !10137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10140, metadata !DIExpression()), !dbg !10141
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !10142, !srcloc !10148
  call void @llvm.dbg.value(metadata i32 undef, metadata !10145, metadata !DIExpression()) #22, !dbg !10149
  call void @llvm.dbg.value(metadata i32 undef, metadata !10146, metadata !DIExpression()) #22, !dbg !10149
  br label %3, !dbg !10150

3:                                                ; preds = %3, %1
  br label %3, !dbg !10151, !llvm.loop !10154
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10161, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10162, metadata !DIExpression()), !dbg !10163
  tail call void @arch_system_halt(i32 noundef %0) #27, !dbg !10164
  unreachable, !dbg !10164
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !10165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10167, metadata !DIExpression()), !dbg !10168
  tail call void @arch_system_halt(i32 noundef %0) #27, !dbg !10169
  unreachable, !dbg !10169
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10172, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10173, metadata !DIExpression()), !dbg !10176
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !10177, !srcloc !10148
  call void @llvm.dbg.value(metadata i32 undef, metadata !10145, metadata !DIExpression()) #22, !dbg !10179
  call void @llvm.dbg.value(metadata i32 undef, metadata !10146, metadata !DIExpression()) #22, !dbg !10179
  call void @llvm.dbg.value(metadata i32 undef, metadata !10174, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10175, metadata !DIExpression()), !dbg !10176
  %4 = icmp eq %struct.__esf* %1, null, !dbg !10180
  br i1 %4, label %6, label %5, !dbg !10182

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !10183
  br label %7, !dbg !10184

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !10183
  br label %7, !dbg !10187

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !10177
  call void @llvm.dbg.value(metadata i32 %8, metadata !10145, metadata !DIExpression()) #22, !dbg !10179
  call void @llvm.dbg.value(metadata i32 %8, metadata !10174, metadata !DIExpression()), !dbg !10176
  %9 = tail call fastcc %struct.k_thread* @k_current_get.80() #25, !dbg !10189
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !10175, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 undef, metadata !10190, metadata !DIExpression()) #22, !dbg !10193
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #22, !dbg !10195, !srcloc !10196
  tail call fastcc void @k_thread_abort.81(%struct.k_thread* noundef %9) #24, !dbg !10197
  ret void, !dbg !10200
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.80() unnamed_addr #9 !dbg !10201 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.82() #25, !dbg !10205
  ret %struct.k_thread* %1, !dbg !10206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.81(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10211, metadata !DIExpression()), !dbg !10212
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !10213, !srcloc !10215
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #23, !dbg !10216
  ret void, !dbg !10217
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.82() unnamed_addr #9 !dbg !10218 {
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !10219, !srcloc !10221
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #23, !dbg !10222
  ret %struct.k_thread* %1, !dbg !10223
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10224 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10228, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 %1, metadata !10229, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 %2, metadata !10230, metadata !DIExpression()), !dbg !10231
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #23, !dbg !10232
  ret void, !dbg !10233
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10234 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10238, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.value(metadata i8* %1, metadata !10239, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.value(metadata i32 %2, metadata !10240, metadata !DIExpression()), !dbg !10241
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #23, !dbg !10242
  ret void, !dbg !10243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10244 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !10245
  ret void, !dbg !10246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10251, metadata !DIExpression()), !dbg !10252
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !10253
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10254
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10255
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10256
  %4 = trunc i32 %0 to i8, !dbg !10257
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !10258
  store i8 %4, i8* %5, align 4, !dbg !10259
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10260
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !10261
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10262
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10263
  store i8* %8, i8** %9, align 4, !dbg !10264
  ret void, !dbg !10265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10268, metadata !DIExpression()), !dbg !10274
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10275
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10269, metadata !DIExpression()), !dbg !10274
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10276
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !10270, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i8* null, metadata !10273, metadata !DIExpression()), !dbg !10274
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10277
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10278
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #23, !dbg !10279
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !10280
  ret void, !dbg !10281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !10282 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10286, metadata !DIExpression()), !dbg !10287
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !10288
  ret i8* %2, !dbg !10289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10290 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10295, metadata !DIExpression()), !dbg !10296
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10297
  %3 = load i8, i8* %2, align 1, !dbg !10298
  %4 = and i8 %3, -5, !dbg !10298
  store i8 %4, i8* %2, align 1, !dbg !10298
  ret void, !dbg !10299
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !10300 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !10303
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #23, !dbg !10304
  %3 = ptrtoint i8* %2 to i32, !dbg !10313
  %4 = add i32 %3, 2048, !dbg !10314
  call void @llvm.dbg.value(metadata i32 %4, metadata !10308, metadata !DIExpression()) #22, !dbg !10315
  call void @llvm.dbg.value(metadata i32 %4, metadata !10316, metadata !DIExpression()) #22, !dbg !10319
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #22, !dbg !10321, !srcloc !10322
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10323
  %6 = or i32 %5, 512, !dbg !10323
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10323
  tail call fastcc void @__NVIC_SetPriority.89(i32 noundef -2, i32 noundef 255) #23, !dbg !10324
  tail call fastcc void @__NVIC_SetPriority.89(i32 noundef -5, i32 noundef 0) #23, !dbg !10327
  tail call fastcc void @__NVIC_SetPriority.89(i32 noundef -12, i32 noundef 0) #23, !dbg !10328
  tail call fastcc void @__NVIC_SetPriority.89(i32 noundef -11, i32 noundef 0) #23, !dbg !10329
  tail call fastcc void @__NVIC_SetPriority.89(i32 noundef -10, i32 noundef 0) #23, !dbg !10330
  tail call fastcc void @__NVIC_SetPriority.89(i32 noundef -4, i32 noundef 0) #23, !dbg !10331
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10332
  %8 = or i32 %7, 458752, !dbg !10332
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10332
  tail call void @z_arm_fault_init() #23, !dbg !10333
  tail call void @z_arm_cpu_idle_init() #23, !dbg !10334
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10335
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10338
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !10339
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #22, !dbg !10339
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10302, metadata !DIExpression()), !dbg !10340
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !10341
  call void @z_device_state_init() #23, !dbg !10342
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !10343
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !10344
  %10 = call fastcc i8* @prepare_multithreading() #24, !dbg !10345
  call fastcc void @switch_to_main_thread(i8* noundef %10) #27, !dbg !10346
  unreachable, !dbg !10346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1732, metadata !DIExpression()), !dbg !10347
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10348
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10348
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1733, metadata !DIExpression()), !dbg !10347
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1733, metadata !DIExpression()), !dbg !10347
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10349
  br i1 %7, label %8, label %35, !dbg !10350

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1733, metadata !DIExpression()), !dbg !10347
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10351
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10351
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1743, metadata !DIExpression()), !dbg !10352
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10353
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10353
  %14 = tail call i32 %13(%struct.device* noundef %11) #23, !dbg !10354
  call void @llvm.dbg.value(metadata i32 %14, metadata !1747, metadata !DIExpression()), !dbg !10352
  %15 = icmp eq %struct.device* %11, null, !dbg !10355
  br i1 %15, label %32, label %16, !dbg !10357

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10358
  br i1 %17, label %26, label %18, !dbg !10361

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10362
  call void @llvm.dbg.value(metadata i32 %19, metadata !1747, metadata !DIExpression()), !dbg !10352
  %20 = icmp ult i32 %19, 255, !dbg !10364
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10364
  call void @llvm.dbg.value(metadata i32 %21, metadata !1747, metadata !DIExpression()), !dbg !10352
  %22 = trunc i32 %21 to i8, !dbg !10365
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10366
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10366
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10367
  store i8 %22, i8* %25, align 1, !dbg !10368
  br label %26, !dbg !10369

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10370
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10370
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10371
  %30 = load i8, i8* %29, align 1, !dbg !10372
  %31 = or i8 %30, 1, !dbg !10372
  store i8 %31, i8* %29, align 1, !dbg !10372
  br label %32, !dbg !10373

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10374
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1733, metadata !DIExpression()), !dbg !10347
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10349
  br i1 %34, label %8, label %35, !dbg !10350, !llvm.loop !10375

35:                                               ; preds = %32, %1
  ret void, !dbg !10377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.89(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10380, metadata !DIExpression()), !dbg !10382
  call void @llvm.dbg.value(metadata i32 %1, metadata !10381, metadata !DIExpression()), !dbg !10382
  %3 = trunc i32 %1 to i8, !dbg !10383
  %4 = shl i8 %3, 4, !dbg !10383
  %5 = and i32 %0, 15, !dbg !10386
  %6 = add nsw i32 %5, -4, !dbg !10387
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10388
  store volatile i8 %4, i8* %7, align 1, !dbg !10389
  ret void, !dbg !10390
}

; Function Attrs: optsize
declare !dbg !10391 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !10392 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10395, metadata !DIExpression()), !dbg !10396
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10397
  store i8 1, i8* %2, align 1, !dbg !10398
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10399
  store i8 1, i8* %3, align 4, !dbg !10400
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !10401
  store %struct.k_heap* null, %struct.k_heap** %4, align 4, !dbg !10402
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10403
  ret void, !dbg !10404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !10405 {
  tail call void @z_sched_init() #23, !dbg !10410
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10411
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i32 0, i32 0)) #23, !dbg !10412
  call void @llvm.dbg.value(metadata i8* %1, metadata !10409, metadata !DIExpression()), !dbg !10413
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !10414
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #23, !dbg !10415
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !10416
  ret i8* %1, !dbg !10417
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !10418 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10422, metadata !DIExpression()), !dbg !10423
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #23, !dbg !10424
  unreachable, !dbg !10425
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !10426 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10428, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i8* %1, metadata !10429, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i8* %2, metadata !10430, metadata !DIExpression()), !dbg !10431
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !10432
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !10433
  tail call void @boot_banner() #23, !dbg !10434
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !10435
  tail call void @z_init_static_threads() #23, !dbg !10436
  tail call void @main() #23, !dbg !10437
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10438
  %5 = and i8 %4, -2, !dbg !10438
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10438
  ret void, !dbg !10439
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !10440 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10450, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i8* %1, metadata !10451, metadata !DIExpression()), !dbg !10452
  ret void, !dbg !10453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !10454 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10456, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata i8* %1, metadata !10457, metadata !DIExpression()), !dbg !10458
  ret void, !dbg !10459
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !10460 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !10461, !srcloc !10468
  call void @llvm.dbg.value(metadata i32 %1, metadata !10464, metadata !DIExpression()) #22, !dbg !10469
  %2 = icmp ne i32 %1, 0, !dbg !10470
  ret i1 %2, !dbg !10471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !10472 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10473
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10474
  %3 = load i8, i8* %2, align 4, !dbg !10475
  %4 = or i8 %3, 1, !dbg !10475
  store i8 %4, i8* %2, align 4, !dbg !10475
  ret void, !dbg !10476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !10477 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10478
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10479
  %3 = load i8, i8* %2, align 4, !dbg !10480
  %4 = and i8 %3, -2, !dbg !10480
  store i8 %4, i8* %2, align 4, !dbg !10480
  ret void, !dbg !10481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !10482 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10483
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10484
  %3 = load i8, i8* %2, align 4, !dbg !10484
  %4 = and i8 %3, 1, !dbg !10485
  %5 = icmp ne i8 %4, 0, !dbg !10486
  ret i1 %5, !dbg !10487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !10488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10492, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i8* %1, metadata !10493, metadata !DIExpression()), !dbg !10494
  ret i32 -88, !dbg !10495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !10496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10500, metadata !DIExpression()), !dbg !10501
  ret i8* null, !dbg !10502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !10503 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10507, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.value(metadata i8* %1, metadata !10508, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.value(metadata i32 %2, metadata !10509, metadata !DIExpression()), !dbg !10510
  ret i32 -88, !dbg !10511
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1754 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !1863, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i8* %1, metadata !1864, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 %2, metadata !1865, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 0, metadata !1866, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i8 undef, metadata !1868, metadata !DIExpression()), !dbg !10512
  %4 = icmp eq i8* %1, null, !dbg !10513
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !10515
  br i1 %6, label %46, label %7, !dbg !10515

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10516
  %9 = load i8, i8* %8, align 1, !dbg !10516
  call void @llvm.dbg.value(metadata i8 %9, metadata !1868, metadata !DIExpression()), !dbg !10512
  %10 = add i32 %2, -1, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %10, metadata !1865, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i8 0, metadata !1869, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i8 %9, metadata !1868, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 0, metadata !1866, metadata !DIExpression()), !dbg !10512
  %11 = icmp eq i8 %9, 0, !dbg !10519
  br i1 %11, label %12, label %15, !dbg !10521

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !10522
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !10523
  store i8 0, i8* %14, align 1, !dbg !10524
  br label %46, !dbg !10525

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !1869, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i8 %17, metadata !1868, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 %18, metadata !1866, metadata !DIExpression()), !dbg !10512
  %19 = zext i8 %17 to i32, !dbg !10526
  %20 = zext i8 %16 to i32, !dbg !10527
  %21 = shl nuw i32 1, %20, !dbg !10527
  call void @llvm.dbg.value(metadata i32 %21, metadata !1867, metadata !DIExpression()), !dbg !10512
  %22 = and i32 %21, %19, !dbg !10529
  %23 = icmp eq i32 %22, 0, !dbg !10531
  br i1 %23, label %42, label %24, !dbg !10532

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !10533
  %26 = sub i32 %10, %18, !dbg !10534
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !10535
  %28 = load i8*, i8** %27, align 4, !dbg !10535
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !10536
  %30 = load i32, i32* %29, align 4, !dbg !10536
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !10537
  %32 = add i32 %31, %18, !dbg !10538
  call void @llvm.dbg.value(metadata i32 %32, metadata !1866, metadata !DIExpression()), !dbg !10512
  %33 = trunc i32 %21 to i8, !dbg !10539
  %34 = xor i8 %33, -1, !dbg !10539
  %35 = and i8 %17, %34, !dbg !10539
  call void @llvm.dbg.value(metadata i8 %35, metadata !1868, metadata !DIExpression()), !dbg !10512
  %36 = icmp eq i8 %35, 0, !dbg !10540
  br i1 %36, label %12, label %37, !dbg !10542

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !10543
  %39 = sub i32 %10, %32, !dbg !10545
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #24, !dbg !10546
  %41 = add i32 %40, %32, !dbg !10547
  call void @llvm.dbg.value(metadata i32 %41, metadata !1866, metadata !DIExpression()), !dbg !10512
  br label %42, !dbg !10548

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !10512
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !10512
  call void @llvm.dbg.value(metadata i8 %44, metadata !1868, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 %43, metadata !1866, metadata !DIExpression()), !dbg !10512
  %45 = add i8 %16, 1, !dbg !10549
  call void @llvm.dbg.value(metadata i8 %45, metadata !1869, metadata !DIExpression()), !dbg !10518
  br label %15, !dbg !10521

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !10512
  ret i8* %47, !dbg !10550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10551 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10555, metadata !DIExpression()), !dbg !10560
  call void @llvm.dbg.value(metadata i32 %1, metadata !10556, metadata !DIExpression()), !dbg !10560
  call void @llvm.dbg.value(metadata i8* %2, metadata !10557, metadata !DIExpression()), !dbg !10560
  call void @llvm.dbg.value(metadata i32 %3, metadata !10558, metadata !DIExpression()), !dbg !10560
  %5 = icmp ult i32 %1, %3, !dbg !10561
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !10561
  call void @llvm.dbg.value(metadata i32 %6, metadata !10559, metadata !DIExpression()), !dbg !10560
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #23, !dbg !10562
  ret i32 %6, !dbg !10563
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10568, metadata !DIExpression()), !dbg !10569
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #23, !dbg !10570
  ret void, !dbg !10571
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !10572 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10581, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10582, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32 %2, metadata !10583, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !10584, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i8* %4, metadata !10585, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i8* %5, metadata !10586, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i8* %6, metadata !10587, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32 %7, metadata !10588, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32 %8, metadata !10589, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i8* undef, metadata !10590, metadata !DIExpression()), !dbg !10592
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !10593
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #24, !dbg !10594
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !10595
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !10596
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !10597
  call void @llvm.dbg.value(metadata i8* %13, metadata !10591, metadata !DIExpression()), !dbg !10592
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #23, !dbg !10598
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !10599
  store i8* null, i8** %14, align 4, !dbg !10600
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10601
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !10601
  br i1 %16, label %20, label %17, !dbg !10603

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 5, !dbg !10604
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 4, !dbg !10604
  br label %20, !dbg !10605

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !10592
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !10606
  store %struct.k_heap* %21, %struct.k_heap** %22, align 4, !dbg !10608
  ret i8* %13, !dbg !10609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !10610 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !10615, metadata !DIExpression()), !dbg !10616
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !10617
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !10618
  ret void, !dbg !10619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !10620 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !10625, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i32 %1, metadata !10626, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i32 %2, metadata !10627, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i32 %3, metadata !10628, metadata !DIExpression()), !dbg !10629
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !10630
  store %union.anon* null, %union.anon** %5, align 8, !dbg !10631
  %6 = trunc i32 %3 to i8, !dbg !10632
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !10633
  store i8 %6, i8* %7, align 4, !dbg !10634
  %8 = trunc i32 %2 to i8, !dbg !10635
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !10636
  store i8 %8, i8* %9, align 1, !dbg !10637
  %10 = trunc i32 %1 to i8, !dbg !10638
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !10639
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !10639
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !10639
  store i8 %10, i8* %13, align 2, !dbg !10640
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !10641
  store i8 0, i8* %14, align 1, !dbg !10642
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !10643
  ret void, !dbg !10644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !10645 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10649, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10650, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata i32 %1, metadata !10651, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata i32 0, metadata !10656, metadata !DIExpression()), !dbg !10657
  %3 = add i32 %1, 7, !dbg !10658
  %4 = and i32 %3, -8, !dbg !10658
  call void @llvm.dbg.value(metadata i32 %4, metadata !10652, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata i8* undef, metadata !10655, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata i32 %4, metadata !10653, metadata !DIExpression()), !dbg !10657
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !10660
  call void @llvm.dbg.value(metadata i8* %5, metadata !10654, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata i32 0, metadata !10656, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata i8* %5, metadata !10654, metadata !DIExpression()), !dbg !10657
  ret i8* %5, !dbg !10661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !10662 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !10667, metadata !DIExpression()), !dbg !10668
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !10669
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !10670
  ret void, !dbg !10671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !10672 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !10674, metadata !DIExpression()), !dbg !10675
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !10676
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !10677
  ret void, !dbg !10678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !10679 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10683, metadata !DIExpression()), !dbg !10684
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !10685
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !10686
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10687
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !10688
  ret void, !dbg !10689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !10690 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10695, metadata !DIExpression()), !dbg !10696
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !10697
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !10698
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10699
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !10700
  ret void, !dbg !10701
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !10702 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !10719, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10710, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10711, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i32 %2, metadata !10712, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !10713, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i8* %4, metadata !10714, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i8* %5, metadata !10715, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i8* %6, metadata !10716, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i32 %7, metadata !10717, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i32 %8, metadata !10718, metadata !DIExpression()), !dbg !10720
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !10721
  %13 = icmp eq i64 %11, -1, !dbg !10722
  br i1 %13, label %15, label %14, !dbg !10724

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !10725
  br label %15, !dbg !10727

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !10728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10729 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !10734, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10733, metadata !DIExpression()), !dbg !10735
  %4 = icmp eq i64 %3, 0, !dbg !10736
  br i1 %4, label %5, label %6, !dbg !10738

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !10739
  br label %7, !dbg !10741

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !10742
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !10744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10745 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10749, metadata !DIExpression()), !dbg !10750
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !10751, !srcloc !10753
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !10754
  ret void, !dbg !10755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10756 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10759, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10758, metadata !DIExpression()), !dbg !10760
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !10761
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #23, !dbg !10762
  ret void, !dbg !10763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !10764 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !10766, metadata !DIExpression()), !dbg !10786
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !10787

1:                                                ; preds = %2
  tail call void @k_sched_lock() #23, !dbg !10788
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !10784, metadata !DIExpression()), !dbg !10789
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !10790

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !10766, metadata !DIExpression()), !dbg !10786
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !10791
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !10791
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !10794
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !10794
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !10795
  %9 = load i32, i32* %8, align 4, !dbg !10795
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !10796
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !10796
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !10797
  %13 = load i8*, i8** %12, align 4, !dbg !10797
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !10798
  %15 = load i8*, i8** %14, align 4, !dbg !10798
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !10799
  %17 = load i8*, i8** %16, align 4, !dbg !10799
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !10800
  %19 = load i32, i32* %18, align 4, !dbg !10800
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !10801
  %21 = load i32, i32* %20, align 4, !dbg !10801
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !10802
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !10803
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !10804
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !10805
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !10805
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !10806
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !10766, metadata !DIExpression()), !dbg !10786
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !10807
  br i1 %27, label %2, label %1, !dbg !10787, !llvm.loop !10809

28:                                               ; preds = %0
  tail call void @k_sched_lock() #23, !dbg !10788
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !10784, metadata !DIExpression()), !dbg !10789
  br label %29, !dbg !10790

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #23, !dbg !10811
  ret void, !dbg !10812

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !10784, metadata !DIExpression()), !dbg !10789
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !10813
  %33 = load i32, i32* %32, align 4, !dbg !10813
  %34 = icmp eq i32 %33, -1, !dbg !10817
  br i1 %34, label %43, label %35, !dbg !10818

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !10819
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !10819
  %38 = icmp sgt i32 %33, 0, !dbg !10821
  %39 = select i1 %38, i32 %33, i32 0, !dbg !10821
  %40 = zext i32 %39 to i64, !dbg !10821
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #24, !dbg !10821
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !10822
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !10822
  br label %43, !dbg !10823

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !10824
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !10784, metadata !DIExpression()), !dbg !10789
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !10825
  br i1 %45, label %30, label %29, !dbg !10790, !llvm.loop !10827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !10829 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i64 %0, metadata !10836, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i32 1000, metadata !10841, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i32 10000, metadata !10842, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i8 1, metadata !10843, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i8 0, metadata !10844, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i8 1, metadata !10845, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i8 0, metadata !10846, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i8 1, metadata !10847, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i8 0, metadata !10848, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i64 0, metadata !10849, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i64 0, metadata !10849, metadata !DIExpression()), !dbg !10853
  %2 = mul i64 %0, 10, !dbg !10855
  ret i64 %2, !dbg !10861
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !10862 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !10864, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata i8* %1, metadata !10865, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata i8* %2, metadata !10866, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata i8* %3, metadata !10867, metadata !DIExpression()), !dbg !10868
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10869
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !10870
  %7 = load i8, i8* %6, align 4, !dbg !10871
  %8 = or i8 %7, 4, !dbg !10871
  store i8 %8, i8* %6, align 4, !dbg !10871
  tail call void @z_thread_essential_clear() #24, !dbg !10872
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !10873
  unreachable, !dbg !10873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !10874 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10878, metadata !DIExpression()), !dbg !10879
  ret i32 -134, !dbg !10880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !10881 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10885, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.value(metadata i32 %1, metadata !10886, metadata !DIExpression()), !dbg !10887
  ret i32 -134, !dbg !10888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !10889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10896, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !10897, metadata !DIExpression()), !dbg !10898
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !10899
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !10901
  %6 = select i1 %5, i32 -22, i32 0, !dbg !10898
  ret i32 %6, !dbg !10902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !10903 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !10907, metadata !DIExpression()), !dbg !10908
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !10909
  %3 = select i1 %2, i32 -22, i32 0, !dbg !10908
  ret i32 %3, !dbg !10911
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !10912 {
  tail call void @sys_clock_idle_exit() #23, !dbg !10914
  ret void, !dbg !10915
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !10916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10918, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i8* %1, metadata !10919, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i8* %2, metadata !10920, metadata !DIExpression()), !dbg !10921
  br label %4, !dbg !10922

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !10923, !srcloc !10930
  call void @llvm.dbg.value(metadata i32 undef, metadata !10926, metadata !DIExpression()) #22, !dbg !10931
  call void @llvm.dbg.value(metadata i32 undef, metadata !10927, metadata !DIExpression()) #22, !dbg !10931
  tail call fastcc void @k_cpu_idle() #24, !dbg !10932
  br label %4, !dbg !10922, !llvm.loop !10933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !10935 {
  tail call void @arch_cpu_idle() #23, !dbg !10936
  ret void, !dbg !10937
}

; Function Attrs: optsize
declare !dbg !10938 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !10939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10943, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !10944, metadata !DIExpression()), !dbg !10947
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !10948
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !10948
  %5 = load i8, i8* %4, align 2, !dbg !10948
  call void @llvm.dbg.value(metadata i8 %5, metadata !10945, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !10947
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !10949
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !10949
  %8 = load i8, i8* %7, align 2, !dbg !10949
  call void @llvm.dbg.value(metadata i8 %8, metadata !10946, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !10947
  %9 = icmp eq i8 %8, %5, !dbg !10950
  %10 = sext i8 %5 to i32, !dbg !10952
  %11 = sext i8 %8 to i32, !dbg !10952
  %12 = sub nsw i32 %11, %10, !dbg !10952
  %13 = select i1 %9, i32 0, i32 %12, !dbg !10952
  ret i32 %13, !dbg !10953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !10954 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10958, metadata !DIExpression()), !dbg !10959
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !10960
  %3 = icmp eq i32 %2, 0, !dbg !10962
  br i1 %3, label %8, label %4, !dbg !10963

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #23, !dbg !10964
  %6 = add i32 %5, %2, !dbg !10966
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !10967
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !10968
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #23, !dbg !10969
  br label %8, !dbg !10970

8:                                                ; preds = %4, %1
  ret void, !dbg !10971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !10972 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10976, metadata !DIExpression()), !dbg !10978
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %1, metadata !10977, metadata !DIExpression()), !dbg !10978
  ret i32 %1, !dbg !10980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10985, metadata !DIExpression()), !dbg !10994
  call void @llvm.dbg.value(metadata i32 %1, metadata !10986, metadata !DIExpression()), !dbg !10994
  call void @llvm.dbg.value(metadata i32 0, metadata !10987, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !11003
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11005, !srcloc !11011
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %4, metadata !11008, metadata !DIExpression()) #22, !dbg !11012
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11012
  call void @llvm.dbg.value(metadata i32 %4, metadata !11002, metadata !DIExpression()) #22, !dbg !11003
  call void @llvm.dbg.value(metadata i32 %4, metadata !10993, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.value(metadata i32 undef, metadata !10987, metadata !DIExpression()), !dbg !10995
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11013
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !11016
  %6 = icmp sgt i32 %0, 0, !dbg !11017
  %7 = icmp sgt i32 %5, 2, !dbg !11019
  %8 = select i1 %7, i32 %5, i32 2, !dbg !11019
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !11019
  store i32 %9, i32* @slice_ticks, align 4, !dbg !11020
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !11021
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11022
  call void @llvm.dbg.value(metadata i32 %4, metadata !11023, metadata !DIExpression()) #22, !dbg !11029
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11029
  call void @llvm.dbg.value(metadata i32 %4, metadata !11031, metadata !DIExpression()) #22, !dbg !11034
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !11036, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !10987, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.value(metadata i32 undef, metadata !10987, metadata !DIExpression()), !dbg !10995
  ret void, !dbg !11038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !11039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11043, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 %0, metadata !11045, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11060
  call void @llvm.dbg.value(metadata i32 1000, metadata !11048, metadata !DIExpression()), !dbg !11060
  call void @llvm.dbg.value(metadata i32 10000, metadata !11049, metadata !DIExpression()), !dbg !11060
  call void @llvm.dbg.value(metadata i8 1, metadata !11050, metadata !DIExpression()), !dbg !11060
  call void @llvm.dbg.value(metadata i1 true, metadata !11051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11060
  call void @llvm.dbg.value(metadata i1 true, metadata !11052, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11060
  call void @llvm.dbg.value(metadata i8 0, metadata !11053, metadata !DIExpression()), !dbg !11060
  call void @llvm.dbg.value(metadata i1 true, metadata !11054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11060
  call void @llvm.dbg.value(metadata i1 false, metadata !11055, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11060
  call void @llvm.dbg.value(metadata i64 0, metadata !11056, metadata !DIExpression()), !dbg !11060
  call void @llvm.dbg.value(metadata i64 0, metadata !11056, metadata !DIExpression()), !dbg !11060
  %2 = mul i32 %0, 10, !dbg !11062
  ret i32 %2, !dbg !11068
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !11069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11071, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !11074
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11076, !srcloc !11011
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11076
  call void @llvm.dbg.value(metadata i32 %3, metadata !11008, metadata !DIExpression()) #22, !dbg !11078
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %3, metadata !11002, metadata !DIExpression()) #22, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %3, metadata !11072, metadata !DIExpression()), !dbg !11073
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !11079
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11081
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !11082
  br i1 %6, label %7, label %8, !dbg !11083

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11084
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !11086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11086
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !11088
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !11090, !srcloc !11037
  br label %24, !dbg !11091

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !11092
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !11093
  %10 = icmp eq i32 %9, 0, !dbg !11093
  br i1 %10, label %21, label %11, !dbg !11095

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !11096
  br i1 %12, label %13, label %21, !dbg !11097

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11098
  %15 = icmp sgt i32 %14, %0, !dbg !11101
  br i1 %15, label %19, label %16, !dbg !11102

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11103
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !11103
  call void @llvm.dbg.value(metadata i32 %18, metadata !11072, metadata !DIExpression()), !dbg !11073
  br label %22, !dbg !11105

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !11106
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11106
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11108
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !11073
  call void @llvm.dbg.value(metadata i32 %23, metadata !11072, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata i32 %23, metadata !11023, metadata !DIExpression()) #22, !dbg !11110
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11110
  call void @llvm.dbg.value(metadata i32 %23, metadata !11031, metadata !DIExpression()) #22, !dbg !11112
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #22, !dbg !11114, !srcloc !11037
  br label %24, !dbg !11115

24:                                               ; preds = %22, %7
  ret void, !dbg !11115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !11116 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11120, metadata !DIExpression()), !dbg !11122
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !11123
  %3 = icmp eq i32 %2, 0, !dbg !11123
  br i1 %3, label %16, label %4, !dbg !11124

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !11125
  br i1 %5, label %16, label %6, !dbg !11126

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11127
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !11127
  %9 = load i8, i8* %8, align 2, !dbg !11127
  %10 = sext i8 %9 to i32, !dbg !11128
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !11129
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !11130
  br i1 %12, label %16, label %13, !dbg !11131

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !11132
  %15 = xor i1 %14, true, !dbg !11133
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !11122
  call void @llvm.dbg.value(metadata i1 %17, metadata !11121, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11122
  ret i1 %17, !dbg !11134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !11135 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11139, metadata !DIExpression()), !dbg !11141
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11142
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11140, metadata !DIExpression()), !dbg !11141
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !11143
  br i1 %3, label %5, label %4, !dbg !11145

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !11146
  br label %5, !dbg !11148

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !11139, metadata !DIExpression()), !dbg !11141
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11149
  ret i32 %6, !dbg !11150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11151 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11153, metadata !DIExpression()), !dbg !11155
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11156
  %3 = load i8, i8* %2, align 1, !dbg !11156
  call void @llvm.dbg.value(metadata i8 %3, metadata !11154, metadata !DIExpression()), !dbg !11155
  %4 = and i8 %3, 31, !dbg !11157
  %5 = icmp ne i8 %4, 0, !dbg !11158
  ret i1 %5, !dbg !11159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11162, metadata !DIExpression()), !dbg !11163
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !11164
  br i1 %2, label %3, label %7, !dbg !11166

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11167, metadata !DIExpression()) #22, !dbg !11170
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11173
  %5 = load i8, i8* %4, align 1, !dbg !11174
  %6 = and i8 %5, 127, !dbg !11174
  store i8 %6, i8* %4, align 1, !dbg !11174
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11175, metadata !DIExpression()) #22, !dbg !11178
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #23, !dbg !11182
  br label %7, !dbg !11183

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11184, metadata !DIExpression()) #22, !dbg !11187
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11189
  %9 = load i8, i8* %8, align 1, !dbg !11190
  %10 = or i8 %9, -128, !dbg !11190
  store i8 %10, i8* %8, align 1, !dbg !11190
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11191, metadata !DIExpression()) #22, !dbg !11194
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11198, metadata !DIExpression()) #22, !dbg !11206
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11204, metadata !DIExpression()) #22, !dbg !11206
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !11208
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !11205, metadata !DIExpression()) #22, !dbg !11206
  %12 = icmp eq %struct._dnode* %11, null, !dbg !11210
  br i1 %12, label %23, label %13, !dbg !11208

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !11205, metadata !DIExpression()) #22, !dbg !11206
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !11212
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !11205, metadata !DIExpression()) #22, !dbg !11206
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #23, !dbg !11213
  %17 = icmp sgt i32 %16, 0, !dbg !11216
  br i1 %17, label %18, label %20, !dbg !11217

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11218
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #23, !dbg !11220
  br label %25, !dbg !11221

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #23, !dbg !11210
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !11205, metadata !DIExpression()) #22, !dbg !11206
  %22 = icmp eq %struct._dnode* %21, null, !dbg !11210
  br i1 %22, label %23, label %13, !dbg !11208, !llvm.loop !11222

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11224
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #23, !dbg !11225
  br label %25, !dbg !11226

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11227
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !11228
  %28 = zext i1 %27 to i32, !dbg !11228
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !11229
  ret void, !dbg !11230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11231 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11233, metadata !DIExpression()), !dbg !11234
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !11235
  ret i1 %2, !dbg !11236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !11237 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !11239, metadata !DIExpression()), !dbg !11241
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11240, metadata !DIExpression()), !dbg !11241
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !11242
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !11243
  ret void, !dbg !11244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !11245 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11249, metadata !DIExpression()), !dbg !11250
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !11251
  br i1 %2, label %6, label %3, !dbg !11251

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11252
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11252
  br label %6, !dbg !11251

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !11251
  ret %struct._dnode* %7, !dbg !11253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11254 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11258, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11259, metadata !DIExpression()), !dbg !11262
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11263
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11263
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11260, metadata !DIExpression()), !dbg !11262
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11264
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !11265
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11266
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !11267
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11268
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11269
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11270
  ret void, !dbg !11271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !11272 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11276, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11277, metadata !DIExpression()), !dbg !11278
  %3 = icmp eq %struct._dnode* %1, null, !dbg !11279
  br i1 %3, label %6, label %4, !dbg !11280

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !11281
  br label %6, !dbg !11280

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !11280
  ret %struct._dnode* %7, !dbg !11282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11283 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11287, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11288, metadata !DIExpression()), !dbg !11290
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11291
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11291
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11289, metadata !DIExpression()), !dbg !11290
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11292
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !11293
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11294
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !11295
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11296
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11297
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11298
  ret void, !dbg !11299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !11300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11302, metadata !DIExpression()), !dbg !11304
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !11305
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11312, metadata !DIExpression()) #22, !dbg !11314
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !11315
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !11316
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !11316
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11303, metadata !DIExpression()), !dbg !11304
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11317, metadata !DIExpression()) #22, !dbg !11323
  call void @llvm.dbg.value(metadata i32 %0, metadata !11322, metadata !DIExpression()) #22, !dbg !11323
  %6 = icmp eq i32 %0, 0, !dbg !11326
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11328
  br i1 %6, label %8, label %15, !dbg !11329

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #23, !dbg !11330
  br i1 %9, label %15, label %10, !dbg !11332

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #23, !dbg !11333
  br i1 %11, label %15, label %12, !dbg !11335

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #23, !dbg !11336
  %14 = icmp eq i32 %13, 0, !dbg !11336
  br i1 %14, label %18, label %15, !dbg !11338

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !11339
  br i1 %16, label %18, label %17, !dbg !11342

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11343
  br label %18, !dbg !11345

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !11328
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11328
  ret void, !dbg !11346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !11347 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11351, metadata !DIExpression()), !dbg !11354
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11352, metadata !DIExpression()), !dbg !11354
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !11355
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !11353, metadata !DIExpression()), !dbg !11354
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !11352, metadata !DIExpression()), !dbg !11354
  ret %struct.k_thread* %3, !dbg !11356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11359, metadata !DIExpression()), !dbg !11360
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11361
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !11362
  %4 = xor i1 %3, true, !dbg !11363
  ret i1 %4, !dbg !11364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11365 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11367, metadata !DIExpression()), !dbg !11368
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !11369
  %3 = load i16, i16* %2, align 2, !dbg !11369
  %4 = icmp ult i16 %3, 128, !dbg !11370
  %5 = zext i1 %4 to i32, !dbg !11370
  ret i32 %5, !dbg !11371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11372 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11378, metadata !DIExpression()), !dbg !11379
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11380
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !11381
  %4 = xor i1 %3, true, !dbg !11382
  ret i1 %4, !dbg !11383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11384 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11390, metadata !DIExpression()), !dbg !11391
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11392
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11392
  %4 = icmp ne %struct._dnode* %3, null, !dbg !11393
  ret i1 %4, !dbg !11394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !11395 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11397, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11398, metadata !DIExpression()), !dbg !11399
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11400
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11400
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !11401
  br i1 %5, label %9, label %6, !dbg !11402

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11403
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !11403
  br label %9, !dbg !11402

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !11402
  ret %struct._dnode* %10, !dbg !11404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !11405 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11409, metadata !DIExpression()), !dbg !11410
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11411
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11411
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !11412
  ret i1 %4, !dbg !11413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !11414 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11418, metadata !DIExpression()), !dbg !11421
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11422
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11422
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !11419, metadata !DIExpression()), !dbg !11421
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11423
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11423
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !11420, metadata !DIExpression()), !dbg !11421
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !11424
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !11425
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !11426
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !11427
  tail call fastcc void @sys_dnode_init.103(%struct._dnode* noundef %0) #24, !dbg !11428
  ret void, !dbg !11429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.103(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11430 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11432, metadata !DIExpression()), !dbg !11433
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11434
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11435
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11436
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11437
  ret void, !dbg !11438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11439 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11443, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.value(metadata i32 128, metadata !11444, metadata !DIExpression()), !dbg !11445
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11446
  %3 = load i8, i8* %2, align 1, !dbg !11446
  %4 = icmp slt i8 %3, 0, !dbg !11447
  ret i1 %4, !dbg !11448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11453, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i32 %1, metadata !11454, metadata !DIExpression()), !dbg !11455
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !11456
  ret i1 %3, !dbg !11457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !11458 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11460, metadata !DIExpression()), !dbg !11461
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !11462
  ret i1 %2, !dbg !11463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11466, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata i32 %1, metadata !11467, metadata !DIExpression()), !dbg !11468
  %3 = icmp slt i32 %0, %1, !dbg !11469
  ret i1 %3, !dbg !11470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11473, metadata !DIExpression()), !dbg !11477
  call void @llvm.dbg.value(metadata i32 0, metadata !11474, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !11479
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11481, !srcloc !11011
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11481
  call void @llvm.dbg.value(metadata i32 %3, metadata !11008, metadata !DIExpression()) #22, !dbg !11483
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11483
  call void @llvm.dbg.value(metadata i32 %3, metadata !11002, metadata !DIExpression()) #22, !dbg !11479
  call void @llvm.dbg.value(metadata i32 %3, metadata !11476, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.value(metadata i32 undef, metadata !11474, metadata !DIExpression()), !dbg !11478
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !11484
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !11489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11489
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !11491
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !11493, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !11474, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.value(metadata i32 undef, metadata !11474, metadata !DIExpression()), !dbg !11478
  ret void, !dbg !11494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11495 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11497, metadata !DIExpression()), !dbg !11498
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !11499
  br i1 %2, label %24, label %3, !dbg !11501

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !11502
  br i1 %4, label %5, label %24, !dbg !11503

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11184, metadata !DIExpression()) #22, !dbg !11504
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11507
  %7 = load i8, i8* %6, align 1, !dbg !11508
  %8 = or i8 %7, -128, !dbg !11508
  store i8 %8, i8* %6, align 1, !dbg !11508
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11191, metadata !DIExpression()) #22, !dbg !11509
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11198, metadata !DIExpression()) #22, !dbg !11511
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11204, metadata !DIExpression()) #22, !dbg !11511
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !11513
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !11205, metadata !DIExpression()) #22, !dbg !11511
  %10 = icmp eq %struct._dnode* %9, null, !dbg !11514
  br i1 %10, label %21, label %11, !dbg !11513

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !11205, metadata !DIExpression()) #22, !dbg !11511
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !11515
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !11205, metadata !DIExpression()) #22, !dbg !11511
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #23, !dbg !11516
  %15 = icmp sgt i32 %14, 0, !dbg !11517
  br i1 %15, label %16, label %18, !dbg !11518

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11519
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #23, !dbg !11520
  br label %23, !dbg !11521

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #23, !dbg !11514
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !11205, metadata !DIExpression()) #22, !dbg !11511
  %20 = icmp eq %struct._dnode* %19, null, !dbg !11514
  br i1 %20, label %21, label %11, !dbg !11513, !llvm.loop !11522

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11524
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #23, !dbg !11525
  br label %23, !dbg !11526

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !11527
  br label %24, !dbg !11528

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !11529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11532, metadata !DIExpression()), !dbg !11533
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !11534
  br i1 %2, label %6, label %3, !dbg !11535

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !11536
  %5 = xor i1 %4, true, !dbg !11535
  br label %6, !dbg !11535

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !11537
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11540, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.value(metadata i32 0, metadata !11541, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !11546
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11548, !srcloc !11011
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %3, metadata !11008, metadata !DIExpression()) #22, !dbg !11550
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11550
  call void @llvm.dbg.value(metadata i32 %3, metadata !11002, metadata !DIExpression()) #22, !dbg !11546
  call void @llvm.dbg.value(metadata i32 %3, metadata !11543, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 undef, metadata !11541, metadata !DIExpression()), !dbg !11545
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !11551
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !11554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11554
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !11556
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !11558, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !11541, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 undef, metadata !11541, metadata !DIExpression()), !dbg !11545
  ret void, !dbg !11559
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11562, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !11565
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11567, !srcloc !11011
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11567
  call void @llvm.dbg.value(metadata i32 %3, metadata !11008, metadata !DIExpression()) #22, !dbg !11569
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11569
  call void @llvm.dbg.value(metadata i32 %3, metadata !11002, metadata !DIExpression()) #22, !dbg !11565
  call void @llvm.dbg.value(metadata i32 %3, metadata !11563, metadata !DIExpression()), !dbg !11564
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !11570
  br i1 %4, label %5, label %6, !dbg !11572

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !11573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11573
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !11576
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !11578, !srcloc !11037
  br label %8, !dbg !11579

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.108(%struct.k_thread* noundef %0) #24, !dbg !11580
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !11581
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11582
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !11582
  br label %8, !dbg !11583

8:                                                ; preds = %6, %5
  ret void, !dbg !11583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11586, metadata !DIExpression()), !dbg !11587
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11588
  %3 = load i8, i8* %2, align 1, !dbg !11588
  %4 = and i8 %3, 4, !dbg !11589
  %5 = icmp eq i8 %4, 0, !dbg !11590
  ret i1 %5, !dbg !11591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.108(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11594, metadata !DIExpression()), !dbg !11595
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11596
  %3 = load i8, i8* %2, align 1, !dbg !11597
  %4 = and i8 %3, -5, !dbg !11597
  store i8 %4, i8* %2, align 1, !dbg !11597
  ret void, !dbg !11598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !11599 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !11602, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11601, metadata !DIExpression()), !dbg !11603
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !11604
  br i1 %4, label %5, label %9, !dbg !11606

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !11607
  br i1 %6, label %7, label %9, !dbg !11608

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()) #22, !dbg !11615
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11614, metadata !DIExpression()) #22, !dbg !11615
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #23, !dbg !11618
  br label %10, !dbg !11619

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !11620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11620
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !11623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !11625, !srcloc !11037
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !11626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !11627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11631, metadata !DIExpression()), !dbg !11632
  call void @llvm.dbg.value(metadata i32 %0, metadata !11633, metadata !DIExpression()), !dbg !11638
  %2 = icmp eq i32 %0, 0, !dbg !11640
  br i1 %2, label %3, label %6, !dbg !11641

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !11642, !srcloc !11649
  call void @llvm.dbg.value(metadata i32 %4, metadata !11645, metadata !DIExpression()) #22, !dbg !11650
  %5 = icmp eq i32 %4, 0, !dbg !11651
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !11632
  ret i1 %7, !dbg !11652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !11653 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11656
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11655, metadata !DIExpression()), !dbg !11657
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11658
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !11659
  ret i1 %3, !dbg !11660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !11661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11663, metadata !DIExpression()), !dbg !11665
  %2 = tail call i32 @arch_swap(i32 noundef %0) #23, !dbg !11666
  call void @llvm.dbg.value(metadata i32 %2, metadata !11664, metadata !DIExpression()), !dbg !11665
  ret i32 %2, !dbg !11667
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11668 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11670, metadata !DIExpression()), !dbg !11674
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !11675
  call void @llvm.dbg.value(metadata i32 0, metadata !11671, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !11677
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11679, !srcloc !11011
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11679
  call void @llvm.dbg.value(metadata i32 %4, metadata !11008, metadata !DIExpression()) #22, !dbg !11681
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %4, metadata !11002, metadata !DIExpression()) #22, !dbg !11677
  call void @llvm.dbg.value(metadata i32 %4, metadata !11673, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata i32 undef, metadata !11671, metadata !DIExpression()), !dbg !11676
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !11682
  br i1 %5, label %6, label %10, !dbg !11686

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11167, metadata !DIExpression()) #22, !dbg !11687
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11690
  %8 = load i8, i8* %7, align 1, !dbg !11691
  %9 = and i8 %8, 127, !dbg !11691
  store i8 %9, i8* %7, align 1, !dbg !11691
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11175, metadata !DIExpression()) #22, !dbg !11692
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #23, !dbg !11694
  br label %10, !dbg !11695

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !11696
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11697
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !11698
  %13 = zext i1 %12 to i32, !dbg !11698
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %4, metadata !11023, metadata !DIExpression()) #22, !dbg !11700
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %4, metadata !11031, metadata !DIExpression()) #22, !dbg !11702
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !11704, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !11671, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata i32 undef, metadata !11671, metadata !DIExpression()), !dbg !11676
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11705
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !11707
  br i1 %15, label %16, label %17, !dbg !11708

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !11709
  br label %17, !dbg !11711

17:                                               ; preds = %16, %10
  ret void, !dbg !11712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11713 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11715, metadata !DIExpression()), !dbg !11716
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11717
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #23, !dbg !11718
  ret i32 %3, !dbg !11719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11720 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11722, metadata !DIExpression()), !dbg !11723
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11724
  %3 = load i8, i8* %2, align 1, !dbg !11725
  %4 = or i8 %3, 16, !dbg !11725
  store i8 %4, i8* %2, align 1, !dbg !11725
  ret void, !dbg !11726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !11727 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11728, !srcloc !11011
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11728
  call void @llvm.dbg.value(metadata i32 %2, metadata !11008, metadata !DIExpression()) #22, !dbg !11730
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11730
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !11731
  ret void, !dbg !11732
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !11733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11735, metadata !DIExpression()), !dbg !11736
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !11737
  br i1 %2, label %3, label %5, !dbg !11739

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !11740
  br label %6, !dbg !11742

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !11031, metadata !DIExpression()) #22, !dbg !11743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #22, !dbg !11746, !srcloc !11037
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !11747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11750, metadata !DIExpression()), !dbg !11752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !11753
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11755, !srcloc !11011
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11755
  call void @llvm.dbg.value(metadata i32 %3, metadata !11008, metadata !DIExpression()) #22, !dbg !11757
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11757
  call void @llvm.dbg.value(metadata i32 %3, metadata !11002, metadata !DIExpression()) #22, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %3, metadata !11751, metadata !DIExpression()), !dbg !11752
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !11758
  br i1 %4, label %6, label %5, !dbg !11760

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !11761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11761
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !11764
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !11766, !srcloc !11037
  br label %8, !dbg !11767

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !11768
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !11769
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11770
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !11770
  br label %8, !dbg !11771

8:                                                ; preds = %6, %5
  ret void, !dbg !11771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11772 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11774, metadata !DIExpression()), !dbg !11775
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11776
  %3 = load i8, i8* %2, align 1, !dbg !11776
  %4 = and i8 %3, 16, !dbg !11777
  %5 = icmp ne i8 %4, 0, !dbg !11778
  ret i1 %5, !dbg !11779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11780 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11782, metadata !DIExpression()), !dbg !11783
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11784
  %3 = load i8, i8* %2, align 1, !dbg !11785
  %4 = and i8 %3, -17, !dbg !11785
  store i8 %4, i8* %2, align 1, !dbg !11785
  ret void, !dbg !11786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !11787 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11797, metadata !DIExpression()), !dbg !11801
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11795, metadata !DIExpression()), !dbg !11801
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !11796, metadata !DIExpression()), !dbg !11801
  call void @llvm.dbg.value(metadata i32 0, metadata !11798, metadata !DIExpression()), !dbg !11802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !11803
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11805, !srcloc !11011
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !11805
  call void @llvm.dbg.value(metadata i32 %5, metadata !11008, metadata !DIExpression()) #22, !dbg !11807
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11807
  call void @llvm.dbg.value(metadata i32 %5, metadata !11002, metadata !DIExpression()) #22, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %5, metadata !11800, metadata !DIExpression()), !dbg !11802
  call void @llvm.dbg.value(metadata i32 undef, metadata !11798, metadata !DIExpression()), !dbg !11802
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !11808
  call void @llvm.dbg.value(metadata i32 %5, metadata !11023, metadata !DIExpression()) #22, !dbg !11811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11811
  call void @llvm.dbg.value(metadata i32 %5, metadata !11031, metadata !DIExpression()) #22, !dbg !11813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #22, !dbg !11815, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !11798, metadata !DIExpression()), !dbg !11802
  call void @llvm.dbg.value(metadata i32 undef, metadata !11798, metadata !DIExpression()), !dbg !11802
  ret void, !dbg !11816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !11817 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11821, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11819, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !11820, metadata !DIExpression()), !dbg !11822
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !11823
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !11824
  ret void, !dbg !11825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !11826 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11830, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !11831, metadata !DIExpression()), !dbg !11832
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !11833
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !11834
  %3 = icmp eq %union.anon* %1, null, !dbg !11835
  br i1 %3, label %21, label %4, !dbg !11837

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !11838
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !11840
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !11841
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !11198, metadata !DIExpression()) #22, !dbg !11842
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11204, metadata !DIExpression()) #22, !dbg !11842
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #23, !dbg !11844
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !11205, metadata !DIExpression()) #22, !dbg !11842
  %8 = icmp eq %struct._dnode* %7, null, !dbg !11845
  br i1 %8, label %19, label %9, !dbg !11844

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11205, metadata !DIExpression()) #22, !dbg !11842
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !11846
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !11205, metadata !DIExpression()) #22, !dbg !11842
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #23, !dbg !11847
  %13 = icmp sgt i32 %12, 0, !dbg !11848
  br i1 %13, label %14, label %16, !dbg !11849

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11850
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #23, !dbg !11851
  br label %21, !dbg !11852

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #23, !dbg !11845
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !11205, metadata !DIExpression()) #22, !dbg !11842
  %18 = icmp eq %struct._dnode* %17, null, !dbg !11845
  br i1 %18, label %19, label %9, !dbg !11844, !llvm.loop !11853

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11855
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #23, !dbg !11856
  br label %21, !dbg !11857

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !11858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11859 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11864, metadata !DIExpression()), !dbg !11865
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11863, metadata !DIExpression()), !dbg !11865
  %4 = icmp eq i64 %3, -1, !dbg !11866
  br i1 %4, label %6, label %5, !dbg !11868

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.109(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !11869
  br label %6, !dbg !11871

6:                                                ; preds = %5, %2
  ret void, !dbg !11872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.109(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11873 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11876, metadata !DIExpression()), !dbg !11877
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11875, metadata !DIExpression()), !dbg !11877
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11878
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #23, !dbg !11879
  ret void, !dbg !11880
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !11881 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11883, metadata !DIExpression()), !dbg !11891
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !11892
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !11892
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !11884, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata i32 0, metadata !11885, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !11894
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11896, !srcloc !11011
  call void @llvm.dbg.value(metadata i32 undef, metadata !11008, metadata !DIExpression()) #22, !dbg !11898
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11898
  call void @llvm.dbg.value(metadata i32 undef, metadata !11002, metadata !DIExpression()) #22, !dbg !11894
  call void @llvm.dbg.value(metadata i32 undef, metadata !11887, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i32 undef, metadata !11885, metadata !DIExpression()), !dbg !11893
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !11899
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !11900
  %7 = load i8, i8* %6, align 1, !dbg !11900
  %8 = and i8 %7, 40, !dbg !11901
  %9 = icmp eq i8 %8, 0, !dbg !11901
  call void @llvm.dbg.value(metadata i1 %9, metadata !11888, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11902
  br i1 %9, label %10, label %17, !dbg !11903

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !11904
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !11904
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !11904
  %14 = icmp eq %union.anon* %13, null, !dbg !11908
  br i1 %14, label %16, label %15, !dbg !11909

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !11910
  br label %16, !dbg !11912

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.108(%struct.k_thread* noundef nonnull %3) #24, !dbg !11913
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !11914
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !11915
  br label %17, !dbg !11916

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !11896
  call void @llvm.dbg.value(metadata i32 %18, metadata !11008, metadata !DIExpression()) #22, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %18, metadata !11002, metadata !DIExpression()) #22, !dbg !11894
  call void @llvm.dbg.value(metadata i32 %18, metadata !11887, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i32 undef, metadata !11023, metadata !DIExpression()) #22, !dbg !11917
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11917
  call void @llvm.dbg.value(metadata i32 undef, metadata !11031, metadata !DIExpression()) #22, !dbg !11919
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #22, !dbg !11921, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !11885, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i32 undef, metadata !11885, metadata !DIExpression()), !dbg !11893
  ret void, !dbg !11922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11923 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11925, metadata !DIExpression()), !dbg !11926
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !11927
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !11928
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !11929
  store %union.anon* null, %union.anon** %2, align 8, !dbg !11930
  ret void, !dbg !11931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11934, metadata !DIExpression()), !dbg !11935
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11936
  %3 = load i8, i8* %2, align 1, !dbg !11937
  %4 = and i8 %3, -3, !dbg !11937
  store i8 %4, i8* %2, align 1, !dbg !11937
  ret void, !dbg !11938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11941, metadata !DIExpression()), !dbg !11942
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !11943
  br i1 %2, label %3, label %7, !dbg !11945

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11167, metadata !DIExpression()) #22, !dbg !11946
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11949
  %5 = load i8, i8* %4, align 1, !dbg !11950
  %6 = and i8 %5, 127, !dbg !11950
  store i8 %6, i8* %4, align 1, !dbg !11950
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11175, metadata !DIExpression()) #22, !dbg !11951
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #23, !dbg !11953
  br label %7, !dbg !11954

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11955
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !11956
  %10 = zext i1 %9 to i32, !dbg !11956
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !11957
  ret void, !dbg !11958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11959 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11961, metadata !DIExpression()), !dbg !11962
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11963
  %3 = load i8, i8* %2, align 1, !dbg !11964
  %4 = or i8 %3, 2, !dbg !11964
  store i8 %4, i8* %2, align 1, !dbg !11964
  ret void, !dbg !11965
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #20 !dbg !11966 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11968, metadata !DIExpression()), !dbg !11972
  call void @llvm.dbg.value(metadata i32 0, metadata !11969, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !11974
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11976, !srcloc !11011
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11976
  call void @llvm.dbg.value(metadata i32 %3, metadata !11008, metadata !DIExpression()) #22, !dbg !11978
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !11978
  call void @llvm.dbg.value(metadata i32 %3, metadata !11002, metadata !DIExpression()) #22, !dbg !11974
  call void @llvm.dbg.value(metadata i32 %3, metadata !11971, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.value(metadata i32 undef, metadata !11969, metadata !DIExpression()), !dbg !11973
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !11979
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !11982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !11982
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !11984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !11986, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !11969, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.value(metadata i32 undef, metadata !11969, metadata !DIExpression()), !dbg !11973
  ret void, !dbg !11987
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !11988 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11994, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32 %0, metadata !11992, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !11993, metadata !DIExpression()), !dbg !11999
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12000
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !12001
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12002
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12003
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %6, metadata !11995, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32 0, metadata !11996, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12006
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12008, !srcloc !11011
  call void @llvm.dbg.value(metadata i32 undef, metadata !11008, metadata !DIExpression()) #22, !dbg !12010
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12010
  call void @llvm.dbg.value(metadata i32 undef, metadata !11002, metadata !DIExpression()) #22, !dbg !12006
  call void @llvm.dbg.value(metadata i32 undef, metadata !11998, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 undef, metadata !11996, metadata !DIExpression()), !dbg !12005
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12011
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12015
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !12016
  br i1 %10, label %11, label %12, !dbg !12017

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12018
  br label %12, !dbg !12020

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %13, metadata !11008, metadata !DIExpression()) #22, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %13, metadata !11002, metadata !DIExpression()) #22, !dbg !12006
  call void @llvm.dbg.value(metadata i32 %13, metadata !11998, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 undef, metadata !11023, metadata !DIExpression()) #22, !dbg !12021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12021
  call void @llvm.dbg.value(metadata i32 undef, metadata !11031, metadata !DIExpression()) #22, !dbg !12023
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #22, !dbg !12025, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !11996, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 undef, metadata !11996, metadata !DIExpression()), !dbg !12005
  ret i32 %6, !dbg !12026
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !12027 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12032, metadata !DIExpression()), !dbg !12035
  call void @llvm.dbg.value(metadata i64 undef, metadata !12034, metadata !DIExpression()), !dbg !12035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12031, metadata !DIExpression()), !dbg !12035
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !12033, metadata !DIExpression()), !dbg !12035
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12036
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12038
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12040, !srcloc !11011
  call void @llvm.dbg.value(metadata i32 undef, metadata !11008, metadata !DIExpression()) #22, !dbg !12042
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12042
  call void @llvm.dbg.value(metadata i32 undef, metadata !11002, metadata !DIExpression()) #22, !dbg !12038
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12043
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !12044
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !11609, metadata !DIExpression()) #22, !dbg !12045
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11614, metadata !DIExpression()) #22, !dbg !12045
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #23, !dbg !12047
  ret i32 %9, !dbg !12048
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12049 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12053, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12054, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i32 0, metadata !12055, metadata !DIExpression()), !dbg !12059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12060
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12062, !srcloc !11011
  call void @llvm.dbg.value(metadata i32 undef, metadata !11008, metadata !DIExpression()) #22, !dbg !12064
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12064
  call void @llvm.dbg.value(metadata i32 undef, metadata !11002, metadata !DIExpression()) #22, !dbg !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()), !dbg !12059
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12054, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i32 undef, metadata !12055, metadata !DIExpression()), !dbg !12059
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !12065
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12054, metadata !DIExpression()), !dbg !12058
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12068
  br i1 %5, label %7, label %6, !dbg !12070

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !12071
  br label %7, !dbg !12073

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %8, metadata !11008, metadata !DIExpression()) #22, !dbg !12064
  call void @llvm.dbg.value(metadata i32 %8, metadata !11002, metadata !DIExpression()) #22, !dbg !12060
  call void @llvm.dbg.value(metadata i32 %8, metadata !12057, metadata !DIExpression()), !dbg !12059
  call void @llvm.dbg.value(metadata i32 undef, metadata !11023, metadata !DIExpression()) #22, !dbg !12074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12074
  call void @llvm.dbg.value(metadata i32 undef, metadata !11031, metadata !DIExpression()) #22, !dbg !12076
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #22, !dbg !12078, !srcloc !11037
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12054, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i32 undef, metadata !12055, metadata !DIExpression()), !dbg !12059
  ret %struct.k_thread* %4, !dbg !12079
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12080 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12082, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12083, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 0, metadata !12084, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12089
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12091, !srcloc !11011
  call void @llvm.dbg.value(metadata i32 undef, metadata !11008, metadata !DIExpression()) #22, !dbg !12093
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12093
  call void @llvm.dbg.value(metadata i32 undef, metadata !11002, metadata !DIExpression()) #22, !dbg !12089
  call void @llvm.dbg.value(metadata i32 undef, metadata !12086, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12083, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 undef, metadata !12084, metadata !DIExpression()), !dbg !12088
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !12094
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12083, metadata !DIExpression()), !dbg !12087
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12097
  br i1 %5, label %8, label %6, !dbg !12099

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !12100
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !12102
  br label %8, !dbg !12103

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12091
  call void @llvm.dbg.value(metadata i32 %9, metadata !11008, metadata !DIExpression()) #22, !dbg !12093
  call void @llvm.dbg.value(metadata i32 %9, metadata !11002, metadata !DIExpression()) #22, !dbg !12089
  call void @llvm.dbg.value(metadata i32 %9, metadata !12086, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.value(metadata i32 undef, metadata !11023, metadata !DIExpression()) #22, !dbg !12104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12104
  call void @llvm.dbg.value(metadata i32 undef, metadata !11031, metadata !DIExpression()) #22, !dbg !12106
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #22, !dbg !12108, !srcloc !11037
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12083, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 undef, metadata !12084, metadata !DIExpression()), !dbg !12088
  ret %struct.k_thread* %4, !dbg !12109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12110 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12112, metadata !DIExpression()), !dbg !12113
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11968, metadata !DIExpression()) #22, !dbg !12114
  call void @llvm.dbg.value(metadata i32 0, metadata !11969, metadata !DIExpression()) #22, !dbg !12116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12117
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12119, !srcloc !11011
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12119
  call void @llvm.dbg.value(metadata i32 %3, metadata !11008, metadata !DIExpression()) #22, !dbg !12121
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12121
  call void @llvm.dbg.value(metadata i32 %3, metadata !11002, metadata !DIExpression()) #22, !dbg !12117
  call void @llvm.dbg.value(metadata i32 %3, metadata !11971, metadata !DIExpression()) #22, !dbg !12116
  call void @llvm.dbg.value(metadata i32 undef, metadata !11969, metadata !DIExpression()) #22, !dbg !12116
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #23, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !12123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12123
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !12125
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !12127, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !11969, metadata !DIExpression()) #22, !dbg !12116
  call void @llvm.dbg.value(metadata i32 undef, metadata !11969, metadata !DIExpression()) #22, !dbg !12116
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12128
  ret void, !dbg !12129
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12132, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata i32 %1, metadata !12133, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata i8 0, metadata !12134, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata i32 0, metadata !12135, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12140
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12142, !srcloc !11011
  call void @llvm.dbg.value(metadata i32 undef, metadata !11008, metadata !DIExpression()) #22, !dbg !12144
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12144
  call void @llvm.dbg.value(metadata i32 undef, metadata !11002, metadata !DIExpression()) #22, !dbg !12140
  call void @llvm.dbg.value(metadata i32 undef, metadata !12137, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.value(metadata i8 poison, metadata !12134, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata i32 undef, metadata !12135, metadata !DIExpression()), !dbg !12139
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !12145
  call void @llvm.dbg.value(metadata i1 %6, metadata !12134, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12138
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !12148

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11167, metadata !DIExpression()) #22, !dbg !12149
  %11 = load i8, i8* %4, align 1, !dbg !12155
  %12 = and i8 %11, 127, !dbg !12155
  store i8 %12, i8* %4, align 1, !dbg !12155
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11175, metadata !DIExpression()) #22, !dbg !12156
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #23, !dbg !12158
  store i8 %9, i8* %8, align 2, !dbg !12159
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11184, metadata !DIExpression()) #22, !dbg !12160
  %13 = load i8, i8* %4, align 1, !dbg !12162
  %14 = or i8 %13, -128, !dbg !12162
  store i8 %14, i8* %4, align 1, !dbg !12162
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11191, metadata !DIExpression()) #22, !dbg !12163
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11198, metadata !DIExpression()) #22, !dbg !12165
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11204, metadata !DIExpression()) #22, !dbg !12165
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !12167
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !11205, metadata !DIExpression()) #22, !dbg !12165
  %16 = icmp eq %struct._dnode* %15, null, !dbg !12168
  br i1 %16, label %26, label %17, !dbg !12167

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !11205, metadata !DIExpression()) #22, !dbg !12165
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !12169
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !11205, metadata !DIExpression()) #22, !dbg !12165
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #23, !dbg !12170
  %21 = icmp sgt i32 %20, 0, !dbg !12171
  br i1 %21, label %22, label %23, !dbg !12172

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #23, !dbg !12173
  br label %27, !dbg !12174

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #23, !dbg !12168
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !11205, metadata !DIExpression()) #22, !dbg !12165
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12168
  br i1 %25, label %26, label %17, !dbg !12167, !llvm.loop !12175

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #23, !dbg !12177
  br label %27, !dbg !12178

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !12179
  br label %29, !dbg !12180

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !12181
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %30, metadata !11008, metadata !DIExpression()) #22, !dbg !12144
  call void @llvm.dbg.value(metadata i32 %30, metadata !11002, metadata !DIExpression()) #22, !dbg !12140
  call void @llvm.dbg.value(metadata i32 %30, metadata !12137, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.value(metadata i32 undef, metadata !11023, metadata !DIExpression()) #22, !dbg !12183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12183
  call void @llvm.dbg.value(metadata i32 undef, metadata !11031, metadata !DIExpression()) #22, !dbg !12185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #22, !dbg !12187, !srcloc !11037
  call void @llvm.dbg.value(metadata i8 poison, metadata !12134, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata i32 undef, metadata !12135, metadata !DIExpression()), !dbg !12139
  ret i1 %6, !dbg !12188
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12193, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i32 %1, metadata !12194, metadata !DIExpression()), !dbg !12196
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !12197
  call void @llvm.dbg.value(metadata i1 %3, metadata !12195, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12196
  br i1 %3, label %4, label %12, !dbg !12198

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12200
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !12201
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !12201
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !12201
  %9 = load i8, i8* %8, align 1, !dbg !12201
  %10 = icmp eq i8 %9, 0, !dbg !12202
  br i1 %10, label %11, label %12, !dbg !12203

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12204
  br label %12, !dbg !12206

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !12207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !12208 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12210, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12214
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12216, !srcloc !11011
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12216
  call void @llvm.dbg.value(metadata i32 %2, metadata !11008, metadata !DIExpression()) #22, !dbg !12218
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %2, metadata !11002, metadata !DIExpression()) #22, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %2, metadata !12212, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()), !dbg !12213
  tail call fastcc void @z_sched_lock() #24, !dbg !12219
  call void @llvm.dbg.value(metadata i32 %2, metadata !11023, metadata !DIExpression()) #22, !dbg !12222
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12222
  call void @llvm.dbg.value(metadata i32 %2, metadata !11031, metadata !DIExpression()) #22, !dbg !12224
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !12226, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !12210, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()), !dbg !12213
  ret void, !dbg !12227
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !12228 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12229
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12230
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !12230
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !12230
  %5 = load i8, i8* %4, align 1, !dbg !12231
  %6 = add i8 %5, -1, !dbg !12231
  store i8 %6, i8* %4, align 1, !dbg !12231
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !12232, !srcloc !12234
  ret void, !dbg !12235
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !12236 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12238, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12242
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12244, !srcloc !11011
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12244
  call void @llvm.dbg.value(metadata i32 %2, metadata !11008, metadata !DIExpression()) #22, !dbg !12246
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12246
  call void @llvm.dbg.value(metadata i32 %2, metadata !11002, metadata !DIExpression()) #22, !dbg !12242
  call void @llvm.dbg.value(metadata i32 %2, metadata !12240, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12238, metadata !DIExpression()), !dbg !12241
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12247
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !12250
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !12250
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12250
  %7 = load i8, i8* %6, align 1, !dbg !12251
  %8 = add i8 %7, 1, !dbg !12251
  store i8 %8, i8* %6, align 1, !dbg !12251
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !12252
  call void @llvm.dbg.value(metadata i32 %2, metadata !11023, metadata !DIExpression()) #22, !dbg !12253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12253
  call void @llvm.dbg.value(metadata i32 %2, metadata !11031, metadata !DIExpression()) #22, !dbg !12255
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !12257, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 1, metadata !12238, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12238, metadata !DIExpression()), !dbg !12241
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12258
  ret void, !dbg !12259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !12260 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12261
  ret %struct.k_thread* %1, !dbg !12262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !12263 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !12267, metadata !DIExpression()), !dbg !12272
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !12268, metadata !DIExpression()), !dbg !12272
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !12273
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12269, metadata !DIExpression()), !dbg !12272
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !12274
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12270, metadata !DIExpression()), !dbg !12272
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %5, metadata !12271, metadata !DIExpression()), !dbg !12272
  %6 = icmp sgt i32 %5, 0, !dbg !12276
  br i1 %6, label %17, label %7, !dbg !12278

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !12279
  br i1 %8, label %17, label %9, !dbg !12281

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !12282
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !12282
  %12 = load i32, i32* %11, align 8, !dbg !12282
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !12284
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !12284
  %15 = load i32, i32* %14, align 8, !dbg !12284
  %16 = icmp ult i32 %12, %15, !dbg !12285
  br label %17, !dbg !12286

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !12287
  ret i1 %18, !dbg !12288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12289 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12306, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12307, metadata !DIExpression()), !dbg !12321
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12322
  %5 = load i32, i32* %4, align 4, !dbg !12323
  %6 = add nsw i32 %5, 1, !dbg !12323
  store i32 %6, i32* %4, align 4, !dbg !12323
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !12324
  store i32 %5, i32* %7, align 8, !dbg !12325
  %8 = load i32, i32* %4, align 4, !dbg !12326
  %9 = icmp eq i32 %8, 0, !dbg !12327
  br i1 %9, label %10, label %32, !dbg !12328

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !12329
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #22, !dbg !12329
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !12309, metadata !DIExpression()), !dbg !12329
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12329
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !12329
  %14 = load i32, i32* %13, align 4, !dbg !12329
  %15 = shl i32 %14, 2, !dbg !12329
  %16 = alloca i8, i32 %15, align 8, !dbg !12329
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !12329
  store i8* %16, i8** %17, align 4, !dbg !12329
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !12329
  %19 = alloca i8, i32 %14, align 8, !dbg !12329
  store i8* %19, i8** %18, align 4, !dbg !12329
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !12329
  store i32 -1, i32* %20, align 4, !dbg !12329
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #23, !dbg !12330
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12318, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12308, metadata !DIExpression()), !dbg !12321
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !12332
  br i1 %22, label %23, label %24, !dbg !12329

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #22, !dbg !12332
  br label %32, !dbg !12333

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !12308, metadata !DIExpression()), !dbg !12321
  %26 = load i32, i32* %4, align 4, !dbg !12334
  %27 = add nsw i32 %26, 1, !dbg !12334
  store i32 %27, i32* %4, align 4, !dbg !12334
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !12336
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !12336
  store i32 %26, i32* %29, align 8, !dbg !12337
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #23, !dbg !12330
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12318, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12308, metadata !DIExpression()), !dbg !12321
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !12332
  br i1 %31, label %23, label %24, !dbg !12329, !llvm.loop !12338

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12340
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12341
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #23, !dbg !12342
  ret void, !dbg !12343
}

; Function Attrs: optsize
declare !dbg !12344 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12349 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12352 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12354, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12355, metadata !DIExpression()), !dbg !12356
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12357
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12358
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #23, !dbg !12359
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !12360
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !12360
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !12362
  br i1 %7, label %8, label %10, !dbg !12363

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12364
  store i32 0, i32* %9, align 4, !dbg !12366
  br label %10, !dbg !12367

10:                                               ; preds = %8, %2
  ret void, !dbg !12368
}

; Function Attrs: optsize
declare !dbg !12369 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !12370 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12374, metadata !DIExpression()), !dbg !12377
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12375, metadata !DIExpression()), !dbg !12377
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12378
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !12379
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !12376, metadata !DIExpression()), !dbg !12377
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12375, metadata !DIExpression()), !dbg !12377
  ret %struct.k_thread* %4, !dbg !12380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !12381 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !12385, metadata !DIExpression()), !dbg !12386
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #23, !dbg !12387
  ret %struct.rbnode* %2, !dbg !12388
}

; Function Attrs: optsize
declare !dbg !12389 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #21 !dbg !12392 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !12402, metadata !DIExpression()), !dbg !12406
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !12407
  %3 = load i32, i32* %2, align 4, !dbg !12407
  %4 = icmp eq i32 %3, 0, !dbg !12409
  br i1 %4, label %10, label %5, !dbg !12410

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12403, metadata !DIExpression()), !dbg !12406
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !12411, !range !3315
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !12412
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12404, metadata !DIExpression()), !dbg !12406
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !12413
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !12405, metadata !DIExpression()), !dbg !12406
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12403, metadata !DIExpression()), !dbg !12406
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !12406
  ret %struct.k_thread* %11, !dbg !12414
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12415 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12419, metadata !DIExpression()), !dbg !12422
  call void @llvm.dbg.value(metadata i32 0, metadata !12420, metadata !DIExpression()), !dbg !12422
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !12423
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12421, metadata !DIExpression()), !dbg !12422
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12424
  br i1 %3, label %8, label %4, !dbg !12425

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !12426
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !12428
  call void @llvm.dbg.value(metadata i32 1, metadata !12420, metadata !DIExpression()), !dbg !12422
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !12423
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12421, metadata !DIExpression()), !dbg !12422
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !12424
  br i1 %7, label %8, label %4, !dbg !12425, !llvm.loop !12429

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !12422
  ret i32 %9, !dbg !12431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !12432 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12434, metadata !DIExpression()), !dbg !12435
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12436
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !12437
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !12438
  ret %struct.k_thread* %4, !dbg !12439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !12440 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !12449, metadata !DIExpression()), !dbg !12450
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !12451
  tail call fastcc void @sys_dlist_init.116(%struct._dnode* noundef nonnull %2) #24, !dbg !12452
  ret void, !dbg !12453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.116(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12454 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12458, metadata !DIExpression()), !dbg !12459
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12460
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12461
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12462
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12463
  ret void, !dbg !12464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !12465 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !12466
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !12467
  ret void, !dbg !12468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !12469 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12474, metadata !DIExpression()), !dbg !12475
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12476
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !12476
  %4 = load i8, i8* %3, align 2, !dbg !12476
  %5 = sext i8 %4 to i32, !dbg !12477
  ret i32 %5, !dbg !12478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12479 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12483, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.value(metadata i32 %1, metadata !12484, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12485, metadata !DIExpression()), !dbg !12486
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !12487
  ret void, !dbg !12488
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !12489 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !12490
  br i1 %1, label %8, label %2, !dbg !12491

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #23, !dbg !12492
  br i1 %3, label %8, label %4, !dbg !12493

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12494
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !12495
  %7 = xor i1 %6, true, !dbg !12493
  br label %8, !dbg !12493

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !12496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !12497 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !12498, !range !6395
  %2 = icmp eq i8 %1, 0, !dbg !12498
  ret i1 %2, !dbg !12499
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !12500 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12503
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12505, !srcloc !11011
  call void @llvm.dbg.value(metadata i32 undef, metadata !11008, metadata !DIExpression()) #22, !dbg !12507
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12507
  call void @llvm.dbg.value(metadata i32 undef, metadata !11002, metadata !DIExpression()) #22, !dbg !12503
  call void @llvm.dbg.value(metadata i32 undef, metadata !12502, metadata !DIExpression()), !dbg !12508
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12509
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11167, metadata !DIExpression()) #22, !dbg !12512
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !12514
  %4 = load i8, i8* %3, align 1, !dbg !12515
  %5 = and i8 %4, 127, !dbg !12515
  store i8 %5, i8* %3, align 1, !dbg !12515
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11175, metadata !DIExpression()) #22, !dbg !12516
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #23, !dbg !12518
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12519
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11184, metadata !DIExpression()) #22, !dbg !12520
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !12522
  %8 = load i8, i8* %7, align 1, !dbg !12523
  %9 = or i8 %8, -128, !dbg !12523
  store i8 %9, i8* %7, align 1, !dbg !12523
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11191, metadata !DIExpression()) #22, !dbg !12524
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11198, metadata !DIExpression()) #22, !dbg !12526
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11204, metadata !DIExpression()) #22, !dbg !12526
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !12528
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11205, metadata !DIExpression()) #22, !dbg !12526
  %11 = icmp eq %struct._dnode* %10, null, !dbg !12529
  br i1 %11, label %22, label %12, !dbg !12528

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !11205, metadata !DIExpression()) #22, !dbg !12526
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !12530
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !11205, metadata !DIExpression()) #22, !dbg !12526
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #23, !dbg !12531
  %16 = icmp sgt i32 %15, 0, !dbg !12532
  br i1 %16, label %17, label %19, !dbg !12533

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !12534
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #23, !dbg !12535
  br label %24, !dbg !12536

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #23, !dbg !12529
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !11205, metadata !DIExpression()) #22, !dbg !12526
  %21 = icmp eq %struct._dnode* %20, null, !dbg !12529
  br i1 %21, label %22, label %12, !dbg !12528, !llvm.loop !12537

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !12539
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #23, !dbg !12540
  br label %24, !dbg !12541

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !12505
  call void @llvm.dbg.value(metadata i32 %25, metadata !11008, metadata !DIExpression()) #22, !dbg !12507
  call void @llvm.dbg.value(metadata i32 %25, metadata !11002, metadata !DIExpression()) #22, !dbg !12503
  call void @llvm.dbg.value(metadata i32 %25, metadata !12502, metadata !DIExpression()), !dbg !12508
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !12542
  call void @llvm.dbg.value(metadata i32 undef, metadata !11609, metadata !DIExpression()) #22, !dbg !12543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11614, metadata !DIExpression()) #22, !dbg !12543
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #23, !dbg !12545
  ret void, !dbg !12546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !12547 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !12551, metadata !DIExpression()), !dbg !12554
  %3 = icmp eq i64 %2, -1, !dbg !12555
  br i1 %3, label %4, label %6, !dbg !12557

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12558
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !12560
  br label %11, !dbg !12561

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !12552, metadata !DIExpression()), !dbg !12554
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !12562
  %8 = sext i32 %7 to i64, !dbg !12562
  call void @llvm.dbg.value(metadata i64 %8, metadata !12552, metadata !DIExpression()), !dbg !12554
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !12563
  %10 = trunc i64 %9 to i32, !dbg !12563
  call void @llvm.dbg.value(metadata i32 %10, metadata !12553, metadata !DIExpression()), !dbg !12554
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !12554
  ret i32 %12, !dbg !12564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12565 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12569, metadata !DIExpression()), !dbg !12570
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !12571, !srcloc !12573
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !12574
  ret void, !dbg !12575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !12576 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12580, metadata !DIExpression()), !dbg !12584
  %2 = icmp eq i64 %0, 0, !dbg !12585
  br i1 %2, label %3, label %4, !dbg !12587

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #24, !dbg !12588
  br label %29, !dbg !12590

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !12582, metadata !DIExpression()), !dbg !12584
  %5 = icmp sgt i64 %0, -3, !dbg !12591
  br i1 %5, label %6, label %10, !dbg !12593

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #23, !dbg !12594
  %8 = trunc i64 %0 to i32, !dbg !12596
  %9 = add i32 %7, %8, !dbg !12596
  call void @llvm.dbg.value(metadata i32 %9, metadata !12581, metadata !DIExpression()), !dbg !12584
  br label %13, !dbg !12597

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !12598
  %12 = sub i32 -2, %11, !dbg !12598
  call void @llvm.dbg.value(metadata i32 %12, metadata !12581, metadata !DIExpression()), !dbg !12584
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !12600
  call void @llvm.dbg.value(metadata i32 %14, metadata !12581, metadata !DIExpression()), !dbg !12584
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12601
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12603, !srcloc !11011
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !12603
  call void @llvm.dbg.value(metadata i32 %16, metadata !11008, metadata !DIExpression()) #22, !dbg !12605
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12605
  call void @llvm.dbg.value(metadata i32 %16, metadata !11002, metadata !DIExpression()) #22, !dbg !12601
  call void @llvm.dbg.value(metadata i32 %16, metadata !12583, metadata !DIExpression()), !dbg !12584
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12606
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !12607
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !12608
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12609
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !12610
  tail call fastcc void @z_add_thread_timeout.109(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !12610
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12611
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !12612
  call void @llvm.dbg.value(metadata i32 %16, metadata !11609, metadata !DIExpression()) #22, !dbg !12613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11614, metadata !DIExpression()) #22, !dbg !12613
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #23, !dbg !12615
  %22 = zext i32 %14 to i64, !dbg !12616
  %23 = tail call i32 @sys_clock_tick_get_32() #23, !dbg !12617
  %24 = zext i32 %23 to i64, !dbg !12617
  %25 = sub nsw i64 %22, %24, !dbg !12618
  call void @llvm.dbg.value(metadata i64 %25, metadata !12580, metadata !DIExpression()), !dbg !12584
  %26 = icmp sgt i64 %25, 0, !dbg !12619
  %27 = select i1 %26, i64 %25, i64 0, !dbg !12619
  %28 = trunc i64 %27 to i32, !dbg !12619
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !12584
  ret i32 %30, !dbg !12620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !12621 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12623, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i64 %0, metadata !11045, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i32 10000, metadata !11048, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i32 1000, metadata !11049, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i8 1, metadata !11050, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i1 false, metadata !11051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12625
  call void @llvm.dbg.value(metadata i1 false, metadata !11052, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12625
  call void @llvm.dbg.value(metadata i8 0, metadata !11053, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i1 false, metadata !11054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12625
  call void @llvm.dbg.value(metadata i1 true, metadata !11055, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12625
  call void @llvm.dbg.value(metadata i64 0, metadata !11056, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i64 0, metadata !11056, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i64 %0, metadata !11045, metadata !DIExpression()), !dbg !12625
  %2 = udiv i64 %0, 10, !dbg !12627
  ret i64 %2, !dbg !12631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !12632 {
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !12633, !srcloc !12635
  tail call void @z_impl_k_yield() #24, !dbg !12636
  ret void, !dbg !12637
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !12638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12642, metadata !DIExpression()), !dbg !12644
  %2 = sext i32 %0 to i64, !dbg !12645
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !12646
  call void @llvm.dbg.value(metadata i64 %3, metadata !12643, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12644
  %4 = shl i64 %3, 32, !dbg !12647
  %5 = ashr exact i64 %4, 32, !dbg !12647
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !12648
  call void @llvm.dbg.value(metadata i32 %6, metadata !12643, metadata !DIExpression()), !dbg !12644
  %7 = sext i32 %6 to i64, !dbg !12649
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !12650
  %9 = trunc i64 %8 to i32, !dbg !12650
  ret i32 %9, !dbg !12651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12652 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12654, metadata !DIExpression()), !dbg !12655
  call void @llvm.dbg.value(metadata i64 %0, metadata !11045, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11048, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i32 10000, metadata !11049, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i8 1, metadata !11050, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i1 false, metadata !11051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12656
  call void @llvm.dbg.value(metadata i1 true, metadata !11052, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12656
  call void @llvm.dbg.value(metadata i8 0, metadata !11053, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i1 false, metadata !11054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12656
  call void @llvm.dbg.value(metadata i1 true, metadata !11055, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12656
  call void @llvm.dbg.value(metadata i64 0, metadata !11056, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i64 0, metadata !11056, metadata !DIExpression()), !dbg !12656
  %2 = add i64 %0, 99, !dbg !12658
  call void @llvm.dbg.value(metadata i64 %2, metadata !11045, metadata !DIExpression()), !dbg !12656
  %3 = udiv i64 %2, 100, !dbg !12659
  ret i64 %3, !dbg !12660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !12661 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12663, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i64 %0, metadata !11045, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 10000, metadata !11048, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11049, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i8 1, metadata !11050, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i1 false, metadata !11051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12665
  call void @llvm.dbg.value(metadata i1 false, metadata !11052, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12665
  call void @llvm.dbg.value(metadata i8 0, metadata !11053, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i1 true, metadata !11054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12665
  call void @llvm.dbg.value(metadata i1 false, metadata !11055, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12665
  call void @llvm.dbg.value(metadata i64 0, metadata !11056, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i64 0, metadata !11056, metadata !DIExpression()), !dbg !12665
  %2 = mul i64 %0, 100, !dbg !12667
  ret i64 %2, !dbg !12669
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12672, metadata !DIExpression()), !dbg !12673
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !12674
  br i1 %2, label %14, label %3, !dbg !12676

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12677
  %5 = icmp slt i32 %4, 0, !dbg !12679
  br i1 %5, label %6, label %10, !dbg !12680

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12681
  %8 = load i8, i8* %7, align 1, !dbg !12681
  %9 = icmp eq i8 %8, 16, !dbg !12684
  br i1 %9, label %10, label %14, !dbg !12685

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !12686
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12687
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !12688, !srcloc !11649
  call void @llvm.dbg.value(metadata i32 %11, metadata !11645, metadata !DIExpression()) #22, !dbg !12692
  %12 = icmp eq i32 %11, 0, !dbg !12693
  br i1 %12, label %13, label %14, !dbg !12694

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12695
  br label %14, !dbg !12697

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !12698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12699 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12701, metadata !DIExpression()), !dbg !12702
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12703
  %3 = load i8, i8* %2, align 1, !dbg !12703
  %4 = and i8 %3, 2, !dbg !12704
  %5 = icmp ne i8 %4, 0, !dbg !12705
  ret i1 %5, !dbg !12706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !12707 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12712
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12711, metadata !DIExpression()), !dbg !12713
  ret %struct.k_thread* %1, !dbg !12714
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !12715 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !12718, !srcloc !11649
  call void @llvm.dbg.value(metadata i32 %1, metadata !11645, metadata !DIExpression()) #22, !dbg !12721
  %2 = icmp eq i32 %1, 0, !dbg !12722
  br i1 %2, label %3, label %8, !dbg !12723

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12724
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !12725
  %6 = icmp ne i32 %5, 0, !dbg !12723
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !12726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12727 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12729, metadata !DIExpression()), !dbg !12731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12732
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12734, !srcloc !11011
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12734
  call void @llvm.dbg.value(metadata i32 %3, metadata !11008, metadata !DIExpression()) #22, !dbg !12736
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12736
  call void @llvm.dbg.value(metadata i32 %3, metadata !11002, metadata !DIExpression()) #22, !dbg !12732
  call void @llvm.dbg.value(metadata i32 %3, metadata !12730, metadata !DIExpression()), !dbg !12731
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12737
  %5 = load i8, i8* %4, align 4, !dbg !12737
  %6 = and i8 %5, 1, !dbg !12739
  %7 = icmp eq i8 %6, 0, !dbg !12740
  br i1 %7, label %9, label %8, !dbg !12741

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !12742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12742
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !12745
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !12747, !srcloc !11037
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #22, !dbg !12748, !srcloc !12750
  br label %24, !dbg !12751

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12752
  %11 = load i8, i8* %10, align 1, !dbg !12752
  %12 = and i8 %11, 8, !dbg !12754
  %13 = icmp eq i8 %12, 0, !dbg !12755
  br i1 %13, label %15, label %14, !dbg !12756

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !12757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !12760
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !12762, !srcloc !11037
  br label %24, !dbg !12763

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !12764
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12765
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !12767
  br i1 %17, label %18, label %23, !dbg !12768

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !12769, !srcloc !11649
  call void @llvm.dbg.value(metadata i32 %19, metadata !11645, metadata !DIExpression()) #22, !dbg !12772
  %20 = icmp eq i32 %19, 0, !dbg !12773
  br i1 %20, label %21, label %23, !dbg !12774

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()) #22, !dbg !12775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11614, metadata !DIExpression()) #22, !dbg !12775
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #23, !dbg !12778
  br label %23, !dbg !12779

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !11023, metadata !DIExpression()) #22, !dbg !12780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12780
  call void @llvm.dbg.value(metadata i32 %3, metadata !11031, metadata !DIExpression()) #22, !dbg !12782
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !12784, !srcloc !11037
  br label %24, !dbg !12785

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !12785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12786 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12788, metadata !DIExpression()), !dbg !12789
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12790
  %3 = load i8, i8* %2, align 1, !dbg !12790
  %4 = and i8 %3, 8, !dbg !12792
  %5 = icmp eq i8 %4, 0, !dbg !12793
  br i1 %5, label %6, label %20, !dbg !12794

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !12795
  %8 = or i8 %7, 8, !dbg !12795
  store i8 %8, i8* %2, align 1, !dbg !12795
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !12797
  br i1 %9, label %10, label %12, !dbg !12799

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11167, metadata !DIExpression()) #22, !dbg !12800
  %11 = and i8 %8, 95, !dbg !12803
  store i8 %11, i8* %2, align 1, !dbg !12803
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11175, metadata !DIExpression()) #22, !dbg !12804
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #23, !dbg !12806
  br label %12, !dbg !12807

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12808
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !12808
  %15 = icmp eq %union.anon* %14, null, !dbg !12810
  br i1 %15, label %17, label %16, !dbg !12811

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !12812
  br label %17, !dbg !12814

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !12815
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12816
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !12817
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !12818
  br label %20, !dbg !12819

20:                                               ; preds = %17, %1
  ret void, !dbg !12820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !12821 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12825, metadata !DIExpression()), !dbg !12827
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !12828
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12826, metadata !DIExpression()), !dbg !12827
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12829
  br i1 %3, label %10, label %4, !dbg !12830

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !12831
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !12833
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12834, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i32 0, metadata !12839, metadata !DIExpression()), !dbg !12840
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 1, !dbg !12842
  store i32 0, i32* %7, align 4, !dbg !12843
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !12844
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !12828
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !12826, metadata !DIExpression()), !dbg !12827
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !12829
  br i1 %9, label %10, label %4, !dbg !12830, !llvm.loop !12845

10:                                               ; preds = %4, %1
  ret void, !dbg !12847
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !12848 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12853, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12852, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12857
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12859, !srcloc !11011
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12859
  call void @llvm.dbg.value(metadata i32 %4, metadata !11008, metadata !DIExpression()) #22, !dbg !12861
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12861
  call void @llvm.dbg.value(metadata i32 %4, metadata !11002, metadata !DIExpression()) #22, !dbg !12857
  call void @llvm.dbg.value(metadata i32 %4, metadata !12854, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i32 0, metadata !12855, metadata !DIExpression()), !dbg !12856
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12862
  %6 = load i8, i8* %5, align 1, !dbg !12862
  %7 = and i8 %6, 8, !dbg !12864
  %8 = icmp eq i8 %7, 0, !dbg !12865
  br i1 %8, label %9, label %24, !dbg !12866

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !12853, metadata !DIExpression()), !dbg !12856
  %11 = icmp eq i64 %10, 0, !dbg !12867
  br i1 %11, label %24, label %12, !dbg !12869

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12870
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !12872
  br i1 %14, label %24, label %15, !dbg !12873

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12874
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !12874
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !12875
  %19 = icmp eq %union.anon* %17, %18, !dbg !12876
  br i1 %19, label %24, label %20, !dbg !12877

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12878
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #24, !dbg !12880
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12881
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !12882
  call void @llvm.dbg.value(metadata i32 %4, metadata !11609, metadata !DIExpression()) #22, !dbg !12883
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11614, metadata !DIExpression()) #22, !dbg !12883
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #23, !dbg !12885
  call void @llvm.dbg.value(metadata i32 %23, metadata !12855, metadata !DIExpression()), !dbg !12856
  br label %26, !dbg !12886

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !12887
  call void @llvm.dbg.value(metadata i32 %25, metadata !12855, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i32 %4, metadata !11023, metadata !DIExpression()) #22, !dbg !12888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12888
  call void @llvm.dbg.value(metadata i32 %4, metadata !11031, metadata !DIExpression()) #22, !dbg !12890
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !12892, !srcloc !11037
  br label %26, !dbg !12893

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !12856
  ret i32 %27, !dbg !12894
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12895 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12899, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.value(metadata i32 %1, metadata !12900, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.value(metadata i8* %2, metadata !12901, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.value(metadata i8 0, metadata !12903, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.value(metadata i32 0, metadata !12904, metadata !DIExpression()), !dbg !12908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10996, metadata !DIExpression()) #22, !dbg !12909
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12911, !srcloc !11011
  call void @llvm.dbg.value(metadata i32 undef, metadata !11008, metadata !DIExpression()) #22, !dbg !12913
  call void @llvm.dbg.value(metadata i32 undef, metadata !11009, metadata !DIExpression()) #22, !dbg !12913
  call void @llvm.dbg.value(metadata i32 undef, metadata !11002, metadata !DIExpression()) #22, !dbg !12909
  call void @llvm.dbg.value(metadata i32 undef, metadata !12906, metadata !DIExpression()), !dbg !12908
  call void @llvm.dbg.value(metadata i8 poison, metadata !12903, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.value(metadata i32 undef, metadata !12904, metadata !DIExpression()), !dbg !12908
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !12914
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12902, metadata !DIExpression()), !dbg !12907
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !12917
  br i1 %7, label %12, label %8, !dbg !12919

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12920, metadata !DIExpression()), !dbg !12928
  call void @llvm.dbg.value(metadata i32 %1, metadata !12926, metadata !DIExpression()), !dbg !12928
  call void @llvm.dbg.value(metadata i8* %2, metadata !12927, metadata !DIExpression()), !dbg !12928
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12834, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.value(metadata i32 %1, metadata !12839, metadata !DIExpression()), !dbg !12931
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 6, i32 1, !dbg !12933
  store i32 %1, i32* %9, align 4, !dbg !12934
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !12935
  store i8* %2, i8** %10, align 4, !dbg !12936
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !12937
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !12938
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !12939
  call void @llvm.dbg.value(metadata i8 1, metadata !12903, metadata !DIExpression()), !dbg !12907
  br label %12, !dbg !12940

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !12911
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !12911
  call void @llvm.dbg.value(metadata i32 %14, metadata !11008, metadata !DIExpression()) #22, !dbg !12913
  call void @llvm.dbg.value(metadata i32 %14, metadata !11002, metadata !DIExpression()) #22, !dbg !12909
  call void @llvm.dbg.value(metadata i32 %14, metadata !12906, metadata !DIExpression()), !dbg !12908
  call void @llvm.dbg.value(metadata i8 poison, metadata !12903, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.value(metadata i32 undef, metadata !11023, metadata !DIExpression()) #22, !dbg !12941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11028, metadata !DIExpression()) #22, !dbg !12941
  call void @llvm.dbg.value(metadata i32 undef, metadata !11031, metadata !DIExpression()) #22, !dbg !12943
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #22, !dbg !12945, !srcloc !11037
  call void @llvm.dbg.value(metadata i32 undef, metadata !12904, metadata !DIExpression()), !dbg !12908
  ret i1 %13, !dbg !12946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !12947 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()), !dbg !12958
  call void @llvm.dbg.value(metadata i64 undef, metadata !12955, metadata !DIExpression()), !dbg !12958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12952, metadata !DIExpression()), !dbg !12958
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !12954, metadata !DIExpression()), !dbg !12958
  call void @llvm.dbg.value(metadata i8** %4, metadata !12956, metadata !DIExpression()), !dbg !12958
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !12959
  call void @llvm.dbg.value(metadata i32 %6, metadata !12957, metadata !DIExpression()), !dbg !12958
  %7 = icmp eq i8** %4, null, !dbg !12960
  br i1 %7, label %12, label %8, !dbg !12962

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12963
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !12965
  %11 = load i8*, i8** %10, align 4, !dbg !12965
  store i8* %11, i8** %4, align 4, !dbg !12966
  br label %12, !dbg !12967

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !12968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !12969 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #23, !dbg !12971
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #23, !dbg !12972
  ret void, !dbg !12973
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12974 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !12984, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12982, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !12983, metadata !DIExpression()), !dbg !13001
  %5 = icmp eq i64 %4, -1, !dbg !13002
  br i1 %5, label %55, label %6, !dbg !13004

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !13005
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !13006
  call void @llvm.dbg.value(metadata i32 0, metadata !12985, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13008, metadata !DIExpression()) #22, !dbg !13015
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13017, !srcloc !13023
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !13017
  call void @llvm.dbg.value(metadata i32 %9, metadata !13020, metadata !DIExpression()) #22, !dbg !13024
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()) #22, !dbg !13024
  call void @llvm.dbg.value(metadata i32 %9, metadata !13014, metadata !DIExpression()) #22, !dbg !13015
  call void @llvm.dbg.value(metadata i32 %9, metadata !12991, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.value(metadata i32 undef, metadata !12985, metadata !DIExpression()), !dbg !13007
  %10 = icmp slt i64 %4, -1, !dbg !13025
  br i1 %10, label %11, label %17, !dbg !13026

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !13027
  %13 = add i64 %4, %12, !dbg !13028
  %14 = sub i64 -2, %13, !dbg !13028
  call void @llvm.dbg.value(metadata i64 %14, metadata !12995, metadata !DIExpression()), !dbg !13029
  %15 = icmp sgt i64 %14, 1, !dbg !13030
  %16 = select i1 %15, i64 %14, i64 1, !dbg !13030
  br label %22, !dbg !13031

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !13032
  %19 = tail call fastcc i32 @elapsed.127() #24, !dbg !13034
  %20 = sext i32 %19 to i64, !dbg !13034
  %21 = add nsw i64 %18, %20, !dbg !13035
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !13036
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13037
  store i64 %23, i64* %24, align 8, !dbg !13038
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !13039
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !12992, metadata !DIExpression()), !dbg !13041
  %26 = icmp eq %struct._timeout* %25, null, !dbg !13042
  br i1 %26, label %42, label %27, !dbg !13042

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !13043
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !12992, metadata !DIExpression()), !dbg !13041
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13047
  %31 = load i64, i64* %30, align 8, !dbg !13047
  %32 = icmp slt i64 %28, %31, !dbg !13048
  br i1 %32, label %33, label %38, !dbg !13049

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13047
  %35 = sub nsw i64 %31, %28, !dbg !13050
  store i64 %35, i64* %34, align 8, !dbg !13050
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !13052
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13053
  tail call fastcc void @sys_dlist_insert.128(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !13054
  br label %44, !dbg !13055

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !13056
  store i64 %39, i64* %24, align 8, !dbg !13056
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !13057
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !12992, metadata !DIExpression()), !dbg !13041
  %41 = icmp eq %struct._timeout* %40, null, !dbg !13042
  br i1 %41, label %42, label %27, !dbg !13042, !llvm.loop !13058

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13060
  tail call fastcc void @sys_dlist_append.129(%struct._dnode* noundef %43) #24, !dbg !13063
  br label %44, !dbg !13064

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !13065
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !13066
  br i1 %46, label %47, label %54, !dbg !13067

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !13068
  call void @llvm.dbg.value(metadata i32 %48, metadata !12998, metadata !DIExpression()), !dbg !13069
  %49 = icmp ne i32 %48, 0, !dbg !13070
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !13072
  br i1 %52, label %54, label %53, !dbg !13072

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #23, !dbg !13073
  br label %54, !dbg !13075

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !13076, metadata !DIExpression()) #22, !dbg !13082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13081, metadata !DIExpression()) #22, !dbg !13082
  call void @llvm.dbg.value(metadata i32 %9, metadata !13084, metadata !DIExpression()) #22, !dbg !13087
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #22, !dbg !13089, !srcloc !13090
  call void @llvm.dbg.value(metadata i32 undef, metadata !12985, metadata !DIExpression()), !dbg !13007
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !13091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.127() unnamed_addr #1 !dbg !13092 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !13095
  %2 = icmp eq i32 %1, 0, !dbg !13096
  br i1 %2, label %3, label %5, !dbg !13095

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #23, !dbg !13097
  br label %5, !dbg !13095

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !13095
  ret i32 %6, !dbg !13098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !13099 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132() #24, !dbg !13105
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13103, metadata !DIExpression()), !dbg !13106
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !13107
  ret %struct._timeout* %2, !dbg !13108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.128(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13109 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13113, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13114, metadata !DIExpression()), !dbg !13117
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13118
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13118
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13115, metadata !DIExpression()), !dbg !13117
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13119
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13120
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13121
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13122
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13123
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13124
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13125
  ret void, !dbg !13126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !13127 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13131, metadata !DIExpression()), !dbg !13133
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13134
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.130(%struct._dnode* noundef %2) #24, !dbg !13135
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13132, metadata !DIExpression()), !dbg !13133
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !13136
  ret %struct._timeout* %4, !dbg !13137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.129(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13138 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13143, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13144, metadata !DIExpression()), !dbg !13146
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13147
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13145, metadata !DIExpression()), !dbg !13146
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13148
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !13149
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13150
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !13151
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !13152
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13153
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13154
  ret void, !dbg !13155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !13156 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !13161
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !13158, metadata !DIExpression()), !dbg !13162
  %2 = tail call fastcc i32 @elapsed.127() #24, !dbg !13163
  call void @llvm.dbg.value(metadata i32 %2, metadata !13159, metadata !DIExpression()), !dbg !13162
  %3 = icmp eq %struct._timeout* %1, null, !dbg !13164
  br i1 %3, label %14, label %4, !dbg !13166

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !13167
  %6 = load i64, i64* %5, align 8, !dbg !13167
  %7 = sext i32 %2 to i64, !dbg !13168
  %8 = sub nsw i64 %6, %7, !dbg !13169
  %9 = icmp sgt i64 %8, 2147483647, !dbg !13170
  br i1 %9, label %14, label %10, !dbg !13171

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !13172
  %12 = select i1 %11, i64 %8, i64 0, !dbg !13172
  %13 = trunc i64 %12 to i32, !dbg !13172
  call void @llvm.dbg.value(metadata i32 %13, metadata !13160, metadata !DIExpression()), !dbg !13162
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !13174
  call void @llvm.dbg.value(metadata i32 %15, metadata !13160, metadata !DIExpression()), !dbg !13162
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13175
  %17 = icmp ne i32 %16, 0, !dbg !13177
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !13178
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !13178
  call void @llvm.dbg.value(metadata i32 %20, metadata !13160, metadata !DIExpression()), !dbg !13162
  ret i32 %20, !dbg !13179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.130(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13180 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13184, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13185, metadata !DIExpression()), !dbg !13186
  %2 = icmp eq %struct._dnode* %0, null, !dbg !13187
  br i1 %2, label %5, label %3, !dbg !13188

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.131(%struct._dnode* noundef nonnull %0) #24, !dbg !13189
  br label %5, !dbg !13188

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !13188
  ret %struct._dnode* %6, !dbg !13190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.131(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13191 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13193, metadata !DIExpression()), !dbg !13195
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13194, metadata !DIExpression()), !dbg !13195
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13196
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !13197
  br i1 %3, label %7, label %4, !dbg !13198

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13199
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !13199
  br label %7, !dbg !13198

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !13198
  ret %struct._dnode* %8, !dbg !13200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.132() unnamed_addr #5 !dbg !13201 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13205, metadata !DIExpression()), !dbg !13206
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.133() #24, !dbg !13207
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !13207
  ret %struct._dnode* %3, !dbg !13208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.133() unnamed_addr #5 !dbg !13209 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13213, metadata !DIExpression()), !dbg !13214
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !13215
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !13216
  ret i1 %2, !dbg !13217
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13218 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13222, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 -22, metadata !13223, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 0, metadata !13224, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13008, metadata !DIExpression()) #22, !dbg !13229
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13231, !srcloc !13023
  call void @llvm.dbg.value(metadata i32 undef, metadata !13020, metadata !DIExpression()) #22, !dbg !13233
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()) #22, !dbg !13233
  call void @llvm.dbg.value(metadata i32 undef, metadata !13014, metadata !DIExpression()) #22, !dbg !13229
  call void @llvm.dbg.value(metadata i32 undef, metadata !13226, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata i32 -22, metadata !13223, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 undef, metadata !13224, metadata !DIExpression()), !dbg !13228
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !13223, metadata !DIExpression()), !dbg !13227
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.136(%struct._dnode* noundef %3) #24, !dbg !13234
  br i1 %4, label %5, label %6, !dbg !13238

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !13239
  call void @llvm.dbg.value(metadata i32 0, metadata !13223, metadata !DIExpression()), !dbg !13227
  br label %6, !dbg !13241

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !13227
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13231
  call void @llvm.dbg.value(metadata i32 %8, metadata !13020, metadata !DIExpression()) #22, !dbg !13233
  call void @llvm.dbg.value(metadata i32 %8, metadata !13014, metadata !DIExpression()) #22, !dbg !13229
  call void @llvm.dbg.value(metadata i32 %8, metadata !13226, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata i32 %7, metadata !13223, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 undef, metadata !13076, metadata !DIExpression()) #22, !dbg !13242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13081, metadata !DIExpression()) #22, !dbg !13242
  call void @llvm.dbg.value(metadata i32 undef, metadata !13084, metadata !DIExpression()) #22, !dbg !13244
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #22, !dbg !13246, !srcloc !13090
  call void @llvm.dbg.value(metadata i32 undef, metadata !13224, metadata !DIExpression()), !dbg !13228
  ret i32 %7, !dbg !13247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.136(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13248 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13254, metadata !DIExpression()), !dbg !13255
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13256
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13256
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13257
  ret i1 %4, !dbg !13258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !13259 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13261, metadata !DIExpression()), !dbg !13262
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !13263
  %3 = icmp eq %struct._timeout* %2, null, !dbg !13265
  br i1 %3, label %10, label %4, !dbg !13266

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13267
  %6 = load i64, i64* %5, align 8, !dbg !13267
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !13269
  %8 = load i64, i64* %7, align 8, !dbg !13270
  %9 = add nsw i64 %8, %6, !dbg !13270
  store i64 %9, i64* %7, align 8, !dbg !13270
  br label %10, !dbg !13271

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13272
  tail call fastcc void @sys_dlist_remove.137(%struct._dnode* noundef %11) #24, !dbg !13273
  ret void, !dbg !13274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.137(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13275 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13279, metadata !DIExpression()), !dbg !13282
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13283
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13283
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13280, metadata !DIExpression()), !dbg !13282
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13284
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13284
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13281, metadata !DIExpression()), !dbg !13282
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13285
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13286
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13287
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13288
  tail call fastcc void @sys_dnode_init.138(%struct._dnode* noundef %0) #24, !dbg !13289
  ret void, !dbg !13290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.138(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13291 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13293, metadata !DIExpression()), !dbg !13294
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13295
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13296
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13297
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13298
  ret void, !dbg !13299
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13300 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13306, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i64 0, metadata !13307, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 0, metadata !13308, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13008, metadata !DIExpression()) #22, !dbg !13313
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13315, !srcloc !13023
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13315
  call void @llvm.dbg.value(metadata i32 %3, metadata !13020, metadata !DIExpression()) #22, !dbg !13317
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()) #22, !dbg !13317
  call void @llvm.dbg.value(metadata i32 %3, metadata !13014, metadata !DIExpression()) #22, !dbg !13313
  call void @llvm.dbg.value(metadata i32 %3, metadata !13310, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.value(metadata i64 0, metadata !13307, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 undef, metadata !13308, metadata !DIExpression()), !dbg !13312
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !13318
  call void @llvm.dbg.value(metadata i64 %4, metadata !13307, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 %3, metadata !13076, metadata !DIExpression()) #22, !dbg !13321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13081, metadata !DIExpression()) #22, !dbg !13321
  call void @llvm.dbg.value(metadata i32 %3, metadata !13084, metadata !DIExpression()) #22, !dbg !13323
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !13325, !srcloc !13090
  call void @llvm.dbg.value(metadata i32 undef, metadata !13308, metadata !DIExpression()), !dbg !13312
  ret i64 %4, !dbg !13326
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !13327 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13329, metadata !DIExpression()), !dbg !13333
  call void @llvm.dbg.value(metadata i64 0, metadata !13330, metadata !DIExpression()), !dbg !13333
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.139(%struct._timeout* noundef %0) #24, !dbg !13334
  br i1 %2, label %21, label %3, !dbg !13336

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !13337
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !13331, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.value(metadata i64 0, metadata !13330, metadata !DIExpression()), !dbg !13333
  %5 = icmp eq %struct._timeout* %4, null, !dbg !13339
  br i1 %5, label %16, label %6, !dbg !13341

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !13331, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.value(metadata i64 %8, metadata !13330, metadata !DIExpression()), !dbg !13333
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !13342
  %10 = load i64, i64* %9, align 8, !dbg !13342
  %11 = add nsw i64 %10, %8, !dbg !13344
  call void @llvm.dbg.value(metadata i64 %11, metadata !13330, metadata !DIExpression()), !dbg !13333
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !13345
  br i1 %12, label %16, label %13, !dbg !13347

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !13348
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !13331, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.value(metadata i64 %11, metadata !13330, metadata !DIExpression()), !dbg !13333
  %15 = icmp eq %struct._timeout* %14, null, !dbg !13339
  br i1 %15, label %16, label %6, !dbg !13341, !llvm.loop !13349

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !13333
  call void @llvm.dbg.value(metadata i64 %17, metadata !13330, metadata !DIExpression()), !dbg !13333
  %18 = tail call fastcc i32 @elapsed.127() #24, !dbg !13351
  %19 = sext i32 %18 to i64, !dbg !13351
  %20 = sub nsw i64 %17, %19, !dbg !13352
  br label %21, !dbg !13353

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !13333
  ret i64 %22, !dbg !13354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.139(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13355 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13359, metadata !DIExpression()), !dbg !13360
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13361
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.136(%struct._dnode* noundef %2) #24, !dbg !13362
  %4 = xor i1 %3, true, !dbg !13363
  ret i1 %4, !dbg !13364
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13365 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13367, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.value(metadata i64 0, metadata !13368, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.value(metadata i32 0, metadata !13369, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13008, metadata !DIExpression()) #22, !dbg !13374
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13376, !srcloc !13023
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13376
  call void @llvm.dbg.value(metadata i32 %3, metadata !13020, metadata !DIExpression()) #22, !dbg !13378
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()) #22, !dbg !13378
  call void @llvm.dbg.value(metadata i32 %3, metadata !13014, metadata !DIExpression()) #22, !dbg !13374
  call void @llvm.dbg.value(metadata i32 %3, metadata !13371, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata i64 0, metadata !13368, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.value(metadata i32 undef, metadata !13369, metadata !DIExpression()), !dbg !13373
  %4 = load i64, i64* @curr_tick, align 8, !dbg !13379
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !13382
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !13368, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13372
  call void @llvm.dbg.value(metadata i32 %3, metadata !13076, metadata !DIExpression()) #22, !dbg !13383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13081, metadata !DIExpression()) #22, !dbg !13383
  call void @llvm.dbg.value(metadata i32 %3, metadata !13084, metadata !DIExpression()) #22, !dbg !13385
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !13387, !srcloc !13090
  call void @llvm.dbg.value(metadata i32 undef, metadata !13369, metadata !DIExpression()), !dbg !13373
  %6 = add i64 %5, %4, !dbg !13388
  ret i64 %6, !dbg !13389
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !13390 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !13392, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.value(metadata i32 0, metadata !13393, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13008, metadata !DIExpression()) #22, !dbg !13398
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13400, !srcloc !13023
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13400
  call void @llvm.dbg.value(metadata i32 %2, metadata !13020, metadata !DIExpression()) #22, !dbg !13402
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()) #22, !dbg !13402
  call void @llvm.dbg.value(metadata i32 %2, metadata !13014, metadata !DIExpression()) #22, !dbg !13398
  call void @llvm.dbg.value(metadata i32 %2, metadata !13395, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i32 -1, metadata !13392, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.value(metadata i32 undef, metadata !13393, metadata !DIExpression()), !dbg !13397
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !13403
  call void @llvm.dbg.value(metadata i32 %3, metadata !13392, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.value(metadata i32 %2, metadata !13076, metadata !DIExpression()) #22, !dbg !13406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13081, metadata !DIExpression()) #22, !dbg !13406
  call void @llvm.dbg.value(metadata i32 %2, metadata !13084, metadata !DIExpression()) #22, !dbg !13408
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !13410, !srcloc !13090
  call void @llvm.dbg.value(metadata i32 undef, metadata !13393, metadata !DIExpression()), !dbg !13397
  ret i32 %3, !dbg !13411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13414, metadata !DIExpression()), !dbg !13424
  call void @llvm.dbg.value(metadata i1 %1, metadata !13415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13424
  call void @llvm.dbg.value(metadata i32 0, metadata !13416, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13008, metadata !DIExpression()) #22, !dbg !13426
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13428, !srcloc !13023
  call void @llvm.dbg.value(metadata i32 undef, metadata !13020, metadata !DIExpression()) #22, !dbg !13430
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()) #22, !dbg !13430
  call void @llvm.dbg.value(metadata i32 undef, metadata !13014, metadata !DIExpression()) #22, !dbg !13426
  call void @llvm.dbg.value(metadata i32 undef, metadata !13418, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata i32 undef, metadata !13416, metadata !DIExpression()), !dbg !13425
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !13431
  call void @llvm.dbg.value(metadata i32 %4, metadata !13419, metadata !DIExpression()), !dbg !13432
  call void @llvm.dbg.value(metadata i1 undef, metadata !13422, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13432
  %5 = icmp slt i32 %4, 2, !dbg !13433
  call void @llvm.dbg.value(metadata i1 %5, metadata !13423, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13432
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !13434
  call void @llvm.dbg.value(metadata i1 %6, metadata !13422, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13432
  br i1 %7, label %11, label %8, !dbg !13434

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !13436
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !13436
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #23, !dbg !13438
  br label %11, !dbg !13439

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !13428
  call void @llvm.dbg.value(metadata i32 %12, metadata !13020, metadata !DIExpression()) #22, !dbg !13430
  call void @llvm.dbg.value(metadata i32 %12, metadata !13014, metadata !DIExpression()) #22, !dbg !13426
  call void @llvm.dbg.value(metadata i32 %12, metadata !13418, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata i32 undef, metadata !13076, metadata !DIExpression()) #22, !dbg !13440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13081, metadata !DIExpression()) #22, !dbg !13440
  call void @llvm.dbg.value(metadata i32 undef, metadata !13084, metadata !DIExpression()) #22, !dbg !13442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #22, !dbg !13444, !srcloc !13090
  call void @llvm.dbg.value(metadata i32 1, metadata !13416, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata i32 undef, metadata !13416, metadata !DIExpression()), !dbg !13425
  ret void, !dbg !13445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !13446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13450, metadata !DIExpression()), !dbg !13455
  tail call void @z_time_slice(i32 noundef %0) #23, !dbg !13456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13008, metadata !DIExpression()) #22, !dbg !13457
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13459, !srcloc !13023
  call void @llvm.dbg.value(metadata i32 undef, metadata !13020, metadata !DIExpression()) #22, !dbg !13461
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()) #22, !dbg !13461
  call void @llvm.dbg.value(metadata i32 undef, metadata !13014, metadata !DIExpression()) #22, !dbg !13457
  call void @llvm.dbg.value(metadata i32 undef, metadata !13451, metadata !DIExpression()), !dbg !13455
  store i32 %0, i32* @announce_remaining, align 4, !dbg !13455
  call void @llvm.dbg.value(metadata i32 undef, metadata !13451, metadata !DIExpression()), !dbg !13455
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !13462
  %4 = icmp eq %struct._timeout* %3, null, !dbg !13463
  br i1 %4, label %28, label %5, !dbg !13464

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !13465
  %10 = load i64, i64* %9, align 8, !dbg !13465
  %11 = sext i32 %8 to i64, !dbg !13466
  %12 = icmp sgt i64 %10, %11, !dbg !13467
  br i1 %12, label %26, label %13, !dbg !13468

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !13455
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !13452, metadata !DIExpression()), !dbg !13469
  %15 = trunc i64 %10 to i32, !dbg !13470
  call void @llvm.dbg.value(metadata i32 %15, metadata !13454, metadata !DIExpression()), !dbg !13469
  %16 = sext i32 %15 to i64, !dbg !13471
  %17 = load i64, i64* @curr_tick, align 8, !dbg !13472
  %18 = add i64 %17, %16, !dbg !13472
  store i64 %18, i64* @curr_tick, align 8, !dbg !13472
  store i64 0, i64* %9, align 8, !dbg !13473
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !13474
  call void @llvm.dbg.value(metadata i32 %14, metadata !13076, metadata !DIExpression()) #22, !dbg !13475
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13081, metadata !DIExpression()) #22, !dbg !13475
  call void @llvm.dbg.value(metadata i32 %14, metadata !13084, metadata !DIExpression()) #22, !dbg !13477
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #22, !dbg !13479, !srcloc !13090
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !13480
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !13480
  tail call void %20(%struct._timeout* noundef nonnull %6) #23, !dbg !13481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13008, metadata !DIExpression()) #22, !dbg !13482
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13484, !srcloc !13023
  call void @llvm.dbg.value(metadata i32 undef, metadata !13020, metadata !DIExpression()) #22, !dbg !13486
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()) #22, !dbg !13486
  call void @llvm.dbg.value(metadata i32 undef, metadata !13014, metadata !DIExpression()) #22, !dbg !13482
  call void @llvm.dbg.value(metadata i32 undef, metadata !13451, metadata !DIExpression()), !dbg !13455
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !13487
  %23 = sub nsw i32 %22, %15, !dbg !13487
  store i32 %23, i32* @announce_remaining, align 4, !dbg !13455
  call void @llvm.dbg.value(metadata i32 undef, metadata !13451, metadata !DIExpression()), !dbg !13455
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !13462
  %25 = icmp eq %struct._timeout* %24, null, !dbg !13463
  br i1 %25, label %28, label %5, !dbg !13464, !llvm.loop !13488

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !13490
  store i64 %27, i64* %9, align 8, !dbg !13490
  br label %32, !dbg !13493

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !13455
  %31 = sext i32 %30 to i64, !dbg !13494
  br label %32, !dbg !13494

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !13494
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !13455
  %36 = load i64, i64* @curr_tick, align 8, !dbg !13495
  %37 = add i64 %36, %33, !dbg !13495
  store i64 %37, i64* @curr_tick, align 8, !dbg !13495
  store i32 0, i32* @announce_remaining, align 4, !dbg !13496
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !13497
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #23, !dbg !13498
  call void @llvm.dbg.value(metadata i32 %35, metadata !13076, metadata !DIExpression()) #22, !dbg !13499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13081, metadata !DIExpression()) #22, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %35, metadata !13084, metadata !DIExpression()) #22, !dbg !13501
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #22, !dbg !13503, !srcloc !13090
  ret void, !dbg !13504
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !13505 {
  call void @llvm.dbg.value(metadata i64 0, metadata !13509, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata i32 0, metadata !13510, metadata !DIExpression()), !dbg !13514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13008, metadata !DIExpression()) #22, !dbg !13515
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13517, !srcloc !13023
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13517
  call void @llvm.dbg.value(metadata i32 %2, metadata !13020, metadata !DIExpression()) #22, !dbg !13519
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()) #22, !dbg !13519
  call void @llvm.dbg.value(metadata i32 %2, metadata !13014, metadata !DIExpression()) #22, !dbg !13515
  call void @llvm.dbg.value(metadata i32 %2, metadata !13512, metadata !DIExpression()), !dbg !13514
  call void @llvm.dbg.value(metadata i64 0, metadata !13509, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata i32 undef, metadata !13510, metadata !DIExpression()), !dbg !13514
  %3 = load i64, i64* @curr_tick, align 8, !dbg !13520
  %4 = tail call fastcc i32 @elapsed.127() #24, !dbg !13523
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !13509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13513
  call void @llvm.dbg.value(metadata i32 %2, metadata !13076, metadata !DIExpression()) #22, !dbg !13524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13081, metadata !DIExpression()) #22, !dbg !13524
  call void @llvm.dbg.value(metadata i32 %2, metadata !13084, metadata !DIExpression()) #22, !dbg !13526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !13528, !srcloc !13090
  call void @llvm.dbg.value(metadata i32 undef, metadata !13510, metadata !DIExpression()), !dbg !13514
  %5 = sext i32 %4 to i64, !dbg !13523
  %6 = add i64 %3, %5, !dbg !13529
  ret i64 %6, !dbg !13530
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !13531 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !13532
  %2 = trunc i64 %1 to i32, !dbg !13533
  ret i32 %2, !dbg !13534
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !13535 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !13536
  ret i64 %1, !dbg !13537
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !13538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13540, metadata !DIExpression()), !dbg !13547
  %2 = icmp eq i32 %0, 0, !dbg !13548
  br i1 %2, label %10, label %3, !dbg !13550

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !13551
  call void @llvm.dbg.value(metadata i32 %4, metadata !13541, metadata !DIExpression()), !dbg !13547
  %5 = mul i32 %0, 200, !dbg !13552
  call void @llvm.dbg.value(metadata i32 %5, metadata !13542, metadata !DIExpression()), !dbg !13547
  br label %6, !dbg !13553

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !13554
  call void @llvm.dbg.value(metadata i32 %7, metadata !13543, metadata !DIExpression()), !dbg !13555
  %8 = sub i32 %7, %4, !dbg !13556
  %9 = icmp ult i32 %8, %5, !dbg !13558
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !13559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !13560 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !13561
  ret i32 %1, !dbg !13562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !13563 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #23, !dbg !13565
  ret i32 %1, !dbg !13566
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !13567 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13571, metadata !DIExpression()), !dbg !13573
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !13574

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !13575
  br label %14, !dbg !13579

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13572, metadata !DIExpression()), !dbg !13573
  %6 = icmp slt i64 %2, -1, !dbg !13580
  br i1 %6, label %7, label %9, !dbg !13583

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !13584
  br label %14, !dbg !13585

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !13587
  %11 = icmp ugt i64 %2, 1, !dbg !13588
  %12 = select i1 %11, i64 %2, i64 1, !dbg !13588
  %13 = add nsw i64 %10, %12, !dbg !13589
  br label %14, !dbg !13590

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !13591
  ret i64 %15, !dbg !13592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !13593 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.148, i32 0, i32 0)) #23, !dbg !13595
  ret void, !dbg !13596
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin nounwind optsize "no-builtins" }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #26 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!904, !2, !2020, !27, !124, !2022, !2024, !138, !2050, !2088, !167, !2090, !2101, !2148, !2150, !2178, !2206, !2249, !2320, !2365, !2393, !598, !608, !717, !915, !1197, !2398, !1460, !2400, !2403, !2480, !2494, !2506, !2631, !1490, !2634, !1496, !1853, !2652, !1874, !2654, !1983, !2657}
!llvm.ident = !{!2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659, !2659}
!llvm.module.flags = !{!2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "heap", scope: !27, file: !107, line: 13, type: !112, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "heap_mem", scope: !27, file: !107, line: 12, type: !108, isLocal: true, isDefinition: true)
!107 = !DIFile(filename: "zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !110)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !{!111}
!111 = !DISubrange(count: 256)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !114)
!113 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!114 = !{!115, !118, !119}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !112, file: !113, line: 57, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !113, line: 57, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !112, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !112, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 214, baseType: !32)
!121 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "_char_out", scope: !124, file: !127, line: 54, type: !128, isLocal: false, isDefinition: true)
!124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !126, splitDebugInlining: false, nameTableKind: None)
!125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!126 = !{!122}
!127 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!103, !103}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "state", scope: !133, file: !134, line: 227, type: !163, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "rand32", scope: !134, file: !134, line: 225, type: !135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !162)
!134 = !DIFile(filename: "zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!135 = !DISubroutineType(types: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !148, globals: !161, splitDebugInlining: false, nameTableKind: None)
!139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!140 = !{!30, !141}
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !142, line: 54, baseType: !32, size: 32, elements: !143)
!142 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!145 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!146 = !DIEnumerator(name: "FREE_PREV", value: 2)
!147 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!148 = !{!102, !103, !149, !150, !137, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !152)
!152 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !156)
!156 = !{!157}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !155, file: !142, line: 58, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 8)
!161 = !{!131}
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !164)
!164 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !167, file: !583, line: 258, type: !584, isLocal: true, isDefinition: true, align: 32)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !169, retainedTypes: !452, globals: !582, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!169 = !{!170, !202, !212, !261, !267, !388, !423}
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !171, line: 54, baseType: !32, size: 32, elements: !172)
!171 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201}
!173 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!174 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!175 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!176 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!177 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!178 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!179 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!180 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!181 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!182 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!183 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!184 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!185 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!186 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!187 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!188 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!189 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!190 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!191 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!192 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!193 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!194 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!195 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!196 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!197 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!198 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!199 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!200 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!201 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!202 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !171, line: 224, baseType: !32, size: 32, elements: !203)
!203 = !{!204, !205, !206, !207, !208, !209, !210, !211}
!204 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!205 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!206 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!207 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!208 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!209 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!210 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!211 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!212 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !171, line: 275, baseType: !32, size: 32, elements: !213)
!213 = !{!214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260}
!214 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!215 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!216 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!217 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!218 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!219 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!220 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!221 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!222 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!223 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!224 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!225 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!226 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!227 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!228 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!229 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!230 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!231 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!232 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!233 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!234 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!235 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!236 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!237 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!238 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!239 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!240 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!241 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!242 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!243 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!244 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!245 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!246 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!247 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!248 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!249 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!250 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!251 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!252 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!253 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!254 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!255 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!256 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!257 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!258 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!259 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!260 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!261 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !171, line: 327, baseType: !32, size: 32, elements: !262)
!262 = !{!263, !264, !265, !266}
!263 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!264 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!265 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!266 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!267 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !268, line: 76, baseType: !32, size: 32, elements: !269)
!268 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!269 = !{!270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387}
!270 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!271 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!272 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!273 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!274 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!275 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!276 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!277 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!278 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!279 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!280 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!281 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!282 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!283 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!284 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!285 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!286 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!287 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!288 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!289 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!290 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!291 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!292 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!293 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!294 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!295 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!296 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!297 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!298 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!299 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!300 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!301 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!302 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!303 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!304 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!305 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!306 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!307 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!308 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!309 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!310 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!311 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!312 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!313 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!314 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!315 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!316 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!317 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!318 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!319 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!320 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!321 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!322 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!323 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!324 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!325 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!326 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!327 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!328 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!329 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!330 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!331 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!332 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!333 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!334 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!335 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!336 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!337 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!338 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!339 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!340 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!341 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!342 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!343 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!344 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!345 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!346 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!347 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!348 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!349 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!350 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!351 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!352 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!353 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!354 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!355 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!356 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!357 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!358 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!359 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!360 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!361 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!362 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!363 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!364 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!365 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!366 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!367 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!368 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!369 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!370 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!371 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!372 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!373 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!374 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!375 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!376 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!377 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!378 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!379 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!380 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!381 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!382 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!383 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!384 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!385 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!386 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!387 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!388 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !171, line: 237, baseType: !32, size: 32, elements: !389)
!389 = !{!390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422}
!390 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!391 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!392 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!393 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!394 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!395 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!396 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!397 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!398 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!399 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!400 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!401 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!402 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!403 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!404 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!405 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!406 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!407 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!408 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!409 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!410 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!411 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!412 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!413 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!414 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!415 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!416 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!417 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!418 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!419 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!420 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!421 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!422 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!423 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !268, line: 44, baseType: !32, size: 32, elements: !424)
!424 = !{!425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451}
!425 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!426 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!427 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!428 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!429 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!430 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!431 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!432 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!433 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!434 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!435 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!436 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!437 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!438 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!439 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!440 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!441 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!442 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!443 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!444 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!445 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!446 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!447 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!448 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!449 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!450 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!451 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!452 = !{!453, !527, !570, !581, !137}
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !455, line: 4575, baseType: !456)
!455 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 4532, size: 390144, elements: !457)
!457 = !{!458, !460, !461, !462, !463, !469, !479, !483, !493, !497}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !456, file: !455, line: 4533, baseType: !459, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !456, file: !455, line: 4534, baseType: !459, size: 32, offset: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !456, file: !455, line: 4535, baseType: !459, size: 32, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !456, file: !455, line: 4536, baseType: !459, size: 32, offset: 96)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !456, file: !455, line: 4537, baseType: !464, size: 16256, offset: 128)
!464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 16256, elements: !467)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !466)
!466 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!467 = !{!468}
!468 = !DISubrange(count: 2032)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !456, file: !455, line: 4543, baseType: !470, size: 4224, offset: 16384)
!470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 4224, elements: !477)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !456, file: !455, line: 4538, size: 128, elements: !472)
!472 = !{!473, !474, !475, !476}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !471, file: !455, line: 4539, baseType: !459, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !471, file: !455, line: 4540, baseType: !459, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !471, file: !455, line: 4541, baseType: !459, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !471, file: !455, line: 4542, baseType: !459, size: 32, offset: 96)
!477 = !{!478}
!478 = !DISubrange(count: 33)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !456, file: !455, line: 4544, baseType: !480, size: 110464, offset: 20608)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 110464, elements: !481)
!481 = !{!482}
!482 = !DISubrange(count: 13808)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !456, file: !455, line: 4550, baseType: !484, size: 24448, offset: 131072)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 24448, elements: !491)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !456, file: !455, line: 4545, size: 128, elements: !486)
!486 = !{!487, !488, !489, !490}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !485, file: !455, line: 4546, baseType: !459, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !485, file: !455, line: 4547, baseType: !459, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !485, file: !455, line: 4548, baseType: !459, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !485, file: !455, line: 4549, baseType: !459, size: 32, offset: 96)
!491 = !{!492}
!492 = !DISubrange(count: 191)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !456, file: !455, line: 4551, baseType: !494, size: 106624, offset: 155520)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 106624, elements: !495)
!495 = !{!496}
!496 = !DISubrange(count: 13328)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !456, file: !455, line: 4574, baseType: !498, size: 128000, offset: 262144)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 128000, elements: !525)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !456, file: !455, line: 4552, size: 1024, elements: !500)
!500 = !{!501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !521, !522, !523, !524}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !499, file: !455, line: 4553, baseType: !459, size: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !499, file: !455, line: 4554, baseType: !459, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !499, file: !455, line: 4555, baseType: !459, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !499, file: !455, line: 4556, baseType: !459, size: 32, offset: 96)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !499, file: !455, line: 4557, baseType: !459, size: 32, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !499, file: !455, line: 4558, baseType: !459, size: 32, offset: 160)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !499, file: !455, line: 4559, baseType: !459, size: 32, offset: 192)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !499, file: !455, line: 4560, baseType: !459, size: 32, offset: 224)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !499, file: !455, line: 4561, baseType: !459, size: 32, offset: 256)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !499, file: !455, line: 4562, baseType: !459, size: 32, offset: 288)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !499, file: !455, line: 4563, baseType: !459, size: 32, offset: 320)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !499, file: !455, line: 4564, baseType: !459, size: 32, offset: 352)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !499, file: !455, line: 4565, baseType: !459, size: 32, offset: 384)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !499, file: !455, line: 4566, baseType: !459, size: 32, offset: 416)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !499, file: !455, line: 4567, baseType: !459, size: 32, offset: 448)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !499, file: !455, line: 4568, baseType: !459, size: 32, offset: 480)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !499, file: !455, line: 4569, baseType: !518, size: 384, offset: 512)
!518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 384, elements: !519)
!519 = !{!520}
!520 = !DISubrange(count: 48)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !499, file: !455, line: 4570, baseType: !459, size: 32, offset: 896)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !499, file: !455, line: 4571, baseType: !459, size: 32, offset: 928)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !499, file: !455, line: 4572, baseType: !459, size: 32, offset: 960)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !499, file: !455, line: 4573, baseType: !459, size: 32, offset: 992)
!525 = !{!526}
!526 = !DISubrange(count: 125)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !455, line: 38320, baseType: !529)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 38303, size: 23040, elements: !530)
!530 = !{!531, !533, !537, !538, !539, !540, !544, !548, !552, !556, !560}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !529, file: !455, line: 38304, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !459)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !529, file: !455, line: 38305, baseType: !534, size: 256, offset: 32)
!534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 256, elements: !535)
!535 = !{!536}
!536 = !DISubrange(count: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !529, file: !455, line: 38306, baseType: !459, size: 32, offset: 288)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !529, file: !455, line: 38307, baseType: !459, size: 32, offset: 320)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !529, file: !455, line: 38308, baseType: !459, size: 32, offset: 352)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !529, file: !455, line: 38309, baseType: !541, size: 3712, offset: 384)
!541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 3712, elements: !542)
!542 = !{!543}
!543 = !DISubrange(count: 464)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !529, file: !455, line: 38310, baseType: !545, size: 864, offset: 4096)
!545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 864, elements: !546)
!546 = !{!547}
!547 = !DISubrange(count: 27)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !529, file: !455, line: 38311, baseType: !549, size: 3232, offset: 4960)
!549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 3232, elements: !550)
!550 = !{!551}
!551 = !DISubrange(count: 404)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !529, file: !455, line: 38312, baseType: !553, size: 3776, offset: 8192)
!553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 3776, elements: !554)
!554 = !{!555}
!555 = !DISubrange(count: 118)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !529, file: !455, line: 38313, baseType: !557, size: 4416, offset: 11968)
!557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 4416, elements: !558)
!558 = !{!559}
!559 = !DISubrange(count: 552)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !529, file: !455, line: 38319, baseType: !561, size: 6656, offset: 16384)
!561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !562, size: 6656, elements: !568)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !529, file: !455, line: 38314, size: 128, elements: !563)
!563 = !{!564, !565, !566, !567}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !562, file: !455, line: 38315, baseType: !459, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !562, file: !455, line: 38316, baseType: !459, size: 32, offset: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !562, file: !455, line: 38317, baseType: !459, size: 32, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !562, file: !455, line: 38318, baseType: !459, size: 32, offset: 96)
!568 = !{!569}
!569 = !DISubrange(count: 52)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !455, line: 43319, baseType: !572)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 43313, size: 80, elements: !573)
!573 = !{!574, !576, !577, !579, !580}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !572, file: !455, line: 43314, baseType: !575, size: 16)
!575 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !151)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !572, file: !455, line: 43315, baseType: !575, size: 16, offset: 16)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !572, file: !455, line: 43316, baseType: !578, size: 16, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !575)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !572, file: !455, line: 43317, baseType: !575, size: 16, offset: 48)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !572, file: !455, line: 43318, baseType: !575, size: 16, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!582 = !{!165}
!583 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !585)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !586, line: 51, size: 64, elements: !587)
!586 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!587 = !{!588, !595}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !585, file: !586, line: 60, baseType: !589, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 32)
!590 = !DISubroutineType(types: !591)
!591 = !{!103, !592}
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !594)
!594 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !586, line: 48, flags: DIFlagFwdDecl)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !585, file: !586, line: 65, baseType: !592, size: 32, offset: 32)
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !598, file: !605, line: 21, type: !128, isLocal: true, isDefinition: true)
!598 = distinct !DICompileUnit(language: DW_LANG_C99, file: !599, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !600, globals: !604, splitDebugInlining: false, nameTableKind: None)
!599 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!600 = !{!601, !103, !102}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !603, line: 22, baseType: !103)
!603 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!604 = !{!596}
!605 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !608, file: !708, line: 603, type: !710, isLocal: true, isDefinition: true, align: 32)
!608 = distinct !DICompileUnit(language: DW_LANG_C99, file: !609, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !610, globals: !705, splitDebugInlining: false, nameTableKind: None)
!609 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!610 = !{!102, !103, !611}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !614, line: 336, size: 608, elements: !615)
!614 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!615 = !{!616, !645, !649, !653, !666, !671, !677, !683, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !613, file: !614, line: 365, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!618 = !DISubroutineType(types: !619)
!619 = !{!103, !620, !644}
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !623, line: 378, size: 192, elements: !624)
!623 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!624 = !{!625, !628, !629, !630, !637, !638}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !622, file: !623, line: 380, baseType: !626, size: 32)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !622, file: !623, line: 382, baseType: !13, size: 32, offset: 32)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !622, file: !623, line: 384, baseType: !13, size: 32, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !622, file: !623, line: 386, baseType: !631, size: 32, offset: 96)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !623, line: 351, size: 16, elements: !633)
!633 = !{!634, !635}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !632, file: !623, line: 359, baseType: !465, size: 8)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !632, file: !623, line: 364, baseType: !636, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!636 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !622, file: !623, line: 388, baseType: !102, size: 32, offset: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !622, file: !623, line: 396, baseType: !639, size: 32, offset: 160)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !623, line: 43, baseType: !642)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !643)
!643 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !613, file: !614, line: 366, baseType: !646, size: 32, offset: 32)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!647 = !DISubroutineType(types: !648)
!648 = !{null, !620, !466}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !613, file: !614, line: 374, baseType: !650, size: 32, offset: 64)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 32)
!651 = !DISubroutineType(types: !652)
!652 = !{!103, !620}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !613, file: !614, line: 377, baseType: !654, size: 32, offset: 96)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!655 = !DISubroutineType(types: !656)
!656 = !{!103, !620, !657}
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !614, line: 122, size: 64, elements: !660)
!660 = !{!661, !662, !663, !664, !665}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !659, file: !614, line: 123, baseType: !137, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !659, file: !614, line: 124, baseType: !465, size: 8, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !659, file: !614, line: 125, baseType: !465, size: 8, offset: 40)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !659, file: !614, line: 126, baseType: !465, size: 8, offset: 48)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !659, file: !614, line: 127, baseType: !465, size: 8, offset: 56)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !613, file: !614, line: 379, baseType: !667, size: 32, offset: 128)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 32)
!668 = !DISubroutineType(types: !669)
!669 = !{!103, !620, !670}
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !613, file: !614, line: 384, baseType: !672, size: 32, offset: 160)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!673 = !DISubroutineType(types: !674)
!674 = !{!103, !620, !675, !103}
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !465)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !613, file: !614, line: 393, baseType: !678, size: 32, offset: 192)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DISubroutineType(types: !680)
!680 = !{!103, !620, !681, !682}
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 32)
!682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !613, file: !614, line: 402, baseType: !684, size: 32, offset: 224)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 32)
!685 = !DISubroutineType(types: !686)
!686 = !{null, !620}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !613, file: !614, line: 405, baseType: !684, size: 32, offset: 256)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !613, file: !614, line: 408, baseType: !650, size: 32, offset: 288)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !613, file: !614, line: 411, baseType: !684, size: 32, offset: 320)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !613, file: !614, line: 414, baseType: !684, size: 32, offset: 352)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !613, file: !614, line: 417, baseType: !650, size: 32, offset: 384)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !613, file: !614, line: 420, baseType: !650, size: 32, offset: 416)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !613, file: !614, line: 423, baseType: !684, size: 32, offset: 448)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !613, file: !614, line: 426, baseType: !684, size: 32, offset: 480)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !613, file: !614, line: 429, baseType: !650, size: 32, offset: 512)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !613, file: !614, line: 432, baseType: !650, size: 32, offset: 544)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !613, file: !614, line: 435, baseType: !698, size: 32, offset: 576)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 32)
!699 = !DISubroutineType(types: !700)
!700 = !{null, !620, !701, !102}
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !614, line: 142, baseType: !702)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!703 = !DISubroutineType(types: !704)
!704 = !{null, !620, !102}
!705 = !{!606, !706}
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !608, file: !708, line: 38, type: !709, isLocal: true, isDefinition: true)
!708 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !711)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !586, line: 51, size: 64, elements: !712)
!712 = !{!713, !714}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !711, file: !586, line: 60, baseType: !650, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !711, file: !586, line: 65, baseType: !620, size: 32, offset: 32)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !717, file: !822, line: 318, type: !899, isLocal: false, isDefinition: true)
!717 = distinct !DICompileUnit(language: DW_LANG_C99, file: !718, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !719, retainedTypes: !736, globals: !819, splitDebugInlining: false, nameTableKind: None)
!718 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!719 = !{!720, !726, !731}
!720 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !721, line: 506, baseType: !32, size: 32, elements: !722)
!721 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!722 = !{!723, !724, !725}
!723 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!724 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!725 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!726 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !721, line: 512, baseType: !32, size: 32, elements: !727)
!727 = !{!728, !729, !730}
!728 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!729 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!730 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!731 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !732, line: 66, baseType: !32, size: 32, elements: !733)
!732 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!733 = !{!734, !735}
!734 = !DIEnumerator(name: "gpioPinClear", value: 0)
!735 = !DIEnumerator(name: "gpioPinSet", value: 1)
!736 = !{!737, !807, !812, !772, !726, !720, !817, !102, !581, !787, !818}
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !721, line: 523, size: 288, elements: !740)
!740 = !{!741, !762, !768, !773, !777, !778, !779, !783, !803}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !739, file: !721, line: 524, baseType: !742, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 32)
!743 = !DISubroutineType(types: !744)
!744 = !{!103, !745, !760, !761}
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !747)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !623, line: 378, size: 192, elements: !748)
!748 = !{!749, !750, !751, !752, !758, !759}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !747, file: !623, line: 380, baseType: !626, size: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !747, file: !623, line: 382, baseType: !13, size: 32, offset: 32)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !747, file: !623, line: 384, baseType: !13, size: 32, offset: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !747, file: !623, line: 386, baseType: !753, size: 32, offset: 96)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !623, line: 351, size: 16, elements: !755)
!755 = !{!756, !757}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !754, file: !623, line: 359, baseType: !465, size: 8)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !754, file: !623, line: 364, baseType: !636, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !747, file: !623, line: 388, baseType: !102, size: 32, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !747, file: !623, line: 396, baseType: !639, size: 32, offset: 160)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !721, line: 237, baseType: !465)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !721, line: 257, baseType: !137)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !739, file: !721, line: 530, baseType: !763, size: 32, offset: 32)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!764 = !DISubroutineType(types: !765)
!765 = !{!103, !745, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 32)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !721, line: 229, baseType: !137)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !739, file: !721, line: 532, baseType: !769, size: 32, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 32)
!770 = !DISubroutineType(types: !771)
!771 = !{!103, !745, !772, !767}
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !721, line: 216, baseType: !137)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !739, file: !721, line: 535, baseType: !774, size: 32, offset: 96)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DISubroutineType(types: !776)
!776 = !{!103, !745, !772}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !739, file: !721, line: 537, baseType: !774, size: 32, offset: 128)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !739, file: !721, line: 539, baseType: !774, size: 32, offset: 160)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !739, file: !721, line: 541, baseType: !780, size: 32, offset: 192)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DISubroutineType(types: !782)
!782 = !{!103, !745, !760, !720, !726}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !739, file: !721, line: 544, baseType: !784, size: 32, offset: 224)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 32)
!785 = !DISubroutineType(types: !786)
!786 = !{!103, !745, !787, !636}
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 32)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !721, line: 478, size: 96, elements: !789)
!789 = !{!790, !797, !802}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !788, file: !721, line: 482, baseType: !791, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !792, line: 33, baseType: !793)
!792 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !792, line: 29, size: 32, elements: !794)
!794 = !{!795}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !793, file: !792, line: 30, baseType: !796, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 32)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !788, file: !721, line: 485, baseType: !798, size: 32, offset: 32)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !721, line: 464, baseType: !799)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!800 = !DISubroutineType(types: !801)
!801 = !{null, !745, !787, !772}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !788, file: !721, line: 493, baseType: !772, size: 32, offset: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !739, file: !721, line: 547, baseType: !804, size: 32, offset: 256)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 32)
!805 = !DISubroutineType(types: !806)
!806 = !{!137, !745}
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !721, line: 428, size: 32, elements: !810)
!810 = !{!811}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !809, file: !721, line: 434, baseType: !772, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 32)
!813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !814)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !721, line: 441, size: 32, elements: !815)
!815 = !{!816}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !814, file: !721, line: 447, baseType: !772, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!819 = !{!715, !820, !826, !828, !838, !850, !852, !883, !885, !897}
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !717, file: !822, line: 318, type: !823, isLocal: false, isDefinition: true, align: 16)
!822 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !640, size: 400, elements: !824)
!824 = !{!825}
!825 = !DISubrange(count: 25)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !717, file: !822, line: 318, type: !746, isLocal: false, isDefinition: true, align: 32)
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !717, file: !822, line: 318, type: !830, isLocal: true, isDefinition: true, align: 32)
!830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !586, line: 51, size: 64, elements: !832)
!832 = !{!833, !837}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !831, file: !586, line: 60, baseType: !834, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 32)
!835 = !DISubroutineType(types: !836)
!836 = !{!103, !745}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !831, file: !586, line: 65, baseType: !745, size: 32, offset: 32)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !717, file: !822, line: 318, type: !840, isLocal: true, isDefinition: true)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !822, line: 33, size: 96, elements: !841)
!841 = !{!842, !843}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !840, file: !822, line: 35, baseType: !814, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !840, file: !822, line: 37, baseType: !844, size: 64, offset: 32)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !792, line: 40, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !792, line: 35, size: 64, elements: !846)
!846 = !{!847, !849}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !845, file: !792, line: 36, baseType: !848, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !845, file: !792, line: 37, baseType: !848, size: 32, offset: 32)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !717, file: !822, line: 318, type: !754, isLocal: true, isDefinition: true, align: 8)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !717, file: !822, line: 318, type: !854, isLocal: true, isDefinition: true)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !822, line: 23, size: 128, elements: !856)
!856 = !{!857, !858, !871, !882}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !855, file: !822, line: 25, baseType: !809, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !855, file: !822, line: 26, baseType: !859, size: 32, offset: 32)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !455, line: 19729, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 19720, size: 256, elements: !862)
!862 = !{!863, !864, !865, !866, !867, !868, !869, !870}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !861, file: !455, line: 19721, baseType: !459, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !861, file: !455, line: 19722, baseType: !459, size: 32, offset: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !861, file: !455, line: 19723, baseType: !532, size: 32, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !861, file: !455, line: 19724, baseType: !459, size: 32, offset: 96)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !861, file: !455, line: 19725, baseType: !459, size: 32, offset: 128)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !861, file: !455, line: 19726, baseType: !459, size: 32, offset: 160)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !861, file: !455, line: 19727, baseType: !459, size: 32, offset: 192)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !861, file: !455, line: 19728, baseType: !459, size: 32, offset: 224)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !855, file: !822, line: 28, baseType: !872, size: 32, offset: 64)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !875, line: 51, size: 128, elements: !876)
!875 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!876 = !{!877, !878, !879, !880, !881}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !874, file: !875, line: 52, baseType: !137, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !874, file: !875, line: 53, baseType: !137, size: 32, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !874, file: !875, line: 54, baseType: !137, size: 32, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !874, file: !875, line: 55, baseType: !465, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !874, file: !875, line: 56, baseType: !137, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !855, file: !822, line: 29, baseType: !465, size: 8, offset: 96)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !717, file: !822, line: 249, type: !738, isLocal: true, isDefinition: true)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !887, file: !822, line: 318, type: !890, isLocal: true, isDefinition: true, align: 32)
!887 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !822, file: !822, line: 318, type: !835, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !888)
!888 = !{!889}
!889 = !DILocalVariable(name: "port", arg: 1, scope: !887, file: !822, line: 318, type: !745)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !891)
!891 = !{!892, !894, !895, !896}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !890, file: !10, line: 55, baseType: !893, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !890, file: !10, line: 57, baseType: !893, size: 32, offset: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !890, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !890, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !887, file: !822, line: 318, type: !890, isLocal: true, isDefinition: true, align: 32)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !873, size: 2048, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 16)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !904, file: !909, line: 7, type: !910, isLocal: false, isDefinition: true, align: 16)
!904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !905, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !906, splitDebugInlining: false, nameTableKind: None)
!905 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!906 = !{!902, !907}
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !904, file: !909, line: 12, type: !910, isLocal: false, isDefinition: true, align: 16)
!909 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !640, size: 48, elements: !911)
!911 = !{!912}
!912 = !DISubrange(count: 3)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !915, file: !1112, line: 339, type: !1110, isLocal: true, isDefinition: true)
!915 = distinct !DICompileUnit(language: DW_LANG_C99, file: !916, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !917, retainedTypes: !1003, globals: !1147, splitDebugInlining: false, nameTableKind: None)
!916 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!917 = !{!30, !918, !956, !984, !988, !992, !997}
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !919, line: 122, baseType: !32, size: 32, elements: !920)
!919 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!920 = !{!921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955}
!921 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!922 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!923 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!924 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!925 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!926 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!927 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!928 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!929 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!930 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!931 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!932 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!933 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!934 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!935 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!936 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!937 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!938 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!939 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!940 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!941 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!942 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!943 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!944 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!945 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!946 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!947 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!948 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!949 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!950 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!951 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!952 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!953 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!954 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!955 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!956 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !919, line: 91, baseType: !32, size: 32, elements: !957)
!957 = !{!958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983}
!958 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!959 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!960 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!961 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!962 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!963 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!964 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!965 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!966 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!967 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!968 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!969 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!970 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!971 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!972 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!973 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!974 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!975 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!976 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!977 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!978 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!979 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!980 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!981 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!982 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!983 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!984 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !919, line: 60, baseType: !32, size: 32, elements: !985)
!985 = !{!986, !987}
!986 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!987 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!988 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !919, line: 67, baseType: !32, size: 32, elements: !989)
!989 = !{!990, !991}
!990 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!991 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!992 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !919, line: 74, baseType: !32, size: 32, elements: !993)
!993 = !{!994, !995, !996}
!994 = !DIEnumerator(name: "uartParityDisable", value: 0)
!995 = !DIEnumerator(name: "uartParityEven", value: 256)
!996 = !DIEnumerator(name: "uartParityOdd", value: 384)
!997 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !919, line: 82, baseType: !32, size: 32, elements: !998)
!998 = !{!999, !1000, !1001, !1002}
!999 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1000 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1001 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1002 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1003 = !{!102, !103, !1004, !1083, !1109, !149, !137, !636, !465}
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !614, line: 336, size: 608, elements: !1007)
!1007 = !{!1008, !1027, !1031, !1035, !1048, !1053, !1057, !1061, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1006, file: !614, line: 365, baseType: !1009, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!103, !1012, !644}
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !623, line: 378, size: 192, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1019, !1025, !1026}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1014, file: !623, line: 380, baseType: !626, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1014, file: !623, line: 382, baseType: !13, size: 32, offset: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1014, file: !623, line: 384, baseType: !13, size: 32, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1014, file: !623, line: 386, baseType: !1020, size: 32, offset: 96)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 32)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !623, line: 351, size: 16, elements: !1022)
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1021, file: !623, line: 359, baseType: !465, size: 8)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1021, file: !623, line: 364, baseType: !636, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1014, file: !623, line: 388, baseType: !102, size: 32, offset: 128)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1014, file: !623, line: 396, baseType: !639, size: 32, offset: 160)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1006, file: !614, line: 366, baseType: !1028, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{null, !1012, !466}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1006, file: !614, line: 374, baseType: !1032, size: 32, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!103, !1012}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1006, file: !614, line: 377, baseType: !1036, size: 32, offset: 96)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!103, !1012, !1039}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !614, line: 122, size: 64, elements: !1042)
!1042 = !{!1043, !1044, !1045, !1046, !1047}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1041, file: !614, line: 123, baseType: !137, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1041, file: !614, line: 124, baseType: !465, size: 8, offset: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1041, file: !614, line: 125, baseType: !465, size: 8, offset: 40)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1041, file: !614, line: 126, baseType: !465, size: 8, offset: 48)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1041, file: !614, line: 127, baseType: !465, size: 8, offset: 56)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1006, file: !614, line: 379, baseType: !1049, size: 32, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!103, !1012, !1052}
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1006, file: !614, line: 384, baseType: !1054, size: 32, offset: 160)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!103, !1012, !675, !103}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1006, file: !614, line: 393, baseType: !1058, size: 32, offset: 192)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!103, !1012, !681, !682}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1006, file: !614, line: 402, baseType: !1062, size: 32, offset: 224)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{null, !1012}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1006, file: !614, line: 405, baseType: !1062, size: 32, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1006, file: !614, line: 408, baseType: !1032, size: 32, offset: 288)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1006, file: !614, line: 411, baseType: !1062, size: 32, offset: 320)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1006, file: !614, line: 414, baseType: !1062, size: 32, offset: 352)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1006, file: !614, line: 417, baseType: !1032, size: 32, offset: 384)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1006, file: !614, line: 420, baseType: !1032, size: 32, offset: 416)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1006, file: !614, line: 423, baseType: !1062, size: 32, offset: 448)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1006, file: !614, line: 426, baseType: !1062, size: 32, offset: 480)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1006, file: !614, line: 429, baseType: !1032, size: 32, offset: 512)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1006, file: !614, line: 432, baseType: !1032, size: 32, offset: 544)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1006, file: !614, line: 435, baseType: !1076, size: 32, offset: 576)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{null, !1012, !1079, !102}
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !614, line: 142, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !1012, !102}
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !455, line: 41342, baseType: !1085)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 41322, size: 1504, elements: !1086)
!1086 = !{!1087, !1088, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1085, file: !455, line: 41323, baseType: !532, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1085, file: !455, line: 41324, baseType: !1089, size: 480, offset: 32)
!1089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 480, elements: !1090)
!1090 = !{!1091}
!1091 = !DISubrange(count: 60)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1085, file: !455, line: 41325, baseType: !459, size: 32, offset: 512)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1085, file: !455, line: 41326, baseType: !1089, size: 480, offset: 544)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1085, file: !455, line: 41327, baseType: !459, size: 32, offset: 1024)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1085, file: !455, line: 41328, baseType: !459, size: 32, offset: 1056)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1085, file: !455, line: 41329, baseType: !459, size: 32, offset: 1088)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1085, file: !455, line: 41330, baseType: !459, size: 32, offset: 1120)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1085, file: !455, line: 41331, baseType: !459, size: 32, offset: 1152)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1085, file: !455, line: 41332, baseType: !459, size: 32, offset: 1184)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1085, file: !455, line: 41333, baseType: !459, size: 32, offset: 1216)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1085, file: !455, line: 41334, baseType: !459, size: 32, offset: 1248)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1085, file: !455, line: 41335, baseType: !459, size: 32, offset: 1280)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1085, file: !455, line: 41336, baseType: !459, size: 32, offset: 1312)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1085, file: !455, line: 41337, baseType: !459, size: 32, offset: 1344)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1085, file: !455, line: 41338, baseType: !532, size: 32, offset: 1376)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1085, file: !455, line: 41339, baseType: !459, size: 32, offset: 1408)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1085, file: !455, line: 41340, baseType: !459, size: 32, offset: 1440)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1085, file: !455, line: 41341, baseType: !459, size: 32, offset: 1472)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1112, line: 29, size: 160, elements: !1113)
!1112 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1113 = !{!1114, !1115, !1116, !1117, !1146}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1111, file: !1112, line: 30, baseType: !1083, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1111, file: !1112, line: 31, baseType: !137, size: 32, offset: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1111, file: !1112, line: 32, baseType: !465, size: 8, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1111, file: !1112, line: 33, baseType: !1118, size: 32, offset: 96)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1120)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1121, line: 60, size: 64, elements: !1122)
!1121 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1122 = !{!1123, !1145}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1120, file: !1121, line: 69, baseType: !1124, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1126)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1121, line: 50, size: 64, elements: !1127)
!1127 = !{!1128, !1143, !1144}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1126, file: !1121, line: 52, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1131)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !875, line: 64, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !875, line: 59, size: 160, elements: !1133)
!1133 = !{!1134, !1142}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1132, file: !875, line: 60, baseType: !1135, size: 128)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !875, line: 51, size: 128, elements: !1136)
!1136 = !{!1137, !1138, !1139, !1140, !1141}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1135, file: !875, line: 52, baseType: !137, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1135, file: !875, line: 53, baseType: !137, size: 32, offset: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1135, file: !875, line: 54, baseType: !137, size: 32, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1135, file: !875, line: 55, baseType: !465, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1135, file: !875, line: 56, baseType: !137, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1132, file: !875, line: 61, baseType: !137, size: 32, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1126, file: !1121, line: 54, baseType: !465, size: 8, offset: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1126, file: !1121, line: 56, baseType: !465, size: 8, offset: 40)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1120, file: !1121, line: 71, baseType: !465, size: 8, offset: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1111, file: !1112, line: 35, baseType: !1062, size: 32, offset: 128)
!1147 = !{!1148, !1153, !1155, !1162, !1168, !1170, !913, !1172, !1174, !1179, !1184}
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !915, file: !1112, line: 339, type: !1150, isLocal: false, isDefinition: true, align: 16)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !640, size: 96, elements: !1151)
!1151 = !{!1152}
!1152 = !DISubrange(count: 6)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !915, file: !1112, line: 339, type: !1013, isLocal: false, isDefinition: true, align: 32)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !915, file: !1112, line: 339, type: !1157, isLocal: true, isDefinition: true, align: 32)
!1157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !586, line: 51, size: 64, elements: !1159)
!1159 = !{!1160, !1161}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1158, file: !586, line: 60, baseType: !1032, size: 32)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1158, file: !586, line: 65, baseType: !1012, size: 32, offset: 32)
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !915, file: !1112, line: 339, type: !1164, isLocal: true, isDefinition: true)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1112, line: 39, size: 64, elements: !1165)
!1165 = !{!1166, !1167}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1164, file: !1112, line: 41, baseType: !1079, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1164, file: !1112, line: 42, baseType: !102, size: 32, offset: 32)
!1168 = !DIGlobalVariableExpression(var: !1169, expr: !DIExpression())
!1169 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !915, file: !1112, line: 339, type: !1021, isLocal: true, isDefinition: true, align: 8)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !915, file: !1112, line: 270, type: !1005, isLocal: true, isDefinition: true)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !915, file: !1112, line: 339, type: !1119, isLocal: true, isDefinition: true)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !915, file: !1112, line: 339, type: !1176, isLocal: true, isDefinition: true)
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 64, elements: !1177)
!1177 = !{!1178}
!1178 = !DISubrange(count: 1)
!1179 = !DIGlobalVariableExpression(var: !1180, expr: !DIExpression())
!1180 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !915, file: !1112, line: 339, type: !1181, isLocal: true, isDefinition: true)
!1181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1130, size: 320, elements: !1182)
!1182 = !{!1183}
!1183 = !DISubrange(count: 2)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1186, file: !1112, line: 339, type: !1189, isLocal: true, isDefinition: true, align: 32)
!1186 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1112, file: !1112, line: 339, type: !1063, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !1187)
!1187 = !{!1188}
!1188 = !DILocalVariable(name: "dev", arg: 1, scope: !1186, file: !1112, line: 339, type: !1012)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1194}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1189, file: !10, line: 55, baseType: !893, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1189, file: !10, line: 57, baseType: !893, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1189, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1189, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1197, file: !1424, line: 65, type: !459, isLocal: true, isDefinition: true)
!1197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1199, retainedTypes: !1340, globals: !1421, splitDebugInlining: false, nameTableKind: None)
!1198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!1199 = !{!1200}
!1200 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !455, line: 103, baseType: !103, size: 32, elements: !1201)
!1201 = !{!1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339}
!1202 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1203 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1204 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1205 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1206 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1207 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1208 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1209 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1210 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1211 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1212 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1213 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1214 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1215 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1216 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1217 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1218 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1219 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1220 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1221 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1222 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1223 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1224 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1225 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1226 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1227 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1228 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1229 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1230 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1231 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1232 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1233 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1234 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1235 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1236 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1237 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1238 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1239 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1240 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1241 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1242 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1243 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1244 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1245 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1246 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1247 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1248 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1249 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1250 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1251 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1252 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1253 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1254 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1255 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1256 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1257 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1258 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1259 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1260 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1261 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1262 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1263 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1264 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1265 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1266 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1267 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1268 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1269 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1270 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1271 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1272 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1273 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1274 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1275 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1276 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1277 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1278 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1279 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1280 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1281 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1282 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1283 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1284 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1285 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1286 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1287 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1288 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1289 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1290 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1291 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1292 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1293 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1294 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1295 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1296 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1297 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1298 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1299 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1300 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1301 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1302 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1303 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1304 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1305 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1306 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1307 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1308 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1309 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1310 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1311 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1312 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1313 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1314 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1315 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1316 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1317 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1318 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1319 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1320 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1321 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1322 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1323 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1324 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1325 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1326 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1327 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1328 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1329 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1330 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1331 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1332 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1333 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1334 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1335 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1336 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1337 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1338 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1339 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1340 = !{!1341, !1345, !893, !465, !137, !1354, !1385}
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1342, line: 46, baseType: !1343)
!1342 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !1344)
!1344 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1347, line: 770, baseType: !1348)
!1347 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 764, size: 128, elements: !1349)
!1349 = !{!1350, !1351, !1352, !1353}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1348, file: !1347, line: 766, baseType: !459, size: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1348, file: !1347, line: 767, baseType: !459, size: 32, offset: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1348, file: !1347, line: 768, baseType: !459, size: 32, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1348, file: !1347, line: 769, baseType: !532, size: 32, offset: 96)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1347, line: 426, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 411, size: 28704, elements: !1357)
!1357 = !{!1358, !1360, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1375, !1380, !1384}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1356, file: !1347, line: 413, baseType: !1359, size: 256)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 256, elements: !159)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1356, file: !1347, line: 414, baseType: !1361, size: 768, offset: 256)
!1361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 768, elements: !1362)
!1362 = !{!1363}
!1363 = !DISubrange(count: 24)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1356, file: !1347, line: 415, baseType: !1359, size: 256, offset: 1024)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1356, file: !1347, line: 416, baseType: !1361, size: 768, offset: 1280)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1356, file: !1347, line: 417, baseType: !1359, size: 256, offset: 2048)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1356, file: !1347, line: 418, baseType: !1361, size: 768, offset: 2304)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1356, file: !1347, line: 419, baseType: !1359, size: 256, offset: 3072)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1356, file: !1347, line: 420, baseType: !1361, size: 768, offset: 3328)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1356, file: !1347, line: 421, baseType: !1359, size: 256, offset: 4096)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1356, file: !1347, line: 422, baseType: !1372, size: 1792, offset: 4352)
!1372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 1792, elements: !1373)
!1373 = !{!1374}
!1374 = !DISubrange(count: 56)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1356, file: !1347, line: 423, baseType: !1376, size: 1920, offset: 6144)
!1376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1377, size: 1920, elements: !1378)
!1377 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !465)
!1378 = !{!1379}
!1379 = !DISubrange(count: 240)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1356, file: !1347, line: 424, baseType: !1381, size: 20608, offset: 8064)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 20608, elements: !1382)
!1382 = !{!1383}
!1383 = !DISubrange(count: 644)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1356, file: !1347, line: 425, baseType: !459, size: 32, offset: 28672)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1347, line: 468, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 445, size: 1120, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393, !1394, !1395, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1408, !1409, !1410, !1414, !1418, !1420}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1387, file: !1347, line: 447, baseType: !532, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1387, file: !1347, line: 448, baseType: !459, size: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1387, file: !1347, line: 449, baseType: !459, size: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1387, file: !1347, line: 450, baseType: !459, size: 32, offset: 96)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1387, file: !1347, line: 451, baseType: !459, size: 32, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1387, file: !1347, line: 452, baseType: !459, size: 32, offset: 160)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1387, file: !1347, line: 453, baseType: !1396, size: 96, offset: 192)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1377, size: 96, elements: !1397)
!1397 = !{!1398}
!1398 = !DISubrange(count: 12)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1387, file: !1347, line: 454, baseType: !459, size: 32, offset: 288)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1387, file: !1347, line: 455, baseType: !459, size: 32, offset: 320)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1387, file: !1347, line: 456, baseType: !459, size: 32, offset: 352)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1387, file: !1347, line: 457, baseType: !459, size: 32, offset: 384)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1387, file: !1347, line: 458, baseType: !459, size: 32, offset: 416)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1387, file: !1347, line: 459, baseType: !459, size: 32, offset: 448)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1387, file: !1347, line: 460, baseType: !459, size: 32, offset: 480)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1387, file: !1347, line: 461, baseType: !1407, size: 64, offset: 512)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 64, elements: !1182)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1387, file: !1347, line: 462, baseType: !532, size: 32, offset: 576)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1387, file: !1347, line: 463, baseType: !532, size: 32, offset: 608)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1387, file: !1347, line: 464, baseType: !1411, size: 128, offset: 640)
!1411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 128, elements: !1412)
!1412 = !{!1413}
!1413 = !DISubrange(count: 4)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1387, file: !1347, line: 465, baseType: !1415, size: 160, offset: 768)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 160, elements: !1416)
!1416 = !{!1417}
!1417 = !DISubrange(count: 5)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1387, file: !1347, line: 466, baseType: !1419, size: 160, offset: 928)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 160, elements: !1416)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1387, file: !1347, line: 467, baseType: !459, size: 32, offset: 1088)
!1421 = !{!1422, !1448, !1452, !1454, !1456, !1195}
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1197, file: !1424, line: 285, type: !1425, isLocal: true, isDefinition: true, align: 32)
!1424 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1426)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !586, line: 51, size: 64, elements: !1427)
!1427 = !{!1428, !1447}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1426, file: !586, line: 60, baseType: !1429, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!103, !1432}
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !623, line: 378, size: 192, elements: !1435)
!1435 = !{!1436, !1437, !1438, !1439, !1445, !1446}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1434, file: !623, line: 380, baseType: !626, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1434, file: !623, line: 382, baseType: !13, size: 32, offset: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1434, file: !623, line: 384, baseType: !13, size: 32, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1434, file: !623, line: 386, baseType: !1440, size: 32, offset: 96)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 32)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !623, line: 351, size: 16, elements: !1442)
!1442 = !{!1443, !1444}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1441, file: !623, line: 359, baseType: !465, size: 8)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1441, file: !623, line: 364, baseType: !636, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1434, file: !623, line: 388, baseType: !102, size: 32, offset: 128)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1434, file: !623, line: 396, baseType: !639, size: 32, offset: 160)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1426, file: !586, line: 65, baseType: !1432, size: 32, offset: 32)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "lock", scope: !1197, file: !1424, line: 34, type: !1450, isLocal: true, isDefinition: true)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1451, line: 43, elements: !162)
!1451 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "last_load", scope: !1197, file: !1424, line: 36, type: !137, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1197, file: !1424, line: 48, type: !137, isLocal: true, isDefinition: true)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1197, file: !1424, line: 54, type: !137, isLocal: true, isDefinition: true)
!1458 = !DIGlobalVariableExpression(var: !1459, expr: !DIExpression())
!1459 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1460, file: !1464, line: 69, type: !1465, isLocal: true, isDefinition: true, align: 32)
!1460 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1461, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1462, globals: !1463, splitDebugInlining: false, nameTableKind: None)
!1461 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!1462 = !{!581, !22}
!1463 = !{!1458}
!1464 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !586, line: 51, size: 64, elements: !1467)
!1467 = !{!1468, !1487}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1466, file: !586, line: 60, baseType: !1469, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 32)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!103, !1472}
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !623, line: 378, size: 192, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1485, !1486}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1474, file: !623, line: 380, baseType: !626, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1474, file: !623, line: 382, baseType: !13, size: 32, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1474, file: !623, line: 384, baseType: !13, size: 32, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1474, file: !623, line: 386, baseType: !1480, size: 32, offset: 96)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !623, line: 351, size: 16, elements: !1482)
!1482 = !{!1483, !1484}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1481, file: !623, line: 359, baseType: !465, size: 8)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1481, file: !623, line: 364, baseType: !636, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1474, file: !623, line: 388, baseType: !102, size: 32, offset: 128)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1474, file: !623, line: 396, baseType: !639, size: 32, offset: 160)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1466, file: !586, line: 65, baseType: !1472, size: 32, offset: 32)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1490, file: !1493, line: 23, type: !682, isLocal: false, isDefinition: true)
!1490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1492, splitDebugInlining: false, nameTableKind: None)
!1491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!1492 = !{!1488}
!1493 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1496, file: !1500, line: 86, type: !1749, isLocal: false, isDefinition: true, align: 64)
!1496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1498, retainedTypes: !1507, globals: !1580, splitDebugInlining: false, nameTableKind: None)
!1497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!1498 = !{!1499, !30, !1200}
!1499 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1500, line: 63, baseType: !32, size: 32, elements: !1501)
!1500 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1501 = !{!1502, !1503, !1504, !1505, !1506}
!1502 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1503 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1504 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1505 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1506 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1507 = !{!120, !102, !103, !1508, !818, !137, !1538, !893, !465, !1563}
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1510)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1511, line: 51, size: 64, elements: !1512)
!1511 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1512 = !{!1513, !1533}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1510, file: !1511, line: 52, baseType: !1514, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1511, line: 38, baseType: !1515)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!103, !1518, !681, !151}
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !623, line: 378, size: 192, elements: !1521)
!1521 = !{!1522, !1523, !1524, !1525, !1531, !1532}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1520, file: !623, line: 380, baseType: !626, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1520, file: !623, line: 382, baseType: !13, size: 32, offset: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1520, file: !623, line: 384, baseType: !13, size: 32, offset: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1520, file: !623, line: 386, baseType: !1526, size: 32, offset: 96)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !623, line: 351, size: 16, elements: !1528)
!1528 = !{!1529, !1530}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1527, file: !623, line: 359, baseType: !465, size: 8)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1527, file: !623, line: 364, baseType: !636, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1520, file: !623, line: 388, baseType: !102, size: 32, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1520, file: !623, line: 396, baseType: !639, size: 32, offset: 160)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1510, file: !1511, line: 53, baseType: !1534, size: 32, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1511, line: 47, baseType: !1535)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!103, !1518, !681, !151, !137}
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1347, line: 468, baseType: !1540)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 445, size: 1120, elements: !1541)
!1541 = !{!1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1540, file: !1347, line: 447, baseType: !532, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1540, file: !1347, line: 448, baseType: !459, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1540, file: !1347, line: 449, baseType: !459, size: 32, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1540, file: !1347, line: 450, baseType: !459, size: 32, offset: 96)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1540, file: !1347, line: 451, baseType: !459, size: 32, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1540, file: !1347, line: 452, baseType: !459, size: 32, offset: 160)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1540, file: !1347, line: 453, baseType: !1396, size: 96, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1540, file: !1347, line: 454, baseType: !459, size: 32, offset: 288)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1540, file: !1347, line: 455, baseType: !459, size: 32, offset: 320)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1540, file: !1347, line: 456, baseType: !459, size: 32, offset: 352)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1540, file: !1347, line: 457, baseType: !459, size: 32, offset: 384)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1540, file: !1347, line: 458, baseType: !459, size: 32, offset: 416)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1540, file: !1347, line: 459, baseType: !459, size: 32, offset: 448)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1540, file: !1347, line: 460, baseType: !459, size: 32, offset: 480)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1540, file: !1347, line: 461, baseType: !1407, size: 64, offset: 512)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1540, file: !1347, line: 462, baseType: !532, size: 32, offset: 576)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1540, file: !1347, line: 463, baseType: !532, size: 32, offset: 608)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1540, file: !1347, line: 464, baseType: !1411, size: 128, offset: 640)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1540, file: !1347, line: 465, baseType: !1415, size: 160, offset: 768)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1540, file: !1347, line: 466, baseType: !1419, size: 160, offset: 928)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1540, file: !1347, line: 467, baseType: !459, size: 32, offset: 1088)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1347, line: 426, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 411, size: 28704, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1565, file: !1347, line: 413, baseType: !1359, size: 256)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1565, file: !1347, line: 414, baseType: !1361, size: 768, offset: 256)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1565, file: !1347, line: 415, baseType: !1359, size: 256, offset: 1024)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1565, file: !1347, line: 416, baseType: !1361, size: 768, offset: 1280)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1565, file: !1347, line: 417, baseType: !1359, size: 256, offset: 2048)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1565, file: !1347, line: 418, baseType: !1361, size: 768, offset: 2304)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1565, file: !1347, line: 419, baseType: !1359, size: 256, offset: 3072)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1565, file: !1347, line: 420, baseType: !1361, size: 768, offset: 3328)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1565, file: !1347, line: 421, baseType: !1359, size: 256, offset: 4096)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1565, file: !1347, line: 422, baseType: !1372, size: 1792, offset: 4352)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1565, file: !1347, line: 423, baseType: !1376, size: 1920, offset: 6144)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1565, file: !1347, line: 424, baseType: !1381, size: 20608, offset: 8064)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1565, file: !1347, line: 425, baseType: !459, size: 32, offset: 28672)
!1580 = !{!1581, !1705, !1714, !1716, !1494, !1719, !1721, !1726}
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "_kernel", scope: !1496, file: !1500, line: 40, type: !1583, isLocal: false, isDefinition: true)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !1584, line: 158, size: 288, elements: !1585)
!1584 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1585 = !{!1586, !1700}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1583, file: !1584, line: 159, baseType: !1587, size: 192)
!1587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1588, size: 192, elements: !1177)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !1584, line: 100, size: 192, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1694, !1695, !1696, !1697}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1588, file: !1584, line: 102, baseType: !137, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1588, file: !1584, line: 105, baseType: !818, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1588, file: !1584, line: 108, baseType: !1593, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1595, line: 245, size: 896, elements: !1596)
!1595 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1596 = !{!1597, !1659, !1672, !1673, !1674, !1675, !1689}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1594, file: !1595, line: 247, baseType: !1598, size: 384)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1595, line: 57, size: 384, elements: !1599)
!1599 = !{!1600, !1626, !1633, !1634, !1635, !1646, !1647, !1648}
!1600 = !DIDerivedType(tag: DW_TAG_member, scope: !1598, file: !1595, line: 60, baseType: !1601, size: 64)
!1601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1598, file: !1595, line: 60, size: 64, elements: !1602)
!1602 = !{!1603, !1619}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1601, file: !1595, line: 61, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1605, line: 49, baseType: !1606)
!1605 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1605, line: 37, size: 64, elements: !1607)
!1607 = !{!1608, !1614}
!1608 = !DIDerivedType(tag: DW_TAG_member, scope: !1606, file: !1605, line: 38, baseType: !1609, size: 32)
!1609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1606, file: !1605, line: 38, size: 32, elements: !1610)
!1610 = !{!1611, !1613}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1609, file: !1605, line: 39, baseType: !1612, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1609, file: !1605, line: 40, baseType: !1612, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, scope: !1606, file: !1605, line: 42, baseType: !1615, size: 32, offset: 32)
!1615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1606, file: !1605, line: 42, size: 32, elements: !1616)
!1616 = !{!1617, !1618}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1615, file: !1605, line: 43, baseType: !1612, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1615, file: !1605, line: 44, baseType: !1612, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1601, file: !1595, line: 62, baseType: !1620, size: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1621, line: 49, size: 64, elements: !1622)
!1621 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1620, file: !1621, line: 50, baseType: !1624, size: 64)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1625, size: 64, elements: !1182)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1598, file: !1595, line: 68, baseType: !1627, size: 32, offset: 64)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1584, line: 233, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1584, line: 231, size: 64, elements: !1630)
!1630 = !{!1631}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1629, file: !1584, line: 232, baseType: !1632, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1605, line: 48, baseType: !1606)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1598, file: !1595, line: 71, baseType: !465, size: 8, offset: 96)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1598, file: !1595, line: 74, baseType: !465, size: 8, offset: 104)
!1635 = !DIDerivedType(tag: DW_TAG_member, scope: !1598, file: !1595, line: 90, baseType: !1636, size: 16, offset: 112)
!1636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1598, file: !1595, line: 90, size: 16, elements: !1637)
!1637 = !{!1638, !1645}
!1638 = !DIDerivedType(tag: DW_TAG_member, scope: !1636, file: !1595, line: 91, baseType: !1639, size: 16)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1636, file: !1595, line: 91, size: 16, elements: !1640)
!1640 = !{!1641, !1644}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1639, file: !1595, line: 96, baseType: !1642, size: 8)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !1643)
!1643 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1639, file: !1595, line: 97, baseType: !465, size: 8, offset: 8)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1636, file: !1595, line: 100, baseType: !151, size: 16)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1598, file: !1595, line: 107, baseType: !137, size: 32, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1598, file: !1595, line: 127, baseType: !102, size: 32, offset: 160)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1598, file: !1595, line: 131, baseType: !1649, size: 192, offset: 192)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1584, line: 244, size: 192, elements: !1650)
!1650 = !{!1651, !1652, !1658}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1649, file: !1584, line: 245, baseType: !1604, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1649, file: !1584, line: 246, baseType: !1653, size: 32, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1584, line: 242, baseType: !1654)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{null, !1657}
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1649, file: !1584, line: 249, baseType: !1343, size: 64, offset: 128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1594, file: !1595, line: 250, baseType: !1660, size: 288, offset: 384)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1661, line: 25, size: 288, elements: !1662)
!1661 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1662 = !{!1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1660, file: !1661, line: 26, baseType: !137, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1660, file: !1661, line: 27, baseType: !137, size: 32, offset: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1660, file: !1661, line: 28, baseType: !137, size: 32, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1660, file: !1661, line: 29, baseType: !137, size: 32, offset: 96)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1660, file: !1661, line: 30, baseType: !137, size: 32, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1660, file: !1661, line: 31, baseType: !137, size: 32, offset: 160)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1660, file: !1661, line: 32, baseType: !137, size: 32, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1660, file: !1661, line: 33, baseType: !137, size: 32, offset: 224)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1660, file: !1661, line: 34, baseType: !137, size: 32, offset: 256)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1594, file: !1595, line: 253, baseType: !102, size: 32, offset: 672)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1594, file: !1595, line: 256, baseType: !1628, size: 64, offset: 704)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1594, file: !1595, line: 294, baseType: !103, size: 32, offset: 768)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1594, file: !1595, line: 325, baseType: !1676, size: 32, offset: 800)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1678, line: 5073, size: 160, elements: !1679)
!1678 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1679 = !{!1680, !1686, !1687}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1677, file: !1678, line: 5074, baseType: !1681, size: 96)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1682)
!1682 = !{!1683, !1684, !1685}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1681, file: !113, line: 57, baseType: !116, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1681, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1681, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1677, file: !1678, line: 5075, baseType: !1628, size: 64, offset: 96)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1677, file: !1678, line: 5076, baseType: !1688, offset: 160)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1451, line: 43, elements: !162)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1594, file: !1595, line: 343, baseType: !1690, size: 64, offset: 832)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1661, line: 60, size: 64, elements: !1691)
!1691 = !{!1692, !1693}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1690, file: !1661, line: 63, baseType: !137, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1690, file: !1661, line: 66, baseType: !137, size: 32, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1588, file: !1584, line: 111, baseType: !1593, size: 32, offset: 96)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1588, file: !1584, line: 124, baseType: !103, size: 32, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1588, file: !1584, line: 127, baseType: !465, size: 8, offset: 160)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1588, file: !1584, line: 153, baseType: !1698, offset: 168)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1699, line: 33, elements: !162)
!1699 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1583, file: !1584, line: 170, baseType: !1701, size: 96, offset: 192)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !1584, line: 83, size: 96, elements: !1702)
!1702 = !{!1703, !1704}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1701, file: !1584, line: 86, baseType: !1593, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1701, file: !1584, line: 90, baseType: !1632, size: 64, offset: 32)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1496, file: !1500, line: 43, type: !1707, isLocal: false, isDefinition: true, align: 64)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, size: 8192, elements: !1712)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1709, line: 47, size: 8, elements: !1710)
!1709 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1710 = !{!1711}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1708, file: !1709, line: 48, baseType: !109, size: 8)
!1712 = !{!1713}
!1713 = !DISubrange(count: 1024)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1496, file: !1500, line: 44, type: !1594, isLocal: false, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1496, file: !1500, line: 48, type: !1718, isLocal: false, isDefinition: true)
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1594, size: 896, elements: !1177)
!1719 = !DIGlobalVariableExpression(var: !1720, expr: !DIExpression())
!1720 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1496, file: !1500, line: 217, type: !636, isLocal: false, isDefinition: true)
!1721 = !DIGlobalVariableExpression(var: !1722, expr: !DIExpression())
!1722 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1496, file: !1500, line: 50, type: !1723, isLocal: true, isDefinition: true, align: 64)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, size: 2560, elements: !1724)
!1724 = !{!1178, !1725}
!1725 = !DISubrange(count: 320)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "levels", scope: !1728, file: !1500, line: 232, type: !1748, isLocal: true, isDefinition: true)
!1728 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1500, file: !1500, line: 230, type: !1729, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !1731)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{null, !1499}
!1731 = !{!1732, !1733, !1743, !1747}
!1732 = !DILocalVariable(name: "level", arg: 1, scope: !1728, file: !1500, line: 230, type: !1499)
!1733 = !DILocalVariable(name: "entry", scope: !1728, file: !1500, line: 244, type: !1734)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !586, line: 51, size: 64, elements: !1737)
!1737 = !{!1738, !1742}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1736, file: !586, line: 60, baseType: !1739, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!103, !1518}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1736, file: !586, line: 65, baseType: !1518, size: 32, offset: 32)
!1743 = !DILocalVariable(name: "dev", scope: !1744, file: !1500, line: 247, type: !1518)
!1744 = distinct !DILexicalBlock(scope: !1745, file: !1500, line: 246, column: 64)
!1745 = distinct !DILexicalBlock(scope: !1746, file: !1500, line: 246, column: 2)
!1746 = distinct !DILexicalBlock(scope: !1728, file: !1500, line: 246, column: 2)
!1747 = !DILocalVariable(name: "rc", scope: !1744, file: !1500, line: 248, type: !103)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1734, size: 192, elements: !1151)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, size: 16384, elements: !1750)
!1750 = !{!1178, !1751}
!1751 = !DISubrange(count: 2048)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "states_str", scope: !1754, file: !1755, line: 276, type: !1871, isLocal: true, isDefinition: true)
!1754 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1755, file: !1755, line: 271, type: !1756, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !1862)
!1755 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!626, !1758, !818, !120}
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1595, line: 347, baseType: !1759)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1595, line: 245, size: 896, elements: !1761)
!1761 = !{!1762, !1820, !1832, !1833, !1834, !1835, !1848}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1760, file: !1595, line: 247, baseType: !1763, size: 384)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1595, line: 57, size: 384, elements: !1764)
!1764 = !{!1765, !1789, !1796, !1797, !1798, !1807, !1808, !1809}
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1763, file: !1595, line: 60, baseType: !1766, size: 64)
!1766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1763, file: !1595, line: 60, size: 64, elements: !1767)
!1767 = !{!1768, !1783}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1766, file: !1595, line: 61, baseType: !1769, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1605, line: 49, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1605, line: 37, size: 64, elements: !1771)
!1771 = !{!1772, !1778}
!1772 = !DIDerivedType(tag: DW_TAG_member, scope: !1770, file: !1605, line: 38, baseType: !1773, size: 32)
!1773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1770, file: !1605, line: 38, size: 32, elements: !1774)
!1774 = !{!1775, !1777}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1773, file: !1605, line: 39, baseType: !1776, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1773, file: !1605, line: 40, baseType: !1776, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, scope: !1770, file: !1605, line: 42, baseType: !1779, size: 32, offset: 32)
!1779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1770, file: !1605, line: 42, size: 32, elements: !1780)
!1780 = !{!1781, !1782}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1779, file: !1605, line: 43, baseType: !1776, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1779, file: !1605, line: 44, baseType: !1776, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1766, file: !1595, line: 62, baseType: !1784, size: 64)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1621, line: 49, size: 64, elements: !1785)
!1785 = !{!1786}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1784, file: !1621, line: 50, baseType: !1787, size: 64)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1788, size: 64, elements: !1182)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1763, file: !1595, line: 68, baseType: !1790, size: 32, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1584, line: 233, baseType: !1792)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1584, line: 231, size: 64, elements: !1793)
!1793 = !{!1794}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1792, file: !1584, line: 232, baseType: !1795, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1605, line: 48, baseType: !1770)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1763, file: !1595, line: 71, baseType: !465, size: 8, offset: 96)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1763, file: !1595, line: 74, baseType: !465, size: 8, offset: 104)
!1798 = !DIDerivedType(tag: DW_TAG_member, scope: !1763, file: !1595, line: 90, baseType: !1799, size: 16, offset: 112)
!1799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1763, file: !1595, line: 90, size: 16, elements: !1800)
!1800 = !{!1801, !1806}
!1801 = !DIDerivedType(tag: DW_TAG_member, scope: !1799, file: !1595, line: 91, baseType: !1802, size: 16)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1799, file: !1595, line: 91, size: 16, elements: !1803)
!1803 = !{!1804, !1805}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1802, file: !1595, line: 96, baseType: !1642, size: 8)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1802, file: !1595, line: 97, baseType: !465, size: 8, offset: 8)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1799, file: !1595, line: 100, baseType: !151, size: 16)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1763, file: !1595, line: 107, baseType: !137, size: 32, offset: 128)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1763, file: !1595, line: 127, baseType: !102, size: 32, offset: 160)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1763, file: !1595, line: 131, baseType: !1810, size: 192, offset: 192)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1584, line: 244, size: 192, elements: !1811)
!1811 = !{!1812, !1813, !1819}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1810, file: !1584, line: 245, baseType: !1769, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1810, file: !1584, line: 246, baseType: !1814, size: 32, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1584, line: 242, baseType: !1815)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{null, !1818}
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1810, file: !1584, line: 249, baseType: !1343, size: 64, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1760, file: !1595, line: 250, baseType: !1821, size: 288, offset: 384)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1661, line: 25, size: 288, elements: !1822)
!1822 = !{!1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1821, file: !1661, line: 26, baseType: !137, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1821, file: !1661, line: 27, baseType: !137, size: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1821, file: !1661, line: 28, baseType: !137, size: 32, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1821, file: !1661, line: 29, baseType: !137, size: 32, offset: 96)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1821, file: !1661, line: 30, baseType: !137, size: 32, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1821, file: !1661, line: 31, baseType: !137, size: 32, offset: 160)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1821, file: !1661, line: 32, baseType: !137, size: 32, offset: 192)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1821, file: !1661, line: 33, baseType: !137, size: 32, offset: 224)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1821, file: !1661, line: 34, baseType: !137, size: 32, offset: 256)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1760, file: !1595, line: 253, baseType: !102, size: 32, offset: 672)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1760, file: !1595, line: 256, baseType: !1791, size: 64, offset: 704)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1760, file: !1595, line: 294, baseType: !103, size: 32, offset: 768)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1760, file: !1595, line: 325, baseType: !1836, size: 32, offset: 800)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1678, line: 5073, size: 160, elements: !1838)
!1838 = !{!1839, !1845, !1846}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1837, file: !1678, line: 5074, baseType: !1840, size: 96)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1841)
!1841 = !{!1842, !1843, !1844}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1840, file: !113, line: 57, baseType: !116, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1840, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1840, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1837, file: !1678, line: 5075, baseType: !1791, size: 64, offset: 96)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1837, file: !1678, line: 5076, baseType: !1847, offset: 160)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1451, line: 43, elements: !162)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1760, file: !1595, line: 343, baseType: !1849, size: 64, offset: 832)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1661, line: 60, size: 64, elements: !1850)
!1850 = !{!1851, !1852}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1849, file: !1661, line: 63, baseType: !137, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1849, file: !1661, line: 66, baseType: !137, size: 32, offset: 32)
!1853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1855, globals: !1857, splitDebugInlining: false, nameTableKind: None)
!1854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!1855 = !{!102, !626, !1341, !465, !103, !1856, !24, !120, !818, !137, !163}
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1857 = !{!1752, !1858}
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "states_sz", scope: !1754, file: !1755, line: 279, type: !1860, isLocal: true, isDefinition: true)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1861, size: 256, elements: !159)
!1861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!1862 = !{!1863, !1864, !1865, !1866, !1867, !1868, !1869}
!1863 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1754, file: !1755, line: 271, type: !1758)
!1864 = !DILocalVariable(name: "buf", arg: 2, scope: !1754, file: !1755, line: 271, type: !818)
!1865 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1754, file: !1755, line: 271, type: !120)
!1866 = !DILocalVariable(name: "off", scope: !1754, file: !1755, line: 273, type: !120)
!1867 = !DILocalVariable(name: "bit", scope: !1754, file: !1755, line: 274, type: !465)
!1868 = !DILocalVariable(name: "thread_state", scope: !1754, file: !1755, line: 275, type: !465)
!1869 = !DILocalVariable(name: "index", scope: !1870, file: !1755, line: 293, type: !465)
!1870 = distinct !DILexicalBlock(scope: !1754, file: !1755, line: 293, column: 2)
!1871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 256, elements: !159)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !1874, file: !1976, line: 56, type: !1965, isLocal: false, isDefinition: true)
!1874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1876, globals: !1973, splitDebugInlining: false, nameTableKind: None)
!1875 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!1876 = !{!1877, !818, !102, !1971, !681, !1341, !893, !103, !137, !163, !1972}
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1595, line: 245, size: 896, elements: !1879)
!1879 = !{!1880, !1938, !1950, !1951, !1952, !1953, !1966}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1878, file: !1595, line: 247, baseType: !1881, size: 384)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1595, line: 57, size: 384, elements: !1882)
!1882 = !{!1883, !1907, !1914, !1915, !1916, !1925, !1926, !1927}
!1883 = !DIDerivedType(tag: DW_TAG_member, scope: !1881, file: !1595, line: 60, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1881, file: !1595, line: 60, size: 64, elements: !1885)
!1885 = !{!1886, !1901}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1884, file: !1595, line: 61, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1605, line: 49, baseType: !1888)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1605, line: 37, size: 64, elements: !1889)
!1889 = !{!1890, !1896}
!1890 = !DIDerivedType(tag: DW_TAG_member, scope: !1888, file: !1605, line: 38, baseType: !1891, size: 32)
!1891 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1888, file: !1605, line: 38, size: 32, elements: !1892)
!1892 = !{!1893, !1895}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1891, file: !1605, line: 39, baseType: !1894, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1891, file: !1605, line: 40, baseType: !1894, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, scope: !1888, file: !1605, line: 42, baseType: !1897, size: 32, offset: 32)
!1897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1888, file: !1605, line: 42, size: 32, elements: !1898)
!1898 = !{!1899, !1900}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1897, file: !1605, line: 43, baseType: !1894, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1897, file: !1605, line: 44, baseType: !1894, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1884, file: !1595, line: 62, baseType: !1902, size: 64)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1621, line: 49, size: 64, elements: !1903)
!1903 = !{!1904}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1902, file: !1621, line: 50, baseType: !1905, size: 64)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1906, size: 64, elements: !1182)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1881, file: !1595, line: 68, baseType: !1908, size: 32, offset: 64)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1584, line: 233, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1584, line: 231, size: 64, elements: !1911)
!1911 = !{!1912}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1910, file: !1584, line: 232, baseType: !1913, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1605, line: 48, baseType: !1888)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1881, file: !1595, line: 71, baseType: !465, size: 8, offset: 96)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1881, file: !1595, line: 74, baseType: !465, size: 8, offset: 104)
!1916 = !DIDerivedType(tag: DW_TAG_member, scope: !1881, file: !1595, line: 90, baseType: !1917, size: 16, offset: 112)
!1917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1881, file: !1595, line: 90, size: 16, elements: !1918)
!1918 = !{!1919, !1924}
!1919 = !DIDerivedType(tag: DW_TAG_member, scope: !1917, file: !1595, line: 91, baseType: !1920, size: 16)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1917, file: !1595, line: 91, size: 16, elements: !1921)
!1921 = !{!1922, !1923}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1920, file: !1595, line: 96, baseType: !1642, size: 8)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1920, file: !1595, line: 97, baseType: !465, size: 8, offset: 8)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1917, file: !1595, line: 100, baseType: !151, size: 16)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1881, file: !1595, line: 107, baseType: !137, size: 32, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1881, file: !1595, line: 127, baseType: !102, size: 32, offset: 160)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1881, file: !1595, line: 131, baseType: !1928, size: 192, offset: 192)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1584, line: 244, size: 192, elements: !1929)
!1929 = !{!1930, !1931, !1937}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1928, file: !1584, line: 245, baseType: !1887, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1928, file: !1584, line: 246, baseType: !1932, size: 32, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1584, line: 242, baseType: !1933)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 32)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{null, !1936}
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1928, file: !1584, line: 249, baseType: !1343, size: 64, offset: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1878, file: !1595, line: 250, baseType: !1939, size: 288, offset: 384)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1661, line: 25, size: 288, elements: !1940)
!1940 = !{!1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1939, file: !1661, line: 26, baseType: !137, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1939, file: !1661, line: 27, baseType: !137, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1939, file: !1661, line: 28, baseType: !137, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1939, file: !1661, line: 29, baseType: !137, size: 32, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1939, file: !1661, line: 30, baseType: !137, size: 32, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1939, file: !1661, line: 31, baseType: !137, size: 32, offset: 160)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1939, file: !1661, line: 32, baseType: !137, size: 32, offset: 192)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1939, file: !1661, line: 33, baseType: !137, size: 32, offset: 224)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1939, file: !1661, line: 34, baseType: !137, size: 32, offset: 256)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1878, file: !1595, line: 253, baseType: !102, size: 32, offset: 672)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1878, file: !1595, line: 256, baseType: !1909, size: 64, offset: 704)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1878, file: !1595, line: 294, baseType: !103, size: 32, offset: 768)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1878, file: !1595, line: 325, baseType: !1954, size: 32, offset: 800)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1678, line: 5073, size: 160, elements: !1956)
!1956 = !{!1957, !1963, !1964}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1955, file: !1678, line: 5074, baseType: !1958, size: 96)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1959)
!1959 = !{!1960, !1961, !1962}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1958, file: !113, line: 57, baseType: !116, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1958, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1958, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1955, file: !1678, line: 5075, baseType: !1909, size: 64, offset: 96)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1955, file: !1678, line: 5076, baseType: !1965, offset: 160)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1451, line: 43, elements: !162)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1878, file: !1595, line: 343, baseType: !1967, size: 64, offset: 832)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1661, line: 60, size: 64, elements: !1968)
!1968 = !{!1969, !1970}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1967, file: !1661, line: 63, baseType: !137, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1967, file: !1661, line: 66, baseType: !137, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32)
!1973 = !{!1872, !1974, !1977, !1979}
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !1874, file: !1976, line: 404, type: !103, isLocal: true, isDefinition: true)
!1976 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !1874, file: !1976, line: 405, type: !103, isLocal: true, isDefinition: true)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "pending_current", scope: !1874, file: !1976, line: 425, type: !1877, isLocal: true, isDefinition: true)
!1981 = !DIGlobalVariableExpression(var: !1982, expr: !DIExpression())
!1982 = distinct !DIGlobalVariable(name: "curr_tick", scope: !1983, file: !2013, line: 15, type: !163, isLocal: true, isDefinition: true)
!1983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1984, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1985, globals: !2010, splitDebugInlining: false, nameTableKind: None)
!1984 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!1985 = !{!1341, !102, !893, !137, !163, !103, !1986, !818, !1343}
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1584, line: 244, size: 192, elements: !1988)
!1988 = !{!1989, !2004, !2009}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1987, file: !1584, line: 245, baseType: !1990, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1605, line: 49, baseType: !1991)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1605, line: 37, size: 64, elements: !1992)
!1992 = !{!1993, !1999}
!1993 = !DIDerivedType(tag: DW_TAG_member, scope: !1991, file: !1605, line: 38, baseType: !1994, size: 32)
!1994 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1991, file: !1605, line: 38, size: 32, elements: !1995)
!1995 = !{!1996, !1998}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1994, file: !1605, line: 39, baseType: !1997, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1994, file: !1605, line: 40, baseType: !1997, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, scope: !1991, file: !1605, line: 42, baseType: !2000, size: 32, offset: 32)
!2000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1991, file: !1605, line: 42, size: 32, elements: !2001)
!2001 = !{!2002, !2003}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2000, file: !1605, line: 43, baseType: !1997, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2000, file: !1605, line: 44, baseType: !1997, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1987, file: !1584, line: 246, baseType: !2005, size: 32, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1584, line: 242, baseType: !2006)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{null, !1986}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1987, file: !1584, line: 249, baseType: !1343, size: 64, offset: 128)
!2010 = !{!1981, !2011, !2015, !2017}
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !1983, file: !2013, line: 19, type: !2014, isLocal: true, isDefinition: true)
!2013 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1451, line: 43, elements: !162)
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !1983, file: !2013, line: 25, type: !103, isLocal: true, isDefinition: true)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "timeout_list", scope: !1983, file: !2013, line: 17, type: !2019, isLocal: true, isDefinition: true)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1605, line: 48, baseType: !1991)
!2020 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2021, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2021 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2022 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2023, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2023 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2024 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2025, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2026, splitDebugInlining: false, nameTableKind: None)
!2025 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2026 = !{!102, !120, !681, !24, !2027, !22, !2032, !103, !149, !150}
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !2029)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !2030)
!2030 = !{!2031}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2029, file: !142, line: 58, baseType: !158, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !2034)
!2034 = !{!2035, !2038, !2039, !2040, !2041, !2042, !2043}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2033, file: !142, line: 69, baseType: !2036, size: 64)
!2036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2037, size: 64, elements: !1182)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !142, line: 61, baseType: !137)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2033, file: !142, line: 70, baseType: !2037, size: 32, offset: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2033, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2033, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2033, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2033, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2033, file: !142, line: 77, baseType: !2044, offset: 224)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2045, elements: !2048)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !2046)
!2046 = !{!2047}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !142, line: 65, baseType: !2037, size: 32)
!2048 = !{!2049}
!2049 = !DISubrange(count: 0)
!2050 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2051, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2052, retainedTypes: !2072, splitDebugInlining: false, nameTableKind: None)
!2051 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2052 = !{!2053, !2061}
!2053 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2054, line: 69, baseType: !32, size: 32, elements: !2055)
!2054 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2055 = !{!2056, !2057, !2058, !2059, !2060}
!2056 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2057 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2058 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2059 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2060 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2061 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2054, line: 56, baseType: !32, size: 32, elements: !2062)
!2062 = !{!2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071}
!2063 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2064 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2065 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2066 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2067 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2068 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2069 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2070 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2071 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2072 = !{!103, !2053, !2061, !2073, !1643, !643, !2075, !2076, !466, !152, !626, !120, !102, !22, !32, !2078, !2079, !2080, !2081, !2082, !1344, !2083, !2074, !2084, !2085, !2086, !2087}
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2054, line: 31, baseType: !2074)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !1344)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !121, line: 329, baseType: !32)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2054, line: 32, baseType: !2077)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !164)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 32)
!2081 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !121, line: 145, baseType: !103)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 32)
!2088 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2089, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2089 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2090 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2091, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2092, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2091 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2092 = !{!2093, !30}
!2093 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2094, line: 27, baseType: !32, size: 32, elements: !2095)
!2094 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2095 = !{!2096, !2097, !2098, !2099, !2100}
!2096 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2097 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2098 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2099 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2100 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2102, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2103, retainedTypes: !2104, splitDebugInlining: false, nameTableKind: None)
!2102 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2103 = !{!1200, !2093, !30}
!2104 = !{!2105, !2106, !102, !103, !893, !137, !465, !2123}
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !455, line: 249, baseType: !1200)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1347, line: 426, baseType: !2108)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 411, size: 28704, elements: !2109)
!2109 = !{!2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2108, file: !1347, line: 413, baseType: !1359, size: 256)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2108, file: !1347, line: 414, baseType: !1361, size: 768, offset: 256)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2108, file: !1347, line: 415, baseType: !1359, size: 256, offset: 1024)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2108, file: !1347, line: 416, baseType: !1361, size: 768, offset: 1280)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2108, file: !1347, line: 417, baseType: !1359, size: 256, offset: 2048)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2108, file: !1347, line: 418, baseType: !1361, size: 768, offset: 2304)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2108, file: !1347, line: 419, baseType: !1359, size: 256, offset: 3072)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2108, file: !1347, line: 420, baseType: !1361, size: 768, offset: 3328)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2108, file: !1347, line: 421, baseType: !1359, size: 256, offset: 4096)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2108, file: !1347, line: 422, baseType: !1372, size: 1792, offset: 4352)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2108, file: !1347, line: 423, baseType: !1376, size: 1920, offset: 6144)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2108, file: !1347, line: 424, baseType: !1381, size: 20608, offset: 8064)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2108, file: !1347, line: 425, baseType: !459, size: 32, offset: 28672)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1347, line: 468, baseType: !2125)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 445, size: 1120, elements: !2126)
!2126 = !{!2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2125, file: !1347, line: 447, baseType: !532, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2125, file: !1347, line: 448, baseType: !459, size: 32, offset: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2125, file: !1347, line: 449, baseType: !459, size: 32, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2125, file: !1347, line: 450, baseType: !459, size: 32, offset: 96)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2125, file: !1347, line: 451, baseType: !459, size: 32, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2125, file: !1347, line: 452, baseType: !459, size: 32, offset: 160)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2125, file: !1347, line: 453, baseType: !1396, size: 96, offset: 192)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2125, file: !1347, line: 454, baseType: !459, size: 32, offset: 288)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2125, file: !1347, line: 455, baseType: !459, size: 32, offset: 320)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2125, file: !1347, line: 456, baseType: !459, size: 32, offset: 352)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2125, file: !1347, line: 457, baseType: !459, size: 32, offset: 384)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2125, file: !1347, line: 458, baseType: !459, size: 32, offset: 416)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2125, file: !1347, line: 459, baseType: !459, size: 32, offset: 448)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2125, file: !1347, line: 460, baseType: !459, size: 32, offset: 480)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2125, file: !1347, line: 461, baseType: !1407, size: 64, offset: 512)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2125, file: !1347, line: 462, baseType: !532, size: 32, offset: 576)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2125, file: !1347, line: 463, baseType: !532, size: 32, offset: 608)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2125, file: !1347, line: 464, baseType: !1411, size: 128, offset: 640)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2125, file: !1347, line: 465, baseType: !1415, size: 160, offset: 768)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2125, file: !1347, line: 466, baseType: !1419, size: 160, offset: 928)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2125, file: !1347, line: 467, baseType: !459, size: 32, offset: 1088)
!2148 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2149, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2149 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2150 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2151, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2152, splitDebugInlining: false, nameTableKind: None)
!2151 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2152 = !{!102, !103, !22, !2153}
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1347, line: 468, baseType: !2155)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 445, size: 1120, elements: !2156)
!2156 = !{!2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2155, file: !1347, line: 447, baseType: !532, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2155, file: !1347, line: 448, baseType: !459, size: 32, offset: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2155, file: !1347, line: 449, baseType: !459, size: 32, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2155, file: !1347, line: 450, baseType: !459, size: 32, offset: 96)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2155, file: !1347, line: 451, baseType: !459, size: 32, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2155, file: !1347, line: 452, baseType: !459, size: 32, offset: 160)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2155, file: !1347, line: 453, baseType: !1396, size: 96, offset: 192)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2155, file: !1347, line: 454, baseType: !459, size: 32, offset: 288)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2155, file: !1347, line: 455, baseType: !459, size: 32, offset: 320)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2155, file: !1347, line: 456, baseType: !459, size: 32, offset: 352)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2155, file: !1347, line: 457, baseType: !459, size: 32, offset: 384)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2155, file: !1347, line: 458, baseType: !459, size: 32, offset: 416)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2155, file: !1347, line: 459, baseType: !459, size: 32, offset: 448)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2155, file: !1347, line: 460, baseType: !459, size: 32, offset: 480)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2155, file: !1347, line: 461, baseType: !1407, size: 64, offset: 512)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2155, file: !1347, line: 462, baseType: !532, size: 32, offset: 576)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2155, file: !1347, line: 463, baseType: !532, size: 32, offset: 608)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2155, file: !1347, line: 464, baseType: !1411, size: 128, offset: 640)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2155, file: !1347, line: 465, baseType: !1415, size: 160, offset: 768)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2155, file: !1347, line: 466, baseType: !1419, size: 160, offset: 928)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2155, file: !1347, line: 467, baseType: !459, size: 32, offset: 1088)
!2178 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2179, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2180, splitDebugInlining: false, nameTableKind: None)
!2179 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2180 = !{!2181, !102, !103}
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1347, line: 468, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 445, size: 1120, elements: !2184)
!2184 = !{!2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2183, file: !1347, line: 447, baseType: !532, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2183, file: !1347, line: 448, baseType: !459, size: 32, offset: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2183, file: !1347, line: 449, baseType: !459, size: 32, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2183, file: !1347, line: 450, baseType: !459, size: 32, offset: 96)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2183, file: !1347, line: 451, baseType: !459, size: 32, offset: 128)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2183, file: !1347, line: 452, baseType: !459, size: 32, offset: 160)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2183, file: !1347, line: 453, baseType: !1396, size: 96, offset: 192)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2183, file: !1347, line: 454, baseType: !459, size: 32, offset: 288)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2183, file: !1347, line: 455, baseType: !459, size: 32, offset: 320)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2183, file: !1347, line: 456, baseType: !459, size: 32, offset: 352)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2183, file: !1347, line: 457, baseType: !459, size: 32, offset: 384)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2183, file: !1347, line: 458, baseType: !459, size: 32, offset: 416)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2183, file: !1347, line: 459, baseType: !459, size: 32, offset: 448)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2183, file: !1347, line: 460, baseType: !459, size: 32, offset: 480)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2183, file: !1347, line: 461, baseType: !1407, size: 64, offset: 512)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2183, file: !1347, line: 462, baseType: !532, size: 32, offset: 576)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2183, file: !1347, line: 463, baseType: !532, size: 32, offset: 608)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2183, file: !1347, line: 464, baseType: !1411, size: 128, offset: 640)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2183, file: !1347, line: 465, baseType: !1415, size: 160, offset: 768)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2183, file: !1347, line: 466, baseType: !1419, size: 160, offset: 928)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2183, file: !1347, line: 467, baseType: !459, size: 32, offset: 1088)
!2206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2207, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2208, splitDebugInlining: false, nameTableKind: None)
!2207 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2208 = !{!2209, !137, !102, !103}
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2211, line: 98, size: 256, elements: !2212)
!2211 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2212 = !{!2213, !2218, !2223, !2228, !2233, !2238, !2243, !2248}
!2213 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !2211, line: 99, baseType: !2214, size: 32)
!2214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !2211, line: 99, size: 32, elements: !2215)
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2214, file: !2211, line: 99, baseType: !137, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2214, file: !2211, line: 99, baseType: !137, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !2211, line: 100, baseType: !2219, size: 32, offset: 32)
!2219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !2211, line: 100, size: 32, elements: !2220)
!2220 = !{!2221, !2222}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2219, file: !2211, line: 100, baseType: !137, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2219, file: !2211, line: 100, baseType: !137, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !2211, line: 101, baseType: !2224, size: 32, offset: 64)
!2224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !2211, line: 101, size: 32, elements: !2225)
!2225 = !{!2226, !2227}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2224, file: !2211, line: 101, baseType: !137, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2224, file: !2211, line: 101, baseType: !137, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !2211, line: 102, baseType: !2229, size: 32, offset: 96)
!2229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !2211, line: 102, size: 32, elements: !2230)
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2229, file: !2211, line: 102, baseType: !137, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2229, file: !2211, line: 102, baseType: !137, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !2211, line: 103, baseType: !2234, size: 32, offset: 128)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !2211, line: 103, size: 32, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2234, file: !2211, line: 103, baseType: !137, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2234, file: !2211, line: 103, baseType: !137, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !2211, line: 104, baseType: !2239, size: 32, offset: 160)
!2239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !2211, line: 104, size: 32, elements: !2240)
!2240 = !{!2241, !2242}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2239, file: !2211, line: 104, baseType: !137, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2239, file: !2211, line: 104, baseType: !137, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !2211, line: 105, baseType: !2244, size: 32, offset: 192)
!2244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !2211, line: 105, size: 32, elements: !2245)
!2245 = !{!2246, !2247}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2244, file: !2211, line: 105, baseType: !137, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2244, file: !2211, line: 105, baseType: !137, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2210, file: !2211, line: 106, baseType: !137, size: 32, offset: 224)
!2249 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2250, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2092, retainedTypes: !2251, splitDebugInlining: false, nameTableKind: None)
!2250 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2251 = !{!2252, !102, !103, !2277, !150, !137}
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1347, line: 468, baseType: !2254)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 445, size: 1120, elements: !2255)
!2255 = !{!2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2254, file: !1347, line: 447, baseType: !532, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2254, file: !1347, line: 448, baseType: !459, size: 32, offset: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2254, file: !1347, line: 449, baseType: !459, size: 32, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2254, file: !1347, line: 450, baseType: !459, size: 32, offset: 96)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2254, file: !1347, line: 451, baseType: !459, size: 32, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2254, file: !1347, line: 452, baseType: !459, size: 32, offset: 160)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2254, file: !1347, line: 453, baseType: !1396, size: 96, offset: 192)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2254, file: !1347, line: 454, baseType: !459, size: 32, offset: 288)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2254, file: !1347, line: 455, baseType: !459, size: 32, offset: 320)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2254, file: !1347, line: 456, baseType: !459, size: 32, offset: 352)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2254, file: !1347, line: 457, baseType: !459, size: 32, offset: 384)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2254, file: !1347, line: 458, baseType: !459, size: 32, offset: 416)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2254, file: !1347, line: 459, baseType: !459, size: 32, offset: 448)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2254, file: !1347, line: 460, baseType: !459, size: 32, offset: 480)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2254, file: !1347, line: 461, baseType: !1407, size: 64, offset: 512)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2254, file: !1347, line: 462, baseType: !532, size: 32, offset: 576)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2254, file: !1347, line: 463, baseType: !532, size: 32, offset: 608)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2254, file: !1347, line: 464, baseType: !1411, size: 128, offset: 640)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2254, file: !1347, line: 465, baseType: !1415, size: 160, offset: 768)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2254, file: !1347, line: 466, baseType: !1419, size: 160, offset: 928)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2254, file: !1347, line: 467, baseType: !459, size: 32, offset: 1088)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2211, line: 141, baseType: !2279)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2211, line: 97, size: 256, elements: !2280)
!2280 = !{!2281}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2279, file: !2211, line: 107, baseType: !2282, size: 256)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2211, line: 98, size: 256, elements: !2283)
!2283 = !{!2284, !2289, !2294, !2299, !2304, !2309, !2314, !2319}
!2284 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !2211, line: 99, baseType: !2285, size: 32)
!2285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2282, file: !2211, line: 99, size: 32, elements: !2286)
!2286 = !{!2287, !2288}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2285, file: !2211, line: 99, baseType: !137, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2285, file: !2211, line: 99, baseType: !137, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !2211, line: 100, baseType: !2290, size: 32, offset: 32)
!2290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2282, file: !2211, line: 100, size: 32, elements: !2291)
!2291 = !{!2292, !2293}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2290, file: !2211, line: 100, baseType: !137, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2290, file: !2211, line: 100, baseType: !137, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !2211, line: 101, baseType: !2295, size: 32, offset: 64)
!2295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2282, file: !2211, line: 101, size: 32, elements: !2296)
!2296 = !{!2297, !2298}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2295, file: !2211, line: 101, baseType: !137, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2295, file: !2211, line: 101, baseType: !137, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !2211, line: 102, baseType: !2300, size: 32, offset: 96)
!2300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2282, file: !2211, line: 102, size: 32, elements: !2301)
!2301 = !{!2302, !2303}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2300, file: !2211, line: 102, baseType: !137, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2300, file: !2211, line: 102, baseType: !137, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !2211, line: 103, baseType: !2305, size: 32, offset: 128)
!2305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2282, file: !2211, line: 103, size: 32, elements: !2306)
!2306 = !{!2307, !2308}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2305, file: !2211, line: 103, baseType: !137, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2305, file: !2211, line: 103, baseType: !137, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !2211, line: 104, baseType: !2310, size: 32, offset: 160)
!2310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2282, file: !2211, line: 104, size: 32, elements: !2311)
!2311 = !{!2312, !2313}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2310, file: !2211, line: 104, baseType: !137, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2310, file: !2211, line: 104, baseType: !137, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !2211, line: 105, baseType: !2315, size: 32, offset: 192)
!2315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2282, file: !2211, line: 105, size: 32, elements: !2316)
!2316 = !{!2317, !2318}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2315, file: !2211, line: 105, baseType: !137, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2315, file: !2211, line: 105, baseType: !137, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2282, file: !2211, line: 106, baseType: !137, size: 32, offset: 224)
!2320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2321, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1199, retainedTypes: !2322, splitDebugInlining: false, nameTableKind: None)
!2321 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2322 = !{!2105, !893, !465, !137, !2323, !2340}
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1347, line: 426, baseType: !2325)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 411, size: 28704, elements: !2326)
!2326 = !{!2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2325, file: !1347, line: 413, baseType: !1359, size: 256)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2325, file: !1347, line: 414, baseType: !1361, size: 768, offset: 256)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2325, file: !1347, line: 415, baseType: !1359, size: 256, offset: 1024)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2325, file: !1347, line: 416, baseType: !1361, size: 768, offset: 1280)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2325, file: !1347, line: 417, baseType: !1359, size: 256, offset: 2048)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2325, file: !1347, line: 418, baseType: !1361, size: 768, offset: 2304)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2325, file: !1347, line: 419, baseType: !1359, size: 256, offset: 3072)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2325, file: !1347, line: 420, baseType: !1361, size: 768, offset: 3328)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2325, file: !1347, line: 421, baseType: !1359, size: 256, offset: 4096)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2325, file: !1347, line: 422, baseType: !1372, size: 1792, offset: 4352)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2325, file: !1347, line: 423, baseType: !1376, size: 1920, offset: 6144)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2325, file: !1347, line: 424, baseType: !1381, size: 20608, offset: 8064)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2325, file: !1347, line: 425, baseType: !459, size: 32, offset: 28672)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1347, line: 468, baseType: !2342)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 445, size: 1120, elements: !2343)
!2343 = !{!2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2342, file: !1347, line: 447, baseType: !532, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2342, file: !1347, line: 448, baseType: !459, size: 32, offset: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2342, file: !1347, line: 449, baseType: !459, size: 32, offset: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2342, file: !1347, line: 450, baseType: !459, size: 32, offset: 96)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2342, file: !1347, line: 451, baseType: !459, size: 32, offset: 128)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2342, file: !1347, line: 452, baseType: !459, size: 32, offset: 160)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2342, file: !1347, line: 453, baseType: !1396, size: 96, offset: 192)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2342, file: !1347, line: 454, baseType: !459, size: 32, offset: 288)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2342, file: !1347, line: 455, baseType: !459, size: 32, offset: 320)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2342, file: !1347, line: 456, baseType: !459, size: 32, offset: 352)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2342, file: !1347, line: 457, baseType: !459, size: 32, offset: 384)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2342, file: !1347, line: 458, baseType: !459, size: 32, offset: 416)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2342, file: !1347, line: 459, baseType: !459, size: 32, offset: 448)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2342, file: !1347, line: 460, baseType: !459, size: 32, offset: 480)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2342, file: !1347, line: 461, baseType: !1407, size: 64, offset: 512)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2342, file: !1347, line: 462, baseType: !532, size: 32, offset: 576)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2342, file: !1347, line: 463, baseType: !532, size: 32, offset: 608)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2342, file: !1347, line: 464, baseType: !1411, size: 128, offset: 640)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2342, file: !1347, line: 465, baseType: !1415, size: 160, offset: 768)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2342, file: !1347, line: 466, baseType: !1419, size: 160, offset: 928)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2342, file: !1347, line: 467, baseType: !459, size: 32, offset: 1088)
!2365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2366, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2367, splitDebugInlining: false, nameTableKind: None)
!2366 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2367 = !{!2368, !102, !103}
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1347, line: 468, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1347, line: 445, size: 1120, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2370, file: !1347, line: 447, baseType: !532, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2370, file: !1347, line: 448, baseType: !459, size: 32, offset: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2370, file: !1347, line: 449, baseType: !459, size: 32, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2370, file: !1347, line: 450, baseType: !459, size: 32, offset: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2370, file: !1347, line: 451, baseType: !459, size: 32, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2370, file: !1347, line: 452, baseType: !459, size: 32, offset: 160)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2370, file: !1347, line: 453, baseType: !1396, size: 96, offset: 192)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2370, file: !1347, line: 454, baseType: !459, size: 32, offset: 288)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2370, file: !1347, line: 455, baseType: !459, size: 32, offset: 320)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2370, file: !1347, line: 456, baseType: !459, size: 32, offset: 352)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2370, file: !1347, line: 457, baseType: !459, size: 32, offset: 384)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2370, file: !1347, line: 458, baseType: !459, size: 32, offset: 416)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2370, file: !1347, line: 459, baseType: !459, size: 32, offset: 448)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2370, file: !1347, line: 460, baseType: !459, size: 32, offset: 480)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2370, file: !1347, line: 461, baseType: !1407, size: 64, offset: 512)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2370, file: !1347, line: 462, baseType: !532, size: 32, offset: 576)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2370, file: !1347, line: 463, baseType: !532, size: 32, offset: 608)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2370, file: !1347, line: 464, baseType: !1411, size: 128, offset: 640)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2370, file: !1347, line: 465, baseType: !1415, size: 160, offset: 768)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2370, file: !1347, line: 466, baseType: !1419, size: 160, offset: 928)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2370, file: !1347, line: 467, baseType: !459, size: 32, offset: 1088)
!2393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2394, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2395, splitDebugInlining: false, nameTableKind: None)
!2394 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2395 = !{!109, !818, !120, !644, !2396, !466, !102}
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!2398 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2399, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2399 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2402, splitDebugInlining: false, nameTableKind: None)
!2401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2402 = !{!581, !137}
!2403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2405, retainedTypes: !2415, splitDebugInlining: false, nameTableKind: None)
!2404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2405 = !{!2406}
!2406 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2407, line: 62, baseType: !32, size: 32, elements: !2408)
!2407 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2408 = !{!2409, !2410, !2411, !2412, !2413, !2414}
!2409 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2410 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2411 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2412 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2413 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2414 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2415 = !{!2416, !2479, !137, !636, !581}
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !455, line: 8619, baseType: !2418)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 8563, size: 3072, elements: !2419)
!2419 = !{!2420, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2418, file: !455, line: 8564, baseType: !2421, size: 768)
!2421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 768, elements: !2422)
!2422 = !{!2423}
!2423 = !DISubrange(count: 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2418, file: !455, line: 8565, baseType: !459, size: 32, offset: 768)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2418, file: !455, line: 8566, baseType: !459, size: 32, offset: 800)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2418, file: !455, line: 8567, baseType: !459, size: 32, offset: 832)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2418, file: !455, line: 8568, baseType: !459, size: 32, offset: 864)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2418, file: !455, line: 8569, baseType: !459, size: 32, offset: 896)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2418, file: !455, line: 8570, baseType: !459, size: 32, offset: 928)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2418, file: !455, line: 8571, baseType: !459, size: 32, offset: 960)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2418, file: !455, line: 8572, baseType: !459, size: 32, offset: 992)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2418, file: !455, line: 8573, baseType: !459, size: 32, offset: 1024)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2418, file: !455, line: 8574, baseType: !2434, size: 96, offset: 1056)
!2434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 96, elements: !1397)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2418, file: !455, line: 8575, baseType: !459, size: 32, offset: 1152)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2418, file: !455, line: 8576, baseType: !2434, size: 96, offset: 1184)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2418, file: !455, line: 8577, baseType: !459, size: 32, offset: 1280)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2418, file: !455, line: 8578, baseType: !2434, size: 96, offset: 1312)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2418, file: !455, line: 8579, baseType: !459, size: 32, offset: 1408)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2418, file: !455, line: 8580, baseType: !459, size: 32, offset: 1440)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2418, file: !455, line: 8581, baseType: !459, size: 32, offset: 1472)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2418, file: !455, line: 8582, baseType: !459, size: 32, offset: 1504)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2418, file: !455, line: 8583, baseType: !459, size: 32, offset: 1536)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2418, file: !455, line: 8584, baseType: !459, size: 32, offset: 1568)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2418, file: !455, line: 8585, baseType: !459, size: 32, offset: 1600)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2418, file: !455, line: 8586, baseType: !459, size: 32, offset: 1632)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2418, file: !455, line: 8587, baseType: !459, size: 32, offset: 1664)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2418, file: !455, line: 8588, baseType: !459, size: 32, offset: 1696)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2418, file: !455, line: 8589, baseType: !459, size: 32, offset: 1728)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2418, file: !455, line: 8590, baseType: !459, size: 32, offset: 1760)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2418, file: !455, line: 8591, baseType: !459, size: 32, offset: 1792)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2418, file: !455, line: 8592, baseType: !459, size: 32, offset: 1824)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2418, file: !455, line: 8593, baseType: !459, size: 32, offset: 1856)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2418, file: !455, line: 8594, baseType: !459, size: 32, offset: 1888)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2418, file: !455, line: 8595, baseType: !459, size: 32, offset: 1920)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2418, file: !455, line: 8596, baseType: !459, size: 32, offset: 1952)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2418, file: !455, line: 8597, baseType: !459, size: 32, offset: 1984)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2418, file: !455, line: 8598, baseType: !459, size: 32, offset: 2016)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2418, file: !455, line: 8599, baseType: !459, size: 32, offset: 2048)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2418, file: !455, line: 8600, baseType: !2434, size: 96, offset: 2080)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2418, file: !455, line: 8601, baseType: !459, size: 32, offset: 2176)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2418, file: !455, line: 8602, baseType: !2434, size: 96, offset: 2208)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2418, file: !455, line: 8603, baseType: !459, size: 32, offset: 2304)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2418, file: !455, line: 8604, baseType: !2434, size: 96, offset: 2336)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2418, file: !455, line: 8605, baseType: !459, size: 32, offset: 2432)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2418, file: !455, line: 8606, baseType: !459, size: 32, offset: 2464)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2418, file: !455, line: 8607, baseType: !459, size: 32, offset: 2496)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2418, file: !455, line: 8608, baseType: !459, size: 32, offset: 2528)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2418, file: !455, line: 8609, baseType: !459, size: 32, offset: 2560)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2418, file: !455, line: 8610, baseType: !2434, size: 96, offset: 2592)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2418, file: !455, line: 8611, baseType: !459, size: 32, offset: 2688)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2418, file: !455, line: 8612, baseType: !2434, size: 96, offset: 2720)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2418, file: !455, line: 8613, baseType: !459, size: 32, offset: 2816)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2418, file: !455, line: 8614, baseType: !2434, size: 96, offset: 2848)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2418, file: !455, line: 8615, baseType: !459, size: 32, offset: 2944)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2418, file: !455, line: 8616, baseType: !459, size: 32, offset: 2976)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2418, file: !455, line: 8617, baseType: !459, size: 32, offset: 3008)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2418, file: !455, line: 8618, baseType: !459, size: 32, offset: 3040)
!2479 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2482, splitDebugInlining: false, nameTableKind: None)
!2481 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2482 = !{!2483, !2487, !731}
!2483 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !732, line: 49, baseType: !32, size: 32, elements: !2484)
!2484 = !{!2485, !2486}
!2485 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2486 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2487 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !732, line: 56, baseType: !32, size: 32, elements: !2488)
!2488 = !{!2489, !2490, !2491, !2492, !2493}
!2489 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2490 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2491 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2492 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2493 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2496, retainedTypes: !2505, splitDebugInlining: false, nameTableKind: None)
!2495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2496 = !{!2497, !2501}
!2497 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !919, line: 179, baseType: !32, size: 32, elements: !2498)
!2498 = !{!2499, !2500}
!2499 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2500 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2501 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !919, line: 194, baseType: !32, size: 32, elements: !2502)
!2502 = !{!2503, !2504}
!2503 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2504 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2505 = !{!137, !149}
!2506 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2507, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2508, retainedTypes: !2519, splitDebugInlining: false, nameTableKind: None)
!2507 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2508 = !{!170, !2509}
!2509 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2407, line: 128, baseType: !32, size: 32, elements: !2510)
!2510 = !{!2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518}
!2511 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2512 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2513 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2514 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2515 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2516 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2517 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2518 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2519 = !{!137, !2520, !2572, !581}
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !455, line: 4575, baseType: !2522)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 4532, size: 390144, elements: !2523)
!2523 = !{!2524, !2525, !2526, !2527, !2528, !2529, !2537, !2538, !2546, !2547}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2522, file: !455, line: 4533, baseType: !459, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2522, file: !455, line: 4534, baseType: !459, size: 32, offset: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2522, file: !455, line: 4535, baseType: !459, size: 32, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2522, file: !455, line: 4536, baseType: !459, size: 32, offset: 96)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2522, file: !455, line: 4537, baseType: !464, size: 16256, offset: 128)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2522, file: !455, line: 4543, baseType: !2530, size: 4224, offset: 16384)
!2530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2531, size: 4224, elements: !477)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2522, file: !455, line: 4538, size: 128, elements: !2532)
!2532 = !{!2533, !2534, !2535, !2536}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2531, file: !455, line: 4539, baseType: !459, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2531, file: !455, line: 4540, baseType: !459, size: 32, offset: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2531, file: !455, line: 4541, baseType: !459, size: 32, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2531, file: !455, line: 4542, baseType: !459, size: 32, offset: 96)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2522, file: !455, line: 4544, baseType: !480, size: 110464, offset: 20608)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2522, file: !455, line: 4550, baseType: !2539, size: 24448, offset: 131072)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2540, size: 24448, elements: !491)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2522, file: !455, line: 4545, size: 128, elements: !2541)
!2541 = !{!2542, !2543, !2544, !2545}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2540, file: !455, line: 4546, baseType: !459, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !2540, file: !455, line: 4547, baseType: !459, size: 32, offset: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !2540, file: !455, line: 4548, baseType: !459, size: 32, offset: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !2540, file: !455, line: 4549, baseType: !459, size: 32, offset: 96)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2522, file: !455, line: 4551, baseType: !494, size: 106624, offset: 155520)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2522, file: !455, line: 4574, baseType: !2548, size: 128000, offset: 262144)
!2548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2549, size: 128000, elements: !525)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2522, file: !455, line: 4552, size: 1024, elements: !2550)
!2550 = !{!2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !2549, file: !455, line: 4553, baseType: !459, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !2549, file: !455, line: 4554, baseType: !459, size: 32, offset: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !2549, file: !455, line: 4555, baseType: !459, size: 32, offset: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !2549, file: !455, line: 4556, baseType: !459, size: 32, offset: 96)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !2549, file: !455, line: 4557, baseType: !459, size: 32, offset: 128)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !2549, file: !455, line: 4558, baseType: !459, size: 32, offset: 160)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !2549, file: !455, line: 4559, baseType: !459, size: 32, offset: 192)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !2549, file: !455, line: 4560, baseType: !459, size: 32, offset: 224)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !2549, file: !455, line: 4561, baseType: !459, size: 32, offset: 256)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !2549, file: !455, line: 4562, baseType: !459, size: 32, offset: 288)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !2549, file: !455, line: 4563, baseType: !459, size: 32, offset: 320)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !2549, file: !455, line: 4564, baseType: !459, size: 32, offset: 352)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !2549, file: !455, line: 4565, baseType: !459, size: 32, offset: 384)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !2549, file: !455, line: 4566, baseType: !459, size: 32, offset: 416)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !2549, file: !455, line: 4567, baseType: !459, size: 32, offset: 448)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !2549, file: !455, line: 4568, baseType: !459, size: 32, offset: 480)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2549, file: !455, line: 4569, baseType: !518, size: 384, offset: 512)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !2549, file: !455, line: 4570, baseType: !459, size: 32, offset: 896)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !2549, file: !455, line: 4571, baseType: !459, size: 32, offset: 928)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !2549, file: !455, line: 4572, baseType: !459, size: 32, offset: 960)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2549, file: !455, line: 4573, baseType: !459, size: 32, offset: 992)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !455, line: 8619, baseType: !2574)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 8563, size: 3072, elements: !2575)
!2575 = !{!2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2574, file: !455, line: 8564, baseType: !2421, size: 768)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2574, file: !455, line: 8565, baseType: !459, size: 32, offset: 768)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2574, file: !455, line: 8566, baseType: !459, size: 32, offset: 800)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2574, file: !455, line: 8567, baseType: !459, size: 32, offset: 832)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2574, file: !455, line: 8568, baseType: !459, size: 32, offset: 864)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2574, file: !455, line: 8569, baseType: !459, size: 32, offset: 896)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2574, file: !455, line: 8570, baseType: !459, size: 32, offset: 928)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2574, file: !455, line: 8571, baseType: !459, size: 32, offset: 960)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2574, file: !455, line: 8572, baseType: !459, size: 32, offset: 992)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2574, file: !455, line: 8573, baseType: !459, size: 32, offset: 1024)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2574, file: !455, line: 8574, baseType: !2434, size: 96, offset: 1056)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2574, file: !455, line: 8575, baseType: !459, size: 32, offset: 1152)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2574, file: !455, line: 8576, baseType: !2434, size: 96, offset: 1184)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2574, file: !455, line: 8577, baseType: !459, size: 32, offset: 1280)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2574, file: !455, line: 8578, baseType: !2434, size: 96, offset: 1312)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2574, file: !455, line: 8579, baseType: !459, size: 32, offset: 1408)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2574, file: !455, line: 8580, baseType: !459, size: 32, offset: 1440)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2574, file: !455, line: 8581, baseType: !459, size: 32, offset: 1472)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2574, file: !455, line: 8582, baseType: !459, size: 32, offset: 1504)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2574, file: !455, line: 8583, baseType: !459, size: 32, offset: 1536)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2574, file: !455, line: 8584, baseType: !459, size: 32, offset: 1568)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2574, file: !455, line: 8585, baseType: !459, size: 32, offset: 1600)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2574, file: !455, line: 8586, baseType: !459, size: 32, offset: 1632)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2574, file: !455, line: 8587, baseType: !459, size: 32, offset: 1664)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2574, file: !455, line: 8588, baseType: !459, size: 32, offset: 1696)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2574, file: !455, line: 8589, baseType: !459, size: 32, offset: 1728)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2574, file: !455, line: 8590, baseType: !459, size: 32, offset: 1760)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2574, file: !455, line: 8591, baseType: !459, size: 32, offset: 1792)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2574, file: !455, line: 8592, baseType: !459, size: 32, offset: 1824)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2574, file: !455, line: 8593, baseType: !459, size: 32, offset: 1856)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2574, file: !455, line: 8594, baseType: !459, size: 32, offset: 1888)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2574, file: !455, line: 8595, baseType: !459, size: 32, offset: 1920)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2574, file: !455, line: 8596, baseType: !459, size: 32, offset: 1952)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2574, file: !455, line: 8597, baseType: !459, size: 32, offset: 1984)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2574, file: !455, line: 8598, baseType: !459, size: 32, offset: 2016)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2574, file: !455, line: 8599, baseType: !459, size: 32, offset: 2048)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2574, file: !455, line: 8600, baseType: !2434, size: 96, offset: 2080)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2574, file: !455, line: 8601, baseType: !459, size: 32, offset: 2176)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2574, file: !455, line: 8602, baseType: !2434, size: 96, offset: 2208)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2574, file: !455, line: 8603, baseType: !459, size: 32, offset: 2304)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2574, file: !455, line: 8604, baseType: !2434, size: 96, offset: 2336)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2574, file: !455, line: 8605, baseType: !459, size: 32, offset: 2432)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2574, file: !455, line: 8606, baseType: !459, size: 32, offset: 2464)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2574, file: !455, line: 8607, baseType: !459, size: 32, offset: 2496)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2574, file: !455, line: 8608, baseType: !459, size: 32, offset: 2528)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2574, file: !455, line: 8609, baseType: !459, size: 32, offset: 2560)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2574, file: !455, line: 8610, baseType: !2434, size: 96, offset: 2592)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2574, file: !455, line: 8611, baseType: !459, size: 32, offset: 2688)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2574, file: !455, line: 8612, baseType: !2434, size: 96, offset: 2720)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2574, file: !455, line: 8613, baseType: !459, size: 32, offset: 2816)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2574, file: !455, line: 8614, baseType: !2434, size: 96, offset: 2848)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2574, file: !455, line: 8615, baseType: !459, size: 32, offset: 2944)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2574, file: !455, line: 8616, baseType: !459, size: 32, offset: 2976)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2574, file: !455, line: 8617, baseType: !459, size: 32, offset: 3008)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2574, file: !455, line: 8618, baseType: !459, size: 32, offset: 3040)
!2631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2632, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2633, splitDebugInlining: false, nameTableKind: None)
!2632 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2633 = !{!102, !120}
!2634 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2635, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2636, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2635 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2636 = !{!2637, !2644, !30}
!2637 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2638, line: 14, baseType: !32, size: 32, elements: !2639)
!2638 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2639 = !{!2640, !2641, !2642, !2643}
!2640 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2641 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2642 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2643 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2644 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2638, line: 42, baseType: !32, size: 32, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2650, !2651}
!2646 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2647 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2648 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2649 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2650 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2651 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2653, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2653 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2654 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2655, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2656, splitDebugInlining: false, nameTableKind: None)
!2655 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2656 = !{!22, !102, !103}
!2657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!2659 = !{!"Ubuntu clang version 14.0.6"}
!2660 = !{i32 7, !"Dwarf Version", i32 4}
!2661 = !{i32 2, !"Debug Info Version", i32 3}
!2662 = !{i32 1, !"wchar_size", i32 4}
!2663 = !{i32 1, !"min_enum_size", i32 4}
!2664 = !{i32 1, !"branch-target-enforcement", i32 0}
!2665 = !{i32 1, !"sign-return-address", i32 0}
!2666 = !{i32 1, !"sign-return-address-all", i32 0}
!2667 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2668 = !{i32 7, !"frame-pointer", i32 2}
!2669 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2670, file: !2670, line: 26, type: !2671, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !162)
!2670 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2671 = !DISubroutineType(types: !2672)
!2672 = !{null}
!2673 = !DILocation(line: 28, column: 1, scope: !2669)
!2674 = !{i64 2155071371, i64 2155071391, i64 2155071454}
!2675 = !DILocation(line: 29, column: 1, scope: !2669)
!2676 = !{i64 2155071786, i64 2155071806, i64 2155071869}
!2677 = !DILocation(line: 30, column: 1, scope: !2669)
!2678 = !{i64 2155072205, i64 2155072225, i64 2155072288}
!2679 = !DILocation(line: 31, column: 1, scope: !2669)
!2680 = !{i64 2155072624, i64 2155072644, i64 2155072707}
!2681 = !DILocation(line: 33, column: 1, scope: !2669)
!2682 = !{i64 2155072916, i64 2155072936, i64 2155072999}
!2683 = !DILocation(line: 35, column: 1, scope: !2669)
!2684 = !{i64 2155073241, i64 2155073261, i64 2155073324}
!2685 = !DILocation(line: 50, column: 1, scope: !2669)
!2686 = !{i64 2155073668, i64 2155073688, i64 2155073751}
!2687 = !DILocation(line: 54, column: 1, scope: !2669)
!2688 = !{i64 2155074107, i64 2155074127, i64 2155074190}
!2689 = !DILocation(line: 61, column: 1, scope: !2669)
!2690 = !{i64 2155074424, i64 2155074444, i64 2155074507}
!2691 = !DILocation(line: 63, column: 1, scope: !2669)
!2692 = !{i64 2155074804, i64 2155074824, i64 2155074887}
!2693 = !DILocation(line: 64, column: 1, scope: !2669)
!2694 = !{i64 2155079387, i64 2155079407, i64 2155079470}
!2695 = !DILocation(line: 65, column: 1, scope: !2669)
!2696 = !{i64 2155079885, i64 2155079905, i64 2155079968}
!2697 = !DILocation(line: 66, column: 1, scope: !2669)
!2698 = !{i64 2155080367, i64 2155080387, i64 2155080450}
!2699 = !DILocation(line: 67, column: 1, scope: !2669)
!2700 = !{i64 2155080874, i64 2155080894, i64 2155080957}
!2701 = !DILocation(line: 68, column: 1, scope: !2669)
!2702 = !{i64 2155081362, i64 2155081382, i64 2155081445}
!2703 = !DILocation(line: 70, column: 1, scope: !2669)
!2704 = !{i64 2155081830, i64 2155081850, i64 2155081913}
!2705 = !DILocation(line: 71, column: 1, scope: !2669)
!2706 = !{i64 2155082272, i64 2155082292, i64 2155082355}
!2707 = !DILocation(line: 72, column: 1, scope: !2669)
!2708 = !{i64 2155082730, i64 2155082750, i64 2155082813}
!2709 = !DILocation(line: 97, column: 1, scope: !2669)
!2710 = !{i64 2155083037, i64 2155083057, i64 2155083120}
!2711 = !DILocation(line: 99, column: 1, scope: !2669)
!2712 = !{i64 2155083255, i64 2155083275, i64 2155083338}
!2713 = !DILocation(line: 102, column: 1, scope: !2669)
!2714 = !{i64 2155083512, i64 2155083532, i64 2155083595}
!2715 = !DILocation(line: 105, column: 1, scope: !2669)
!2716 = !{i64 2155083752, i64 2155083772, i64 2155083835}
!2717 = !DILocation(line: 115, column: 1, scope: !2669)
!2718 = !{i64 2155084091, i64 2155084111, i64 2155084174}
!2719 = !DILocation(line: 118, column: 1, scope: !2669)
!2720 = !{i64 2155084435, i64 2155084455, i64 2155084518}
!2721 = !DILocation(line: 32, column: 1, scope: !2722)
!2722 = !DILexicalBlockFile(scope: !2669, file: !2723, discriminator: 0)
!2723 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2724 = !{i64 2155084791, i64 2155084811, i64 2155084874}
!2725 = !DILocation(line: 33, column: 1, scope: !2722)
!2726 = !{i64 2155085303, i64 2155085323, i64 2155085386}
!2727 = !DILocation(line: 53, column: 1, scope: !2722)
!2728 = !{i64 2155085811, i64 2155085831, i64 2155085894}
!2729 = !DILocation(line: 54, column: 1, scope: !2722)
!2730 = !{i64 2155086229, i64 2155086249, i64 2155086312}
!2731 = !DILocation(line: 55, column: 1, scope: !2722)
!2732 = !{i64 2155086647, i64 2155086667, i64 2155086730}
!2733 = !DILocation(line: 56, column: 1, scope: !2722)
!2734 = !{i64 2155087065, i64 2155087085, i64 2155087148}
!2735 = !DILocation(line: 57, column: 1, scope: !2722)
!2736 = !{i64 2155087483, i64 2155087503, i64 2155087566}
!2737 = !DILocation(line: 58, column: 1, scope: !2722)
!2738 = !{i64 2155087901, i64 2155087921, i64 2155087984}
!2739 = !DILocation(line: 59, column: 1, scope: !2722)
!2740 = !{i64 2155088319, i64 2155088339, i64 2155088402}
!2741 = !DILocation(line: 60, column: 1, scope: !2722)
!2742 = !{i64 2155088743, i64 2155088763, i64 2155088826}
!2743 = !DILocation(line: 61, column: 1, scope: !2722)
!2744 = !{i64 2155093121, i64 2155093141, i64 2155093204}
!2745 = !DILocation(line: 70, column: 1, scope: !2722)
!2746 = !{i64 2155093350, i64 2155093370, i64 2155093433}
!2747 = !DILocation(line: 72, column: 1, scope: !2722)
!2748 = !{i64 2155093682, i64 2155093702, i64 2155093765}
!2749 = !DILocation(line: 73, column: 1, scope: !2722)
!2750 = !{i64 2155094132, i64 2155094152, i64 2155094215}
!2751 = !DILocation(line: 74, column: 1, scope: !2722)
!2752 = !{i64 2155094582, i64 2155094602, i64 2155094665}
!2753 = !DILocation(line: 75, column: 1, scope: !2722)
!2754 = !{i64 2155095032, i64 2155095052, i64 2155095115}
!2755 = !DILocation(line: 76, column: 1, scope: !2722)
!2756 = !{i64 2155095482, i64 2155095502, i64 2155095565}
!2757 = !DILocation(line: 77, column: 1, scope: !2722)
!2758 = !{i64 2155095932, i64 2155095952, i64 2155096015}
!2759 = !DILocation(line: 78, column: 1, scope: !2722)
!2760 = !{i64 2155096382, i64 2155096402, i64 2155096465}
!2761 = !DILocation(line: 79, column: 1, scope: !2722)
!2762 = !{i64 2155096832, i64 2155096852, i64 2155096915}
!2763 = !DILocation(line: 80, column: 1, scope: !2722)
!2764 = !{i64 2155097285, i64 2155097305, i64 2155097368}
!2765 = !DILocation(line: 84, column: 1, scope: !2722)
!2766 = !{i64 2155097617, i64 2155097637, i64 2155097700}
!2767 = !DILocation(line: 106, column: 1, scope: !2722)
!2768 = !{i64 2155097867, i64 2155097887, i64 2155097950}
!2769 = !DILocation(line: 11, column: 1, scope: !2770)
!2770 = !DILexicalBlockFile(scope: !2669, file: !2771, discriminator: 0)
!2771 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2772 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 17, type: !2671, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2773)
!2773 = !{!2774}
!2774 = !DILocalVariable(name: "p", scope: !2772, file: !107, line: 19, type: !102)
!2775 = !DILocation(line: 21, column: 2, scope: !2772)
!2776 = !DILocation(line: 23, column: 2, scope: !2772)
!2777 = !DILocation(line: 24, column: 2, scope: !2772)
!2778 = !DILocation(line: 26, column: 6, scope: !2772)
!2779 = !DILocation(line: 0, scope: !2772)
!2780 = !DILocation(line: 27, column: 2, scope: !2772)
!2781 = !DILocation(line: 29, column: 6, scope: !2772)
!2782 = !DILocation(line: 30, column: 2, scope: !2772)
!2783 = !DILocation(line: 32, column: 2, scope: !2772)
!2784 = !DILocation(line: 33, column: 2, scope: !2772)
!2785 = !DILocation(line: 34, column: 1, scope: !2772)
!2786 = distinct !DISubprogram(name: "print_sys_memory_stats", scope: !107, file: !107, line: 36, type: !2671, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2787)
!2787 = !{!2788}
!2788 = !DILocalVariable(name: "stats", scope: !2786, file: !107, line: 38, type: !2789)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2790, line: 24, size: 96, elements: !2791)
!2790 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2791 = !{!2792, !2793, !2794}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2789, file: !2790, line: 25, baseType: !120, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2789, file: !2790, line: 26, baseType: !120, size: 32, offset: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2789, file: !2790, line: 27, baseType: !120, size: 32, offset: 64)
!2795 = !DILocation(line: 38, column: 2, scope: !2786)
!2796 = !DILocation(line: 38, column: 26, scope: !2786)
!2797 = !DILocation(line: 40, column: 2, scope: !2786)
!2798 = !DILocation(line: 43, column: 9, scope: !2786)
!2799 = !DILocation(line: 43, column: 32, scope: !2786)
!2800 = !DILocation(line: 44, column: 9, scope: !2786)
!2801 = !DILocation(line: 42, column: 2, scope: !2786)
!2802 = !DILocation(line: 45, column: 1, scope: !2786)
!2803 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !127, file: !127, line: 45, type: !129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2804)
!2804 = !{!2805}
!2805 = !DILocalVariable(name: "c", arg: 1, scope: !2803, file: !127, line: 45, type: !103)
!2806 = !DILocation(line: 0, scope: !2803)
!2807 = !DILocation(line: 50, column: 2, scope: !2803)
!2808 = distinct !DISubprogram(name: "__printk_hook_install", scope: !127, file: !127, line: 63, type: !2809, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2811)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{null, !128}
!2811 = !{!2812}
!2812 = !DILocalVariable(name: "fn", arg: 1, scope: !2808, file: !127, line: 63, type: !128)
!2813 = !DILocation(line: 0, scope: !2808)
!2814 = !DILocation(line: 65, column: 12, scope: !2808)
!2815 = !DILocation(line: 66, column: 1, scope: !2808)
!2816 = distinct !DISubprogram(name: "__printk_get_hook", scope: !127, file: !127, line: 76, type: !2817, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !162)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!102}
!2819 = !DILocation(line: 78, column: 9, scope: !2816)
!2820 = !DILocation(line: 78, column: 2, scope: !2816)
!2821 = distinct !DISubprogram(name: "vprintk", scope: !127, file: !127, line: 113, type: !2822, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2831)
!2822 = !DISubroutineType(types: !2823)
!2823 = !{null, !626, !2824}
!2824 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2825, line: 99, baseType: !2826)
!2825 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2825, line: 40, baseType: !2827)
!2827 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !127, baseType: !2828)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2829)
!2829 = !{!2830}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2828, file: !127, line: 79, baseType: !102, size: 32)
!2831 = !{!2832, !2833, !2834}
!2832 = !DILocalVariable(name: "fmt", arg: 1, scope: !2821, file: !127, line: 113, type: !626)
!2833 = !DILocalVariable(name: "ap", arg: 2, scope: !2821, file: !127, line: 113, type: !2824)
!2834 = !DILocalVariable(name: "ctx", scope: !2835, file: !127, line: 121, type: !2837)
!2835 = distinct !DILexicalBlock(scope: !2836, file: !127, line: 120, column: 27)
!2836 = distinct !DILexicalBlock(scope: !2821, file: !127, line: 120, column: 6)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !127, line: 81, size: 32, elements: !2838)
!2838 = !{!2839, !2840}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2837, file: !127, line: 85, baseType: !32, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2837, file: !127, line: 86, baseType: !2841, offset: 32)
!2841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, elements: !2048)
!2842 = !DILocation(line: 0, scope: !2821)
!2843 = !DILocation(line: 148, column: 3, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2836, file: !127, line: 138, column: 9)
!2845 = !DILocation(line: 155, column: 1, scope: !2821)
!2846 = distinct !DISubprogram(name: "char_out", scope: !127, file: !127, line: 107, type: !2847, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2849)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{!103, !103, !102}
!2849 = !{!2850, !2851}
!2850 = !DILocalVariable(name: "c", arg: 1, scope: !2846, file: !127, line: 107, type: !103)
!2851 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2846, file: !127, line: 107, type: !102)
!2852 = !DILocation(line: 0, scope: !2846)
!2853 = !DILocation(line: 110, column: 9, scope: !2846)
!2854 = !DILocation(line: 110, column: 2, scope: !2846)
!2855 = distinct !DISubprogram(name: "cbvprintf", scope: !2856, file: !2856, line: 739, type: !2857, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2863)
!2856 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2857 = !DISubroutineType(types: !2858)
!2858 = !{!103, !2859, !102, !626, !2824}
!2859 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !2856, line: 297, baseType: !2860)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 32)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!103, null}
!2863 = !{!2864, !2865, !2866, !2867}
!2864 = !DILocalVariable(name: "out", arg: 1, scope: !2855, file: !2856, line: 739, type: !2859)
!2865 = !DILocalVariable(name: "ctx", arg: 2, scope: !2855, file: !2856, line: 739, type: !102)
!2866 = !DILocalVariable(name: "format", arg: 3, scope: !2855, file: !2856, line: 739, type: !626)
!2867 = !DILocalVariable(name: "ap", arg: 4, scope: !2855, file: !2856, line: 739, type: !2824)
!2868 = !DILocation(line: 0, scope: !2855)
!2869 = !DILocation(line: 741, column: 9, scope: !2855)
!2870 = !DILocation(line: 741, column: 2, scope: !2855)
!2871 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !127, file: !127, line: 157, type: !2872, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2874)
!2872 = !DISubroutineType(types: !2873)
!2873 = !{null, !818, !120}
!2874 = !{!2875, !2876, !2877}
!2875 = !DILocalVariable(name: "c", arg: 1, scope: !2871, file: !127, line: 157, type: !818)
!2876 = !DILocalVariable(name: "n", arg: 2, scope: !2871, file: !127, line: 157, type: !120)
!2877 = !DILocalVariable(name: "i", scope: !2871, file: !127, line: 159, type: !120)
!2878 = !DILocation(line: 0, scope: !2871)
!2879 = !DILocation(line: 164, column: 16, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2881, file: !127, line: 164, column: 2)
!2881 = distinct !DILexicalBlock(scope: !2871, file: !127, line: 164, column: 2)
!2882 = !DILocation(line: 164, column: 2, scope: !2881)
!2883 = !DILocation(line: 165, column: 3, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2880, file: !127, line: 164, column: 26)
!2885 = !DILocation(line: 165, column: 13, scope: !2884)
!2886 = !DILocation(line: 164, column: 22, scope: !2880)
!2887 = distinct !{!2887, !2882, !2888}
!2888 = !DILocation(line: 166, column: 2, scope: !2881)
!2889 = !DILocation(line: 171, column: 1, scope: !2871)
!2890 = distinct !DISubprogram(name: "printk", scope: !127, file: !127, line: 203, type: !2891, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2893)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{null, !626, null}
!2893 = !{!2894, !2895}
!2894 = !DILocalVariable(name: "fmt", arg: 1, scope: !2890, file: !127, line: 203, type: !626)
!2895 = !DILocalVariable(name: "ap", scope: !2890, file: !127, line: 205, type: !2824)
!2896 = !DILocation(line: 0, scope: !2890)
!2897 = !DILocation(line: 205, column: 2, scope: !2890)
!2898 = !DILocation(line: 205, column: 10, scope: !2890)
!2899 = !DILocation(line: 207, column: 2, scope: !2890)
!2900 = !DILocation(line: 209, column: 2, scope: !2890)
!2901 = !DILocation(line: 211, column: 2, scope: !2890)
!2902 = !DILocation(line: 212, column: 1, scope: !2890)
!2903 = distinct !DISubprogram(name: "snprintk", scope: !127, file: !127, line: 239, type: !2904, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2906)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!103, !818, !120, !626, null}
!2906 = !{!2907, !2908, !2909, !2910, !2911}
!2907 = !DILocalVariable(name: "str", arg: 1, scope: !2903, file: !127, line: 239, type: !818)
!2908 = !DILocalVariable(name: "size", arg: 2, scope: !2903, file: !127, line: 239, type: !120)
!2909 = !DILocalVariable(name: "fmt", arg: 3, scope: !2903, file: !127, line: 239, type: !626)
!2910 = !DILocalVariable(name: "ap", scope: !2903, file: !127, line: 241, type: !2824)
!2911 = !DILocalVariable(name: "ret", scope: !2903, file: !127, line: 242, type: !103)
!2912 = !DILocation(line: 0, scope: !2903)
!2913 = !DILocation(line: 241, column: 2, scope: !2903)
!2914 = !DILocation(line: 241, column: 10, scope: !2903)
!2915 = !DILocation(line: 244, column: 2, scope: !2903)
!2916 = !DILocation(line: 245, column: 8, scope: !2903)
!2917 = !DILocation(line: 246, column: 2, scope: !2903)
!2918 = !DILocation(line: 249, column: 1, scope: !2903)
!2919 = !DILocation(line: 248, column: 2, scope: !2903)
!2920 = distinct !DISubprogram(name: "vsnprintk", scope: !127, file: !127, line: 251, type: !2921, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2923)
!2921 = !DISubroutineType(types: !2922)
!2922 = !{!103, !818, !120, !626, !2824}
!2923 = !{!2924, !2925, !2926, !2927, !2928}
!2924 = !DILocalVariable(name: "str", arg: 1, scope: !2920, file: !127, line: 251, type: !818)
!2925 = !DILocalVariable(name: "size", arg: 2, scope: !2920, file: !127, line: 251, type: !120)
!2926 = !DILocalVariable(name: "fmt", arg: 3, scope: !2920, file: !127, line: 251, type: !626)
!2927 = !DILocalVariable(name: "ap", arg: 4, scope: !2920, file: !127, line: 251, type: !2824)
!2928 = !DILocalVariable(name: "ctx", scope: !2920, file: !127, line: 253, type: !2929)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !127, line: 217, size: 96, elements: !2930)
!2930 = !{!2931, !2932, !2933}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2929, file: !127, line: 218, baseType: !818, size: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2929, file: !127, line: 219, baseType: !103, size: 32, offset: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2929, file: !127, line: 220, baseType: !103, size: 32, offset: 64)
!2934 = !DILocation(line: 0, scope: !2920)
!2935 = !DILocation(line: 253, column: 2, scope: !2920)
!2936 = !DILocation(line: 253, column: 21, scope: !2920)
!2937 = !DILocation(line: 253, column: 27, scope: !2920)
!2938 = !DILocation(line: 255, column: 2, scope: !2920)
!2939 = !DILocation(line: 257, column: 10, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2920, file: !127, line: 257, column: 6)
!2941 = !DILocation(line: 257, column: 22, scope: !2940)
!2942 = !DILocation(line: 257, column: 16, scope: !2940)
!2943 = !DILocation(line: 257, column: 6, scope: !2920)
!2944 = !DILocation(line: 258, column: 3, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2940, file: !127, line: 257, column: 27)
!2946 = !DILocation(line: 258, column: 18, scope: !2945)
!2947 = !DILocation(line: 259, column: 2, scope: !2945)
!2948 = !DILocation(line: 262, column: 1, scope: !2920)
!2949 = !DILocation(line: 261, column: 2, scope: !2920)
!2950 = distinct !DISubprogram(name: "str_out", scope: !127, file: !127, line: 223, type: !2951, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2954)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!103, !103, !2953}
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 32)
!2954 = !{!2955, !2956}
!2955 = !DILocalVariable(name: "c", arg: 1, scope: !2950, file: !127, line: 223, type: !103)
!2956 = !DILocalVariable(name: "ctx", arg: 2, scope: !2950, file: !127, line: 223, type: !2953)
!2957 = !DILocation(line: 0, scope: !2950)
!2958 = !DILocation(line: 225, column: 11, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2950, file: !127, line: 225, column: 6)
!2960 = !DILocation(line: 225, column: 15, scope: !2959)
!2961 = !DILocation(line: 0, scope: !2959)
!2962 = !DILocation(line: 225, column: 23, scope: !2959)
!2963 = !DILocation(line: 225, column: 45, scope: !2959)
!2964 = !DILocation(line: 225, column: 37, scope: !2959)
!2965 = !DILocation(line: 225, column: 6, scope: !2950)
!2966 = !DILocation(line: 226, column: 8, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2959, file: !127, line: 225, column: 50)
!2968 = !DILocation(line: 226, column: 13, scope: !2967)
!2969 = !DILocation(line: 227, column: 3, scope: !2967)
!2970 = !DILocation(line: 230, column: 29, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2950, file: !127, line: 230, column: 6)
!2972 = !DILocation(line: 230, column: 17, scope: !2971)
!2973 = !DILocation(line: 230, column: 6, scope: !2950)
!2974 = !DILocation(line: 231, column: 22, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2971, file: !127, line: 230, column: 34)
!2976 = !DILocation(line: 231, column: 3, scope: !2975)
!2977 = !DILocation(line: 231, column: 26, scope: !2975)
!2978 = !DILocation(line: 232, column: 2, scope: !2975)
!2979 = !DILocation(line: 233, column: 28, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2971, file: !127, line: 232, column: 9)
!2981 = !DILocation(line: 233, column: 22, scope: !2980)
!2982 = !DILocation(line: 233, column: 3, scope: !2980)
!2983 = !DILocation(line: 233, column: 26, scope: !2980)
!2984 = !DILocation(line: 237, column: 1, scope: !2950)
!2985 = distinct !DISubprogram(name: "z_thread_entry", scope: !2986, file: !2986, line: 30, type: !2987, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !2994)
!2986 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2987 = !DISubroutineType(types: !2988)
!2988 = !{null, !2989, !102, !102, !102}
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !2990, line: 46, baseType: !2991)
!2990 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 32)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{null, !102, !102, !102}
!2994 = !{!2995, !2996, !2997, !2998}
!2995 = !DILocalVariable(name: "entry", arg: 1, scope: !2985, file: !2986, line: 30, type: !2989)
!2996 = !DILocalVariable(name: "p1", arg: 2, scope: !2985, file: !2986, line: 31, type: !102)
!2997 = !DILocalVariable(name: "p2", arg: 3, scope: !2985, file: !2986, line: 31, type: !102)
!2998 = !DILocalVariable(name: "p3", arg: 4, scope: !2985, file: !2986, line: 31, type: !102)
!2999 = !DILocation(line: 0, scope: !2985)
!3000 = !DILocation(line: 36, column: 2, scope: !2985)
!3001 = !DILocation(line: 38, column: 17, scope: !2985)
!3002 = !DILocation(line: 38, column: 2, scope: !2985)
!3003 = !DILocation(line: 45, column: 2, scope: !2985)
!3004 = distinct !DISubprogram(name: "k_current_get", scope: !1678, file: !1678, line: 530, type: !3005, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !162)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{!3007}
!3007 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1595, line: 347, baseType: !3008)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 32)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1595, line: 245, size: 896, elements: !3010)
!3010 = !{!3011, !3069, !3081, !3082, !3083, !3084, !3097}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3009, file: !1595, line: 247, baseType: !3012, size: 384)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1595, line: 57, size: 384, elements: !3013)
!3013 = !{!3014, !3038, !3045, !3046, !3047, !3056, !3057, !3058}
!3014 = !DIDerivedType(tag: DW_TAG_member, scope: !3012, file: !1595, line: 60, baseType: !3015, size: 64)
!3015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3012, file: !1595, line: 60, size: 64, elements: !3016)
!3016 = !{!3017, !3032}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3015, file: !1595, line: 61, baseType: !3018, size: 64)
!3018 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1605, line: 49, baseType: !3019)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1605, line: 37, size: 64, elements: !3020)
!3020 = !{!3021, !3027}
!3021 = !DIDerivedType(tag: DW_TAG_member, scope: !3019, file: !1605, line: 38, baseType: !3022, size: 32)
!3022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3019, file: !1605, line: 38, size: 32, elements: !3023)
!3023 = !{!3024, !3026}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3022, file: !1605, line: 39, baseType: !3025, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3022, file: !1605, line: 40, baseType: !3025, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, scope: !3019, file: !1605, line: 42, baseType: !3028, size: 32, offset: 32)
!3028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3019, file: !1605, line: 42, size: 32, elements: !3029)
!3029 = !{!3030, !3031}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3028, file: !1605, line: 43, baseType: !3025, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3028, file: !1605, line: 44, baseType: !3025, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3015, file: !1595, line: 62, baseType: !3033, size: 64)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1621, line: 49, size: 64, elements: !3034)
!3034 = !{!3035}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3033, file: !1621, line: 50, baseType: !3036, size: 64)
!3036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3037, size: 64, elements: !1182)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 32)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3012, file: !1595, line: 68, baseType: !3039, size: 32, offset: 64)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1584, line: 233, baseType: !3041)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1584, line: 231, size: 64, elements: !3042)
!3042 = !{!3043}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3041, file: !1584, line: 232, baseType: !3044, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1605, line: 48, baseType: !3019)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3012, file: !1595, line: 71, baseType: !465, size: 8, offset: 96)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3012, file: !1595, line: 74, baseType: !465, size: 8, offset: 104)
!3047 = !DIDerivedType(tag: DW_TAG_member, scope: !3012, file: !1595, line: 90, baseType: !3048, size: 16, offset: 112)
!3048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3012, file: !1595, line: 90, size: 16, elements: !3049)
!3049 = !{!3050, !3055}
!3050 = !DIDerivedType(tag: DW_TAG_member, scope: !3048, file: !1595, line: 91, baseType: !3051, size: 16)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3048, file: !1595, line: 91, size: 16, elements: !3052)
!3052 = !{!3053, !3054}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3051, file: !1595, line: 96, baseType: !1642, size: 8)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3051, file: !1595, line: 97, baseType: !465, size: 8, offset: 8)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3048, file: !1595, line: 100, baseType: !151, size: 16)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3012, file: !1595, line: 107, baseType: !137, size: 32, offset: 128)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3012, file: !1595, line: 127, baseType: !102, size: 32, offset: 160)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3012, file: !1595, line: 131, baseType: !3059, size: 192, offset: 192)
!3059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1584, line: 244, size: 192, elements: !3060)
!3060 = !{!3061, !3062, !3068}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3059, file: !1584, line: 245, baseType: !3018, size: 64)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3059, file: !1584, line: 246, baseType: !3063, size: 32, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1584, line: 242, baseType: !3064)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 32)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{null, !3067}
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 32)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3059, file: !1584, line: 249, baseType: !1343, size: 64, offset: 128)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3009, file: !1595, line: 250, baseType: !3070, size: 288, offset: 384)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1661, line: 25, size: 288, elements: !3071)
!3071 = !{!3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3070, file: !1661, line: 26, baseType: !137, size: 32)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3070, file: !1661, line: 27, baseType: !137, size: 32, offset: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3070, file: !1661, line: 28, baseType: !137, size: 32, offset: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3070, file: !1661, line: 29, baseType: !137, size: 32, offset: 96)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3070, file: !1661, line: 30, baseType: !137, size: 32, offset: 128)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3070, file: !1661, line: 31, baseType: !137, size: 32, offset: 160)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3070, file: !1661, line: 32, baseType: !137, size: 32, offset: 192)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3070, file: !1661, line: 33, baseType: !137, size: 32, offset: 224)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3070, file: !1661, line: 34, baseType: !137, size: 32, offset: 256)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3009, file: !1595, line: 253, baseType: !102, size: 32, offset: 672)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3009, file: !1595, line: 256, baseType: !3040, size: 64, offset: 704)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3009, file: !1595, line: 294, baseType: !103, size: 32, offset: 768)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3009, file: !1595, line: 325, baseType: !3085, size: 32, offset: 800)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 32)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1678, line: 5073, size: 160, elements: !3087)
!3087 = !{!3088, !3094, !3095}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3086, file: !1678, line: 5074, baseType: !3089, size: 96)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3090)
!3090 = !{!3091, !3092, !3093}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3089, file: !113, line: 57, baseType: !116, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3089, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3089, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3086, file: !1678, line: 5075, baseType: !3040, size: 64, offset: 96)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3086, file: !1678, line: 5076, baseType: !3096, offset: 160)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1451, line: 43, elements: !162)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3009, file: !1595, line: 343, baseType: !3098, size: 64, offset: 832)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1661, line: 60, size: 64, elements: !3099)
!3099 = !{!3100, !3101}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3098, file: !1661, line: 63, baseType: !137, size: 32)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3098, file: !1661, line: 66, baseType: !137, size: 32, offset: 32)
!3102 = !DILocation(line: 535, column: 9, scope: !3004)
!3103 = !DILocation(line: 535, column: 2, scope: !3004)
!3104 = distinct !DISubprogram(name: "k_thread_abort", scope: !3105, file: !3105, line: 188, type: !3106, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !3108)
!3105 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!3106 = !DISubroutineType(types: !3107)
!3107 = !{null, !3007}
!3108 = !{!3109}
!3109 = !DILocalVariable(name: "thread", arg: 1, scope: !3104, file: !3105, line: 188, type: !3007)
!3110 = !DILocation(line: 0, scope: !3104)
!3111 = !DILocation(line: 197, column: 2, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3104, file: !3105, line: 197, column: 2)
!3113 = !{i64 2151033460}
!3114 = !DILocation(line: 198, column: 2, scope: !3104)
!3115 = !DILocation(line: 199, column: 1, scope: !3104)
!3116 = distinct !DISubprogram(name: "z_current_get", scope: !3105, file: !3105, line: 173, type: !3005, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !162)
!3117 = !DILocation(line: 180, column: 2, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3116, file: !3105, line: 180, column: 2)
!3119 = !{i64 2151033392}
!3120 = !DILocation(line: 181, column: 9, scope: !3116)
!3121 = !DILocation(line: 181, column: 2, scope: !3116)
!3122 = distinct !DISubprogram(name: "sys_heap_free", scope: !3123, file: !3123, line: 163, type: !3124, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3132)
!3123 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3124 = !DISubroutineType(types: !3125)
!3125 = !{null, !3126, !102}
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 32)
!3127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3128)
!3128 = !{!3129, !3130, !3131}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3127, file: !113, line: 57, baseType: !2032, size: 32)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3127, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3127, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3132 = !{!3133, !3134, !3135, !3136}
!3133 = !DILocalVariable(name: "heap", arg: 1, scope: !3122, file: !3123, line: 163, type: !3126)
!3134 = !DILocalVariable(name: "mem", arg: 2, scope: !3122, file: !3123, line: 163, type: !102)
!3135 = !DILocalVariable(name: "h", scope: !3122, file: !3123, line: 168, type: !2032)
!3136 = !DILocalVariable(name: "c", scope: !3122, file: !3123, line: 169, type: !2037)
!3137 = !DILocation(line: 0, scope: !3122)
!3138 = !DILocation(line: 165, column: 10, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3122, file: !3123, line: 165, column: 6)
!3140 = !DILocation(line: 165, column: 6, scope: !3122)
!3141 = !DILocation(line: 168, column: 27, scope: !3122)
!3142 = !DILocation(line: 169, column: 16, scope: !3122)
!3143 = !{i32 0, i32 536870912}
!3144 = !DILocation(line: 187, column: 2, scope: !3122)
!3145 = !DILocation(line: 189, column: 44, scope: !3122)
!3146 = !{i32 0, i32 32768}
!3147 = !DILocation(line: 189, column: 24, scope: !3122)
!3148 = !DILocation(line: 189, column: 5, scope: !3122)
!3149 = !DILocation(line: 189, column: 21, scope: !3122)
!3150 = !DILocation(line: 197, column: 2, scope: !3122)
!3151 = !DILocation(line: 198, column: 1, scope: !3122)
!3152 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3123, file: !3123, line: 157, type: !3153, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3155)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!2037, !2032, !102}
!3155 = !{!3156, !3157, !3158, !3159}
!3156 = !DILocalVariable(name: "h", arg: 1, scope: !3152, file: !3123, line: 157, type: !2032)
!3157 = !DILocalVariable(name: "p", arg: 2, scope: !3152, file: !3123, line: 157, type: !102)
!3158 = !DILocalVariable(name: "mem", scope: !3152, file: !3123, line: 159, type: !681)
!3159 = !DILocalVariable(name: "base", scope: !3152, file: !3123, line: 159, type: !681)
!3160 = !DILocation(line: 0, scope: !3152)
!3161 = !DILocation(line: 159, column: 39, scope: !3152)
!3162 = !DILocation(line: 160, column: 14, scope: !3152)
!3163 = !DILocation(line: 160, column: 38, scope: !3152)
!3164 = !DILocation(line: 160, column: 46, scope: !3152)
!3165 = !DILocation(line: 160, column: 2, scope: !3152)
!3166 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !3167, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3169)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{null, !2032, !2037, !636}
!3169 = !{!3170, !3171, !3172, !3173, !3174}
!3170 = !DILocalVariable(name: "h", arg: 1, scope: !3166, file: !142, line: 147, type: !2032)
!3171 = !DILocalVariable(name: "c", arg: 2, scope: !3166, file: !142, line: 147, type: !2037)
!3172 = !DILocalVariable(name: "used", arg: 3, scope: !3166, file: !142, line: 147, type: !636)
!3173 = !DILocalVariable(name: "buf", scope: !3166, file: !142, line: 149, type: !2027)
!3174 = !DILocalVariable(name: "cmem", scope: !3166, file: !142, line: 150, type: !102)
!3175 = !DILocation(line: 0, scope: !3166)
!3176 = !DILocation(line: 149, column: 22, scope: !3166)
!3177 = !DILocation(line: 0, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3179, file: !142, line: 159, column: 7)
!3179 = distinct !DILexicalBlock(scope: !3180, file: !142, line: 158, column: 9)
!3180 = distinct !DILexicalBlock(scope: !3166, file: !142, line: 152, column: 6)
!3181 = !DILocation(line: 159, column: 7, scope: !3179)
!3182 = !DILocation(line: 165, column: 1, scope: !3166)
!3183 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !3184, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3187)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{!3186, !2032, !2037}
!3186 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !142, line: 62, baseType: !137)
!3187 = !{!3188, !3189}
!3188 = !DILocalVariable(name: "h", arg: 1, scope: !3183, file: !142, line: 142, type: !2032)
!3189 = !DILocalVariable(name: "c", arg: 2, scope: !3183, file: !142, line: 142, type: !2037)
!3190 = !DILocation(line: 0, scope: !3183)
!3191 = !DILocation(line: 144, column: 9, scope: !3183)
!3192 = !DILocation(line: 144, column: 42, scope: !3183)
!3193 = !DILocation(line: 144, column: 2, scope: !3183)
!3194 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !3195, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3197)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!120, !2032, !3186}
!3197 = !{!3198, !3199}
!3198 = !DILocalVariable(name: "h", arg: 1, scope: !3194, file: !142, line: 245, type: !2032)
!3199 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !3194, file: !142, line: 245, type: !3186)
!3200 = !DILocation(line: 0, scope: !3194)
!3201 = !DILocation(line: 247, column: 20, scope: !3194)
!3202 = !DILocation(line: 247, column: 33, scope: !3194)
!3203 = !DILocation(line: 247, column: 2, scope: !3194)
!3204 = distinct !DISubprogram(name: "free_chunk", scope: !3123, file: !3123, line: 133, type: !3205, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3207)
!3205 = !DISubroutineType(types: !3206)
!3206 = !{null, !2032, !2037}
!3207 = !{!3208, !3209}
!3208 = !DILocalVariable(name: "h", arg: 1, scope: !3204, file: !3123, line: 133, type: !2032)
!3209 = !DILocalVariable(name: "c", arg: 2, scope: !3204, file: !3123, line: 133, type: !2037)
!3210 = !DILocation(line: 0, scope: !3204)
!3211 = !DILocation(line: 136, column: 21, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3204, file: !3123, line: 136, column: 6)
!3213 = !DILocation(line: 136, column: 7, scope: !3212)
!3214 = !DILocation(line: 136, column: 6, scope: !3204)
!3215 = !DILocation(line: 137, column: 3, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3212, file: !3123, line: 136, column: 41)
!3217 = !DILocation(line: 138, column: 22, scope: !3216)
!3218 = !DILocation(line: 138, column: 3, scope: !3216)
!3219 = !DILocation(line: 139, column: 2, scope: !3216)
!3220 = !DILocation(line: 142, column: 21, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3204, file: !3123, line: 142, column: 6)
!3222 = !{i32 -65535, i32 536903678}
!3223 = !DILocation(line: 142, column: 7, scope: !3221)
!3224 = !DILocation(line: 142, column: 6, scope: !3204)
!3225 = !DILocation(line: 143, column: 3, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3221, file: !3123, line: 142, column: 40)
!3227 = !DILocation(line: 144, column: 19, scope: !3226)
!3228 = !DILocation(line: 144, column: 3, scope: !3226)
!3229 = !DILocation(line: 145, column: 7, scope: !3226)
!3230 = !DILocation(line: 146, column: 2, scope: !3226)
!3231 = !DILocation(line: 148, column: 2, scope: !3204)
!3232 = !DILocation(line: 149, column: 1, scope: !3204)
!3233 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !3234, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3236)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!2037, !2032, !2037}
!3236 = !{!3237, !3238}
!3237 = !DILocalVariable(name: "h", arg: 1, scope: !3233, file: !142, line: 204, type: !2032)
!3238 = !DILocalVariable(name: "c", arg: 2, scope: !3233, file: !142, line: 204, type: !2037)
!3239 = !DILocation(line: 0, scope: !3233)
!3240 = !DILocation(line: 206, column: 13, scope: !3233)
!3241 = !DILocation(line: 206, column: 11, scope: !3233)
!3242 = !DILocation(line: 206, column: 2, scope: !3233)
!3243 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !3244, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3246)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!636, !2032, !2037}
!3246 = !{!3247, !3248}
!3247 = !DILocalVariable(name: "h", arg: 1, scope: !3243, file: !142, line: 137, type: !2032)
!3248 = !DILocalVariable(name: "c", arg: 2, scope: !3243, file: !142, line: 137, type: !2037)
!3249 = !DILocation(line: 0, scope: !3243)
!3250 = !DILocation(line: 139, column: 9, scope: !3243)
!3251 = !DILocation(line: 139, column: 42, scope: !3243)
!3252 = !DILocation(line: 139, column: 2, scope: !3243)
!3253 = distinct !DISubprogram(name: "free_list_remove", scope: !3123, file: !3123, line: 60, type: !3205, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3254)
!3254 = !{!3255, !3256, !3257}
!3255 = !DILocalVariable(name: "h", arg: 1, scope: !3253, file: !3123, line: 60, type: !2032)
!3256 = !DILocalVariable(name: "c", arg: 2, scope: !3253, file: !3123, line: 60, type: !2037)
!3257 = !DILocalVariable(name: "bidx", scope: !3258, file: !3123, line: 63, type: !103)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !3123, line: 62, column: 31)
!3259 = distinct !DILexicalBlock(scope: !3253, file: !3123, line: 62, column: 6)
!3260 = !DILocation(line: 0, scope: !3253)
!3261 = !DILocation(line: 63, column: 28, scope: !3258)
!3262 = !DILocation(line: 63, column: 14, scope: !3258)
!3263 = !DILocation(line: 0, scope: !3258)
!3264 = !DILocation(line: 64, column: 3, scope: !3258)
!3265 = !DILocation(line: 66, column: 1, scope: !3253)
!3266 = distinct !DISubprogram(name: "merge_chunks", scope: !3123, file: !3123, line: 125, type: !3267, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3269)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{null, !2032, !2037, !2037}
!3269 = !{!3270, !3271, !3272, !3273}
!3270 = !DILocalVariable(name: "h", arg: 1, scope: !3266, file: !3123, line: 125, type: !2032)
!3271 = !DILocalVariable(name: "lc", arg: 2, scope: !3266, file: !3123, line: 125, type: !2037)
!3272 = !DILocalVariable(name: "rc", arg: 3, scope: !3266, file: !3123, line: 125, type: !2037)
!3273 = !DILocalVariable(name: "newsz", scope: !3266, file: !3123, line: 127, type: !3186)
!3274 = !DILocation(line: 0, scope: !3266)
!3275 = !DILocation(line: 127, column: 20, scope: !3266)
!3276 = !DILocation(line: 127, column: 40, scope: !3266)
!3277 = !DILocation(line: 127, column: 38, scope: !3266)
!3278 = !DILocation(line: 129, column: 2, scope: !3266)
!3279 = !DILocation(line: 130, column: 25, scope: !3266)
!3280 = !DILocation(line: 130, column: 2, scope: !3266)
!3281 = !DILocation(line: 131, column: 1, scope: !3266)
!3282 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !3234, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3283)
!3283 = !{!3284, !3285}
!3284 = !DILocalVariable(name: "h", arg: 1, scope: !3282, file: !142, line: 199, type: !2032)
!3285 = !DILocalVariable(name: "c", arg: 2, scope: !3282, file: !142, line: 199, type: !2037)
!3286 = !DILocation(line: 0, scope: !3282)
!3287 = !DILocation(line: 201, column: 13, scope: !3282)
!3288 = !DILocation(line: 201, column: 11, scope: !3282)
!3289 = !DILocation(line: 201, column: 2, scope: !3282)
!3290 = distinct !DISubprogram(name: "free_list_add", scope: !3123, file: !3123, line: 98, type: !3205, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3291)
!3291 = !{!3292, !3293, !3294}
!3292 = !DILocalVariable(name: "h", arg: 1, scope: !3290, file: !3123, line: 98, type: !2032)
!3293 = !DILocalVariable(name: "c", arg: 2, scope: !3290, file: !3123, line: 98, type: !2037)
!3294 = !DILocalVariable(name: "bidx", scope: !3295, file: !3123, line: 101, type: !103)
!3295 = distinct !DILexicalBlock(scope: !3296, file: !3123, line: 100, column: 31)
!3296 = distinct !DILexicalBlock(scope: !3290, file: !3123, line: 100, column: 6)
!3297 = !DILocation(line: 0, scope: !3290)
!3298 = !DILocation(line: 101, column: 28, scope: !3295)
!3299 = !DILocation(line: 101, column: 14, scope: !3295)
!3300 = !DILocation(line: 0, scope: !3295)
!3301 = !DILocation(line: 102, column: 3, scope: !3295)
!3302 = !DILocation(line: 104, column: 1, scope: !3290)
!3303 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !3304, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3306)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!103, !2032, !3186}
!3306 = !{!3307, !3308, !3309}
!3307 = !DILocalVariable(name: "h", arg: 1, scope: !3303, file: !142, line: 250, type: !2032)
!3308 = !DILocalVariable(name: "sz", arg: 2, scope: !3303, file: !142, line: 250, type: !3186)
!3309 = !DILocalVariable(name: "usable_sz", scope: !3303, file: !142, line: 252, type: !32)
!3310 = !DILocation(line: 0, scope: !3303)
!3311 = !DILocation(line: 252, column: 32, scope: !3303)
!3312 = !DILocation(line: 252, column: 30, scope: !3303)
!3313 = !DILocation(line: 252, column: 50, scope: !3303)
!3314 = !DILocation(line: 253, column: 14, scope: !3303)
!3315 = !{i32 0, i32 33}
!3316 = !DILocation(line: 253, column: 12, scope: !3303)
!3317 = !DILocation(line: 253, column: 2, scope: !3303)
!3318 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3123, file: !3123, line: 68, type: !3319, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3321)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{null, !2032, !2037, !103}
!3321 = !{!3322, !3323, !3324, !3325, !3327, !3330}
!3322 = !DILocalVariable(name: "h", arg: 1, scope: !3318, file: !3123, line: 68, type: !2032)
!3323 = !DILocalVariable(name: "c", arg: 2, scope: !3318, file: !3123, line: 68, type: !2037)
!3324 = !DILocalVariable(name: "bidx", arg: 3, scope: !3318, file: !3123, line: 68, type: !103)
!3325 = !DILocalVariable(name: "b", scope: !3318, file: !3123, line: 70, type: !3326)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!3327 = !DILocalVariable(name: "second", scope: !3328, file: !3123, line: 84, type: !2037)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !3123, line: 80, column: 9)
!3329 = distinct !DILexicalBlock(scope: !3318, file: !3123, line: 72, column: 6)
!3330 = !DILocalVariable(name: "first", scope: !3328, file: !3123, line: 85, type: !2037)
!3331 = !DILocation(line: 0, scope: !3318)
!3332 = !DILocation(line: 72, column: 9, scope: !3329)
!3333 = !DILocation(line: 72, column: 14, scope: !3329)
!3334 = !DILocation(line: 72, column: 6, scope: !3318)
!3335 = !DILocation(line: 76, column: 23, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3329, file: !3123, line: 72, column: 21)
!3337 = !DILocation(line: 76, column: 6, scope: !3336)
!3338 = !DILocation(line: 76, column: 20, scope: !3336)
!3339 = !DILocation(line: 77, column: 11, scope: !3336)
!3340 = !DILocation(line: 78, column: 3, scope: !3336)
!3341 = !DILocation(line: 79, column: 3, scope: !3336)
!3342 = !DILocation(line: 80, column: 2, scope: !3336)
!3343 = !DILocation(line: 0, scope: !3328)
!3344 = !DILocation(line: 85, column: 21, scope: !3328)
!3345 = !{i32 0, i32 65536}
!3346 = !DILocation(line: 87, column: 3, scope: !3328)
!3347 = !DILocation(line: 88, column: 3, scope: !3328)
!3348 = !DILocation(line: 89, column: 3, scope: !3328)
!3349 = !DILocation(line: 90, column: 3, scope: !3328)
!3350 = !DILocation(line: 94, column: 39, scope: !3318)
!3351 = !DILocation(line: 94, column: 19, scope: !3318)
!3352 = !DILocation(line: 94, column: 5, scope: !3318)
!3353 = !DILocation(line: 94, column: 16, scope: !3318)
!3354 = !DILocation(line: 96, column: 1, scope: !3318)
!3355 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !142, file: !142, line: 187, type: !3267, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3356)
!3356 = !{!3357, !3358, !3359}
!3357 = !DILocalVariable(name: "h", arg: 1, scope: !3355, file: !142, line: 187, type: !2032)
!3358 = !DILocalVariable(name: "c", arg: 2, scope: !3355, file: !142, line: 187, type: !2037)
!3359 = !DILocalVariable(name: "prev", arg: 3, scope: !3355, file: !142, line: 188, type: !2037)
!3360 = !DILocation(line: 0, scope: !3355)
!3361 = !DILocation(line: 190, column: 2, scope: !3355)
!3362 = !DILocation(line: 191, column: 1, scope: !3355)
!3363 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !142, file: !142, line: 193, type: !3267, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3364)
!3364 = !{!3365, !3366, !3367}
!3365 = !DILocalVariable(name: "h", arg: 1, scope: !3363, file: !142, line: 193, type: !2032)
!3366 = !DILocalVariable(name: "c", arg: 2, scope: !3363, file: !142, line: 193, type: !2037)
!3367 = !DILocalVariable(name: "next", arg: 3, scope: !3363, file: !142, line: 194, type: !2037)
!3368 = !DILocation(line: 0, scope: !3363)
!3369 = !DILocation(line: 196, column: 2, scope: !3363)
!3370 = !DILocation(line: 197, column: 1, scope: !3363)
!3371 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !3234, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3372)
!3372 = !{!3373, !3374}
!3373 = !DILocalVariable(name: "h", arg: 1, scope: !3371, file: !142, line: 177, type: !2032)
!3374 = !DILocalVariable(name: "c", arg: 2, scope: !3371, file: !142, line: 177, type: !2037)
!3375 = !DILocation(line: 0, scope: !3371)
!3376 = !DILocation(line: 179, column: 9, scope: !3371)
!3377 = !DILocation(line: 179, column: 2, scope: !3371)
!3378 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !3379, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3381)
!3379 = !DISubroutineType(types: !3380)
!3380 = !{!2037, !2032, !2037, !141}
!3381 = !{!3382, !3383, !3384, !3385, !3386}
!3382 = !DILocalVariable(name: "h", arg: 1, scope: !3378, file: !142, line: 107, type: !2032)
!3383 = !DILocalVariable(name: "c", arg: 2, scope: !3378, file: !142, line: 107, type: !2037)
!3384 = !DILocalVariable(name: "f", arg: 3, scope: !3378, file: !142, line: 108, type: !141)
!3385 = !DILocalVariable(name: "buf", scope: !3378, file: !142, line: 110, type: !2027)
!3386 = !DILocalVariable(name: "cmem", scope: !3378, file: !142, line: 111, type: !102)
!3387 = !DILocation(line: 0, scope: !3378)
!3388 = !DILocation(line: 110, column: 22, scope: !3378)
!3389 = !DILocation(line: 111, column: 15, scope: !3378)
!3390 = !DILocation(line: 116, column: 11, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3392, file: !142, line: 115, column: 9)
!3392 = distinct !DILexicalBlock(scope: !3378, file: !142, line: 113, column: 6)
!3393 = !DILocation(line: 116, column: 10, scope: !3391)
!3394 = !DILocation(line: 118, column: 1, scope: !3378)
!3395 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !3396, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3398)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!2027, !2032}
!3398 = !{!3399}
!3399 = !DILocalVariable(name: "h", arg: 1, scope: !3395, file: !142, line: 101, type: !2032)
!3400 = !DILocation(line: 0, scope: !3395)
!3401 = !DILocation(line: 104, column: 9, scope: !3395)
!3402 = !DILocation(line: 104, column: 2, scope: !3395)
!3403 = distinct !DISubprogram(name: "chunk_set", scope: !142, file: !142, line: 120, type: !3404, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3406)
!3404 = !DISubroutineType(types: !3405)
!3405 = !{null, !2032, !2037, !141, !2037}
!3406 = !{!3407, !3408, !3409, !3410, !3411, !3412}
!3407 = !DILocalVariable(name: "h", arg: 1, scope: !3403, file: !142, line: 120, type: !2032)
!3408 = !DILocalVariable(name: "c", arg: 2, scope: !3403, file: !142, line: 120, type: !2037)
!3409 = !DILocalVariable(name: "f", arg: 3, scope: !3403, file: !142, line: 121, type: !141)
!3410 = !DILocalVariable(name: "val", arg: 4, scope: !3403, file: !142, line: 121, type: !2037)
!3411 = !DILocalVariable(name: "buf", scope: !3403, file: !142, line: 125, type: !2027)
!3412 = !DILocalVariable(name: "cmem", scope: !3403, file: !142, line: 126, type: !102)
!3413 = !DILocation(line: 0, scope: !3403)
!3414 = !DILocation(line: 125, column: 22, scope: !3403)
!3415 = !DILocation(line: 126, column: 15, scope: !3403)
!3416 = !DILocation(line: 133, column: 27, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !142, line: 131, column: 9)
!3418 = distinct !DILexicalBlock(scope: !3403, file: !142, line: 128, column: 6)
!3419 = !DILocation(line: 133, column: 4, scope: !3417)
!3420 = !DILocation(line: 133, column: 3, scope: !3417)
!3421 = !DILocation(line: 133, column: 25, scope: !3417)
!3422 = !DILocation(line: 135, column: 1, scope: !3403)
!3423 = distinct !DISubprogram(name: "min_chunk_size", scope: !142, file: !142, line: 240, type: !3424, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3426)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{!3186, !2032}
!3426 = !{!3427}
!3427 = !DILocalVariable(name: "h", arg: 1, scope: !3423, file: !142, line: 240, type: !2032)
!3428 = !DILocation(line: 0, scope: !3423)
!3429 = !DILocation(line: 242, column: 9, scope: !3423)
!3430 = !DILocation(line: 242, column: 2, scope: !3423)
!3431 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !142, file: !142, line: 235, type: !3432, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3434)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!3186, !2032, !120}
!3434 = !{!3435, !3436}
!3435 = !DILocalVariable(name: "h", arg: 1, scope: !3431, file: !142, line: 235, type: !2032)
!3436 = !DILocalVariable(name: "bytes", arg: 2, scope: !3431, file: !142, line: 235, type: !120)
!3437 = !DILocation(line: 0, scope: !3431)
!3438 = !DILocation(line: 237, column: 39, scope: !3431)
!3439 = !DILocation(line: 237, column: 9, scope: !3431)
!3440 = !DILocation(line: 237, column: 2, scope: !3431)
!3441 = distinct !DISubprogram(name: "chunksz", scope: !142, file: !142, line: 230, type: !3442, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3444)
!3442 = !DISubroutineType(types: !3443)
!3443 = !{!3186, !120}
!3444 = !{!3445}
!3445 = !DILocalVariable(name: "bytes", arg: 1, scope: !3441, file: !142, line: 230, type: !120)
!3446 = !DILocation(line: 0, scope: !3441)
!3447 = !DILocation(line: 232, column: 29, scope: !3441)
!3448 = !DILocation(line: 232, column: 35, scope: !3441)
!3449 = !DILocation(line: 232, column: 2, scope: !3441)
!3450 = distinct !DISubprogram(name: "set_chunk_size", scope: !142, file: !142, line: 172, type: !3451, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3453)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{null, !2032, !2037, !3186}
!3453 = !{!3454, !3455, !3456}
!3454 = !DILocalVariable(name: "h", arg: 1, scope: !3450, file: !142, line: 172, type: !2032)
!3455 = !DILocalVariable(name: "c", arg: 2, scope: !3450, file: !142, line: 172, type: !2037)
!3456 = !DILocalVariable(name: "size", arg: 3, scope: !3450, file: !142, line: 172, type: !3186)
!3457 = !DILocation(line: 0, scope: !3450)
!3458 = !DILocation(line: 174, column: 38, scope: !3450)
!3459 = !DILocation(line: 174, column: 2, scope: !3450)
!3460 = !DILocation(line: 175, column: 1, scope: !3450)
!3461 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !142, file: !142, line: 209, type: !3451, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3462)
!3462 = !{!3463, !3464, !3465}
!3463 = !DILocalVariable(name: "h", arg: 1, scope: !3461, file: !142, line: 209, type: !2032)
!3464 = !DILocalVariable(name: "c", arg: 2, scope: !3461, file: !142, line: 209, type: !2037)
!3465 = !DILocalVariable(name: "size", arg: 3, scope: !3461, file: !142, line: 210, type: !3186)
!3466 = !DILocation(line: 0, scope: !3461)
!3467 = !DILocation(line: 212, column: 2, scope: !3461)
!3468 = !DILocation(line: 213, column: 1, scope: !3461)
!3469 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3123, file: !3123, line: 34, type: !3319, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3470)
!3470 = !{!3471, !3472, !3473, !3474, !3475, !3478}
!3471 = !DILocalVariable(name: "h", arg: 1, scope: !3469, file: !3123, line: 34, type: !2032)
!3472 = !DILocalVariable(name: "c", arg: 2, scope: !3469, file: !3123, line: 34, type: !2037)
!3473 = !DILocalVariable(name: "bidx", arg: 3, scope: !3469, file: !3123, line: 34, type: !103)
!3474 = !DILocalVariable(name: "b", scope: !3469, file: !3123, line: 36, type: !3326)
!3475 = !DILocalVariable(name: "first", scope: !3476, file: !3123, line: 47, type: !2037)
!3476 = distinct !DILexicalBlock(scope: !3477, file: !3123, line: 46, column: 9)
!3477 = distinct !DILexicalBlock(scope: !3469, file: !3123, line: 42, column: 6)
!3478 = !DILocalVariable(name: "second", scope: !3476, file: !3123, line: 48, type: !2037)
!3479 = !DILocation(line: 0, scope: !3469)
!3480 = !DILocation(line: 36, column: 29, scope: !3469)
!3481 = !DILocation(line: 42, column: 6, scope: !3477)
!3482 = !DILocation(line: 42, column: 28, scope: !3477)
!3483 = !DILocation(line: 42, column: 6, scope: !3469)
!3484 = !DILocation(line: 44, column: 24, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3477, file: !3123, line: 42, column: 34)
!3486 = !DILocation(line: 44, column: 23, scope: !3485)
!3487 = !DILocation(line: 44, column: 6, scope: !3485)
!3488 = !DILocation(line: 44, column: 20, scope: !3485)
!3489 = !DILocation(line: 45, column: 6, scope: !3485)
!3490 = !DILocation(line: 45, column: 11, scope: !3485)
!3491 = !DILocation(line: 46, column: 2, scope: !3485)
!3492 = !DILocation(line: 47, column: 21, scope: !3476)
!3493 = !DILocation(line: 0, scope: !3476)
!3494 = !DILocation(line: 50, column: 6, scope: !3476)
!3495 = !DILocation(line: 50, column: 11, scope: !3476)
!3496 = !DILocation(line: 51, column: 3, scope: !3476)
!3497 = !DILocation(line: 52, column: 3, scope: !3476)
!3498 = !DILocation(line: 56, column: 39, scope: !3469)
!3499 = !DILocation(line: 56, column: 19, scope: !3469)
!3500 = !DILocation(line: 56, column: 5, scope: !3469)
!3501 = !DILocation(line: 56, column: 16, scope: !3469)
!3502 = !DILocation(line: 58, column: 1, scope: !3469)
!3503 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !3234, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3504)
!3504 = !{!3505, !3506}
!3505 = !DILocalVariable(name: "h", arg: 1, scope: !3503, file: !142, line: 182, type: !2032)
!3506 = !DILocalVariable(name: "c", arg: 2, scope: !3503, file: !142, line: 182, type: !2037)
!3507 = !DILocation(line: 0, scope: !3503)
!3508 = !DILocation(line: 184, column: 9, scope: !3503)
!3509 = !DILocation(line: 184, column: 2, scope: !3503)
!3510 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3123, file: !3123, line: 200, type: !3511, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3513)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!120, !3126, !102}
!3513 = !{!3514, !3515, !3516, !3517, !3518, !3519, !3520}
!3514 = !DILocalVariable(name: "heap", arg: 1, scope: !3510, file: !3123, line: 200, type: !3126)
!3515 = !DILocalVariable(name: "mem", arg: 2, scope: !3510, file: !3123, line: 200, type: !102)
!3516 = !DILocalVariable(name: "h", scope: !3510, file: !3123, line: 202, type: !2032)
!3517 = !DILocalVariable(name: "c", scope: !3510, file: !3123, line: 203, type: !2037)
!3518 = !DILocalVariable(name: "addr", scope: !3510, file: !3123, line: 204, type: !120)
!3519 = !DILocalVariable(name: "chunk_base", scope: !3510, file: !3123, line: 205, type: !120)
!3520 = !DILocalVariable(name: "chunk_sz", scope: !3510, file: !3123, line: 206, type: !120)
!3521 = !DILocation(line: 0, scope: !3510)
!3522 = !DILocation(line: 202, column: 27, scope: !3510)
!3523 = !DILocation(line: 203, column: 16, scope: !3510)
!3524 = !DILocation(line: 204, column: 16, scope: !3510)
!3525 = !DILocation(line: 205, column: 31, scope: !3510)
!3526 = !DILocation(line: 205, column: 22, scope: !3510)
!3527 = !DILocation(line: 206, column: 20, scope: !3510)
!3528 = !DILocation(line: 206, column: 37, scope: !3510)
!3529 = !DILocation(line: 208, column: 26, scope: !3510)
!3530 = !DILocation(line: 208, column: 18, scope: !3510)
!3531 = !DILocation(line: 208, column: 2, scope: !3510)
!3532 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3123, file: !3123, line: 263, type: !3533, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3535)
!3533 = !DISubroutineType(types: !3534)
!3534 = !{!102, !3126, !120}
!3535 = !{!3536, !3537, !3538, !3539, !3540, !3541}
!3536 = !DILocalVariable(name: "heap", arg: 1, scope: !3532, file: !3123, line: 263, type: !3126)
!3537 = !DILocalVariable(name: "bytes", arg: 2, scope: !3532, file: !3123, line: 263, type: !120)
!3538 = !DILocalVariable(name: "h", scope: !3532, file: !3123, line: 265, type: !2032)
!3539 = !DILocalVariable(name: "mem", scope: !3532, file: !3123, line: 266, type: !102)
!3540 = !DILocalVariable(name: "chunk_sz", scope: !3532, file: !3123, line: 272, type: !3186)
!3541 = !DILocalVariable(name: "c", scope: !3532, file: !3123, line: 273, type: !2037)
!3542 = !DILocation(line: 0, scope: !3532)
!3543 = !DILocation(line: 265, column: 27, scope: !3532)
!3544 = !DILocation(line: 268, column: 12, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3532, file: !3123, line: 268, column: 6)
!3546 = !DILocation(line: 268, column: 18, scope: !3545)
!3547 = !DILocation(line: 268, column: 21, scope: !3545)
!3548 = !DILocation(line: 268, column: 6, scope: !3532)
!3549 = !DILocation(line: 272, column: 23, scope: !3532)
!3550 = !DILocation(line: 273, column: 16, scope: !3532)
!3551 = !DILocation(line: 274, column: 8, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3532, file: !3123, line: 274, column: 6)
!3553 = !DILocation(line: 274, column: 6, scope: !3532)
!3554 = !DILocation(line: 279, column: 6, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3532, file: !3123, line: 279, column: 6)
!3556 = !DILocation(line: 279, column: 23, scope: !3555)
!3557 = !DILocation(line: 279, column: 6, scope: !3532)
!3558 = !DILocation(line: 280, column: 24, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3555, file: !3123, line: 279, column: 35)
!3560 = !DILocation(line: 280, column: 3, scope: !3559)
!3561 = !DILocation(line: 281, column: 3, scope: !3559)
!3562 = !DILocation(line: 282, column: 2, scope: !3559)
!3563 = !DILocation(line: 284, column: 2, scope: !3532)
!3564 = !DILocation(line: 286, column: 8, scope: !3532)
!3565 = !DILocation(line: 289, column: 50, scope: !3532)
!3566 = !DILocation(line: 289, column: 30, scope: !3532)
!3567 = !{i32 -4, i32 262133}
!3568 = !DILocation(line: 289, column: 2, scope: !3532)
!3569 = !DILocation(line: 298, column: 2, scope: !3532)
!3570 = !DILocation(line: 299, column: 1, scope: !3532)
!3571 = distinct !DISubprogram(name: "size_too_big", scope: !142, file: !142, line: 256, type: !3572, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3574)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!636, !2032, !120}
!3574 = !{!3575, !3576}
!3575 = !DILocalVariable(name: "h", arg: 1, scope: !3571, file: !142, line: 256, type: !2032)
!3576 = !DILocalVariable(name: "bytes", arg: 2, scope: !3571, file: !142, line: 256, type: !120)
!3577 = !DILocation(line: 0, scope: !3571)
!3578 = !DILocation(line: 262, column: 16, scope: !3571)
!3579 = !DILocation(line: 262, column: 36, scope: !3571)
!3580 = !DILocation(line: 262, column: 30, scope: !3571)
!3581 = !DILocation(line: 262, column: 2, scope: !3571)
!3582 = distinct !DISubprogram(name: "alloc_chunk", scope: !3123, file: !3123, line: 211, type: !3583, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3585)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!2037, !2032, !3186}
!3585 = !{!3586, !3587, !3588, !3589, !3590, !3593, !3594, !3596, !3597, !3600}
!3586 = !DILocalVariable(name: "h", arg: 1, scope: !3582, file: !3123, line: 211, type: !2032)
!3587 = !DILocalVariable(name: "sz", arg: 2, scope: !3582, file: !3123, line: 211, type: !3186)
!3588 = !DILocalVariable(name: "bi", scope: !3582, file: !3123, line: 213, type: !103)
!3589 = !DILocalVariable(name: "b", scope: !3582, file: !3123, line: 214, type: !3326)
!3590 = !DILocalVariable(name: "first", scope: !3591, file: !3123, line: 233, type: !2037)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !3123, line: 232, column: 15)
!3592 = distinct !DILexicalBlock(scope: !3582, file: !3123, line: 232, column: 6)
!3593 = !DILocalVariable(name: "i", scope: !3591, file: !3123, line: 234, type: !103)
!3594 = !DILocalVariable(name: "c", scope: !3595, file: !3123, line: 236, type: !2037)
!3595 = distinct !DILexicalBlock(scope: !3591, file: !3123, line: 235, column: 6)
!3596 = !DILocalVariable(name: "bmask", scope: !3582, file: !3123, line: 249, type: !137)
!3597 = !DILocalVariable(name: "minbucket", scope: !3598, file: !3123, line: 252, type: !103)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !3123, line: 251, column: 19)
!3599 = distinct !DILexicalBlock(scope: !3582, file: !3123, line: 251, column: 6)
!3600 = !DILocalVariable(name: "c", scope: !3598, file: !3123, line: 253, type: !2037)
!3601 = !DILocation(line: 0, scope: !3582)
!3602 = !DILocation(line: 213, column: 11, scope: !3582)
!3603 = !DILocation(line: 232, column: 9, scope: !3592)
!3604 = !DILocation(line: 232, column: 6, scope: !3592)
!3605 = !DILocation(line: 232, column: 6, scope: !3582)
!3606 = !DILocation(line: 236, column: 21, scope: !3595)
!3607 = !DILocation(line: 0, scope: !3591)
!3608 = !DILocation(line: 0, scope: !3595)
!3609 = !DILocation(line: 237, column: 8, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3595, file: !3123, line: 237, column: 8)
!3611 = !DILocation(line: 237, column: 25, scope: !3610)
!3612 = !DILocation(line: 237, column: 8, scope: !3595)
!3613 = !DILocation(line: 238, column: 5, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3610, file: !3123, line: 237, column: 32)
!3615 = !DILocation(line: 241, column: 14, scope: !3595)
!3616 = !DILocation(line: 241, column: 12, scope: !3595)
!3617 = !DILocation(line: 243, column: 12, scope: !3591)
!3618 = !DILocation(line: 243, column: 16, scope: !3591)
!3619 = distinct !{!3619, !3620, !3621}
!3620 = !DILocation(line: 235, column: 3, scope: !3591)
!3621 = !DILocation(line: 243, column: 35, scope: !3591)
!3622 = !DILocation(line: 249, column: 22, scope: !3582)
!3623 = !DILocation(line: 249, column: 39, scope: !3582)
!3624 = !DILocation(line: 249, column: 36, scope: !3582)
!3625 = !DILocation(line: 251, column: 12, scope: !3599)
!3626 = !DILocation(line: 251, column: 6, scope: !3582)
!3627 = !DILocation(line: 252, column: 19, scope: !3598)
!3628 = !DILocation(line: 0, scope: !3598)
!3629 = !DILocation(line: 253, column: 39, scope: !3598)
!3630 = !DILocation(line: 255, column: 3, scope: !3598)
!3631 = !DILocation(line: 261, column: 1, scope: !3582)
!3632 = distinct !DISubprogram(name: "split_chunks", scope: !3123, file: !3123, line: 109, type: !3267, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3633)
!3633 = !{!3634, !3635, !3636, !3637, !3638, !3639}
!3634 = !DILocalVariable(name: "h", arg: 1, scope: !3632, file: !3123, line: 109, type: !2032)
!3635 = !DILocalVariable(name: "lc", arg: 2, scope: !3632, file: !3123, line: 109, type: !2037)
!3636 = !DILocalVariable(name: "rc", arg: 3, scope: !3632, file: !3123, line: 109, type: !2037)
!3637 = !DILocalVariable(name: "sz0", scope: !3632, file: !3123, line: 114, type: !3186)
!3638 = !DILocalVariable(name: "lsz", scope: !3632, file: !3123, line: 115, type: !3186)
!3639 = !DILocalVariable(name: "rsz", scope: !3632, file: !3123, line: 116, type: !3186)
!3640 = !DILocation(line: 0, scope: !3632)
!3641 = !DILocation(line: 114, column: 18, scope: !3632)
!3642 = !DILocation(line: 115, column: 21, scope: !3632)
!3643 = !DILocation(line: 116, column: 22, scope: !3632)
!3644 = !DILocation(line: 118, column: 2, scope: !3632)
!3645 = !DILocation(line: 119, column: 2, scope: !3632)
!3646 = !DILocation(line: 120, column: 2, scope: !3632)
!3647 = !DILocation(line: 121, column: 25, scope: !3632)
!3648 = !DILocation(line: 121, column: 2, scope: !3632)
!3649 = !DILocation(line: 122, column: 1, scope: !3632)
!3650 = distinct !DISubprogram(name: "chunk_mem", scope: !3123, file: !3123, line: 24, type: !3651, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3653)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!102, !2032, !2037}
!3653 = !{!3654, !3655, !3656, !3657}
!3654 = !DILocalVariable(name: "h", arg: 1, scope: !3650, file: !3123, line: 24, type: !2032)
!3655 = !DILocalVariable(name: "c", arg: 2, scope: !3650, file: !3123, line: 24, type: !2037)
!3656 = !DILocalVariable(name: "buf", scope: !3650, file: !3123, line: 26, type: !2027)
!3657 = !DILocalVariable(name: "ret", scope: !3650, file: !3123, line: 27, type: !681)
!3658 = !DILocation(line: 0, scope: !3650)
!3659 = !DILocation(line: 26, column: 22, scope: !3650)
!3660 = !DILocation(line: 27, column: 38, scope: !3650)
!3661 = !DILocation(line: 31, column: 2, scope: !3650)
!3662 = distinct !DISubprogram(name: "increase_allocated_bytes", scope: !3123, file: !3123, line: 17, type: !3663, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3665)
!3663 = !DISubroutineType(types: !3664)
!3664 = !{null, !2032, !120}
!3665 = !{!3666, !3667}
!3666 = !DILocalVariable(name: "h", arg: 1, scope: !3662, file: !3123, line: 17, type: !2032)
!3667 = !DILocalVariable(name: "num_bytes", arg: 2, scope: !3662, file: !3123, line: 17, type: !120)
!3668 = !DILocation(line: 0, scope: !3662)
!3669 = !DILocation(line: 19, column: 5, scope: !3662)
!3670 = !DILocation(line: 19, column: 21, scope: !3662)
!3671 = !DILocation(line: 20, column: 27, scope: !3662)
!3672 = !DILocation(line: 20, column: 25, scope: !3662)
!3673 = !DILocation(line: 21, column: 1, scope: !3662)
!3674 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3123, file: !3123, line: 301, type: !3675, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3677)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{!102, !3126, !120, !120}
!3677 = !{!3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689}
!3678 = !DILocalVariable(name: "heap", arg: 1, scope: !3674, file: !3123, line: 301, type: !3126)
!3679 = !DILocalVariable(name: "align", arg: 2, scope: !3674, file: !3123, line: 301, type: !120)
!3680 = !DILocalVariable(name: "bytes", arg: 3, scope: !3674, file: !3123, line: 301, type: !120)
!3681 = !DILocalVariable(name: "h", scope: !3674, file: !3123, line: 303, type: !2032)
!3682 = !DILocalVariable(name: "gap", scope: !3674, file: !3123, line: 304, type: !120)
!3683 = !DILocalVariable(name: "rew", scope: !3674, file: !3123, line: 304, type: !120)
!3684 = !DILocalVariable(name: "padded_sz", scope: !3674, file: !3123, line: 335, type: !3186)
!3685 = !DILocalVariable(name: "c0", scope: !3674, file: !3123, line: 336, type: !2037)
!3686 = !DILocalVariable(name: "mem", scope: !3674, file: !3123, line: 341, type: !681)
!3687 = !DILocalVariable(name: "end", scope: !3674, file: !3123, line: 345, type: !2027)
!3688 = !DILocalVariable(name: "c", scope: !3674, file: !3123, line: 348, type: !2037)
!3689 = !DILocalVariable(name: "c_end", scope: !3674, file: !3123, line: 349, type: !2037)
!3690 = !DILocation(line: 0, scope: !3674)
!3691 = !DILocation(line: 303, column: 27, scope: !3674)
!3692 = !DILocation(line: 313, column: 16, scope: !3674)
!3693 = !DILocation(line: 313, column: 14, scope: !3674)
!3694 = !DILocation(line: 314, column: 12, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3674, file: !3123, line: 314, column: 6)
!3696 = !DILocation(line: 314, column: 6, scope: !3674)
!3697 = !DILocation(line: 315, column: 9, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3695, file: !3123, line: 314, column: 20)
!3699 = !DILocation(line: 316, column: 9, scope: !3698)
!3700 = !DILocation(line: 318, column: 13, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !3123, line: 318, column: 7)
!3702 = distinct !DILexicalBlock(scope: !3695, file: !3123, line: 317, column: 9)
!3703 = !DILocation(line: 318, column: 7, scope: !3702)
!3704 = !DILocation(line: 319, column: 11, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3701, file: !3123, line: 318, column: 39)
!3706 = !DILocation(line: 319, column: 4, scope: !3705)
!3707 = !DILocation(line: 0, scope: !3695)
!3708 = !DILocation(line: 326, column: 12, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3674, file: !3123, line: 326, column: 6)
!3710 = !DILocation(line: 326, column: 17, scope: !3709)
!3711 = !DILocation(line: 326, column: 20, scope: !3709)
!3712 = !DILocation(line: 326, column: 6, scope: !3674)
!3713 = !DILocation(line: 335, column: 50, scope: !3674)
!3714 = !DILocation(line: 335, column: 58, scope: !3674)
!3715 = !DILocation(line: 335, column: 24, scope: !3674)
!3716 = !DILocation(line: 336, column: 17, scope: !3674)
!3717 = !DILocation(line: 338, column: 9, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3674, file: !3123, line: 338, column: 6)
!3719 = !DILocation(line: 338, column: 6, scope: !3674)
!3720 = !DILocation(line: 341, column: 17, scope: !3674)
!3721 = !DILocation(line: 344, column: 20, scope: !3674)
!3722 = !DILocation(line: 344, column: 8, scope: !3674)
!3723 = !DILocation(line: 344, column: 47, scope: !3674)
!3724 = !DILocation(line: 345, column: 39, scope: !3674)
!3725 = !DILocation(line: 348, column: 16, scope: !3674)
!3726 = !DILocation(line: 349, column: 26, scope: !3674)
!3727 = !DILocation(line: 349, column: 24, scope: !3674)
!3728 = !DILocation(line: 353, column: 8, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3674, file: !3123, line: 353, column: 6)
!3730 = !DILocation(line: 353, column: 6, scope: !3674)
!3731 = !DILocation(line: 354, column: 3, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3729, file: !3123, line: 353, column: 14)
!3733 = !DILocation(line: 355, column: 3, scope: !3732)
!3734 = !DILocation(line: 356, column: 2, scope: !3732)
!3735 = !DILocation(line: 359, column: 6, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3674, file: !3123, line: 359, column: 6)
!3737 = !DILocation(line: 359, column: 24, scope: !3736)
!3738 = !DILocation(line: 359, column: 6, scope: !3674)
!3739 = !DILocation(line: 360, column: 3, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3736, file: !3123, line: 359, column: 33)
!3741 = !DILocation(line: 361, column: 3, scope: !3740)
!3742 = !DILocation(line: 362, column: 2, scope: !3740)
!3743 = !DILocation(line: 364, column: 2, scope: !3674)
!3744 = !DILocation(line: 367, column: 50, scope: !3674)
!3745 = !DILocation(line: 367, column: 30, scope: !3674)
!3746 = !DILocation(line: 367, column: 2, scope: !3674)
!3747 = !DILocation(line: 377, column: 1, scope: !3674)
!3748 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3123, file: !3123, line: 379, type: !3749, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3751)
!3749 = !DISubroutineType(types: !3750)
!3750 = !{!102, !3126, !102, !120, !120}
!3751 = !{!3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3767, !3768}
!3752 = !DILocalVariable(name: "heap", arg: 1, scope: !3748, file: !3123, line: 379, type: !3126)
!3753 = !DILocalVariable(name: "ptr", arg: 2, scope: !3748, file: !3123, line: 379, type: !102)
!3754 = !DILocalVariable(name: "align", arg: 3, scope: !3748, file: !3123, line: 380, type: !120)
!3755 = !DILocalVariable(name: "bytes", arg: 4, scope: !3748, file: !3123, line: 380, type: !120)
!3756 = !DILocalVariable(name: "h", scope: !3748, file: !3123, line: 382, type: !2032)
!3757 = !DILocalVariable(name: "c", scope: !3748, file: !3123, line: 399, type: !2037)
!3758 = !DILocalVariable(name: "rc", scope: !3748, file: !3123, line: 400, type: !2037)
!3759 = !DILocalVariable(name: "align_gap", scope: !3748, file: !3123, line: 401, type: !120)
!3760 = !DILocalVariable(name: "chunks_need", scope: !3748, file: !3123, line: 402, type: !3186)
!3761 = !DILocalVariable(name: "split_size", scope: !3762, file: !3123, line: 435, type: !3186)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !3123, line: 433, column: 61)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !3123, line: 432, column: 13)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !3123, line: 409, column: 13)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !3123, line: 406, column: 13)
!3766 = distinct !DILexicalBlock(scope: !3748, file: !3123, line: 404, column: 6)
!3767 = !DILocalVariable(name: "ptr2", scope: !3748, file: !3123, line: 474, type: !102)
!3768 = !DILocalVariable(name: "prev_size", scope: !3769, file: !3123, line: 477, type: !120)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !3123, line: 476, column: 20)
!3770 = distinct !DILexicalBlock(scope: !3748, file: !3123, line: 476, column: 6)
!3771 = !DILocation(line: 0, scope: !3748)
!3772 = !DILocation(line: 382, column: 27, scope: !3748)
!3773 = !DILocation(line: 385, column: 10, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3748, file: !3123, line: 385, column: 6)
!3775 = !DILocation(line: 385, column: 6, scope: !3748)
!3776 = !DILocation(line: 386, column: 10, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3774, file: !3123, line: 385, column: 19)
!3778 = !DILocation(line: 386, column: 3, scope: !3777)
!3779 = !DILocation(line: 388, column: 12, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3748, file: !3123, line: 388, column: 6)
!3781 = !DILocation(line: 388, column: 6, scope: !3748)
!3782 = !DILocation(line: 389, column: 3, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3780, file: !3123, line: 388, column: 18)
!3784 = !DILocation(line: 390, column: 3, scope: !3783)
!3785 = !DILocation(line: 395, column: 6, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3748, file: !3123, line: 395, column: 6)
!3787 = !DILocation(line: 395, column: 6, scope: !3748)
!3788 = !DILocation(line: 399, column: 16, scope: !3748)
!3789 = !DILocation(line: 400, column: 17, scope: !3748)
!3790 = !DILocation(line: 401, column: 49, scope: !3748)
!3791 = !DILocation(line: 401, column: 36, scope: !3748)
!3792 = !DILocation(line: 402, column: 52, scope: !3748)
!3793 = !DILocation(line: 402, column: 26, scope: !3748)
!3794 = !DILocation(line: 404, column: 6, scope: !3766)
!3795 = !DILocation(line: 404, column: 12, scope: !3766)
!3796 = !DILocation(line: 404, column: 40, scope: !3766)
!3797 = !DILocation(line: 404, column: 31, scope: !3766)
!3798 = !DILocation(line: 404, column: 6, scope: !3748)
!3799 = !DILocation(line: 406, column: 13, scope: !3765)
!3800 = !DILocation(line: 406, column: 30, scope: !3765)
!3801 = !DILocation(line: 406, column: 13, scope: !3766)
!3802 = !DILocation(line: 409, column: 30, scope: !3764)
!3803 = !DILocation(line: 409, column: 13, scope: !3765)
!3804 = !DILocation(line: 417, column: 22, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3764, file: !3123, line: 409, column: 45)
!3806 = !DILocation(line: 417, column: 37, scope: !3805)
!3807 = !DILocation(line: 416, column: 6, scope: !3805)
!3808 = !DILocation(line: 416, column: 22, scope: !3805)
!3809 = !DILocation(line: 420, column: 24, scope: !3805)
!3810 = !DILocation(line: 420, column: 3, scope: !3805)
!3811 = !DILocation(line: 421, column: 3, scope: !3805)
!3812 = !DILocation(line: 422, column: 3, scope: !3805)
!3813 = !DILocation(line: 431, column: 3, scope: !3805)
!3814 = !DILocation(line: 432, column: 14, scope: !3763)
!3815 = !DILocation(line: 432, column: 32, scope: !3763)
!3816 = !DILocation(line: 433, column: 26, scope: !3763)
!3817 = !DILocation(line: 433, column: 24, scope: !3763)
!3818 = !DILocation(line: 433, column: 44, scope: !3763)
!3819 = !DILocation(line: 432, column: 13, scope: !3764)
!3820 = !DILocation(line: 435, column: 38, scope: !3762)
!3821 = !DILocation(line: 0, scope: !3762)
!3822 = !DILocation(line: 442, column: 42, scope: !3762)
!3823 = !DILocation(line: 442, column: 3, scope: !3762)
!3824 = !DILocation(line: 445, column: 3, scope: !3762)
!3825 = !DILocation(line: 447, column: 20, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3762, file: !3123, line: 447, column: 7)
!3827 = !DILocation(line: 447, column: 18, scope: !3826)
!3828 = !DILocation(line: 447, column: 7, scope: !3762)
!3829 = !DILocation(line: 448, column: 27, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3826, file: !3123, line: 447, column: 39)
!3831 = !DILocation(line: 448, column: 4, scope: !3830)
!3832 = !DILocation(line: 449, column: 4, scope: !3830)
!3833 = !DILocation(line: 450, column: 3, scope: !3830)
!3834 = !DILocation(line: 452, column: 3, scope: !3762)
!3835 = !DILocation(line: 453, column: 3, scope: !3762)
!3836 = !DILocation(line: 474, column: 15, scope: !3748)
!3837 = !DILocation(line: 476, column: 11, scope: !3770)
!3838 = !DILocation(line: 476, column: 6, scope: !3748)
!3839 = !DILocation(line: 477, column: 42, scope: !3769)
!3840 = !DILocation(line: 477, column: 22, scope: !3769)
!3841 = !DILocation(line: 477, column: 60, scope: !3769)
!3842 = !DILocation(line: 0, scope: !3769)
!3843 = !DILocation(line: 479, column: 21, scope: !3769)
!3844 = !DILocation(line: 479, column: 3, scope: !3769)
!3845 = !DILocation(line: 480, column: 3, scope: !3769)
!3846 = !DILocation(line: 481, column: 2, scope: !3769)
!3847 = !DILocation(line: 483, column: 1, scope: !3748)
!3848 = distinct !DISubprogram(name: "sys_heap_init", scope: !3123, file: !3123, line: 485, type: !3849, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !3851)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{null, !3126, !102, !120}
!3851 = !{!3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861}
!3852 = !DILocalVariable(name: "heap", arg: 1, scope: !3848, file: !3123, line: 485, type: !3126)
!3853 = !DILocalVariable(name: "mem", arg: 2, scope: !3848, file: !3123, line: 485, type: !102)
!3854 = !DILocalVariable(name: "bytes", arg: 3, scope: !3848, file: !3123, line: 485, type: !120)
!3855 = !DILocalVariable(name: "addr", scope: !3848, file: !3123, line: 502, type: !22)
!3856 = !DILocalVariable(name: "end", scope: !3848, file: !3123, line: 503, type: !22)
!3857 = !DILocalVariable(name: "heap_sz", scope: !3848, file: !3123, line: 504, type: !3186)
!3858 = !DILocalVariable(name: "h", scope: !3848, file: !3123, line: 509, type: !2032)
!3859 = !DILocalVariable(name: "nb_buckets", scope: !3848, file: !3123, line: 520, type: !103)
!3860 = !DILocalVariable(name: "chunk0_size", scope: !3848, file: !3123, line: 521, type: !3186)
!3861 = !DILocalVariable(name: "i", scope: !3862, file: !3123, line: 526, type: !103)
!3862 = distinct !DILexicalBlock(scope: !3848, file: !3123, line: 526, column: 2)
!3863 = !DILocation(line: 0, scope: !3848)
!3864 = !DILocation(line: 499, column: 8, scope: !3848)
!3865 = !DILocation(line: 502, column: 19, scope: !3848)
!3866 = !DILocation(line: 503, column: 18, scope: !3848)
!3867 = !DILocation(line: 504, column: 27, scope: !3848)
!3868 = !DILocation(line: 504, column: 35, scope: !3848)
!3869 = !DILocation(line: 509, column: 21, scope: !3848)
!3870 = !DILocation(line: 510, column: 8, scope: !3848)
!3871 = !DILocation(line: 510, column: 13, scope: !3848)
!3872 = !DILocation(line: 511, column: 5, scope: !3848)
!3873 = !DILocation(line: 511, column: 15, scope: !3848)
!3874 = !DILocation(line: 512, column: 5, scope: !3848)
!3875 = !DILocation(line: 512, column: 19, scope: !3848)
!3876 = !DILocation(line: 515, column: 5, scope: !3848)
!3877 = !DILocation(line: 515, column: 16, scope: !3848)
!3878 = !DILocation(line: 516, column: 5, scope: !3848)
!3879 = !DILocation(line: 516, column: 21, scope: !3848)
!3880 = !DILocation(line: 517, column: 5, scope: !3848)
!3881 = !DILocation(line: 517, column: 25, scope: !3848)
!3882 = !DILocation(line: 520, column: 19, scope: !3848)
!3883 = !DILocation(line: 522, column: 21, scope: !3848)
!3884 = !DILocation(line: 521, column: 56, scope: !3848)
!3885 = !DILocation(line: 521, column: 26, scope: !3848)
!3886 = !DILocation(line: 0, scope: !3862)
!3887 = !DILocation(line: 526, column: 20, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3862, file: !3123, line: 526, column: 2)
!3889 = !DILocation(line: 526, column: 2, scope: !3862)
!3890 = !DILocation(line: 531, column: 2, scope: !3848)
!3891 = !DILocation(line: 532, column: 2, scope: !3848)
!3892 = !DILocation(line: 533, column: 2, scope: !3848)
!3893 = !DILocation(line: 536, column: 41, scope: !3848)
!3894 = !DILocation(line: 536, column: 2, scope: !3848)
!3895 = !DILocation(line: 537, column: 2, scope: !3848)
!3896 = !DILocation(line: 540, column: 2, scope: !3848)
!3897 = !DILocation(line: 541, column: 2, scope: !3848)
!3898 = !DILocation(line: 542, column: 2, scope: !3848)
!3899 = !DILocation(line: 544, column: 2, scope: !3848)
!3900 = !DILocation(line: 545, column: 1, scope: !3848)
!3901 = !DILocation(line: 527, column: 17, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3888, file: !3123, line: 526, column: 39)
!3903 = !DILocation(line: 527, column: 22, scope: !3902)
!3904 = !DILocation(line: 526, column: 35, scope: !3888)
!3905 = distinct !{!3905, !3889, !3906}
!3906 = !DILocation(line: 528, column: 2, scope: !3862)
!3907 = distinct !DISubprogram(name: "sys_heap_validate", scope: !134, file: !134, line: 88, type: !3908, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3930)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!636, !3910}
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 32)
!3911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3912)
!3912 = !{!3913, !3928, !3929}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3911, file: !113, line: 57, baseType: !3914, size: 32)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 32)
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !3916)
!3916 = !{!3917, !3918, !3919, !3920, !3921, !3922, !3923}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !3915, file: !142, line: 69, baseType: !2036, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !3915, file: !142, line: 70, baseType: !2037, size: 32, offset: 64)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !3915, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !3915, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !3915, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !3915, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !3915, file: !142, line: 77, baseType: !3924, offset: 224)
!3924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3925, elements: !2048)
!3925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !3926)
!3926 = !{!3927}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3925, file: !142, line: 65, baseType: !2037, size: 32)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3911, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3911, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3930 = !{!3931, !3932, !3933, !3934, !3935, !3936, !3942, !3944, !3947, !3948, !3949, !3950, !3951, !3953, !3956}
!3931 = !DILocalVariable(name: "heap", arg: 1, scope: !3907, file: !134, line: 88, type: !3910)
!3932 = !DILocalVariable(name: "h", scope: !3907, file: !134, line: 90, type: !3914)
!3933 = !DILocalVariable(name: "c", scope: !3907, file: !134, line: 91, type: !2037)
!3934 = !DILocalVariable(name: "allocated_bytes", scope: !3907, file: !134, line: 112, type: !120)
!3935 = !DILocalVariable(name: "free_bytes", scope: !3907, file: !134, line: 112, type: !120)
!3936 = !DILocalVariable(name: "stat", scope: !3907, file: !134, line: 113, type: !3937)
!3937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2790, line: 24, size: 96, elements: !3938)
!3938 = !{!3939, !3940, !3941}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !3937, file: !2790, line: 25, baseType: !120, size: 32)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !3937, file: !2790, line: 26, baseType: !120, size: 32, offset: 32)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !3937, file: !2790, line: 27, baseType: !120, size: 32, offset: 64)
!3942 = !DILocalVariable(name: "b", scope: !3943, file: !134, line: 127, type: !103)
!3943 = distinct !DILexicalBlock(scope: !3907, file: !134, line: 127, column: 2)
!3944 = !DILocalVariable(name: "c0", scope: !3945, file: !134, line: 128, type: !2037)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !134, line: 127, column: 57)
!3946 = distinct !DILexicalBlock(scope: !3943, file: !134, line: 127, column: 2)
!3947 = !DILocalVariable(name: "n", scope: !3945, file: !134, line: 129, type: !137)
!3948 = !DILocalVariable(name: "empty", scope: !3945, file: !134, line: 141, type: !636)
!3949 = !DILocalVariable(name: "zero", scope: !3945, file: !134, line: 142, type: !636)
!3950 = !DILocalVariable(name: "prev_chunk", scope: !3907, file: !134, line: 159, type: !2037)
!3951 = !DILocalVariable(name: "b", scope: !3952, file: !134, line: 179, type: !103)
!3952 = distinct !DILexicalBlock(scope: !3907, file: !134, line: 179, column: 2)
!3953 = !DILocalVariable(name: "c0", scope: !3954, file: !134, line: 180, type: !2037)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !134, line: 179, column: 57)
!3955 = distinct !DILexicalBlock(scope: !3952, file: !134, line: 179, column: 2)
!3956 = !DILocalVariable(name: "n", scope: !3954, file: !134, line: 181, type: !103)
!3957 = !DILocation(line: 0, scope: !3907)
!3958 = !DILocation(line: 90, column: 27, scope: !3907)
!3959 = !DILocation(line: 96, column: 11, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3907, file: !134, line: 96, column: 2)
!3961 = !DILocation(line: 96, column: 32, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3960, file: !134, line: 96, column: 2)
!3963 = !DILocation(line: 96, column: 2, scope: !3960)
!3964 = !DILocation(line: 97, column: 8, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !134, line: 97, column: 7)
!3966 = distinct !DILexicalBlock(scope: !3962, file: !134, line: 96, column: 71)
!3967 = !DILocation(line: 97, column: 7, scope: !3966)
!3968 = !DILocation(line: 96, column: 52, scope: !3962)
!3969 = distinct !{!3969, !3963, !3970}
!3970 = !DILocation(line: 100, column: 2, scope: !3960)
!3971 = !DILocation(line: 0, scope: !3960)
!3972 = !DILocation(line: 101, column: 8, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3907, file: !134, line: 101, column: 6)
!3974 = !DILocation(line: 101, column: 6, scope: !3907)
!3975 = !DILocation(line: 112, column: 2, scope: !3907)
!3976 = !DILocation(line: 113, column: 2, scope: !3907)
!3977 = !DILocation(line: 113, column: 26, scope: !3907)
!3978 = !DILocation(line: 115, column: 2, scope: !3907)
!3979 = !DILocation(line: 116, column: 2, scope: !3907)
!3980 = !DILocation(line: 117, column: 12, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3907, file: !134, line: 117, column: 6)
!3982 = !DILocation(line: 117, column: 31, scope: !3981)
!3983 = !DILocation(line: 117, column: 28, scope: !3981)
!3984 = !DILocation(line: 117, column: 48, scope: !3981)
!3985 = !DILocation(line: 118, column: 12, scope: !3981)
!3986 = !DILocation(line: 118, column: 26, scope: !3981)
!3987 = !DILocation(line: 118, column: 23, scope: !3981)
!3988 = !DILocation(line: 117, column: 6, scope: !3907)
!3989 = !DILocation(line: 0, scope: !3943)
!3990 = !DILocation(line: 127, column: 40, scope: !3946)
!3991 = !DILocation(line: 127, column: 23, scope: !3946)
!3992 = !DILocation(line: 127, column: 20, scope: !3946)
!3993 = !DILocation(line: 127, column: 2, scope: !3943)
!3994 = !DILocation(line: 128, column: 32, scope: !3945)
!3995 = !DILocation(line: 0, scope: !3945)
!3996 = !DILocation(line: 133, column: 18, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !134, line: 133, column: 3)
!3998 = distinct !DILexicalBlock(scope: !3945, file: !134, line: 133, column: 3)
!3999 = !DILocation(line: 133, column: 23, scope: !3997)
!4000 = !DILocation(line: 141, column: 20, scope: !3945)
!4001 = !DILocation(line: 141, column: 36, scope: !3945)
!4002 = !DILocation(line: 141, column: 34, scope: !3945)
!4003 = !DILocation(line: 141, column: 44, scope: !3945)
!4004 = !DILocation(line: 144, column: 7, scope: !3945)
!4005 = !DILocation(line: 133, column: 29, scope: !3997)
!4006 = !DILocation(line: 133, column: 34, scope: !3997)
!4007 = !DILocation(line: 133, column: 3, scope: !3998)
!4008 = !DILocation(line: 135, column: 9, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4010, file: !134, line: 135, column: 8)
!4010 = distinct !DILexicalBlock(scope: !3997, file: !134, line: 134, column: 40)
!4011 = !DILocation(line: 135, column: 8, scope: !4010)
!4012 = !DILocation(line: 138, column: 4, scope: !4010)
!4013 = !DILocation(line: 134, column: 9, scope: !3997)
!4014 = !DILocation(line: 134, column: 17, scope: !3997)
!4015 = distinct !{!4015, !4007, !4016}
!4016 = !DILocation(line: 139, column: 3, scope: !3998)
!4017 = !DILocation(line: 142, column: 17, scope: !3945)
!4018 = !DILocation(line: 144, column: 13, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3945, file: !134, line: 144, column: 7)
!4020 = !DILocation(line: 148, column: 13, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !3945, file: !134, line: 148, column: 7)
!4022 = !DILocation(line: 148, column: 30, scope: !4021)
!4023 = !DILocation(line: 148, column: 35, scope: !4021)
!4024 = !DILocation(line: 148, column: 7, scope: !3945)
!4025 = !DILocation(line: 127, column: 53, scope: !3946)
!4026 = distinct !{!4026, !3993, !4027}
!4027 = !DILocation(line: 151, column: 2, scope: !3943)
!4028 = !DILocation(line: 160, column: 37, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !134, line: 160, column: 2)
!4030 = distinct !DILexicalBlock(scope: !3907, file: !134, line: 160, column: 2)
!4031 = !DILocation(line: 160, column: 11, scope: !4030)
!4032 = !DILocation(line: 160, column: 32, scope: !4029)
!4033 = !DILocation(line: 160, column: 2, scope: !4030)
!4034 = !DILocation(line: 161, column: 8, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !134, line: 161, column: 7)
!4036 = distinct !DILexicalBlock(scope: !4029, file: !134, line: 160, column: 71)
!4037 = !DILocation(line: 161, column: 25, scope: !4035)
!4038 = !DILocation(line: 164, column: 7, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4036, file: !134, line: 164, column: 7)
!4040 = !DILocation(line: 164, column: 24, scope: !4039)
!4041 = !DILocation(line: 164, column: 7, scope: !4036)
!4042 = !DILocation(line: 169, column: 3, scope: !4036)
!4043 = !DILocation(line: 160, column: 52, scope: !4029)
!4044 = distinct !{!4044, !4033, !4045}
!4045 = !DILocation(line: 170, column: 2, scope: !4030)
!4046 = !DILocation(line: 0, scope: !4030)
!4047 = !DILocation(line: 171, column: 8, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3907, file: !134, line: 171, column: 6)
!4049 = !DILocation(line: 171, column: 6, scope: !3907)
!4050 = !DILocation(line: 0, scope: !3952)
!4051 = !DILocation(line: 179, column: 23, scope: !3955)
!4052 = !DILocation(line: 179, column: 20, scope: !3955)
!4053 = !DILocation(line: 179, column: 2, scope: !3952)
!4054 = !DILocation(line: 180, column: 32, scope: !3954)
!4055 = !DILocation(line: 0, scope: !3954)
!4056 = !DILocation(line: 183, column: 10, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !3954, file: !134, line: 183, column: 7)
!4058 = !DILocation(line: 183, column: 7, scope: !3954)
!4059 = !DILocation(line: 188, column: 8, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !134, line: 188, column: 8)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !134, line: 187, column: 67)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !134, line: 187, column: 3)
!4063 = distinct !DILexicalBlock(scope: !3954, file: !134, line: 187, column: 3)
!4064 = !DILocation(line: 188, column: 8, scope: !4061)
!4065 = !DILocation(line: 191, column: 4, scope: !4061)
!4066 = !DILocation(line: 187, column: 44, scope: !4062)
!4067 = !DILocation(line: 187, column: 23, scope: !4062)
!4068 = !DILocation(line: 187, column: 3, scope: !4063)
!4069 = distinct !{!4069, !4068, !4070}
!4070 = !DILocation(line: 192, column: 3, scope: !4063)
!4071 = !DILocation(line: 179, column: 40, scope: !3955)
!4072 = !DILocation(line: 179, column: 53, scope: !3955)
!4073 = distinct !{!4073, !4053, !4074}
!4074 = !DILocation(line: 193, column: 2, scope: !3952)
!4075 = !DILocation(line: 198, column: 37, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !134, line: 198, column: 2)
!4077 = distinct !DILexicalBlock(scope: !3907, file: !134, line: 198, column: 2)
!4078 = !DILocation(line: 198, column: 11, scope: !4077)
!4079 = !DILocation(line: 198, column: 32, scope: !4076)
!4080 = !DILocation(line: 198, column: 2, scope: !4077)
!4081 = !DILocation(line: 199, column: 25, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4076, file: !134, line: 198, column: 71)
!4083 = !DILocation(line: 199, column: 24, scope: !4082)
!4084 = !DILocation(line: 199, column: 3, scope: !4082)
!4085 = !DILocation(line: 198, column: 52, scope: !4076)
!4086 = distinct !{!4086, !4080, !4087}
!4087 = !DILocation(line: 200, column: 2, scope: !4077)
!4088 = !DILocation(line: 202, column: 1, scope: !3907)
!4089 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !4090, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4092)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!2037, !3914, !2037}
!4092 = !{!4093, !4094}
!4093 = !DILocalVariable(name: "h", arg: 1, scope: !4089, file: !142, line: 204, type: !3914)
!4094 = !DILocalVariable(name: "c", arg: 2, scope: !4089, file: !142, line: 204, type: !2037)
!4095 = !DILocation(line: 0, scope: !4089)
!4096 = !DILocation(line: 206, column: 13, scope: !4089)
!4097 = !DILocation(line: 206, column: 11, scope: !4089)
!4098 = !DILocation(line: 206, column: 2, scope: !4089)
!4099 = distinct !DISubprogram(name: "valid_chunk", scope: !134, file: !134, line: 31, type: !4100, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4102)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!636, !3914, !2037}
!4102 = !{!4103, !4104}
!4103 = !DILocalVariable(name: "h", arg: 1, scope: !4099, file: !134, line: 31, type: !3914)
!4104 = !DILocalVariable(name: "c", arg: 2, scope: !4099, file: !134, line: 31, type: !2037)
!4105 = !DILocation(line: 0, scope: !4099)
!4106 = !DILocation(line: 33, column: 2, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !134, line: 33, column: 2)
!4108 = distinct !DILexicalBlock(scope: !4099, file: !134, line: 33, column: 2)
!4109 = !DILocation(line: 33, column: 2, scope: !4108)
!4110 = !DILocation(line: 34, column: 2, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !134, line: 34, column: 2)
!4112 = distinct !DILexicalBlock(scope: !4099, file: !134, line: 34, column: 2)
!4113 = !DILocation(line: 34, column: 2, scope: !4112)
!4114 = !DILocation(line: 35, column: 2, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4116, file: !134, line: 35, column: 2)
!4116 = distinct !DILexicalBlock(scope: !4099, file: !134, line: 35, column: 2)
!4117 = !DILocation(line: 35, column: 2, scope: !4116)
!4118 = !DILocation(line: 36, column: 2, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !134, line: 36, column: 2)
!4120 = distinct !DILexicalBlock(scope: !4099, file: !134, line: 36, column: 2)
!4121 = !DILocation(line: 36, column: 2, scope: !4120)
!4122 = !DILocation(line: 37, column: 2, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4124, file: !134, line: 37, column: 2)
!4124 = distinct !DILexicalBlock(scope: !4099, file: !134, line: 37, column: 2)
!4125 = !DILocation(line: 37, column: 2, scope: !4124)
!4126 = !DILocation(line: 38, column: 6, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4099, file: !134, line: 38, column: 6)
!4128 = !DILocation(line: 38, column: 6, scope: !4099)
!4129 = !DILocation(line: 41, column: 3, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !134, line: 41, column: 3)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !134, line: 41, column: 3)
!4132 = distinct !DILexicalBlock(scope: !4127, file: !134, line: 40, column: 9)
!4133 = !DILocation(line: 41, column: 3, scope: !4131)
!4134 = !DILocation(line: 42, column: 3, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !134, line: 42, column: 3)
!4136 = distinct !DILexicalBlock(scope: !4132, file: !134, line: 42, column: 3)
!4137 = !DILocation(line: 42, column: 3, scope: !4136)
!4138 = !DILocation(line: 44, column: 4, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !134, line: 44, column: 4)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !134, line: 44, column: 4)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !134, line: 43, column: 32)
!4142 = distinct !DILexicalBlock(scope: !4132, file: !134, line: 43, column: 7)
!4143 = !DILocation(line: 44, column: 4, scope: !4140)
!4144 = !DILocation(line: 45, column: 4, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !134, line: 45, column: 4)
!4146 = distinct !DILexicalBlock(scope: !4141, file: !134, line: 45, column: 4)
!4147 = !DILocation(line: 45, column: 4, scope: !4146)
!4148 = !DILocation(line: 48, column: 2, scope: !4099)
!4149 = !DILocation(line: 49, column: 1, scope: !4099)
!4150 = distinct !DISubprogram(name: "get_alloc_info", scope: !134, file: !134, line: 71, type: !4151, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4153)
!4151 = !DISubroutineType(types: !4152)
!4152 = !{null, !3914, !2085, !2085}
!4153 = !{!4154, !4155, !4156, !4157}
!4154 = !DILocalVariable(name: "h", arg: 1, scope: !4150, file: !134, line: 71, type: !3914)
!4155 = !DILocalVariable(name: "alloc_bytes", arg: 2, scope: !4150, file: !134, line: 71, type: !2085)
!4156 = !DILocalVariable(name: "free_bytes", arg: 3, scope: !4150, file: !134, line: 72, type: !2085)
!4157 = !DILocalVariable(name: "c", scope: !4150, file: !134, line: 74, type: !2037)
!4158 = !DILocation(line: 0, scope: !4150)
!4159 = !DILocation(line: 76, column: 15, scope: !4150)
!4160 = !DILocation(line: 77, column: 14, scope: !4150)
!4161 = !DILocation(line: 79, column: 11, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4150, file: !134, line: 79, column: 2)
!4163 = !DILocation(line: 79, column: 37, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4162, file: !134, line: 79, column: 2)
!4165 = !DILocation(line: 79, column: 32, scope: !4164)
!4166 = !DILocation(line: 79, column: 2, scope: !4162)
!4167 = !DILocation(line: 80, column: 7, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !134, line: 80, column: 7)
!4169 = distinct !DILexicalBlock(scope: !4164, file: !134, line: 79, column: 71)
!4170 = !DILocation(line: 0, scope: !4168)
!4171 = !DILocation(line: 79, column: 52, scope: !4164)
!4172 = distinct !{!4172, !4166, !4173}
!4173 = !DILocation(line: 85, column: 2, scope: !4162)
!4174 = !DILocation(line: 86, column: 1, scope: !4150)
!4175 = distinct !DISubprogram(name: "sys_heap_runtime_stats_get", scope: !134, file: !134, line: 416, type: !4176, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4179)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{!103, !3910, !4178}
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 32)
!4179 = !{!4180, !4181}
!4180 = !DILocalVariable(name: "heap", arg: 1, scope: !4175, file: !134, line: 416, type: !3910)
!4181 = !DILocalVariable(name: "stats", arg: 2, scope: !4175, file: !134, line: 417, type: !4178)
!4182 = !DILocation(line: 0, scope: !4175)
!4183 = !DILocation(line: 419, column: 12, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4175, file: !134, line: 419, column: 6)
!4185 = !DILocation(line: 419, column: 21, scope: !4184)
!4186 = !DILocation(line: 423, column: 28, scope: !4175)
!4187 = !DILocation(line: 423, column: 34, scope: !4175)
!4188 = !DILocation(line: 423, column: 9, scope: !4175)
!4189 = !DILocation(line: 423, column: 20, scope: !4175)
!4190 = !DILocation(line: 424, column: 33, scope: !4175)
!4191 = !DILocation(line: 424, column: 39, scope: !4175)
!4192 = !DILocation(line: 424, column: 9, scope: !4175)
!4193 = !DILocation(line: 424, column: 25, scope: !4175)
!4194 = !DILocation(line: 425, column: 37, scope: !4175)
!4195 = !DILocation(line: 425, column: 43, scope: !4175)
!4196 = !DILocation(line: 425, column: 9, scope: !4175)
!4197 = !DILocation(line: 425, column: 29, scope: !4175)
!4198 = !DILocation(line: 427, column: 2, scope: !4175)
!4199 = !DILocation(line: 428, column: 1, scope: !4175)
!4200 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !4201, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4203)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!103, !3914, !3186}
!4203 = !{!4204, !4205, !4206}
!4204 = !DILocalVariable(name: "h", arg: 1, scope: !4200, file: !142, line: 250, type: !3914)
!4205 = !DILocalVariable(name: "sz", arg: 2, scope: !4200, file: !142, line: 250, type: !3186)
!4206 = !DILocalVariable(name: "usable_sz", scope: !4200, file: !142, line: 252, type: !32)
!4207 = !DILocation(line: 0, scope: !4200)
!4208 = !DILocation(line: 253, column: 14, scope: !4200)
!4209 = !DILocation(line: 253, column: 12, scope: !4200)
!4210 = !DILocation(line: 253, column: 2, scope: !4200)
!4211 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !4212, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4214)
!4212 = !DISubroutineType(types: !4213)
!4213 = !{null, !3914, !2037, !636}
!4214 = !{!4215, !4216, !4217, !4218, !4219}
!4215 = !DILocalVariable(name: "h", arg: 1, scope: !4211, file: !142, line: 147, type: !3914)
!4216 = !DILocalVariable(name: "c", arg: 2, scope: !4211, file: !142, line: 147, type: !2037)
!4217 = !DILocalVariable(name: "used", arg: 3, scope: !4211, file: !142, line: 147, type: !636)
!4218 = !DILocalVariable(name: "buf", scope: !4211, file: !142, line: 149, type: !153)
!4219 = !DILocalVariable(name: "cmem", scope: !4211, file: !142, line: 150, type: !102)
!4220 = !DILocation(line: 0, scope: !4211)
!4221 = !DILocation(line: 149, column: 22, scope: !4211)
!4222 = !DILocation(line: 0, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !142, line: 159, column: 7)
!4224 = distinct !DILexicalBlock(scope: !4225, file: !142, line: 158, column: 9)
!4225 = distinct !DILexicalBlock(scope: !4211, file: !142, line: 152, column: 6)
!4226 = !DILocation(line: 159, column: 7, scope: !4224)
!4227 = !DILocation(line: 165, column: 1, scope: !4211)
!4228 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !4090, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4229)
!4229 = !{!4230, !4231}
!4230 = !DILocalVariable(name: "h", arg: 1, scope: !4228, file: !142, line: 182, type: !3914)
!4231 = !DILocalVariable(name: "c", arg: 2, scope: !4228, file: !142, line: 182, type: !2037)
!4232 = !DILocation(line: 0, scope: !4228)
!4233 = !DILocation(line: 184, column: 9, scope: !4228)
!4234 = !DILocation(line: 184, column: 2, scope: !4228)
!4235 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !4100, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4236)
!4236 = !{!4237, !4238}
!4237 = !DILocalVariable(name: "h", arg: 1, scope: !4235, file: !142, line: 137, type: !3914)
!4238 = !DILocalVariable(name: "c", arg: 2, scope: !4235, file: !142, line: 137, type: !2037)
!4239 = !DILocation(line: 0, scope: !4235)
!4240 = !DILocation(line: 139, column: 9, scope: !4235)
!4241 = !DILocation(line: 139, column: 42, scope: !4235)
!4242 = !DILocation(line: 139, column: 2, scope: !4235)
!4243 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !4090, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4244)
!4244 = !{!4245, !4246}
!4245 = !DILocalVariable(name: "h", arg: 1, scope: !4243, file: !142, line: 199, type: !3914)
!4246 = !DILocalVariable(name: "c", arg: 2, scope: !4243, file: !142, line: 199, type: !2037)
!4247 = !DILocation(line: 0, scope: !4243)
!4248 = !DILocation(line: 201, column: 13, scope: !4243)
!4249 = !DILocation(line: 201, column: 11, scope: !4243)
!4250 = !DILocation(line: 201, column: 2, scope: !4243)
!4251 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !4252, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4254)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!2037, !3914, !2037, !141}
!4254 = !{!4255, !4256, !4257, !4258, !4259}
!4255 = !DILocalVariable(name: "h", arg: 1, scope: !4251, file: !142, line: 107, type: !3914)
!4256 = !DILocalVariable(name: "c", arg: 2, scope: !4251, file: !142, line: 107, type: !2037)
!4257 = !DILocalVariable(name: "f", arg: 3, scope: !4251, file: !142, line: 108, type: !141)
!4258 = !DILocalVariable(name: "buf", scope: !4251, file: !142, line: 110, type: !153)
!4259 = !DILocalVariable(name: "cmem", scope: !4251, file: !142, line: 111, type: !102)
!4260 = !DILocation(line: 0, scope: !4251)
!4261 = !DILocation(line: 110, column: 22, scope: !4251)
!4262 = !DILocation(line: 111, column: 15, scope: !4251)
!4263 = !DILocation(line: 116, column: 11, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !142, line: 115, column: 9)
!4265 = distinct !DILexicalBlock(scope: !4251, file: !142, line: 113, column: 6)
!4266 = !DILocation(line: 116, column: 10, scope: !4264)
!4267 = !DILocation(line: 118, column: 1, scope: !4251)
!4268 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !4269, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4271)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!153, !3914}
!4271 = !{!4272}
!4272 = !DILocalVariable(name: "h", arg: 1, scope: !4268, file: !142, line: 101, type: !3914)
!4273 = !DILocation(line: 0, scope: !4268)
!4274 = !DILocation(line: 104, column: 9, scope: !4268)
!4275 = !DILocation(line: 104, column: 2, scope: !4268)
!4276 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !4277, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4279)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!3186, !3914, !2037}
!4279 = !{!4280, !4281}
!4280 = !DILocalVariable(name: "h", arg: 1, scope: !4276, file: !142, line: 142, type: !3914)
!4281 = !DILocalVariable(name: "c", arg: 2, scope: !4276, file: !142, line: 142, type: !2037)
!4282 = !DILocation(line: 0, scope: !4276)
!4283 = !DILocation(line: 144, column: 9, scope: !4276)
!4284 = !DILocation(line: 144, column: 42, scope: !4276)
!4285 = !DILocation(line: 144, column: 2, scope: !4276)
!4286 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !4287, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4289)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!120, !3914, !3186}
!4289 = !{!4290, !4291}
!4290 = !DILocalVariable(name: "h", arg: 1, scope: !4286, file: !142, line: 245, type: !3914)
!4291 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4286, file: !142, line: 245, type: !3186)
!4292 = !DILocation(line: 0, scope: !4286)
!4293 = !DILocation(line: 247, column: 20, scope: !4286)
!4294 = !DILocation(line: 247, column: 33, scope: !4286)
!4295 = !DILocation(line: 247, column: 2, scope: !4286)
!4296 = distinct !DISubprogram(name: "in_bounds", scope: !134, file: !134, line: 23, type: !4100, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4297)
!4297 = !{!4298, !4299}
!4298 = !DILocalVariable(name: "h", arg: 1, scope: !4296, file: !134, line: 23, type: !3914)
!4299 = !DILocalVariable(name: "c", arg: 2, scope: !4296, file: !134, line: 23, type: !2037)
!4300 = !DILocation(line: 0, scope: !4296)
!4301 = !DILocation(line: 25, column: 2, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4303, file: !134, line: 25, column: 2)
!4303 = distinct !DILexicalBlock(scope: !4296, file: !134, line: 25, column: 2)
!4304 = !DILocation(line: 25, column: 2, scope: !4303)
!4305 = !DILocation(line: 26, column: 2, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !134, line: 26, column: 2)
!4307 = distinct !DILexicalBlock(scope: !4296, file: !134, line: 26, column: 2)
!4308 = !DILocation(line: 26, column: 2, scope: !4307)
!4309 = !DILocation(line: 27, column: 2, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !134, line: 27, column: 2)
!4311 = distinct !DILexicalBlock(scope: !4296, file: !134, line: 27, column: 2)
!4312 = !DILocation(line: 29, column: 1, scope: !4296)
!4313 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !4090, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4314)
!4314 = !{!4315, !4316}
!4315 = !DILocalVariable(name: "h", arg: 1, scope: !4313, file: !142, line: 177, type: !3914)
!4316 = !DILocalVariable(name: "c", arg: 2, scope: !4313, file: !142, line: 177, type: !2037)
!4317 = !DILocation(line: 0, scope: !4313)
!4318 = !DILocation(line: 179, column: 9, scope: !4313)
!4319 = !DILocation(line: 179, column: 2, scope: !4313)
!4320 = distinct !DISubprogram(name: "sys_heap_stress", scope: !134, file: !134, line: 300, type: !4321, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4336)
!4321 = !DISubroutineType(types: !4322)
!4322 = !{null, !4323, !4326, !102, !120, !137, !102, !120, !103, !4329}
!4323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4324, size: 32)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{!102, !102, !120}
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 32)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{null, !102, !102}
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 32)
!4330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_result", file: !113, line: 62, size: 192, elements: !4331)
!4331 = !{!4332, !4333, !4334, !4335}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocs", scope: !4330, file: !113, line: 63, baseType: !137, size: 32)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "successful_allocs", scope: !4330, file: !113, line: 64, baseType: !137, size: 32, offset: 32)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "total_frees", scope: !4330, file: !113, line: 65, baseType: !137, size: 32, offset: 64)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "accumulated_in_use_bytes", scope: !4330, file: !113, line: 66, baseType: !163, size: 64, offset: 128)
!4336 = !{!4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4363, !4365, !4370, !4371, !4373, !4374}
!4337 = !DILocalVariable(name: "alloc_fn", arg: 1, scope: !4320, file: !134, line: 300, type: !4323)
!4338 = !DILocalVariable(name: "free_fn", arg: 2, scope: !4320, file: !134, line: 301, type: !4326)
!4339 = !DILocalVariable(name: "arg", arg: 3, scope: !4320, file: !134, line: 302, type: !102)
!4340 = !DILocalVariable(name: "total_bytes", arg: 4, scope: !4320, file: !134, line: 302, type: !120)
!4341 = !DILocalVariable(name: "op_count", arg: 5, scope: !4320, file: !134, line: 303, type: !137)
!4342 = !DILocalVariable(name: "scratch_mem", arg: 6, scope: !4320, file: !134, line: 304, type: !102)
!4343 = !DILocalVariable(name: "scratch_bytes", arg: 7, scope: !4320, file: !134, line: 304, type: !120)
!4344 = !DILocalVariable(name: "target_percent", arg: 8, scope: !4320, file: !134, line: 305, type: !103)
!4345 = !DILocalVariable(name: "result", arg: 9, scope: !4320, file: !134, line: 306, type: !4329)
!4346 = !DILocalVariable(name: "sr", scope: !4320, file: !134, line: 308, type: !4347)
!4347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_rec", file: !134, line: 204, size: 288, elements: !4348)
!4348 = !{!4349, !4350, !4351, !4352, !4353, !4359, !4360, !4361, !4362}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !4347, file: !134, line: 205, baseType: !4323, size: 32)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !4347, file: !134, line: 206, baseType: !4326, size: 32, offset: 32)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4347, file: !134, line: 207, baseType: !102, size: 32, offset: 64)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !4347, file: !134, line: 208, baseType: !120, size: 32, offset: 96)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4347, file: !134, line: 209, baseType: !4354, size: 32, offset: 128)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 32)
!4355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_block", file: !134, line: 216, size: 64, elements: !4356)
!4356 = !{!4357, !4358}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4355, file: !134, line: 217, baseType: !102, size: 32)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !4355, file: !134, line: 218, baseType: !120, size: 32, offset: 32)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "nblocks", scope: !4347, file: !134, line: 210, baseType: !120, size: 32, offset: 160)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_alloced", scope: !4347, file: !134, line: 211, baseType: !120, size: 32, offset: 192)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_alloced", scope: !4347, file: !134, line: 212, baseType: !120, size: 32, offset: 224)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "target_percent", scope: !4347, file: !134, line: 213, baseType: !137, size: 32, offset: 256)
!4363 = !DILocalVariable(name: "i", scope: !4364, file: !134, line: 320, type: !137)
!4364 = distinct !DILexicalBlock(scope: !4320, file: !134, line: 320, column: 2)
!4365 = !DILocalVariable(name: "sz", scope: !4366, file: !134, line: 322, type: !120)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !134, line: 321, column: 31)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !134, line: 321, column: 7)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !134, line: 320, column: 42)
!4369 = distinct !DILexicalBlock(scope: !4364, file: !134, line: 320, column: 2)
!4370 = !DILocalVariable(name: "p", scope: !4366, file: !134, line: 323, type: !102)
!4371 = !DILocalVariable(name: "b", scope: !4372, file: !134, line: 334, type: !103)
!4372 = distinct !DILexicalBlock(scope: !4367, file: !134, line: 333, column: 10)
!4373 = !DILocalVariable(name: "p", scope: !4372, file: !134, line: 335, type: !102)
!4374 = !DILocalVariable(name: "sz", scope: !4372, file: !134, line: 336, type: !120)
!4375 = !DILocation(line: 0, scope: !4320)
!4376 = !DILocation(line: 308, column: 2, scope: !4320)
!4377 = !DILocation(line: 308, column: 27, scope: !4320)
!4378 = !DILocation(line: 308, column: 32, scope: !4320)
!4379 = !DILocation(line: 314, column: 34, scope: !4320)
!4380 = !DILocation(line: 318, column: 12, scope: !4320)
!4381 = !DILocation(line: 0, scope: !4364)
!4382 = !DILocation(line: 320, column: 25, scope: !4369)
!4383 = !DILocation(line: 320, column: 2, scope: !4364)
!4384 = !DILocation(line: 346, column: 1, scope: !4320)
!4385 = !DILocation(line: 321, column: 7, scope: !4367)
!4386 = !DILocation(line: 321, column: 7, scope: !4368)
!4387 = !DILocation(line: 322, column: 16, scope: !4366)
!4388 = !DILocation(line: 0, scope: !4366)
!4389 = !DILocation(line: 323, column: 14, scope: !4366)
!4390 = !DILocation(line: 325, column: 24, scope: !4366)
!4391 = !DILocation(line: 326, column: 10, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4366, file: !134, line: 326, column: 8)
!4393 = !DILocation(line: 326, column: 8, scope: !4366)
!4394 = !DILocation(line: 327, column: 30, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4392, file: !134, line: 326, column: 19)
!4396 = !DILocation(line: 328, column: 34, scope: !4395)
!4397 = !DILocation(line: 328, column: 38, scope: !4395)
!4398 = !DILocation(line: 329, column: 34, scope: !4395)
!4399 = !DILocation(line: 329, column: 37, scope: !4395)
!4400 = !DILocation(line: 330, column: 22, scope: !4395)
!4401 = !DILocation(line: 331, column: 22, scope: !4395)
!4402 = !DILocation(line: 332, column: 4, scope: !4395)
!4403 = !DILocation(line: 334, column: 12, scope: !4372)
!4404 = !DILocation(line: 0, scope: !4372)
!4405 = !DILocation(line: 335, column: 27, scope: !4372)
!4406 = !DILocation(line: 336, column: 29, scope: !4372)
!4407 = !DILocation(line: 338, column: 23, scope: !4372)
!4408 = !DILocation(line: 339, column: 4, scope: !4372)
!4409 = !DILocation(line: 339, column: 47, scope: !4372)
!4410 = !DILocation(line: 339, column: 19, scope: !4372)
!4411 = !DILocation(line: 340, column: 21, scope: !4372)
!4412 = !DILocation(line: 341, column: 21, scope: !4372)
!4413 = !DILocation(line: 342, column: 4, scope: !4372)
!4414 = !DILocation(line: 344, column: 42, scope: !4368)
!4415 = !DILocation(line: 344, column: 39, scope: !4368)
!4416 = !DILocation(line: 344, column: 36, scope: !4368)
!4417 = !DILocation(line: 320, column: 38, scope: !4369)
!4418 = distinct !{!4418, !4383, !4419}
!4419 = !DILocation(line: 345, column: 2, scope: !4364)
!4420 = distinct !DISubprogram(name: "rand_alloc_choice", scope: !134, file: !134, line: 234, type: !4421, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4424)
!4421 = !DISubroutineType(types: !4422)
!4422 = !{!636, !4423}
!4423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 32)
!4424 = !{!4425, !4426, !4430, !4431}
!4425 = !DILocalVariable(name: "sr", arg: 1, scope: !4420, file: !134, line: 234, type: !4423)
!4426 = !DILocalVariable(name: "full_pct", scope: !4427, file: !134, line: 259, type: !137)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !134, line: 241, column: 9)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !134, line: 239, column: 13)
!4429 = distinct !DILexicalBlock(scope: !4420, file: !134, line: 237, column: 6)
!4430 = !DILocalVariable(name: "target", scope: !4427, file: !134, line: 260, type: !137)
!4431 = !DILocalVariable(name: "free_chance", scope: !4427, file: !134, line: 261, type: !137)
!4432 = !DILocation(line: 0, scope: !4420)
!4433 = !DILocation(line: 237, column: 10, scope: !4429)
!4434 = !DILocation(line: 237, column: 25, scope: !4429)
!4435 = !DILocation(line: 237, column: 6, scope: !4420)
!4436 = !DILocation(line: 239, column: 39, scope: !4428)
!4437 = !DILocation(line: 239, column: 32, scope: !4428)
!4438 = !DILocation(line: 239, column: 13, scope: !4429)
!4439 = !DILocation(line: 259, column: 34, scope: !4427)
!4440 = !DILocation(line: 259, column: 28, scope: !4427)
!4441 = !DILocation(line: 259, column: 55, scope: !4427)
!4442 = !DILocation(line: 259, column: 49, scope: !4427)
!4443 = !DILocation(line: 0, scope: !4427)
!4444 = !DILocation(line: 260, column: 25, scope: !4427)
!4445 = !DILocation(line: 263, column: 16, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4427, file: !134, line: 263, column: 7)
!4447 = !DILocation(line: 263, column: 7, scope: !4427)
!4448 = !DILocation(line: 264, column: 42, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4446, file: !134, line: 263, column: 38)
!4450 = !DILocation(line: 264, column: 27, scope: !4449)
!4451 = !DILocation(line: 265, column: 3, scope: !4449)
!4452 = !DILocation(line: 267, column: 10, scope: !4427)
!4453 = !DILocation(line: 267, column: 19, scope: !4427)
!4454 = !DILocation(line: 0, scope: !4429)
!4455 = !DILocation(line: 269, column: 1, scope: !4420)
!4456 = distinct !DISubprogram(name: "rand_alloc_size", scope: !134, file: !134, line: 274, type: !4457, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4459)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!120, !4423}
!4459 = !{!4460, !4461}
!4460 = !DILocalVariable(name: "sr", arg: 1, scope: !4456, file: !134, line: 274, type: !4423)
!4461 = !DILocalVariable(name: "scale", scope: !4456, file: !134, line: 281, type: !103)
!4462 = !DILocation(line: 0, scope: !4456)
!4463 = !DILocation(line: 281, column: 32, scope: !4456)
!4464 = !DILocation(line: 281, column: 18, scope: !4456)
!4465 = !DILocation(line: 283, column: 9, scope: !4456)
!4466 = !DILocation(line: 283, column: 20, scope: !4456)
!4467 = !DILocation(line: 283, column: 18, scope: !4456)
!4468 = !DILocation(line: 283, column: 2, scope: !4456)
!4469 = distinct !DISubprogram(name: "rand_free_choice", scope: !134, file: !134, line: 287, type: !4457, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4470)
!4470 = !{!4471}
!4471 = !DILocalVariable(name: "sr", arg: 1, scope: !4469, file: !134, line: 287, type: !4423)
!4472 = !DILocation(line: 0, scope: !4469)
!4473 = !DILocation(line: 289, column: 9, scope: !4469)
!4474 = !DILocation(line: 289, column: 24, scope: !4469)
!4475 = !DILocation(line: 289, column: 18, scope: !4469)
!4476 = !DILocation(line: 289, column: 2, scope: !4469)
!4477 = !DILocation(line: 229, column: 10, scope: !133)
!4478 = !DILocation(line: 229, column: 16, scope: !133)
!4479 = !DILocation(line: 229, column: 40, scope: !133)
!4480 = !DILocation(line: 229, column: 8, scope: !133)
!4481 = !DILocation(line: 231, column: 26, scope: !133)
!4482 = !DILocation(line: 231, column: 9, scope: !133)
!4483 = !DILocation(line: 231, column: 2, scope: !133)
!4484 = distinct !DISubprogram(name: "heap_print_info", scope: !134, file: !134, line: 351, type: !4485, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4487)
!4485 = !DISubroutineType(types: !4486)
!4486 = !{null, !3914, !636}
!4487 = !{!4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4500, !4501, !4502, !4505}
!4488 = !DILocalVariable(name: "h", arg: 1, scope: !4484, file: !134, line: 351, type: !3914)
!4489 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4484, file: !134, line: 351, type: !636)
!4490 = !DILocalVariable(name: "i", scope: !4484, file: !134, line: 353, type: !103)
!4491 = !DILocalVariable(name: "nb_buckets", scope: !4484, file: !134, line: 353, type: !103)
!4492 = !DILocalVariable(name: "free_bytes", scope: !4484, file: !134, line: 354, type: !120)
!4493 = !DILocalVariable(name: "allocated_bytes", scope: !4484, file: !134, line: 354, type: !120)
!4494 = !DILocalVariable(name: "total", scope: !4484, file: !134, line: 354, type: !120)
!4495 = !DILocalVariable(name: "overhead", scope: !4484, file: !134, line: 354, type: !120)
!4496 = !DILocalVariable(name: "first", scope: !4497, file: !134, line: 363, type: !2037)
!4497 = distinct !DILexicalBlock(scope: !4498, file: !134, line: 362, column: 35)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !134, line: 362, column: 2)
!4499 = distinct !DILexicalBlock(scope: !4484, file: !134, line: 362, column: 2)
!4500 = !DILocalVariable(name: "largest", scope: !4497, file: !134, line: 364, type: !3186)
!4501 = !DILocalVariable(name: "count", scope: !4497, file: !134, line: 365, type: !103)
!4502 = !DILocalVariable(name: "curr", scope: !4503, file: !134, line: 368, type: !2037)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !134, line: 367, column: 14)
!4504 = distinct !DILexicalBlock(scope: !4497, file: !134, line: 367, column: 7)
!4505 = !DILocalVariable(name: "c", scope: !4506, file: !134, line: 384, type: !2037)
!4506 = distinct !DILexicalBlock(scope: !4507, file: !134, line: 384, column: 3)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !134, line: 382, column: 19)
!4508 = distinct !DILexicalBlock(scope: !4484, file: !134, line: 382, column: 6)
!4509 = !DILocation(line: 0, scope: !4484)
!4510 = !DILocation(line: 353, column: 39, scope: !4484)
!4511 = !DILocation(line: 353, column: 22, scope: !4484)
!4512 = !DILocation(line: 353, column: 50, scope: !4484)
!4513 = !DILocation(line: 354, column: 2, scope: !4484)
!4514 = !DILocation(line: 357, column: 9, scope: !4484)
!4515 = !DILocation(line: 356, column: 2, scope: !4484)
!4516 = !DILocation(line: 359, column: 2, scope: !4484)
!4517 = !DILocation(line: 362, column: 16, scope: !4498)
!4518 = !DILocation(line: 362, column: 2, scope: !4499)
!4519 = !DILocation(line: 363, column: 35, scope: !4497)
!4520 = !DILocation(line: 0, scope: !4497)
!4521 = !DILocation(line: 367, column: 7, scope: !4504)
!4522 = !DILocation(line: 367, column: 7, scope: !4497)
!4523 = !DILocation(line: 0, scope: !4503)
!4524 = !DILocation(line: 370, column: 10, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4503, file: !134, line: 369, column: 7)
!4526 = !DILocation(line: 371, column: 15, scope: !4525)
!4527 = !DILocation(line: 372, column: 12, scope: !4525)
!4528 = !DILocation(line: 373, column: 18, scope: !4503)
!4529 = !DILocation(line: 373, column: 4, scope: !4525)
!4530 = distinct !{!4530, !4531, !4532}
!4531 = !DILocation(line: 369, column: 4, scope: !4503)
!4532 = !DILocation(line: 373, column: 26, scope: !4503)
!4533 = !DILocation(line: 377, column: 23, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !134, line: 375, column: 14)
!4535 = distinct !DILexicalBlock(scope: !4497, file: !134, line: 375, column: 7)
!4536 = !DILocation(line: 378, column: 20, scope: !4534)
!4537 = !DILocation(line: 376, column: 4, scope: !4534)
!4538 = !DILocation(line: 379, column: 3, scope: !4534)
!4539 = !DILocation(line: 362, column: 31, scope: !4498)
!4540 = distinct !{!4540, !4518, !4541}
!4541 = !DILocation(line: 380, column: 2, scope: !4499)
!4542 = !DILocation(line: 382, column: 6, scope: !4484)
!4543 = !DILocation(line: 383, column: 3, scope: !4507)
!4544 = !DILocation(line: 0, scope: !4506)
!4545 = !DILocation(line: 384, column: 8, scope: !4506)
!4546 = !DILocation(line: 387, column: 11, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !134, line: 384, column: 50)
!4548 = distinct !DILexicalBlock(scope: !4506, file: !134, line: 384, column: 3)
!4549 = !DILocation(line: 390, column: 11, scope: !4547)
!4550 = !DILocation(line: 391, column: 11, scope: !4547)
!4551 = !DILocation(line: 392, column: 11, scope: !4547)
!4552 = !DILocation(line: 385, column: 4, scope: !4547)
!4553 = !DILocation(line: 393, column: 16, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4547, file: !134, line: 393, column: 8)
!4555 = !DILocation(line: 393, column: 10, scope: !4554)
!4556 = !DILocation(line: 393, column: 8, scope: !4547)
!4557 = !DILocation(line: 384, column: 31, scope: !4548)
!4558 = !DILocation(line: 384, column: 3, scope: !4548)
!4559 = distinct !{!4559, !4560, !4561}
!4560 = !DILocation(line: 384, column: 3, scope: !4506)
!4561 = !DILocation(line: 396, column: 3, scope: !4506)
!4562 = !DILocation(line: 399, column: 2, scope: !4484)
!4563 = !DILocation(line: 401, column: 13, scope: !4484)
!4564 = !DILocation(line: 401, column: 23, scope: !4484)
!4565 = !DILocation(line: 401, column: 36, scope: !4484)
!4566 = !DILocation(line: 402, column: 21, scope: !4484)
!4567 = !DILocation(line: 402, column: 34, scope: !4484)
!4568 = !DILocation(line: 402, column: 32, scope: !4484)
!4569 = !DILocation(line: 405, column: 15, scope: !4484)
!4570 = !DILocation(line: 405, column: 33, scope: !4484)
!4571 = !DILocation(line: 405, column: 26, scope: !4484)
!4572 = !DILocation(line: 405, column: 37, scope: !4484)
!4573 = !DILocation(line: 405, column: 45, scope: !4484)
!4574 = !DILocation(line: 403, column: 2, scope: !4484)
!4575 = !DILocation(line: 407, column: 1, scope: !4484)
!4576 = distinct !DISubprogram(name: "sys_heap_print_info", scope: !134, file: !134, line: 409, type: !4577, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4579)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{null, !3910, !636}
!4579 = !{!4580, !4581}
!4580 = !DILocalVariable(name: "heap", arg: 1, scope: !4576, file: !134, line: 409, type: !3910)
!4581 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4576, file: !134, line: 409, type: !636)
!4582 = !DILocation(line: 0, scope: !4576)
!4583 = !DILocation(line: 411, column: 24, scope: !4576)
!4584 = !DILocation(line: 411, column: 2, scope: !4576)
!4585 = !DILocation(line: 412, column: 1, scope: !4576)
!4586 = distinct !DISubprogram(name: "sys_heap_runtime_stats_reset_max", scope: !134, file: !134, line: 430, type: !4587, scopeLine: 431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4589)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!103, !3910}
!4589 = !{!4590}
!4590 = !DILocalVariable(name: "heap", arg: 1, scope: !4586, file: !134, line: 430, type: !3910)
!4591 = !DILocation(line: 0, scope: !4586)
!4592 = !DILocation(line: 432, column: 11, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4586, file: !134, line: 432, column: 6)
!4594 = !DILocation(line: 432, column: 6, scope: !4586)
!4595 = !DILocation(line: 436, column: 42, scope: !4586)
!4596 = !DILocation(line: 436, column: 48, scope: !4586)
!4597 = !DILocation(line: 436, column: 14, scope: !4586)
!4598 = !DILocation(line: 436, column: 34, scope: !4586)
!4599 = !DILocation(line: 438, column: 2, scope: !4586)
!4600 = !DILocation(line: 439, column: 1, scope: !4586)
!4601 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2054, file: !2054, line: 1338, type: !4602, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !4610)
!4602 = !DISubroutineType(types: !4603)
!4603 = !{!103, !2859, !102, !626, !4604, !137}
!4604 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2825, line: 99, baseType: !4605)
!4605 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2825, line: 40, baseType: !4606)
!4606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2054, baseType: !4607)
!4607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4608)
!4608 = !{!4609}
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4607, file: !2054, baseType: !102, size: 32)
!4610 = !{!4611, !4612, !4613, !4614, !4615, !4616, !4620, !4621, !4622, !4624, !4629, !4674, !4677, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4689, !4690, !4691, !4695, !4698, !4700, !4703, !4704, !4705, !4710, !4716, !4719, !4723, !4729, !4733, !4736, !4738, !4741}
!4611 = !DILocalVariable(name: "out", arg: 1, scope: !4601, file: !2054, line: 1338, type: !2859)
!4612 = !DILocalVariable(name: "ctx", arg: 2, scope: !4601, file: !2054, line: 1338, type: !102)
!4613 = !DILocalVariable(name: "fp", arg: 3, scope: !4601, file: !2054, line: 1338, type: !626)
!4614 = !DILocalVariable(name: "ap", arg: 4, scope: !4601, file: !2054, line: 1339, type: !4604)
!4615 = !DILocalVariable(name: "flags", arg: 5, scope: !4601, file: !2054, line: 1339, type: !137)
!4616 = !DILocalVariable(name: "buf", scope: !4601, file: !2054, line: 1341, type: !4617)
!4617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 176, elements: !4618)
!4618 = !{!4619}
!4619 = !DISubrange(count: 22)
!4620 = !DILocalVariable(name: "count", scope: !4601, file: !2054, line: 1342, type: !120)
!4621 = !DILocalVariable(name: "sint", scope: !4601, file: !2054, line: 1343, type: !2073)
!4622 = !DILocalVariable(name: "tagged_ap", scope: !4601, file: !2054, line: 1345, type: !4623)
!4623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !636)
!4624 = !DILocalVariable(name: "rc", scope: !4625, file: !2054, line: 1377, type: !103)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !2054, line: 1377, column: 4)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2054, line: 1376, column: 19)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1376, column: 7)
!4628 = distinct !DILexicalBlock(scope: !4601, file: !2054, line: 1375, column: 19)
!4629 = !DILocalVariable(name: "state", scope: !4628, file: !2054, line: 1395, type: !4630)
!4630 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4601, file: !2054, line: 1392, size: 192, elements: !4631)
!4631 = !{!4632, !4642}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4630, file: !2054, line: 1393, baseType: !4633, size: 64)
!4633 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2054, line: 166, size: 64, elements: !4634)
!4634 = !{!4635, !4636, !4637, !4639, !4641}
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4633, file: !2054, line: 168, baseType: !2073, size: 64)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4633, file: !2054, line: 171, baseType: !2076, size: 64)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4633, file: !2054, line: 174, baseType: !4638, size: 64)
!4638 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4633, file: !2054, line: 177, baseType: !4640, size: 64)
!4640 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4633, file: !2054, line: 180, baseType: !102, size: 32)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4630, file: !2054, line: 1394, baseType: !4643, size: 96, offset: 64)
!4643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2054, line: 189, size: 96, elements: !4644)
!4644 = !{!4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4669}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4643, file: !2054, line: 191, baseType: !636, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4643, file: !2054, line: 194, baseType: !636, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4643, file: !2054, line: 197, baseType: !636, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4643, file: !2054, line: 200, baseType: !636, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4643, file: !2054, line: 203, baseType: !636, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4643, file: !2054, line: 206, baseType: !636, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4643, file: !2054, line: 209, baseType: !636, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4643, file: !2054, line: 212, baseType: !636, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4643, file: !2054, line: 219, baseType: !636, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4643, file: !2054, line: 222, baseType: !636, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4643, file: !2054, line: 229, baseType: !636, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4643, file: !2054, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4643, file: !2054, line: 238, baseType: !636, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4643, file: !2054, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4643, file: !2054, line: 244, baseType: !636, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4643, file: !2054, line: 247, baseType: !636, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4643, file: !2054, line: 252, baseType: !636, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4643, file: !2054, line: 257, baseType: !636, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4643, file: !2054, line: 260, baseType: !466, size: 8, offset: 24)
!4664 = !DIDerivedType(tag: DW_TAG_member, scope: !4643, file: !2054, line: 262, baseType: !4665, size: 32, offset: 32)
!4665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4643, file: !2054, line: 262, size: 32, elements: !4666)
!4666 = !{!4667, !4668}
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4665, file: !2054, line: 267, baseType: !103, size: 32)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4665, file: !2054, line: 289, baseType: !103, size: 32)
!4669 = !DIDerivedType(tag: DW_TAG_member, scope: !4643, file: !2054, line: 292, baseType: !4670, size: 32, offset: 64)
!4670 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4643, file: !2054, line: 292, size: 32, elements: !4671)
!4671 = !{!4672, !4673}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4670, file: !2054, line: 297, baseType: !103, size: 32)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4670, file: !2054, line: 306, baseType: !103, size: 32)
!4674 = !DILocalVariable(name: "conv", scope: !4628, file: !2054, line: 1400, type: !4675)
!4675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4676)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4643, size: 32)
!4677 = !DILocalVariable(name: "value", scope: !4628, file: !2054, line: 1401, type: !4678)
!4678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4679)
!4679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4633, size: 32)
!4680 = !DILocalVariable(name: "sp", scope: !4628, file: !2054, line: 1402, type: !626)
!4681 = !DILocalVariable(name: "width", scope: !4628, file: !2054, line: 1403, type: !103)
!4682 = !DILocalVariable(name: "precision", scope: !4628, file: !2054, line: 1404, type: !103)
!4683 = !DILocalVariable(name: "bps", scope: !4628, file: !2054, line: 1405, type: !626)
!4684 = !DILocalVariable(name: "bpe", scope: !4628, file: !2054, line: 1406, type: !626)
!4685 = !DILocalVariable(name: "sign", scope: !4628, file: !2054, line: 1407, type: !109)
!4686 = !DILocalVariable(name: "arg", scope: !4687, file: !2054, line: 1432, type: !103)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !2054, line: 1431, column: 24)
!4688 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1431, column: 7)
!4689 = !DILocalVariable(name: "specifier_cat", scope: !4628, file: !2054, line: 1468, type: !2053)
!4690 = !DILocalVariable(name: "length_mod", scope: !4628, file: !2054, line: 1470, type: !2061)
!4691 = !DILocalVariable(name: "rc", scope: !4692, file: !2054, line: 1575, type: !103)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2054, line: 1575, column: 4)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !2054, line: 1574, column: 43)
!4694 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1574, column: 7)
!4695 = !DILocalVariable(name: "rc", scope: !4696, file: !2054, line: 1584, type: !103)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !2054, line: 1584, column: 4)
!4697 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1582, column: 28)
!4698 = !DILocalVariable(name: "len", scope: !4699, file: !2054, line: 1589, type: !120)
!4699 = distinct !DILexicalBlock(scope: !4697, file: !2054, line: 1586, column: 13)
!4700 = !DILocalVariable(name: "len", scope: !4701, file: !2054, line: 1641, type: !120)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !2054, line: 1640, column: 24)
!4702 = distinct !DILexicalBlock(scope: !4697, file: !2054, line: 1640, column: 8)
!4703 = !DILocalVariable(name: "nj_len", scope: !4628, file: !2054, line: 1722, type: !120)
!4704 = !DILocalVariable(name: "pad_len", scope: !4628, file: !2054, line: 1723, type: !103)
!4705 = !DILocalVariable(name: "pad", scope: !4706, file: !2054, line: 1751, type: !109)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !2054, line: 1750, column: 26)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !2054, line: 1750, column: 8)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2054, line: 1747, column: 18)
!4709 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1747, column: 7)
!4710 = !DILocalVariable(name: "rc", scope: !4711, file: !2054, line: 1758, type: !103)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2054, line: 1758, column: 7)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !2054, line: 1757, column: 21)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2054, line: 1757, column: 10)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2054, line: 1756, column: 26)
!4715 = distinct !DILexicalBlock(scope: !4706, file: !2054, line: 1756, column: 9)
!4716 = !DILocalVariable(name: "rc", scope: !4717, file: !2054, line: 1765, type: !103)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !2054, line: 1765, column: 6)
!4718 = distinct !DILexicalBlock(scope: !4706, file: !2054, line: 1764, column: 25)
!4719 = !DILocalVariable(name: "rc", scope: !4720, file: !2054, line: 1774, type: !103)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !2054, line: 1774, column: 4)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !2054, line: 1773, column: 18)
!4722 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1773, column: 7)
!4723 = !DILocalVariable(name: "rc", scope: !4724, file: !2054, line: 1819, type: !103)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !2054, line: 1819, column: 5)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !2054, line: 1818, column: 44)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !2054, line: 1818, column: 8)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !2054, line: 1817, column: 10)
!4728 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1777, column: 7)
!4729 = !DILocalVariable(name: "rc", scope: !4730, file: !2054, line: 1823, type: !103)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !2054, line: 1823, column: 5)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !2054, line: 1822, column: 26)
!4732 = distinct !DILexicalBlock(scope: !4727, file: !2054, line: 1822, column: 8)
!4733 = !DILocalVariable(name: "rc", scope: !4734, file: !2054, line: 1828, type: !103)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !2054, line: 1828, column: 5)
!4735 = distinct !DILexicalBlock(scope: !4727, file: !2054, line: 1827, column: 26)
!4736 = !DILocalVariable(name: "rc", scope: !4737, file: !2054, line: 1831, type: !103)
!4737 = distinct !DILexicalBlock(scope: !4727, file: !2054, line: 1831, column: 4)
!4738 = !DILocalVariable(name: "rc", scope: !4739, file: !2054, line: 1836, type: !103)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !2054, line: 1836, column: 4)
!4740 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1835, column: 21)
!4741 = !DILabel(scope: !4697, name: "prec_int_pad0", file: !2054, line: 1634)
!4742 = !DILocation(line: 0, scope: !4601)
!4743 = !DILocation(line: 1341, column: 2, scope: !4601)
!4744 = !DILocation(line: 1341, column: 7, scope: !4601)
!4745 = !DILocation(line: 1375, column: 2, scope: !4601)
!4746 = !DILocation(line: 1342, column: 9, scope: !4601)
!4747 = !DILocation(line: 1375, column: 9, scope: !4601)
!4748 = !DILocation(line: 1377, column: 4, scope: !4625)
!4749 = !DILocation(line: 0, scope: !4625)
!4750 = !DILocation(line: 1377, column: 4, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4625, file: !2054, line: 1377, column: 4)
!4752 = distinct !{!4752, !4745, !4753}
!4753 = !DILocation(line: 1839, column: 2, scope: !4601)
!4754 = !DILocation(line: 1392, column: 3, scope: !4628)
!4755 = !DILocation(line: 1395, column: 5, scope: !4628)
!4756 = !DILocation(line: 0, scope: !4628)
!4757 = !DILocation(line: 1409, column: 8, scope: !4628)
!4758 = !DILocation(line: 1414, column: 13, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1414, column: 7)
!4760 = !DILocation(line: 1414, column: 7, scope: !4628)
!4761 = !DILocation(line: 1415, column: 12, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4759, file: !2054, line: 1414, column: 25)
!4763 = !DILocation(line: 1417, column: 14, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4762, file: !2054, line: 1417, column: 8)
!4765 = !DILocation(line: 1417, column: 8, scope: !4762)
!4766 = !DILocation(line: 1418, column: 21, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4764, file: !2054, line: 1417, column: 19)
!4768 = !DILocation(line: 1419, column: 13, scope: !4767)
!4769 = !DILocation(line: 1420, column: 4, scope: !4767)
!4770 = !DILocation(line: 1421, column: 20, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4759, file: !2054, line: 1421, column: 14)
!4772 = !DILocation(line: 1421, column: 14, scope: !4759)
!4773 = !DILocation(line: 1431, column: 13, scope: !4688)
!4774 = !DILocation(line: 1431, column: 7, scope: !4628)
!4775 = !DILocation(line: 1432, column: 14, scope: !4687)
!4776 = !DILocation(line: 0, scope: !4687)
!4777 = !DILocation(line: 1434, column: 12, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4687, file: !2054, line: 1434, column: 8)
!4779 = !DILocation(line: 1434, column: 8, scope: !4687)
!4780 = !DILocation(line: 1435, column: 24, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4778, file: !2054, line: 1434, column: 17)
!4782 = !DILocation(line: 1436, column: 4, scope: !4781)
!4783 = !DILocation(line: 1439, column: 20, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4688, file: !2054, line: 1439, column: 14)
!4785 = !DILocation(line: 1439, column: 14, scope: !4688)
!4786 = !DILocation(line: 1469, column: 37, scope: !4628)
!4787 = !DILocation(line: 1448, column: 20, scope: !4628)
!4788 = !DILocation(line: 1449, column: 22, scope: !4628)
!4789 = !DILocation(line: 1471, column: 34, scope: !4628)
!4790 = !DILocation(line: 1478, column: 7, scope: !4628)
!4791 = !DILocation(line: 1479, column: 4, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !2054, line: 1478, column: 40)
!4793 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1478, column: 7)
!4794 = !DILocation(line: 1484, column: 19, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4792, file: !2054, line: 1479, column: 24)
!4796 = !DILocation(line: 1484, column: 17, scope: !4795)
!4797 = !DILocation(line: 1485, column: 5, scope: !4795)
!4798 = !DILocation(line: 1492, column: 20, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4800, file: !2054, line: 1491, column: 12)
!4800 = distinct !DILexicalBlock(scope: !4795, file: !2054, line: 1487, column: 9)
!4801 = !DILocation(line: 1492, column: 18, scope: !4799)
!4802 = !DILocation(line: 1494, column: 5, scope: !4795)
!4803 = !DILocation(line: 1497, column: 23, scope: !4795)
!4804 = !DILocation(line: 1496, column: 17, scope: !4795)
!4805 = !DILocation(line: 1498, column: 5, scope: !4795)
!4806 = !DILocation(line: 1501, column: 23, scope: !4795)
!4807 = !DILocation(line: 1500, column: 17, scope: !4795)
!4808 = !DILocation(line: 1502, column: 5, scope: !4795)
!4809 = !DILocation(line: 1513, column: 23, scope: !4795)
!4810 = !DILocation(line: 1513, column: 6, scope: !4795)
!4811 = !DILocation(line: 1512, column: 17, scope: !4795)
!4812 = !DILocation(line: 1514, column: 5, scope: !4795)
!4813 = !DILocation(line: 0, scope: !4795)
!4814 = !DILocation(line: 1516, column: 8, scope: !4792)
!4815 = !DILocation(line: 1517, column: 19, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !2054, line: 1516, column: 33)
!4817 = distinct !DILexicalBlock(scope: !4792, file: !2054, line: 1516, column: 8)
!4818 = !DILocation(line: 1517, column: 17, scope: !4816)
!4819 = !DILocation(line: 1518, column: 4, scope: !4816)
!4820 = !DILocation(line: 1519, column: 19, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4822, file: !2054, line: 1518, column: 39)
!4822 = distinct !DILexicalBlock(scope: !4817, file: !2054, line: 1518, column: 15)
!4823 = !DILocation(line: 1519, column: 17, scope: !4821)
!4824 = !DILocation(line: 1520, column: 4, scope: !4821)
!4825 = !DILocation(line: 1522, column: 4, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !2054, line: 1521, column: 47)
!4827 = distinct !DILexicalBlock(scope: !4793, file: !2054, line: 1521, column: 14)
!4828 = !DILocation(line: 1527, column: 19, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4826, file: !2054, line: 1522, column: 24)
!4830 = !DILocation(line: 1527, column: 17, scope: !4829)
!4831 = !DILocation(line: 1528, column: 5, scope: !4829)
!4832 = !DILocation(line: 0, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4829, file: !2054, line: 1530, column: 9)
!4834 = !DILocation(line: 1540, column: 23, scope: !4829)
!4835 = !DILocation(line: 1539, column: 17, scope: !4829)
!4836 = !DILocation(line: 1542, column: 5, scope: !4829)
!4837 = !DILocation(line: 1545, column: 23, scope: !4829)
!4838 = !DILocation(line: 1544, column: 17, scope: !4829)
!4839 = !DILocation(line: 1547, column: 5, scope: !4829)
!4840 = !DILocation(line: 1551, column: 23, scope: !4829)
!4841 = !DILocation(line: 1551, column: 6, scope: !4829)
!4842 = !DILocation(line: 1550, column: 17, scope: !4829)
!4843 = !DILocation(line: 1552, column: 5, scope: !4829)
!4844 = !DILocation(line: 0, scope: !4829)
!4845 = !DILocation(line: 1554, column: 8, scope: !4826)
!4846 = !DILocation(line: 1555, column: 19, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4848, file: !2054, line: 1554, column: 33)
!4848 = distinct !DILexicalBlock(scope: !4826, file: !2054, line: 1554, column: 8)
!4849 = !DILocation(line: 1555, column: 17, scope: !4847)
!4850 = !DILocation(line: 1556, column: 4, scope: !4847)
!4851 = !DILocation(line: 1557, column: 19, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4853, file: !2054, line: 1556, column: 39)
!4853 = distinct !DILexicalBlock(scope: !4848, file: !2054, line: 1556, column: 15)
!4854 = !DILocation(line: 1557, column: 17, scope: !4852)
!4855 = !DILocation(line: 1558, column: 4, scope: !4852)
!4856 = !DILocation(line: 0, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !2054, line: 1560, column: 8)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !2054, line: 1559, column: 45)
!4859 = distinct !DILexicalBlock(scope: !4827, file: !2054, line: 1559, column: 14)
!4860 = !DILocation(line: 1566, column: 17, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !2054, line: 1565, column: 46)
!4862 = distinct !DILexicalBlock(scope: !4859, file: !2054, line: 1565, column: 14)
!4863 = !DILocation(line: 1566, column: 15, scope: !4861)
!4864 = !DILocation(line: 1567, column: 3, scope: !4861)
!4865 = !DILocation(line: 1574, column: 21, scope: !4694)
!4866 = !DILocation(line: 1575, column: 4, scope: !4692)
!4867 = !DILocation(line: 0, scope: !4692)
!4868 = !DILocation(line: 1575, column: 4, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4692, file: !2054, line: 1575, column: 4)
!4870 = !DILocation(line: 1582, column: 17, scope: !4628)
!4871 = !DILocation(line: 1582, column: 3, scope: !4628)
!4872 = !DILocation(line: 1584, column: 4, scope: !4696)
!4873 = !DILocation(line: 0, scope: !4696)
!4874 = !DILocation(line: 1584, column: 4, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4696, file: !2054, line: 1584, column: 4)
!4876 = !DILocation(line: 1587, column: 31, scope: !4699)
!4877 = !DILocation(line: 1591, column: 18, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4699, file: !2054, line: 1591, column: 8)
!4879 = !DILocation(line: 1591, column: 8, scope: !4699)
!4880 = !DILocation(line: 1592, column: 11, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4878, file: !2054, line: 1591, column: 24)
!4882 = !DILocation(line: 0, scope: !4699)
!4883 = !DILocation(line: 1593, column: 4, scope: !4881)
!4884 = !DILocation(line: 1594, column: 11, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4878, file: !2054, line: 1593, column: 11)
!4886 = !DILocation(line: 1604, column: 51, scope: !4697)
!4887 = !DILocation(line: 1604, column: 13, scope: !4697)
!4888 = !DILocation(line: 1604, column: 11, scope: !4697)
!4889 = !DILocation(line: 1606, column: 4, scope: !4697)
!4890 = !DILocation(line: 1609, column: 14, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4697, file: !2054, line: 1609, column: 8)
!4892 = !DILocation(line: 1609, column: 8, scope: !4697)
!4893 = !DILocation(line: 1619, column: 18, scope: !4697)
!4894 = !DILocation(line: 1620, column: 13, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4697, file: !2054, line: 1620, column: 8)
!4896 = !DILocation(line: 1620, column: 8, scope: !4697)
!4897 = !DILocation(line: 1622, column: 36, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4895, file: !2054, line: 1620, column: 18)
!4899 = !DILocation(line: 1622, column: 17, scope: !4898)
!4900 = !DILocation(line: 1623, column: 4, scope: !4898)
!4901 = !DILocation(line: 1632, column: 29, scope: !4697)
!4902 = !DILocation(line: 1632, column: 10, scope: !4697)
!4903 = !DILocation(line: 1632, column: 4, scope: !4697)
!4904 = !DILocation(line: 1407, column: 8, scope: !4628)
!4905 = !DILocation(line: 0, scope: !4697)
!4906 = !DILocation(line: 1634, column: 3, scope: !4697)
!4907 = !DILocation(line: 1640, column: 18, scope: !4702)
!4908 = !DILocation(line: 1640, column: 8, scope: !4697)
!4909 = !DILocation(line: 1729, column: 13, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1729, column: 7)
!4911 = !DILocation(line: 1641, column: 22, scope: !4701)
!4912 = !DILocation(line: 0, scope: !4701)
!4913 = !DILocation(line: 1646, column: 21, scope: !4701)
!4914 = !DILocation(line: 1649, column: 13, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4701, file: !2054, line: 1649, column: 9)
!4916 = !DILocation(line: 1649, column: 9, scope: !4701)
!4917 = !DILocation(line: 1650, column: 35, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4915, file: !2054, line: 1649, column: 34)
!4919 = !DILocation(line: 1650, column: 23, scope: !4918)
!4920 = !DILocation(line: 1651, column: 5, scope: !4918)
!4921 = !DILocation(line: 1660, column: 15, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4697, file: !2054, line: 1660, column: 8)
!4923 = !DILocation(line: 1660, column: 19, scope: !4922)
!4924 = !DILocation(line: 1660, column: 8, scope: !4697)
!4925 = !DILocation(line: 1661, column: 23, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4922, file: !2054, line: 1660, column: 28)
!4927 = !DILocation(line: 1661, column: 11, scope: !4926)
!4928 = !DILocation(line: 1665, column: 22, scope: !4926)
!4929 = !DILocation(line: 1666, column: 21, scope: !4926)
!4930 = !DILocation(line: 1668, column: 5, scope: !4926)
!4931 = !DILocation(line: 1677, column: 30, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !2054, line: 1676, column: 49)
!4933 = distinct !DILexicalBlock(scope: !4697, file: !2054, line: 1676, column: 8)
!4934 = !DILocation(line: 1677, column: 5, scope: !4932)
!4935 = !DILocation(line: 1680, column: 4, scope: !4697)
!4936 = !DILocation(line: 0, scope: !4878)
!4937 = !DILocation(line: 1597, column: 14, scope: !4699)
!4938 = !DILocation(line: 1699, column: 11, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1699, column: 7)
!4940 = !DILocation(line: 1699, column: 7, scope: !4628)
!4941 = !DILocation(line: 1725, column: 7, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1725, column: 7)
!4943 = !DILocation(line: 1725, column: 12, scope: !4942)
!4944 = !DILocation(line: 1747, column: 13, scope: !4709)
!4945 = !DILocation(line: 1747, column: 7, scope: !4628)
!4946 = !DILocation(line: 1722, column: 24, scope: !4628)
!4947 = !DILocation(line: 1725, column: 7, scope: !4628)
!4948 = !DILocation(line: 1729, column: 7, scope: !4628)
!4949 = !DILocation(line: 1736, column: 13, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4628, file: !2054, line: 1736, column: 7)
!4951 = !DILocation(line: 1735, column: 19, scope: !4628)
!4952 = !DILocation(line: 1736, column: 7, scope: !4628)
!4953 = !DILocation(line: 1748, column: 10, scope: !4708)
!4954 = !DILocation(line: 1750, column: 15, scope: !4707)
!4955 = !DILocation(line: 1750, column: 8, scope: !4708)
!4956 = !DILocation(line: 0, scope: !4706)
!4957 = !DILocation(line: 1756, column: 15, scope: !4715)
!4958 = !DILocation(line: 1756, column: 9, scope: !4706)
!4959 = !DILocation(line: 1758, column: 7, scope: !4711)
!4960 = !DILocation(line: 0, scope: !4711)
!4961 = !DILocation(line: 1758, column: 7, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4711, file: !2054, line: 1758, column: 7)
!4963 = !DILocation(line: 1764, column: 5, scope: !4706)
!4964 = !DILocation(line: 0, scope: !4708)
!4965 = !DILocation(line: 1764, column: 20, scope: !4706)
!4966 = !DILocation(line: 1764, column: 17, scope: !4706)
!4967 = !DILocation(line: 1765, column: 6, scope: !4717)
!4968 = !DILocation(line: 0, scope: !4717)
!4969 = !DILocation(line: 1765, column: 6, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4717, file: !2054, line: 1765, column: 6)
!4971 = distinct !{!4971, !4963, !4972}
!4972 = !DILocation(line: 1766, column: 5, scope: !4706)
!4973 = !DILocation(line: 1773, column: 12, scope: !4722)
!4974 = !DILocation(line: 1773, column: 7, scope: !4628)
!4975 = !DILocation(line: 1773, column: 7, scope: !4722)
!4976 = !DILocation(line: 1774, column: 4, scope: !4720)
!4977 = !DILocation(line: 0, scope: !4720)
!4978 = !DILocation(line: 1774, column: 4, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4720, file: !2054, line: 1774, column: 4)
!4980 = !DILocation(line: 1818, column: 8, scope: !4726)
!4981 = !DILocation(line: 1818, column: 27, scope: !4726)
!4982 = !DILocation(line: 1818, column: 25, scope: !4726)
!4983 = !DILocation(line: 1818, column: 8, scope: !4727)
!4984 = !DILocation(line: 1819, column: 5, scope: !4724)
!4985 = !DILocation(line: 0, scope: !4724)
!4986 = !DILocation(line: 1819, column: 5, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4724, file: !2054, line: 1819, column: 5)
!4988 = !DILocation(line: 1822, column: 14, scope: !4732)
!4989 = !DILocation(line: 1822, column: 8, scope: !4727)
!4990 = !DILocation(line: 1823, column: 5, scope: !4730)
!4991 = !DILocation(line: 0, scope: !4730)
!4992 = !DILocation(line: 1823, column: 5, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4730, file: !2054, line: 1823, column: 5)
!4994 = !DILocation(line: 1826, column: 20, scope: !4727)
!4995 = !DILocation(line: 1827, column: 4, scope: !4727)
!4996 = !DILocation(line: 0, scope: !4727)
!4997 = !DILocation(line: 1827, column: 21, scope: !4727)
!4998 = !DILocation(line: 1827, column: 18, scope: !4727)
!4999 = !DILocation(line: 1828, column: 5, scope: !4734)
!5000 = !DILocation(line: 0, scope: !4734)
!5001 = !DILocation(line: 1828, column: 5, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4734, file: !2054, line: 1828, column: 5)
!5003 = distinct !{!5003, !4995, !5004}
!5004 = !DILocation(line: 1829, column: 4, scope: !4727)
!5005 = !DILocation(line: 1831, column: 4, scope: !4737)
!5006 = !DILocation(line: 0, scope: !4737)
!5007 = !DILocation(line: 1831, column: 4, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4737, file: !2054, line: 1831, column: 4)
!5009 = !DILocation(line: 1835, column: 16, scope: !4628)
!5010 = !DILocation(line: 1835, column: 3, scope: !4628)
!5011 = !DILocation(line: 1836, column: 4, scope: !4739)
!5012 = !DILocation(line: 0, scope: !4739)
!5013 = !DILocation(line: 1836, column: 4, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4739, file: !2054, line: 1836, column: 4)
!5015 = !DILocation(line: 1837, column: 4, scope: !4740)
!5016 = distinct !{!5016, !5010, !5017}
!5017 = !DILocation(line: 1838, column: 3, scope: !4628)
!5018 = !DILocation(line: 1844, column: 1, scope: !4601)
!5019 = distinct !DISubprogram(name: "extract_conversion", scope: !2054, file: !2054, line: 642, type: !5020, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5022)
!5020 = !DISubroutineType(types: !5021)
!5021 = !{!626, !4676, !626}
!5022 = !{!5023, !5024}
!5023 = !DILocalVariable(name: "conv", arg: 1, scope: !5019, file: !2054, line: 642, type: !4676)
!5024 = !DILocalVariable(name: "sp", arg: 2, scope: !5019, file: !2054, line: 643, type: !626)
!5025 = !DILocation(line: 0, scope: !5019)
!5026 = !DILocation(line: 645, column: 10, scope: !5019)
!5027 = !DILocation(line: 653, column: 2, scope: !5019)
!5028 = !DILocation(line: 654, column: 6, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5019, file: !2054, line: 654, column: 6)
!5030 = !DILocation(line: 654, column: 10, scope: !5029)
!5031 = !DILocation(line: 654, column: 6, scope: !5019)
!5032 = !DILocation(line: 655, column: 24, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5029, file: !2054, line: 654, column: 18)
!5034 = !DILocation(line: 655, column: 19, scope: !5033)
!5035 = !DILocation(line: 656, column: 3, scope: !5033)
!5036 = !DILocation(line: 659, column: 7, scope: !5019)
!5037 = !DILocation(line: 660, column: 7, scope: !5019)
!5038 = !DILocation(line: 661, column: 7, scope: !5019)
!5039 = !DILocation(line: 662, column: 7, scope: !5019)
!5040 = !DILocation(line: 663, column: 7, scope: !5019)
!5041 = !DILocation(line: 665, column: 2, scope: !5019)
!5042 = !DILocation(line: 666, column: 1, scope: !5019)
!5043 = distinct !DISubprogram(name: "outs", scope: !2054, file: !2054, line: 1319, type: !5044, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5046)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{!103, !2859, !102, !626, !626}
!5046 = !{!5047, !5048, !5049, !5050, !5051, !5052}
!5047 = !DILocalVariable(name: "out", arg: 1, scope: !5043, file: !2054, line: 1319, type: !2859)
!5048 = !DILocalVariable(name: "ctx", arg: 2, scope: !5043, file: !2054, line: 1320, type: !102)
!5049 = !DILocalVariable(name: "sp", arg: 3, scope: !5043, file: !2054, line: 1321, type: !626)
!5050 = !DILocalVariable(name: "ep", arg: 4, scope: !5043, file: !2054, line: 1322, type: !626)
!5051 = !DILocalVariable(name: "count", scope: !5043, file: !2054, line: 1324, type: !120)
!5052 = !DILocalVariable(name: "rc", scope: !5053, file: !2054, line: 1327, type: !103)
!5053 = distinct !DILexicalBlock(scope: !5043, file: !2054, line: 1326, column: 45)
!5054 = !DILocation(line: 0, scope: !5043)
!5055 = !DILocation(line: 1326, column: 2, scope: !5043)
!5056 = !DILocation(line: 1324, column: 9, scope: !5043)
!5057 = !DILocation(line: 1326, column: 13, scope: !5043)
!5058 = !DILocation(line: 1326, column: 19, scope: !5043)
!5059 = !DILocation(line: 1327, column: 21, scope: !5053)
!5060 = !DILocation(line: 1326, column: 36, scope: !5043)
!5061 = !DILocation(line: 1326, column: 39, scope: !5043)
!5062 = !DILocation(line: 1327, column: 24, scope: !5053)
!5063 = !DILocation(line: 1327, column: 16, scope: !5053)
!5064 = !DILocation(line: 1327, column: 12, scope: !5053)
!5065 = !DILocation(line: 0, scope: !5053)
!5066 = !DILocation(line: 1329, column: 10, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5053, file: !2054, line: 1329, column: 7)
!5068 = !DILocation(line: 1329, column: 7, scope: !5053)
!5069 = distinct !{!5069, !5055, !5070}
!5070 = !DILocation(line: 1333, column: 2, scope: !5043)
!5071 = !DILocation(line: 1336, column: 1, scope: !5043)
!5072 = distinct !DISubprogram(name: "encode_uint", scope: !2054, file: !2054, line: 788, type: !5073, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5075)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!818, !2076, !4676, !818, !626}
!5075 = !{!5076, !5077, !5078, !5079, !5080, !5081, !5083, !5084}
!5076 = !DILocalVariable(name: "value", arg: 1, scope: !5072, file: !2054, line: 788, type: !2076)
!5077 = !DILocalVariable(name: "conv", arg: 2, scope: !5072, file: !2054, line: 789, type: !4676)
!5078 = !DILocalVariable(name: "bps", arg: 3, scope: !5072, file: !2054, line: 790, type: !818)
!5079 = !DILocalVariable(name: "bpe", arg: 4, scope: !5072, file: !2054, line: 791, type: !626)
!5080 = !DILocalVariable(name: "upcase", scope: !5072, file: !2054, line: 793, type: !636)
!5081 = !DILocalVariable(name: "radix", scope: !5072, file: !2054, line: 794, type: !5082)
!5082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5083 = !DILocalVariable(name: "bp", scope: !5072, file: !2054, line: 795, type: !818)
!5084 = !DILocalVariable(name: "lsv", scope: !5085, file: !2054, line: 798, type: !32)
!5085 = distinct !DILexicalBlock(scope: !5072, file: !2054, line: 797, column: 5)
!5086 = !DILocation(line: 0, scope: !5072)
!5087 = !DILocation(line: 793, column: 35, scope: !5072)
!5088 = !DILocation(line: 793, column: 24, scope: !5072)
!5089 = !DILocation(line: 793, column: 16, scope: !5072)
!5090 = !DILocation(line: 794, column: 29, scope: !5072)
!5091 = !DILocation(line: 795, column: 24, scope: !5072)
!5092 = !DILocation(line: 795, column: 17, scope: !5072)
!5093 = !DILocation(line: 797, column: 2, scope: !5072)
!5094 = !DILocation(line: 802, column: 9, scope: !5085)
!5095 = !DILocation(line: 798, column: 22, scope: !5085)
!5096 = !DILocation(line: 0, scope: !5085)
!5097 = !DILocation(line: 800, column: 16, scope: !5085)
!5098 = !DILocation(line: 800, column: 11, scope: !5085)
!5099 = !DILocation(line: 800, column: 4, scope: !5085)
!5100 = !DILocation(line: 800, column: 9, scope: !5085)
!5101 = !DILocation(line: 803, column: 18, scope: !5072)
!5102 = !DILocation(line: 803, column: 24, scope: !5072)
!5103 = !DILocation(line: 803, column: 2, scope: !5085)
!5104 = distinct !{!5104, !5093, !5105}
!5105 = !DILocation(line: 803, column: 37, scope: !5072)
!5106 = !DILocation(line: 808, column: 12, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5072, file: !2054, line: 808, column: 6)
!5108 = !DILocation(line: 808, column: 6, scope: !5072)
!5109 = !DILocation(line: 809, column: 7, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5107, file: !2054, line: 808, column: 23)
!5111 = !DILocation(line: 813, column: 3, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5113, file: !2054, line: 811, column: 27)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !2054, line: 811, column: 14)
!5114 = distinct !DILexicalBlock(scope: !5110, file: !2054, line: 809, column: 7)
!5115 = !DILocation(line: 0, scope: !5114)
!5116 = !DILocation(line: 818, column: 2, scope: !5072)
!5117 = distinct !DISubprogram(name: "store_count", scope: !2054, file: !2054, line: 1280, type: !5118, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5122)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{null, !5120, !102, !103}
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 32)
!5121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4643)
!5122 = !{!5123, !5124, !5125}
!5123 = !DILocalVariable(name: "conv", arg: 1, scope: !5117, file: !2054, line: 1280, type: !5120)
!5124 = !DILocalVariable(name: "dp", arg: 2, scope: !5117, file: !2054, line: 1281, type: !102)
!5125 = !DILocalVariable(name: "count", arg: 3, scope: !5117, file: !2054, line: 1282, type: !103)
!5126 = !DILocation(line: 0, scope: !5117)
!5127 = !DILocation(line: 1284, column: 38, scope: !5117)
!5128 = !DILocation(line: 1284, column: 2, scope: !5117)
!5129 = !DILocation(line: 1286, column: 4, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5117, file: !2054, line: 1284, column: 50)
!5131 = !DILocation(line: 1286, column: 14, scope: !5130)
!5132 = !DILocation(line: 1287, column: 3, scope: !5130)
!5133 = !DILocation(line: 1289, column: 24, scope: !5130)
!5134 = !DILocation(line: 1289, column: 22, scope: !5130)
!5135 = !DILocation(line: 1290, column: 3, scope: !5130)
!5136 = !DILocation(line: 1292, column: 18, scope: !5130)
!5137 = !DILocation(line: 1292, column: 4, scope: !5130)
!5138 = !DILocation(line: 1292, column: 16, scope: !5130)
!5139 = !DILocation(line: 1293, column: 3, scope: !5130)
!5140 = !DILocation(line: 1295, column: 4, scope: !5130)
!5141 = !DILocation(line: 1295, column: 15, scope: !5130)
!5142 = !DILocation(line: 1296, column: 3, scope: !5130)
!5143 = !DILocation(line: 1298, column: 22, scope: !5130)
!5144 = !DILocation(line: 1298, column: 4, scope: !5130)
!5145 = !DILocation(line: 1298, column: 20, scope: !5130)
!5146 = !DILocation(line: 1299, column: 3, scope: !5130)
!5147 = !DILocation(line: 1301, column: 21, scope: !5130)
!5148 = !DILocation(line: 1301, column: 4, scope: !5130)
!5149 = !DILocation(line: 1301, column: 19, scope: !5130)
!5150 = !DILocation(line: 1302, column: 3, scope: !5130)
!5151 = !DILocation(line: 1304, column: 4, scope: !5130)
!5152 = !DILocation(line: 1304, column: 17, scope: !5130)
!5153 = !DILocation(line: 1305, column: 3, scope: !5130)
!5154 = !DILocation(line: 1307, column: 4, scope: !5130)
!5155 = !DILocation(line: 1307, column: 20, scope: !5130)
!5156 = !DILocation(line: 1308, column: 3, scope: !5130)
!5157 = !DILocation(line: 1316, column: 1, scope: !5117)
!5158 = distinct !DISubprogram(name: "isupper", scope: !5159, file: !5159, line: 16, type: !129, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5160)
!5159 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5160 = !{!5161}
!5161 = !DILocalVariable(name: "a", arg: 1, scope: !5158, file: !5159, line: 16, type: !103)
!5162 = !DILocation(line: 0, scope: !5158)
!5163 = !DILocation(line: 18, column: 29, scope: !5158)
!5164 = !DILocation(line: 18, column: 45, scope: !5158)
!5165 = !DILocation(line: 18, column: 2, scope: !5158)
!5166 = distinct !DISubprogram(name: "conversion_radix", scope: !2054, file: !2054, line: 761, type: !5167, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5169)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{!120, !109}
!5169 = !{!5170}
!5170 = !DILocalVariable(name: "specifier", arg: 1, scope: !5166, file: !2054, line: 761, type: !109)
!5171 = !DILocation(line: 0, scope: !5166)
!5172 = !DILocation(line: 763, column: 2, scope: !5166)
!5173 = !DILocation(line: 770, column: 3, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5166, file: !2054, line: 763, column: 21)
!5175 = !DILocation(line: 774, column: 3, scope: !5174)
!5176 = !DILocation(line: 0, scope: !5174)
!5177 = !DILocation(line: 776, column: 1, scope: !5166)
!5178 = distinct !DISubprogram(name: "extract_flags", scope: !2054, file: !2054, line: 339, type: !5020, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5179)
!5179 = !{!5180, !5181, !5182}
!5180 = !DILocalVariable(name: "conv", arg: 1, scope: !5178, file: !2054, line: 339, type: !4676)
!5181 = !DILocalVariable(name: "sp", arg: 2, scope: !5178, file: !2054, line: 340, type: !626)
!5182 = !DILocalVariable(name: "loop", scope: !5178, file: !2054, line: 342, type: !636)
!5183 = !DILocation(line: 0, scope: !5178)
!5184 = !DILocation(line: 344, column: 2, scope: !5178)
!5185 = !DILocation(line: 345, column: 11, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5178, file: !2054, line: 344, column: 5)
!5187 = !DILocation(line: 345, column: 3, scope: !5186)
!5188 = !DILocation(line: 351, column: 4, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5186, file: !2054, line: 345, column: 16)
!5190 = !DILocation(line: 354, column: 4, scope: !5189)
!5191 = !DILocation(line: 357, column: 4, scope: !5189)
!5192 = !DILocation(line: 360, column: 4, scope: !5189)
!5193 = !DILocation(line: 0, scope: !5189)
!5194 = !DILocation(line: 370, column: 12, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5178, file: !2054, line: 370, column: 6)
!5196 = !DILocation(line: 370, column: 22, scope: !5195)
!5197 = !DILocation(line: 371, column: 19, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5195, file: !2054, line: 370, column: 42)
!5199 = !DILocation(line: 372, column: 2, scope: !5198)
!5200 = !DILocation(line: 376, column: 2, scope: !5178)
!5201 = distinct !DISubprogram(name: "extract_width", scope: !2054, file: !2054, line: 388, type: !5020, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5202)
!5202 = !{!5203, !5204, !5205, !5206}
!5203 = !DILocalVariable(name: "conv", arg: 1, scope: !5201, file: !2054, line: 388, type: !4676)
!5204 = !DILocalVariable(name: "sp", arg: 2, scope: !5201, file: !2054, line: 389, type: !626)
!5205 = !DILocalVariable(name: "wp", scope: !5201, file: !2054, line: 398, type: !626)
!5206 = !DILocalVariable(name: "width", scope: !5201, file: !2054, line: 399, type: !120)
!5207 = !DILocation(line: 0, scope: !5201)
!5208 = !DILocation(line: 391, column: 8, scope: !5201)
!5209 = !DILocation(line: 391, column: 22, scope: !5201)
!5210 = !DILocation(line: 393, column: 6, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5201, file: !2054, line: 393, column: 6)
!5212 = !DILocation(line: 393, column: 10, scope: !5211)
!5213 = !DILocation(line: 393, column: 6, scope: !5201)
!5214 = !DILocation(line: 394, column: 20, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5211, file: !2054, line: 393, column: 18)
!5216 = !DILocation(line: 395, column: 10, scope: !5215)
!5217 = !DILocation(line: 395, column: 3, scope: !5215)
!5218 = !DILocation(line: 399, column: 17, scope: !5201)
!5219 = !DILocation(line: 401, column: 6, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5201, file: !2054, line: 401, column: 6)
!5221 = !DILocation(line: 401, column: 9, scope: !5220)
!5222 = !DILocation(line: 401, column: 6, scope: !5201)
!5223 = !DILocation(line: 402, column: 23, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5220, file: !2054, line: 401, column: 16)
!5225 = !DILocation(line: 403, column: 9, scope: !5224)
!5226 = !DILocation(line: 403, column: 21, scope: !5224)
!5227 = !DILocation(line: 405, column: 11, scope: !5224)
!5228 = !DILocation(line: 404, column: 21, scope: !5224)
!5229 = !DILocation(line: 406, column: 2, scope: !5224)
!5230 = !DILocation(line: 409, column: 1, scope: !5201)
!5231 = distinct !DISubprogram(name: "extract_prec", scope: !2054, file: !2054, line: 420, type: !5020, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5232)
!5232 = !{!5233, !5234, !5235}
!5233 = !DILocalVariable(name: "conv", arg: 1, scope: !5231, file: !2054, line: 420, type: !4676)
!5234 = !DILocalVariable(name: "sp", arg: 2, scope: !5231, file: !2054, line: 421, type: !626)
!5235 = !DILocalVariable(name: "prec", scope: !5231, file: !2054, line: 435, type: !120)
!5236 = !DILocation(line: 0, scope: !5231)
!5237 = !DILocation(line: 423, column: 24, scope: !5231)
!5238 = !DILocation(line: 423, column: 28, scope: !5231)
!5239 = !DILocation(line: 423, column: 8, scope: !5231)
!5240 = !DILocation(line: 423, column: 21, scope: !5231)
!5241 = !DILocation(line: 425, column: 6, scope: !5231)
!5242 = !DILocation(line: 428, column: 2, scope: !5231)
!5243 = !DILocation(line: 430, column: 6, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5231, file: !2054, line: 430, column: 6)
!5245 = !DILocation(line: 430, column: 10, scope: !5244)
!5246 = !DILocation(line: 430, column: 6, scope: !5231)
!5247 = !DILocation(line: 431, column: 19, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5244, file: !2054, line: 430, column: 18)
!5249 = !DILocation(line: 432, column: 10, scope: !5248)
!5250 = !DILocation(line: 432, column: 3, scope: !5248)
!5251 = !DILocation(line: 435, column: 16, scope: !5231)
!5252 = !DILocation(line: 437, column: 8, scope: !5231)
!5253 = !DILocation(line: 437, column: 19, scope: !5231)
!5254 = !DILocation(line: 439, column: 10, scope: !5231)
!5255 = !DILocation(line: 438, column: 20, scope: !5231)
!5256 = !DILocation(line: 441, column: 9, scope: !5231)
!5257 = !DILocation(line: 442, column: 1, scope: !5231)
!5258 = distinct !DISubprogram(name: "extract_length", scope: !2054, file: !2054, line: 453, type: !5020, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5259)
!5259 = !{!5260, !5261}
!5260 = !DILocalVariable(name: "conv", arg: 1, scope: !5258, file: !2054, line: 453, type: !4676)
!5261 = !DILocalVariable(name: "sp", arg: 2, scope: !5258, file: !2054, line: 454, type: !626)
!5262 = !DILocation(line: 0, scope: !5258)
!5263 = !DILocation(line: 456, column: 10, scope: !5258)
!5264 = !DILocation(line: 456, column: 2, scope: !5258)
!5265 = !DILocation(line: 458, column: 8, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !2054, line: 458, column: 7)
!5267 = distinct !DILexicalBlock(scope: !5258, file: !2054, line: 456, column: 15)
!5268 = !DILocation(line: 458, column: 7, scope: !5266)
!5269 = !DILocation(line: 458, column: 13, scope: !5266)
!5270 = !DILocation(line: 0, scope: !5266)
!5271 = !DILocation(line: 458, column: 7, scope: !5267)
!5272 = !DILocation(line: 459, column: 21, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5266, file: !2054, line: 458, column: 21)
!5274 = !DILocation(line: 460, column: 4, scope: !5273)
!5275 = !DILocation(line: 461, column: 3, scope: !5273)
!5276 = !DILocation(line: 462, column: 21, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5266, file: !2054, line: 461, column: 10)
!5278 = !DILocation(line: 466, column: 8, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5267, file: !2054, line: 466, column: 7)
!5280 = !DILocation(line: 466, column: 7, scope: !5279)
!5281 = !DILocation(line: 466, column: 13, scope: !5279)
!5282 = !DILocation(line: 0, scope: !5279)
!5283 = !DILocation(line: 466, column: 7, scope: !5267)
!5284 = !DILocation(line: 467, column: 21, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5279, file: !2054, line: 466, column: 21)
!5286 = !DILocation(line: 468, column: 4, scope: !5285)
!5287 = !DILocation(line: 469, column: 3, scope: !5285)
!5288 = !DILocation(line: 470, column: 21, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5279, file: !2054, line: 469, column: 10)
!5290 = !DILocation(line: 474, column: 9, scope: !5267)
!5291 = !DILocation(line: 474, column: 20, scope: !5267)
!5292 = !DILocation(line: 475, column: 3, scope: !5267)
!5293 = !DILocation(line: 476, column: 3, scope: !5267)
!5294 = !DILocation(line: 478, column: 9, scope: !5267)
!5295 = !DILocation(line: 478, column: 20, scope: !5267)
!5296 = !DILocation(line: 479, column: 3, scope: !5267)
!5297 = !DILocation(line: 480, column: 3, scope: !5267)
!5298 = !DILocation(line: 482, column: 9, scope: !5267)
!5299 = !DILocation(line: 482, column: 20, scope: !5267)
!5300 = !DILocation(line: 483, column: 3, scope: !5267)
!5301 = !DILocation(line: 484, column: 3, scope: !5267)
!5302 = !DILocation(line: 486, column: 9, scope: !5267)
!5303 = !DILocation(line: 486, column: 20, scope: !5267)
!5304 = !DILocation(line: 487, column: 3, scope: !5267)
!5305 = !DILocation(line: 492, column: 21, scope: !5267)
!5306 = !DILocation(line: 493, column: 3, scope: !5267)
!5307 = !DILocation(line: 495, column: 9, scope: !5267)
!5308 = !DILocation(line: 495, column: 20, scope: !5267)
!5309 = !DILocation(line: 496, column: 3, scope: !5267)
!5310 = !DILocation(line: 498, column: 2, scope: !5258)
!5311 = distinct !DISubprogram(name: "extract_specifier", scope: !2054, file: !2054, line: 513, type: !5020, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5312)
!5312 = !{!5313, !5314, !5315, !5316}
!5313 = !DILocalVariable(name: "conv", arg: 1, scope: !5311, file: !2054, line: 513, type: !4676)
!5314 = !DILocalVariable(name: "sp", arg: 2, scope: !5311, file: !2054, line: 514, type: !626)
!5315 = !DILocalVariable(name: "unsupported", scope: !5311, file: !2054, line: 516, type: !636)
!5316 = !DILabel(scope: !5317, name: "int_conv", file: !2054, line: 526)
!5317 = distinct !DILexicalBlock(scope: !5311, file: !2054, line: 520, column: 27)
!5318 = !DILocation(line: 0, scope: !5311)
!5319 = !DILocation(line: 518, column: 20, scope: !5311)
!5320 = !DILocation(line: 518, column: 8, scope: !5311)
!5321 = !DILocation(line: 518, column: 18, scope: !5311)
!5322 = !DILocation(line: 520, column: 2, scope: !5311)
!5323 = !DILocation(line: 525, column: 3, scope: !5317)
!5324 = !DILocation(line: 0, scope: !5317)
!5325 = !DILocation(line: 526, column: 1, scope: !5317)
!5326 = !DILocation(line: 528, column: 24, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5317, file: !2054, line: 528, column: 7)
!5328 = !DILocation(line: 528, column: 7, scope: !5317)
!5329 = !DILocation(line: 535, column: 23, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5317, file: !2054, line: 535, column: 7)
!5331 = !DILocation(line: 535, column: 7, scope: !5317)
!5332 = !DILocation(line: 536, column: 36, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5330, file: !2054, line: 535, column: 31)
!5334 = !DILocation(line: 537, column: 3, scope: !5333)
!5335 = !DILocation(line: 570, column: 9, scope: !5317)
!5336 = !DILocation(line: 570, column: 23, scope: !5317)
!5337 = !DILocation(line: 575, column: 4, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5339, file: !2054, line: 573, column: 48)
!5339 = distinct !DILexicalBlock(scope: !5317, file: !2054, line: 573, column: 7)
!5340 = !DILocation(line: 603, column: 9, scope: !5317)
!5341 = !DILocation(line: 603, column: 23, scope: !5317)
!5342 = !DILocation(line: 605, column: 24, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5317, file: !2054, line: 605, column: 7)
!5344 = !DILocation(line: 605, column: 7, scope: !5317)
!5345 = !DILocation(line: 612, column: 9, scope: !5317)
!5346 = !DILocation(line: 612, column: 23, scope: !5317)
!5347 = !DILocation(line: 619, column: 24, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5317, file: !2054, line: 619, column: 7)
!5349 = !DILocation(line: 619, column: 7, scope: !5317)
!5350 = !DILocation(line: 625, column: 9, scope: !5317)
!5351 = !DILocation(line: 625, column: 17, scope: !5317)
!5352 = !DILocation(line: 626, column: 3, scope: !5317)
!5353 = !DILocation(line: 629, column: 20, scope: !5311)
!5354 = !DILocation(line: 629, column: 8, scope: !5311)
!5355 = !DILocation(line: 518, column: 23, scope: !5311)
!5356 = !DILocation(line: 631, column: 2, scope: !5311)
!5357 = distinct !DISubprogram(name: "extract_decimal", scope: !2054, file: !2054, line: 318, type: !5358, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5361)
!5358 = !DISubroutineType(types: !5359)
!5359 = !{!120, !5360}
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!5361 = !{!5362, !5363, !5364}
!5362 = !DILocalVariable(name: "str", arg: 1, scope: !5357, file: !2054, line: 318, type: !5360)
!5363 = !DILocalVariable(name: "sp", scope: !5357, file: !2054, line: 320, type: !626)
!5364 = !DILocalVariable(name: "val", scope: !5357, file: !2054, line: 321, type: !120)
!5365 = !DILocation(line: 0, scope: !5357)
!5366 = !DILocation(line: 320, column: 19, scope: !5357)
!5367 = !DILocation(line: 323, column: 37, scope: !5357)
!5368 = !DILocation(line: 323, column: 17, scope: !5357)
!5369 = !DILocation(line: 323, column: 9, scope: !5357)
!5370 = !DILocation(line: 323, column: 2, scope: !5357)
!5371 = !DILocation(line: 324, column: 13, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5357, file: !2054, line: 323, column: 43)
!5373 = !DILocation(line: 324, column: 24, scope: !5372)
!5374 = !DILocation(line: 324, column: 19, scope: !5372)
!5375 = !DILocation(line: 324, column: 27, scope: !5372)
!5376 = distinct !{!5376, !5370, !5377}
!5377 = !DILocation(line: 325, column: 2, scope: !5357)
!5378 = !DILocation(line: 326, column: 7, scope: !5357)
!5379 = !DILocation(line: 327, column: 2, scope: !5357)
!5380 = distinct !DISubprogram(name: "isdigit", scope: !5159, file: !5159, line: 43, type: !129, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2050, retainedNodes: !5381)
!5381 = !{!5382}
!5382 = !DILocalVariable(name: "a", arg: 1, scope: !5380, file: !5159, line: 43, type: !103)
!5383 = !DILocation(line: 0, scope: !5380)
!5384 = !DILocation(line: 45, column: 29, scope: !5380)
!5385 = !DILocation(line: 45, column: 45, scope: !5380)
!5386 = !DILocation(line: 45, column: 2, scope: !5380)
!5387 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5388, file: !5388, line: 9, type: !2671, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2088, retainedNodes: !162)
!5388 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!5389 = !DILocation(line: 11, column: 1, scope: !5387)
!5390 = !{i64 2147555902, i64 2147555945, i64 2147555985}
!5391 = !DILocation(line: 12, column: 1, scope: !5387)
!5392 = !{i64 2147560129, i64 2147560172, i64 2147560212}
!5393 = !DILocation(line: 13, column: 1, scope: !5387)
!5394 = !{i64 2147560338, i64 2147560381, i64 2147560421}
!5395 = !DILocation(line: 14, column: 1, scope: !5387)
!5396 = !{i64 2147560555, i64 2147560598, i64 2147560638}
!5397 = !DILocation(line: 15, column: 1, scope: !5387)
!5398 = !{i64 2147560724, i64 2147560767, i64 2147560807}
!5399 = !DILocation(line: 16, column: 1, scope: !5387)
!5400 = !{i64 2147560909, i64 2147560952, i64 2147560992}
!5401 = !DILocation(line: 17, column: 1, scope: !5387)
!5402 = !{i64 2147561126, i64 2147561169, i64 2147561209}
!5403 = !DILocation(line: 18, column: 1, scope: !5387)
!5404 = !{i64 2147561289, i64 2147561332, i64 2147561372}
!5405 = !DILocation(line: 19, column: 1, scope: !5387)
!5406 = !{i64 2147561473, i64 2147561516, i64 2147561556}
!5407 = !DILocation(line: 20, column: 1, scope: !5387)
!5408 = !{i64 2147561653, i64 2147561696, i64 2147561736}
!5409 = !DILocation(line: 21, column: 1, scope: !5387)
!5410 = !{i64 2147561896, i64 2147561939, i64 2147561979}
!5411 = !DILocation(line: 22, column: 1, scope: !5387)
!5412 = !{i64 2147562132, i64 2147562175, i64 2147562215}
!5413 = !DILocation(line: 23, column: 1, scope: !5387)
!5414 = !{i64 2147562335, i64 2147562378, i64 2147562418}
!5415 = !DILocation(line: 24, column: 1, scope: !5387)
!5416 = !{i64 2147562538, i64 2147562581, i64 2147562621}
!5417 = !DILocation(line: 25, column: 1, scope: !5387)
!5418 = !{i64 2147562737, i64 2147562780, i64 2147562820}
!5419 = !DILocation(line: 26, column: 1, scope: !5387)
!5420 = !{i64 2147562912, i64 2147562955, i64 2147562995}
!5421 = !DILocation(line: 27, column: 1, scope: !5387)
!5422 = !{i64 2147563120, i64 2147563163, i64 2147563203}
!5423 = !DILocation(line: 28, column: 1, scope: !5387)
!5424 = !{i64 2147563324, i64 2147563367, i64 2147563407}
!5425 = !DILocation(line: 29, column: 1, scope: !5387)
!5426 = !{i64 2147563517, i64 2147563560, i64 2147563600}
!5427 = !DILocation(line: 30, column: 1, scope: !5387)
!5428 = !{i64 2147563719, i64 2147563762, i64 2147563802}
!5429 = !DILocation(line: 31, column: 1, scope: !5387)
!5430 = !{i64 2147563946, i64 2147563989, i64 2147564029}
!5431 = !DILocation(line: 32, column: 1, scope: !5387)
!5432 = !{i64 2147564161, i64 2147564204, i64 2147564244}
!5433 = !DILocation(line: 33, column: 1, scope: !5387)
!5434 = !{i64 2147564348, i64 2147564391, i64 2147564431}
!5435 = !DILocation(line: 34, column: 1, scope: !5387)
!5436 = !{i64 2147564520, i64 2147564563, i64 2147564603}
!5437 = !DILocation(line: 35, column: 1, scope: !5387)
!5438 = !{i64 2147564722, i64 2147564765, i64 2147564805}
!5439 = !DILocation(line: 36, column: 1, scope: !5387)
!5440 = !{i64 2147564921, i64 2147564964, i64 2147565004}
!5441 = !DILocation(line: 37, column: 1, scope: !5387)
!5442 = !{i64 2147565096, i64 2147565139, i64 2147565179}
!5443 = !DILocation(line: 38, column: 1, scope: !5387)
!5444 = !{i64 2147565349, i64 2147565392, i64 2147565432}
!5445 = !DILocation(line: 39, column: 1, scope: !5387)
!5446 = !{i64 2147565587, i64 2147565630, i64 2147565670}
!5447 = !DILocation(line: 40, column: 1, scope: !5387)
!5448 = !{i64 2147565822, i64 2147565865, i64 2147565905}
!5449 = !DILocation(line: 41, column: 1, scope: !5387)
!5450 = !{i64 2147566048, i64 2147566091, i64 2147566131}
!5451 = !DILocation(line: 42, column: 1, scope: !5387)
!5452 = !{i64 2147566283, i64 2147566326, i64 2147566366}
!5453 = !DILocation(line: 43, column: 1, scope: !5387)
!5454 = !{i64 2147566518, i64 2147566561, i64 2147566601}
!5455 = !DILocation(line: 44, column: 1, scope: !5387)
!5456 = !{i64 2147566759, i64 2147566802, i64 2147566842}
!5457 = !DILocation(line: 45, column: 1, scope: !5387)
!5458 = !{i64 2147566994, i64 2147567037, i64 2147567077}
!5459 = !DILocation(line: 46, column: 1, scope: !5387)
!5460 = !{i64 2147567223, i64 2147567266, i64 2147567306}
!5461 = !DILocation(line: 47, column: 1, scope: !5387)
!5462 = !{i64 2147567458, i64 2147567501, i64 2147567541}
!5463 = !DILocation(line: 48, column: 1, scope: !5387)
!5464 = !{i64 2147567708, i64 2147567751, i64 2147567791}
!5465 = !DILocation(line: 49, column: 1, scope: !5387)
!5466 = !{i64 2147567937, i64 2147567980, i64 2147568020}
!5467 = !DILocation(line: 50, column: 1, scope: !5387)
!5468 = !{i64 2147568145, i64 2147568188, i64 2147568228}
!5469 = !DILocation(line: 51, column: 1, scope: !5387)
!5470 = !{i64 2147568356, i64 2147568399, i64 2147568439}
!5471 = !DILocation(line: 52, column: 1, scope: !5387)
!5472 = !{i64 2147568591, i64 2147568634, i64 2147568674}
!5473 = !DILocation(line: 53, column: 1, scope: !5387)
!5474 = !{i64 2147568820, i64 2147568863, i64 2147568903}
!5475 = !DILocation(line: 54, column: 1, scope: !5387)
!5476 = !{i64 2147573119, i64 2147573162, i64 2147573202}
!5477 = !DILocation(line: 55, column: 1, scope: !5387)
!5478 = !{i64 2147573351, i64 2147573394, i64 2147573434}
!5479 = !DILocation(line: 56, column: 1, scope: !5387)
!5480 = !{i64 2147573577, i64 2147573620, i64 2147573660}
!5481 = !DILocation(line: 57, column: 1, scope: !5387)
!5482 = !{i64 2147573794, i64 2147573837, i64 2147573877}
!5483 = !DILocation(line: 58, column: 1, scope: !5387)
!5484 = !{i64 2147574026, i64 2147574069, i64 2147574109}
!5485 = !DILocation(line: 59, column: 1, scope: !5387)
!5486 = !{i64 2147574252, i64 2147574295, i64 2147574335}
!5487 = !DILocation(line: 60, column: 1, scope: !5387)
!5488 = !{i64 2147574466, i64 2147574509, i64 2147574549}
!5489 = !DILocation(line: 61, column: 1, scope: !5387)
!5490 = !{i64 2147574686, i64 2147574729, i64 2147574769}
!5491 = !DILocation(line: 62, column: 1, scope: !5387)
!5492 = !{i64 2147574918, i64 2147574961, i64 2147575001}
!5493 = !DILocation(line: 63, column: 1, scope: !5387)
!5494 = !{i64 2147575126, i64 2147575169, i64 2147575209}
!5495 = !DILocation(line: 64, column: 1, scope: !5387)
!5496 = !{i64 2147575331, i64 2147575374, i64 2147575414}
!5497 = !DILocation(line: 65, column: 1, scope: !5387)
!5498 = !{i64 2147575548, i64 2147575591, i64 2147575631}
!5499 = !DILocation(line: 66, column: 1, scope: !5387)
!5500 = !{i64 2147575762, i64 2147575805, i64 2147575845}
!5501 = !DILocation(line: 67, column: 1, scope: !5387)
!5502 = !{i64 2147575988, i64 2147576031, i64 2147576071}
!5503 = !DILocation(line: 68, column: 1, scope: !5387)
!5504 = !{i64 2147576208, i64 2147576251, i64 2147576291}
!5505 = !DILocation(line: 69, column: 1, scope: !5387)
!5506 = !{i64 2147576413, i64 2147576456, i64 2147576496}
!5507 = !DILocation(line: 70, column: 1, scope: !5387)
!5508 = !{i64 2147576645, i64 2147576688, i64 2147576728}
!5509 = !DILocation(line: 71, column: 1, scope: !5387)
!5510 = !{i64 2147576880, i64 2147576923, i64 2147576963}
!5511 = !DILocation(line: 72, column: 1, scope: !5387)
!5512 = !{i64 2147577130, i64 2147577173, i64 2147577213}
!5513 = !DILocation(line: 73, column: 1, scope: !5387)
!5514 = !{i64 2147577380, i64 2147577423, i64 2147577463}
!5515 = !DILocation(line: 74, column: 1, scope: !5387)
!5516 = !{i64 2147577618, i64 2147577661, i64 2147577701}
!5517 = !DILocation(line: 75, column: 1, scope: !5387)
!5518 = !{i64 2147577829, i64 2147577872, i64 2147577912}
!5519 = !DILocation(line: 76, column: 1, scope: !5387)
!5520 = !{i64 2147578046, i64 2147578089, i64 2147578129}
!5521 = !DILocation(line: 77, column: 1, scope: !5387)
!5522 = !{i64 2147578242, i64 2147578285, i64 2147578325}
!5523 = !DILocation(line: 78, column: 1, scope: !5387)
!5524 = !{i64 2147578444, i64 2147578487, i64 2147578527}
!5525 = !DILocation(line: 79, column: 1, scope: !5387)
!5526 = !{i64 2147578631, i64 2147578674, i64 2147578714}
!5527 = !DILocation(line: 80, column: 1, scope: !5387)
!5528 = !{i64 2147578821, i64 2147578864, i64 2147578904}
!5529 = !DILocation(line: 81, column: 1, scope: !5387)
!5530 = !{i64 2147579008, i64 2147579051, i64 2147579091}
!5531 = !DILocation(line: 82, column: 1, scope: !5387)
!5532 = !{i64 2147579204, i64 2147579247, i64 2147579287}
!5533 = !DILocation(line: 83, column: 1, scope: !5387)
!5534 = !{i64 2147579400, i64 2147579443, i64 2147579483}
!5535 = !DILocation(line: 84, column: 1, scope: !5387)
!5536 = !{i64 2147579611, i64 2147579654, i64 2147579694}
!5537 = !DILocation(line: 85, column: 1, scope: !5387)
!5538 = !{i64 2147579819, i64 2147579862, i64 2147579902}
!5539 = !DILocation(line: 86, column: 1, scope: !5387)
!5540 = !{i64 2147580003, i64 2147580046, i64 2147580086}
!5541 = !DILocation(line: 87, column: 1, scope: !5387)
!5542 = !{i64 2147580199, i64 2147580242, i64 2147580282}
!5543 = !DILocation(line: 88, column: 1, scope: !5387)
!5544 = !{i64 2147580392, i64 2147580435, i64 2147580475}
!5545 = !DILocation(line: 89, column: 1, scope: !5387)
!5546 = !{i64 2147580639, i64 2147580682, i64 2147580722}
!5547 = !DILocation(line: 90, column: 1, scope: !5387)
!5548 = !{i64 2147580862, i64 2147580905, i64 2147580945}
!5549 = !DILocation(line: 91, column: 1, scope: !5387)
!5550 = !{i64 2147581028, i64 2147581071, i64 2147581111}
!5551 = !DILocation(line: 92, column: 1, scope: !5387)
!5552 = !{i64 2147581212, i64 2147581255, i64 2147581295}
!5553 = !DILocation(line: 93, column: 1, scope: !5387)
!5554 = !{i64 2147581402, i64 2147581445, i64 2147581485}
!5555 = !DILocation(line: 94, column: 1, scope: !5387)
!5556 = !{i64 2147581586, i64 2147581629, i64 2147581669}
!5557 = !DILocation(line: 95, column: 1, scope: !5387)
!5558 = !{i64 2147581800, i64 2147581843, i64 2147581883}
!5559 = !DILocation(line: 96, column: 1, scope: !5387)
!5560 = !{i64 2147586072, i64 2147586115, i64 2147586155}
!5561 = !DILocation(line: 97, column: 1, scope: !5387)
!5562 = !{i64 2147586295, i64 2147586338, i64 2147586378}
!5563 = !DILocation(line: 98, column: 1, scope: !5387)
!5564 = !{i64 2147586479, i64 2147586522, i64 2147586562}
!5565 = !DILocation(line: 99, column: 1, scope: !5387)
!5566 = !{i64 2147586645, i64 2147586688, i64 2147586728}
!5567 = !DILocation(line: 100, column: 1, scope: !5387)
!5568 = !{i64 2147586826, i64 2147586869, i64 2147586909}
!5569 = !DILocation(line: 101, column: 1, scope: !5387)
!5570 = !{i64 2147587019, i64 2147587062, i64 2147587102}
!5571 = !DILocation(line: 102, column: 1, scope: !5387)
!5572 = !{i64 2147587245, i64 2147587288, i64 2147587328}
!5573 = !DILocation(line: 103, column: 1, scope: !5387)
!5574 = !{i64 2147587459, i64 2147587502, i64 2147587542}
!5575 = !DILocation(line: 104, column: 1, scope: !5387)
!5576 = !{i64 2147587685, i64 2147587728, i64 2147587768}
!5577 = !DILocation(line: 105, column: 1, scope: !5387)
!5578 = !{i64 2147587902, i64 2147587945, i64 2147587985}
!5579 = !DILocation(line: 106, column: 1, scope: !5387)
!5580 = !{i64 2147588179, i64 2147588222, i64 2147588262}
!5581 = !DILocation(line: 107, column: 1, scope: !5387)
!5582 = !{i64 2147588405, i64 2147588448, i64 2147588488}
!5583 = !DILocation(line: 108, column: 1, scope: !5387)
!5584 = !{i64 2147588613, i64 2147588656, i64 2147588696}
!5585 = !DILocation(line: 109, column: 1, scope: !5387)
!5586 = !{i64 2147588809, i64 2147588852, i64 2147588892}
!5587 = !DILocation(line: 110, column: 1, scope: !5387)
!5588 = !{i64 2147589074, i64 2147589117, i64 2147589157}
!5589 = !DILocation(line: 111, column: 1, scope: !5387)
!5590 = !{i64 2147589288, i64 2147589331, i64 2147589371}
!5591 = !DILocation(line: 112, column: 1, scope: !5387)
!5592 = !{i64 2147589451, i64 2147589494, i64 2147589534}
!5593 = !DILocation(line: 113, column: 1, scope: !5387)
!5594 = !{i64 2147589638, i64 2147589681, i64 2147589721}
!5595 = !DILocation(line: 114, column: 1, scope: !5387)
!5596 = !{i64 2147589831, i64 2147589874, i64 2147589914}
!5597 = !DILocation(line: 115, column: 1, scope: !5387)
!5598 = !{i64 2147590013, i64 2147590056, i64 2147590096}
!5599 = !DILocation(line: 116, column: 1, scope: !5387)
!5600 = !{i64 2147590227, i64 2147590270, i64 2147590310}
!5601 = !DILocation(line: 117, column: 1, scope: !5387)
!5602 = !{i64 2147590426, i64 2147590469, i64 2147590509}
!5603 = !DILocation(line: 118, column: 1, scope: !5387)
!5604 = !{i64 2147590661, i64 2147590704, i64 2147590744}
!5605 = !DILocation(line: 119, column: 1, scope: !5387)
!5606 = !{i64 2147590911, i64 2147590954, i64 2147590994}
!5607 = !DILocation(line: 120, column: 1, scope: !5387)
!5608 = !{i64 2147591113, i64 2147591156, i64 2147591196}
!5609 = !DILocation(line: 121, column: 1, scope: !5387)
!5610 = !{i64 2147591336, i64 2147591379, i64 2147591419}
!5611 = !DILocation(line: 122, column: 1, scope: !5387)
!5612 = !{i64 2147591550, i64 2147591593, i64 2147591633}
!5613 = !DILocation(line: 123, column: 1, scope: !5387)
!5614 = !{i64 2147591794, i64 2147591837, i64 2147591877}
!5615 = !DILocation(line: 124, column: 1, scope: !5387)
!5616 = !{i64 2147592023, i64 2147592066, i64 2147592106}
!5617 = !DILocation(line: 125, column: 1, scope: !5387)
!5618 = !{i64 2147592249, i64 2147592292, i64 2147592332}
!5619 = !DILocation(line: 126, column: 1, scope: !5387)
!5620 = !{i64 2147592508, i64 2147592551, i64 2147592591}
!5621 = !DILocation(line: 127, column: 1, scope: !5387)
!5622 = !{i64 2147592728, i64 2147592771, i64 2147592811}
!5623 = !DILocation(line: 128, column: 1, scope: !5387)
!5624 = !{i64 2147592960, i64 2147593003, i64 2147593043}
!5625 = !DILocation(line: 129, column: 1, scope: !5387)
!5626 = !{i64 2147593201, i64 2147593244, i64 2147593284}
!5627 = !DILocation(line: 130, column: 1, scope: !5387)
!5628 = !{i64 2147593442, i64 2147593485, i64 2147593525}
!5629 = !DILocation(line: 131, column: 1, scope: !5387)
!5630 = !{i64 2147593665, i64 2147593708, i64 2147593748}
!5631 = !DILocation(line: 132, column: 1, scope: !5387)
!5632 = !{i64 2147593882, i64 2147593925, i64 2147593965}
!5633 = !DILocation(line: 133, column: 1, scope: !5387)
!5634 = !{i64 2147594123, i64 2147594166, i64 2147594206}
!5635 = !DILocation(line: 134, column: 1, scope: !5387)
!5636 = !{i64 2147594310, i64 2147594353, i64 2147594393}
!5637 = !DILocation(line: 135, column: 1, scope: !5387)
!5638 = !{i64 2147594539, i64 2147594582, i64 2147594622}
!5639 = !DILocation(line: 136, column: 1, scope: !5387)
!5640 = !{i64 2147598796, i64 2147598839, i64 2147598879}
!5641 = !DILocation(line: 137, column: 1, scope: !5387)
!5642 = !{i64 2147599008, i64 2147599051, i64 2147599091}
!5643 = !DILocation(line: 138, column: 1, scope: !5387)
!5644 = !{i64 2147599229, i64 2147599272, i64 2147599312}
!5645 = !DILocation(line: 139, column: 1, scope: !5387)
!5646 = !{i64 2147599443, i64 2147599486, i64 2147599526}
!5647 = !DILocation(line: 140, column: 1, scope: !5387)
!5648 = !{i64 2147599633, i64 2147599676, i64 2147599716}
!5649 = !DILocation(line: 141, column: 1, scope: !5387)
!5650 = !{i64 2147599832, i64 2147599875, i64 2147599915}
!5651 = !DILocation(line: 142, column: 1, scope: !5387)
!5652 = !{i64 2147600037, i64 2147600080, i64 2147600120}
!5653 = !DILocation(line: 143, column: 1, scope: !5387)
!5654 = !{i64 2147600257, i64 2147600300, i64 2147600340}
!5655 = !DILocation(line: 144, column: 1, scope: !5387)
!5656 = !{i64 2147600458, i64 2147600501, i64 2147600541}
!5657 = !DILocation(line: 145, column: 1, scope: !5387)
!5658 = !{i64 2147600657, i64 2147600700, i64 2147600740}
!5659 = !DILocation(line: 146, column: 1, scope: !5387)
!5660 = !{i64 2147600826, i64 2147600869, i64 2147600909}
!5661 = !DILocation(line: 147, column: 1, scope: !5387)
!5662 = !{i64 2147601010, i64 2147601053, i64 2147601093}
!5663 = !DILocation(line: 148, column: 1, scope: !5387)
!5664 = !{i64 2147601194, i64 2147601237, i64 2147601277}
!5665 = !DILocation(line: 149, column: 1, scope: !5387)
!5666 = !{i64 2147601381, i64 2147601424, i64 2147601464}
!5667 = !DILocation(line: 150, column: 1, scope: !5387)
!5668 = !{i64 2147601565, i64 2147601608, i64 2147601648}
!5669 = !DILocation(line: 151, column: 1, scope: !5387)
!5670 = !{i64 2147601803, i64 2147601846, i64 2147601886}
!5671 = !DILocation(line: 152, column: 1, scope: !5387)
!5672 = !{i64 2147602033, i64 2147602076, i64 2147602116}
!5673 = !DILocation(line: 153, column: 1, scope: !5387)
!5674 = !{i64 2147602262, i64 2147602305, i64 2147602345}
!5675 = !DILocation(line: 154, column: 1, scope: !5387)
!5676 = !{i64 2147602449, i64 2147602492, i64 2147602532}
!5677 = !DILocation(line: 155, column: 1, scope: !5387)
!5678 = !{i64 2147602645, i64 2147602688, i64 2147602728}
!5679 = !DILocation(line: 156, column: 1, scope: !5387)
!5680 = !{i64 2147602853, i64 2147602896, i64 2147602936}
!5681 = !DILocation(line: 157, column: 1, scope: !5387)
!5682 = !{i64 2147603065, i64 2147603108, i64 2147603148}
!5683 = !DILocation(line: 158, column: 1, scope: !5387)
!5684 = !{i64 2147603264, i64 2147603307, i64 2147603347}
!5685 = !DILocation(line: 159, column: 1, scope: !5387)
!5686 = !{i64 2147603502, i64 2147603545, i64 2147603585}
!5687 = !DILocation(line: 160, column: 1, scope: !5387)
!5688 = !{i64 2147603698, i64 2147603741, i64 2147603781}
!5689 = !DILocation(line: 161, column: 1, scope: !5387)
!5690 = !{i64 2147603900, i64 2147603943, i64 2147603983}
!5691 = !DILocation(line: 162, column: 1, scope: !5387)
!5692 = !{i64 2147604093, i64 2147604136, i64 2147604176}
!5693 = !DILocation(line: 163, column: 1, scope: !5387)
!5694 = !{i64 2147604327, i64 2147604370, i64 2147604410}
!5695 = !DILocation(line: 164, column: 1, scope: !5387)
!5696 = !{i64 2147604490, i64 2147604533, i64 2147604573}
!5697 = !DILocation(line: 165, column: 1, scope: !5387)
!5698 = !{i64 2147604729, i64 2147604772, i64 2147604812}
!5699 = !DILocation(line: 166, column: 1, scope: !5387)
!5700 = !{i64 2147604968, i64 2147605011, i64 2147605051}
!5701 = !DILocation(line: 167, column: 1, scope: !5387)
!5702 = !{i64 2147605204, i64 2147605247, i64 2147605287}
!5703 = !DILocation(line: 168, column: 1, scope: !5387)
!5704 = !{i64 2147605434, i64 2147605477, i64 2147605517}
!5705 = !DILocation(line: 169, column: 1, scope: !5387)
!5706 = !{i64 2147605621, i64 2147605664, i64 2147605704}
!5707 = !DILocation(line: 170, column: 1, scope: !5387)
!5708 = !{i64 2147605820, i64 2147605863, i64 2147605903}
!5709 = !DILocation(line: 171, column: 1, scope: !5387)
!5710 = !{i64 2147606091, i64 2147606134, i64 2147606174}
!5711 = !DILocation(line: 172, column: 1, scope: !5387)
!5712 = !{i64 2147606266, i64 2147606309, i64 2147606349}
!5713 = !DILocation(line: 173, column: 1, scope: !5387)
!5714 = !{i64 2147606500, i64 2147606543, i64 2147606583}
!5715 = !DILocation(line: 174, column: 1, scope: !5387)
!5716 = !{i64 2147606708, i64 2147606751, i64 2147606791}
!5717 = !DILocation(line: 175, column: 1, scope: !5387)
!5718 = !{i64 2147606926, i64 2147606969, i64 2147607009}
!5719 = !DILocation(line: 176, column: 1, scope: !5387)
!5720 = !{i64 2147607116, i64 2147607159, i64 2147607199}
!5721 = !DILocation(line: 177, column: 1, scope: !5387)
!5722 = !{i64 2147607312, i64 2147607355, i64 2147607395}
!5723 = !DILocation(line: 178, column: 1, scope: !5387)
!5724 = !{i64 2147607518, i64 2147607561, i64 2147607601}
!5725 = !DILocation(line: 179, column: 1, scope: !5387)
!5726 = !{i64 2147607723, i64 2147607766, i64 2147607806}
!5727 = !DILocation(line: 180, column: 1, scope: !5387)
!5728 = !{i64 2147612010, i64 2147612053, i64 2147612093}
!5729 = !DILocation(line: 181, column: 1, scope: !5387)
!5730 = !{i64 2147612242, i64 2147612285, i64 2147612325}
!5731 = !DILocation(line: 182, column: 1, scope: !5387)
!5732 = !{i64 2147612420, i64 2147612463, i64 2147612503}
!5733 = !DILocation(line: 183, column: 1, scope: !5387)
!5734 = !{i64 2147612629, i64 2147612672, i64 2147612712}
!5735 = !DILocation(line: 184, column: 1, scope: !5387)
!5736 = !{i64 2147612861, i64 2147612904, i64 2147612944}
!5737 = !DILocation(line: 185, column: 1, scope: !5387)
!5738 = !{i64 2147613063, i64 2147613106, i64 2147613146}
!5739 = !DILocation(line: 186, column: 1, scope: !5387)
!5740 = !{i64 2147613313, i64 2147613356, i64 2147613396}
!5741 = !DILocation(line: 187, column: 1, scope: !5387)
!5742 = !{i64 2147613551, i64 2147613594, i64 2147613634}
!5743 = !DILocation(line: 188, column: 1, scope: !5387)
!5744 = !{i64 2147613729, i64 2147613772, i64 2147613812}
!5745 = !DILocation(line: 189, column: 1, scope: !5387)
!5746 = !{i64 2147613943, i64 2147613986, i64 2147614026}
!5747 = !DILocation(line: 190, column: 1, scope: !5387)
!5748 = !{i64 2147614151, i64 2147614194, i64 2147614234}
!5749 = !DILocation(line: 191, column: 1, scope: !5387)
!5750 = !{i64 2147614341, i64 2147614384, i64 2147614424}
!5751 = !DILocation(line: 192, column: 1, scope: !5387)
!5752 = !{i64 2147614555, i64 2147614598, i64 2147614638}
!5753 = !DILocation(line: 193, column: 1, scope: !5387)
!5754 = !{i64 2147614817, i64 2147614860, i64 2147614900}
!5755 = !DILocation(line: 194, column: 1, scope: !5387)
!5756 = !{i64 2147615028, i64 2147615071, i64 2147615111}
!5757 = !DILocation(line: 195, column: 1, scope: !5387)
!5758 = !{i64 2147615272, i64 2147615315, i64 2147615355}
!5759 = !DILocation(line: 196, column: 1, scope: !5387)
!5760 = !{i64 2147615483, i64 2147615526, i64 2147615566}
!5761 = !DILocation(line: 197, column: 1, scope: !5387)
!5762 = !{i64 2147615712, i64 2147615755, i64 2147615795}
!5763 = !DILocation(line: 198, column: 1, scope: !5387)
!5764 = !{i64 2147615977, i64 2147616020, i64 2147616060}
!5765 = !DILocation(line: 199, column: 1, scope: !5387)
!5766 = !{i64 2147616182, i64 2147616225, i64 2147616265}
!5767 = !DILocation(line: 200, column: 1, scope: !5387)
!5768 = !{i64 2147616378, i64 2147616421, i64 2147616461}
!5769 = !DILocation(line: 201, column: 1, scope: !5387)
!5770 = !{i64 2147616601, i64 2147616644, i64 2147616684}
!5771 = !DILocation(line: 202, column: 1, scope: !5387)
!5772 = !{i64 2147616764, i64 2147616807, i64 2147616847}
!5773 = !DILocation(line: 203, column: 1, scope: !5387)
!5774 = !{i64 2147616969, i64 2147617012, i64 2147617052}
!5775 = !DILocation(line: 204, column: 1, scope: !5387)
!5776 = !{i64 2147617189, i64 2147617232, i64 2147617272}
!5777 = !DILocation(line: 205, column: 1, scope: !5387)
!5778 = !{i64 2147617403, i64 2147617446, i64 2147617486}
!5779 = !DILocation(line: 206, column: 1, scope: !5387)
!5780 = !{i64 2147617617, i64 2147617660, i64 2147617700}
!5781 = !DILocation(line: 207, column: 1, scope: !5387)
!5782 = !{i64 2147617837, i64 2147617880, i64 2147617920}
!5783 = !DILocation(line: 208, column: 1, scope: !5387)
!5784 = !{i64 2147618048, i64 2147618091, i64 2147618131}
!5785 = !DILocation(line: 209, column: 1, scope: !5387)
!5786 = !{i64 2147618241, i64 2147618284, i64 2147618324}
!5787 = !DILocation(line: 210, column: 1, scope: !5387)
!5788 = !{i64 2147618440, i64 2147618483, i64 2147618523}
!5789 = !DILocation(line: 211, column: 1, scope: !5387)
!5790 = !{i64 2147618612, i64 2147618655, i64 2147618695}
!5791 = !DILocation(line: 212, column: 1, scope: !5387)
!5792 = !{i64 2147618805, i64 2147618848, i64 2147618888}
!5793 = !DILocation(line: 213, column: 1, scope: !5387)
!5794 = !{i64 2147619001, i64 2147619044, i64 2147619084}
!5795 = !DILocation(line: 214, column: 1, scope: !5387)
!5796 = !{i64 2147619228, i64 2147619271, i64 2147619311}
!5797 = !DILocation(line: 215, column: 1, scope: !5387)
!5798 = !{i64 2147619445, i64 2147619488, i64 2147619528}
!5799 = !DILocation(line: 216, column: 1, scope: !5387)
!5800 = !{i64 2147619737, i64 2147619780, i64 2147619820}
!5801 = !DILocation(line: 217, column: 1, scope: !5387)
!5802 = !{i64 2147619969, i64 2147620012, i64 2147620052}
!5803 = !DILocation(line: 218, column: 1, scope: !5387)
!5804 = !{i64 2147620186, i64 2147620229, i64 2147620269}
!5805 = !DILocation(line: 219, column: 1, scope: !5387)
!5806 = !{i64 2147620393, i64 2147620436, i64 2147620476}
!5807 = !DILocation(line: 220, column: 1, scope: !5387)
!5808 = !{i64 2147620594, i64 2147620637, i64 2147620677}
!5809 = !DILocation(line: 221, column: 1, scope: !5387)
!5810 = !{i64 2147624887, i64 2147624930, i64 2147624970}
!5811 = !DILocation(line: 222, column: 1, scope: !5387)
!5812 = !{i64 2147625095, i64 2147625138, i64 2147625178}
!5813 = !DILocation(line: 223, column: 1, scope: !5387)
!5814 = !{i64 2147625285, i64 2147625328, i64 2147625368}
!5815 = !DILocation(line: 224, column: 1, scope: !5387)
!5816 = !{i64 2147625511, i64 2147625554, i64 2147625594}
!5817 = !DILocation(line: 225, column: 1, scope: !5387)
!5818 = !{i64 2147625700, i64 2147625743, i64 2147625783}
!5819 = !DILocation(line: 226, column: 1, scope: !5387)
!5820 = !{i64 2147625971, i64 2147626014, i64 2147626054}
!5821 = !DILocation(line: 227, column: 1, scope: !5387)
!5822 = !{i64 2147626191, i64 2147626234, i64 2147626274}
!5823 = !DILocation(line: 228, column: 1, scope: !5387)
!5824 = !{i64 2147626444, i64 2147626487, i64 2147626527}
!5825 = !DILocation(line: 229, column: 1, scope: !5387)
!5826 = !{i64 2147626652, i64 2147626695, i64 2147626735}
!5827 = !DILocation(line: 230, column: 1, scope: !5387)
!5828 = !{i64 2147626884, i64 2147626927, i64 2147626967}
!5829 = !DILocation(line: 231, column: 1, scope: !5387)
!5830 = !{i64 2147627095, i64 2147627138, i64 2147627178}
!5831 = !DILocation(line: 232, column: 1, scope: !5387)
!5832 = !{i64 2147627285, i64 2147627328, i64 2147627368}
!5833 = !DILocation(line: 233, column: 1, scope: !5387)
!5834 = !{i64 2147627499, i64 2147627542, i64 2147627582}
!5835 = !DILocation(line: 234, column: 1, scope: !5387)
!5836 = !{i64 2147627698, i64 2147627741, i64 2147627781}
!5837 = !DILocation(line: 235, column: 1, scope: !5387)
!5838 = !{i64 2147627885, i64 2147627928, i64 2147627968}
!5839 = !DILocation(line: 236, column: 1, scope: !5387)
!5840 = !{i64 2147628093, i64 2147628136, i64 2147628176}
!5841 = !DILocation(line: 237, column: 1, scope: !5387)
!5842 = !{i64 2147628322, i64 2147628365, i64 2147628405}
!5843 = !DILocation(line: 238, column: 1, scope: !5387)
!5844 = !{i64 2147628524, i64 2147628567, i64 2147628607}
!5845 = !DILocation(line: 239, column: 1, scope: !5387)
!5846 = !{i64 2147628723, i64 2147628766, i64 2147628806}
!5847 = !DILocation(line: 240, column: 1, scope: !5387)
!5848 = !{i64 2147628940, i64 2147628983, i64 2147629023}
!5849 = !DILocation(line: 242, column: 1, scope: !5387)
!5850 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !583, file: !583, line: 225, type: !590, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !5851)
!5851 = !{!5852}
!5852 = !DILocalVariable(name: "arg", arg: 1, scope: !5850, file: !583, line: 225, type: !592)
!5853 = !DILocation(line: 0, scope: !5850)
!5854 = !DILocation(line: 230, column: 2, scope: !5850)
!5855 = !DILocation(line: 233, column: 2, scope: !5850)
!5856 = !DILocation(line: 236, column: 2, scope: !5850)
!5857 = !DILocation(line: 255, column: 2, scope: !5850)
!5858 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !583, file: !583, line: 50, type: !2671, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!5859 = !DILocation(line: 53, column: 2, scope: !5858)
!5860 = !DILocation(line: 54, column: 1, scope: !5858)
!5861 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !583, file: !583, line: 14, type: !2671, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!5862 = !DILocation(line: 23, column: 2, scope: !5861)
!5863 = !DILocation(line: 24, column: 2, scope: !5861)
!5864 = !DILocation(line: 25, column: 2, scope: !5861)
!5865 = !DILocation(line: 27, column: 2, scope: !5861)
!5866 = !DILocation(line: 31, column: 2, scope: !5861)
!5867 = !DILocation(line: 33, column: 2, scope: !5861)
!5868 = !DILocation(line: 36, column: 2, scope: !5861)
!5869 = !DILocation(line: 37, column: 2, scope: !5861)
!5870 = !DILocation(line: 40, column: 2, scope: !5861)
!5871 = !DILocation(line: 41, column: 2, scope: !5861)
!5872 = !DILocation(line: 42, column: 2, scope: !5861)
!5873 = !DILocation(line: 43, column: 2, scope: !5861)
!5874 = !DILocation(line: 44, column: 2, scope: !5861)
!5875 = !DILocation(line: 47, column: 2, scope: !5861)
!5876 = !DILocation(line: 48, column: 1, scope: !5861)
!5877 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !583, file: !583, line: 57, type: !2671, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!5878 = !DILocation(line: 61, column: 2, scope: !5877)
!5879 = !DILocation(line: 63, column: 2, scope: !5877)
!5880 = !DILocation(line: 80, column: 1, scope: !5877)
!5881 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !5882, file: !5882, line: 164, type: !5883, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !5885)
!5882 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5883 = !DISubroutineType(types: !5884)
!5884 = !{null, !527, !137, !465, !636, !636}
!5885 = !{!5886, !5887, !5888, !5889, !5890}
!5886 = !DILocalVariable(name: "base", arg: 1, scope: !5881, file: !5882, line: 164, type: !527)
!5887 = !DILocalVariable(name: "pdap", arg: 2, scope: !5881, file: !5882, line: 164, type: !137)
!5888 = !DILocalVariable(name: "perm", arg: 3, scope: !5881, file: !5882, line: 164, type: !465)
!5889 = !DILocalVariable(name: "sreq", arg: 4, scope: !5881, file: !5882, line: 164, type: !636)
!5890 = !DILocalVariable(name: "lock", arg: 5, scope: !5881, file: !5882, line: 164, type: !636)
!5891 = !DILocation(line: 0, scope: !5881)
!5892 = !DILocation(line: 166, column: 24, scope: !5881)
!5893 = !DILocation(line: 166, column: 5, scope: !5881)
!5894 = !DILocation(line: 166, column: 22, scope: !5881)
!5895 = !DILocation(line: 167, column: 1, scope: !5881)
!5896 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !171, file: !171, line: 454, type: !5897, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !5899)
!5897 = !DISubroutineType(types: !5898)
!5898 = !{null, !453, !137, !137}
!5899 = !{!5900, !5901, !5902}
!5900 = !DILocalVariable(name: "base", arg: 1, scope: !5896, file: !171, line: 454, type: !453)
!5901 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !5896, file: !171, line: 454, type: !137)
!5902 = !DILocalVariable(name: "control", arg: 3, scope: !5896, file: !171, line: 454, type: !137)
!5903 = !DILocation(line: 0, scope: !5896)
!5904 = !DILocation(line: 456, column: 5, scope: !5896)
!5905 = !DILocation(line: 456, column: 22, scope: !5896)
!5906 = !DILocation(line: 457, column: 1, scope: !5896)
!5907 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !171, file: !171, line: 379, type: !5908, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !5910)
!5908 = !DISubroutineType(types: !5909)
!5909 = !{null, !453, !137}
!5910 = !{!5911, !5912}
!5911 = !DILocalVariable(name: "base", arg: 1, scope: !5907, file: !171, line: 379, type: !453)
!5912 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !5907, file: !171, line: 379, type: !137)
!5913 = !DILocation(line: 0, scope: !5907)
!5914 = !DILocation(line: 381, column: 26, scope: !5907)
!5915 = !DILocation(line: 382, column: 1, scope: !5907)
!5916 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !5917, file: !5917, line: 136, type: !5918, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !5920)
!5917 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5918 = !DISubroutineType(types: !5919)
!5919 = !{null, !570}
!5920 = !{!5921}
!5921 = !DILocalVariable(name: "base", arg: 1, scope: !5916, file: !5917, line: 136, type: !570)
!5922 = !DILocation(line: 0, scope: !5916)
!5923 = !DILocation(line: 138, column: 16, scope: !5916)
!5924 = !DILocation(line: 139, column: 1, scope: !5916)
!5925 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !5882, file: !5882, line: 136, type: !5926, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !5928)
!5926 = !DISubroutineType(types: !5927)
!5927 = !{null, !527, !137, !137, !636}
!5928 = !{!5929, !5930, !5931, !5932}
!5929 = !DILocalVariable(name: "base", arg: 1, scope: !5925, file: !5882, line: 136, type: !527)
!5930 = !DILocalVariable(name: "mda", arg: 2, scope: !5925, file: !5882, line: 136, type: !137)
!5931 = !DILocalVariable(name: "domainId", arg: 3, scope: !5925, file: !5882, line: 136, type: !137)
!5932 = !DILocalVariable(name: "lock", arg: 4, scope: !5925, file: !5882, line: 136, type: !636)
!5933 = !DILocation(line: 0, scope: !5925)
!5934 = !DILocation(line: 140, column: 20, scope: !5925)
!5935 = !DILocation(line: 141, column: 1, scope: !5925)
!5936 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5937, file: !5937, line: 57, type: !5938, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2090, retainedNodes: !5984)
!5937 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5938 = !DISubroutineType(types: !5939)
!5939 = !{null, !32, !5940}
!5940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5941, size: 32)
!5941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5942)
!5942 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2211, line: 141, baseType: !5943)
!5943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2211, line: 97, size: 256, elements: !5944)
!5944 = !{!5945}
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5943, file: !2211, line: 107, baseType: !5946, size: 256)
!5946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2211, line: 98, size: 256, elements: !5947)
!5947 = !{!5948, !5953, !5958, !5963, !5968, !5973, !5978, !5983}
!5948 = !DIDerivedType(tag: DW_TAG_member, scope: !5946, file: !2211, line: 99, baseType: !5949, size: 32)
!5949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5946, file: !2211, line: 99, size: 32, elements: !5950)
!5950 = !{!5951, !5952}
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5949, file: !2211, line: 99, baseType: !137, size: 32)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5949, file: !2211, line: 99, baseType: !137, size: 32)
!5953 = !DIDerivedType(tag: DW_TAG_member, scope: !5946, file: !2211, line: 100, baseType: !5954, size: 32, offset: 32)
!5954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5946, file: !2211, line: 100, size: 32, elements: !5955)
!5955 = !{!5956, !5957}
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5954, file: !2211, line: 100, baseType: !137, size: 32)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5954, file: !2211, line: 100, baseType: !137, size: 32)
!5958 = !DIDerivedType(tag: DW_TAG_member, scope: !5946, file: !2211, line: 101, baseType: !5959, size: 32, offset: 64)
!5959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5946, file: !2211, line: 101, size: 32, elements: !5960)
!5960 = !{!5961, !5962}
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5959, file: !2211, line: 101, baseType: !137, size: 32)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5959, file: !2211, line: 101, baseType: !137, size: 32)
!5963 = !DIDerivedType(tag: DW_TAG_member, scope: !5946, file: !2211, line: 102, baseType: !5964, size: 32, offset: 96)
!5964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5946, file: !2211, line: 102, size: 32, elements: !5965)
!5965 = !{!5966, !5967}
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5964, file: !2211, line: 102, baseType: !137, size: 32)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5964, file: !2211, line: 102, baseType: !137, size: 32)
!5968 = !DIDerivedType(tag: DW_TAG_member, scope: !5946, file: !2211, line: 103, baseType: !5969, size: 32, offset: 128)
!5969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5946, file: !2211, line: 103, size: 32, elements: !5970)
!5970 = !{!5971, !5972}
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5969, file: !2211, line: 103, baseType: !137, size: 32)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5969, file: !2211, line: 103, baseType: !137, size: 32)
!5973 = !DIDerivedType(tag: DW_TAG_member, scope: !5946, file: !2211, line: 104, baseType: !5974, size: 32, offset: 160)
!5974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5946, file: !2211, line: 104, size: 32, elements: !5975)
!5975 = !{!5976, !5977}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5974, file: !2211, line: 104, baseType: !137, size: 32)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5974, file: !2211, line: 104, baseType: !137, size: 32)
!5978 = !DIDerivedType(tag: DW_TAG_member, scope: !5946, file: !2211, line: 105, baseType: !5979, size: 32, offset: 192)
!5979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5946, file: !2211, line: 105, size: 32, elements: !5980)
!5980 = !{!5981, !5982}
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5979, file: !2211, line: 105, baseType: !137, size: 32)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5979, file: !2211, line: 105, baseType: !137, size: 32)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5946, file: !2211, line: 106, baseType: !137, size: 32, offset: 224)
!5984 = !{!5985, !5986}
!5985 = !DILocalVariable(name: "reason", arg: 1, scope: !5936, file: !5937, line: 57, type: !32)
!5986 = !DILocalVariable(name: "esf", arg: 2, scope: !5936, file: !5937, line: 57, type: !5940)
!5987 = !DILocation(line: 0, scope: !5936)
!5988 = !DILocation(line: 63, column: 2, scope: !5936)
!5989 = !DILocation(line: 64, column: 1, scope: !5936)
!5990 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5937, file: !5937, line: 82, type: !5991, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2090, retainedNodes: !6006)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{null, !5940, !5993}
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5994, size: 32)
!5994 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !1661, line: 37, baseType: !5995)
!5995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1661, line: 25, size: 288, elements: !5996)
!5996 = !{!5997, !5998, !5999, !6000, !6001, !6002, !6003, !6004, !6005}
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5995, file: !1661, line: 26, baseType: !137, size: 32)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5995, file: !1661, line: 27, baseType: !137, size: 32, offset: 32)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5995, file: !1661, line: 28, baseType: !137, size: 32, offset: 64)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5995, file: !1661, line: 29, baseType: !137, size: 32, offset: 96)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5995, file: !1661, line: 30, baseType: !137, size: 32, offset: 128)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5995, file: !1661, line: 31, baseType: !137, size: 32, offset: 160)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5995, file: !1661, line: 32, baseType: !137, size: 32, offset: 192)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5995, file: !1661, line: 33, baseType: !137, size: 32, offset: 224)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5995, file: !1661, line: 34, baseType: !137, size: 32, offset: 256)
!6006 = !{!6007, !6008, !6009}
!6007 = !DILocalVariable(name: "esf", arg: 1, scope: !5990, file: !5937, line: 82, type: !5940)
!6008 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5990, file: !5937, line: 82, type: !5993)
!6009 = !DILocalVariable(name: "reason", scope: !5990, file: !5937, line: 88, type: !32)
!6010 = !DILocation(line: 0, scope: !5990)
!6011 = !DILocation(line: 88, column: 35, scope: !5990)
!6012 = !DILocation(line: 108, column: 2, scope: !5990)
!6013 = !DILocation(line: 131, column: 1, scope: !5990)
!6014 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5937, file: !5937, line: 133, type: !6015, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2090, retainedNodes: !6017)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{null, !102}
!6017 = !{!6018, !6019, !6020}
!6018 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6014, file: !5937, line: 133, type: !102)
!6019 = !DILocalVariable(name: "ssf_contents", scope: !6014, file: !5937, line: 135, type: !149)
!6020 = !DILocalVariable(name: "oops_esf", scope: !6014, file: !5937, line: 136, type: !5942)
!6021 = !DILocation(line: 0, scope: !6014)
!6022 = !DILocation(line: 136, column: 2, scope: !6014)
!6023 = !DILocation(line: 136, column: 15, scope: !6014)
!6024 = !DILocation(line: 139, column: 22, scope: !6014)
!6025 = !DILocation(line: 139, column: 17, scope: !6014)
!6026 = !DILocation(line: 139, column: 20, scope: !6014)
!6027 = !DILocation(line: 141, column: 2, scope: !6014)
!6028 = !DILocation(line: 142, column: 2, scope: !6014)
!6029 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6030, file: !6030, line: 40, type: !6031, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2101, retainedNodes: !6033)
!6030 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6031 = !DISubroutineType(types: !6032)
!6032 = !{null, !32}
!6033 = !{!6034}
!6034 = !DILocalVariable(name: "irq", arg: 1, scope: !6029, file: !6030, line: 40, type: !32)
!6035 = !DILocation(line: 0, scope: !6029)
!6036 = !DILocation(line: 42, column: 2, scope: !6029)
!6037 = !DILocation(line: 43, column: 1, scope: !6029)
!6038 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1347, file: !1347, line: 1684, type: !6039, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2101, retainedNodes: !6041)
!6039 = !DISubroutineType(types: !6040)
!6040 = !{null, !2105}
!6041 = !{!6042}
!6042 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6038, file: !1347, line: 1684, type: !2105)
!6043 = !DILocation(line: 0, scope: !6038)
!6044 = !DILocation(line: 1686, column: 23, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6038, file: !1347, line: 1686, column: 7)
!6046 = !DILocation(line: 1686, column: 7, scope: !6038)
!6047 = !DILocation(line: 1688, column: 5, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6045, file: !1347, line: 1687, column: 3)
!6049 = !{i64 2154443795}
!6050 = !DILocation(line: 1689, column: 81, scope: !6048)
!6051 = !DILocation(line: 1689, column: 60, scope: !6048)
!6052 = !DILocation(line: 1689, column: 34, scope: !6048)
!6053 = !DILocation(line: 1689, column: 5, scope: !6048)
!6054 = !DILocation(line: 1689, column: 43, scope: !6048)
!6055 = !DILocation(line: 1690, column: 5, scope: !6048)
!6056 = !{i64 2154443909}
!6057 = !DILocation(line: 1691, column: 3, scope: !6048)
!6058 = !DILocation(line: 1692, column: 1, scope: !6038)
!6059 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6030, file: !6030, line: 45, type: !6031, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2101, retainedNodes: !6060)
!6060 = !{!6061}
!6061 = !DILocalVariable(name: "irq", arg: 1, scope: !6059, file: !6030, line: 45, type: !32)
!6062 = !DILocation(line: 0, scope: !6059)
!6063 = !DILocation(line: 47, column: 2, scope: !6059)
!6064 = !DILocation(line: 48, column: 1, scope: !6059)
!6065 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1347, file: !1347, line: 1722, type: !6039, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2101, retainedNodes: !6066)
!6066 = !{!6067}
!6067 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6065, file: !1347, line: 1722, type: !2105)
!6068 = !DILocation(line: 0, scope: !6065)
!6069 = !DILocation(line: 1724, column: 23, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6065, file: !1347, line: 1724, column: 7)
!6071 = !DILocation(line: 1724, column: 7, scope: !6065)
!6072 = !DILocation(line: 1726, column: 81, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6070, file: !1347, line: 1725, column: 3)
!6074 = !DILocation(line: 1726, column: 60, scope: !6073)
!6075 = !DILocation(line: 1726, column: 34, scope: !6073)
!6076 = !DILocation(line: 1726, column: 5, scope: !6073)
!6077 = !DILocation(line: 1726, column: 43, scope: !6073)
!6078 = !DILocation(line: 271, column: 3, scope: !6079, inlinedAt: !6081)
!6079 = distinct !DISubprogram(name: "__DSB", scope: !6080, file: !6080, line: 269, type: !2671, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2101, retainedNodes: !162)
!6080 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6081 = distinct !DILocation(line: 1727, column: 5, scope: !6073)
!6082 = !{i64 6898182}
!6083 = !DILocation(line: 260, column: 3, scope: !6084, inlinedAt: !6085)
!6084 = distinct !DISubprogram(name: "__ISB", scope: !6080, file: !6080, line: 258, type: !2671, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2101, retainedNodes: !162)
!6085 = distinct !DILocation(line: 1728, column: 5, scope: !6073)
!6086 = !{i64 6897899}
!6087 = !DILocation(line: 1729, column: 3, scope: !6073)
!6088 = !DILocation(line: 1730, column: 1, scope: !6065)
!6089 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6030, file: !6030, line: 50, type: !6090, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2101, retainedNodes: !6092)
!6090 = !DISubroutineType(types: !6091)
!6091 = !{!103, !32}
!6092 = !{!6093}
!6093 = !DILocalVariable(name: "irq", arg: 1, scope: !6089, file: !6030, line: 50, type: !32)
!6094 = !DILocation(line: 0, scope: !6089)
!6095 = !DILocation(line: 52, column: 20, scope: !6089)
!6096 = !DILocation(line: 52, column: 9, scope: !6089)
!6097 = !DILocation(line: 52, column: 41, scope: !6089)
!6098 = !DILocation(line: 52, column: 39, scope: !6089)
!6099 = !DILocation(line: 52, column: 2, scope: !6089)
!6100 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6030, file: !6030, line: 64, type: !6101, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2101, retainedNodes: !6103)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{null, !32, !32, !137}
!6103 = !{!6104, !6105, !6106}
!6104 = !DILocalVariable(name: "irq", arg: 1, scope: !6100, file: !6030, line: 64, type: !32)
!6105 = !DILocalVariable(name: "prio", arg: 2, scope: !6100, file: !6030, line: 64, type: !32)
!6106 = !DILocalVariable(name: "flags", arg: 3, scope: !6100, file: !6030, line: 64, type: !137)
!6107 = !DILocation(line: 0, scope: !6100)
!6108 = !DILocation(line: 83, column: 8, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !6030, line: 82, column: 9)
!6110 = distinct !DILexicalBlock(scope: !6100, file: !6030, line: 76, column: 6)
!6111 = !DILocation(line: 95, column: 2, scope: !6100)
!6112 = !DILocation(line: 96, column: 1, scope: !6100)
!6113 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1347, file: !1347, line: 1814, type: !6114, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2101, retainedNodes: !6116)
!6114 = !DISubroutineType(types: !6115)
!6115 = !{null, !2105, !137}
!6116 = !{!6117, !6118}
!6117 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6113, file: !1347, line: 1814, type: !2105)
!6118 = !DILocalVariable(name: "priority", arg: 2, scope: !6113, file: !1347, line: 1814, type: !137)
!6119 = !DILocation(line: 0, scope: !6113)
!6120 = !DILocation(line: 0, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6113, file: !1347, line: 1816, column: 7)
!6122 = !DILocation(line: 1816, column: 7, scope: !6113)
!6123 = !DILocation(line: 1824, column: 1, scope: !6113)
!6124 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6030, file: !6030, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2101, retainedNodes: !6125)
!6125 = !{!6126}
!6126 = !DILocalVariable(name: "unused", arg: 1, scope: !6124, file: !6030, line: 155, type: !13)
!6127 = !DILocation(line: 0, scope: !6124)
!6128 = !DILocation(line: 159, column: 2, scope: !6124)
!6129 = !DILocation(line: 160, column: 1, scope: !6124)
!6130 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6131, file: !6131, line: 87, type: !2671, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2148, retainedNodes: !162)
!6131 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6132 = !DILocation(line: 89, column: 2, scope: !6130)
!6133 = !DILocation(line: 90, column: 2, scope: !6130)
!6134 = !DILocation(line: 91, column: 1, scope: !6130)
!6135 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6131, file: !6131, line: 23, type: !2671, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6136 = !DISubprogram(name: "z_arm_int_exit", scope: !6137, file: !6137, line: 153, type: !2671, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6137 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6138 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6139, file: !6139, line: 256, type: !2671, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2150, retainedNodes: !162)
!6139 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6140 = !DILocation(line: 258, column: 2, scope: !6138)
!6141 = !DILocation(line: 260, column: 2, scope: !6138)
!6142 = !DILocation(line: 262, column: 2, scope: !6138)
!6143 = !DILocation(line: 263, column: 2, scope: !6138)
!6144 = !DILocation(line: 267, column: 2, scope: !6138)
!6145 = !DILocation(line: 268, column: 2, scope: !6138)
!6146 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6139, file: !6139, line: 53, type: !2671, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2150, retainedNodes: !162)
!6147 = !DILocation(line: 55, column: 12, scope: !6146)
!6148 = !DILocation(line: 271, column: 3, scope: !6149, inlinedAt: !6150)
!6149 = distinct !DISubprogram(name: "__DSB", scope: !6080, file: !6080, line: 269, type: !2671, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2150, retainedNodes: !162)
!6150 = distinct !DILocation(line: 56, column: 2, scope: !6146)
!6151 = !{i64 6933956}
!6152 = !DILocation(line: 260, column: 3, scope: !6153, inlinedAt: !6154)
!6153 = distinct !DISubprogram(name: "__ISB", scope: !6080, file: !6080, line: 258, type: !2671, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2150, retainedNodes: !162)
!6154 = distinct !DILocation(line: 57, column: 2, scope: !6146)
!6155 = !{i64 6933673}
!6156 = !DILocation(line: 58, column: 1, scope: !6146)
!6157 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6139, file: !6139, line: 96, type: !2671, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2150, retainedNodes: !162)
!6158 = !DILocation(line: 103, column: 13, scope: !6157)
!6159 = !DILocation(line: 975, column: 3, scope: !6160, inlinedAt: !6163)
!6160 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6080, file: !6080, line: 971, type: !135, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2150, retainedNodes: !6161)
!6161 = !{!6162}
!6162 = !DILocalVariable(name: "result", scope: !6160, file: !6080, line: 973, type: !137)
!6163 = distinct !DILocation(line: 189, column: 16, scope: !6157)
!6164 = !{i64 6954786}
!6165 = !DILocation(line: 0, scope: !6160, inlinedAt: !6163)
!6166 = !DILocation(line: 189, column: 32, scope: !6157)
!6167 = !DILocalVariable(name: "control", arg: 1, scope: !6168, file: !6080, line: 1001, type: !137)
!6168 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6080, file: !6080, line: 1001, type: !6169, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2150, retainedNodes: !6171)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{null, !137}
!6171 = !{!6167}
!6172 = !DILocation(line: 0, scope: !6168, inlinedAt: !6173)
!6173 = distinct !DILocation(line: 189, column: 2, scope: !6157)
!6174 = !DILocation(line: 1003, column: 3, scope: !6168, inlinedAt: !6173)
!6175 = !{i64 6955506}
!6176 = !DILocation(line: 260, column: 3, scope: !6153, inlinedAt: !6177)
!6177 = distinct !DILocation(line: 1004, column: 3, scope: !6168, inlinedAt: !6173)
!6178 = !DILocation(line: 191, column: 1, scope: !6157)
!6179 = distinct !DISubprogram(name: "arch_swap", scope: !6180, file: !6180, line: 33, type: !6090, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !6181)
!6180 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6181 = !{!6182}
!6182 = !DILocalVariable(name: "key", arg: 1, scope: !6179, file: !6180, line: 33, type: !32)
!6183 = !DILocation(line: 0, scope: !6179)
!6184 = !DILocation(line: 36, column: 2, scope: !6179)
!6185 = !DILocation(line: 36, column: 17, scope: !6179)
!6186 = !DILocation(line: 36, column: 25, scope: !6179)
!6187 = !DILocation(line: 37, column: 37, scope: !6179)
!6188 = !DILocation(line: 37, column: 17, scope: !6179)
!6189 = !DILocation(line: 37, column: 35, scope: !6179)
!6190 = !DILocation(line: 41, column: 12, scope: !6179)
!6191 = !DILocalVariable(name: "key", arg: 1, scope: !6192, file: !6193, line: 84, type: !32)
!6192 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6031, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !6194)
!6193 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6194 = !{!6191}
!6195 = !DILocation(line: 0, scope: !6192, inlinedAt: !6196)
!6196 = distinct !DILocation(line: 44, column: 2, scope: !6179)
!6197 = !DILocation(line: 95, column: 2, scope: !6192, inlinedAt: !6196)
!6198 = !{i64 2840454}
!6199 = !DILocation(line: 53, column: 9, scope: !6179)
!6200 = !DILocation(line: 53, column: 24, scope: !6179)
!6201 = !DILocation(line: 53, column: 2, scope: !6179)
!6202 = distinct !DISubprogram(name: "arch_new_thread", scope: !6203, file: !6203, line: 56, type: !6204, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !6305)
!6203 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6204 = !DISubroutineType(types: !6205)
!6205 = !{null, !6206, !6300, !818, !2989, !102, !102, !102}
!6206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6207, size: 32)
!6207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1595, line: 245, size: 896, elements: !6208)
!6208 = !{!6209, !6267, !6279, !6280, !6281, !6282, !6295}
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6207, file: !1595, line: 247, baseType: !6210, size: 384)
!6210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1595, line: 57, size: 384, elements: !6211)
!6211 = !{!6212, !6236, !6243, !6244, !6245, !6254, !6255, !6256}
!6212 = !DIDerivedType(tag: DW_TAG_member, scope: !6210, file: !1595, line: 60, baseType: !6213, size: 64)
!6213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6210, file: !1595, line: 60, size: 64, elements: !6214)
!6214 = !{!6215, !6230}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6213, file: !1595, line: 61, baseType: !6216, size: 64)
!6216 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1605, line: 49, baseType: !6217)
!6217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1605, line: 37, size: 64, elements: !6218)
!6218 = !{!6219, !6225}
!6219 = !DIDerivedType(tag: DW_TAG_member, scope: !6217, file: !1605, line: 38, baseType: !6220, size: 32)
!6220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6217, file: !1605, line: 38, size: 32, elements: !6221)
!6221 = !{!6222, !6224}
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6220, file: !1605, line: 39, baseType: !6223, size: 32)
!6223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6217, size: 32)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6220, file: !1605, line: 40, baseType: !6223, size: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, scope: !6217, file: !1605, line: 42, baseType: !6226, size: 32, offset: 32)
!6226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6217, file: !1605, line: 42, size: 32, elements: !6227)
!6227 = !{!6228, !6229}
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6226, file: !1605, line: 43, baseType: !6223, size: 32)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6226, file: !1605, line: 44, baseType: !6223, size: 32)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6213, file: !1595, line: 62, baseType: !6231, size: 64)
!6231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1621, line: 49, size: 64, elements: !6232)
!6232 = !{!6233}
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6231, file: !1621, line: 50, baseType: !6234, size: 64)
!6234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6235, size: 64, elements: !1182)
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 32)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6210, file: !1595, line: 68, baseType: !6237, size: 32, offset: 64)
!6237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6238, size: 32)
!6238 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1584, line: 233, baseType: !6239)
!6239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1584, line: 231, size: 64, elements: !6240)
!6240 = !{!6241}
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6239, file: !1584, line: 232, baseType: !6242, size: 64)
!6242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1605, line: 48, baseType: !6217)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6210, file: !1595, line: 71, baseType: !465, size: 8, offset: 96)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6210, file: !1595, line: 74, baseType: !465, size: 8, offset: 104)
!6245 = !DIDerivedType(tag: DW_TAG_member, scope: !6210, file: !1595, line: 90, baseType: !6246, size: 16, offset: 112)
!6246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6210, file: !1595, line: 90, size: 16, elements: !6247)
!6247 = !{!6248, !6253}
!6248 = !DIDerivedType(tag: DW_TAG_member, scope: !6246, file: !1595, line: 91, baseType: !6249, size: 16)
!6249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6246, file: !1595, line: 91, size: 16, elements: !6250)
!6250 = !{!6251, !6252}
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6249, file: !1595, line: 96, baseType: !1642, size: 8)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6249, file: !1595, line: 97, baseType: !465, size: 8, offset: 8)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6246, file: !1595, line: 100, baseType: !151, size: 16)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6210, file: !1595, line: 107, baseType: !137, size: 32, offset: 128)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6210, file: !1595, line: 127, baseType: !102, size: 32, offset: 160)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6210, file: !1595, line: 131, baseType: !6257, size: 192, offset: 192)
!6257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1584, line: 244, size: 192, elements: !6258)
!6258 = !{!6259, !6260, !6266}
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6257, file: !1584, line: 245, baseType: !6216, size: 64)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6257, file: !1584, line: 246, baseType: !6261, size: 32, offset: 64)
!6261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1584, line: 242, baseType: !6262)
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 32)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{null, !6265}
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6257, size: 32)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6257, file: !1584, line: 249, baseType: !1343, size: 64, offset: 128)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6207, file: !1595, line: 250, baseType: !6268, size: 288, offset: 384)
!6268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1661, line: 25, size: 288, elements: !6269)
!6269 = !{!6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278}
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6268, file: !1661, line: 26, baseType: !137, size: 32)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6268, file: !1661, line: 27, baseType: !137, size: 32, offset: 32)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6268, file: !1661, line: 28, baseType: !137, size: 32, offset: 64)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6268, file: !1661, line: 29, baseType: !137, size: 32, offset: 96)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6268, file: !1661, line: 30, baseType: !137, size: 32, offset: 128)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6268, file: !1661, line: 31, baseType: !137, size: 32, offset: 160)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6268, file: !1661, line: 32, baseType: !137, size: 32, offset: 192)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6268, file: !1661, line: 33, baseType: !137, size: 32, offset: 224)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6268, file: !1661, line: 34, baseType: !137, size: 32, offset: 256)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6207, file: !1595, line: 253, baseType: !102, size: 32, offset: 672)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6207, file: !1595, line: 256, baseType: !6238, size: 64, offset: 704)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6207, file: !1595, line: 294, baseType: !103, size: 32, offset: 768)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6207, file: !1595, line: 325, baseType: !6283, size: 32, offset: 800)
!6283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6284, size: 32)
!6284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1678, line: 5073, size: 160, elements: !6285)
!6285 = !{!6286, !6292, !6293}
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6284, file: !1678, line: 5074, baseType: !6287, size: 96)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !6288)
!6288 = !{!6289, !6290, !6291}
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6287, file: !113, line: 57, baseType: !116, size: 32)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6287, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6287, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6284, file: !1678, line: 5075, baseType: !6238, size: 64, offset: 96)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6284, file: !1678, line: 5076, baseType: !6294, offset: 160)
!6294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1451, line: 43, elements: !162)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6207, file: !1595, line: 343, baseType: !6296, size: 64, offset: 832)
!6296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1661, line: 60, size: 64, elements: !6297)
!6297 = !{!6298, !6299}
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6296, file: !1661, line: 63, baseType: !137, size: 32)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6296, file: !1661, line: 66, baseType: !137, size: 32, offset: 32)
!6300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6301, size: 32)
!6301 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !2990, line: 44, baseType: !6302)
!6302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1709, line: 47, size: 8, elements: !6303)
!6303 = !{!6304}
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6302, file: !1709, line: 48, baseType: !109, size: 8)
!6305 = !{!6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313}
!6306 = !DILocalVariable(name: "thread", arg: 1, scope: !6202, file: !6203, line: 56, type: !6206)
!6307 = !DILocalVariable(name: "stack", arg: 2, scope: !6202, file: !6203, line: 56, type: !6300)
!6308 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6202, file: !6203, line: 57, type: !818)
!6309 = !DILocalVariable(name: "entry", arg: 4, scope: !6202, file: !6203, line: 57, type: !2989)
!6310 = !DILocalVariable(name: "p1", arg: 5, scope: !6202, file: !6203, line: 58, type: !102)
!6311 = !DILocalVariable(name: "p2", arg: 6, scope: !6202, file: !6203, line: 58, type: !102)
!6312 = !DILocalVariable(name: "p3", arg: 7, scope: !6202, file: !6203, line: 58, type: !102)
!6313 = !DILocalVariable(name: "iframe", scope: !6202, file: !6203, line: 60, type: !2209)
!6314 = !DILocation(line: 0, scope: !6202)
!6315 = !DILocation(line: 85, column: 11, scope: !6202)
!6316 = !DILocation(line: 93, column: 10, scope: !6202)
!6317 = !DILocation(line: 98, column: 13, scope: !6202)
!6318 = !DILocation(line: 100, column: 15, scope: !6202)
!6319 = !DILocation(line: 100, column: 10, scope: !6202)
!6320 = !DILocation(line: 100, column: 13, scope: !6202)
!6321 = !DILocation(line: 101, column: 15, scope: !6202)
!6322 = !DILocation(line: 101, column: 10, scope: !6202)
!6323 = !DILocation(line: 101, column: 13, scope: !6202)
!6324 = !DILocation(line: 102, column: 15, scope: !6202)
!6325 = !DILocation(line: 102, column: 10, scope: !6202)
!6326 = !DILocation(line: 102, column: 13, scope: !6202)
!6327 = !DILocation(line: 103, column: 15, scope: !6202)
!6328 = !DILocation(line: 103, column: 10, scope: !6202)
!6329 = !DILocation(line: 103, column: 13, scope: !6202)
!6330 = !DILocation(line: 106, column: 10, scope: !6202)
!6331 = !DILocation(line: 106, column: 15, scope: !6202)
!6332 = !DILocation(line: 122, column: 29, scope: !6202)
!6333 = !DILocation(line: 122, column: 23, scope: !6202)
!6334 = !DILocation(line: 122, column: 27, scope: !6202)
!6335 = !DILocation(line: 123, column: 15, scope: !6202)
!6336 = !DILocation(line: 123, column: 23, scope: !6202)
!6337 = !DILocation(line: 143, column: 1, scope: !6202)
!6338 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6203, file: !6203, line: 530, type: !6339, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !6341)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{null, !6206, !818, !2989}
!6341 = !{!6342, !6343, !6344}
!6342 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6338, file: !6203, line: 530, type: !6206)
!6343 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6338, file: !6203, line: 530, type: !818)
!6344 = !DILocalVariable(name: "_main", arg: 3, scope: !6338, file: !6203, line: 531, type: !2989)
!6345 = !DILocation(line: 0, scope: !6338)
!6346 = !DILocation(line: 535, column: 11, scope: !6338)
!6347 = !DILocation(line: 576, column: 2, scope: !6338)
!6348 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6349 = !DILocation(line: 603, column: 2, scope: !6338)
!6350 = distinct !DISubprogram(name: "z_arm_fault", scope: !6351, file: !6351, line: 1036, type: !6352, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !6367)
!6351 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6352 = !DISubroutineType(types: !6353)
!6353 = !{null, !137, !137, !137, !6354}
!6354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6355, size: 32)
!6355 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !1661, line: 37, baseType: !6356)
!6356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1661, line: 25, size: 288, elements: !6357)
!6357 = !{!6358, !6359, !6360, !6361, !6362, !6363, !6364, !6365, !6366}
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6356, file: !1661, line: 26, baseType: !137, size: 32)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6356, file: !1661, line: 27, baseType: !137, size: 32, offset: 32)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6356, file: !1661, line: 28, baseType: !137, size: 32, offset: 64)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6356, file: !1661, line: 29, baseType: !137, size: 32, offset: 96)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6356, file: !1661, line: 30, baseType: !137, size: 32, offset: 128)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6356, file: !1661, line: 31, baseType: !137, size: 32, offset: 160)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6356, file: !1661, line: 32, baseType: !137, size: 32, offset: 192)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6356, file: !1661, line: 33, baseType: !137, size: 32, offset: 224)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6356, file: !1661, line: 34, baseType: !137, size: 32, offset: 256)
!6367 = !{!6368, !6369, !6370, !6371, !6372, !6373, !6374, !6375, !6376, !6377}
!6368 = !DILocalVariable(name: "msp", arg: 1, scope: !6350, file: !6351, line: 1036, type: !137)
!6369 = !DILocalVariable(name: "psp", arg: 2, scope: !6350, file: !6351, line: 1036, type: !137)
!6370 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6350, file: !6351, line: 1036, type: !137)
!6371 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6350, file: !6351, line: 1037, type: !6354)
!6372 = !DILocalVariable(name: "reason", scope: !6350, file: !6351, line: 1039, type: !137)
!6373 = !DILocalVariable(name: "fault", scope: !6350, file: !6351, line: 1040, type: !103)
!6374 = !DILocalVariable(name: "recoverable", scope: !6350, file: !6351, line: 1041, type: !636)
!6375 = !DILocalVariable(name: "nested_exc", scope: !6350, file: !6351, line: 1041, type: !636)
!6376 = !DILocalVariable(name: "esf", scope: !6350, file: !6351, line: 1042, type: !2277)
!6377 = !DILocalVariable(name: "esf_copy", scope: !6350, file: !6351, line: 1047, type: !2278)
!6378 = !DILocation(line: 0, scope: !6350)
!6379 = !DILocation(line: 1040, column: 19, scope: !6350)
!6380 = !DILocation(line: 1040, column: 24, scope: !6350)
!6381 = !DILocation(line: 1041, column: 2, scope: !6350)
!6382 = !DILocation(line: 1047, column: 2, scope: !6350)
!6383 = !DILocation(line: 1047, column: 15, scope: !6350)
!6384 = !DILocalVariable(name: "key", arg: 1, scope: !6385, file: !6193, line: 84, type: !32)
!6385 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6031, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !6386)
!6386 = !{!6384}
!6387 = !DILocation(line: 0, scope: !6385, inlinedAt: !6388)
!6388 = distinct !DILocation(line: 1050, column: 2, scope: !6350)
!6389 = !DILocation(line: 95, column: 2, scope: !6385, inlinedAt: !6388)
!6390 = !{i64 2873698}
!6391 = !DILocation(line: 1055, column: 9, scope: !6350)
!6392 = !DILocation(line: 1063, column: 11, scope: !6350)
!6393 = !DILocation(line: 1064, column: 6, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6350, file: !6351, line: 1064, column: 6)
!6395 = !{i8 0, i8 2}
!6396 = !DILocation(line: 1064, column: 6, scope: !6350)
!6397 = !DILocation(line: 1070, column: 20, scope: !6350)
!6398 = !DILocation(line: 1070, column: 2, scope: !6350)
!6399 = !DILocation(line: 1089, column: 6, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6350, file: !6351, line: 1089, column: 6)
!6401 = !DILocation(line: 0, scope: !6400)
!6402 = !DILocation(line: 1089, column: 6, scope: !6350)
!6403 = !DILocation(line: 1090, column: 28, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !6351, line: 1090, column: 7)
!6405 = distinct !DILexicalBlock(scope: !6400, file: !6351, line: 1089, column: 18)
!6406 = !DILocation(line: 1090, column: 44, scope: !6404)
!6407 = !DILocation(line: 1090, column: 7, scope: !6405)
!6408 = !DILocation(line: 1091, column: 24, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6404, file: !6351, line: 1090, column: 50)
!6410 = !DILocation(line: 1092, column: 3, scope: !6409)
!6411 = !DILocation(line: 1094, column: 23, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6400, file: !6351, line: 1093, column: 9)
!6413 = !DILocation(line: 1097, column: 2, scope: !6350)
!6414 = !DILocation(line: 1098, column: 1, scope: !6350)
!6415 = distinct !DISubprogram(name: "get_esf", scope: !6351, file: !6351, line: 894, type: !6416, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !6419)
!6416 = !DISubroutineType(types: !6417)
!6417 = !{!2277, !137, !137, !137, !6418}
!6418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!6419 = !{!6420, !6421, !6422, !6423, !6424, !6425}
!6420 = !DILocalVariable(name: "msp", arg: 1, scope: !6415, file: !6351, line: 894, type: !137)
!6421 = !DILocalVariable(name: "psp", arg: 2, scope: !6415, file: !6351, line: 894, type: !137)
!6422 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6415, file: !6351, line: 894, type: !137)
!6423 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6415, file: !6351, line: 895, type: !6418)
!6424 = !DILocalVariable(name: "alternative_state_exc", scope: !6415, file: !6351, line: 897, type: !636)
!6425 = !DILocalVariable(name: "ptr_esf", scope: !6415, file: !6351, line: 898, type: !2277)
!6426 = !DILocation(line: 0, scope: !6415)
!6427 = !DILocation(line: 900, column: 14, scope: !6415)
!6428 = !DILocation(line: 902, column: 49, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6415, file: !6351, line: 902, column: 6)
!6430 = !DILocation(line: 902, column: 6, scope: !6415)
!6431 = !DILocation(line: 983, column: 18, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6415, file: !6351, line: 983, column: 6)
!6433 = !DILocation(line: 991, column: 7, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !6351, line: 990, column: 30)
!6435 = distinct !DILexicalBlock(scope: !6415, file: !6351, line: 990, column: 6)
!6436 = !DILocation(line: 998, column: 16, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !6351, line: 995, column: 10)
!6438 = distinct !DILexicalBlock(scope: !6434, file: !6351, line: 991, column: 7)
!6439 = !DILocation(line: 1002, column: 2, scope: !6415)
!6440 = !DILocation(line: 1003, column: 1, scope: !6415)
!6441 = distinct !DISubprogram(name: "fault_handle", scope: !6351, file: !6351, line: 786, type: !6442, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !6444)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{!137, !2277, !103, !6418}
!6444 = !{!6445, !6446, !6447, !6448}
!6445 = !DILocalVariable(name: "esf", arg: 1, scope: !6441, file: !6351, line: 786, type: !2277)
!6446 = !DILocalVariable(name: "fault", arg: 2, scope: !6441, file: !6351, line: 786, type: !103)
!6447 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6441, file: !6351, line: 786, type: !6418)
!6448 = !DILocalVariable(name: "reason", scope: !6441, file: !6351, line: 788, type: !137)
!6449 = !DILocation(line: 0, scope: !6441)
!6450 = !DILocation(line: 790, column: 15, scope: !6441)
!6451 = !DILocation(line: 792, column: 2, scope: !6441)
!6452 = !DILocation(line: 794, column: 12, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6441, file: !6351, line: 792, column: 17)
!6454 = !DILocation(line: 795, column: 3, scope: !6453)
!6455 = !DILocation(line: 800, column: 12, scope: !6453)
!6456 = !DILocation(line: 801, column: 3, scope: !6453)
!6457 = !DILocation(line: 803, column: 12, scope: !6453)
!6458 = !DILocation(line: 804, column: 3, scope: !6453)
!6459 = !DILocation(line: 806, column: 12, scope: !6453)
!6460 = !DILocation(line: 807, column: 3, scope: !6453)
!6461 = !DILocation(line: 814, column: 3, scope: !6453)
!6462 = !DILocation(line: 815, column: 3, scope: !6453)
!6463 = !DILocation(line: 829, column: 2, scope: !6441)
!6464 = distinct !DISubprogram(name: "hard_fault", scope: !6351, file: !6351, line: 709, type: !6465, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !6467)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{!137, !2277, !6418}
!6467 = !{!6468, !6469, !6470}
!6468 = !DILocalVariable(name: "esf", arg: 1, scope: !6464, file: !6351, line: 709, type: !2277)
!6469 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6464, file: !6351, line: 709, type: !6418)
!6470 = !DILocalVariable(name: "reason", scope: !6464, file: !6351, line: 711, type: !137)
!6471 = !DILocation(line: 0, scope: !6464)
!6472 = !DILocation(line: 732, column: 15, scope: !6464)
!6473 = !DILocation(line: 734, column: 12, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6464, file: !6351, line: 734, column: 6)
!6475 = !DILocation(line: 734, column: 17, scope: !6474)
!6476 = !DILocation(line: 734, column: 41, scope: !6474)
!6477 = !DILocation(line: 734, column: 6, scope: !6464)
!6478 = !DILocation(line: 736, column: 19, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6474, file: !6351, line: 736, column: 13)
!6480 = !DILocation(line: 736, column: 49, scope: !6479)
!6481 = !DILocation(line: 736, column: 13, scope: !6474)
!6482 = !DILocation(line: 738, column: 19, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6479, file: !6351, line: 738, column: 13)
!6484 = !DILocation(line: 738, column: 24, scope: !6483)
!6485 = !DILocation(line: 738, column: 47, scope: !6483)
!6486 = !DILocation(line: 738, column: 13, scope: !6479)
!6487 = !DILocation(line: 740, column: 7, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6489, file: !6351, line: 740, column: 7)
!6489 = distinct !DILexicalBlock(scope: !6483, file: !6351, line: 738, column: 53)
!6490 = !DILocation(line: 740, column: 7, scope: !6489)
!6491 = !DILocation(line: 742, column: 24, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !6351, line: 740, column: 38)
!6493 = !DILocation(line: 743, column: 3, scope: !6492)
!6494 = !DILocation(line: 743, column: 20, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6488, file: !6351, line: 743, column: 14)
!6496 = !DILocation(line: 743, column: 25, scope: !6495)
!6497 = !DILocation(line: 743, column: 52, scope: !6495)
!6498 = !DILocation(line: 743, column: 14, scope: !6488)
!6499 = !DILocation(line: 744, column: 13, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6495, file: !6351, line: 743, column: 58)
!6501 = !DILocation(line: 745, column: 3, scope: !6500)
!6502 = !DILocation(line: 745, column: 20, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6495, file: !6351, line: 745, column: 14)
!6504 = !DILocation(line: 745, column: 25, scope: !6503)
!6505 = !DILocation(line: 745, column: 52, scope: !6503)
!6506 = !DILocation(line: 745, column: 14, scope: !6495)
!6507 = !DILocation(line: 746, column: 13, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6503, file: !6351, line: 745, column: 58)
!6509 = !DILocation(line: 747, column: 3, scope: !6508)
!6510 = !DILocation(line: 747, column: 20, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6503, file: !6351, line: 747, column: 14)
!6512 = !DILocation(line: 747, column: 52, scope: !6511)
!6513 = !DILocation(line: 747, column: 14, scope: !6503)
!6514 = !DILocation(line: 748, column: 13, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6511, file: !6351, line: 747, column: 58)
!6516 = !DILocation(line: 753, column: 3, scope: !6515)
!6517 = !DILocation(line: 766, column: 2, scope: !6464)
!6518 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6351, file: !6351, line: 229, type: !6442, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !6519)
!6519 = !{!6520, !6521, !6522, !6523, !6524, !6525}
!6520 = !DILocalVariable(name: "esf", arg: 1, scope: !6518, file: !6351, line: 229, type: !2277)
!6521 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6518, file: !6351, line: 229, type: !103)
!6522 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6518, file: !6351, line: 230, type: !6418)
!6523 = !DILocalVariable(name: "reason", scope: !6518, file: !6351, line: 232, type: !137)
!6524 = !DILocalVariable(name: "mmfar", scope: !6518, file: !6351, line: 233, type: !137)
!6525 = !DILocalVariable(name: "temp", scope: !6526, file: !6351, line: 254, type: !137)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !6351, line: 244, column: 48)
!6527 = distinct !DILexicalBlock(scope: !6518, file: !6351, line: 244, column: 6)
!6528 = !DILocation(line: 0, scope: !6518)
!6529 = !DILocation(line: 237, column: 12, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6518, file: !6351, line: 237, column: 6)
!6531 = !DILocation(line: 241, column: 12, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6518, file: !6351, line: 241, column: 6)
!6533 = !DILocation(line: 244, column: 12, scope: !6527)
!6534 = !DILocation(line: 244, column: 17, scope: !6527)
!6535 = !DILocation(line: 244, column: 42, scope: !6527)
!6536 = !DILocation(line: 244, column: 6, scope: !6518)
!6537 = !DILocation(line: 254, column: 24, scope: !6526)
!6538 = !DILocation(line: 0, scope: !6526)
!6539 = !DILocation(line: 256, column: 13, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6526, file: !6351, line: 256, column: 7)
!6541 = !DILocation(line: 256, column: 18, scope: !6540)
!6542 = !DILocation(line: 256, column: 44, scope: !6540)
!6543 = !DILocation(line: 256, column: 7, scope: !6526)
!6544 = !DILocation(line: 261, column: 15, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !6351, line: 259, column: 30)
!6546 = distinct !DILexicalBlock(scope: !6547, file: !6351, line: 259, column: 8)
!6547 = distinct !DILexicalBlock(scope: !6540, file: !6351, line: 256, column: 50)
!6548 = !DILocation(line: 262, column: 4, scope: !6545)
!6549 = !DILocation(line: 265, column: 12, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6518, file: !6351, line: 265, column: 6)
!6551 = !DILocation(line: 269, column: 12, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6518, file: !6351, line: 269, column: 6)
!6553 = !DILocation(line: 288, column: 12, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6518, file: !6351, line: 288, column: 6)
!6555 = !DILocation(line: 288, column: 17, scope: !6554)
!6556 = !DILocation(line: 288, column: 41, scope: !6554)
!6557 = !DILocation(line: 289, column: 9, scope: !6554)
!6558 = !DILocation(line: 288, column: 6, scope: !6518)
!6559 = !DILocation(line: 360, column: 12, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6518, file: !6351, line: 360, column: 6)
!6561 = !DILocation(line: 360, column: 17, scope: !6560)
!6562 = !DILocation(line: 360, column: 41, scope: !6560)
!6563 = !DILocation(line: 360, column: 6, scope: !6518)
!6564 = !DILocation(line: 361, column: 14, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6560, file: !6351, line: 360, column: 47)
!6566 = !DILocation(line: 362, column: 2, scope: !6565)
!6567 = !DILocation(line: 366, column: 12, scope: !6518)
!6568 = !DILocation(line: 369, column: 15, scope: !6518)
!6569 = !DILocation(line: 371, column: 2, scope: !6518)
!6570 = distinct !DISubprogram(name: "bus_fault", scope: !6351, file: !6351, line: 383, type: !6571, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !6573)
!6571 = !DISubroutineType(types: !6572)
!6572 = !{!103, !2277, !103, !6418}
!6573 = !{!6574, !6575, !6576, !6577, !6578}
!6574 = !DILocalVariable(name: "esf", arg: 1, scope: !6570, file: !6351, line: 383, type: !2277)
!6575 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6570, file: !6351, line: 383, type: !103)
!6576 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6570, file: !6351, line: 383, type: !6418)
!6577 = !DILocalVariable(name: "reason", scope: !6570, file: !6351, line: 385, type: !137)
!6578 = !DILocalVariable(name: "bfar", scope: !6579, file: !6351, line: 405, type: !137)
!6579 = distinct !DILexicalBlock(scope: !6580, file: !6351, line: 395, column: 42)
!6580 = distinct !DILexicalBlock(scope: !6570, file: !6351, line: 395, column: 6)
!6581 = !DILocation(line: 0, scope: !6570)
!6582 = !DILocation(line: 389, column: 11, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6570, file: !6351, line: 389, column: 6)
!6584 = !DILocation(line: 392, column: 11, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6570, file: !6351, line: 392, column: 6)
!6586 = !DILocation(line: 395, column: 11, scope: !6580)
!6587 = !DILocation(line: 395, column: 16, scope: !6580)
!6588 = !DILocation(line: 395, column: 6, scope: !6570)
!6589 = !DILocation(line: 405, column: 3, scope: !6579)
!6590 = !DILocation(line: 0, scope: !6579)
!6591 = !DILocation(line: 407, column: 13, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6579, file: !6351, line: 407, column: 7)
!6593 = !DILocation(line: 407, column: 18, scope: !6592)
!6594 = !DILocation(line: 407, column: 44, scope: !6592)
!6595 = !DILocation(line: 407, column: 7, scope: !6579)
!6596 = !DILocation(line: 411, column: 15, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6598, file: !6351, line: 409, column: 30)
!6598 = distinct !DILexicalBlock(scope: !6599, file: !6351, line: 409, column: 8)
!6599 = distinct !DILexicalBlock(scope: !6592, file: !6351, line: 407, column: 50)
!6600 = !DILocation(line: 412, column: 4, scope: !6597)
!6601 = !DILocation(line: 415, column: 11, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6570, file: !6351, line: 415, column: 6)
!6603 = !DILocation(line: 418, column: 12, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6570, file: !6351, line: 418, column: 6)
!6605 = !DILocation(line: 418, column: 17, scope: !6604)
!6606 = !DILocation(line: 418, column: 41, scope: !6604)
!6607 = !DILocation(line: 418, column: 6, scope: !6570)
!6608 = !DILocation(line: 423, column: 18, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6604, file: !6351, line: 423, column: 13)
!6610 = !DILocation(line: 524, column: 12, scope: !6570)
!6611 = !DILocation(line: 526, column: 15, scope: !6570)
!6612 = !DILocation(line: 528, column: 2, scope: !6570)
!6613 = distinct !DISubprogram(name: "usage_fault", scope: !6351, file: !6351, line: 539, type: !6614, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !6618)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!137, !6616}
!6616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6617, size: 32)
!6617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2278)
!6618 = !{!6619, !6620}
!6619 = !DILocalVariable(name: "esf", arg: 1, scope: !6613, file: !6351, line: 539, type: !6616)
!6620 = !DILocalVariable(name: "reason", scope: !6613, file: !6351, line: 541, type: !137)
!6621 = !DILocation(line: 0, scope: !6613)
!6622 = !DILocation(line: 546, column: 12, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6613, file: !6351, line: 546, column: 6)
!6624 = !DILocation(line: 549, column: 12, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6613, file: !6351, line: 549, column: 6)
!6626 = !DILocation(line: 567, column: 12, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6613, file: !6351, line: 567, column: 6)
!6628 = !DILocation(line: 570, column: 12, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6613, file: !6351, line: 570, column: 6)
!6630 = !DILocation(line: 573, column: 12, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6613, file: !6351, line: 573, column: 6)
!6632 = !DILocation(line: 576, column: 12, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6613, file: !6351, line: 576, column: 6)
!6634 = !DILocation(line: 581, column: 12, scope: !6613)
!6635 = !DILocation(line: 583, column: 2, scope: !6613)
!6636 = distinct !DISubprogram(name: "debug_monitor", scope: !6351, file: !6351, line: 632, type: !6637, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !6639)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{null, !2277, !6418}
!6639 = !{!6640, !6641}
!6640 = !DILocalVariable(name: "esf", arg: 1, scope: !6636, file: !6351, line: 632, type: !2277)
!6641 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6636, file: !6351, line: 632, type: !6418)
!6642 = !DILocation(line: 0, scope: !6636)
!6643 = !DILocation(line: 634, column: 15, scope: !6636)
!6644 = !DILocation(line: 652, column: 1, scope: !6636)
!6645 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6351, file: !6351, line: 658, type: !6646, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !6648)
!6646 = !DISubroutineType(types: !6647)
!6647 = !{!636, !2277}
!6648 = !{!6649, !6650, !6651}
!6649 = !DILocalVariable(name: "esf", arg: 1, scope: !6645, file: !6351, line: 658, type: !2277)
!6650 = !DILocalVariable(name: "ret_addr", scope: !6645, file: !6351, line: 660, type: !150)
!6651 = !DILocalVariable(name: "fault_insn", scope: !6645, file: !6351, line: 686, type: !151)
!6652 = !DILocation(line: 0, scope: !6645)
!6653 = !DILocation(line: 660, column: 46, scope: !6645)
!6654 = !DILocation(line: 660, column: 23, scope: !6645)
!6655 = !DILocation(line: 682, column: 11, scope: !6645)
!6656 = !DILocation(line: 271, column: 3, scope: !6657, inlinedAt: !6658)
!6657 = distinct !DISubprogram(name: "__DSB", scope: !6080, file: !6080, line: 269, type: !2671, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !162)
!6658 = distinct !DILocation(line: 683, column: 2, scope: !6645)
!6659 = !{i64 6961060}
!6660 = !DILocation(line: 260, column: 3, scope: !6661, inlinedAt: !6662)
!6661 = distinct !DISubprogram(name: "__ISB", scope: !6080, file: !6080, line: 258, type: !2671, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !162)
!6662 = distinct !DILocation(line: 684, column: 2, scope: !6645)
!6663 = !{i64 6960777}
!6664 = !DILocation(line: 686, column: 35, scope: !6645)
!6665 = !DILocation(line: 686, column: 24, scope: !6645)
!6666 = !DILocation(line: 688, column: 11, scope: !6645)
!6667 = !DILocation(line: 271, column: 3, scope: !6657, inlinedAt: !6668)
!6668 = distinct !DILocation(line: 689, column: 2, scope: !6645)
!6669 = !DILocation(line: 260, column: 3, scope: !6661, inlinedAt: !6670)
!6670 = distinct !DILocation(line: 690, column: 2, scope: !6645)
!6671 = !DILocation(line: 693, column: 45, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6645, file: !6351, line: 693, column: 6)
!6673 = !DILocation(line: 699, column: 1, scope: !6645)
!6674 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6351, file: !6351, line: 1107, type: !2671, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2249, retainedNodes: !162)
!6675 = !DILocation(line: 1111, column: 11, scope: !6674)
!6676 = !DILocation(line: 1136, column: 1, scope: !6674)
!6677 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6678, file: !6678, line: 26, type: !2671, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !6679)
!6678 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6679 = !{!6680}
!6680 = !DILocalVariable(name: "irq", scope: !6677, file: !6678, line: 28, type: !103)
!6681 = !DILocation(line: 0, scope: !6677)
!6682 = !DILocation(line: 30, column: 2, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6677, file: !6678, line: 30, column: 2)
!6684 = !DILocation(line: 31, column: 3, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !6678, line: 30, column: 39)
!6686 = distinct !DILexicalBlock(scope: !6683, file: !6678, line: 30, column: 2)
!6687 = !DILocation(line: 30, column: 35, scope: !6686)
!6688 = !DILocation(line: 30, column: 13, scope: !6686)
!6689 = distinct !{!6689, !6682, !6690}
!6690 = !DILocation(line: 32, column: 2, scope: !6683)
!6691 = !DILocation(line: 33, column: 1, scope: !6677)
!6692 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1347, file: !1347, line: 1814, type: !6114, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !6693)
!6693 = !{!6694, !6695}
!6694 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6692, file: !1347, line: 1814, type: !2105)
!6695 = !DILocalVariable(name: "priority", arg: 2, scope: !6692, file: !1347, line: 1814, type: !137)
!6696 = !DILocation(line: 0, scope: !6692)
!6697 = !DILocation(line: 1816, column: 7, scope: !6692)
!6698 = !DILocation(line: 0, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6692, file: !1347, line: 1816, column: 7)
!6700 = !DILocation(line: 1824, column: 1, scope: !6692)
!6701 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6702, file: !6702, line: 27, type: !6703, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !6800)
!6702 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6703 = !DISubroutineType(types: !6704)
!6704 = !{null, !6705}
!6705 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1595, line: 347, baseType: !6706)
!6706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6707, size: 32)
!6707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1595, line: 245, size: 896, elements: !6708)
!6708 = !{!6709, !6767, !6779, !6780, !6781, !6782, !6795}
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6707, file: !1595, line: 247, baseType: !6710, size: 384)
!6710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1595, line: 57, size: 384, elements: !6711)
!6711 = !{!6712, !6736, !6743, !6744, !6745, !6754, !6755, !6756}
!6712 = !DIDerivedType(tag: DW_TAG_member, scope: !6710, file: !1595, line: 60, baseType: !6713, size: 64)
!6713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6710, file: !1595, line: 60, size: 64, elements: !6714)
!6714 = !{!6715, !6730}
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6713, file: !1595, line: 61, baseType: !6716, size: 64)
!6716 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1605, line: 49, baseType: !6717)
!6717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1605, line: 37, size: 64, elements: !6718)
!6718 = !{!6719, !6725}
!6719 = !DIDerivedType(tag: DW_TAG_member, scope: !6717, file: !1605, line: 38, baseType: !6720, size: 32)
!6720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6717, file: !1605, line: 38, size: 32, elements: !6721)
!6721 = !{!6722, !6724}
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6720, file: !1605, line: 39, baseType: !6723, size: 32)
!6723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6717, size: 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6720, file: !1605, line: 40, baseType: !6723, size: 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, scope: !6717, file: !1605, line: 42, baseType: !6726, size: 32, offset: 32)
!6726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6717, file: !1605, line: 42, size: 32, elements: !6727)
!6727 = !{!6728, !6729}
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6726, file: !1605, line: 43, baseType: !6723, size: 32)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6726, file: !1605, line: 44, baseType: !6723, size: 32)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6713, file: !1595, line: 62, baseType: !6731, size: 64)
!6731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1621, line: 49, size: 64, elements: !6732)
!6732 = !{!6733}
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6731, file: !1621, line: 50, baseType: !6734, size: 64)
!6734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6735, size: 64, elements: !1182)
!6735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6731, size: 32)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6710, file: !1595, line: 68, baseType: !6737, size: 32, offset: 64)
!6737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6738, size: 32)
!6738 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1584, line: 233, baseType: !6739)
!6739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1584, line: 231, size: 64, elements: !6740)
!6740 = !{!6741}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6739, file: !1584, line: 232, baseType: !6742, size: 64)
!6742 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1605, line: 48, baseType: !6717)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6710, file: !1595, line: 71, baseType: !465, size: 8, offset: 96)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6710, file: !1595, line: 74, baseType: !465, size: 8, offset: 104)
!6745 = !DIDerivedType(tag: DW_TAG_member, scope: !6710, file: !1595, line: 90, baseType: !6746, size: 16, offset: 112)
!6746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6710, file: !1595, line: 90, size: 16, elements: !6747)
!6747 = !{!6748, !6753}
!6748 = !DIDerivedType(tag: DW_TAG_member, scope: !6746, file: !1595, line: 91, baseType: !6749, size: 16)
!6749 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6746, file: !1595, line: 91, size: 16, elements: !6750)
!6750 = !{!6751, !6752}
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6749, file: !1595, line: 96, baseType: !1642, size: 8)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6749, file: !1595, line: 97, baseType: !465, size: 8, offset: 8)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6746, file: !1595, line: 100, baseType: !151, size: 16)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6710, file: !1595, line: 107, baseType: !137, size: 32, offset: 128)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6710, file: !1595, line: 127, baseType: !102, size: 32, offset: 160)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6710, file: !1595, line: 131, baseType: !6757, size: 192, offset: 192)
!6757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1584, line: 244, size: 192, elements: !6758)
!6758 = !{!6759, !6760, !6766}
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6757, file: !1584, line: 245, baseType: !6716, size: 64)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6757, file: !1584, line: 246, baseType: !6761, size: 32, offset: 64)
!6761 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1584, line: 242, baseType: !6762)
!6762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6763, size: 32)
!6763 = !DISubroutineType(types: !6764)
!6764 = !{null, !6765}
!6765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6757, size: 32)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6757, file: !1584, line: 249, baseType: !1343, size: 64, offset: 128)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6707, file: !1595, line: 250, baseType: !6768, size: 288, offset: 384)
!6768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1661, line: 25, size: 288, elements: !6769)
!6769 = !{!6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778}
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6768, file: !1661, line: 26, baseType: !137, size: 32)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6768, file: !1661, line: 27, baseType: !137, size: 32, offset: 32)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6768, file: !1661, line: 28, baseType: !137, size: 32, offset: 64)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6768, file: !1661, line: 29, baseType: !137, size: 32, offset: 96)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6768, file: !1661, line: 30, baseType: !137, size: 32, offset: 128)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6768, file: !1661, line: 31, baseType: !137, size: 32, offset: 160)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6768, file: !1661, line: 32, baseType: !137, size: 32, offset: 192)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6768, file: !1661, line: 33, baseType: !137, size: 32, offset: 224)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6768, file: !1661, line: 34, baseType: !137, size: 32, offset: 256)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6707, file: !1595, line: 253, baseType: !102, size: 32, offset: 672)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6707, file: !1595, line: 256, baseType: !6738, size: 64, offset: 704)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6707, file: !1595, line: 294, baseType: !103, size: 32, offset: 768)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6707, file: !1595, line: 325, baseType: !6783, size: 32, offset: 800)
!6783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6784, size: 32)
!6784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1678, line: 5073, size: 160, elements: !6785)
!6785 = !{!6786, !6792, !6793}
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6784, file: !1678, line: 5074, baseType: !6787, size: 96)
!6787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !6788)
!6788 = !{!6789, !6790, !6791}
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6787, file: !113, line: 57, baseType: !116, size: 32)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6787, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6787, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6784, file: !1678, line: 5075, baseType: !6738, size: 64, offset: 96)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6784, file: !1678, line: 5076, baseType: !6794, offset: 160)
!6794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1451, line: 43, elements: !162)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6707, file: !1595, line: 343, baseType: !6796, size: 64, offset: 832)
!6796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1661, line: 60, size: 64, elements: !6797)
!6797 = !{!6798, !6799}
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6796, file: !1661, line: 63, baseType: !137, size: 32)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6796, file: !1661, line: 66, baseType: !137, size: 32, offset: 32)
!6800 = !{!6801}
!6801 = !DILocalVariable(name: "thread", arg: 1, scope: !6701, file: !6702, line: 27, type: !6705)
!6802 = !DILocation(line: 0, scope: !6701)
!6803 = !DILocation(line: 29, column: 6, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6701, file: !6702, line: 29, column: 6)
!6805 = !DILocation(line: 29, column: 15, scope: !6804)
!6806 = !DILocation(line: 29, column: 6, scope: !6701)
!6807 = !DILocation(line: 1031, column: 3, scope: !6808, inlinedAt: !6811)
!6808 = distinct !DISubprogram(name: "__get_IPSR", scope: !6080, file: !6080, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !6809)
!6809 = !{!6810}
!6810 = !DILocalVariable(name: "result", scope: !6808, file: !6080, line: 1029, type: !137)
!6811 = distinct !DILocation(line: 48, column: 10, scope: !6812, inlinedAt: !6816)
!6812 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6813, file: !6813, line: 46, type: !6814, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !162)
!6813 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6814 = !DISubroutineType(types: !6815)
!6815 = !{!636}
!6816 = distinct !DILocation(line: 30, column: 7, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6702, line: 30, column: 7)
!6818 = distinct !DILexicalBlock(scope: !6804, file: !6702, line: 29, column: 26)
!6819 = !{i64 6962284}
!6820 = !DILocation(line: 0, scope: !6808, inlinedAt: !6811)
!6821 = !DILocation(line: 48, column: 9, scope: !6812, inlinedAt: !6816)
!6822 = !DILocation(line: 30, column: 7, scope: !6818)
!6823 = !DILocation(line: 42, column: 14, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6817, file: !6702, line: 30, column: 25)
!6825 = !DILocation(line: 48, column: 15, scope: !6824)
!6826 = !DILocation(line: 49, column: 3, scope: !6824)
!6827 = !DILocation(line: 52, column: 2, scope: !6701)
!6828 = !DILocation(line: 53, column: 1, scope: !6701)
!6829 = distinct !DISubprogram(name: "strcpy", scope: !6830, file: !6830, line: 20, type: !6831, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6835)
!6830 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6831 = !DISubroutineType(types: !6832)
!6832 = !{!818, !6833, !6834}
!6833 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !818)
!6834 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !626)
!6835 = !{!6836, !6837, !6838}
!6836 = !DILocalVariable(name: "d", arg: 1, scope: !6829, file: !6830, line: 20, type: !6833)
!6837 = !DILocalVariable(name: "s", arg: 2, scope: !6829, file: !6830, line: 20, type: !6834)
!6838 = !DILocalVariable(name: "dest", scope: !6829, file: !6830, line: 22, type: !818)
!6839 = !DILocation(line: 0, scope: !6829)
!6840 = !DILocation(line: 24, column: 9, scope: !6829)
!6841 = !DILocation(line: 24, column: 12, scope: !6829)
!6842 = !DILocation(line: 24, column: 2, scope: !6829)
!6843 = !DILocation(line: 25, column: 6, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6829, file: !6830, line: 24, column: 21)
!6845 = !DILocation(line: 26, column: 4, scope: !6844)
!6846 = !DILocation(line: 27, column: 4, scope: !6844)
!6847 = distinct !{!6847, !6842, !6848}
!6848 = !DILocation(line: 28, column: 2, scope: !6829)
!6849 = !DILocation(line: 30, column: 5, scope: !6829)
!6850 = !DILocation(line: 32, column: 2, scope: !6829)
!6851 = distinct !DISubprogram(name: "strncpy", scope: !6830, file: !6830, line: 42, type: !6852, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6854)
!6852 = !DISubroutineType(types: !6853)
!6853 = !{!818, !6833, !6834, !120}
!6854 = !{!6855, !6856, !6857, !6858}
!6855 = !DILocalVariable(name: "d", arg: 1, scope: !6851, file: !6830, line: 42, type: !6833)
!6856 = !DILocalVariable(name: "s", arg: 2, scope: !6851, file: !6830, line: 42, type: !6834)
!6857 = !DILocalVariable(name: "n", arg: 3, scope: !6851, file: !6830, line: 42, type: !120)
!6858 = !DILocalVariable(name: "dest", scope: !6851, file: !6830, line: 44, type: !818)
!6859 = !DILocation(line: 0, scope: !6851)
!6860 = !DILocation(line: 46, column: 12, scope: !6851)
!6861 = !DILocation(line: 46, column: 17, scope: !6851)
!6862 = !DILocation(line: 46, column: 20, scope: !6851)
!6863 = !DILocation(line: 46, column: 23, scope: !6851)
!6864 = !DILocation(line: 46, column: 2, scope: !6851)
!6865 = !DILocation(line: 47, column: 6, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6851, file: !6830, line: 46, column: 32)
!6867 = !DILocation(line: 48, column: 4, scope: !6866)
!6868 = !DILocation(line: 49, column: 4, scope: !6866)
!6869 = !DILocation(line: 50, column: 4, scope: !6866)
!6870 = distinct !{!6870, !6864, !6871}
!6871 = !DILocation(line: 51, column: 2, scope: !6851)
!6872 = !DILocation(line: 54, column: 6, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6851, file: !6830, line: 53, column: 16)
!6874 = !DILocation(line: 55, column: 4, scope: !6873)
!6875 = !DILocation(line: 56, column: 4, scope: !6873)
!6876 = !DILocation(line: 53, column: 11, scope: !6851)
!6877 = !DILocation(line: 53, column: 2, scope: !6851)
!6878 = distinct !{!6878, !6877, !6879}
!6879 = !DILocation(line: 57, column: 2, scope: !6851)
!6880 = !DILocation(line: 59, column: 2, scope: !6851)
!6881 = distinct !DISubprogram(name: "strchr", scope: !6830, file: !6830, line: 69, type: !6882, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6884)
!6882 = !DISubroutineType(types: !6883)
!6883 = !{!818, !626, !103}
!6884 = !{!6885, !6886, !6887}
!6885 = !DILocalVariable(name: "s", arg: 1, scope: !6881, file: !6830, line: 69, type: !626)
!6886 = !DILocalVariable(name: "c", arg: 2, scope: !6881, file: !6830, line: 69, type: !103)
!6887 = !DILocalVariable(name: "tmp", scope: !6881, file: !6830, line: 71, type: !109)
!6888 = !DILocation(line: 0, scope: !6881)
!6889 = !DILocation(line: 73, column: 2, scope: !6881)
!6890 = !DILocation(line: 73, column: 10, scope: !6881)
!6891 = !DILocation(line: 73, column: 13, scope: !6881)
!6892 = !DILocation(line: 73, column: 21, scope: !6881)
!6893 = !DILocation(line: 74, column: 4, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6881, file: !6830, line: 73, column: 38)
!6895 = distinct !{!6895, !6889, !6896}
!6896 = !DILocation(line: 75, column: 2, scope: !6881)
!6897 = !DILocation(line: 77, column: 9, scope: !6881)
!6898 = !DILocation(line: 77, column: 2, scope: !6881)
!6899 = distinct !DISubprogram(name: "strrchr", scope: !6830, file: !6830, line: 87, type: !6882, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6900)
!6900 = !{!6901, !6902, !6903}
!6901 = !DILocalVariable(name: "s", arg: 1, scope: !6899, file: !6830, line: 87, type: !626)
!6902 = !DILocalVariable(name: "c", arg: 2, scope: !6899, file: !6830, line: 87, type: !103)
!6903 = !DILocalVariable(name: "match", scope: !6899, file: !6830, line: 89, type: !818)
!6904 = !DILocation(line: 0, scope: !6899)
!6905 = !DILocation(line: 91, column: 2, scope: !6899)
!6906 = !DILocation(line: 92, column: 7, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6830, line: 92, column: 7)
!6908 = distinct !DILexicalBlock(scope: !6899, file: !6830, line: 91, column: 5)
!6909 = !DILocation(line: 92, column: 10, scope: !6907)
!6910 = !DILocation(line: 92, column: 7, scope: !6908)
!6911 = !DILocation(line: 95, column: 13, scope: !6899)
!6912 = !DILocation(line: 95, column: 2, scope: !6908)
!6913 = distinct !{!6913, !6905, !6914}
!6914 = !DILocation(line: 95, column: 15, scope: !6899)
!6915 = !DILocation(line: 97, column: 2, scope: !6899)
!6916 = distinct !DISubprogram(name: "strlen", scope: !6830, file: !6830, line: 107, type: !6917, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6919)
!6917 = !DISubroutineType(types: !6918)
!6918 = !{!120, !626}
!6919 = !{!6920, !6921}
!6920 = !DILocalVariable(name: "s", arg: 1, scope: !6916, file: !6830, line: 107, type: !626)
!6921 = !DILocalVariable(name: "n", scope: !6916, file: !6830, line: 109, type: !120)
!6922 = !DILocation(line: 0, scope: !6916)
!6923 = !DILocation(line: 111, column: 9, scope: !6916)
!6924 = !DILocation(line: 111, column: 12, scope: !6916)
!6925 = !DILocation(line: 111, column: 2, scope: !6916)
!6926 = !DILocation(line: 112, column: 4, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6916, file: !6830, line: 111, column: 21)
!6928 = !DILocation(line: 113, column: 4, scope: !6927)
!6929 = distinct !{!6929, !6925, !6930}
!6930 = !DILocation(line: 114, column: 2, scope: !6916)
!6931 = !DILocation(line: 116, column: 2, scope: !6916)
!6932 = distinct !DISubprogram(name: "strnlen", scope: !6830, file: !6830, line: 126, type: !6933, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6935)
!6933 = !DISubroutineType(types: !6934)
!6934 = !{!120, !626, !120}
!6935 = !{!6936, !6937, !6938}
!6936 = !DILocalVariable(name: "s", arg: 1, scope: !6932, file: !6830, line: 126, type: !626)
!6937 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6932, file: !6830, line: 126, type: !120)
!6938 = !DILocalVariable(name: "n", scope: !6932, file: !6830, line: 128, type: !120)
!6939 = !DILocation(line: 0, scope: !6932)
!6940 = !DILocation(line: 130, column: 9, scope: !6932)
!6941 = !DILocation(line: 130, column: 12, scope: !6932)
!6942 = !DILocation(line: 130, column: 20, scope: !6932)
!6943 = !DILocation(line: 130, column: 2, scope: !6932)
!6944 = !DILocation(line: 131, column: 4, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6932, file: !6830, line: 130, column: 35)
!6946 = !DILocation(line: 132, column: 4, scope: !6945)
!6947 = distinct !{!6947, !6943, !6948}
!6948 = !DILocation(line: 133, column: 2, scope: !6932)
!6949 = !DILocation(line: 135, column: 2, scope: !6932)
!6950 = distinct !DISubprogram(name: "strcmp", scope: !6830, file: !6830, line: 145, type: !6951, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6953)
!6951 = !DISubroutineType(types: !6952)
!6952 = !{!103, !626, !626}
!6953 = !{!6954, !6955}
!6954 = !DILocalVariable(name: "s1", arg: 1, scope: !6950, file: !6830, line: 145, type: !626)
!6955 = !DILocalVariable(name: "s2", arg: 2, scope: !6950, file: !6830, line: 145, type: !626)
!6956 = !DILocation(line: 0, scope: !6950)
!6957 = !DILocation(line: 147, column: 10, scope: !6950)
!6958 = !DILocation(line: 147, column: 17, scope: !6950)
!6959 = !DILocation(line: 147, column: 14, scope: !6950)
!6960 = !DILocation(line: 147, column: 22, scope: !6950)
!6961 = !DILocation(line: 148, column: 5, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6950, file: !6830, line: 147, column: 40)
!6963 = !DILocation(line: 149, column: 5, scope: !6962)
!6964 = distinct !{!6964, !6965, !6966}
!6965 = !DILocation(line: 147, column: 2, scope: !6950)
!6966 = !DILocation(line: 150, column: 2, scope: !6950)
!6967 = !DILocation(line: 152, column: 9, scope: !6950)
!6968 = !DILocation(line: 152, column: 15, scope: !6950)
!6969 = !DILocation(line: 152, column: 13, scope: !6950)
!6970 = !DILocation(line: 152, column: 2, scope: !6950)
!6971 = distinct !DISubprogram(name: "strncmp", scope: !6830, file: !6830, line: 162, type: !6972, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6974)
!6972 = !DISubroutineType(types: !6973)
!6973 = !{!103, !626, !626, !120}
!6974 = !{!6975, !6976, !6977}
!6975 = !DILocalVariable(name: "s1", arg: 1, scope: !6971, file: !6830, line: 162, type: !626)
!6976 = !DILocalVariable(name: "s2", arg: 2, scope: !6971, file: !6830, line: 162, type: !626)
!6977 = !DILocalVariable(name: "n", arg: 3, scope: !6971, file: !6830, line: 162, type: !120)
!6978 = !DILocation(line: 0, scope: !6971)
!6979 = !DILocation(line: 164, column: 17, scope: !6971)
!6980 = !DILocation(line: 164, column: 21, scope: !6971)
!6981 = !DILocation(line: 164, column: 28, scope: !6971)
!6982 = !DILocation(line: 164, column: 25, scope: !6971)
!6983 = !DILocation(line: 164, column: 33, scope: !6971)
!6984 = !DILocation(line: 165, column: 5, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6971, file: !6830, line: 164, column: 51)
!6986 = !DILocation(line: 166, column: 5, scope: !6985)
!6987 = !DILocation(line: 167, column: 4, scope: !6985)
!6988 = distinct !{!6988, !6989, !6990}
!6989 = !DILocation(line: 164, column: 2, scope: !6971)
!6990 = !DILocation(line: 168, column: 2, scope: !6971)
!6991 = !DILocation(line: 170, column: 25, scope: !6971)
!6992 = !DILocation(line: 170, column: 31, scope: !6971)
!6993 = !DILocation(line: 170, column: 29, scope: !6971)
!6994 = !DILocation(line: 170, column: 9, scope: !6971)
!6995 = !DILocation(line: 170, column: 2, scope: !6971)
!6996 = distinct !DISubprogram(name: "strtok_r", scope: !6830, file: !6830, line: 180, type: !6997, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !7000)
!6997 = !DISubroutineType(types: !6998)
!6998 = !{!818, !818, !626, !6999}
!6999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!7000 = !{!7001, !7002, !7003, !7004, !7005}
!7001 = !DILocalVariable(name: "str", arg: 1, scope: !6996, file: !6830, line: 180, type: !818)
!7002 = !DILocalVariable(name: "sep", arg: 2, scope: !6996, file: !6830, line: 180, type: !626)
!7003 = !DILocalVariable(name: "state", arg: 3, scope: !6996, file: !6830, line: 180, type: !6999)
!7004 = !DILocalVariable(name: "start", scope: !6996, file: !6830, line: 182, type: !818)
!7005 = !DILocalVariable(name: "end", scope: !6996, file: !6830, line: 182, type: !818)
!7006 = !DILocation(line: 0, scope: !6996)
!7007 = !DILocation(line: 184, column: 10, scope: !6996)
!7008 = !DILocation(line: 184, column: 22, scope: !6996)
!7009 = !DILocation(line: 187, column: 9, scope: !6996)
!7010 = !DILocation(line: 187, column: 16, scope: !6996)
!7011 = !DILocation(line: 187, column: 19, scope: !6996)
!7012 = !DILocation(line: 187, column: 2, scope: !6996)
!7013 = !DILocation(line: 188, column: 8, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !6996, file: !6830, line: 187, column: 40)
!7015 = distinct !{!7015, !7012, !7016}
!7016 = !DILocation(line: 189, column: 2, scope: !6996)
!7017 = !DILocation(line: 198, column: 9, scope: !6996)
!7018 = !DILocation(line: 198, column: 18, scope: !6996)
!7019 = !DILocation(line: 198, column: 17, scope: !6996)
!7020 = !DILocation(line: 198, column: 2, scope: !6996)
!7021 = !DILocation(line: 199, column: 6, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6996, file: !6830, line: 198, column: 37)
!7023 = !DILocation(line: 198, column: 14, scope: !6996)
!7024 = distinct !{!7024, !7020, !7025}
!7025 = !DILocation(line: 200, column: 2, scope: !6996)
!7026 = !DILocation(line: 203, column: 8, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6830, line: 202, column: 20)
!7028 = distinct !DILexicalBlock(scope: !6996, file: !6830, line: 202, column: 6)
!7029 = !DILocation(line: 204, column: 16, scope: !7027)
!7030 = !DILocation(line: 205, column: 2, scope: !7027)
!7031 = !DILocation(line: 210, column: 1, scope: !6996)
!7032 = distinct !DISubprogram(name: "strcat", scope: !6830, file: !6830, line: 212, type: !6831, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !7033)
!7033 = !{!7034, !7035}
!7034 = !DILocalVariable(name: "dest", arg: 1, scope: !7032, file: !6830, line: 212, type: !6833)
!7035 = !DILocalVariable(name: "src", arg: 2, scope: !7032, file: !6830, line: 212, type: !6834)
!7036 = !DILocation(line: 0, scope: !7032)
!7037 = !DILocation(line: 214, column: 16, scope: !7032)
!7038 = !DILocation(line: 214, column: 14, scope: !7032)
!7039 = !DILocation(line: 214, column: 2, scope: !7032)
!7040 = !DILocation(line: 215, column: 2, scope: !7032)
!7041 = distinct !DISubprogram(name: "strncat", scope: !6830, file: !6830, line: 218, type: !6852, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !7042)
!7042 = !{!7043, !7044, !7045, !7046, !7047}
!7043 = !DILocalVariable(name: "dest", arg: 1, scope: !7041, file: !6830, line: 218, type: !6833)
!7044 = !DILocalVariable(name: "src", arg: 2, scope: !7041, file: !6830, line: 218, type: !6834)
!7045 = !DILocalVariable(name: "n", arg: 3, scope: !7041, file: !6830, line: 219, type: !120)
!7046 = !DILocalVariable(name: "orig_dest", scope: !7041, file: !6830, line: 221, type: !818)
!7047 = !DILocalVariable(name: "len", scope: !7041, file: !6830, line: 222, type: !120)
!7048 = !DILocation(line: 0, scope: !7041)
!7049 = !DILocation(line: 222, column: 15, scope: !7041)
!7050 = !DILocation(line: 224, column: 7, scope: !7041)
!7051 = !DILocation(line: 225, column: 14, scope: !7041)
!7052 = !DILocation(line: 225, column: 19, scope: !7041)
!7053 = !DILocation(line: 225, column: 11, scope: !7041)
!7054 = !DILocation(line: 225, column: 23, scope: !7041)
!7055 = !DILocation(line: 225, column: 28, scope: !7041)
!7056 = !DILocation(line: 225, column: 2, scope: !7041)
!7057 = !DILocation(line: 226, column: 17, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7041, file: !6830, line: 225, column: 38)
!7059 = !DILocation(line: 226, column: 8, scope: !7058)
!7060 = !DILocation(line: 226, column: 11, scope: !7058)
!7061 = distinct !{!7061, !7056, !7062}
!7062 = !DILocation(line: 227, column: 2, scope: !7041)
!7063 = !DILocation(line: 228, column: 8, scope: !7041)
!7064 = !DILocation(line: 230, column: 2, scope: !7041)
!7065 = distinct !DISubprogram(name: "memcmp", scope: !6830, file: !6830, line: 239, type: !7066, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !7068)
!7066 = !DISubroutineType(types: !7067)
!7067 = !{!103, !13, !13, !120}
!7068 = !{!7069, !7070, !7071, !7072, !7073}
!7069 = !DILocalVariable(name: "m1", arg: 1, scope: !7065, file: !6830, line: 239, type: !13)
!7070 = !DILocalVariable(name: "m2", arg: 2, scope: !7065, file: !6830, line: 239, type: !13)
!7071 = !DILocalVariable(name: "n", arg: 3, scope: !7065, file: !6830, line: 239, type: !120)
!7072 = !DILocalVariable(name: "c1", scope: !7065, file: !6830, line: 241, type: !626)
!7073 = !DILocalVariable(name: "c2", scope: !7065, file: !6830, line: 242, type: !626)
!7074 = !DILocation(line: 0, scope: !7065)
!7075 = !DILocation(line: 244, column: 7, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7065, file: !6830, line: 244, column: 6)
!7077 = !DILocation(line: 244, column: 6, scope: !7065)
!7078 = !DILocation(line: 248, column: 10, scope: !7065)
!7079 = !DILocation(line: 248, column: 14, scope: !7065)
!7080 = !DILocation(line: 248, column: 19, scope: !7065)
!7081 = !DILocation(line: 248, column: 2, scope: !7065)
!7082 = !DILocation(line: 248, column: 23, scope: !7065)
!7083 = !DILocation(line: 248, column: 30, scope: !7065)
!7084 = !DILocation(line: 248, column: 27, scope: !7065)
!7085 = !DILocation(line: 249, column: 5, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7065, file: !6830, line: 248, column: 36)
!7087 = !DILocation(line: 250, column: 5, scope: !7086)
!7088 = distinct !{!7088, !7081, !7089}
!7089 = !DILocation(line: 251, column: 2, scope: !7065)
!7090 = !DILocation(line: 253, column: 9, scope: !7065)
!7091 = !DILocation(line: 253, column: 15, scope: !7065)
!7092 = !DILocation(line: 253, column: 13, scope: !7065)
!7093 = !DILocation(line: 253, column: 2, scope: !7065)
!7094 = !DILocation(line: 254, column: 1, scope: !7065)
!7095 = distinct !DISubprogram(name: "memmove", scope: !6830, file: !6830, line: 263, type: !7096, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !7098)
!7096 = !DISubroutineType(types: !7097)
!7097 = !{!102, !102, !13, !120}
!7098 = !{!7099, !7100, !7101, !7102, !7103}
!7099 = !DILocalVariable(name: "d", arg: 1, scope: !7095, file: !6830, line: 263, type: !102)
!7100 = !DILocalVariable(name: "s", arg: 2, scope: !7095, file: !6830, line: 263, type: !13)
!7101 = !DILocalVariable(name: "n", arg: 3, scope: !7095, file: !6830, line: 263, type: !120)
!7102 = !DILocalVariable(name: "dest", scope: !7095, file: !6830, line: 265, type: !818)
!7103 = !DILocalVariable(name: "src", scope: !7095, file: !6830, line: 266, type: !626)
!7104 = !DILocation(line: 0, scope: !7095)
!7105 = !DILocation(line: 268, column: 21, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7095, file: !6830, line: 268, column: 6)
!7107 = !DILocation(line: 268, column: 28, scope: !7106)
!7108 = !DILocation(line: 268, column: 6, scope: !7095)
!7109 = !DILocation(line: 280, column: 12, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7106, file: !6830, line: 278, column: 9)
!7111 = !DILocation(line: 280, column: 3, scope: !7110)
!7112 = !DILocation(line: 275, column: 5, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6830, line: 274, column: 17)
!7114 = distinct !DILexicalBlock(scope: !7106, file: !6830, line: 268, column: 33)
!7115 = !DILocation(line: 276, column: 14, scope: !7113)
!7116 = !DILocation(line: 276, column: 4, scope: !7113)
!7117 = !DILocation(line: 276, column: 12, scope: !7113)
!7118 = !DILocation(line: 274, column: 12, scope: !7114)
!7119 = !DILocation(line: 274, column: 3, scope: !7114)
!7120 = distinct !{!7120, !7119, !7121}
!7121 = !DILocation(line: 277, column: 3, scope: !7114)
!7122 = !DILocation(line: 281, column: 12, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7110, file: !6830, line: 280, column: 17)
!7124 = !DILocation(line: 281, column: 10, scope: !7123)
!7125 = !DILocation(line: 282, column: 8, scope: !7123)
!7126 = !DILocation(line: 283, column: 7, scope: !7123)
!7127 = !DILocation(line: 284, column: 5, scope: !7123)
!7128 = distinct !{!7128, !7111, !7129}
!7129 = !DILocation(line: 285, column: 3, scope: !7110)
!7130 = !DILocation(line: 288, column: 2, scope: !7095)
!7131 = distinct !DISubprogram(name: "memcpy", scope: !6830, file: !6830, line: 298, type: !7132, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !7136)
!7132 = !DISubroutineType(types: !7133)
!7133 = !{!102, !7134, !7135, !120}
!7134 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7135 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7136 = !{!7137, !7138, !7139, !7140, !7141}
!7137 = !DILocalVariable(name: "d", arg: 1, scope: !7131, file: !6830, line: 298, type: !7134)
!7138 = !DILocalVariable(name: "s", arg: 2, scope: !7131, file: !6830, line: 298, type: !7135)
!7139 = !DILocalVariable(name: "n", arg: 3, scope: !7131, file: !6830, line: 298, type: !120)
!7140 = !DILocalVariable(name: "d_byte", scope: !7131, file: !6830, line: 302, type: !644)
!7141 = !DILocalVariable(name: "s_byte", scope: !7131, file: !6830, line: 303, type: !2396)
!7142 = !DILocation(line: 0, scope: !7131)
!7143 = !DILocation(line: 337, column: 11, scope: !7131)
!7144 = !DILocation(line: 337, column: 2, scope: !7131)
!7145 = !DILocation(line: 338, column: 25, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7131, file: !6830, line: 337, column: 16)
!7147 = !DILocation(line: 338, column: 17, scope: !7146)
!7148 = !DILocation(line: 338, column: 11, scope: !7146)
!7149 = !DILocation(line: 338, column: 15, scope: !7146)
!7150 = !DILocation(line: 339, column: 4, scope: !7146)
!7151 = distinct !{!7151, !7144, !7152}
!7152 = !DILocation(line: 340, column: 2, scope: !7131)
!7153 = !DILocation(line: 342, column: 2, scope: !7131)
!7154 = distinct !DISubprogram(name: "memset", scope: !6830, file: !6830, line: 352, type: !7155, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !7157)
!7155 = !DISubroutineType(types: !7156)
!7156 = !{!102, !102, !103, !120}
!7157 = !{!7158, !7159, !7160, !7161, !7162}
!7158 = !DILocalVariable(name: "buf", arg: 1, scope: !7154, file: !6830, line: 352, type: !102)
!7159 = !DILocalVariable(name: "c", arg: 2, scope: !7154, file: !6830, line: 352, type: !103)
!7160 = !DILocalVariable(name: "n", arg: 3, scope: !7154, file: !6830, line: 352, type: !120)
!7161 = !DILocalVariable(name: "d_byte", scope: !7154, file: !6830, line: 356, type: !644)
!7162 = !DILocalVariable(name: "c_byte", scope: !7154, file: !6830, line: 357, type: !466)
!7163 = !DILocation(line: 0, scope: !7154)
!7164 = !DILocation(line: 357, column: 25, scope: !7154)
!7165 = !DILocation(line: 389, column: 11, scope: !7154)
!7166 = !DILocation(line: 389, column: 2, scope: !7154)
!7167 = !DILocation(line: 390, column: 11, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7154, file: !6830, line: 389, column: 16)
!7169 = !DILocation(line: 390, column: 15, scope: !7168)
!7170 = !DILocation(line: 391, column: 4, scope: !7168)
!7171 = distinct !{!7171, !7166, !7172}
!7172 = !DILocation(line: 392, column: 2, scope: !7154)
!7173 = !DILocation(line: 394, column: 2, scope: !7154)
!7174 = distinct !DISubprogram(name: "memchr", scope: !6830, file: !6830, line: 404, type: !7175, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !7177)
!7175 = !DISubroutineType(types: !7176)
!7176 = !{!102, !13, !103, !120}
!7177 = !{!7178, !7179, !7180, !7181}
!7178 = !DILocalVariable(name: "s", arg: 1, scope: !7174, file: !6830, line: 404, type: !13)
!7179 = !DILocalVariable(name: "c", arg: 2, scope: !7174, file: !6830, line: 404, type: !103)
!7180 = !DILocalVariable(name: "n", arg: 3, scope: !7174, file: !6830, line: 404, type: !120)
!7181 = !DILocalVariable(name: "p", scope: !7182, file: !6830, line: 407, type: !2396)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !6830, line: 406, column: 14)
!7183 = distinct !DILexicalBlock(scope: !7174, file: !6830, line: 406, column: 6)
!7184 = !DILocation(line: 0, scope: !7174)
!7185 = !DILocation(line: 406, column: 8, scope: !7183)
!7186 = !DILocation(line: 406, column: 6, scope: !7174)
!7187 = !DILocation(line: 409, column: 3, scope: !7182)
!7188 = !DILocation(line: 0, scope: !7182)
!7189 = !DILocation(line: 410, column: 8, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !6830, line: 410, column: 8)
!7191 = distinct !DILexicalBlock(scope: !7182, file: !6830, line: 409, column: 6)
!7192 = !DILocation(line: 410, column: 13, scope: !7190)
!7193 = !DILocation(line: 410, column: 8, scope: !7191)
!7194 = distinct !{!7194, !7187, !7195}
!7195 = !DILocation(line: 414, column: 20, scope: !7182)
!7196 = !DILocation(line: 417, column: 2, scope: !7174)
!7197 = !DILocation(line: 418, column: 1, scope: !7174)
!7198 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !605, file: !605, line: 23, type: !2809, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !7199)
!7199 = !{!7200}
!7200 = !DILocalVariable(name: "hook", arg: 1, scope: !7198, file: !605, line: 23, type: !128)
!7201 = !DILocation(line: 0, scope: !7198)
!7202 = !DILocation(line: 25, column: 15, scope: !7198)
!7203 = !DILocation(line: 26, column: 1, scope: !7198)
!7204 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !605, file: !605, line: 14, type: !129, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !7205)
!7205 = !{!7206}
!7206 = !DILocalVariable(name: "c", arg: 1, scope: !7204, file: !605, line: 14, type: !103)
!7207 = !DILocation(line: 0, scope: !7204)
!7208 = !DILocation(line: 18, column: 2, scope: !7204)
!7209 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !605, file: !605, line: 28, type: !7210, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !7212)
!7210 = !DISubroutineType(types: !7211)
!7211 = !{!103, !103, !601}
!7212 = !{!7213, !7214}
!7213 = !DILocalVariable(name: "c", arg: 1, scope: !7209, file: !605, line: 28, type: !103)
!7214 = !DILocalVariable(name: "stream", arg: 2, scope: !7209, file: !605, line: 28, type: !601)
!7215 = !DILocation(line: 0, scope: !7209)
!7216 = !DILocation(line: 30, column: 27, scope: !7209)
!7217 = !DILocation(line: 30, column: 50, scope: !7209)
!7218 = !DILocation(line: 30, column: 9, scope: !7209)
!7219 = !DILocation(line: 30, column: 2, scope: !7209)
!7220 = distinct !DISubprogram(name: "fputc", scope: !605, file: !605, line: 41, type: !7210, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !7221)
!7221 = !{!7222, !7223}
!7222 = !DILocalVariable(name: "c", arg: 1, scope: !7220, file: !605, line: 41, type: !103)
!7223 = !DILocalVariable(name: "stream", arg: 2, scope: !7220, file: !605, line: 41, type: !601)
!7224 = !DILocation(line: 0, scope: !7220)
!7225 = !DILocation(line: 43, column: 9, scope: !7220)
!7226 = !DILocation(line: 43, column: 2, scope: !7220)
!7227 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7228, file: !7228, line: 72, type: !7210, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !7229)
!7228 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!7229 = !{!7230, !7231}
!7230 = !DILocalVariable(name: "c", arg: 1, scope: !7227, file: !7228, line: 72, type: !103)
!7231 = !DILocalVariable(name: "stream", arg: 2, scope: !7227, file: !7228, line: 72, type: !601)
!7232 = !DILocation(line: 0, scope: !7227)
!7233 = !DILocation(line: 81, column: 2, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7227, file: !7228, line: 81, column: 2)
!7235 = !{i64 2151098829}
!7236 = !DILocation(line: 82, column: 9, scope: !7227)
!7237 = !DILocation(line: 82, column: 2, scope: !7227)
!7238 = distinct !DISubprogram(name: "fputs", scope: !605, file: !605, line: 46, type: !7239, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !7242)
!7239 = !DISubroutineType(types: !7240)
!7240 = !{!103, !6834, !7241}
!7241 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !601)
!7242 = !{!7243, !7244, !7245, !7246}
!7243 = !DILocalVariable(name: "s", arg: 1, scope: !7238, file: !605, line: 46, type: !6834)
!7244 = !DILocalVariable(name: "stream", arg: 2, scope: !7238, file: !605, line: 46, type: !7241)
!7245 = !DILocalVariable(name: "len", scope: !7238, file: !605, line: 48, type: !103)
!7246 = !DILocalVariable(name: "ret", scope: !7238, file: !605, line: 49, type: !103)
!7247 = !DILocation(line: 0, scope: !7238)
!7248 = !DILocation(line: 48, column: 12, scope: !7238)
!7249 = !DILocation(line: 51, column: 8, scope: !7238)
!7250 = !DILocation(line: 53, column: 13, scope: !7238)
!7251 = !DILocation(line: 53, column: 9, scope: !7238)
!7252 = !DILocation(line: 53, column: 2, scope: !7238)
!7253 = distinct !DISubprogram(name: "fwrite", scope: !605, file: !605, line: 99, type: !7254, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !7256)
!7254 = !DISubroutineType(types: !7255)
!7255 = !{!120, !7135, !120, !120, !7241}
!7256 = !{!7257, !7258, !7259, !7260}
!7257 = !DILocalVariable(name: "ptr", arg: 1, scope: !7253, file: !605, line: 99, type: !7135)
!7258 = !DILocalVariable(name: "size", arg: 2, scope: !7253, file: !605, line: 99, type: !120)
!7259 = !DILocalVariable(name: "nitems", arg: 3, scope: !7253, file: !605, line: 99, type: !120)
!7260 = !DILocalVariable(name: "stream", arg: 4, scope: !7253, file: !605, line: 100, type: !7241)
!7261 = !DILocation(line: 0, scope: !7253)
!7262 = !DILocation(line: 102, column: 9, scope: !7253)
!7263 = !DILocation(line: 102, column: 2, scope: !7253)
!7264 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7228, file: !7228, line: 96, type: !7254, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !7265)
!7265 = !{!7266, !7267, !7268, !7269}
!7266 = !DILocalVariable(name: "ptr", arg: 1, scope: !7264, file: !7228, line: 96, type: !7135)
!7267 = !DILocalVariable(name: "size", arg: 2, scope: !7264, file: !7228, line: 96, type: !120)
!7268 = !DILocalVariable(name: "nitems", arg: 3, scope: !7264, file: !7228, line: 96, type: !120)
!7269 = !DILocalVariable(name: "stream", arg: 4, scope: !7264, file: !7228, line: 96, type: !7241)
!7270 = !DILocation(line: 0, scope: !7264)
!7271 = !DILocation(line: 107, column: 2, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7264, file: !7228, line: 107, column: 2)
!7273 = !{i64 2151098933}
!7274 = !DILocation(line: 108, column: 9, scope: !7264)
!7275 = !DILocation(line: 108, column: 2, scope: !7264)
!7276 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !605, file: !605, line: 56, type: !7254, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !7277)
!7277 = !{!7278, !7279, !7280, !7281, !7282, !7283, !7284, !7285}
!7278 = !DILocalVariable(name: "ptr", arg: 1, scope: !7276, file: !605, line: 56, type: !7135)
!7279 = !DILocalVariable(name: "size", arg: 2, scope: !7276, file: !605, line: 56, type: !120)
!7280 = !DILocalVariable(name: "nitems", arg: 3, scope: !7276, file: !605, line: 57, type: !120)
!7281 = !DILocalVariable(name: "stream", arg: 4, scope: !7276, file: !605, line: 57, type: !7241)
!7282 = !DILocalVariable(name: "i", scope: !7276, file: !605, line: 59, type: !120)
!7283 = !DILocalVariable(name: "j", scope: !7276, file: !605, line: 60, type: !120)
!7284 = !DILocalVariable(name: "p", scope: !7276, file: !605, line: 61, type: !2396)
!7285 = !DILabel(scope: !7276, name: "done", file: !605, line: 82)
!7286 = !DILocation(line: 0, scope: !7276)
!7287 = !DILocation(line: 63, column: 14, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7276, file: !605, line: 63, column: 6)
!7289 = !DILocation(line: 63, column: 24, scope: !7288)
!7290 = !DILocation(line: 72, column: 3, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7276, file: !605, line: 70, column: 5)
!7292 = !DILocation(line: 0, scope: !7291)
!7293 = !DILocation(line: 73, column: 8, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7295, file: !605, line: 73, column: 8)
!7295 = distinct !DILexicalBlock(scope: !7291, file: !605, line: 72, column: 6)
!7296 = !DILocation(line: 73, column: 29, scope: !7294)
!7297 = !DILocation(line: 73, column: 27, scope: !7294)
!7298 = !DILocation(line: 73, column: 21, scope: !7294)
!7299 = !DILocation(line: 73, column: 33, scope: !7294)
!7300 = !DILocation(line: 73, column: 8, scope: !7295)
!7301 = !DILocation(line: 76, column: 5, scope: !7295)
!7302 = !DILocation(line: 77, column: 14, scope: !7291)
!7303 = !DILocation(line: 77, column: 3, scope: !7295)
!7304 = distinct !{!7304, !7290, !7305}
!7305 = !DILocation(line: 77, column: 17, scope: !7291)
!7306 = !DILocation(line: 79, column: 4, scope: !7291)
!7307 = !DILocation(line: 80, column: 13, scope: !7276)
!7308 = !DILocation(line: 80, column: 2, scope: !7291)
!7309 = distinct !{!7309, !7310, !7311}
!7310 = !DILocation(line: 70, column: 2, scope: !7276)
!7311 = !DILocation(line: 80, column: 16, scope: !7276)
!7312 = !DILocation(line: 82, column: 1, scope: !7276)
!7313 = !DILocation(line: 83, column: 17, scope: !7276)
!7314 = !DILocation(line: 83, column: 2, scope: !7276)
!7315 = !DILocation(line: 84, column: 1, scope: !7276)
!7316 = distinct !DISubprogram(name: "puts", scope: !605, file: !605, line: 106, type: !7317, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !7319)
!7317 = !DISubroutineType(types: !7318)
!7318 = !{!103, !626}
!7319 = !{!7320}
!7320 = !DILocalVariable(name: "s", arg: 1, scope: !7316, file: !605, line: 106, type: !626)
!7321 = !DILocation(line: 0, scope: !7316)
!7322 = !DILocation(line: 108, column: 6, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7316, file: !605, line: 108, column: 6)
!7324 = !DILocation(line: 108, column: 23, scope: !7323)
!7325 = !DILocation(line: 108, column: 6, scope: !7316)
!7326 = !DILocation(line: 112, column: 9, scope: !7316)
!7327 = !DILocation(line: 112, column: 29, scope: !7316)
!7328 = !DILocation(line: 112, column: 2, scope: !7316)
!7329 = !DILocation(line: 113, column: 1, scope: !7316)
!7330 = distinct !DISubprogram(name: "uart_console_init", scope: !708, file: !708, line: 588, type: !651, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !608, retainedNodes: !7331)
!7331 = !{!7332}
!7332 = !DILocalVariable(name: "arg", arg: 1, scope: !7330, file: !708, line: 588, type: !620)
!7333 = !DILocation(line: 0, scope: !7330)
!7334 = !DILocation(line: 593, column: 7, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7330, file: !708, line: 593, column: 6)
!7336 = !DILocation(line: 593, column: 6, scope: !7330)
!7337 = !DILocation(line: 597, column: 2, scope: !7330)
!7338 = !DILocation(line: 599, column: 2, scope: !7330)
!7339 = !DILocation(line: 600, column: 1, scope: !7330)
!7340 = distinct !DISubprogram(name: "device_is_ready", scope: !7341, file: !7341, line: 47, type: !7342, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !608, retainedNodes: !7344)
!7341 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!7342 = !DISubroutineType(types: !7343)
!7343 = !{!636, !620}
!7344 = !{!7345}
!7345 = !DILocalVariable(name: "dev", arg: 1, scope: !7340, file: !7341, line: 47, type: !620)
!7346 = !DILocation(line: 0, scope: !7340)
!7347 = !DILocation(line: 55, column: 2, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7340, file: !7341, line: 55, column: 2)
!7349 = !{i64 2151368503}
!7350 = !DILocation(line: 56, column: 9, scope: !7340)
!7351 = !DILocation(line: 56, column: 2, scope: !7340)
!7352 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !708, file: !708, line: 573, type: !2671, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !608, retainedNodes: !162)
!7353 = !DILocation(line: 576, column: 2, scope: !7352)
!7354 = !DILocation(line: 579, column: 2, scope: !7352)
!7355 = !DILocation(line: 581, column: 1, scope: !7352)
!7356 = distinct !DISubprogram(name: "console_out", scope: !708, file: !708, line: 77, type: !129, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !608, retainedNodes: !7357)
!7357 = !{!7358}
!7358 = !DILocalVariable(name: "c", arg: 1, scope: !7356, file: !708, line: 77, type: !103)
!7359 = !DILocation(line: 0, scope: !7356)
!7360 = !DILocation(line: 89, column: 11, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7356, file: !708, line: 89, column: 6)
!7362 = !DILocation(line: 89, column: 6, scope: !7356)
!7363 = !DILocation(line: 90, column: 3, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7361, file: !708, line: 89, column: 17)
!7365 = !DILocation(line: 91, column: 2, scope: !7364)
!7366 = !DILocation(line: 92, column: 34, scope: !7356)
!7367 = !DILocation(line: 92, column: 2, scope: !7356)
!7368 = !DILocation(line: 94, column: 2, scope: !7356)
!7369 = distinct !DISubprogram(name: "uart_poll_out", scope: !7370, file: !7370, line: 95, type: !647, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !608, retainedNodes: !7371)
!7370 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/sys_heap")
!7371 = !{!7372, !7373}
!7372 = !DILocalVariable(name: "dev", arg: 1, scope: !7369, file: !7370, line: 95, type: !620)
!7373 = !DILocalVariable(name: "out_char", arg: 2, scope: !7369, file: !7370, line: 95, type: !466)
!7374 = !DILocation(line: 0, scope: !7369)
!7375 = !DILocation(line: 105, column: 2, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7369, file: !7370, line: 105, column: 2)
!7377 = !{i64 2151451748}
!7378 = !DILocation(line: 106, column: 2, scope: !7369)
!7379 = !DILocation(line: 107, column: 1, scope: !7369)
!7380 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !614, file: !614, line: 574, type: !647, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !608, retainedNodes: !7381)
!7381 = !{!7382, !7383, !7384}
!7382 = !DILocalVariable(name: "dev", arg: 1, scope: !7380, file: !614, line: 574, type: !620)
!7383 = !DILocalVariable(name: "out_char", arg: 2, scope: !7380, file: !614, line: 575, type: !466)
!7384 = !DILocalVariable(name: "api", scope: !7380, file: !614, line: 577, type: !611)
!7385 = !DILocation(line: 0, scope: !7380)
!7386 = !DILocation(line: 578, column: 40, scope: !7380)
!7387 = !DILocation(line: 580, column: 7, scope: !7380)
!7388 = !DILocation(line: 580, column: 2, scope: !7380)
!7389 = !DILocation(line: 581, column: 1, scope: !7380)
!7390 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !623, file: !623, line: 730, type: !7342, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !608, retainedNodes: !7391)
!7391 = !{!7392}
!7392 = !DILocalVariable(name: "dev", arg: 1, scope: !7390, file: !623, line: 730, type: !620)
!7393 = !DILocation(line: 0, scope: !7390)
!7394 = !DILocation(line: 732, column: 9, scope: !7390)
!7395 = !DILocation(line: 732, column: 2, scope: !7390)
!7396 = distinct !DISubprogram(name: "uart_register_input", scope: !708, file: !708, line: 560, type: !7397, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !608, retainedNodes: !7442)
!7397 = !DISubroutineType(types: !7398)
!7398 = !{null, !7399, !7399, !7439}
!7399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7400, size: 32)
!7400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !1678, line: 2208, size: 128, elements: !7401)
!7401 = !{!7402}
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7400, file: !1678, line: 2209, baseType: !7403, size: 128)
!7403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !1678, line: 1709, size: 128, elements: !7404)
!7404 = !{!7405, !7418, !7420}
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7403, file: !1678, line: 1710, baseType: !7406, size: 64)
!7406 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7407, line: 46, baseType: !7408)
!7407 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7407, line: 41, size: 64, elements: !7409)
!7409 = !{!7410, !7417}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7408, file: !7407, line: 42, baseType: !7411, size: 32)
!7411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7412, size: 32)
!7412 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7407, line: 39, baseType: !7413)
!7413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7407, line: 35, size: 32, elements: !7414)
!7414 = !{!7415}
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7413, file: !7407, line: 36, baseType: !7416, size: 32)
!7416 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7407, line: 32, baseType: !137)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7408, file: !7407, line: 43, baseType: !7411, size: 32, offset: 32)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7403, file: !1678, line: 1711, baseType: !7419, offset: 64)
!7419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1451, line: 43, elements: !162)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7403, file: !1678, line: 1712, baseType: !7421, size: 64, offset: 64)
!7421 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1584, line: 233, baseType: !7422)
!7422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1584, line: 231, size: 64, elements: !7423)
!7423 = !{!7424}
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7422, file: !1584, line: 232, baseType: !7425, size: 64)
!7425 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1605, line: 48, baseType: !7426)
!7426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1605, line: 37, size: 64, elements: !7427)
!7427 = !{!7428, !7434}
!7428 = !DIDerivedType(tag: DW_TAG_member, scope: !7426, file: !1605, line: 38, baseType: !7429, size: 32)
!7429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7426, file: !1605, line: 38, size: 32, elements: !7430)
!7430 = !{!7431, !7433}
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7429, file: !1605, line: 39, baseType: !7432, size: 32)
!7432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7426, size: 32)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7429, file: !1605, line: 40, baseType: !7432, size: 32)
!7434 = !DIDerivedType(tag: DW_TAG_member, scope: !7426, file: !1605, line: 42, baseType: !7435, size: 32, offset: 32)
!7435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7426, file: !1605, line: 42, size: 32, elements: !7436)
!7436 = !{!7437, !7438}
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7435, file: !1605, line: 43, baseType: !7432, size: 32)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7435, file: !1605, line: 44, baseType: !7432, size: 32)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7440, size: 32)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{!465, !818, !465}
!7442 = !{!7443, !7444, !7445}
!7443 = !DILocalVariable(name: "avail", arg: 1, scope: !7396, file: !708, line: 560, type: !7399)
!7444 = !DILocalVariable(name: "lines", arg: 2, scope: !7396, file: !708, line: 560, type: !7399)
!7445 = !DILocalVariable(name: "completion", arg: 3, scope: !7396, file: !708, line: 561, type: !7439)
!7446 = !DILocation(line: 0, scope: !7396)
!7447 = !DILocation(line: 566, column: 1, scope: !7396)
!7448 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !822, file: !822, line: 40, type: !743, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7449)
!7449 = !{!7450, !7451, !7452, !7453, !7455, !7456, !7461, !7462}
!7450 = !DILocalVariable(name: "port", arg: 1, scope: !7448, file: !822, line: 40, type: !745)
!7451 = !DILocalVariable(name: "pin", arg: 2, scope: !7448, file: !822, line: 40, type: !760)
!7452 = !DILocalVariable(name: "flags", arg: 3, scope: !7448, file: !822, line: 41, type: !761)
!7453 = !DILocalVariable(name: "config", scope: !7448, file: !822, line: 43, type: !7454)
!7454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 32)
!7455 = !DILocalVariable(name: "base", scope: !7448, file: !822, line: 44, type: !859)
!7456 = !DILocalVariable(name: "pin_cfg", scope: !7448, file: !822, line: 52, type: !7457)
!7457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !875, line: 59, size: 160, elements: !7458)
!7458 = !{!7459, !7460}
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !7457, file: !875, line: 60, baseType: !874, size: 128)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !7457, file: !875, line: 61, baseType: !137, size: 32, offset: 128)
!7461 = !DILocalVariable(name: "gpio_cfg_reg", scope: !7448, file: !822, line: 54, type: !581)
!7462 = !DILocalVariable(name: "reg", scope: !7448, file: !822, line: 56, type: !137)
!7463 = !DILocation(line: 0, scope: !7448)
!7464 = !DILocation(line: 43, column: 47, scope: !7448)
!7465 = !DILocation(line: 44, column: 28, scope: !7448)
!7466 = !DILocation(line: 46, column: 35, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7448, file: !822, line: 46, column: 6)
!7468 = !DILocation(line: 52, column: 2, scope: !7448)
!7469 = !DILocation(line: 52, column: 25, scope: !7448)
!7470 = !DILocation(line: 55, column: 32, scope: !7448)
!7471 = !DILocation(line: 55, column: 24, scope: !7448)
!7472 = !DILocation(line: 55, column: 47, scope: !7448)
!7473 = !DILocation(line: 55, column: 3, scope: !7448)
!7474 = !DILocation(line: 56, column: 17, scope: !7448)
!7475 = !DILocation(line: 66, column: 13, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7448, file: !822, line: 66, column: 6)
!7477 = !DILocation(line: 66, column: 34, scope: !7476)
!7478 = !DILocation(line: 66, column: 6, scope: !7448)
!7479 = !DILocation(line: 70, column: 36, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7448, file: !822, line: 70, column: 6)
!7481 = !DILocation(line: 70, column: 14, scope: !7480)
!7482 = !DILocation(line: 70, column: 30, scope: !7480)
!7483 = !DILocation(line: 72, column: 7, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7480, file: !822, line: 70, column: 72)
!7485 = !DILocation(line: 73, column: 8, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7487, file: !822, line: 72, column: 38)
!7487 = distinct !DILexicalBlock(scope: !7484, file: !822, line: 72, column: 7)
!7488 = !DILocation(line: 74, column: 3, scope: !7486)
!7489 = !DILocation(line: 75, column: 8, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7487, file: !822, line: 74, column: 10)
!7491 = !DILocation(line: 79, column: 7, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7480, file: !822, line: 77, column: 9)
!7493 = !DILocation(line: 0, scope: !7480)
!7494 = !DILocation(line: 84, column: 27, scope: !7448)
!7495 = !DILocation(line: 84, column: 26, scope: !7448)
!7496 = !DILocation(line: 84, column: 2, scope: !7448)
!7497 = !DILocation(line: 86, column: 10, scope: !7448)
!7498 = !DILocation(line: 86, column: 25, scope: !7448)
!7499 = !DILocation(line: 87, column: 2, scope: !7448)
!7500 = !DILocation(line: 98, column: 2, scope: !7448)
!7501 = !DILocation(line: 99, column: 2, scope: !7448)
!7502 = !DILocation(line: 101, column: 6, scope: !7448)
!7503 = !DILocation(line: 103, column: 14, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7505, file: !822, line: 103, column: 7)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !822, line: 101, column: 35)
!7506 = distinct !DILexicalBlock(scope: !7448, file: !822, line: 101, column: 6)
!7507 = !DILocation(line: 103, column: 38, scope: !7504)
!7508 = !DILocation(line: 103, column: 7, scope: !7505)
!7509 = !DILocation(line: 105, column: 21, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7504, file: !822, line: 105, column: 14)
!7511 = !DILocation(line: 105, column: 46, scope: !7510)
!7512 = !DILocation(line: 105, column: 14, scope: !7504)
!7513 = !DILocation(line: 0, scope: !7504)
!7514 = !DILocation(line: 110, column: 3, scope: !7505)
!7515 = !DILocation(line: 111, column: 2, scope: !7505)
!7516 = !DILocation(line: 113, column: 3, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7506, file: !822, line: 111, column: 9)
!7518 = !DILocation(line: 117, column: 1, scope: !7448)
!7519 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !822, file: !822, line: 119, type: !7520, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7522)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{!103, !745, !149}
!7522 = !{!7523, !7524, !7525, !7526}
!7523 = !DILocalVariable(name: "port", arg: 1, scope: !7519, file: !822, line: 119, type: !745)
!7524 = !DILocalVariable(name: "value", arg: 2, scope: !7519, file: !822, line: 119, type: !149)
!7525 = !DILocalVariable(name: "config", scope: !7519, file: !822, line: 121, type: !7454)
!7526 = !DILocalVariable(name: "base", scope: !7519, file: !822, line: 122, type: !859)
!7527 = !DILocation(line: 0, scope: !7519)
!7528 = !DILocation(line: 121, column: 47, scope: !7519)
!7529 = !DILocation(line: 122, column: 28, scope: !7519)
!7530 = !DILocation(line: 124, column: 11, scope: !7519)
!7531 = !DILocation(line: 124, column: 9, scope: !7519)
!7532 = !DILocation(line: 126, column: 2, scope: !7519)
!7533 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !822, file: !822, line: 129, type: !770, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7534)
!7534 = !{!7535, !7536, !7537, !7538, !7539}
!7535 = !DILocalVariable(name: "port", arg: 1, scope: !7533, file: !822, line: 129, type: !745)
!7536 = !DILocalVariable(name: "mask", arg: 2, scope: !7533, file: !822, line: 130, type: !772)
!7537 = !DILocalVariable(name: "value", arg: 3, scope: !7533, file: !822, line: 131, type: !767)
!7538 = !DILocalVariable(name: "config", scope: !7533, file: !822, line: 133, type: !7454)
!7539 = !DILocalVariable(name: "base", scope: !7533, file: !822, line: 134, type: !859)
!7540 = !DILocation(line: 0, scope: !7533)
!7541 = !DILocation(line: 133, column: 47, scope: !7533)
!7542 = !DILocation(line: 134, column: 28, scope: !7533)
!7543 = !DILocation(line: 137, column: 5, scope: !7533)
!7544 = !DILocation(line: 137, column: 32, scope: !7533)
!7545 = !DILocation(line: 137, column: 30, scope: !7533)
!7546 = !DILocation(line: 137, column: 48, scope: !7533)
!7547 = !DILocation(line: 137, column: 39, scope: !7533)
!7548 = !DILocation(line: 136, column: 2, scope: !7533)
!7549 = !DILocation(line: 139, column: 2, scope: !7533)
!7550 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !822, file: !822, line: 142, type: !775, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7551)
!7551 = !{!7552, !7553, !7554, !7555}
!7552 = !DILocalVariable(name: "port", arg: 1, scope: !7550, file: !822, line: 142, type: !745)
!7553 = !DILocalVariable(name: "pins", arg: 2, scope: !7550, file: !822, line: 143, type: !772)
!7554 = !DILocalVariable(name: "config", scope: !7550, file: !822, line: 145, type: !7454)
!7555 = !DILocalVariable(name: "base", scope: !7550, file: !822, line: 146, type: !859)
!7556 = !DILocation(line: 0, scope: !7550)
!7557 = !DILocation(line: 145, column: 47, scope: !7550)
!7558 = !DILocation(line: 146, column: 28, scope: !7550)
!7559 = !DILocation(line: 148, column: 29, scope: !7550)
!7560 = !DILocation(line: 148, column: 54, scope: !7550)
!7561 = !DILocation(line: 148, column: 2, scope: !7550)
!7562 = !DILocation(line: 150, column: 2, scope: !7550)
!7563 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !822, file: !822, line: 153, type: !775, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7564)
!7564 = !{!7565, !7566, !7567, !7568}
!7565 = !DILocalVariable(name: "port", arg: 1, scope: !7563, file: !822, line: 153, type: !745)
!7566 = !DILocalVariable(name: "pins", arg: 2, scope: !7563, file: !822, line: 154, type: !772)
!7567 = !DILocalVariable(name: "config", scope: !7563, file: !822, line: 156, type: !7454)
!7568 = !DILocalVariable(name: "base", scope: !7563, file: !822, line: 157, type: !859)
!7569 = !DILocation(line: 0, scope: !7563)
!7570 = !DILocation(line: 156, column: 47, scope: !7563)
!7571 = !DILocation(line: 157, column: 28, scope: !7563)
!7572 = !DILocation(line: 159, column: 29, scope: !7563)
!7573 = !DILocation(line: 159, column: 56, scope: !7563)
!7574 = !DILocation(line: 159, column: 54, scope: !7563)
!7575 = !DILocation(line: 159, column: 2, scope: !7563)
!7576 = !DILocation(line: 161, column: 2, scope: !7563)
!7577 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !822, file: !822, line: 164, type: !775, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7578)
!7578 = !{!7579, !7580, !7581, !7582}
!7579 = !DILocalVariable(name: "port", arg: 1, scope: !7577, file: !822, line: 164, type: !745)
!7580 = !DILocalVariable(name: "pins", arg: 2, scope: !7577, file: !822, line: 165, type: !772)
!7581 = !DILocalVariable(name: "config", scope: !7577, file: !822, line: 167, type: !7454)
!7582 = !DILocalVariable(name: "base", scope: !7577, file: !822, line: 168, type: !859)
!7583 = !DILocation(line: 0, scope: !7577)
!7584 = !DILocation(line: 167, column: 47, scope: !7577)
!7585 = !DILocation(line: 168, column: 28, scope: !7577)
!7586 = !DILocation(line: 170, column: 29, scope: !7577)
!7587 = !DILocation(line: 170, column: 54, scope: !7577)
!7588 = !DILocation(line: 170, column: 2, scope: !7577)
!7589 = !DILocation(line: 172, column: 2, scope: !7577)
!7590 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !822, file: !822, line: 175, type: !781, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7591)
!7591 = !{!7592, !7593, !7594, !7595, !7596, !7597, !7598, !7599, !7600, !7601}
!7592 = !DILocalVariable(name: "port", arg: 1, scope: !7590, file: !822, line: 175, type: !745)
!7593 = !DILocalVariable(name: "pin", arg: 2, scope: !7590, file: !822, line: 176, type: !760)
!7594 = !DILocalVariable(name: "mode", arg: 3, scope: !7590, file: !822, line: 177, type: !720)
!7595 = !DILocalVariable(name: "trig", arg: 4, scope: !7590, file: !822, line: 178, type: !726)
!7596 = !DILocalVariable(name: "config", scope: !7590, file: !822, line: 180, type: !7454)
!7597 = !DILocalVariable(name: "base", scope: !7590, file: !822, line: 181, type: !859)
!7598 = !DILocalVariable(name: "icr_reg", scope: !7590, file: !822, line: 182, type: !581)
!7599 = !DILocalVariable(name: "key", scope: !7590, file: !822, line: 183, type: !32)
!7600 = !DILocalVariable(name: "icr_val", scope: !7590, file: !822, line: 184, type: !137)
!7601 = !DILocalVariable(name: "shift", scope: !7590, file: !822, line: 185, type: !465)
!7602 = !DILocation(line: 0, scope: !7590)
!7603 = !DILocation(line: 180, column: 47, scope: !7590)
!7604 = !DILocation(line: 181, column: 28, scope: !7590)
!7605 = !DILocation(line: 187, column: 14, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7590, file: !822, line: 187, column: 6)
!7607 = !DILocation(line: 187, column: 21, scope: !7606)
!7608 = !DILocation(line: 187, column: 19, scope: !7606)
!7609 = !DILocation(line: 187, column: 31, scope: !7606)
!7610 = !DILocation(line: 188, column: 6, scope: !7606)
!7611 = !DILocation(line: 193, column: 12, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7590, file: !822, line: 193, column: 6)
!7613 = !DILocation(line: 193, column: 35, scope: !7612)
!7614 = !DILocation(line: 195, column: 42, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7612, file: !822, line: 195, column: 13)
!7616 = !DILocation(line: 198, column: 19, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7615, file: !822, line: 198, column: 13)
!7618 = !DILocation(line: 198, column: 43, scope: !7617)
!7619 = !DILocation(line: 0, scope: !7612)
!7620 = !DILocation(line: 205, column: 10, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7590, file: !822, line: 205, column: 6)
!7622 = !DILocation(line: 205, column: 6, scope: !7590)
!7623 = !DILocation(line: 206, column: 14, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7621, file: !822, line: 205, column: 17)
!7625 = !DILocation(line: 207, column: 21, scope: !7624)
!7626 = !DILocation(line: 208, column: 2, scope: !7624)
!7627 = !DILocation(line: 208, column: 17, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7621, file: !822, line: 208, column: 13)
!7629 = !DILocation(line: 208, column: 13, scope: !7621)
!7630 = !DILocation(line: 209, column: 14, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7628, file: !822, line: 208, column: 24)
!7632 = !DILocation(line: 210, column: 21, scope: !7631)
!7633 = !DILocation(line: 0, scope: !7621)
!7634 = !DILocation(line: 55, column: 2, scope: !7635, inlinedAt: !7641)
!7635 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !7636, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7638)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{!32}
!7638 = !{!7639, !7640}
!7639 = !DILocalVariable(name: "key", scope: !7635, file: !6193, line: 44, type: !32)
!7640 = !DILocalVariable(name: "tmp", scope: !7635, file: !6193, line: 53, type: !32)
!7641 = distinct !DILocation(line: 215, column: 8, scope: !7590)
!7642 = !{i64 3015035}
!7643 = !DILocation(line: 0, scope: !7635, inlinedAt: !7641)
!7644 = !DILocation(line: 217, column: 14, scope: !7590)
!7645 = !DILocation(line: 217, column: 33, scope: !7590)
!7646 = !DILocation(line: 217, column: 30, scope: !7590)
!7647 = !DILocation(line: 217, column: 25, scope: !7590)
!7648 = !DILocation(line: 217, column: 23, scope: !7590)
!7649 = !DILocation(line: 217, column: 52, scope: !7590)
!7650 = !DILocation(line: 217, column: 41, scope: !7590)
!7651 = !DILocation(line: 217, column: 11, scope: !7590)
!7652 = !DILocation(line: 219, column: 2, scope: !7590)
!7653 = !DILocation(line: 220, column: 2, scope: !7590)
!7654 = !DILocation(line: 221, column: 2, scope: !7590)
!7655 = !DILocalVariable(name: "key", arg: 1, scope: !7656, file: !6193, line: 84, type: !32)
!7656 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6031, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7657)
!7657 = !{!7655}
!7658 = !DILocation(line: 0, scope: !7656, inlinedAt: !7659)
!7659 = distinct !DILocation(line: 223, column: 2, scope: !7590)
!7660 = !DILocation(line: 95, column: 2, scope: !7656, inlinedAt: !7659)
!7661 = !{i64 3015852}
!7662 = !DILocation(line: 225, column: 2, scope: !7590)
!7663 = !DILocation(line: 226, column: 1, scope: !7590)
!7664 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !822, file: !822, line: 228, type: !785, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7665)
!7665 = !{!7666, !7667, !7668, !7669}
!7666 = !DILocalVariable(name: "port", arg: 1, scope: !7664, file: !822, line: 228, type: !745)
!7667 = !DILocalVariable(name: "cb", arg: 2, scope: !7664, file: !822, line: 229, type: !787)
!7668 = !DILocalVariable(name: "set", arg: 3, scope: !7664, file: !822, line: 229, type: !636)
!7669 = !DILocalVariable(name: "data", scope: !7664, file: !822, line: 231, type: !7670)
!7670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!7671 = !DILocation(line: 0, scope: !7664)
!7672 = !DILocation(line: 231, column: 37, scope: !7664)
!7673 = !DILocation(line: 233, column: 37, scope: !7664)
!7674 = !DILocation(line: 233, column: 9, scope: !7664)
!7675 = !DILocation(line: 233, column: 2, scope: !7664)
!7676 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7677, file: !7677, line: 38, type: !7678, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7681)
!7677 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!103, !7680, !787, !636}
!7680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!7681 = !{!7682, !7683, !7684}
!7682 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7676, file: !7677, line: 38, type: !7680)
!7683 = !DILocalVariable(name: "callback", arg: 2, scope: !7676, file: !7677, line: 39, type: !787)
!7684 = !DILocalVariable(name: "set", arg: 3, scope: !7676, file: !7677, line: 40, type: !636)
!7685 = !DILocation(line: 0, scope: !7676)
!7686 = !DILocation(line: 45, column: 7, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7676, file: !7677, line: 45, column: 6)
!7688 = !DILocation(line: 45, column: 6, scope: !7676)
!7689 = !DILocation(line: 46, column: 56, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !7677, line: 46, column: 7)
!7691 = distinct !DILexicalBlock(scope: !7687, file: !7677, line: 45, column: 38)
!7692 = !DILocation(line: 46, column: 8, scope: !7690)
!7693 = !DILocation(line: 46, column: 7, scope: !7691)
!7694 = !DILocation(line: 51, column: 13, scope: !7687)
!7695 = !DILocation(line: 56, column: 43, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !7677, line: 55, column: 11)
!7697 = distinct !DILexicalBlock(scope: !7676, file: !7677, line: 55, column: 6)
!7698 = !DILocation(line: 56, column: 3, scope: !7696)
!7699 = !DILocation(line: 57, column: 2, scope: !7696)
!7700 = !DILocation(line: 60, column: 1, scope: !7676)
!7701 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !792, file: !792, line: 261, type: !7702, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7704)
!7702 = !DISubroutineType(types: !7703)
!7703 = !{!636, !7680}
!7704 = !{!7705}
!7705 = !DILocalVariable(name: "list", arg: 1, scope: !7701, file: !792, line: 261, type: !7680)
!7706 = !DILocation(line: 0, scope: !7701)
!7707 = !DILocation(line: 261, column: 1, scope: !7701)
!7708 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !792, file: !792, line: 417, type: !7709, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7711)
!7709 = !DISubroutineType(types: !7710)
!7710 = !{!636, !7680, !848}
!7711 = !{!7712, !7713, !7714, !7715}
!7712 = !DILocalVariable(name: "list", arg: 1, scope: !7708, file: !792, line: 417, type: !7680)
!7713 = !DILocalVariable(name: "node", arg: 2, scope: !7708, file: !792, line: 417, type: !848)
!7714 = !DILocalVariable(name: "prev", scope: !7708, file: !792, line: 417, type: !848)
!7715 = !DILocalVariable(name: "test", scope: !7708, file: !792, line: 417, type: !848)
!7716 = !DILocation(line: 0, scope: !7708)
!7717 = !DILocation(line: 417, column: 1, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7708, file: !792, line: 417, column: 1)
!7719 = !DILocation(line: 417, column: 1, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7718, file: !792, line: 417, column: 1)
!7721 = !DILocation(line: 417, column: 1, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !792, line: 417, column: 1)
!7723 = distinct !DILexicalBlock(scope: !7720, file: !792, line: 417, column: 1)
!7724 = !DILocation(line: 417, column: 1, scope: !7723)
!7725 = distinct !{!7725, !7717, !7717}
!7726 = !DILocation(line: 417, column: 1, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7722, file: !792, line: 417, column: 1)
!7728 = !DILocation(line: 417, column: 1, scope: !7708)
!7729 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !792, file: !792, line: 298, type: !7730, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7732)
!7730 = !DISubroutineType(types: !7731)
!7731 = !{null, !7680, !848}
!7732 = !{!7733, !7734}
!7733 = !DILocalVariable(name: "list", arg: 1, scope: !7729, file: !792, line: 298, type: !7680)
!7734 = !DILocalVariable(name: "node", arg: 2, scope: !7729, file: !792, line: 298, type: !848)
!7735 = !DILocation(line: 0, scope: !7729)
!7736 = !DILocation(line: 298, column: 1, scope: !7729)
!7737 = !DILocation(line: 298, column: 1, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7729, file: !792, line: 298, column: 1)
!7739 = !DILocation(line: 298, column: 1, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7738, file: !792, line: 298, column: 1)
!7741 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !792, file: !792, line: 231, type: !7742, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7744)
!7742 = !DISubroutineType(types: !7743)
!7743 = !{!848, !7680}
!7744 = !{!7745}
!7745 = !DILocalVariable(name: "list", arg: 1, scope: !7741, file: !792, line: 231, type: !7680)
!7746 = !DILocation(line: 0, scope: !7741)
!7747 = !DILocation(line: 233, column: 15, scope: !7741)
!7748 = !DILocation(line: 233, column: 2, scope: !7741)
!7749 = distinct !DISubprogram(name: "z_snode_next_set", scope: !792, file: !792, line: 209, type: !7750, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7752)
!7750 = !DISubroutineType(types: !7751)
!7751 = !{null, !848, !848}
!7752 = !{!7753, !7754}
!7753 = !DILocalVariable(name: "parent", arg: 1, scope: !7749, file: !792, line: 209, type: !848)
!7754 = !DILocalVariable(name: "child", arg: 2, scope: !7749, file: !792, line: 209, type: !848)
!7755 = !DILocation(line: 0, scope: !7749)
!7756 = !DILocation(line: 211, column: 10, scope: !7749)
!7757 = !DILocation(line: 211, column: 15, scope: !7749)
!7758 = !DILocation(line: 212, column: 1, scope: !7749)
!7759 = distinct !DISubprogram(name: "z_slist_head_set", scope: !792, file: !792, line: 214, type: !7730, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7760)
!7760 = !{!7761, !7762}
!7761 = !DILocalVariable(name: "list", arg: 1, scope: !7759, file: !792, line: 214, type: !7680)
!7762 = !DILocalVariable(name: "node", arg: 2, scope: !7759, file: !792, line: 214, type: !848)
!7763 = !DILocation(line: 0, scope: !7759)
!7764 = !DILocation(line: 216, column: 8, scope: !7759)
!7765 = !DILocation(line: 216, column: 13, scope: !7759)
!7766 = !DILocation(line: 217, column: 1, scope: !7759)
!7767 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !792, file: !792, line: 243, type: !7742, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7768)
!7768 = !{!7769}
!7769 = !DILocalVariable(name: "list", arg: 1, scope: !7767, file: !792, line: 243, type: !7680)
!7770 = !DILocation(line: 0, scope: !7767)
!7771 = !DILocation(line: 245, column: 15, scope: !7767)
!7772 = !DILocation(line: 245, column: 2, scope: !7767)
!7773 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !792, file: !792, line: 219, type: !7730, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7774)
!7774 = !{!7775, !7776}
!7775 = !DILocalVariable(name: "list", arg: 1, scope: !7773, file: !792, line: 219, type: !7680)
!7776 = !DILocalVariable(name: "node", arg: 2, scope: !7773, file: !792, line: 219, type: !848)
!7777 = !DILocation(line: 0, scope: !7773)
!7778 = !DILocation(line: 221, column: 8, scope: !7773)
!7779 = !DILocation(line: 221, column: 13, scope: !7773)
!7780 = !DILocation(line: 222, column: 1, scope: !7773)
!7781 = distinct !DISubprogram(name: "sys_slist_remove", scope: !792, file: !792, line: 401, type: !7782, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7784)
!7782 = !DISubroutineType(types: !7783)
!7783 = !{null, !7680, !848, !848}
!7784 = !{!7785, !7786, !7787}
!7785 = !DILocalVariable(name: "list", arg: 1, scope: !7781, file: !792, line: 401, type: !7680)
!7786 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7781, file: !792, line: 401, type: !848)
!7787 = !DILocalVariable(name: "node", arg: 3, scope: !7781, file: !792, line: 401, type: !848)
!7788 = !DILocation(line: 0, scope: !7781)
!7789 = !DILocation(line: 401, column: 1, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7781, file: !792, line: 401, column: 1)
!7791 = !DILocation(line: 0, scope: !7790)
!7792 = !DILocation(line: 401, column: 1, scope: !7781)
!7793 = !DILocation(line: 401, column: 1, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7790, file: !792, line: 401, column: 1)
!7795 = !DILocation(line: 401, column: 1, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7794, file: !792, line: 401, column: 1)
!7797 = !DILocation(line: 401, column: 1, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7796, file: !792, line: 401, column: 1)
!7799 = !DILocation(line: 401, column: 1, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7790, file: !792, line: 401, column: 1)
!7801 = !DILocation(line: 401, column: 1, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7800, file: !792, line: 401, column: 1)
!7803 = !DILocation(line: 401, column: 1, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7802, file: !792, line: 401, column: 1)
!7805 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !792, file: !792, line: 285, type: !7806, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7808)
!7806 = !DISubroutineType(types: !7807)
!7807 = !{!848, !848}
!7808 = !{!7809}
!7809 = !DILocalVariable(name: "node", arg: 1, scope: !7805, file: !792, line: 285, type: !848)
!7810 = !DILocation(line: 0, scope: !7805)
!7811 = !DILocation(line: 285, column: 1, scope: !7805)
!7812 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !792, file: !792, line: 274, type: !7806, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7813)
!7813 = !{!7814}
!7814 = !DILocalVariable(name: "node", arg: 1, scope: !7812, file: !792, line: 274, type: !848)
!7815 = !DILocation(line: 0, scope: !7812)
!7816 = !DILocation(line: 274, column: 1, scope: !7812)
!7817 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !792, file: !792, line: 204, type: !7806, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7818)
!7818 = !{!7819}
!7819 = !DILocalVariable(name: "node", arg: 1, scope: !7817, file: !792, line: 204, type: !848)
!7820 = !DILocation(line: 0, scope: !7817)
!7821 = !DILocation(line: 206, column: 15, scope: !7817)
!7822 = !DILocation(line: 206, column: 2, scope: !7817)
!7823 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !732, file: !732, line: 131, type: !7824, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7826)
!7824 = !DISubroutineType(types: !7825)
!7825 = !{!137, !859}
!7826 = !{!7827}
!7827 = !DILocalVariable(name: "base", arg: 1, scope: !7823, file: !732, line: 131, type: !859)
!7828 = !DILocation(line: 0, scope: !7823)
!7829 = !DILocation(line: 133, column: 12, scope: !7823)
!7830 = !DILocation(line: 133, column: 5, scope: !7823)
!7831 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !732, file: !732, line: 178, type: !7832, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7834)
!7832 = !DISubroutineType(types: !7833)
!7833 = !{null, !859, !137}
!7834 = !{!7835, !7836}
!7835 = !DILocalVariable(name: "base", arg: 1, scope: !7831, file: !732, line: 178, type: !859)
!7836 = !DILocalVariable(name: "portVal", arg: 2, scope: !7831, file: !732, line: 178, type: !137)
!7837 = !DILocation(line: 0, scope: !7831)
!7838 = !DILocation(line: 180, column: 5, scope: !7831)
!7839 = !DILocation(line: 180, column: 23, scope: !7831)
!7840 = !DILocation(line: 181, column: 1, scope: !7831)
!7841 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !822, file: !822, line: 236, type: !7842, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7844)
!7842 = !DISubroutineType(types: !7843)
!7843 = !{null, !745}
!7844 = !{!7845, !7846, !7847, !7848}
!7845 = !DILocalVariable(name: "port", arg: 1, scope: !7841, file: !822, line: 236, type: !745)
!7846 = !DILocalVariable(name: "config", scope: !7841, file: !822, line: 238, type: !7454)
!7847 = !DILocalVariable(name: "data", scope: !7841, file: !822, line: 239, type: !7670)
!7848 = !DILocalVariable(name: "int_status", scope: !7841, file: !822, line: 240, type: !137)
!7849 = !DILocation(line: 0, scope: !7841)
!7850 = !DILocation(line: 238, column: 47, scope: !7841)
!7851 = !DILocation(line: 239, column: 37, scope: !7841)
!7852 = !DILocation(line: 242, column: 23, scope: !7841)
!7853 = !DILocation(line: 242, column: 29, scope: !7841)
!7854 = !DILocation(line: 244, column: 20, scope: !7841)
!7855 = !DILocation(line: 246, column: 29, scope: !7841)
!7856 = !DILocation(line: 246, column: 2, scope: !7841)
!7857 = !DILocation(line: 247, column: 1, scope: !7841)
!7858 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7677, file: !7677, line: 69, type: !7859, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !717, retainedNodes: !7861)
!7859 = !DISubroutineType(types: !7860)
!7860 = !{null, !7680, !745, !137}
!7861 = !{!7862, !7863, !7864, !7865, !7866}
!7862 = !DILocalVariable(name: "list", arg: 1, scope: !7858, file: !7677, line: 69, type: !7680)
!7863 = !DILocalVariable(name: "port", arg: 2, scope: !7858, file: !7677, line: 70, type: !745)
!7864 = !DILocalVariable(name: "pins", arg: 3, scope: !7858, file: !7677, line: 71, type: !137)
!7865 = !DILocalVariable(name: "cb", scope: !7858, file: !7677, line: 73, type: !787)
!7866 = !DILocalVariable(name: "tmp", scope: !7858, file: !7677, line: 73, type: !787)
!7867 = !DILocation(line: 0, scope: !7858)
!7868 = !DILocation(line: 75, column: 2, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7858, file: !7677, line: 75, column: 2)
!7870 = !DILocation(line: 0, scope: !7869)
!7871 = !DILocation(line: 76, column: 11, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7873, file: !7677, line: 76, column: 7)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !7677, line: 75, column: 57)
!7874 = distinct !DILexicalBlock(scope: !7869, file: !7677, line: 75, column: 2)
!7875 = !DILocation(line: 76, column: 20, scope: !7872)
!7876 = !DILocation(line: 76, column: 7, scope: !7873)
!7877 = !DILocation(line: 78, column: 8, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7872, file: !7677, line: 76, column: 28)
!7879 = !DILocation(line: 78, column: 4, scope: !7878)
!7880 = !DILocation(line: 79, column: 3, scope: !7878)
!7881 = !DILocation(line: 75, column: 2, scope: !7874)
!7882 = !DILocation(line: 81, column: 1, scope: !7858)
!7883 = !DILocation(line: 0, scope: !887)
!7884 = !DILocation(line: 318, column: 1, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !887, file: !822, line: 318, column: 1)
!7886 = !DILocation(line: 318, column: 1, scope: !887)
!7887 = !DILocation(line: 318, column: 1, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !887, file: !822, line: 318, column: 1)
!7889 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1112, file: !1112, line: 114, type: !1010, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7890)
!7890 = !{!7891, !7892, !7893, !7894}
!7891 = !DILocalVariable(name: "dev", arg: 1, scope: !7889, file: !1112, line: 114, type: !1012)
!7892 = !DILocalVariable(name: "c", arg: 2, scope: !7889, file: !1112, line: 114, type: !644)
!7893 = !DILocalVariable(name: "uart", scope: !7889, file: !1112, line: 116, type: !1083)
!7894 = !DILocalVariable(name: "ret", scope: !7889, file: !1112, line: 117, type: !103)
!7895 = !DILocation(line: 0, scope: !7889)
!7896 = !DILocation(line: 116, column: 20, scope: !7889)
!7897 = !DILocation(line: 119, column: 6, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7889, file: !1112, line: 119, column: 6)
!7899 = !DILocation(line: 119, column: 6, scope: !7889)
!7900 = !DILocation(line: 120, column: 8, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7898, file: !1112, line: 119, column: 55)
!7902 = !DILocation(line: 120, column: 6, scope: !7901)
!7903 = !DILocation(line: 122, column: 7, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7901, file: !1112, line: 122, column: 7)
!7905 = !DILocation(line: 122, column: 7, scope: !7901)
!7906 = !DILocation(line: 123, column: 4, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7904, file: !1112, line: 122, column: 54)
!7908 = !DILocation(line: 124, column: 3, scope: !7907)
!7909 = !DILocation(line: 128, column: 2, scope: !7889)
!7910 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1112, file: !1112, line: 105, type: !1029, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7911)
!7911 = !{!7912, !7913, !7914}
!7912 = !DILocalVariable(name: "dev", arg: 1, scope: !7910, file: !1112, line: 105, type: !1012)
!7913 = !DILocalVariable(name: "c", arg: 2, scope: !7910, file: !1112, line: 105, type: !466)
!7914 = !DILocalVariable(name: "uart", scope: !7910, file: !1112, line: 107, type: !1083)
!7915 = !DILocation(line: 0, scope: !7910)
!7916 = !DILocation(line: 107, column: 20, scope: !7910)
!7917 = !DILocation(line: 109, column: 2, scope: !7910)
!7918 = !DILocation(line: 109, column: 10, scope: !7910)
!7919 = distinct !{!7919, !7917, !7920}
!7920 = !DILocation(line: 110, column: 2, scope: !7910)
!7921 = !DILocation(line: 111, column: 2, scope: !7910)
!7922 = !DILocation(line: 112, column: 1, scope: !7910)
!7923 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1112, file: !1112, line: 133, type: !1055, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7924)
!7924 = !{!7925, !7926, !7927, !7928, !7929}
!7925 = !DILocalVariable(name: "dev", arg: 1, scope: !7923, file: !1112, line: 133, type: !1012)
!7926 = !DILocalVariable(name: "tx_data", arg: 2, scope: !7923, file: !1112, line: 134, type: !675)
!7927 = !DILocalVariable(name: "size", arg: 3, scope: !7923, file: !1112, line: 135, type: !103)
!7928 = !DILocalVariable(name: "uart", scope: !7923, file: !1112, line: 137, type: !1083)
!7929 = !DILocalVariable(name: "num_tx", scope: !7923, file: !1112, line: 138, type: !32)
!7930 = !DILocation(line: 0, scope: !7923)
!7931 = !DILocation(line: 137, column: 20, scope: !7923)
!7932 = !DILocation(line: 140, column: 26, scope: !7923)
!7933 = !DILocation(line: 140, column: 31, scope: !7923)
!7934 = !DILocation(line: 141, column: 6, scope: !7923)
!7935 = !DILocation(line: 140, column: 2, scope: !7923)
!7936 = !DILocation(line: 143, column: 22, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7923, file: !1112, line: 141, column: 51)
!7938 = !DILocation(line: 143, column: 3, scope: !7937)
!7939 = !DILocation(line: 144, column: 9, scope: !7937)
!7940 = distinct !{!7940, !7935, !7941}
!7941 = !DILocation(line: 145, column: 2, scope: !7923)
!7942 = !DILocation(line: 147, column: 2, scope: !7923)
!7943 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1112, file: !1112, line: 150, type: !1059, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7944)
!7944 = !{!7945, !7946, !7947, !7948, !7949}
!7945 = !DILocalVariable(name: "dev", arg: 1, scope: !7943, file: !1112, line: 150, type: !1012)
!7946 = !DILocalVariable(name: "rx_data", arg: 2, scope: !7943, file: !1112, line: 150, type: !681)
!7947 = !DILocalVariable(name: "size", arg: 3, scope: !7943, file: !1112, line: 151, type: !682)
!7948 = !DILocalVariable(name: "uart", scope: !7943, file: !1112, line: 153, type: !1083)
!7949 = !DILocalVariable(name: "num_rx", scope: !7943, file: !1112, line: 154, type: !32)
!7950 = !DILocation(line: 0, scope: !7943)
!7951 = !DILocation(line: 153, column: 20, scope: !7943)
!7952 = !DILocation(line: 156, column: 26, scope: !7943)
!7953 = !DILocation(line: 156, column: 31, scope: !7943)
!7954 = !DILocation(line: 157, column: 6, scope: !7943)
!7955 = !DILocation(line: 156, column: 2, scope: !7943)
!7956 = !DILocation(line: 159, column: 23, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7943, file: !1112, line: 157, column: 51)
!7958 = !DILocation(line: 159, column: 17, scope: !7957)
!7959 = !DILocation(line: 159, column: 3, scope: !7957)
!7960 = !DILocation(line: 159, column: 21, scope: !7957)
!7961 = distinct !{!7961, !7955, !7962}
!7962 = !DILocation(line: 160, column: 2, scope: !7943)
!7963 = !DILocation(line: 162, column: 6, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7943, file: !1112, line: 162, column: 6)
!7965 = !DILocation(line: 162, column: 6, scope: !7943)
!7966 = !DILocation(line: 163, column: 3, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7964, file: !1112, line: 162, column: 53)
!7968 = !DILocation(line: 164, column: 2, scope: !7967)
!7969 = !DILocation(line: 166, column: 2, scope: !7943)
!7970 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1112, file: !1112, line: 169, type: !1063, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7971)
!7971 = !{!7972, !7973}
!7972 = !DILocalVariable(name: "dev", arg: 1, scope: !7970, file: !1112, line: 169, type: !1012)
!7973 = !DILocalVariable(name: "uart", scope: !7970, file: !1112, line: 171, type: !1083)
!7974 = !DILocation(line: 0, scope: !7970)
!7975 = !DILocation(line: 171, column: 20, scope: !7970)
!7976 = !DILocation(line: 173, column: 2, scope: !7970)
!7977 = !DILocation(line: 174, column: 1, scope: !7970)
!7978 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1112, file: !1112, line: 176, type: !1063, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7979)
!7979 = !{!7980, !7981}
!7980 = !DILocalVariable(name: "dev", arg: 1, scope: !7978, file: !1112, line: 176, type: !1012)
!7981 = !DILocalVariable(name: "uart", scope: !7978, file: !1112, line: 178, type: !1083)
!7982 = !DILocation(line: 0, scope: !7978)
!7983 = !DILocation(line: 178, column: 20, scope: !7978)
!7984 = !DILocation(line: 180, column: 2, scope: !7978)
!7985 = !DILocation(line: 181, column: 1, scope: !7978)
!7986 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1112, file: !1112, line: 183, type: !1033, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7987)
!7987 = !{!7988, !7989}
!7988 = !DILocalVariable(name: "dev", arg: 1, scope: !7986, file: !1112, line: 183, type: !1012)
!7989 = !DILocalVariable(name: "uart", scope: !7986, file: !1112, line: 185, type: !1083)
!7990 = !DILocation(line: 0, scope: !7986)
!7991 = !DILocation(line: 185, column: 20, scope: !7986)
!7992 = !DILocation(line: 187, column: 9, scope: !7986)
!7993 = !DILocation(line: 187, column: 2, scope: !7986)
!7994 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1112, file: !1112, line: 190, type: !1063, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7995)
!7995 = !{!7996, !7997}
!7996 = !DILocalVariable(name: "dev", arg: 1, scope: !7994, file: !1112, line: 190, type: !1012)
!7997 = !DILocalVariable(name: "uart", scope: !7994, file: !1112, line: 192, type: !1083)
!7998 = !DILocation(line: 0, scope: !7994)
!7999 = !DILocation(line: 192, column: 20, scope: !7994)
!8000 = !DILocation(line: 194, column: 2, scope: !7994)
!8001 = !DILocation(line: 195, column: 1, scope: !7994)
!8002 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1112, file: !1112, line: 197, type: !1063, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8003)
!8003 = !{!8004, !8005}
!8004 = !DILocalVariable(name: "dev", arg: 1, scope: !8002, file: !1112, line: 197, type: !1012)
!8005 = !DILocalVariable(name: "uart", scope: !8002, file: !1112, line: 199, type: !1083)
!8006 = !DILocation(line: 0, scope: !8002)
!8007 = !DILocation(line: 199, column: 20, scope: !8002)
!8008 = !DILocation(line: 201, column: 2, scope: !8002)
!8009 = !DILocation(line: 202, column: 1, scope: !8002)
!8010 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1112, file: !1112, line: 204, type: !1033, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8011)
!8011 = !{!8012, !8013}
!8012 = !DILocalVariable(name: "dev", arg: 1, scope: !8010, file: !1112, line: 204, type: !1012)
!8013 = !DILocalVariable(name: "uart", scope: !8010, file: !1112, line: 206, type: !1083)
!8014 = !DILocation(line: 0, scope: !8010)
!8015 = !DILocation(line: 206, column: 20, scope: !8010)
!8016 = !DILocation(line: 208, column: 9, scope: !8010)
!8017 = !DILocation(line: 208, column: 2, scope: !8010)
!8018 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1112, file: !1112, line: 211, type: !1063, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8019)
!8019 = !{!8020, !8021}
!8020 = !DILocalVariable(name: "dev", arg: 1, scope: !8018, file: !1112, line: 211, type: !1012)
!8021 = !DILocalVariable(name: "uart", scope: !8018, file: !1112, line: 213, type: !1083)
!8022 = !DILocation(line: 0, scope: !8018)
!8023 = !DILocation(line: 213, column: 20, scope: !8018)
!8024 = !DILocation(line: 215, column: 2, scope: !8018)
!8025 = !DILocation(line: 216, column: 2, scope: !8018)
!8026 = !DILocation(line: 217, column: 1, scope: !8018)
!8027 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1112, file: !1112, line: 219, type: !1063, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8028)
!8028 = !{!8029, !8030}
!8029 = !DILocalVariable(name: "dev", arg: 1, scope: !8027, file: !1112, line: 219, type: !1012)
!8030 = !DILocalVariable(name: "uart", scope: !8027, file: !1112, line: 221, type: !1083)
!8031 = !DILocation(line: 0, scope: !8027)
!8032 = !DILocation(line: 221, column: 20, scope: !8027)
!8033 = !DILocation(line: 223, column: 2, scope: !8027)
!8034 = !DILocation(line: 224, column: 2, scope: !8027)
!8035 = !DILocation(line: 225, column: 1, scope: !8027)
!8036 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1112, file: !1112, line: 227, type: !1033, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8037)
!8037 = !{!8038, !8039}
!8038 = !DILocalVariable(name: "dev", arg: 1, scope: !8036, file: !1112, line: 227, type: !1012)
!8039 = !DILocalVariable(name: "uart", scope: !8036, file: !1112, line: 229, type: !1083)
!8040 = !DILocation(line: 0, scope: !8036)
!8041 = !DILocation(line: 229, column: 20, scope: !8036)
!8042 = !DILocation(line: 231, column: 9, scope: !8036)
!8043 = !DILocation(line: 231, column: 53, scope: !8036)
!8044 = !DILocation(line: 232, column: 3, scope: !8036)
!8045 = !DILocation(line: 231, column: 2, scope: !8036)
!8046 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1112, file: !1112, line: 235, type: !1033, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8047)
!8047 = !{!8048}
!8048 = !DILocalVariable(name: "dev", arg: 1, scope: !8046, file: !1112, line: 235, type: !1012)
!8049 = !DILocation(line: 0, scope: !8046)
!8050 = !DILocation(line: 237, column: 2, scope: !8046)
!8051 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1112, file: !1112, line: 240, type: !1077, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8052)
!8052 = !{!8053, !8054, !8055, !8056}
!8053 = !DILocalVariable(name: "dev", arg: 1, scope: !8051, file: !1112, line: 240, type: !1012)
!8054 = !DILocalVariable(name: "cb", arg: 2, scope: !8051, file: !1112, line: 241, type: !1079)
!8055 = !DILocalVariable(name: "cb_data", arg: 3, scope: !8051, file: !1112, line: 242, type: !102)
!8056 = !DILocalVariable(name: "data", scope: !8051, file: !1112, line: 244, type: !8057)
!8057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!8058 = !DILocation(line: 0, scope: !8051)
!8059 = !DILocation(line: 244, column: 36, scope: !8051)
!8060 = !DILocation(line: 246, column: 8, scope: !8051)
!8061 = !DILocation(line: 246, column: 17, scope: !8051)
!8062 = !DILocation(line: 247, column: 8, scope: !8051)
!8063 = !DILocation(line: 247, column: 16, scope: !8051)
!8064 = !DILocation(line: 248, column: 1, scope: !8051)
!8065 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !919, file: !919, line: 392, type: !8066, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8068)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{!636, !1083, !137}
!8068 = !{!8069, !8070, !8071}
!8069 = !DILocalVariable(name: "base", arg: 1, scope: !8065, file: !919, line: 392, type: !1083)
!8070 = !DILocalVariable(name: "flag", arg: 2, scope: !8065, file: !919, line: 392, type: !137)
!8071 = !DILocalVariable(name: "uart_reg", scope: !8065, file: !919, line: 393, type: !581)
!8072 = !DILocation(line: 0, scope: !8065)
!8073 = !DILocation(line: 395, column: 29, scope: !8065)
!8074 = !DILocation(line: 395, column: 52, scope: !8065)
!8075 = !DILocation(line: 395, column: 44, scope: !8065)
!8076 = !DILocation(line: 395, column: 16, scope: !8065)
!8077 = !DILocation(line: 396, column: 20, scope: !8065)
!8078 = !DILocation(line: 396, column: 39, scope: !8065)
!8079 = !DILocation(line: 396, column: 12, scope: !8065)
!8080 = !DILocation(line: 396, column: 5, scope: !8065)
!8081 = distinct !DISubprogram(name: "UART_Getchar", scope: !919, file: !919, line: 358, type: !8082, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8084)
!8082 = !DISubroutineType(types: !8083)
!8083 = !{!465, !1083}
!8084 = !{!8085}
!8085 = !DILocalVariable(name: "base", arg: 1, scope: !8081, file: !919, line: 358, type: !1083)
!8086 = !DILocation(line: 0, scope: !8081)
!8087 = !DILocation(line: 360, column: 22, scope: !8081)
!8088 = !DILocation(line: 360, column: 12, scope: !8081)
!8089 = !DILocation(line: 360, column: 5, scope: !8081)
!8090 = distinct !DISubprogram(name: "UART_Putchar", scope: !919, file: !919, line: 346, type: !8091, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8093)
!8091 = !DISubroutineType(types: !8092)
!8092 = !{null, !1083, !465}
!8093 = !{!8094, !8095}
!8094 = !DILocalVariable(name: "base", arg: 1, scope: !8090, file: !919, line: 346, type: !1083)
!8095 = !DILocalVariable(name: "data", arg: 2, scope: !8090, file: !919, line: 346, type: !465)
!8096 = !DILocation(line: 0, scope: !8090)
!8097 = !DILocation(line: 348, column: 28, scope: !8090)
!8098 = !DILocation(line: 348, column: 5, scope: !8090)
!8099 = !DILocation(line: 348, column: 25, scope: !8090)
!8100 = !DILocation(line: 349, column: 1, scope: !8090)
!8101 = !DILocation(line: 0, scope: !1186)
!8102 = !DILocation(line: 339, column: 1, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !1186, file: !1112, line: 339, column: 1)
!8104 = !DILocation(line: 339, column: 1, scope: !1186)
!8105 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1112, file: !1112, line: 260, type: !1063, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8106)
!8106 = !{!8107, !8108}
!8107 = !DILocalVariable(name: "dev", arg: 1, scope: !8105, file: !1112, line: 260, type: !1012)
!8108 = !DILocalVariable(name: "data", scope: !8105, file: !1112, line: 262, type: !8057)
!8109 = !DILocation(line: 0, scope: !8105)
!8110 = !DILocation(line: 262, column: 36, scope: !8105)
!8111 = !DILocation(line: 264, column: 12, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8105, file: !1112, line: 264, column: 6)
!8113 = !DILocation(line: 264, column: 6, scope: !8112)
!8114 = !DILocation(line: 264, column: 6, scope: !8105)
!8115 = !DILocation(line: 265, column: 29, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8112, file: !1112, line: 264, column: 22)
!8117 = !DILocation(line: 265, column: 3, scope: !8116)
!8118 = !DILocation(line: 266, column: 2, scope: !8116)
!8119 = !DILocation(line: 267, column: 1, scope: !8105)
!8120 = distinct !DISubprogram(name: "uart_imx_init", scope: !1112, file: !1112, line: 56, type: !1033, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8121)
!8121 = !{!8122, !8123, !8124, !8125, !8126, !8127}
!8122 = !DILocalVariable(name: "dev", arg: 1, scope: !8120, file: !1112, line: 56, type: !1012)
!8123 = !DILocalVariable(name: "uart", scope: !8120, file: !1112, line: 58, type: !1083)
!8124 = !DILocalVariable(name: "config", scope: !8120, file: !1112, line: 59, type: !1109)
!8125 = !DILocalVariable(name: "old_level", scope: !8120, file: !1112, line: 60, type: !32)
!8126 = !DILocalVariable(name: "err", scope: !8120, file: !1112, line: 61, type: !103)
!8127 = !DILocalVariable(name: "initConfig", scope: !8120, file: !1112, line: 67, type: !8128)
!8128 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !919, line: 57, baseType: !8129)
!8129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !919, line: 49, size: 192, elements: !8130)
!8130 = !{!8131, !8132, !8133, !8134, !8135, !8136}
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !8129, file: !919, line: 51, baseType: !137, size: 32)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !8129, file: !919, line: 52, baseType: !137, size: 32, offset: 32)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !8129, file: !919, line: 53, baseType: !137, size: 32, offset: 64)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !8129, file: !919, line: 54, baseType: !137, size: 32, offset: 96)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !8129, file: !919, line: 55, baseType: !137, size: 32, offset: 128)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !8129, file: !919, line: 56, baseType: !137, size: 32, offset: 160)
!8137 = !DILocation(line: 0, scope: !8120)
!8138 = !DILocation(line: 58, column: 20, scope: !8120)
!8139 = !DILocation(line: 55, column: 2, scope: !8140, inlinedAt: !8144)
!8140 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !7636, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8141)
!8141 = !{!8142, !8143}
!8142 = !DILocalVariable(name: "key", scope: !8140, file: !6193, line: 44, type: !32)
!8143 = !DILocalVariable(name: "tmp", scope: !8140, file: !6193, line: 53, type: !32)
!8144 = distinct !DILocation(line: 64, column: 14, scope: !8120)
!8145 = !{i64 2846064}
!8146 = !DILocation(line: 0, scope: !8140, inlinedAt: !8144)
!8147 = !DILocation(line: 67, column: 2, scope: !8120)
!8148 = !DILocation(line: 67, column: 21, scope: !8120)
!8149 = !DILocation(line: 67, column: 34, scope: !8120)
!8150 = !DILocation(line: 68, column: 23, scope: !8120)
!8151 = !DILocation(line: 75, column: 36, scope: !8120)
!8152 = !DILocation(line: 75, column: 8, scope: !8120)
!8153 = !DILocation(line: 76, column: 6, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8120, file: !1112, line: 76, column: 6)
!8155 = !DILocation(line: 76, column: 6, scope: !8120)
!8156 = !DILocation(line: 81, column: 26, scope: !8120)
!8157 = !DILocation(line: 81, column: 24, scope: !8120)
!8158 = !DILocation(line: 83, column: 2, scope: !8120)
!8159 = !DILocation(line: 86, column: 2, scope: !8120)
!8160 = !DILocation(line: 87, column: 2, scope: !8120)
!8161 = !DILocalVariable(name: "key", arg: 1, scope: !8162, file: !6193, line: 84, type: !32)
!8162 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6031, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8163)
!8163 = !{!8161}
!8164 = !DILocation(line: 0, scope: !8162, inlinedAt: !8165)
!8165 = distinct !DILocation(line: 90, column: 2, scope: !8120)
!8166 = !DILocation(line: 95, column: 2, scope: !8162, inlinedAt: !8165)
!8167 = !{i64 2846881}
!8168 = !DILocation(line: 93, column: 10, scope: !8120)
!8169 = !DILocation(line: 93, column: 2, scope: !8120)
!8170 = !DILocation(line: 97, column: 34, scope: !8120)
!8171 = !DILocation(line: 97, column: 26, scope: !8120)
!8172 = !DILocation(line: 97, column: 2, scope: !8120)
!8173 = !DILocation(line: 100, column: 2, scope: !8120)
!8174 = !DILocation(line: 102, column: 2, scope: !8120)
!8175 = !DILocation(line: 103, column: 1, scope: !8120)
!8176 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1121, file: !1121, line: 342, type: !8177, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8179)
!8177 = !DISubroutineType(types: !8178)
!8178 = !{!103, !1118, !465}
!8179 = !{!8180, !8181, !8182, !8183}
!8180 = !DILocalVariable(name: "config", arg: 1, scope: !8176, file: !1121, line: 342, type: !1118)
!8181 = !DILocalVariable(name: "id", arg: 2, scope: !8176, file: !1121, line: 343, type: !465)
!8182 = !DILocalVariable(name: "ret", scope: !8176, file: !1121, line: 345, type: !103)
!8183 = !DILocalVariable(name: "state", scope: !8176, file: !1121, line: 346, type: !1124)
!8184 = !DILocation(line: 0, scope: !8176)
!8185 = !DILocation(line: 346, column: 2, scope: !8176)
!8186 = !DILocation(line: 348, column: 8, scope: !8176)
!8187 = !DILocation(line: 349, column: 10, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8176, file: !1121, line: 349, column: 6)
!8189 = !DILocation(line: 349, column: 6, scope: !8176)
!8190 = !DILocation(line: 353, column: 44, scope: !8176)
!8191 = !DILocation(line: 353, column: 9, scope: !8176)
!8192 = !DILocation(line: 353, column: 2, scope: !8176)
!8193 = !DILocation(line: 354, column: 1, scope: !8176)
!8194 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !919, file: !919, line: 444, type: !8091, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8195)
!8195 = !{!8196, !8197}
!8196 = !DILocalVariable(name: "base", arg: 1, scope: !8194, file: !919, line: 444, type: !1083)
!8197 = !DILocalVariable(name: "watermark", arg: 2, scope: !8194, file: !919, line: 444, type: !465)
!8198 = !DILocation(line: 0, scope: !8194)
!8199 = !DILocation(line: 447, column: 28, scope: !8194)
!8200 = !DILocation(line: 447, column: 48, scope: !8194)
!8201 = !DILocation(line: 447, column: 72, scope: !8194)
!8202 = !DILocation(line: 447, column: 25, scope: !8194)
!8203 = !DILocation(line: 448, column: 1, scope: !8194)
!8204 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !919, file: !919, line: 458, type: !8091, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8205)
!8205 = !{!8206, !8207}
!8206 = !DILocalVariable(name: "base", arg: 1, scope: !8204, file: !919, line: 458, type: !1083)
!8207 = !DILocalVariable(name: "watermark", arg: 2, scope: !8204, file: !919, line: 458, type: !465)
!8208 = !DILocation(line: 0, scope: !8204)
!8209 = !DILocation(line: 461, column: 28, scope: !8204)
!8210 = !DILocation(line: 461, column: 48, scope: !8204)
!8211 = !DILocation(line: 461, column: 72, scope: !8204)
!8212 = !DILocation(line: 461, column: 25, scope: !8204)
!8213 = !DILocation(line: 462, column: 1, scope: !8204)
!8214 = distinct !DISubprogram(name: "UART_Enable", scope: !919, file: !919, line: 242, type: !8215, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8217)
!8215 = !DISubroutineType(types: !8216)
!8216 = !{null, !1083}
!8217 = !{!8218}
!8218 = !DILocalVariable(name: "base", arg: 1, scope: !8214, file: !919, line: 242, type: !1083)
!8219 = !DILocation(line: 0, scope: !8214)
!8220 = !DILocation(line: 244, column: 5, scope: !8214)
!8221 = !DILocation(line: 244, column: 25, scope: !8214)
!8222 = !DILocation(line: 245, column: 1, scope: !8214)
!8223 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1121, file: !1121, line: 316, type: !8224, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8226)
!8224 = !DISubroutineType(types: !8225)
!8225 = !{!103, !1118, !1124}
!8226 = !{!8227, !8228, !8229}
!8227 = !DILocalVariable(name: "config", arg: 1, scope: !8223, file: !1121, line: 317, type: !1118)
!8228 = !DILocalVariable(name: "state", arg: 2, scope: !8223, file: !1121, line: 318, type: !1124)
!8229 = !DILocalVariable(name: "reg", scope: !8223, file: !1121, line: 320, type: !22)
!8230 = !DILocation(line: 0, scope: !8223)
!8231 = !DILocation(line: 329, column: 39, scope: !8223)
!8232 = !DILocation(line: 329, column: 52, scope: !8223)
!8233 = !DILocation(line: 329, column: 9, scope: !8223)
!8234 = !DILocation(line: 329, column: 2, scope: !8223)
!8235 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1424, file: !1424, line: 270, type: !1430, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8236)
!8236 = !{!8237}
!8237 = !DILocalVariable(name: "dev", arg: 1, scope: !8235, file: !1424, line: 270, type: !1432)
!8238 = !DILocation(line: 0, scope: !8235)
!8239 = !DILocation(line: 274, column: 2, scope: !8235)
!8240 = !DILocation(line: 275, column: 12, scope: !8235)
!8241 = !DILocation(line: 276, column: 15, scope: !8235)
!8242 = !DILocation(line: 277, column: 16, scope: !8235)
!8243 = !DILocation(line: 278, column: 15, scope: !8235)
!8244 = !DILocation(line: 279, column: 16, scope: !8235)
!8245 = !DILocation(line: 282, column: 2, scope: !8235)
!8246 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1347, file: !1347, line: 1814, type: !6114, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8247)
!8247 = !{!8248, !8249}
!8248 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8246, file: !1347, line: 1814, type: !2105)
!8249 = !DILocalVariable(name: "priority", arg: 2, scope: !8246, file: !1347, line: 1814, type: !137)
!8250 = !DILocation(line: 0, scope: !8246)
!8251 = !DILocation(line: 1822, column: 46, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8253, file: !1347, line: 1821, column: 3)
!8253 = distinct !DILexicalBlock(scope: !8246, file: !1347, line: 1816, column: 7)
!8254 = !DILocation(line: 1824, column: 1, scope: !8246)
!8255 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1424, file: !1424, line: 118, type: !6015, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8256)
!8256 = !{!8257, !8258}
!8257 = !DILocalVariable(name: "arg", arg: 1, scope: !8255, file: !1424, line: 118, type: !102)
!8258 = !DILocalVariable(name: "dticks", scope: !8255, file: !1424, line: 121, type: !137)
!8259 = !DILocation(line: 0, scope: !8255)
!8260 = !DILocation(line: 124, column: 2, scope: !8255)
!8261 = !DILocation(line: 129, column: 17, scope: !8255)
!8262 = !DILocation(line: 129, column: 14, scope: !8255)
!8263 = !DILocation(line: 130, column: 15, scope: !8255)
!8264 = !DILocation(line: 145, column: 27, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !1424, line: 132, column: 16)
!8266 = distinct !DILexicalBlock(scope: !8255, file: !1424, line: 132, column: 6)
!8267 = !DILocation(line: 145, column: 25, scope: !8265)
!8268 = !DILocation(line: 145, column: 45, scope: !8265)
!8269 = !DILocation(line: 146, column: 30, scope: !8265)
!8270 = !DILocation(line: 146, column: 20, scope: !8265)
!8271 = !DILocation(line: 147, column: 3, scope: !8265)
!8272 = !DILocation(line: 151, column: 2, scope: !8255)
!8273 = !DILocation(line: 152, column: 1, scope: !8255)
!8274 = distinct !DISubprogram(name: "elapsed", scope: !1424, file: !1424, line: 85, type: !135, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8275)
!8275 = !{!8276, !8277, !8278}
!8276 = !DILocalVariable(name: "val1", scope: !8274, file: !1424, line: 87, type: !137)
!8277 = !DILocalVariable(name: "ctrl", scope: !8274, file: !1424, line: 88, type: !137)
!8278 = !DILocalVariable(name: "val2", scope: !8274, file: !1424, line: 89, type: !137)
!8279 = !DILocation(line: 87, column: 27, scope: !8274)
!8280 = !DILocation(line: 0, scope: !8274)
!8281 = !DILocation(line: 88, column: 27, scope: !8274)
!8282 = !DILocation(line: 89, column: 27, scope: !8274)
!8283 = !DILocation(line: 105, column: 12, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8274, file: !1424, line: 105, column: 6)
!8285 = !DILocation(line: 106, column: 6, scope: !8284)
!8286 = !DILocation(line: 107, column: 16, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8284, file: !1424, line: 106, column: 24)
!8288 = !DILocation(line: 111, column: 18, scope: !8287)
!8289 = !DILocation(line: 112, column: 2, scope: !8287)
!8290 = !DILocation(line: 114, column: 20, scope: !8274)
!8291 = !DILocation(line: 114, column: 30, scope: !8274)
!8292 = !DILocation(line: 114, column: 28, scope: !8274)
!8293 = !DILocation(line: 114, column: 2, scope: !8274)
!8294 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1424, file: !1424, line: 154, type: !8295, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8297)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{null, !893, !636}
!8297 = !{!8298, !8299, !8300, !8301, !8302, !8303, !8304, !8309, !8310}
!8298 = !DILocalVariable(name: "ticks", arg: 1, scope: !8294, file: !1424, line: 154, type: !893)
!8299 = !DILocalVariable(name: "idle", arg: 2, scope: !8294, file: !1424, line: 154, type: !636)
!8300 = !DILocalVariable(name: "delay", scope: !8294, file: !1424, line: 169, type: !137)
!8301 = !DILocalVariable(name: "val1", scope: !8294, file: !1424, line: 170, type: !137)
!8302 = !DILocalVariable(name: "val2", scope: !8294, file: !1424, line: 170, type: !137)
!8303 = !DILocalVariable(name: "last_load_", scope: !8294, file: !1424, line: 171, type: !137)
!8304 = !DILocalVariable(name: "key", scope: !8294, file: !1424, line: 176, type: !8305)
!8305 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !1451, line: 106, baseType: !8306)
!8306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !1451, line: 32, size: 32, elements: !8307)
!8307 = !{!8308}
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8306, file: !1451, line: 33, baseType: !103, size: 32)
!8309 = !DILocalVariable(name: "pending", scope: !8294, file: !1424, line: 178, type: !137)
!8310 = !DILocalVariable(name: "unannounced", scope: !8294, file: !1424, line: 185, type: !137)
!8311 = !DILocation(line: 0, scope: !8294)
!8312 = !DILocation(line: 162, column: 49, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8294, file: !1424, line: 162, column: 6)
!8314 = !DILocation(line: 163, column: 17, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8313, file: !1424, line: 162, column: 78)
!8316 = !DILocation(line: 164, column: 13, scope: !8315)
!8317 = !DILocation(line: 165, column: 3, scope: !8315)
!8318 = !DILocation(line: 171, column: 24, scope: !8294)
!8319 = !DILocation(line: 173, column: 10, scope: !8294)
!8320 = !DILocation(line: 174, column: 10, scope: !8294)
!8321 = !DILocalVariable(name: "l", arg: 1, scope: !8322, file: !1451, line: 136, type: !8325)
!8322 = distinct !DISubprogram(name: "k_spin_lock", scope: !1451, file: !1451, line: 136, type: !8323, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8326)
!8323 = !DISubroutineType(types: !8324)
!8324 = !{!8305, !8325}
!8325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!8326 = !{!8321, !8327}
!8327 = !DILocalVariable(name: "k", scope: !8322, file: !1451, line: 139, type: !8305)
!8328 = !DILocation(line: 0, scope: !8322, inlinedAt: !8329)
!8329 = distinct !DILocation(line: 176, column: 25, scope: !8294)
!8330 = !DILocation(line: 55, column: 2, scope: !8331, inlinedAt: !8335)
!8331 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !7636, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8332)
!8332 = !{!8333, !8334}
!8333 = !DILocalVariable(name: "key", scope: !8331, file: !6193, line: 44, type: !32)
!8334 = !DILocalVariable(name: "tmp", scope: !8331, file: !6193, line: 53, type: !32)
!8335 = distinct !DILocation(line: 145, column: 10, scope: !8322, inlinedAt: !8329)
!8336 = !{i64 2948068}
!8337 = !DILocation(line: 0, scope: !8331, inlinedAt: !8335)
!8338 = !DILocation(line: 178, column: 21, scope: !8294)
!8339 = !DILocation(line: 180, column: 18, scope: !8294)
!8340 = !DILocation(line: 182, column: 14, scope: !8294)
!8341 = !DILocation(line: 183, column: 15, scope: !8294)
!8342 = !DILocation(line: 185, column: 39, scope: !8294)
!8343 = !DILocation(line: 185, column: 37, scope: !8294)
!8344 = !DILocation(line: 187, column: 27, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8294, file: !1424, line: 187, column: 6)
!8346 = !DILocation(line: 187, column: 6, scope: !8294)
!8347 = !DILocation(line: 202, column: 27, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8345, file: !1424, line: 195, column: 9)
!8349 = !DILocation(line: 202, column: 48, scope: !8348)
!8350 = !DILocation(line: 203, column: 9, scope: !8348)
!8351 = !DILocation(line: 204, column: 11, scope: !8348)
!8352 = !DILocation(line: 205, column: 13, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8348, file: !1424, line: 205, column: 7)
!8354 = !DILocation(line: 205, column: 7, scope: !8348)
!8355 = !DILocation(line: 0, scope: !8345)
!8356 = !DILocation(line: 212, column: 18, scope: !8294)
!8357 = !DILocation(line: 214, column: 28, scope: !8294)
!8358 = !DILocation(line: 214, column: 16, scope: !8294)
!8359 = !DILocation(line: 215, column: 15, scope: !8294)
!8360 = !DILocation(line: 227, column: 11, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8294, file: !1424, line: 227, column: 6)
!8362 = !DILocation(line: 227, column: 6, scope: !8294)
!8363 = !DILocation(line: 228, column: 15, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8361, file: !1424, line: 227, column: 19)
!8365 = !DILocation(line: 228, column: 38, scope: !8364)
!8366 = !DILocation(line: 228, column: 24, scope: !8364)
!8367 = !DILocation(line: 229, column: 2, scope: !8364)
!8368 = !DILocation(line: 230, column: 24, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8361, file: !1424, line: 229, column: 9)
!8370 = !DILocation(line: 230, column: 15, scope: !8369)
!8371 = !DILocation(line: 0, scope: !8361)
!8372 = !DILocalVariable(name: "key", arg: 2, scope: !8373, file: !1451, line: 190, type: !8305)
!8373 = distinct !DISubprogram(name: "k_spin_unlock", scope: !1451, file: !1451, line: 189, type: !8374, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8376)
!8374 = !DISubroutineType(types: !8375)
!8375 = !{null, !8325, !8305}
!8376 = !{!8377, !8372}
!8377 = !DILocalVariable(name: "l", arg: 1, scope: !8373, file: !1451, line: 189, type: !8325)
!8378 = !DILocation(line: 0, scope: !8373, inlinedAt: !8379)
!8379 = distinct !DILocation(line: 232, column: 2, scope: !8294)
!8380 = !DILocalVariable(name: "key", arg: 1, scope: !8381, file: !6193, line: 84, type: !32)
!8381 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6031, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8382)
!8382 = !{!8380}
!8383 = !DILocation(line: 0, scope: !8381, inlinedAt: !8384)
!8384 = distinct !DILocation(line: 215, column: 2, scope: !8373, inlinedAt: !8379)
!8385 = !DILocation(line: 95, column: 2, scope: !8381, inlinedAt: !8384)
!8386 = !{i64 2948885}
!8387 = !DILocation(line: 234, column: 1, scope: !8294)
!8388 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1424, file: !1424, line: 236, type: !135, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8389)
!8389 = !{!8390, !8391}
!8390 = !DILocalVariable(name: "key", scope: !8388, file: !1424, line: 242, type: !8305)
!8391 = !DILocalVariable(name: "cyc", scope: !8388, file: !1424, line: 243, type: !137)
!8392 = !DILocation(line: 0, scope: !8322, inlinedAt: !8393)
!8393 = distinct !DILocation(line: 242, column: 25, scope: !8388)
!8394 = !DILocation(line: 55, column: 2, scope: !8331, inlinedAt: !8395)
!8395 = distinct !DILocation(line: 145, column: 10, scope: !8322, inlinedAt: !8393)
!8396 = !DILocation(line: 0, scope: !8331, inlinedAt: !8395)
!8397 = !DILocation(line: 0, scope: !8388)
!8398 = !DILocation(line: 243, column: 17, scope: !8388)
!8399 = !DILocation(line: 243, column: 29, scope: !8388)
!8400 = !DILocation(line: 243, column: 27, scope: !8388)
!8401 = !DILocation(line: 243, column: 43, scope: !8388)
!8402 = !DILocation(line: 243, column: 41, scope: !8388)
!8403 = !DILocation(line: 0, scope: !8373, inlinedAt: !8404)
!8404 = distinct !DILocation(line: 245, column: 2, scope: !8388)
!8405 = !DILocation(line: 0, scope: !8381, inlinedAt: !8406)
!8406 = distinct !DILocation(line: 215, column: 2, scope: !8373, inlinedAt: !8404)
!8407 = !DILocation(line: 95, column: 2, scope: !8381, inlinedAt: !8406)
!8408 = !DILocation(line: 246, column: 13, scope: !8388)
!8409 = !DILocation(line: 246, column: 2, scope: !8388)
!8410 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1424, file: !1424, line: 249, type: !135, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !8411)
!8411 = !{!8412, !8413}
!8412 = !DILocalVariable(name: "key", scope: !8410, file: !1424, line: 251, type: !8305)
!8413 = !DILocalVariable(name: "ret", scope: !8410, file: !1424, line: 252, type: !137)
!8414 = !DILocation(line: 0, scope: !8322, inlinedAt: !8415)
!8415 = distinct !DILocation(line: 251, column: 25, scope: !8410)
!8416 = !DILocation(line: 55, column: 2, scope: !8331, inlinedAt: !8417)
!8417 = distinct !DILocation(line: 145, column: 10, scope: !8322, inlinedAt: !8415)
!8418 = !DILocation(line: 0, scope: !8331, inlinedAt: !8417)
!8419 = !DILocation(line: 0, scope: !8410)
!8420 = !DILocation(line: 252, column: 17, scope: !8410)
!8421 = !DILocation(line: 252, column: 29, scope: !8410)
!8422 = !DILocation(line: 252, column: 27, scope: !8410)
!8423 = !DILocation(line: 0, scope: !8373, inlinedAt: !8424)
!8424 = distinct !DILocation(line: 254, column: 2, scope: !8410)
!8425 = !DILocation(line: 0, scope: !8381, inlinedAt: !8426)
!8426 = distinct !DILocation(line: 215, column: 2, scope: !8373, inlinedAt: !8424)
!8427 = !DILocation(line: 95, column: 2, scope: !8381, inlinedAt: !8426)
!8428 = !DILocation(line: 255, column: 2, scope: !8410)
!8429 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1424, file: !1424, line: 258, type: !2671, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !162)
!8430 = !DILocation(line: 260, column: 6, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8429, file: !1424, line: 260, column: 6)
!8432 = !DILocation(line: 260, column: 16, scope: !8431)
!8433 = !DILocation(line: 260, column: 6, scope: !8429)
!8434 = !DILocation(line: 261, column: 17, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8431, file: !1424, line: 260, column: 34)
!8436 = !DILocation(line: 262, column: 2, scope: !8435)
!8437 = !DILocation(line: 263, column: 1, scope: !8429)
!8438 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1424, file: !1424, line: 265, type: !2671, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !162)
!8439 = !DILocation(line: 267, column: 16, scope: !8438)
!8440 = !DILocation(line: 268, column: 1, scope: !8438)
!8441 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !8442, file: !8442, line: 9, type: !8443, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !8473)
!8442 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8443 = !DISubroutineType(types: !8444)
!8444 = !{!103, !8445, !465, !8472}
!8445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8446, size: 32)
!8446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8447)
!8447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1121, line: 60, size: 64, elements: !8448)
!8448 = !{!8449, !8471}
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8447, file: !1121, line: 69, baseType: !8450, size: 32)
!8450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8451, size: 32)
!8451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8452)
!8452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1121, line: 50, size: 64, elements: !8453)
!8453 = !{!8454, !8469, !8470}
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !8452, file: !1121, line: 52, baseType: !8455, size: 32)
!8455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8456, size: 32)
!8456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8457)
!8457 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !875, line: 64, baseType: !8458)
!8458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !875, line: 59, size: 160, elements: !8459)
!8459 = !{!8460, !8468}
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8458, file: !875, line: 60, baseType: !8461, size: 128)
!8461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !875, line: 51, size: 128, elements: !8462)
!8462 = !{!8463, !8464, !8465, !8466, !8467}
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !8461, file: !875, line: 52, baseType: !137, size: 32)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !8461, file: !875, line: 53, baseType: !137, size: 32, offset: 32)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !8461, file: !875, line: 54, baseType: !137, size: 32, offset: 64)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !8461, file: !875, line: 55, baseType: !465, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !8461, file: !875, line: 56, baseType: !137, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8458, file: !875, line: 61, baseType: !137, size: 32, offset: 128)
!8469 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !8452, file: !1121, line: 54, baseType: !465, size: 8, offset: 32)
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8452, file: !1121, line: 56, baseType: !465, size: 8, offset: 40)
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !8447, file: !1121, line: 71, baseType: !465, size: 8, offset: 32)
!8472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8450, size: 32)
!8473 = !{!8474, !8475, !8476}
!8474 = !DILocalVariable(name: "config", arg: 1, scope: !8441, file: !8442, line: 9, type: !8445)
!8475 = !DILocalVariable(name: "id", arg: 2, scope: !8441, file: !8442, line: 9, type: !465)
!8476 = !DILocalVariable(name: "state", arg: 3, scope: !8441, file: !8442, line: 10, type: !8472)
!8477 = !DILocation(line: 0, scope: !8441)
!8478 = !DILocation(line: 12, column: 20, scope: !8441)
!8479 = !DILocation(line: 13, column: 27, scope: !8441)
!8480 = !DILocation(line: 13, column: 42, scope: !8441)
!8481 = !DILocation(line: 13, column: 19, scope: !8441)
!8482 = !DILocation(line: 13, column: 16, scope: !8441)
!8483 = !DILocation(line: 13, column: 2, scope: !8441)
!8484 = distinct !{!8484, !8483, !8485}
!8485 = !DILocation(line: 19, column: 2, scope: !8441)
!8486 = !DILocation(line: 14, column: 23, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !8442, line: 14, column: 7)
!8488 = distinct !DILexicalBlock(scope: !8441, file: !8442, line: 13, column: 54)
!8489 = !DILocation(line: 14, column: 10, scope: !8487)
!8490 = !DILocation(line: 18, column: 11, scope: !8488)
!8491 = !DILocation(line: 14, column: 7, scope: !8488)
!8492 = !DILocation(line: 22, column: 1, scope: !8441)
!8493 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1464, file: !1464, line: 51, type: !1470, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1460, retainedNodes: !8494)
!8494 = !{!8495}
!8495 = !DILocalVariable(name: "dev", arg: 1, scope: !8493, file: !1464, line: 51, type: !1472)
!8496 = !DILocation(line: 0, scope: !8493)
!8497 = !DILocation(line: 66, column: 2, scope: !8493)
!8498 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1464, file: !1464, line: 10, type: !8499, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1460, retainedNodes: !8515)
!8499 = !DISubroutineType(types: !8500)
!8500 = !{!103, !8501, !465, !22}
!8501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8502, size: 32)
!8502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8503)
!8503 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !875, line: 64, baseType: !8504)
!8504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !875, line: 59, size: 160, elements: !8505)
!8505 = !{!8506, !8514}
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8504, file: !875, line: 60, baseType: !8507, size: 128)
!8507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !875, line: 51, size: 128, elements: !8508)
!8508 = !{!8509, !8510, !8511, !8512, !8513}
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !8507, file: !875, line: 52, baseType: !137, size: 32)
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !8507, file: !875, line: 53, baseType: !137, size: 32, offset: 32)
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !8507, file: !875, line: 54, baseType: !137, size: 32, offset: 64)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !8507, file: !875, line: 55, baseType: !465, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !8507, file: !875, line: 56, baseType: !137, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!8514 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8504, file: !875, line: 61, baseType: !137, size: 32, offset: 128)
!8515 = !{!8516, !8517, !8518, !8519, !8521, !8524, !8525, !8526, !8527, !8528}
!8516 = !DILocalVariable(name: "pins", arg: 1, scope: !8498, file: !1464, line: 10, type: !8501)
!8517 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !8498, file: !1464, line: 10, type: !465)
!8518 = !DILocalVariable(name: "reg", arg: 3, scope: !8498, file: !1464, line: 11, type: !22)
!8519 = !DILocalVariable(name: "i", scope: !8520, file: !1464, line: 14, type: !465)
!8520 = distinct !DILexicalBlock(scope: !8498, file: !1464, line: 14, column: 2)
!8521 = !DILocalVariable(name: "mux_register", scope: !8522, file: !1464, line: 15, type: !137)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !1464, line: 14, column: 41)
!8523 = distinct !DILexicalBlock(scope: !8520, file: !1464, line: 14, column: 2)
!8524 = !DILocalVariable(name: "mux_mode", scope: !8522, file: !1464, line: 16, type: !137)
!8525 = !DILocalVariable(name: "input_register", scope: !8522, file: !1464, line: 17, type: !137)
!8526 = !DILocalVariable(name: "input_daisy", scope: !8522, file: !1464, line: 18, type: !137)
!8527 = !DILocalVariable(name: "config_register", scope: !8522, file: !1464, line: 19, type: !137)
!8528 = !DILocalVariable(name: "pin_ctrl_flags", scope: !8522, file: !1464, line: 20, type: !137)
!8529 = !DILocation(line: 0, scope: !8498)
!8530 = !DILocation(line: 0, scope: !8520)
!8531 = !DILocation(line: 14, column: 25, scope: !8523)
!8532 = !DILocation(line: 14, column: 2, scope: !8520)
!8533 = !DILocation(line: 48, column: 2, scope: !8498)
!8534 = !DILocation(line: 15, column: 42, scope: !8522)
!8535 = !DILocation(line: 0, scope: !8522)
!8536 = !DILocation(line: 16, column: 38, scope: !8522)
!8537 = !DILocation(line: 17, column: 44, scope: !8522)
!8538 = !DILocation(line: 19, column: 45, scope: !8522)
!8539 = !DILocation(line: 20, column: 37, scope: !8522)
!8540 = !DILocation(line: 35, column: 4, scope: !8522)
!8541 = !DILocation(line: 36, column: 4, scope: !8522)
!8542 = !DILocation(line: 35, column: 45, scope: !8522)
!8543 = !DILocation(line: 34, column: 5, scope: !8522)
!8544 = !DILocation(line: 34, column: 53, scope: !8522)
!8545 = !DILocation(line: 37, column: 7, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8522, file: !1464, line: 37, column: 7)
!8547 = !DILocation(line: 37, column: 7, scope: !8522)
!8548 = !DILocation(line: 18, column: 41, scope: !8522)
!8549 = !DILocation(line: 39, column: 5, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8546, file: !1464, line: 37, column: 23)
!8551 = !DILocation(line: 38, column: 6, scope: !8550)
!8552 = !DILocation(line: 38, column: 56, scope: !8550)
!8553 = !DILocation(line: 40, column: 3, scope: !8550)
!8554 = !DILocation(line: 41, column: 7, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8522, file: !1464, line: 41, column: 7)
!8556 = !DILocation(line: 41, column: 7, scope: !8522)
!8557 = !DILocation(line: 43, column: 20, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8555, file: !1464, line: 41, column: 24)
!8559 = !DILocation(line: 42, column: 6, scope: !8558)
!8560 = !DILocation(line: 42, column: 57, scope: !8558)
!8561 = !DILocation(line: 44, column: 3, scope: !8558)
!8562 = !DILocation(line: 14, column: 37, scope: !8523)
!8563 = distinct !{!8563, !8532, !8564}
!8564 = !DILocation(line: 47, column: 2, scope: !8520)
!8565 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !8566, file: !8566, line: 43, type: !8567, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !8621)
!8566 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8567 = !DISubroutineType(types: !8568)
!8568 = !{null, !8569, !137, !137, !137}
!8569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8570, size: 32)
!8570 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !455, line: 4575, baseType: !8571)
!8571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 4532, size: 390144, elements: !8572)
!8572 = !{!8573, !8574, !8575, !8576, !8577, !8578, !8586, !8587, !8595, !8596}
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !8571, file: !455, line: 4533, baseType: !459, size: 32)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !8571, file: !455, line: 4534, baseType: !459, size: 32, offset: 32)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !8571, file: !455, line: 4535, baseType: !459, size: 32, offset: 64)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !8571, file: !455, line: 4536, baseType: !459, size: 32, offset: 96)
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !8571, file: !455, line: 4537, baseType: !464, size: 16256, offset: 128)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !8571, file: !455, line: 4543, baseType: !8579, size: 4224, offset: 16384)
!8579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8580, size: 4224, elements: !477)
!8580 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8571, file: !455, line: 4538, size: 128, elements: !8581)
!8581 = !{!8582, !8583, !8584, !8585}
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !8580, file: !455, line: 4539, baseType: !459, size: 32)
!8583 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !8580, file: !455, line: 4540, baseType: !459, size: 32, offset: 32)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !8580, file: !455, line: 4541, baseType: !459, size: 32, offset: 64)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !8580, file: !455, line: 4542, baseType: !459, size: 32, offset: 96)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !8571, file: !455, line: 4544, baseType: !480, size: 110464, offset: 20608)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !8571, file: !455, line: 4550, baseType: !8588, size: 24448, offset: 131072)
!8588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8589, size: 24448, elements: !491)
!8589 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8571, file: !455, line: 4545, size: 128, elements: !8590)
!8590 = !{!8591, !8592, !8593, !8594}
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !8589, file: !455, line: 4546, baseType: !459, size: 32)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !8589, file: !455, line: 4547, baseType: !459, size: 32, offset: 32)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !8589, file: !455, line: 4548, baseType: !459, size: 32, offset: 64)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !8589, file: !455, line: 4549, baseType: !459, size: 32, offset: 96)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !8571, file: !455, line: 4551, baseType: !494, size: 106624, offset: 155520)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !8571, file: !455, line: 4574, baseType: !8597, size: 128000, offset: 262144)
!8597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8598, size: 128000, elements: !525)
!8598 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8571, file: !455, line: 4552, size: 1024, elements: !8599)
!8599 = !{!8600, !8601, !8602, !8603, !8604, !8605, !8606, !8607, !8608, !8609, !8610, !8611, !8612, !8613, !8614, !8615, !8616, !8617, !8618, !8619, !8620}
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !8598, file: !455, line: 4553, baseType: !459, size: 32)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !8598, file: !455, line: 4554, baseType: !459, size: 32, offset: 32)
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !8598, file: !455, line: 4555, baseType: !459, size: 32, offset: 64)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !8598, file: !455, line: 4556, baseType: !459, size: 32, offset: 96)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !8598, file: !455, line: 4557, baseType: !459, size: 32, offset: 128)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !8598, file: !455, line: 4558, baseType: !459, size: 32, offset: 160)
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !8598, file: !455, line: 4559, baseType: !459, size: 32, offset: 192)
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !8598, file: !455, line: 4560, baseType: !459, size: 32, offset: 224)
!8608 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !8598, file: !455, line: 4561, baseType: !459, size: 32, offset: 256)
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !8598, file: !455, line: 4562, baseType: !459, size: 32, offset: 288)
!8610 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !8598, file: !455, line: 4563, baseType: !459, size: 32, offset: 320)
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !8598, file: !455, line: 4564, baseType: !459, size: 32, offset: 352)
!8612 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !8598, file: !455, line: 4565, baseType: !459, size: 32, offset: 384)
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !8598, file: !455, line: 4566, baseType: !459, size: 32, offset: 416)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !8598, file: !455, line: 4567, baseType: !459, size: 32, offset: 448)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !8598, file: !455, line: 4568, baseType: !459, size: 32, offset: 480)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !8598, file: !455, line: 4569, baseType: !518, size: 384, offset: 512)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !8598, file: !455, line: 4570, baseType: !459, size: 32, offset: 896)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !8598, file: !455, line: 4571, baseType: !459, size: 32, offset: 928)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !8598, file: !455, line: 4572, baseType: !459, size: 32, offset: 960)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !8598, file: !455, line: 4573, baseType: !459, size: 32, offset: 992)
!8621 = !{!8622, !8623, !8624, !8625}
!8622 = !DILocalVariable(name: "base", arg: 1, scope: !8565, file: !8566, line: 43, type: !8569)
!8623 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8565, file: !8566, line: 43, type: !137)
!8624 = !DILocalVariable(name: "pre", arg: 3, scope: !8565, file: !8566, line: 43, type: !137)
!8625 = !DILocalVariable(name: "post", arg: 4, scope: !8565, file: !8566, line: 43, type: !137)
!8626 = !DILocation(line: 0, scope: !8565)
!8627 = !DILocation(line: 48, column: 25, scope: !8565)
!8628 = !DILocation(line: 48, column: 42, scope: !8565)
!8629 = !DILocation(line: 50, column: 24, scope: !8565)
!8630 = !DILocation(line: 50, column: 56, scope: !8565)
!8631 = !DILocation(line: 49, column: 94, scope: !8565)
!8632 = !DILocation(line: 50, column: 54, scope: !8565)
!8633 = !DILocation(line: 48, column: 22, scope: !8565)
!8634 = !DILocation(line: 51, column: 1, scope: !8565)
!8635 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !8566, file: !8566, line: 59, type: !8636, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !8638)
!8636 = !DISubroutineType(types: !8637)
!8637 = !{null, !8569, !137, !149, !149}
!8638 = !{!8639, !8640, !8641, !8642}
!8639 = !DILocalVariable(name: "base", arg: 1, scope: !8635, file: !8566, line: 59, type: !8569)
!8640 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8635, file: !8566, line: 59, type: !137)
!8641 = !DILocalVariable(name: "pre", arg: 3, scope: !8635, file: !8566, line: 59, type: !149)
!8642 = !DILocalVariable(name: "post", arg: 4, scope: !8635, file: !8566, line: 59, type: !149)
!8643 = !DILocation(line: 0, scope: !8635)
!8644 = !DILocation(line: 63, column: 13, scope: !8635)
!8645 = !DILocation(line: 63, column: 63, scope: !8635)
!8646 = !DILocation(line: 63, column: 10, scope: !8635)
!8647 = !DILocation(line: 64, column: 14, scope: !8635)
!8648 = !DILocation(line: 64, column: 31, scope: !8635)
!8649 = !DILocation(line: 64, column: 11, scope: !8635)
!8650 = !DILocation(line: 65, column: 1, scope: !8635)
!8651 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !8566, file: !8566, line: 73, type: !8652, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !8654)
!8652 = !DISubroutineType(types: !8653)
!8653 = !{null, !8569, !137, !137, !137, !137}
!8654 = !{!8655, !8656, !8657, !8658, !8659}
!8655 = !DILocalVariable(name: "base", arg: 1, scope: !8651, file: !8566, line: 73, type: !8569)
!8656 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8651, file: !8566, line: 73, type: !137)
!8657 = !DILocalVariable(name: "mux", arg: 3, scope: !8651, file: !8566, line: 73, type: !137)
!8658 = !DILocalVariable(name: "pre", arg: 4, scope: !8651, file: !8566, line: 73, type: !137)
!8659 = !DILocalVariable(name: "post", arg: 5, scope: !8651, file: !8566, line: 73, type: !137)
!8660 = !DILocation(line: 0, scope: !8651)
!8661 = !DILocation(line: 78, column: 25, scope: !8651)
!8662 = !DILocation(line: 78, column: 42, scope: !8651)
!8663 = !DILocation(line: 80, column: 24, scope: !8651)
!8664 = !DILocation(line: 80, column: 51, scope: !8651)
!8665 = !DILocation(line: 80, column: 83, scope: !8651)
!8666 = !DILocation(line: 79, column: 121, scope: !8651)
!8667 = !DILocation(line: 80, column: 49, scope: !8651)
!8668 = !DILocation(line: 80, column: 81, scope: !8651)
!8669 = !DILocation(line: 78, column: 22, scope: !8651)
!8670 = !DILocation(line: 81, column: 1, scope: !8651)
!8671 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !8672, file: !8672, line: 43, type: !8673, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2403, retainedNodes: !8675)
!8672 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8673 = !DISubroutineType(types: !8674)
!8674 = !{!137, !2416}
!8675 = !{!8676}
!8676 = !DILocalVariable(name: "base", arg: 1, scope: !8671, file: !8672, line: 43, type: !2416)
!8677 = !DILocation(line: 0, scope: !8671)
!8678 = !DILocation(line: 45, column: 9, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8671, file: !8672, line: 45, column: 9)
!8680 = !DILocation(line: 45, column: 9, scope: !8671)
!8681 = !DILocation(line: 48, column: 26, scope: !8671)
!8682 = !DILocation(line: 48, column: 45, scope: !8671)
!8683 = !DILocation(line: 48, column: 23, scope: !8671)
!8684 = !DILocation(line: 48, column: 5, scope: !8671)
!8685 = !DILocation(line: 49, column: 1, scope: !8671)
!8686 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2407, file: !2407, line: 220, type: !8687, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2403, retainedNodes: !8689)
!8687 = !DISubroutineType(types: !8688)
!8688 = !{!636, !2416, !137}
!8689 = !{!8690, !8691}
!8690 = !DILocalVariable(name: "base", arg: 1, scope: !8686, file: !2407, line: 220, type: !2416)
!8691 = !DILocalVariable(name: "pllControl", arg: 2, scope: !8686, file: !2407, line: 220, type: !137)
!8692 = !DILocation(line: 0, scope: !8686)
!8693 = !DILocation(line: 222, column: 19, scope: !8686)
!8694 = !DILocation(line: 222, column: 58, scope: !8686)
!8695 = !DILocation(line: 222, column: 12, scope: !8686)
!8696 = !DILocation(line: 222, column: 5, scope: !8686)
!8697 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !8672, file: !8672, line: 57, type: !8673, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2403, retainedNodes: !8698)
!8698 = !{!8699}
!8699 = !DILocalVariable(name: "base", arg: 1, scope: !8697, file: !8672, line: 57, type: !2416)
!8700 = !DILocation(line: 0, scope: !8697)
!8701 = !DILocation(line: 59, column: 9, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8697, file: !8672, line: 59, column: 9)
!8703 = !DILocation(line: 59, column: 9, scope: !8697)
!8704 = !DILocation(line: 62, column: 9, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8697, file: !8672, line: 62, column: 9)
!8706 = !DILocation(line: 62, column: 28, scope: !8705)
!8707 = !DILocation(line: 0, scope: !8705)
!8708 = !DILocation(line: 66, column: 1, scope: !8697)
!8709 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !8672, file: !8672, line: 74, type: !8673, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2403, retainedNodes: !8710)
!8710 = !{!8711, !8712, !8713, !8714}
!8711 = !DILocalVariable(name: "base", arg: 1, scope: !8709, file: !8672, line: 74, type: !2416)
!8712 = !DILocalVariable(name: "divSelect", scope: !8709, file: !8672, line: 76, type: !465)
!8713 = !DILocalVariable(name: "divTestSelect", scope: !8709, file: !8672, line: 76, type: !465)
!8714 = !DILocalVariable(name: "factor", scope: !8709, file: !8672, line: 77, type: !2479)
!8715 = !DILocation(line: 0, scope: !8709)
!8716 = !DILocation(line: 79, column: 9, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8709, file: !8672, line: 79, column: 9)
!8718 = !DILocation(line: 79, column: 9, scope: !8709)
!8719 = !DILocation(line: 82, column: 17, scope: !8709)
!8720 = !DILocation(line: 83, column: 22, scope: !8709)
!8721 = !DILocation(line: 83, column: 100, scope: !8709)
!8722 = !DILocation(line: 83, column: 21, scope: !8709)
!8723 = !DILocation(line: 86, column: 5, scope: !8709)
!8724 = !DILocation(line: 100, column: 9, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8709, file: !8672, line: 100, column: 9)
!8726 = !DILocation(line: 100, column: 41, scope: !8725)
!8727 = !DILocation(line: 100, column: 9, scope: !8709)
!8728 = !DILocation(line: 102, column: 27, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8725, file: !8672, line: 101, column: 5)
!8730 = !DILocation(line: 102, column: 59, scope: !8729)
!8731 = !DILocation(line: 102, column: 19, scope: !8729)
!8732 = !DILocation(line: 103, column: 27, scope: !8729)
!8733 = !DILocation(line: 103, column: 62, scope: !8729)
!8734 = !DILocation(line: 103, column: 19, scope: !8729)
!8735 = !DILocation(line: 102, column: 95, scope: !8729)
!8736 = !DILocation(line: 104, column: 27, scope: !8729)
!8737 = !DILocation(line: 104, column: 60, scope: !8729)
!8738 = !DILocation(line: 104, column: 19, scope: !8729)
!8739 = !DILocation(line: 103, column: 98, scope: !8729)
!8740 = !DILocation(line: 105, column: 39, scope: !8729)
!8741 = !DILocation(line: 105, column: 27, scope: !8729)
!8742 = !DILocation(line: 105, column: 60, scope: !8729)
!8743 = !DILocation(line: 105, column: 70, scope: !8729)
!8744 = !DILocation(line: 105, column: 57, scope: !8729)
!8745 = !DILocation(line: 105, column: 16, scope: !8729)
!8746 = !DILocation(line: 105, column: 9, scope: !8729)
!8747 = !DILocation(line: 109, column: 28, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8725, file: !8672, line: 108, column: 5)
!8749 = !DILocation(line: 109, column: 48, scope: !8748)
!8750 = !DILocation(line: 109, column: 46, scope: !8748)
!8751 = !DILocation(line: 109, column: 9, scope: !8748)
!8752 = !DILocation(line: 111, column: 1, scope: !8709)
!8753 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !8672, file: !8672, line: 119, type: !8673, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2403, retainedNodes: !8754)
!8754 = !{!8755}
!8755 = !DILocalVariable(name: "base", arg: 1, scope: !8753, file: !8672, line: 119, type: !2416)
!8756 = !DILocation(line: 0, scope: !8753)
!8757 = !DILocation(line: 121, column: 9, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8753, file: !8672, line: 121, column: 9)
!8759 = !DILocation(line: 125, column: 1, scope: !8753)
!8760 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !8672, file: !8672, line: 133, type: !8673, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2403, retainedNodes: !8761)
!8761 = !{!8762, !8763, !8764, !8765, !8766}
!8762 = !DILocalVariable(name: "base", arg: 1, scope: !8760, file: !8672, line: 133, type: !2416)
!8763 = !DILocalVariable(name: "divSelect", scope: !8760, file: !8672, line: 135, type: !465)
!8764 = !DILocalVariable(name: "divPostSelect", scope: !8760, file: !8672, line: 135, type: !465)
!8765 = !DILocalVariable(name: "divTestSelect", scope: !8760, file: !8672, line: 135, type: !465)
!8766 = !DILocalVariable(name: "factor", scope: !8760, file: !8672, line: 136, type: !2479)
!8767 = !DILocation(line: 0, scope: !8760)
!8768 = !DILocation(line: 138, column: 9, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8760, file: !8672, line: 138, column: 9)
!8770 = !DILocation(line: 138, column: 9, scope: !8760)
!8771 = !DILocation(line: 141, column: 17, scope: !8760)
!8772 = !DILocation(line: 142, column: 22, scope: !8760)
!8773 = !DILocation(line: 142, column: 101, scope: !8760)
!8774 = !DILocation(line: 142, column: 21, scope: !8760)
!8775 = !DILocation(line: 144, column: 22, scope: !8760)
!8776 = !DILocation(line: 144, column: 104, scope: !8760)
!8777 = !DILocation(line: 144, column: 21, scope: !8760)
!8778 = !DILocation(line: 147, column: 5, scope: !8760)
!8779 = !DILocation(line: 161, column: 5, scope: !8760)
!8780 = !DILocation(line: 175, column: 9, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8760, file: !8672, line: 175, column: 9)
!8782 = !DILocation(line: 175, column: 43, scope: !8781)
!8783 = !DILocation(line: 175, column: 9, scope: !8760)
!8784 = !DILocation(line: 177, column: 27, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8781, file: !8672, line: 176, column: 5)
!8786 = !DILocation(line: 177, column: 61, scope: !8785)
!8787 = !DILocation(line: 177, column: 19, scope: !8785)
!8788 = !DILocation(line: 178, column: 27, scope: !8785)
!8789 = !DILocation(line: 178, column: 64, scope: !8785)
!8790 = !DILocation(line: 178, column: 19, scope: !8785)
!8791 = !DILocation(line: 177, column: 99, scope: !8785)
!8792 = !DILocation(line: 179, column: 27, scope: !8785)
!8793 = !DILocation(line: 179, column: 62, scope: !8785)
!8794 = !DILocation(line: 179, column: 19, scope: !8785)
!8795 = !DILocation(line: 178, column: 102, scope: !8785)
!8796 = !DILocation(line: 180, column: 40, scope: !8785)
!8797 = !DILocation(line: 180, column: 58, scope: !8785)
!8798 = !DILocation(line: 180, column: 27, scope: !8785)
!8799 = !DILocation(line: 180, column: 79, scope: !8785)
!8800 = !DILocation(line: 180, column: 89, scope: !8785)
!8801 = !DILocation(line: 180, column: 76, scope: !8785)
!8802 = !DILocation(line: 180, column: 16, scope: !8785)
!8803 = !DILocation(line: 180, column: 9, scope: !8785)
!8804 = !DILocation(line: 184, column: 29, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8781, file: !8672, line: 183, column: 5)
!8806 = !DILocation(line: 184, column: 47, scope: !8805)
!8807 = !DILocation(line: 184, column: 67, scope: !8805)
!8808 = !DILocation(line: 184, column: 65, scope: !8805)
!8809 = !DILocation(line: 184, column: 9, scope: !8805)
!8810 = !DILocation(line: 186, column: 1, scope: !8760)
!8811 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !8672, file: !8672, line: 194, type: !8673, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2403, retainedNodes: !8812)
!8812 = !{!8813, !8814, !8815, !8816, !8817}
!8813 = !DILocalVariable(name: "base", arg: 1, scope: !8811, file: !8672, line: 194, type: !2416)
!8814 = !DILocalVariable(name: "divSelect", scope: !8811, file: !8672, line: 196, type: !465)
!8815 = !DILocalVariable(name: "divPostSelect", scope: !8811, file: !8672, line: 196, type: !465)
!8816 = !DILocalVariable(name: "divTestSelect", scope: !8811, file: !8672, line: 196, type: !465)
!8817 = !DILocalVariable(name: "factor", scope: !8811, file: !8672, line: 197, type: !2479)
!8818 = !DILocation(line: 0, scope: !8811)
!8819 = !DILocation(line: 199, column: 9, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8811, file: !8672, line: 199, column: 9)
!8821 = !DILocation(line: 199, column: 9, scope: !8811)
!8822 = !DILocation(line: 202, column: 17, scope: !8811)
!8823 = !DILocation(line: 203, column: 22, scope: !8811)
!8824 = !DILocation(line: 203, column: 101, scope: !8811)
!8825 = !DILocation(line: 203, column: 21, scope: !8811)
!8826 = !DILocation(line: 205, column: 22, scope: !8811)
!8827 = !DILocation(line: 205, column: 104, scope: !8811)
!8828 = !DILocation(line: 205, column: 21, scope: !8811)
!8829 = !DILocation(line: 208, column: 5, scope: !8811)
!8830 = !DILocation(line: 222, column: 5, scope: !8811)
!8831 = !DILocation(line: 236, column: 9, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8811, file: !8672, line: 236, column: 9)
!8833 = !DILocation(line: 236, column: 43, scope: !8832)
!8834 = !DILocation(line: 236, column: 9, scope: !8811)
!8835 = !DILocation(line: 238, column: 27, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8832, file: !8672, line: 237, column: 5)
!8837 = !DILocation(line: 238, column: 61, scope: !8836)
!8838 = !DILocation(line: 238, column: 19, scope: !8836)
!8839 = !DILocation(line: 239, column: 27, scope: !8836)
!8840 = !DILocation(line: 239, column: 64, scope: !8836)
!8841 = !DILocation(line: 239, column: 19, scope: !8836)
!8842 = !DILocation(line: 238, column: 99, scope: !8836)
!8843 = !DILocation(line: 240, column: 27, scope: !8836)
!8844 = !DILocation(line: 240, column: 62, scope: !8836)
!8845 = !DILocation(line: 240, column: 19, scope: !8836)
!8846 = !DILocation(line: 239, column: 102, scope: !8836)
!8847 = !DILocation(line: 241, column: 40, scope: !8836)
!8848 = !DILocation(line: 241, column: 58, scope: !8836)
!8849 = !DILocation(line: 241, column: 27, scope: !8836)
!8850 = !DILocation(line: 241, column: 79, scope: !8836)
!8851 = !DILocation(line: 241, column: 89, scope: !8836)
!8852 = !DILocation(line: 241, column: 76, scope: !8836)
!8853 = !DILocation(line: 241, column: 16, scope: !8836)
!8854 = !DILocation(line: 241, column: 9, scope: !8836)
!8855 = !DILocation(line: 245, column: 29, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8832, file: !8672, line: 244, column: 5)
!8857 = !DILocation(line: 245, column: 47, scope: !8856)
!8858 = !DILocation(line: 245, column: 67, scope: !8856)
!8859 = !DILocation(line: 245, column: 65, scope: !8856)
!8860 = !DILocation(line: 245, column: 9, scope: !8856)
!8861 = !DILocation(line: 247, column: 1, scope: !8811)
!8862 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !8672, file: !8672, line: 255, type: !8863, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2403, retainedNodes: !8865)
!8863 = !DISubroutineType(types: !8864)
!8864 = !{!137, !2416, !137}
!8865 = !{!8866, !8867, !8868, !8869}
!8866 = !DILocalVariable(name: "base", arg: 1, scope: !8862, file: !8672, line: 255, type: !2416)
!8867 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !8862, file: !8672, line: 255, type: !137)
!8868 = !DILocalVariable(name: "main", scope: !8862, file: !8672, line: 257, type: !137)
!8869 = !DILocalVariable(name: "frac", scope: !8862, file: !8672, line: 257, type: !137)
!8870 = !DILocation(line: 0, scope: !8862)
!8871 = !DILocation(line: 262, column: 12, scope: !8862)
!8872 = !DILocation(line: 263, column: 12, scope: !8862)
!8873 = !DILocation(line: 265, column: 17, scope: !8862)
!8874 = !DILocation(line: 265, column: 24, scope: !8862)
!8875 = !DILocation(line: 265, column: 5, scope: !8862)
!8876 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2407, file: !2407, line: 373, type: !8863, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2403, retainedNodes: !8877)
!8877 = !{!8878, !8879}
!8878 = !DILocalVariable(name: "base", arg: 1, scope: !8876, file: !2407, line: 373, type: !2416)
!8879 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !8876, file: !2407, line: 373, type: !137)
!8880 = !DILocation(line: 0, scope: !8876)
!8881 = !DILocation(line: 375, column: 13, scope: !8876)
!8882 = !DILocation(line: 375, column: 52, scope: !8876)
!8883 = !DILocation(line: 375, column: 49, scope: !8876)
!8884 = !DILocation(line: 375, column: 85, scope: !8876)
!8885 = !DILocation(line: 375, column: 5, scope: !8876)
!8886 = distinct !DISubprogram(name: "GPIO_Init", scope: !8887, file: !8887, line: 47, type: !8888, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !8912)
!8887 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8888 = !DISubroutineType(types: !8889)
!8889 = !{null, !8890, !8902}
!8890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8891, size: 32)
!8891 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !455, line: 19729, baseType: !8892)
!8892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 19720, size: 256, elements: !8893)
!8893 = !{!8894, !8895, !8896, !8897, !8898, !8899, !8900, !8901}
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !8892, file: !455, line: 19721, baseType: !459, size: 32)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !8892, file: !455, line: 19722, baseType: !459, size: 32, offset: 32)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !8892, file: !455, line: 19723, baseType: !532, size: 32, offset: 64)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !8892, file: !455, line: 19724, baseType: !459, size: 32, offset: 96)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !8892, file: !455, line: 19725, baseType: !459, size: 32, offset: 128)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !8892, file: !455, line: 19726, baseType: !459, size: 32, offset: 160)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !8892, file: !455, line: 19727, baseType: !459, size: 32, offset: 192)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !8892, file: !455, line: 19728, baseType: !459, size: 32, offset: 224)
!8902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8903, size: 32)
!8903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8904)
!8904 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !732, line: 78, baseType: !8905)
!8905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !732, line: 73, size: 96, elements: !8906)
!8906 = !{!8907, !8908, !8910}
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8905, file: !732, line: 75, baseType: !137, size: 32)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !8905, file: !732, line: 76, baseType: !8909, size: 32, offset: 32)
!8909 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !732, line: 53, baseType: !2483)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !8905, file: !732, line: 77, baseType: !8911, size: 32, offset: 64)
!8911 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !732, line: 63, baseType: !2487)
!8912 = !{!8913, !8914, !8915, !8916}
!8913 = !DILocalVariable(name: "base", arg: 1, scope: !8886, file: !8887, line: 47, type: !8890)
!8914 = !DILocalVariable(name: "initConfig", arg: 2, scope: !8886, file: !8887, line: 47, type: !8902)
!8915 = !DILocalVariable(name: "pin", scope: !8886, file: !8887, line: 49, type: !137)
!8916 = !DILocalVariable(name: "icr", scope: !8886, file: !8887, line: 50, type: !581)
!8917 = !DILocation(line: 0, scope: !8886)
!8918 = !DILocation(line: 53, column: 5, scope: !8886)
!8919 = !DILocation(line: 53, column: 24, scope: !8886)
!8920 = !DILocation(line: 54, column: 2, scope: !8886)
!8921 = !DILocation(line: 54, column: 26, scope: !8886)
!8922 = !DILocation(line: 57, column: 23, scope: !8886)
!8923 = !DILocation(line: 60, column: 21, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8886, file: !8887, line: 60, column: 9)
!8925 = !DILocation(line: 60, column: 31, scope: !8924)
!8926 = !DILocation(line: 0, scope: !8924)
!8927 = !DILocation(line: 60, column: 9, scope: !8886)
!8928 = !DILocation(line: 61, column: 9, scope: !8924)
!8929 = !DILocation(line: 61, column: 29, scope: !8924)
!8930 = !DILocation(line: 63, column: 32, scope: !8924)
!8931 = !DILocation(line: 63, column: 9, scope: !8924)
!8932 = !DILocation(line: 63, column: 29, scope: !8924)
!8933 = !DILocation(line: 66, column: 12, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8886, file: !8887, line: 66, column: 8)
!8935 = !DILocation(line: 66, column: 8, scope: !8886)
!8936 = !DILocation(line: 73, column: 24, scope: !8886)
!8937 = !DILocation(line: 73, column: 5, scope: !8886)
!8938 = !DILocation(line: 77, column: 30, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8940, file: !8887, line: 76, column: 9)
!8940 = distinct !DILexicalBlock(scope: !8886, file: !8887, line: 74, column: 5)
!8941 = !DILocation(line: 77, column: 26, scope: !8939)
!8942 = !DILocation(line: 77, column: 21, scope: !8939)
!8943 = !DILocation(line: 77, column: 18, scope: !8939)
!8944 = !DILocation(line: 78, column: 13, scope: !8939)
!8945 = !DILocation(line: 82, column: 21, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8940, file: !8887, line: 81, column: 9)
!8947 = !DILocation(line: 82, column: 38, scope: !8946)
!8948 = !DILocation(line: 82, column: 34, scope: !8946)
!8949 = !DILocation(line: 82, column: 29, scope: !8946)
!8950 = !DILocation(line: 82, column: 26, scope: !8946)
!8951 = !DILocation(line: 82, column: 53, scope: !8946)
!8952 = !DILocation(line: 82, column: 47, scope: !8946)
!8953 = !DILocation(line: 83, column: 13, scope: !8946)
!8954 = !DILocation(line: 87, column: 21, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8940, file: !8887, line: 86, column: 9)
!8956 = !DILocation(line: 87, column: 38, scope: !8955)
!8957 = !DILocation(line: 87, column: 34, scope: !8955)
!8958 = !DILocation(line: 87, column: 29, scope: !8955)
!8959 = !DILocation(line: 87, column: 26, scope: !8955)
!8960 = !DILocation(line: 87, column: 53, scope: !8955)
!8961 = !DILocation(line: 87, column: 47, scope: !8955)
!8962 = !DILocation(line: 88, column: 13, scope: !8955)
!8963 = !DILocation(line: 92, column: 29, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8940, file: !8887, line: 91, column: 9)
!8965 = !DILocation(line: 92, column: 25, scope: !8964)
!8966 = !DILocation(line: 92, column: 18, scope: !8964)
!8967 = !DILocation(line: 93, column: 13, scope: !8964)
!8968 = !DILocation(line: 0, scope: !8940)
!8969 = !DILocation(line: 100, column: 1, scope: !8886)
!8970 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !8887, file: !8887, line: 111, type: !8971, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !8974)
!8971 = !DISubroutineType(types: !8972)
!8972 = !{null, !8890, !137, !8973}
!8973 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !732, line: 70, baseType: !731)
!8974 = !{!8975, !8976, !8977}
!8975 = !DILocalVariable(name: "base", arg: 1, scope: !8970, file: !8887, line: 111, type: !8890)
!8976 = !DILocalVariable(name: "pin", arg: 2, scope: !8970, file: !8887, line: 111, type: !137)
!8977 = !DILocalVariable(name: "pinVal", arg: 3, scope: !8970, file: !8887, line: 111, type: !8973)
!8978 = !DILocation(line: 0, scope: !8970)
!8979 = !DILocation(line: 114, column: 16, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8970, file: !8887, line: 114, column: 9)
!8981 = !DILocation(line: 0, scope: !8980)
!8982 = !DILocation(line: 114, column: 9, scope: !8970)
!8983 = !DILocation(line: 116, column: 9, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8980, file: !8887, line: 115, column: 5)
!8985 = !DILocation(line: 116, column: 27, scope: !8984)
!8986 = !DILocation(line: 117, column: 5, scope: !8984)
!8987 = !DILocation(line: 120, column: 30, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8980, file: !8887, line: 119, column: 5)
!8989 = !DILocation(line: 120, column: 9, scope: !8988)
!8990 = !DILocation(line: 120, column: 27, scope: !8988)
!8991 = !DILocation(line: 122, column: 1, scope: !8970)
!8992 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !8887, file: !8887, line: 133, type: !8993, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !8995)
!8993 = !DISubroutineType(types: !8994)
!8994 = !{null, !8890, !137, !636}
!8995 = !{!8996, !8997, !8998}
!8996 = !DILocalVariable(name: "base", arg: 1, scope: !8992, file: !8887, line: 133, type: !8890)
!8997 = !DILocalVariable(name: "pin", arg: 2, scope: !8992, file: !8887, line: 133, type: !137)
!8998 = !DILocalVariable(name: "enable", arg: 3, scope: !8992, file: !8887, line: 133, type: !636)
!8999 = !DILocation(line: 0, scope: !8992)
!9000 = !DILocation(line: 0, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8992, file: !8887, line: 137, column: 8)
!9002 = !DILocation(line: 137, column: 8, scope: !8992)
!9003 = !DILocation(line: 138, column: 9, scope: !9001)
!9004 = !DILocation(line: 138, column: 28, scope: !9001)
!9005 = !DILocation(line: 140, column: 31, scope: !9001)
!9006 = !DILocation(line: 140, column: 9, scope: !9001)
!9007 = !DILocation(line: 140, column: 28, scope: !9001)
!9008 = !DILocation(line: 141, column: 1, scope: !8992)
!9009 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !8887, file: !8887, line: 150, type: !8993, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !9010)
!9010 = !{!9011, !9012, !9013}
!9011 = !DILocalVariable(name: "base", arg: 1, scope: !9009, file: !8887, line: 150, type: !8890)
!9012 = !DILocalVariable(name: "pin", arg: 2, scope: !9009, file: !8887, line: 150, type: !137)
!9013 = !DILocalVariable(name: "enable", arg: 3, scope: !9009, file: !8887, line: 150, type: !636)
!9014 = !DILocation(line: 0, scope: !9009)
!9015 = !DILocation(line: 0, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9009, file: !8887, line: 154, column: 8)
!9017 = !DILocation(line: 154, column: 8, scope: !9009)
!9018 = !DILocation(line: 155, column: 9, scope: !9016)
!9019 = !DILocation(line: 155, column: 33, scope: !9016)
!9020 = !DILocation(line: 157, column: 36, scope: !9016)
!9021 = !DILocation(line: 157, column: 9, scope: !9016)
!9022 = !DILocation(line: 157, column: 33, scope: !9016)
!9023 = !DILocation(line: 158, column: 1, scope: !9009)
!9024 = distinct !DISubprogram(name: "UART_Init", scope: !9025, file: !9025, line: 47, type: !9026, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9062)
!9025 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9026 = !DISubroutineType(types: !9027)
!9027 = !{null, !9028, !9051}
!9028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9029, size: 32)
!9029 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !455, line: 41342, baseType: !9030)
!9030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 41322, size: 1504, elements: !9031)
!9031 = !{!9032, !9033, !9034, !9035, !9036, !9037, !9038, !9039, !9040, !9041, !9042, !9043, !9044, !9045, !9046, !9047, !9048, !9049, !9050}
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !9030, file: !455, line: 41323, baseType: !532, size: 32)
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9030, file: !455, line: 41324, baseType: !1089, size: 480, offset: 32)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !9030, file: !455, line: 41325, baseType: !459, size: 32, offset: 512)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9030, file: !455, line: 41326, baseType: !1089, size: 480, offset: 544)
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !9030, file: !455, line: 41327, baseType: !459, size: 32, offset: 1024)
!9037 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !9030, file: !455, line: 41328, baseType: !459, size: 32, offset: 1056)
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !9030, file: !455, line: 41329, baseType: !459, size: 32, offset: 1088)
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !9030, file: !455, line: 41330, baseType: !459, size: 32, offset: 1120)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !9030, file: !455, line: 41331, baseType: !459, size: 32, offset: 1152)
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !9030, file: !455, line: 41332, baseType: !459, size: 32, offset: 1184)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !9030, file: !455, line: 41333, baseType: !459, size: 32, offset: 1216)
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !9030, file: !455, line: 41334, baseType: !459, size: 32, offset: 1248)
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !9030, file: !455, line: 41335, baseType: !459, size: 32, offset: 1280)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !9030, file: !455, line: 41336, baseType: !459, size: 32, offset: 1312)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !9030, file: !455, line: 41337, baseType: !459, size: 32, offset: 1344)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !9030, file: !455, line: 41338, baseType: !532, size: 32, offset: 1376)
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !9030, file: !455, line: 41339, baseType: !459, size: 32, offset: 1408)
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !9030, file: !455, line: 41340, baseType: !459, size: 32, offset: 1440)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !9030, file: !455, line: 41341, baseType: !459, size: 32, offset: 1472)
!9051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9052, size: 32)
!9052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9053)
!9053 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !919, line: 57, baseType: !9054)
!9054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !919, line: 49, size: 192, elements: !9055)
!9055 = !{!9056, !9057, !9058, !9059, !9060, !9061}
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !9054, file: !919, line: 51, baseType: !137, size: 32)
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !9054, file: !919, line: 52, baseType: !137, size: 32, offset: 32)
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !9054, file: !919, line: 53, baseType: !137, size: 32, offset: 64)
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !9054, file: !919, line: 54, baseType: !137, size: 32, offset: 96)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !9054, file: !919, line: 55, baseType: !137, size: 32, offset: 128)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9054, file: !919, line: 56, baseType: !137, size: 32, offset: 160)
!9062 = !{!9063, !9064}
!9063 = !DILocalVariable(name: "base", arg: 1, scope: !9024, file: !9025, line: 47, type: !9028)
!9064 = !DILocalVariable(name: "initConfig", arg: 2, scope: !9024, file: !9025, line: 47, type: !9051)
!9065 = !DILocation(line: 0, scope: !9024)
!9066 = !DILocation(line: 52, column: 5, scope: !9024)
!9067 = !DILocation(line: 52, column: 25, scope: !9024)
!9068 = !DILocation(line: 55, column: 5, scope: !9024)
!9069 = !DILocation(line: 60, column: 41, scope: !9024)
!9070 = !DILocation(line: 61, column: 41, scope: !9024)
!9071 = !DILocation(line: 62, column: 41, scope: !9024)
!9072 = !DILocation(line: 63, column: 41, scope: !9024)
!9073 = !DILocation(line: 60, column: 5, scope: !9024)
!9074 = !DILocation(line: 60, column: 25, scope: !9024)
!9075 = !DILocation(line: 61, column: 52, scope: !9024)
!9076 = !DILocation(line: 62, column: 52, scope: !9024)
!9077 = !DILocation(line: 63, column: 52, scope: !9024)
!9078 = !DILocation(line: 68, column: 5, scope: !9024)
!9079 = !DILocation(line: 68, column: 25, scope: !9024)
!9080 = !DILocation(line: 72, column: 40, scope: !9024)
!9081 = !DILocation(line: 72, column: 63, scope: !9024)
!9082 = !DILocation(line: 72, column: 5, scope: !9024)
!9083 = !DILocation(line: 73, column: 1, scope: !9024)
!9084 = distinct !DISubprogram(name: "UART_Deinit", scope: !9025, file: !9025, line: 82, type: !9085, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9087)
!9085 = !DISubroutineType(types: !9086)
!9086 = !{null, !9028}
!9087 = !{!9088}
!9088 = !DILocalVariable(name: "base", arg: 1, scope: !9084, file: !9025, line: 82, type: !9028)
!9089 = !DILocation(line: 0, scope: !9084)
!9090 = !DILocation(line: 85, column: 5, scope: !9084)
!9091 = !DILocation(line: 85, column: 25, scope: !9084)
!9092 = !DILocation(line: 88, column: 26, scope: !9084)
!9093 = !DILocation(line: 89, column: 5, scope: !9084)
!9094 = !DILocation(line: 89, column: 26, scope: !9084)
!9095 = !DILocation(line: 90, column: 5, scope: !9084)
!9096 = !DILocation(line: 90, column: 26, scope: !9084)
!9097 = !DILocation(line: 93, column: 5, scope: !9084)
!9098 = !DILocation(line: 93, column: 26, scope: !9084)
!9099 = !DILocation(line: 94, column: 5, scope: !9084)
!9100 = !DILocation(line: 94, column: 26, scope: !9084)
!9101 = !DILocation(line: 95, column: 5, scope: !9084)
!9102 = !DILocation(line: 95, column: 26, scope: !9084)
!9103 = !DILocation(line: 96, column: 5, scope: !9084)
!9104 = !DILocation(line: 96, column: 26, scope: !9084)
!9105 = !DILocation(line: 97, column: 5, scope: !9084)
!9106 = !DILocation(line: 97, column: 26, scope: !9084)
!9107 = !DILocation(line: 98, column: 5, scope: !9084)
!9108 = !DILocation(line: 98, column: 26, scope: !9084)
!9109 = !DILocation(line: 99, column: 5, scope: !9084)
!9110 = !DILocation(line: 99, column: 26, scope: !9084)
!9111 = !DILocation(line: 103, column: 25, scope: !9084)
!9112 = !DILocation(line: 104, column: 5, scope: !9084)
!9113 = !DILocation(line: 104, column: 14, scope: !9084)
!9114 = !DILocation(line: 104, column: 34, scope: !9084)
!9115 = !DILocation(line: 104, column: 12, scope: !9084)
!9116 = distinct !{!9116, !9112, !9117}
!9117 = !DILocation(line: 104, column: 57, scope: !9084)
!9118 = !DILocation(line: 105, column: 1, scope: !9084)
!9119 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !9025, file: !9025, line: 113, type: !9120, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9122)
!9120 = !DISubroutineType(types: !9121)
!9121 = !{null, !9028, !137, !137}
!9122 = !{!9123, !9124, !9125, !9126, !9127, !9128, !9129, !9130, !9131, !9134, !9135}
!9123 = !DILocalVariable(name: "base", arg: 1, scope: !9119, file: !9025, line: 113, type: !9028)
!9124 = !DILocalVariable(name: "clockRate", arg: 2, scope: !9119, file: !9025, line: 113, type: !137)
!9125 = !DILocalVariable(name: "baudRate", arg: 3, scope: !9119, file: !9025, line: 113, type: !137)
!9126 = !DILocalVariable(name: "numerator", scope: !9119, file: !9025, line: 115, type: !137)
!9127 = !DILocalVariable(name: "denominator", scope: !9119, file: !9025, line: 116, type: !137)
!9128 = !DILocalVariable(name: "divisor", scope: !9119, file: !9025, line: 117, type: !137)
!9129 = !DILocalVariable(name: "refFreqDiv", scope: !9119, file: !9025, line: 118, type: !137)
!9130 = !DILocalVariable(name: "divider", scope: !9119, file: !9025, line: 119, type: !137)
!9131 = !DILocalVariable(name: "m", scope: !9132, file: !9025, line: 141, type: !137)
!9132 = distinct !DILexicalBlock(scope: !9133, file: !9025, line: 140, column: 5)
!9133 = distinct !DILexicalBlock(scope: !9119, file: !9025, line: 138, column: 9)
!9134 = !DILocalVariable(name: "n", scope: !9132, file: !9025, line: 142, type: !137)
!9135 = !DILocalVariable(name: "max", scope: !9132, file: !9025, line: 143, type: !137)
!9136 = !DILocation(line: 0, scope: !9119)
!9137 = !DILocation(line: 123, column: 28, scope: !9119)
!9138 = !DILocation(line: 126, column: 24, scope: !9119)
!9139 = !DILocation(line: 126, column: 5, scope: !9119)
!9140 = !DILocation(line: 129, column: 33, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9119, file: !9025, line: 127, column: 5)
!9142 = distinct !{!9142, !9139, !9143}
!9143 = !DILocation(line: 131, column: 5, scope: !9119)
!9144 = !DILocation(line: 133, column: 27, scope: !9119)
!9145 = !DILocation(line: 134, column: 35, scope: !9119)
!9146 = !DILocation(line: 138, column: 20, scope: !9133)
!9147 = !DILocation(line: 138, column: 48, scope: !9133)
!9148 = !DILocation(line: 141, column: 33, scope: !9132)
!9149 = !DILocation(line: 141, column: 38, scope: !9132)
!9150 = !DILocation(line: 141, column: 65, scope: !9132)
!9151 = !DILocation(line: 0, scope: !9132)
!9152 = !DILocation(line: 142, column: 35, scope: !9132)
!9153 = !DILocation(line: 142, column: 40, scope: !9132)
!9154 = !DILocation(line: 142, column: 61, scope: !9132)
!9155 = !DILocation(line: 143, column: 26, scope: !9132)
!9156 = !DILocation(line: 143, column: 24, scope: !9132)
!9157 = !DILocation(line: 144, column: 19, scope: !9132)
!9158 = !DILocation(line: 145, column: 21, scope: !9132)
!9159 = !DILocation(line: 146, column: 15, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9132, file: !9025, line: 146, column: 13)
!9161 = !DILocation(line: 146, column: 13, scope: !9132)
!9162 = !DILocation(line: 148, column: 15, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9132, file: !9025, line: 148, column: 13)
!9164 = !DILocation(line: 148, column: 13, scope: !9132)
!9165 = !DILocation(line: 150, column: 5, scope: !9132)
!9166 = !DILocation(line: 151, column: 26, scope: !9119)
!9167 = !DILocation(line: 151, column: 31, scope: !9119)
!9168 = !DILocation(line: 151, column: 52, scope: !9119)
!9169 = !DILocation(line: 153, column: 5, scope: !9119)
!9170 = !DILocation(line: 0, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9119, file: !9025, line: 154, column: 5)
!9172 = !DILocation(line: 180, column: 5, scope: !9119)
!9173 = !DILocation(line: 180, column: 25, scope: !9119)
!9174 = !DILocation(line: 181, column: 25, scope: !9119)
!9175 = !DILocation(line: 182, column: 27, scope: !9119)
!9176 = !DILocation(line: 182, column: 5, scope: !9119)
!9177 = !DILocation(line: 182, column: 25, scope: !9119)
!9178 = !DILocation(line: 183, column: 27, scope: !9119)
!9179 = !DILocation(line: 183, column: 5, scope: !9119)
!9180 = !DILocation(line: 183, column: 25, scope: !9119)
!9181 = !DILocation(line: 184, column: 28, scope: !9119)
!9182 = !DILocation(line: 184, column: 5, scope: !9119)
!9183 = !DILocation(line: 184, column: 26, scope: !9119)
!9184 = !DILocation(line: 185, column: 1, scope: !9119)
!9185 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !9025, file: !9025, line: 194, type: !9186, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9188)
!9186 = !DISubroutineType(types: !9187)
!9187 = !{null, !9028, !137, !636}
!9188 = !{!9189, !9190, !9191}
!9189 = !DILocalVariable(name: "base", arg: 1, scope: !9185, file: !9025, line: 194, type: !9028)
!9190 = !DILocalVariable(name: "direction", arg: 2, scope: !9185, file: !9025, line: 194, type: !137)
!9191 = !DILocalVariable(name: "invert", arg: 3, scope: !9185, file: !9025, line: 194, type: !636)
!9192 = !DILocation(line: 0, scope: !9185)
!9193 = !DILocation(line: 0, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9185, file: !9025, line: 198, column: 9)
!9195 = !DILocation(line: 198, column: 9, scope: !9185)
!9196 = !DILocation(line: 200, column: 13, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9194, file: !9025, line: 199, column: 5)
!9198 = !DILocation(line: 201, column: 13, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9197, file: !9025, line: 200, column: 13)
!9200 = !DILocation(line: 201, column: 33, scope: !9199)
!9201 = !DILocation(line: 202, column: 23, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9197, file: !9025, line: 202, column: 13)
!9203 = !DILocation(line: 202, column: 13, scope: !9197)
!9204 = !DILocation(line: 203, column: 13, scope: !9202)
!9205 = !DILocation(line: 203, column: 33, scope: !9202)
!9206 = !DILocation(line: 207, column: 13, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9194, file: !9025, line: 206, column: 5)
!9208 = !DILocation(line: 208, column: 13, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9207, file: !9025, line: 207, column: 13)
!9210 = !DILocation(line: 208, column: 33, scope: !9209)
!9211 = !DILocation(line: 209, column: 23, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9207, file: !9025, line: 209, column: 13)
!9213 = !DILocation(line: 209, column: 13, scope: !9207)
!9214 = !DILocation(line: 210, column: 13, scope: !9212)
!9215 = !DILocation(line: 210, column: 33, scope: !9212)
!9216 = !DILocation(line: 212, column: 1, scope: !9185)
!9217 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !9025, file: !9025, line: 224, type: !9218, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9220)
!9218 = !DISubroutineType(types: !9219)
!9219 = !{null, !9028, !636}
!9220 = !{!9221, !9222}
!9221 = !DILocalVariable(name: "base", arg: 1, scope: !9217, file: !9025, line: 224, type: !9028)
!9222 = !DILocalVariable(name: "enable", arg: 2, scope: !9217, file: !9025, line: 224, type: !636)
!9223 = !DILocation(line: 0, scope: !9217)
!9224 = !DILocation(line: 0, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9217, file: !9025, line: 226, column: 9)
!9226 = !DILocation(line: 226, column: 9, scope: !9217)
!9227 = !DILocation(line: 230, column: 1, scope: !9217)
!9228 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !9025, file: !9025, line: 239, type: !9218, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9229)
!9229 = !{!9230, !9231}
!9230 = !DILocalVariable(name: "base", arg: 1, scope: !9228, file: !9025, line: 239, type: !9028)
!9231 = !DILocalVariable(name: "enable", arg: 2, scope: !9228, file: !9025, line: 239, type: !636)
!9232 = !DILocation(line: 0, scope: !9228)
!9233 = !DILocation(line: 0, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9228, file: !9025, line: 241, column: 9)
!9235 = !DILocation(line: 241, column: 9, scope: !9228)
!9236 = !DILocation(line: 245, column: 1, scope: !9228)
!9237 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !9025, file: !9025, line: 258, type: !9186, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9238)
!9238 = !{!9239, !9240, !9241, !9242, !9243}
!9239 = !DILocalVariable(name: "base", arg: 1, scope: !9237, file: !9025, line: 258, type: !9028)
!9240 = !DILocalVariable(name: "intSource", arg: 2, scope: !9237, file: !9025, line: 258, type: !137)
!9241 = !DILocalVariable(name: "enable", arg: 3, scope: !9237, file: !9025, line: 258, type: !636)
!9242 = !DILocalVariable(name: "uart_reg", scope: !9237, file: !9025, line: 260, type: !581)
!9243 = !DILocalVariable(name: "uart_mask", scope: !9237, file: !9025, line: 261, type: !137)
!9244 = !DILocation(line: 0, scope: !9237)
!9245 = !DILocation(line: 263, column: 29, scope: !9237)
!9246 = !DILocation(line: 263, column: 57, scope: !9237)
!9247 = !DILocation(line: 263, column: 44, scope: !9237)
!9248 = !DILocation(line: 263, column: 16, scope: !9237)
!9249 = !DILocation(line: 264, column: 34, scope: !9237)
!9250 = !DILocation(line: 264, column: 20, scope: !9237)
!9251 = !DILocation(line: 266, column: 9, scope: !9237)
!9252 = !DILocation(line: 267, column: 19, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9237, file: !9025, line: 266, column: 9)
!9254 = !DILocation(line: 267, column: 9, scope: !9253)
!9255 = !DILocation(line: 269, column: 22, scope: !9253)
!9256 = !DILocation(line: 269, column: 19, scope: !9253)
!9257 = !DILocation(line: 0, scope: !9253)
!9258 = !DILocation(line: 270, column: 1, scope: !9237)
!9259 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !9025, file: !9025, line: 299, type: !9260, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9262)
!9260 = !DISubroutineType(types: !9261)
!9261 = !{null, !9028, !137}
!9262 = !{!9263, !9264, !9265, !9266}
!9263 = !DILocalVariable(name: "base", arg: 1, scope: !9259, file: !9025, line: 299, type: !9028)
!9264 = !DILocalVariable(name: "flag", arg: 2, scope: !9259, file: !9025, line: 299, type: !137)
!9265 = !DILocalVariable(name: "uart_reg", scope: !9259, file: !9025, line: 301, type: !581)
!9266 = !DILocalVariable(name: "uart_mask", scope: !9259, file: !9025, line: 302, type: !137)
!9267 = !DILocation(line: 0, scope: !9259)
!9268 = !DILocation(line: 304, column: 29, scope: !9259)
!9269 = !DILocation(line: 304, column: 52, scope: !9259)
!9270 = !DILocation(line: 304, column: 44, scope: !9259)
!9271 = !DILocation(line: 304, column: 16, scope: !9259)
!9272 = !DILocation(line: 305, column: 29, scope: !9259)
!9273 = !DILocation(line: 305, column: 20, scope: !9259)
!9274 = !DILocation(line: 308, column: 15, scope: !9259)
!9275 = !DILocation(line: 309, column: 1, scope: !9259)
!9276 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !9025, file: !9025, line: 322, type: !9186, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9277)
!9277 = !{!9278, !9279, !9280, !9281, !9282}
!9278 = !DILocalVariable(name: "base", arg: 1, scope: !9276, file: !9025, line: 322, type: !9028)
!9279 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !9276, file: !9025, line: 322, type: !137)
!9280 = !DILocalVariable(name: "enable", arg: 3, scope: !9276, file: !9025, line: 322, type: !636)
!9281 = !DILocalVariable(name: "uart_reg", scope: !9276, file: !9025, line: 324, type: !581)
!9282 = !DILocalVariable(name: "uart_mask", scope: !9276, file: !9025, line: 325, type: !137)
!9283 = !DILocation(line: 0, scope: !9276)
!9284 = !DILocation(line: 327, column: 29, scope: !9276)
!9285 = !DILocation(line: 327, column: 57, scope: !9276)
!9286 = !DILocation(line: 327, column: 44, scope: !9276)
!9287 = !DILocation(line: 327, column: 16, scope: !9276)
!9288 = !DILocation(line: 328, column: 34, scope: !9276)
!9289 = !DILocation(line: 328, column: 20, scope: !9276)
!9290 = !DILocation(line: 329, column: 9, scope: !9276)
!9291 = !DILocation(line: 330, column: 19, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9276, file: !9025, line: 329, column: 9)
!9293 = !DILocation(line: 330, column: 9, scope: !9292)
!9294 = !DILocation(line: 332, column: 22, scope: !9292)
!9295 = !DILocation(line: 332, column: 19, scope: !9292)
!9296 = !DILocation(line: 0, scope: !9292)
!9297 = !DILocation(line: 333, column: 1, scope: !9276)
!9298 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !9025, file: !9025, line: 345, type: !9218, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9299)
!9299 = !{!9300, !9301}
!9300 = !DILocalVariable(name: "base", arg: 1, scope: !9298, file: !9025, line: 345, type: !9028)
!9301 = !DILocalVariable(name: "enable", arg: 2, scope: !9298, file: !9025, line: 345, type: !636)
!9302 = !DILocation(line: 0, scope: !9298)
!9303 = !DILocation(line: 0, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9298, file: !9025, line: 347, column: 9)
!9305 = !DILocation(line: 347, column: 9, scope: !9298)
!9306 = !DILocation(line: 351, column: 1, scope: !9298)
!9307 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !9025, file: !9025, line: 362, type: !9218, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9308)
!9308 = !{!9309, !9310}
!9309 = !DILocalVariable(name: "base", arg: 1, scope: !9307, file: !9025, line: 362, type: !9028)
!9310 = !DILocalVariable(name: "enable", arg: 2, scope: !9307, file: !9025, line: 362, type: !636)
!9311 = !DILocation(line: 0, scope: !9307)
!9312 = !DILocation(line: 0, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9307, file: !9025, line: 364, column: 9)
!9314 = !DILocation(line: 364, column: 9, scope: !9307)
!9315 = !DILocation(line: 368, column: 1, scope: !9307)
!9316 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !9025, file: !9025, line: 379, type: !9218, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9317)
!9317 = !{!9318, !9319}
!9318 = !DILocalVariable(name: "base", arg: 1, scope: !9316, file: !9025, line: 379, type: !9028)
!9319 = !DILocalVariable(name: "active", arg: 2, scope: !9316, file: !9025, line: 379, type: !636)
!9320 = !DILocation(line: 0, scope: !9316)
!9321 = !DILocation(line: 0, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9316, file: !9025, line: 381, column: 9)
!9323 = !DILocation(line: 381, column: 9, scope: !9316)
!9324 = !DILocation(line: 385, column: 1, scope: !9316)
!9325 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !9025, file: !9025, line: 394, type: !9260, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9326)
!9326 = !{!9327, !9328}
!9327 = !DILocalVariable(name: "base", arg: 1, scope: !9325, file: !9025, line: 394, type: !9028)
!9328 = !DILocalVariable(name: "mode", arg: 2, scope: !9325, file: !9025, line: 394, type: !137)
!9329 = !DILocation(line: 0, scope: !9325)
!9330 = !DILocation(line: 398, column: 26, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9325, file: !9025, line: 398, column: 9)
!9332 = !DILocation(line: 0, scope: !9331)
!9333 = !DILocation(line: 398, column: 9, scope: !9325)
!9334 = !DILocation(line: 402, column: 1, scope: !9325)
!9335 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !9025, file: !9025, line: 412, type: !9218, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9336)
!9336 = !{!9337, !9338}
!9337 = !DILocalVariable(name: "base", arg: 1, scope: !9335, file: !9025, line: 412, type: !9028)
!9338 = !DILocalVariable(name: "active", arg: 2, scope: !9335, file: !9025, line: 412, type: !636)
!9339 = !DILocation(line: 0, scope: !9335)
!9340 = !DILocation(line: 0, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9335, file: !9025, line: 414, column: 9)
!9342 = !DILocation(line: 414, column: 9, scope: !9335)
!9343 = !DILocation(line: 418, column: 1, scope: !9335)
!9344 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !9025, file: !9025, line: 427, type: !9218, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9345)
!9345 = !{!9346, !9347}
!9346 = !DILocalVariable(name: "base", arg: 1, scope: !9344, file: !9025, line: 427, type: !9028)
!9347 = !DILocalVariable(name: "active", arg: 2, scope: !9344, file: !9025, line: 427, type: !636)
!9348 = !DILocation(line: 0, scope: !9344)
!9349 = !DILocation(line: 0, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9344, file: !9025, line: 429, column: 9)
!9351 = !DILocation(line: 429, column: 9, scope: !9344)
!9352 = !DILocation(line: 433, column: 1, scope: !9344)
!9353 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !9025, file: !9025, line: 442, type: !9218, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9354)
!9354 = !{!9355, !9356}
!9355 = !DILocalVariable(name: "base", arg: 1, scope: !9353, file: !9025, line: 442, type: !9028)
!9356 = !DILocalVariable(name: "active", arg: 2, scope: !9353, file: !9025, line: 442, type: !636)
!9357 = !DILocation(line: 0, scope: !9353)
!9358 = !DILocation(line: 0, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9353, file: !9025, line: 444, column: 9)
!9360 = !DILocation(line: 444, column: 9, scope: !9353)
!9361 = !DILocation(line: 448, column: 1, scope: !9353)
!9362 = distinct !DISubprogram(name: "UART_Putchar9", scope: !9025, file: !9025, line: 460, type: !9363, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9365)
!9363 = !DISubroutineType(types: !9364)
!9364 = !{null, !9028, !151}
!9365 = !{!9366, !9367}
!9366 = !DILocalVariable(name: "base", arg: 1, scope: !9362, file: !9025, line: 460, type: !9028)
!9367 = !DILocalVariable(name: "data", arg: 2, scope: !9362, file: !9025, line: 460, type: !151)
!9368 = !DILocation(line: 0, scope: !9362)
!9369 = !DILocation(line: 464, column: 9, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9362, file: !9025, line: 464, column: 9)
!9371 = !DILocation(line: 0, scope: !9370)
!9372 = !DILocation(line: 464, column: 9, scope: !9362)
!9373 = !DILocation(line: 468, column: 33, scope: !9362)
!9374 = !DILocation(line: 468, column: 5, scope: !9362)
!9375 = !DILocation(line: 468, column: 25, scope: !9362)
!9376 = !DILocation(line: 469, column: 1, scope: !9362)
!9377 = distinct !DISubprogram(name: "UART_Getchar9", scope: !9025, file: !9025, line: 478, type: !9378, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9380)
!9378 = !DISubroutineType(types: !9379)
!9379 = !{!151, !9028}
!9380 = !{!9381, !9382}
!9381 = !DILocalVariable(name: "base", arg: 1, scope: !9377, file: !9025, line: 478, type: !9028)
!9382 = !DILocalVariable(name: "rxData", scope: !9377, file: !9025, line: 480, type: !151)
!9383 = !DILocation(line: 0, scope: !9377)
!9384 = !DILocation(line: 480, column: 23, scope: !9377)
!9385 = !DILocation(line: 482, column: 9, scope: !9377)
!9386 = !DILocation(line: 491, column: 5, scope: !9377)
!9387 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !9025, file: !9025, line: 501, type: !9218, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9388)
!9388 = !{!9389, !9390}
!9389 = !DILocalVariable(name: "base", arg: 1, scope: !9387, file: !9025, line: 501, type: !9028)
!9390 = !DILocalVariable(name: "enable", arg: 2, scope: !9387, file: !9025, line: 501, type: !636)
!9391 = !DILocation(line: 0, scope: !9387)
!9392 = !DILocation(line: 0, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9387, file: !9025, line: 503, column: 9)
!9394 = !DILocation(line: 503, column: 9, scope: !9387)
!9395 = !DILocation(line: 507, column: 1, scope: !9387)
!9396 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !9025, file: !9025, line: 516, type: !9218, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9397)
!9397 = !{!9398, !9399}
!9398 = !DILocalVariable(name: "base", arg: 1, scope: !9396, file: !9025, line: 516, type: !9028)
!9399 = !DILocalVariable(name: "enable", arg: 2, scope: !9396, file: !9025, line: 516, type: !636)
!9400 = !DILocation(line: 0, scope: !9396)
!9401 = !DILocation(line: 0, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9396, file: !9025, line: 518, column: 9)
!9403 = !DILocation(line: 518, column: 9, scope: !9396)
!9404 = !DILocation(line: 522, column: 1, scope: !9396)
!9405 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !9025, file: !9025, line: 534, type: !9218, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9406)
!9406 = !{!9407, !9408}
!9407 = !DILocalVariable(name: "base", arg: 1, scope: !9405, file: !9025, line: 534, type: !9028)
!9408 = !DILocalVariable(name: "enable", arg: 2, scope: !9405, file: !9025, line: 534, type: !636)
!9409 = !DILocation(line: 0, scope: !9405)
!9410 = !DILocation(line: 0, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9405, file: !9025, line: 536, column: 9)
!9412 = !DILocation(line: 536, column: 9, scope: !9405)
!9413 = !DILocation(line: 540, column: 1, scope: !9405)
!9414 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !9025, file: !9025, line: 550, type: !9260, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9415)
!9415 = !{!9416, !9417}
!9416 = !DILocalVariable(name: "base", arg: 1, scope: !9414, file: !9025, line: 550, type: !9028)
!9417 = !DILocalVariable(name: "voteClock", arg: 2, scope: !9414, file: !9025, line: 550, type: !137)
!9418 = !DILocation(line: 0, scope: !9414)
!9419 = !DILocation(line: 555, column: 35, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9414, file: !9025, line: 555, column: 9)
!9421 = !DILocation(line: 0, scope: !9420)
!9422 = !DILocation(line: 555, column: 9, scope: !9414)
!9423 = !DILocation(line: 559, column: 1, scope: !9414)
!9424 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !9025, file: !9025, line: 571, type: !9218, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9425)
!9425 = !{!9426, !9427}
!9426 = !DILocalVariable(name: "base", arg: 1, scope: !9424, file: !9025, line: 571, type: !9028)
!9427 = !DILocalVariable(name: "enable", arg: 2, scope: !9424, file: !9025, line: 571, type: !636)
!9428 = !DILocation(line: 0, scope: !9424)
!9429 = !DILocation(line: 0, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9424, file: !9025, line: 573, column: 9)
!9431 = !DILocation(line: 573, column: 9, scope: !9424)
!9432 = !DILocation(line: 577, column: 1, scope: !9424)
!9433 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !9025, file: !9025, line: 587, type: !9218, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9434)
!9434 = !{!9435, !9436}
!9435 = !DILocalVariable(name: "base", arg: 1, scope: !9433, file: !9025, line: 587, type: !9028)
!9436 = !DILocalVariable(name: "active", arg: 2, scope: !9433, file: !9025, line: 587, type: !636)
!9437 = !DILocation(line: 0, scope: !9433)
!9438 = !DILocation(line: 0, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9433, file: !9025, line: 589, column: 9)
!9440 = !DILocation(line: 589, column: 9, scope: !9433)
!9441 = !DILocation(line: 593, column: 1, scope: !9433)
!9442 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !9025, file: !9025, line: 602, type: !9218, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !9443)
!9443 = !{!9444, !9445}
!9444 = !DILocalVariable(name: "base", arg: 1, scope: !9442, file: !9025, line: 602, type: !9028)
!9445 = !DILocalVariable(name: "enable", arg: 2, scope: !9442, file: !9025, line: 602, type: !636)
!9446 = !DILocation(line: 0, scope: !9442)
!9447 = !DILocation(line: 0, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9442, file: !9025, line: 604, column: 9)
!9449 = !DILocation(line: 604, column: 9, scope: !9442)
!9450 = !DILocation(line: 608, column: 1, scope: !9442)
!9451 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !9452, file: !9452, line: 42, type: !9453, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !9469)
!9452 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!137, !9455}
!9455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9456, size: 32)
!9456 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !455, line: 20831, baseType: !9457)
!9457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 20820, size: 320, elements: !9458)
!9458 = !{!9459, !9460, !9461, !9462, !9463, !9464, !9465, !9466, !9467, !9468}
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !9457, file: !455, line: 20821, baseType: !459, size: 32)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !9457, file: !455, line: 20822, baseType: !459, size: 32, offset: 32)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !9457, file: !455, line: 20823, baseType: !459, size: 32, offset: 64)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !9457, file: !455, line: 20824, baseType: !459, size: 32, offset: 96)
!9463 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !9457, file: !455, line: 20825, baseType: !459, size: 32, offset: 128)
!9464 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !9457, file: !455, line: 20826, baseType: !459, size: 32, offset: 160)
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !9457, file: !455, line: 20827, baseType: !459, size: 32, offset: 192)
!9466 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !9457, file: !455, line: 20828, baseType: !532, size: 32, offset: 224)
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !9457, file: !455, line: 20829, baseType: !532, size: 32, offset: 256)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !9457, file: !455, line: 20830, baseType: !532, size: 32, offset: 288)
!9469 = !{!9470, !9471, !9472, !9473, !9474}
!9470 = !DILocalVariable(name: "base", arg: 1, scope: !9451, file: !9452, line: 42, type: !9455)
!9471 = !DILocalVariable(name: "root", scope: !9451, file: !9452, line: 44, type: !137)
!9472 = !DILocalVariable(name: "hz", scope: !9451, file: !9452, line: 45, type: !137)
!9473 = !DILocalVariable(name: "pre", scope: !9451, file: !9452, line: 46, type: !137)
!9474 = !DILocalVariable(name: "post", scope: !9451, file: !9452, line: 46, type: !137)
!9475 = !DILocation(line: 0, scope: !9451)
!9476 = !DILocation(line: 46, column: 2, scope: !9451)
!9477 = !DILocation(line: 48, column: 10, scope: !9451)
!9478 = !DILocation(line: 48, column: 2, scope: !9451)
!9479 = !DILocation(line: 56, column: 3, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9451, file: !9452, line: 48, column: 26)
!9481 = !DILocation(line: 0, scope: !9480)
!9482 = !DILocation(line: 61, column: 2, scope: !9451)
!9483 = !DILocation(line: 66, column: 8, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9451, file: !9452, line: 61, column: 16)
!9485 = !DILocation(line: 67, column: 3, scope: !9484)
!9486 = !DILocation(line: 0, scope: !9484)
!9487 = !DILocation(line: 72, column: 15, scope: !9451)
!9488 = !DILocation(line: 72, column: 19, scope: !9451)
!9489 = !DILocation(line: 72, column: 12, scope: !9451)
!9490 = !DILocation(line: 72, column: 27, scope: !9451)
!9491 = !DILocation(line: 72, column: 32, scope: !9451)
!9492 = !DILocation(line: 72, column: 24, scope: !9451)
!9493 = !DILocation(line: 72, column: 2, scope: !9451)
!9494 = !DILocation(line: 73, column: 1, scope: !9451)
!9495 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !171, file: !171, line: 368, type: !9496, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !9498)
!9496 = !DISubroutineType(types: !9497)
!9497 = !{!137, !2520, !137}
!9498 = !{!9499, !9500}
!9499 = !DILocalVariable(name: "base", arg: 1, scope: !9495, file: !171, line: 368, type: !2520)
!9500 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9495, file: !171, line: 368, type: !137)
!9501 = !DILocation(line: 0, scope: !9495)
!9502 = !DILocation(line: 370, column: 13, scope: !9495)
!9503 = !DILocation(line: 370, column: 58, scope: !9495)
!9504 = !DILocation(line: 370, column: 5, scope: !9495)
!9505 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !9452, file: !9452, line: 81, type: !9506, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !9526)
!9506 = !DISubroutineType(types: !9507)
!9507 = !{!137, !9508}
!9508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9509, size: 32)
!9509 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !455, line: 12462, baseType: !9510)
!9510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 12450, size: 544, elements: !9511)
!9511 = !{!9512, !9513, !9514, !9515, !9516, !9517, !9518, !9519, !9520, !9521, !9525}
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !9510, file: !455, line: 12451, baseType: !532, size: 32)
!9513 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !9510, file: !455, line: 12452, baseType: !459, size: 32, offset: 32)
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !9510, file: !455, line: 12453, baseType: !459, size: 32, offset: 64)
!9515 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !9510, file: !455, line: 12454, baseType: !459, size: 32, offset: 96)
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !9510, file: !455, line: 12455, baseType: !459, size: 32, offset: 128)
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !9510, file: !455, line: 12456, baseType: !459, size: 32, offset: 160)
!9518 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !9510, file: !455, line: 12457, baseType: !459, size: 32, offset: 192)
!9519 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !9510, file: !455, line: 12458, baseType: !459, size: 32, offset: 224)
!9520 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !9510, file: !455, line: 12459, baseType: !459, size: 32, offset: 256)
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9510, file: !455, line: 12460, baseType: !9522, size: 224, offset: 288)
!9522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 224, elements: !9523)
!9523 = !{!9524}
!9524 = !DISubrange(count: 28)
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !9510, file: !455, line: 12461, baseType: !459, size: 32, offset: 512)
!9526 = !{!9527, !9528, !9529, !9530, !9531}
!9527 = !DILocalVariable(name: "base", arg: 1, scope: !9505, file: !9452, line: 81, type: !9508)
!9528 = !DILocalVariable(name: "root", scope: !9505, file: !9452, line: 83, type: !137)
!9529 = !DILocalVariable(name: "hz", scope: !9505, file: !9452, line: 84, type: !137)
!9530 = !DILocalVariable(name: "pre", scope: !9505, file: !9452, line: 85, type: !137)
!9531 = !DILocalVariable(name: "post", scope: !9505, file: !9452, line: 85, type: !137)
!9532 = !DILocation(line: 0, scope: !9505)
!9533 = !DILocation(line: 85, column: 2, scope: !9505)
!9534 = !DILocation(line: 87, column: 10, scope: !9505)
!9535 = !DILocation(line: 87, column: 2, scope: !9505)
!9536 = !DILocation(line: 95, column: 3, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9505, file: !9452, line: 87, column: 26)
!9538 = !DILocation(line: 0, scope: !9537)
!9539 = !DILocation(line: 100, column: 2, scope: !9505)
!9540 = !DILocation(line: 105, column: 8, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9505, file: !9452, line: 100, column: 16)
!9542 = !DILocation(line: 106, column: 3, scope: !9541)
!9543 = !DILocation(line: 0, scope: !9541)
!9544 = !DILocation(line: 111, column: 15, scope: !9505)
!9545 = !DILocation(line: 111, column: 19, scope: !9505)
!9546 = !DILocation(line: 111, column: 12, scope: !9505)
!9547 = !DILocation(line: 111, column: 27, scope: !9505)
!9548 = !DILocation(line: 111, column: 32, scope: !9505)
!9549 = !DILocation(line: 111, column: 24, scope: !9505)
!9550 = !DILocation(line: 111, column: 2, scope: !9505)
!9551 = !DILocation(line: 112, column: 1, scope: !9505)
!9552 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !9452, file: !9452, line: 120, type: !9553, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !9597)
!9553 = !DISubroutineType(types: !9554)
!9554 = !{!137, !9555}
!9555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9556, size: 32)
!9556 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !455, line: 3477, baseType: !9557)
!9557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 3446, size: 20256, elements: !9558)
!9558 = !{!9559, !9560, !9561, !9562, !9564, !9565, !9566, !9567, !9568, !9569, !9570, !9571, !9572, !9573, !9574, !9575, !9577, !9578, !9579, !9580, !9581, !9591, !9593, !9595, !9596}
!9559 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !9557, file: !455, line: 3447, baseType: !459, size: 32)
!9560 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !9557, file: !455, line: 3448, baseType: !459, size: 32, offset: 32)
!9561 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !9557, file: !455, line: 3449, baseType: !459, size: 32, offset: 64)
!9562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9557, file: !455, line: 3450, baseType: !9563, size: 32, offset: 96)
!9563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 32, elements: !1412)
!9564 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !9557, file: !455, line: 3451, baseType: !459, size: 32, offset: 128)
!9565 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !9557, file: !455, line: 3452, baseType: !459, size: 32, offset: 160)
!9566 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !9557, file: !455, line: 3453, baseType: !459, size: 32, offset: 192)
!9567 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !9557, file: !455, line: 3454, baseType: !459, size: 32, offset: 224)
!9568 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !9557, file: !455, line: 3455, baseType: !459, size: 32, offset: 256)
!9569 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !9557, file: !455, line: 3456, baseType: !459, size: 32, offset: 288)
!9570 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !9557, file: !455, line: 3457, baseType: !459, size: 32, offset: 320)
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !9557, file: !455, line: 3458, baseType: !459, size: 32, offset: 352)
!9572 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !9557, file: !455, line: 3459, baseType: !459, size: 32, offset: 384)
!9573 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !9557, file: !455, line: 3460, baseType: !459, size: 32, offset: 416)
!9574 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !9557, file: !455, line: 3461, baseType: !532, size: 32, offset: 448)
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9557, file: !455, line: 3462, baseType: !9576, size: 64, offset: 480)
!9576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 64, elements: !159)
!9577 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !9557, file: !455, line: 3463, baseType: !532, size: 32, offset: 544)
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !9557, file: !455, line: 3464, baseType: !459, size: 32, offset: 576)
!9579 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !9557, file: !455, line: 3465, baseType: !532, size: 32, offset: 608)
!9580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9557, file: !455, line: 3466, baseType: !518, size: 384, offset: 640)
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !9557, file: !455, line: 3472, baseType: !9582, size: 8192, offset: 1024)
!9582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9583, size: 8192, elements: !9589)
!9583 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9557, file: !455, line: 3467, size: 128, elements: !9584)
!9584 = !{!9585, !9586, !9587, !9588}
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !9583, file: !455, line: 3468, baseType: !459, size: 32)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !9583, file: !455, line: 3469, baseType: !459, size: 32, offset: 32)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !9583, file: !455, line: 3470, baseType: !459, size: 32, offset: 64)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !9583, file: !455, line: 3471, baseType: !459, size: 32, offset: 96)
!9589 = !{!9590}
!9590 = !DISubrange(count: 64)
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !9557, file: !455, line: 3473, baseType: !9592, size: 8192, offset: 9216)
!9592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 8192, elements: !1712)
!9593 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !9557, file: !455, line: 3474, baseType: !9594, size: 2048, offset: 17408)
!9594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 2048, elements: !9589)
!9595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !9557, file: !455, line: 3475, baseType: !2421, size: 768, offset: 19456)
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !9557, file: !455, line: 3476, baseType: !459, size: 32, offset: 20224)
!9597 = !{!9598, !9599, !9600, !9601, !9602}
!9598 = !DILocalVariable(name: "base", arg: 1, scope: !9552, file: !9452, line: 120, type: !9555)
!9599 = !DILocalVariable(name: "root", scope: !9552, file: !9452, line: 122, type: !137)
!9600 = !DILocalVariable(name: "hz", scope: !9552, file: !9452, line: 123, type: !137)
!9601 = !DILocalVariable(name: "pre", scope: !9552, file: !9452, line: 124, type: !137)
!9602 = !DILocalVariable(name: "post", scope: !9552, file: !9452, line: 124, type: !137)
!9603 = !DILocation(line: 0, scope: !9552)
!9604 = !DILocation(line: 124, column: 2, scope: !9552)
!9605 = !DILocation(line: 126, column: 10, scope: !9552)
!9606 = !DILocation(line: 126, column: 2, scope: !9552)
!9607 = !DILocation(line: 134, column: 3, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9552, file: !9452, line: 126, column: 26)
!9609 = !DILocation(line: 0, scope: !9608)
!9610 = !DILocation(line: 139, column: 2, scope: !9552)
!9611 = !DILocation(line: 144, column: 8, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9552, file: !9452, line: 139, column: 16)
!9613 = !DILocation(line: 144, column: 45, scope: !9612)
!9614 = !DILocation(line: 145, column: 3, scope: !9612)
!9615 = !DILocation(line: 147, column: 8, scope: !9612)
!9616 = !DILocation(line: 148, column: 3, scope: !9612)
!9617 = !DILocation(line: 0, scope: !9612)
!9618 = !DILocation(line: 153, column: 15, scope: !9552)
!9619 = !DILocation(line: 153, column: 19, scope: !9552)
!9620 = !DILocation(line: 153, column: 12, scope: !9552)
!9621 = !DILocation(line: 153, column: 27, scope: !9552)
!9622 = !DILocation(line: 153, column: 32, scope: !9552)
!9623 = !DILocation(line: 153, column: 24, scope: !9552)
!9624 = !DILocation(line: 153, column: 2, scope: !9552)
!9625 = !DILocation(line: 154, column: 1, scope: !9552)
!9626 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !9452, file: !9452, line: 162, type: !9627, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !9643)
!9627 = !DISubroutineType(types: !9628)
!9628 = !{!137, !9629}
!9629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9630, size: 32)
!9630 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !455, line: 21082, baseType: !9631)
!9631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 21072, size: 144, elements: !9632)
!9632 = !{!9633, !9634, !9636, !9637, !9638, !9639, !9640, !9641, !9642}
!9633 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !9631, file: !455, line: 21073, baseType: !575, size: 16)
!9634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9631, file: !455, line: 21074, baseType: !9635, size: 16, offset: 16)
!9635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 16, elements: !1182)
!9636 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !9631, file: !455, line: 21075, baseType: !575, size: 16, offset: 32)
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9631, file: !455, line: 21076, baseType: !9635, size: 16, offset: 48)
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !9631, file: !455, line: 21077, baseType: !575, size: 16, offset: 64)
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9631, file: !455, line: 21078, baseType: !9635, size: 16, offset: 80)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !9631, file: !455, line: 21079, baseType: !575, size: 16, offset: 96)
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !9631, file: !455, line: 21080, baseType: !9635, size: 16, offset: 112)
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !9631, file: !455, line: 21081, baseType: !575, size: 16, offset: 128)
!9643 = !{!9644, !9645, !9646, !9647, !9648}
!9644 = !DILocalVariable(name: "base", arg: 1, scope: !9626, file: !9452, line: 162, type: !9629)
!9645 = !DILocalVariable(name: "root", scope: !9626, file: !9452, line: 164, type: !137)
!9646 = !DILocalVariable(name: "hz", scope: !9626, file: !9452, line: 165, type: !137)
!9647 = !DILocalVariable(name: "pre", scope: !9626, file: !9452, line: 166, type: !137)
!9648 = !DILocalVariable(name: "post", scope: !9626, file: !9452, line: 166, type: !137)
!9649 = !DILocation(line: 0, scope: !9626)
!9650 = !DILocation(line: 166, column: 2, scope: !9626)
!9651 = !DILocation(line: 168, column: 10, scope: !9626)
!9652 = !DILocation(line: 168, column: 2, scope: !9626)
!9653 = !DILocation(line: 0, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9626, file: !9452, line: 168, column: 26)
!9655 = !DILocation(line: 189, column: 2, scope: !9626)
!9656 = !DILocation(line: 194, column: 8, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9626, file: !9452, line: 189, column: 16)
!9658 = !DILocation(line: 194, column: 45, scope: !9657)
!9659 = !DILocation(line: 195, column: 3, scope: !9657)
!9660 = !DILocation(line: 0, scope: !9657)
!9661 = !DILocation(line: 200, column: 15, scope: !9626)
!9662 = !DILocation(line: 200, column: 19, scope: !9626)
!9663 = !DILocation(line: 200, column: 12, scope: !9626)
!9664 = !DILocation(line: 200, column: 27, scope: !9626)
!9665 = !DILocation(line: 200, column: 32, scope: !9626)
!9666 = !DILocation(line: 200, column: 24, scope: !9626)
!9667 = !DILocation(line: 200, column: 2, scope: !9626)
!9668 = !DILocation(line: 201, column: 1, scope: !9626)
!9669 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !9452, file: !9452, line: 209, type: !9670, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !9695)
!9670 = !DISubroutineType(types: !9671)
!9671 = !{!137, !9672}
!9672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9673, size: 32)
!9673 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !455, line: 41342, baseType: !9674)
!9674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !455, line: 41322, size: 1504, elements: !9675)
!9675 = !{!9676, !9677, !9678, !9679, !9680, !9681, !9682, !9683, !9684, !9685, !9686, !9687, !9688, !9689, !9690, !9691, !9692, !9693, !9694}
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !9674, file: !455, line: 41323, baseType: !532, size: 32)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9674, file: !455, line: 41324, baseType: !1089, size: 480, offset: 32)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !9674, file: !455, line: 41325, baseType: !459, size: 32, offset: 512)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9674, file: !455, line: 41326, baseType: !1089, size: 480, offset: 544)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !9674, file: !455, line: 41327, baseType: !459, size: 32, offset: 1024)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !9674, file: !455, line: 41328, baseType: !459, size: 32, offset: 1056)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !9674, file: !455, line: 41329, baseType: !459, size: 32, offset: 1088)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !9674, file: !455, line: 41330, baseType: !459, size: 32, offset: 1120)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !9674, file: !455, line: 41331, baseType: !459, size: 32, offset: 1152)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !9674, file: !455, line: 41332, baseType: !459, size: 32, offset: 1184)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !9674, file: !455, line: 41333, baseType: !459, size: 32, offset: 1216)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !9674, file: !455, line: 41334, baseType: !459, size: 32, offset: 1248)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !9674, file: !455, line: 41335, baseType: !459, size: 32, offset: 1280)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !9674, file: !455, line: 41336, baseType: !459, size: 32, offset: 1312)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !9674, file: !455, line: 41337, baseType: !459, size: 32, offset: 1344)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !9674, file: !455, line: 41338, baseType: !532, size: 32, offset: 1376)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !9674, file: !455, line: 41339, baseType: !459, size: 32, offset: 1408)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !9674, file: !455, line: 41340, baseType: !459, size: 32, offset: 1440)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !9674, file: !455, line: 41341, baseType: !459, size: 32, offset: 1472)
!9695 = !{!9696, !9697, !9698, !9699, !9700}
!9696 = !DILocalVariable(name: "base", arg: 1, scope: !9669, file: !9452, line: 209, type: !9672)
!9697 = !DILocalVariable(name: "root", scope: !9669, file: !9452, line: 211, type: !137)
!9698 = !DILocalVariable(name: "hz", scope: !9669, file: !9452, line: 212, type: !137)
!9699 = !DILocalVariable(name: "pre", scope: !9669, file: !9452, line: 213, type: !137)
!9700 = !DILocalVariable(name: "post", scope: !9669, file: !9452, line: 213, type: !137)
!9701 = !DILocation(line: 0, scope: !9669)
!9702 = !DILocation(line: 213, column: 2, scope: !9669)
!9703 = !DILocation(line: 215, column: 10, scope: !9669)
!9704 = !DILocation(line: 215, column: 2, scope: !9669)
!9705 = !DILocation(line: 223, column: 3, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9669, file: !9452, line: 215, column: 26)
!9707 = !DILocation(line: 227, column: 3, scope: !9706)
!9708 = !DILocation(line: 231, column: 3, scope: !9706)
!9709 = !DILocation(line: 235, column: 3, scope: !9706)
!9710 = !DILocation(line: 239, column: 3, scope: !9706)
!9711 = !DILocation(line: 243, column: 3, scope: !9706)
!9712 = !DILocation(line: 0, scope: !9706)
!9713 = !DILocation(line: 248, column: 2, scope: !9669)
!9714 = !DILocation(line: 253, column: 8, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9669, file: !9452, line: 248, column: 16)
!9716 = !DILocation(line: 253, column: 45, scope: !9715)
!9717 = !DILocation(line: 254, column: 3, scope: !9715)
!9718 = !DILocation(line: 256, column: 8, scope: !9715)
!9719 = !DILocation(line: 257, column: 3, scope: !9715)
!9720 = !DILocation(line: 0, scope: !9715)
!9721 = !DILocation(line: 262, column: 15, scope: !9669)
!9722 = !DILocation(line: 262, column: 19, scope: !9669)
!9723 = !DILocation(line: 262, column: 12, scope: !9669)
!9724 = !DILocation(line: 262, column: 27, scope: !9669)
!9725 = !DILocation(line: 262, column: 32, scope: !9669)
!9726 = !DILocation(line: 262, column: 24, scope: !9669)
!9727 = !DILocation(line: 262, column: 2, scope: !9669)
!9728 = !DILocation(line: 263, column: 1, scope: !9669)
!9729 = distinct !DISubprogram(name: "z_device_state_init", scope: !9730, file: !9730, line: 23, type: !2671, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !9731)
!9730 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9731 = !{!9732}
!9732 = !DILocalVariable(name: "dev", scope: !9729, file: !9730, line: 25, type: !9733)
!9733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9734, size: 32)
!9734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9735)
!9735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !623, line: 378, size: 192, elements: !9736)
!9736 = !{!9737, !9738, !9739, !9740, !9746, !9747}
!9737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9735, file: !623, line: 380, baseType: !626, size: 32)
!9738 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !9735, file: !623, line: 382, baseType: !13, size: 32, offset: 32)
!9739 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !9735, file: !623, line: 384, baseType: !13, size: 32, offset: 64)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9735, file: !623, line: 386, baseType: !9741, size: 32, offset: 96)
!9741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9742, size: 32)
!9742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !623, line: 351, size: 16, elements: !9743)
!9743 = !{!9744, !9745}
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !9742, file: !623, line: 359, baseType: !465, size: 8)
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !9742, file: !623, line: 364, baseType: !636, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9735, file: !623, line: 388, baseType: !102, size: 32, offset: 128)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !9735, file: !623, line: 396, baseType: !639, size: 32, offset: 160)
!9748 = !DILocation(line: 0, scope: !9729)
!9749 = !DILocation(line: 31, column: 1, scope: !9729)
!9750 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !9730, file: !9730, line: 33, type: !9751, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !9753)
!9751 = !DISubroutineType(types: !9752)
!9752 = !{!9733, !626}
!9753 = !{!9754, !9755}
!9754 = !DILocalVariable(name: "name", arg: 1, scope: !9750, file: !9730, line: 33, type: !626)
!9755 = !DILocalVariable(name: "dev", scope: !9750, file: !9730, line: 35, type: !9733)
!9756 = !DILocation(line: 0, scope: !9750)
!9757 = !DILocation(line: 40, column: 12, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9750, file: !9730, line: 40, column: 6)
!9759 = !DILocation(line: 40, column: 21, scope: !9758)
!9760 = !DILocation(line: 40, column: 25, scope: !9758)
!9761 = !DILocation(line: 40, column: 33, scope: !9758)
!9762 = !DILocation(line: 40, column: 6, scope: !9750)
!9763 = !DILocation(line: 55, column: 2, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9750, file: !9730, line: 55, column: 2)
!9765 = !DILocation(line: 50, column: 7, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9767, file: !9730, line: 50, column: 7)
!9767 = distinct !DILexicalBlock(scope: !9768, file: !9730, line: 49, column: 57)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !9730, line: 49, column: 2)
!9769 = distinct !DILexicalBlock(scope: !9750, file: !9730, line: 49, column: 2)
!9770 = !DILocation(line: 50, column: 30, scope: !9766)
!9771 = !DILocation(line: 50, column: 39, scope: !9766)
!9772 = !DILocation(line: 50, column: 44, scope: !9766)
!9773 = !DILocation(line: 50, column: 7, scope: !9767)
!9774 = !DILocation(line: 49, column: 53, scope: !9768)
!9775 = !DILocation(line: 49, column: 33, scope: !9768)
!9776 = !DILocation(line: 49, column: 2, scope: !9769)
!9777 = distinct !{!9777, !9776, !9778}
!9778 = !DILocation(line: 53, column: 2, scope: !9769)
!9779 = !DILocation(line: 56, column: 7, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9781, file: !9730, line: 56, column: 7)
!9781 = distinct !DILexicalBlock(scope: !9782, file: !9730, line: 55, column: 57)
!9782 = distinct !DILexicalBlock(scope: !9764, file: !9730, line: 55, column: 2)
!9783 = !DILocation(line: 56, column: 30, scope: !9780)
!9784 = !DILocation(line: 56, column: 52, scope: !9780)
!9785 = !DILocation(line: 56, column: 34, scope: !9780)
!9786 = !DILocation(line: 56, column: 58, scope: !9780)
!9787 = !DILocation(line: 56, column: 7, scope: !9781)
!9788 = !DILocation(line: 55, column: 53, scope: !9782)
!9789 = !DILocation(line: 55, column: 33, scope: !9782)
!9790 = distinct !{!9790, !9763, !9791}
!9791 = !DILocation(line: 59, column: 2, scope: !9764)
!9792 = !DILocation(line: 62, column: 1, scope: !9750)
!9793 = distinct !DISubprogram(name: "z_device_is_ready", scope: !9730, file: !9730, line: 93, type: !9794, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !9796)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{!636, !9733}
!9796 = !{!9797}
!9797 = !DILocalVariable(name: "dev", arg: 1, scope: !9793, file: !9730, line: 93, type: !9733)
!9798 = !DILocation(line: 0, scope: !9793)
!9799 = !DILocation(line: 99, column: 10, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9793, file: !9730, line: 99, column: 6)
!9801 = !DILocation(line: 99, column: 6, scope: !9793)
!9802 = !DILocation(line: 103, column: 14, scope: !9793)
!9803 = !DILocation(line: 103, column: 21, scope: !9793)
!9804 = !DILocation(line: 103, column: 33, scope: !9793)
!9805 = !DILocation(line: 103, column: 49, scope: !9793)
!9806 = !DILocation(line: 103, column: 58, scope: !9793)
!9807 = !DILocation(line: 104, column: 1, scope: !9793)
!9808 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !9730, file: !9730, line: 87, type: !9809, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !9812)
!9809 = !DISubroutineType(types: !9810)
!9810 = !{!120, !9811}
!9811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9733, size: 32)
!9812 = !{!9813}
!9813 = !DILocalVariable(name: "devices", arg: 1, scope: !9808, file: !9730, line: 87, type: !9811)
!9814 = !DILocation(line: 0, scope: !9808)
!9815 = !DILocation(line: 89, column: 11, scope: !9808)
!9816 = !DILocation(line: 90, column: 2, scope: !9808)
!9817 = distinct !DISubprogram(name: "device_required_foreach", scope: !9730, file: !9730, line: 125, type: !9818, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !9824)
!9818 = !DISubroutineType(types: !9819)
!9819 = !{!103, !9733, !9820, !102}
!9820 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !623, line: 471, baseType: !9821)
!9821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9822, size: 32)
!9822 = !DISubroutineType(types: !9823)
!9823 = !{!103, !9733, !102}
!9824 = !{!9825, !9826, !9827, !9828, !9829}
!9825 = !DILocalVariable(name: "dev", arg: 1, scope: !9817, file: !9730, line: 125, type: !9733)
!9826 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !9817, file: !9730, line: 126, type: !9820)
!9827 = !DILocalVariable(name: "context", arg: 3, scope: !9817, file: !9730, line: 127, type: !102)
!9828 = !DILocalVariable(name: "handle_count", scope: !9817, file: !9730, line: 129, type: !120)
!9829 = !DILocalVariable(name: "handles", scope: !9817, file: !9730, line: 130, type: !639)
!9830 = !DILocation(line: 0, scope: !9817)
!9831 = !DILocation(line: 129, column: 2, scope: !9817)
!9832 = !DILocation(line: 129, column: 9, scope: !9817)
!9833 = !DILocation(line: 130, column: 35, scope: !9817)
!9834 = !DILocation(line: 132, column: 33, scope: !9817)
!9835 = !DILocation(line: 132, column: 9, scope: !9817)
!9836 = !DILocation(line: 133, column: 1, scope: !9817)
!9837 = !DILocation(line: 132, column: 2, scope: !9817)
!9838 = distinct !DISubprogram(name: "device_required_handles_get", scope: !623, file: !623, line: 493, type: !9839, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !9841)
!9839 = !DISubroutineType(types: !9840)
!9840 = !{!639, !9733, !2085}
!9841 = !{!9842, !9843, !9844, !9845}
!9842 = !DILocalVariable(name: "dev", arg: 1, scope: !9838, file: !623, line: 493, type: !9733)
!9843 = !DILocalVariable(name: "count", arg: 2, scope: !9838, file: !623, line: 493, type: !2085)
!9844 = !DILocalVariable(name: "rv", scope: !9838, file: !623, line: 495, type: !639)
!9845 = !DILocalVariable(name: "i", scope: !9846, file: !623, line: 498, type: !120)
!9846 = distinct !DILexicalBlock(scope: !9847, file: !623, line: 497, column: 18)
!9847 = distinct !DILexicalBlock(scope: !9838, file: !623, line: 497, column: 6)
!9848 = !DILocation(line: 0, scope: !9838)
!9849 = !DILocation(line: 495, column: 35, scope: !9838)
!9850 = !DILocation(line: 497, column: 9, scope: !9847)
!9851 = !DILocation(line: 497, column: 6, scope: !9838)
!9852 = !DILocation(line: 0, scope: !9846)
!9853 = !DILocation(line: 500, column: 11, scope: !9846)
!9854 = !DILocation(line: 500, column: 40, scope: !9846)
!9855 = !DILocation(line: 502, column: 4, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9846, file: !623, line: 501, column: 40)
!9857 = distinct !{!9857, !9858, !9859}
!9858 = !DILocation(line: 500, column: 3, scope: !9846)
!9859 = !DILocation(line: 503, column: 3, scope: !9846)
!9860 = !DILocation(line: 504, column: 10, scope: !9846)
!9861 = !DILocation(line: 505, column: 2, scope: !9846)
!9862 = !DILocation(line: 507, column: 2, scope: !9838)
!9863 = distinct !DISubprogram(name: "device_visitor", scope: !9730, file: !9730, line: 106, type: !9864, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !9866)
!9864 = !DISubroutineType(types: !9865)
!9865 = !{!103, !639, !120, !9820, !102}
!9866 = !{!9867, !9868, !9869, !9870, !9871, !9873, !9876, !9877}
!9867 = !DILocalVariable(name: "handles", arg: 1, scope: !9863, file: !9730, line: 106, type: !639)
!9868 = !DILocalVariable(name: "handle_count", arg: 2, scope: !9863, file: !9730, line: 107, type: !120)
!9869 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !9863, file: !9730, line: 108, type: !9820)
!9870 = !DILocalVariable(name: "context", arg: 4, scope: !9863, file: !9730, line: 109, type: !102)
!9871 = !DILocalVariable(name: "i", scope: !9872, file: !9730, line: 112, type: !120)
!9872 = distinct !DILexicalBlock(scope: !9863, file: !9730, line: 112, column: 2)
!9873 = !DILocalVariable(name: "dh", scope: !9874, file: !9730, line: 113, type: !641)
!9874 = distinct !DILexicalBlock(scope: !9875, file: !9730, line: 112, column: 44)
!9875 = distinct !DILexicalBlock(scope: !9872, file: !9730, line: 112, column: 2)
!9876 = !DILocalVariable(name: "rdev", scope: !9874, file: !9730, line: 114, type: !9733)
!9877 = !DILocalVariable(name: "rc", scope: !9874, file: !9730, line: 115, type: !103)
!9878 = !DILocation(line: 0, scope: !9863)
!9879 = !DILocation(line: 0, scope: !9872)
!9880 = !DILocation(line: 112, column: 23, scope: !9875)
!9881 = !DILocation(line: 112, column: 2, scope: !9872)
!9882 = distinct !{!9882, !9881, !9883}
!9883 = !DILocation(line: 120, column: 2, scope: !9872)
!9884 = !DILocation(line: 113, column: 24, scope: !9874)
!9885 = !DILocation(line: 0, scope: !9874)
!9886 = !DILocation(line: 114, column: 31, scope: !9874)
!9887 = !DILocation(line: 115, column: 12, scope: !9874)
!9888 = !DILocation(line: 117, column: 10, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9874, file: !9730, line: 117, column: 7)
!9890 = !DILocation(line: 112, column: 39, scope: !9875)
!9891 = !DILocation(line: 123, column: 1, scope: !9863)
!9892 = distinct !DISubprogram(name: "device_from_handle", scope: !623, file: !623, line: 439, type: !9893, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !9895)
!9893 = !DISubroutineType(types: !9894)
!9894 = !{!9733, !641}
!9895 = !{!9896, !9897, !9898}
!9896 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !9892, file: !623, line: 439, type: !641)
!9897 = !DILocalVariable(name: "dev", scope: !9892, file: !623, line: 443, type: !9733)
!9898 = !DILocalVariable(name: "numdev", scope: !9892, file: !623, line: 444, type: !120)
!9899 = !DILocation(line: 0, scope: !9892)
!9900 = !DILocation(line: 446, column: 7, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9892, file: !623, line: 446, column: 6)
!9902 = !DILocation(line: 446, column: 18, scope: !9901)
!9903 = !DILocation(line: 446, column: 23, scope: !9901)
!9904 = !DILocation(line: 450, column: 2, scope: !9892)
!9905 = distinct !DISubprogram(name: "device_supported_foreach", scope: !9730, file: !9730, line: 135, type: !9818, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !9906)
!9906 = !{!9907, !9908, !9909, !9910, !9911}
!9907 = !DILocalVariable(name: "dev", arg: 1, scope: !9905, file: !9730, line: 135, type: !9733)
!9908 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !9905, file: !9730, line: 136, type: !9820)
!9909 = !DILocalVariable(name: "context", arg: 3, scope: !9905, file: !9730, line: 137, type: !102)
!9910 = !DILocalVariable(name: "handle_count", scope: !9905, file: !9730, line: 139, type: !120)
!9911 = !DILocalVariable(name: "handles", scope: !9905, file: !9730, line: 140, type: !639)
!9912 = !DILocation(line: 0, scope: !9905)
!9913 = !DILocation(line: 139, column: 2, scope: !9905)
!9914 = !DILocation(line: 139, column: 9, scope: !9905)
!9915 = !DILocation(line: 140, column: 35, scope: !9905)
!9916 = !DILocation(line: 142, column: 33, scope: !9905)
!9917 = !DILocation(line: 142, column: 9, scope: !9905)
!9918 = !DILocation(line: 143, column: 1, scope: !9905)
!9919 = !DILocation(line: 142, column: 2, scope: !9905)
!9920 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !623, file: !623, line: 573, type: !9839, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !9921)
!9921 = !{!9922, !9923, !9924, !9925, !9926}
!9922 = !DILocalVariable(name: "dev", arg: 1, scope: !9920, file: !623, line: 573, type: !9733)
!9923 = !DILocalVariable(name: "count", arg: 2, scope: !9920, file: !623, line: 573, type: !2085)
!9924 = !DILocalVariable(name: "rv", scope: !9920, file: !623, line: 575, type: !639)
!9925 = !DILocalVariable(name: "region", scope: !9920, file: !623, line: 576, type: !120)
!9926 = !DILocalVariable(name: "i", scope: !9920, file: !623, line: 577, type: !120)
!9927 = !DILocation(line: 0, scope: !9920)
!9928 = !DILocation(line: 575, column: 35, scope: !9920)
!9929 = !DILocation(line: 579, column: 9, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9920, file: !623, line: 579, column: 6)
!9931 = !DILocation(line: 579, column: 6, scope: !9920)
!9932 = !DILocation(line: 582, column: 8, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9934, file: !623, line: 582, column: 8)
!9934 = distinct !DILexicalBlock(scope: !9935, file: !623, line: 581, column: 23)
!9935 = distinct !DILexicalBlock(scope: !9930, file: !623, line: 579, column: 18)
!9936 = !DILocation(line: 582, column: 12, scope: !9933)
!9937 = !DILocation(line: 585, column: 6, scope: !9934)
!9938 = !DILocation(line: 0, scope: !9935)
!9939 = !DILocation(line: 581, column: 17, scope: !9935)
!9940 = !DILocation(line: 581, column: 3, scope: !9935)
!9941 = !DILocation(line: 588, column: 10, scope: !9935)
!9942 = !DILocation(line: 588, column: 16, scope: !9935)
!9943 = !DILocation(line: 589, column: 4, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9935, file: !623, line: 588, column: 39)
!9945 = !DILocation(line: 588, column: 3, scope: !9935)
!9946 = distinct !{!9946, !9945, !9947}
!9947 = !DILocation(line: 590, column: 3, scope: !9935)
!9948 = !DILocation(line: 591, column: 10, scope: !9935)
!9949 = !DILocation(line: 592, column: 2, scope: !9935)
!9950 = !DILocation(line: 575, column: 25, scope: !9920)
!9951 = !DILocation(line: 594, column: 2, scope: !9920)
!9952 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1493, file: !1493, line: 49, type: !9953, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1490, retainedNodes: !162)
!9953 = !DISubroutineType(types: !9954)
!9954 = !{!2078}
!9955 = !DILocation(line: 51, column: 10, scope: !9952)
!9956 = !DILocation(line: 51, column: 20, scope: !9952)
!9957 = !DILocation(line: 51, column: 2, scope: !9952)
!9958 = distinct !DISubprogram(name: "coredump", scope: !2638, file: !2638, line: 209, type: !9959, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10099)
!9959 = !DISubroutineType(types: !9960)
!9960 = !{null, !32, !9961, !10005}
!9961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9962, size: 32)
!9962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9963)
!9963 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2211, line: 141, baseType: !9964)
!9964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2211, line: 97, size: 256, elements: !9965)
!9965 = !{!9966}
!9966 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !9964, file: !2211, line: 107, baseType: !9967, size: 256)
!9967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2211, line: 98, size: 256, elements: !9968)
!9968 = !{!9969, !9974, !9979, !9984, !9989, !9994, !9999, !10004}
!9969 = !DIDerivedType(tag: DW_TAG_member, scope: !9967, file: !2211, line: 99, baseType: !9970, size: 32)
!9970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9967, file: !2211, line: 99, size: 32, elements: !9971)
!9971 = !{!9972, !9973}
!9972 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !9970, file: !2211, line: 99, baseType: !137, size: 32)
!9973 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !9970, file: !2211, line: 99, baseType: !137, size: 32)
!9974 = !DIDerivedType(tag: DW_TAG_member, scope: !9967, file: !2211, line: 100, baseType: !9975, size: 32, offset: 32)
!9975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9967, file: !2211, line: 100, size: 32, elements: !9976)
!9976 = !{!9977, !9978}
!9977 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !9975, file: !2211, line: 100, baseType: !137, size: 32)
!9978 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !9975, file: !2211, line: 100, baseType: !137, size: 32)
!9979 = !DIDerivedType(tag: DW_TAG_member, scope: !9967, file: !2211, line: 101, baseType: !9980, size: 32, offset: 64)
!9980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9967, file: !2211, line: 101, size: 32, elements: !9981)
!9981 = !{!9982, !9983}
!9982 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !9980, file: !2211, line: 101, baseType: !137, size: 32)
!9983 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !9980, file: !2211, line: 101, baseType: !137, size: 32)
!9984 = !DIDerivedType(tag: DW_TAG_member, scope: !9967, file: !2211, line: 102, baseType: !9985, size: 32, offset: 96)
!9985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9967, file: !2211, line: 102, size: 32, elements: !9986)
!9986 = !{!9987, !9988}
!9987 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !9985, file: !2211, line: 102, baseType: !137, size: 32)
!9988 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !9985, file: !2211, line: 102, baseType: !137, size: 32)
!9989 = !DIDerivedType(tag: DW_TAG_member, scope: !9967, file: !2211, line: 103, baseType: !9990, size: 32, offset: 128)
!9990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9967, file: !2211, line: 103, size: 32, elements: !9991)
!9991 = !{!9992, !9993}
!9992 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !9990, file: !2211, line: 103, baseType: !137, size: 32)
!9993 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !9990, file: !2211, line: 103, baseType: !137, size: 32)
!9994 = !DIDerivedType(tag: DW_TAG_member, scope: !9967, file: !2211, line: 104, baseType: !9995, size: 32, offset: 160)
!9995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9967, file: !2211, line: 104, size: 32, elements: !9996)
!9996 = !{!9997, !9998}
!9997 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !9995, file: !2211, line: 104, baseType: !137, size: 32)
!9998 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !9995, file: !2211, line: 104, baseType: !137, size: 32)
!9999 = !DIDerivedType(tag: DW_TAG_member, scope: !9967, file: !2211, line: 105, baseType: !10000, size: 32, offset: 192)
!10000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9967, file: !2211, line: 105, size: 32, elements: !10001)
!10001 = !{!10002, !10003}
!10002 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10000, file: !2211, line: 105, baseType: !137, size: 32)
!10003 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10000, file: !2211, line: 105, baseType: !137, size: 32)
!10004 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !9967, file: !2211, line: 106, baseType: !137, size: 32, offset: 224)
!10005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10006, size: 32)
!10006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1595, line: 245, size: 896, elements: !10007)
!10007 = !{!10008, !10066, !10078, !10079, !10080, !10081, !10094}
!10008 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10006, file: !1595, line: 247, baseType: !10009, size: 384)
!10009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1595, line: 57, size: 384, elements: !10010)
!10010 = !{!10011, !10035, !10042, !10043, !10044, !10053, !10054, !10055}
!10011 = !DIDerivedType(tag: DW_TAG_member, scope: !10009, file: !1595, line: 60, baseType: !10012, size: 64)
!10012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10009, file: !1595, line: 60, size: 64, elements: !10013)
!10013 = !{!10014, !10029}
!10014 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10012, file: !1595, line: 61, baseType: !10015, size: 64)
!10015 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !1605, line: 49, baseType: !10016)
!10016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !1605, line: 37, size: 64, elements: !10017)
!10017 = !{!10018, !10024}
!10018 = !DIDerivedType(tag: DW_TAG_member, scope: !10016, file: !1605, line: 38, baseType: !10019, size: 32)
!10019 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10016, file: !1605, line: 38, size: 32, elements: !10020)
!10020 = !{!10021, !10023}
!10021 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10019, file: !1605, line: 39, baseType: !10022, size: 32)
!10022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10016, size: 32)
!10023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10019, file: !1605, line: 40, baseType: !10022, size: 32)
!10024 = !DIDerivedType(tag: DW_TAG_member, scope: !10016, file: !1605, line: 42, baseType: !10025, size: 32, offset: 32)
!10025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10016, file: !1605, line: 42, size: 32, elements: !10026)
!10026 = !{!10027, !10028}
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10025, file: !1605, line: 43, baseType: !10022, size: 32)
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10025, file: !1605, line: 44, baseType: !10022, size: 32)
!10029 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10012, file: !1595, line: 62, baseType: !10030, size: 64)
!10030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1621, line: 49, size: 64, elements: !10031)
!10031 = !{!10032}
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10030, file: !1621, line: 50, baseType: !10033, size: 64)
!10033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10034, size: 64, elements: !1182)
!10034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10030, size: 32)
!10035 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10009, file: !1595, line: 68, baseType: !10036, size: 32, offset: 64)
!10036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10037, size: 32)
!10037 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !1584, line: 233, baseType: !10038)
!10038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1584, line: 231, size: 64, elements: !10039)
!10039 = !{!10040}
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10038, file: !1584, line: 232, baseType: !10041, size: 64)
!10041 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !1605, line: 48, baseType: !10016)
!10042 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10009, file: !1595, line: 71, baseType: !465, size: 8, offset: 96)
!10043 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10009, file: !1595, line: 74, baseType: !465, size: 8, offset: 104)
!10044 = !DIDerivedType(tag: DW_TAG_member, scope: !10009, file: !1595, line: 90, baseType: !10045, size: 16, offset: 112)
!10045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10009, file: !1595, line: 90, size: 16, elements: !10046)
!10046 = !{!10047, !10052}
!10047 = !DIDerivedType(tag: DW_TAG_member, scope: !10045, file: !1595, line: 91, baseType: !10048, size: 16)
!10048 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10045, file: !1595, line: 91, size: 16, elements: !10049)
!10049 = !{!10050, !10051}
!10050 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10048, file: !1595, line: 96, baseType: !1642, size: 8)
!10051 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10048, file: !1595, line: 97, baseType: !465, size: 8, offset: 8)
!10052 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10045, file: !1595, line: 100, baseType: !151, size: 16)
!10053 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10009, file: !1595, line: 107, baseType: !137, size: 32, offset: 128)
!10054 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10009, file: !1595, line: 127, baseType: !102, size: 32, offset: 160)
!10055 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10009, file: !1595, line: 131, baseType: !10056, size: 192, offset: 192)
!10056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !1584, line: 244, size: 192, elements: !10057)
!10057 = !{!10058, !10059, !10065}
!10058 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10056, file: !1584, line: 245, baseType: !10015, size: 64)
!10059 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10056, file: !1584, line: 246, baseType: !10060, size: 32, offset: 64)
!10060 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !1584, line: 242, baseType: !10061)
!10061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10062, size: 32)
!10062 = !DISubroutineType(types: !10063)
!10063 = !{null, !10064}
!10064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10056, size: 32)
!10065 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10056, file: !1584, line: 249, baseType: !1343, size: 64, offset: 128)
!10066 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10006, file: !1595, line: 250, baseType: !10067, size: 288, offset: 384)
!10067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1661, line: 25, size: 288, elements: !10068)
!10068 = !{!10069, !10070, !10071, !10072, !10073, !10074, !10075, !10076, !10077}
!10069 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10067, file: !1661, line: 26, baseType: !137, size: 32)
!10070 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10067, file: !1661, line: 27, baseType: !137, size: 32, offset: 32)
!10071 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10067, file: !1661, line: 28, baseType: !137, size: 32, offset: 64)
!10072 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10067, file: !1661, line: 29, baseType: !137, size: 32, offset: 96)
!10073 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10067, file: !1661, line: 30, baseType: !137, size: 32, offset: 128)
!10074 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10067, file: !1661, line: 31, baseType: !137, size: 32, offset: 160)
!10075 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10067, file: !1661, line: 32, baseType: !137, size: 32, offset: 192)
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10067, file: !1661, line: 33, baseType: !137, size: 32, offset: 224)
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10067, file: !1661, line: 34, baseType: !137, size: 32, offset: 256)
!10078 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10006, file: !1595, line: 253, baseType: !102, size: 32, offset: 672)
!10079 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10006, file: !1595, line: 256, baseType: !10037, size: 64, offset: 704)
!10080 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10006, file: !1595, line: 294, baseType: !103, size: 32, offset: 768)
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10006, file: !1595, line: 325, baseType: !10082, size: 32, offset: 800)
!10082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10083, size: 32)
!10083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !1678, line: 5073, size: 160, elements: !10084)
!10084 = !{!10085, !10091, !10092}
!10085 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10083, file: !1678, line: 5074, baseType: !10086, size: 96)
!10086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !10087)
!10087 = !{!10088, !10089, !10090}
!10088 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10086, file: !113, line: 57, baseType: !116, size: 32)
!10089 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10086, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10086, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!10091 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10083, file: !1678, line: 5075, baseType: !10037, size: 64, offset: 96)
!10092 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10083, file: !1678, line: 5076, baseType: !10093, offset: 160)
!10093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1451, line: 43, elements: !162)
!10094 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10006, file: !1595, line: 343, baseType: !10095, size: 64, offset: 832)
!10095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1661, line: 60, size: 64, elements: !10096)
!10096 = !{!10097, !10098}
!10097 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10095, file: !1661, line: 63, baseType: !137, size: 32)
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10095, file: !1661, line: 66, baseType: !137, size: 32, offset: 32)
!10099 = !{!10100, !10101, !10102}
!10100 = !DILocalVariable(name: "reason", arg: 1, scope: !9958, file: !2638, line: 209, type: !32)
!10101 = !DILocalVariable(name: "esf", arg: 2, scope: !9958, file: !2638, line: 209, type: !9961)
!10102 = !DILocalVariable(name: "thread", arg: 3, scope: !9958, file: !2638, line: 210, type: !10005)
!10103 = !DILocation(line: 0, scope: !9958)
!10104 = !DILocation(line: 212, column: 1, scope: !9958)
!10105 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2638, file: !2638, line: 214, type: !10106, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10108)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{null, !22, !22}
!10108 = !{!10109, !10110}
!10109 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10105, file: !2638, line: 214, type: !22)
!10110 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10105, file: !2638, line: 214, type: !22)
!10111 = !DILocation(line: 0, scope: !10105)
!10112 = !DILocation(line: 216, column: 1, scope: !10105)
!10113 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2638, file: !2638, line: 218, type: !10114, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10116)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{null, !681, !120}
!10116 = !{!10117, !10118}
!10117 = !DILocalVariable(name: "buf", arg: 1, scope: !10113, file: !2638, line: 218, type: !681)
!10118 = !DILocalVariable(name: "buflen", arg: 2, scope: !10113, file: !2638, line: 218, type: !120)
!10119 = !DILocation(line: 0, scope: !10113)
!10120 = !DILocation(line: 220, column: 1, scope: !10113)
!10121 = distinct !DISubprogram(name: "coredump_query", scope: !2638, file: !2638, line: 222, type: !10122, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10124)
!10122 = !DISubroutineType(types: !10123)
!10123 = !{!103, !2637, !102}
!10124 = !{!10125, !10126}
!10125 = !DILocalVariable(name: "query_id", arg: 1, scope: !10121, file: !2638, line: 222, type: !2637)
!10126 = !DILocalVariable(name: "arg", arg: 2, scope: !10121, file: !2638, line: 222, type: !102)
!10127 = !DILocation(line: 0, scope: !10121)
!10128 = !DILocation(line: 224, column: 2, scope: !10121)
!10129 = distinct !DISubprogram(name: "coredump_cmd", scope: !2638, file: !2638, line: 227, type: !10130, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10132)
!10130 = !DISubroutineType(types: !10131)
!10131 = !{!103, !2644, !102}
!10132 = !{!10133, !10134}
!10133 = !DILocalVariable(name: "query_id", arg: 1, scope: !10129, file: !2638, line: 227, type: !2644)
!10134 = !DILocalVariable(name: "arg", arg: 2, scope: !10129, file: !2638, line: 227, type: !102)
!10135 = !DILocation(line: 0, scope: !10129)
!10136 = !DILocation(line: 229, column: 2, scope: !10129)
!10137 = distinct !DISubprogram(name: "arch_system_halt", scope: !10138, file: !10138, line: 23, type: !6031, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10139)
!10138 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10139 = !{!10140}
!10140 = !DILocalVariable(name: "reason", arg: 1, scope: !10137, file: !10138, line: 23, type: !32)
!10141 = !DILocation(line: 0, scope: !10137)
!10142 = !DILocation(line: 55, column: 2, scope: !10143, inlinedAt: !10147)
!10143 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !7636, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10144)
!10144 = !{!10145, !10146}
!10145 = !DILocalVariable(name: "key", scope: !10143, file: !6193, line: 44, type: !32)
!10146 = !DILocalVariable(name: "tmp", scope: !10143, file: !6193, line: 53, type: !32)
!10147 = distinct !DILocation(line: 31, column: 8, scope: !10137)
!10148 = !{i64 2842615}
!10149 = !DILocation(line: 0, scope: !10143, inlinedAt: !10147)
!10150 = !DILocation(line: 32, column: 2, scope: !10137)
!10151 = !DILocation(line: 32, column: 2, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10153, file: !10138, line: 32, column: 2)
!10153 = distinct !DILexicalBlock(scope: !10137, file: !10138, line: 32, column: 2)
!10154 = distinct !{!10154, !10155, !10156}
!10155 = !DILocation(line: 32, column: 2, scope: !10153)
!10156 = !DILocation(line: 34, column: 2, scope: !10153)
!10157 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10138, file: !10138, line: 39, type: !10158, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10160)
!10158 = !DISubroutineType(types: !10159)
!10159 = !{null, !32, !9961}
!10160 = !{!10161, !10162}
!10161 = !DILocalVariable(name: "reason", arg: 1, scope: !10157, file: !10138, line: 39, type: !32)
!10162 = !DILocalVariable(name: "esf", arg: 2, scope: !10157, file: !10138, line: 40, type: !9961)
!10163 = !DILocation(line: 0, scope: !10157)
!10164 = !DILocation(line: 46, column: 2, scope: !10157)
!10165 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10138, file: !10138, line: 81, type: !6031, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10166)
!10166 = !{!10167}
!10167 = !DILocalVariable(name: "reason", arg: 1, scope: !10165, file: !10138, line: 81, type: !32)
!10168 = !DILocation(line: 0, scope: !10165)
!10169 = !DILocation(line: 83, column: 2, scope: !10165)
!10170 = distinct !DISubprogram(name: "z_fatal_error", scope: !10138, file: !10138, line: 96, type: !10158, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10171)
!10171 = !{!10172, !10173, !10174, !10175}
!10172 = !DILocalVariable(name: "reason", arg: 1, scope: !10170, file: !10138, line: 96, type: !32)
!10173 = !DILocalVariable(name: "esf", arg: 2, scope: !10170, file: !10138, line: 96, type: !9961)
!10174 = !DILocalVariable(name: "key", scope: !10170, file: !10138, line: 102, type: !32)
!10175 = !DILocalVariable(name: "thread", scope: !10170, file: !10138, line: 103, type: !10005)
!10176 = !DILocation(line: 0, scope: !10170)
!10177 = !DILocation(line: 55, column: 2, scope: !10143, inlinedAt: !10178)
!10178 = distinct !DILocation(line: 102, column: 21, scope: !10170)
!10179 = !DILocation(line: 0, scope: !10143, inlinedAt: !10178)
!10180 = !DILocation(line: 119, column: 11, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10170, file: !10138, line: 119, column: 6)
!10182 = !DILocation(line: 119, column: 20, scope: !10181)
!10183 = !DILocation(line: 131, column: 2, scope: !10170)
!10184 = !DILocation(line: 151, column: 7, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10186, file: !10138, line: 146, column: 32)
!10186 = distinct !DILexicalBlock(scope: !10170, file: !10138, line: 146, column: 6)
!10187 = !DILocation(line: 151, column: 21, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10185, file: !10138, line: 151, column: 7)
!10189 = !DILocation(line: 104, column: 4, scope: !10170)
!10190 = !DILocalVariable(name: "key", arg: 1, scope: !10191, file: !6193, line: 84, type: !32)
!10191 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6031, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10192)
!10192 = !{!10190}
!10193 = !DILocation(line: 0, scope: !10191, inlinedAt: !10194)
!10194 = distinct !DILocation(line: 186, column: 2, scope: !10170)
!10195 = !DILocation(line: 95, column: 2, scope: !10191, inlinedAt: !10194)
!10196 = !{i64 2843432}
!10197 = !DILocation(line: 189, column: 3, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10199, file: !10138, line: 188, column: 41)
!10199 = distinct !DILexicalBlock(scope: !10170, file: !10138, line: 188, column: 6)
!10200 = !DILocation(line: 191, column: 1, scope: !10170)
!10201 = distinct !DISubprogram(name: "k_current_get", scope: !1678, file: !1678, line: 530, type: !10202, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !162)
!10202 = !DISubroutineType(types: !10203)
!10203 = !{!10204}
!10204 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1595, line: 347, baseType: !10005)
!10205 = !DILocation(line: 535, column: 9, scope: !10201)
!10206 = !DILocation(line: 535, column: 2, scope: !10201)
!10207 = distinct !DISubprogram(name: "k_thread_abort", scope: !3105, file: !3105, line: 188, type: !10208, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10210)
!10208 = !DISubroutineType(types: !10209)
!10209 = !{null, !10204}
!10210 = !{!10211}
!10211 = !DILocalVariable(name: "thread", arg: 1, scope: !10207, file: !3105, line: 188, type: !10204)
!10212 = !DILocation(line: 0, scope: !10207)
!10213 = !DILocation(line: 197, column: 2, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10207, file: !3105, line: 197, column: 2)
!10215 = !{i64 2151037165}
!10216 = !DILocation(line: 198, column: 2, scope: !10207)
!10217 = !DILocation(line: 199, column: 1, scope: !10207)
!10218 = distinct !DISubprogram(name: "z_current_get", scope: !3105, file: !3105, line: 173, type: !10202, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !162)
!10219 = !DILocation(line: 180, column: 2, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10218, file: !3105, line: 180, column: 2)
!10221 = !{i64 2151037097}
!10222 = !DILocation(line: 181, column: 9, scope: !10218)
!10223 = !DILocation(line: 181, column: 2, scope: !10218)
!10224 = distinct !DISubprogram(name: "z_early_memset", scope: !1500, file: !1500, line: 108, type: !10225, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10227)
!10225 = !DISubroutineType(types: !10226)
!10226 = !{null, !102, !103, !120}
!10227 = !{!10228, !10229, !10230}
!10228 = !DILocalVariable(name: "dst", arg: 1, scope: !10224, file: !1500, line: 108, type: !102)
!10229 = !DILocalVariable(name: "c", arg: 2, scope: !10224, file: !1500, line: 108, type: !103)
!10230 = !DILocalVariable(name: "n", arg: 3, scope: !10224, file: !1500, line: 108, type: !120)
!10231 = !DILocation(line: 0, scope: !10224)
!10232 = !DILocation(line: 110, column: 9, scope: !10224)
!10233 = !DILocation(line: 111, column: 1, scope: !10224)
!10234 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1500, file: !1500, line: 121, type: !10235, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10237)
!10235 = !DISubroutineType(types: !10236)
!10236 = !{null, !102, !13, !120}
!10237 = !{!10238, !10239, !10240}
!10238 = !DILocalVariable(name: "dst", arg: 1, scope: !10234, file: !1500, line: 121, type: !102)
!10239 = !DILocalVariable(name: "src", arg: 2, scope: !10234, file: !1500, line: 121, type: !13)
!10240 = !DILocalVariable(name: "n", arg: 3, scope: !10234, file: !1500, line: 121, type: !120)
!10241 = !DILocation(line: 0, scope: !10234)
!10242 = !DILocation(line: 123, column: 9, scope: !10234)
!10243 = !DILocation(line: 124, column: 1, scope: !10234)
!10244 = distinct !DISubprogram(name: "z_bss_zero", scope: !1500, file: !1500, line: 132, type: !2671, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !162)
!10245 = !DILocation(line: 143, column: 2, scope: !10244)
!10246 = !DILocation(line: 168, column: 1, scope: !10244)
!10247 = distinct !DISubprogram(name: "z_init_cpu", scope: !1500, file: !1500, line: 372, type: !10248, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10250)
!10248 = !DISubroutineType(types: !10249)
!10249 = !{null, !103}
!10250 = !{!10251}
!10251 = !DILocalVariable(name: "id", arg: 1, scope: !10247, file: !1500, line: 372, type: !103)
!10252 = !DILocation(line: 0, scope: !10247)
!10253 = !DILocation(line: 374, column: 2, scope: !10247)
!10254 = !DILocation(line: 375, column: 34, scope: !10247)
!10255 = !DILocation(line: 375, column: 19, scope: !10247)
!10256 = !DILocation(line: 375, column: 31, scope: !10247)
!10257 = !DILocation(line: 376, column: 24, scope: !10247)
!10258 = !DILocation(line: 376, column: 19, scope: !10247)
!10259 = !DILocation(line: 376, column: 22, scope: !10247)
!10260 = !DILocation(line: 378, column: 26, scope: !10247)
!10261 = !DILocation(line: 378, column: 4, scope: !10247)
!10262 = !DILocation(line: 378, column: 50, scope: !10247)
!10263 = !DILocation(line: 377, column: 19, scope: !10247)
!10264 = !DILocation(line: 377, column: 29, scope: !10247)
!10265 = !DILocation(line: 384, column: 1, scope: !10247)
!10266 = distinct !DISubprogram(name: "init_idle_thread", scope: !1500, file: !1500, line: 343, type: !10248, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10267)
!10267 = !{!10268, !10269, !10270, !10273}
!10268 = !DILocalVariable(name: "i", arg: 1, scope: !10266, file: !1500, line: 343, type: !103)
!10269 = !DILocalVariable(name: "thread", scope: !10266, file: !1500, line: 345, type: !1593)
!10270 = !DILocalVariable(name: "stack", scope: !10266, file: !1500, line: 346, type: !10271)
!10271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10272, size: 32)
!10272 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !2990, line: 44, baseType: !1708)
!10273 = !DILocalVariable(name: "tname", scope: !10266, file: !1500, line: 358, type: !818)
!10274 = !DILocation(line: 0, scope: !10266)
!10275 = !DILocation(line: 345, column: 29, scope: !10266)
!10276 = !DILocation(line: 346, column: 28, scope: !10266)
!10277 = !DILocation(line: 362, column: 37, scope: !10266)
!10278 = !DILocation(line: 362, column: 36, scope: !10266)
!10279 = !DILocation(line: 361, column: 2, scope: !10266)
!10280 = !DILocation(line: 365, column: 2, scope: !10266)
!10281 = !DILocation(line: 370, column: 1, scope: !10266)
!10282 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1709, file: !1709, line: 331, type: !10283, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10285)
!10283 = !DISubroutineType(types: !10284)
!10284 = !{!818, !10271}
!10285 = !{!10286}
!10286 = !DILocalVariable(name: "sym", arg: 1, scope: !10282, file: !1709, line: 331, type: !10271)
!10287 = !DILocation(line: 0, scope: !10282)
!10288 = !DILocation(line: 333, column: 9, scope: !10282)
!10289 = !DILocation(line: 333, column: 2, scope: !10282)
!10290 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10291, file: !10291, line: 155, type: !10292, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10294)
!10291 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10292 = !DISubroutineType(types: !10293)
!10293 = !{null, !1593}
!10294 = !{!10295}
!10295 = !DILocalVariable(name: "thread", arg: 1, scope: !10290, file: !10291, line: 155, type: !1593)
!10296 = !DILocation(line: 0, scope: !10290)
!10297 = !DILocation(line: 157, column: 15, scope: !10290)
!10298 = !DILocation(line: 157, column: 28, scope: !10290)
!10299 = !DILocation(line: 158, column: 1, scope: !10290)
!10300 = distinct !DISubprogram(name: "z_cstart", scope: !1500, file: !1500, line: 501, type: !2671, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10301)
!10301 = !{!10302}
!10302 = !DILocalVariable(name: "dummy_thread", scope: !10300, file: !1500, line: 518, type: !1594)
!10303 = !DILocation(line: 507, column: 2, scope: !10300)
!10304 = !DILocation(line: 43, column: 14, scope: !10305, inlinedAt: !10309)
!10305 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10306, file: !10306, line: 40, type: !2671, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10307)
!10306 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10307 = !{!10308}
!10308 = !DILocalVariable(name: "msp", scope: !10305, file: !10306, line: 42, type: !137)
!10309 = distinct !DILocation(line: 44, column: 2, scope: !10310, inlinedAt: !10312)
!10310 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10311, file: !10311, line: 42, type: !2671, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !162)
!10311 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10312 = distinct !DILocation(line: 510, column: 2, scope: !10300)
!10313 = !DILocation(line: 43, column: 3, scope: !10305, inlinedAt: !10309)
!10314 = !DILocation(line: 43, column: 60, scope: !10305, inlinedAt: !10309)
!10315 = !DILocation(line: 0, scope: !10305, inlinedAt: !10309)
!10316 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10317, file: !6080, line: 1153, type: !137)
!10317 = distinct !DISubprogram(name: "__set_MSP", scope: !6080, file: !6080, line: 1153, type: !6169, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10318)
!10318 = !{!10316}
!10319 = !DILocation(line: 0, scope: !10317, inlinedAt: !10320)
!10320 = distinct !DILocation(line: 46, column: 2, scope: !10305, inlinedAt: !10309)
!10321 = !DILocation(line: 1155, column: 3, scope: !10317, inlinedAt: !10320)
!10322 = !{i64 7497805}
!10323 = !DILocation(line: 62, column: 11, scope: !10305, inlinedAt: !10309)
!10324 = !DILocation(line: 102, column: 2, scope: !10325, inlinedAt: !10326)
!10325 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6813, file: !6813, line: 97, type: !2671, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !162)
!10326 = distinct !DILocation(line: 45, column: 2, scope: !10310, inlinedAt: !10312)
!10327 = !DILocation(line: 108, column: 2, scope: !10325, inlinedAt: !10326)
!10328 = !DILocation(line: 112, column: 2, scope: !10325, inlinedAt: !10326)
!10329 = !DILocation(line: 113, column: 2, scope: !10325, inlinedAt: !10326)
!10330 = !DILocation(line: 114, column: 2, scope: !10325, inlinedAt: !10326)
!10331 = !DILocation(line: 116, column: 2, scope: !10325, inlinedAt: !10326)
!10332 = !DILocation(line: 123, column: 13, scope: !10325, inlinedAt: !10326)
!10333 = !DILocation(line: 46, column: 2, scope: !10310, inlinedAt: !10312)
!10334 = !DILocation(line: 47, column: 2, scope: !10310, inlinedAt: !10312)
!10335 = !DILocation(line: 174, column: 12, scope: !10336, inlinedAt: !10337)
!10336 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6813, file: !6813, line: 169, type: !2671, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !162)
!10337 = distinct !DILocation(line: 48, column: 2, scope: !10310, inlinedAt: !10312)
!10338 = !DILocation(line: 179, column: 12, scope: !10336, inlinedAt: !10337)
!10339 = !DILocation(line: 518, column: 2, scope: !10300)
!10340 = !DILocation(line: 518, column: 18, scope: !10300)
!10341 = !DILocation(line: 520, column: 2, scope: !10300)
!10342 = !DILocation(line: 523, column: 2, scope: !10300)
!10343 = !DILocation(line: 526, column: 2, scope: !10300)
!10344 = !DILocation(line: 527, column: 2, scope: !10300)
!10345 = !DILocation(line: 543, column: 24, scope: !10300)
!10346 = !DILocation(line: 543, column: 2, scope: !10300)
!10347 = !DILocation(line: 0, scope: !1728)
!10348 = !DILocation(line: 246, column: 15, scope: !1746)
!10349 = !DILocation(line: 246, column: 36, scope: !1745)
!10350 = !DILocation(line: 246, column: 2, scope: !1746)
!10351 = !DILocation(line: 247, column: 37, scope: !1744)
!10352 = !DILocation(line: 0, scope: !1744)
!10353 = !DILocation(line: 248, column: 19, scope: !1744)
!10354 = !DILocation(line: 248, column: 12, scope: !1744)
!10355 = !DILocation(line: 250, column: 11, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !1744, file: !1500, line: 250, column: 7)
!10357 = !DILocation(line: 250, column: 7, scope: !1744)
!10358 = !DILocation(line: 254, column: 11, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10360, file: !1500, line: 254, column: 8)
!10360 = distinct !DILexicalBlock(scope: !10356, file: !1500, line: 250, column: 20)
!10361 = !DILocation(line: 254, column: 8, scope: !10360)
!10362 = !DILocation(line: 255, column: 9, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10359, file: !1500, line: 254, column: 17)
!10364 = !DILocation(line: 258, column: 9, scope: !10363)
!10365 = !DILocation(line: 261, column: 28, scope: !10363)
!10366 = !DILocation(line: 261, column: 10, scope: !10363)
!10367 = !DILocation(line: 261, column: 17, scope: !10363)
!10368 = !DILocation(line: 261, column: 26, scope: !10363)
!10369 = !DILocation(line: 262, column: 4, scope: !10363)
!10370 = !DILocation(line: 263, column: 9, scope: !10360)
!10371 = !DILocation(line: 263, column: 16, scope: !10360)
!10372 = !DILocation(line: 263, column: 28, scope: !10360)
!10373 = !DILocation(line: 264, column: 3, scope: !10360)
!10374 = !DILocation(line: 246, column: 60, scope: !1745)
!10375 = distinct !{!10375, !10350, !10376}
!10376 = !DILocation(line: 265, column: 2, scope: !1746)
!10377 = !DILocation(line: 266, column: 1, scope: !1728)
!10378 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1347, file: !1347, line: 1814, type: !6114, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10379)
!10379 = !{!10380, !10381}
!10380 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10378, file: !1347, line: 1814, type: !2105)
!10381 = !DILocalVariable(name: "priority", arg: 2, scope: !10378, file: !1347, line: 1814, type: !137)
!10382 = !DILocation(line: 0, scope: !10378)
!10383 = !DILocation(line: 1822, column: 48, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10385, file: !1347, line: 1821, column: 3)
!10385 = distinct !DILexicalBlock(scope: !10378, file: !1347, line: 1816, column: 7)
!10386 = !DILocation(line: 1822, column: 32, scope: !10384)
!10387 = !DILocation(line: 1822, column: 40, scope: !10384)
!10388 = !DILocation(line: 1822, column: 5, scope: !10384)
!10389 = !DILocation(line: 1822, column: 46, scope: !10384)
!10390 = !DILocation(line: 1824, column: 1, scope: !10378)
!10391 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10311, file: !10311, line: 32, type: !2671, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10392 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10393, file: !10393, line: 215, type: !10292, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10394)
!10393 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10394 = !{!10395}
!10395 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10392, file: !10393, line: 215, type: !1593)
!10396 = !DILocation(line: 0, scope: !10392)
!10397 = !DILocation(line: 217, column: 21, scope: !10392)
!10398 = !DILocation(line: 217, column: 34, scope: !10392)
!10399 = !DILocation(line: 221, column: 21, scope: !10392)
!10400 = !DILocation(line: 221, column: 34, scope: !10392)
!10401 = !DILocation(line: 232, column: 16, scope: !10392)
!10402 = !DILocation(line: 232, column: 30, scope: !10392)
!10403 = !DILocation(line: 239, column: 24, scope: !10392)
!10404 = !DILocation(line: 240, column: 1, scope: !10392)
!10405 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1500, file: !1500, line: 399, type: !10406, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10408)
!10406 = !DISubroutineType(types: !10407)
!10407 = !{!818}
!10408 = !{!10409}
!10409 = !DILocalVariable(name: "stack_ptr", scope: !10405, file: !1500, line: 401, type: !818)
!10410 = !DILocation(line: 404, column: 2, scope: !10405)
!10411 = !DILocation(line: 416, column: 24, scope: !10405)
!10412 = !DILocation(line: 418, column: 14, scope: !10405)
!10413 = !DILocation(line: 0, scope: !10405)
!10414 = !DILocation(line: 423, column: 2, scope: !10405)
!10415 = !DILocation(line: 424, column: 2, scope: !10405)
!10416 = !DILocation(line: 426, column: 2, scope: !10405)
!10417 = !DILocation(line: 428, column: 2, scope: !10405)
!10418 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1500, file: !1500, line: 432, type: !10419, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10421)
!10419 = !DISubroutineType(types: !10420)
!10420 = !{null, !818}
!10421 = !{!10422}
!10422 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !10418, file: !1500, line: 432, type: !818)
!10423 = !DILocation(line: 0, scope: !10418)
!10424 = !DILocation(line: 435, column: 2, scope: !10418)
!10425 = !DILocation(line: 445, column: 2, scope: !10418)
!10426 = distinct !DISubprogram(name: "bg_thread_main", scope: !1500, file: !1500, line: 277, type: !2992, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1496, retainedNodes: !10427)
!10427 = !{!10428, !10429, !10430}
!10428 = !DILocalVariable(name: "unused1", arg: 1, scope: !10426, file: !1500, line: 277, type: !102)
!10429 = !DILocalVariable(name: "unused2", arg: 2, scope: !10426, file: !1500, line: 277, type: !102)
!10430 = !DILocalVariable(name: "unused3", arg: 3, scope: !10426, file: !1500, line: 277, type: !102)
!10431 = !DILocation(line: 0, scope: !10426)
!10432 = !DILocation(line: 291, column: 20, scope: !10426)
!10433 = !DILocation(line: 293, column: 2, scope: !10426)
!10434 = !DILocation(line: 297, column: 2, scope: !10426)
!10435 = !DILocation(line: 305, column: 2, scope: !10426)
!10436 = !DILocation(line: 307, column: 2, scope: !10426)
!10437 = !DILocation(line: 330, column: 8, scope: !10426)
!10438 = !DILocation(line: 333, column: 34, scope: !10426)
!10439 = !DILocation(line: 339, column: 1, scope: !10426)
!10440 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1755, file: !1755, line: 45, type: !10441, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10449)
!10441 = !DISubroutineType(types: !10442)
!10442 = !{null, !10443, !102}
!10443 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !1678, line: 103, baseType: !10444)
!10444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10445, size: 32)
!10445 = !DISubroutineType(types: !10446)
!10446 = !{null, !10447, !102}
!10447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10448, size: 32)
!10448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1760)
!10449 = !{!10450, !10451}
!10450 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10440, file: !1755, line: 45, type: !10443)
!10451 = !DILocalVariable(name: "user_data", arg: 2, scope: !10440, file: !1755, line: 45, type: !102)
!10452 = !DILocation(line: 0, scope: !10440)
!10453 = !DILocation(line: 71, column: 1, scope: !10440)
!10454 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1755, file: !1755, line: 73, type: !10441, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10455)
!10455 = !{!10456, !10457}
!10456 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10454, file: !1755, line: 73, type: !10443)
!10457 = !DILocalVariable(name: "user_data", arg: 2, scope: !10454, file: !1755, line: 73, type: !102)
!10458 = !DILocation(line: 0, scope: !10454)
!10459 = !DILocation(line: 95, column: 1, scope: !10454)
!10460 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1755, file: !1755, line: 97, type: !6814, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !162)
!10461 = !DILocation(line: 1031, column: 3, scope: !10462, inlinedAt: !10465)
!10462 = distinct !DISubprogram(name: "__get_IPSR", scope: !6080, file: !6080, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10463)
!10463 = !{!10464}
!10464 = !DILocalVariable(name: "result", scope: !10462, file: !6080, line: 1029, type: !137)
!10465 = distinct !DILocation(line: 48, column: 10, scope: !10466, inlinedAt: !10467)
!10466 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6813, file: !6813, line: 46, type: !6814, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !162)
!10467 = distinct !DILocation(line: 99, column: 9, scope: !10460)
!10468 = !{i64 7012625}
!10469 = !DILocation(line: 0, scope: !10462, inlinedAt: !10465)
!10470 = !DILocation(line: 48, column: 9, scope: !10466, inlinedAt: !10467)
!10471 = !DILocation(line: 99, column: 2, scope: !10460)
!10472 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1755, file: !1755, line: 106, type: !2671, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !162)
!10473 = !DILocation(line: 108, column: 2, scope: !10472)
!10474 = !DILocation(line: 108, column: 17, scope: !10472)
!10475 = !DILocation(line: 108, column: 30, scope: !10472)
!10476 = !DILocation(line: 109, column: 1, scope: !10472)
!10477 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1755, file: !1755, line: 116, type: !2671, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !162)
!10478 = !DILocation(line: 118, column: 2, scope: !10477)
!10479 = !DILocation(line: 118, column: 17, scope: !10477)
!10480 = !DILocation(line: 118, column: 30, scope: !10477)
!10481 = !DILocation(line: 119, column: 1, scope: !10477)
!10482 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1755, file: !1755, line: 126, type: !6814, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !162)
!10483 = !DILocation(line: 128, column: 10, scope: !10482)
!10484 = !DILocation(line: 128, column: 25, scope: !10482)
!10485 = !DILocation(line: 128, column: 38, scope: !10482)
!10486 = !DILocation(line: 128, column: 53, scope: !10482)
!10487 = !DILocation(line: 128, column: 2, scope: !10482)
!10488 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1755, file: !1755, line: 187, type: !10489, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10491)
!10489 = !DISubroutineType(types: !10490)
!10490 = !{!103, !1759, !626}
!10491 = !{!10492, !10493}
!10492 = !DILocalVariable(name: "thread", arg: 1, scope: !10488, file: !1755, line: 187, type: !1759)
!10493 = !DILocalVariable(name: "value", arg: 2, scope: !10488, file: !1755, line: 187, type: !626)
!10494 = !DILocation(line: 0, scope: !10488)
!10495 = !DILocation(line: 206, column: 2, scope: !10488)
!10496 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1755, file: !1755, line: 238, type: !10497, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10499)
!10497 = !DISubroutineType(types: !10498)
!10498 = !{!626, !1759}
!10499 = !{!10500}
!10500 = !DILocalVariable(name: "thread", arg: 1, scope: !10496, file: !1755, line: 238, type: !1759)
!10501 = !DILocation(line: 0, scope: !10496)
!10502 = !DILocation(line: 244, column: 2, scope: !10496)
!10503 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1755, file: !1755, line: 248, type: !10504, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10506)
!10504 = !DISubroutineType(types: !10505)
!10505 = !{!103, !1758, !818, !120}
!10506 = !{!10507, !10508, !10509}
!10507 = !DILocalVariable(name: "thread", arg: 1, scope: !10503, file: !1755, line: 248, type: !1758)
!10508 = !DILocalVariable(name: "buf", arg: 2, scope: !10503, file: !1755, line: 248, type: !818)
!10509 = !DILocalVariable(name: "size", arg: 3, scope: !10503, file: !1755, line: 248, type: !120)
!10510 = !DILocation(line: 0, scope: !10503)
!10511 = !DILocation(line: 257, column: 2, scope: !10503)
!10512 = !DILocation(line: 0, scope: !1754)
!10513 = !DILocation(line: 281, column: 11, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !1754, file: !1755, line: 281, column: 6)
!10515 = !DILocation(line: 281, column: 20, scope: !10514)
!10516 = !DILocation(line: 275, column: 45, scope: !1754)
!10517 = !DILocation(line: 285, column: 10, scope: !1754)
!10518 = !DILocation(line: 0, scope: !1870)
!10519 = !DILocation(line: 293, column: 39, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !1870, file: !1755, line: 293, column: 2)
!10521 = !DILocation(line: 293, column: 2, scope: !1870)
!10522 = !DILocation(line: 273, column: 14, scope: !1754)
!10523 = !DILocation(line: 309, column: 2, scope: !1754)
!10524 = !DILocation(line: 309, column: 11, scope: !1754)
!10525 = !DILocation(line: 311, column: 2, scope: !1754)
!10526 = !DILocation(line: 293, column: 26, scope: !10520)
!10527 = !DILocation(line: 294, column: 9, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10520, file: !1755, line: 293, column: 54)
!10529 = !DILocation(line: 295, column: 21, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10528, file: !1755, line: 295, column: 7)
!10531 = !DILocation(line: 295, column: 28, scope: !10530)
!10532 = !DILocation(line: 295, column: 7, scope: !10528)
!10533 = !DILocation(line: 299, column: 25, scope: !10528)
!10534 = !DILocation(line: 299, column: 41, scope: !10528)
!10535 = !DILocation(line: 300, column: 7, scope: !10528)
!10536 = !DILocation(line: 300, column: 26, scope: !10528)
!10537 = !DILocation(line: 299, column: 10, scope: !10528)
!10538 = !DILocation(line: 299, column: 7, scope: !10528)
!10539 = !DILocation(line: 302, column: 16, scope: !10528)
!10540 = !DILocation(line: 304, column: 20, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10528, file: !1755, line: 304, column: 7)
!10542 = !DILocation(line: 304, column: 7, scope: !10528)
!10543 = !DILocation(line: 305, column: 26, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10541, file: !1755, line: 304, column: 26)
!10545 = !DILocation(line: 305, column: 42, scope: !10544)
!10546 = !DILocation(line: 305, column: 11, scope: !10544)
!10547 = !DILocation(line: 305, column: 8, scope: !10544)
!10548 = !DILocation(line: 306, column: 3, scope: !10544)
!10549 = !DILocation(line: 293, column: 50, scope: !10520)
!10550 = !DILocation(line: 312, column: 1, scope: !1754)
!10551 = distinct !DISubprogram(name: "copy_bytes", scope: !1755, file: !1755, line: 261, type: !10552, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10554)
!10552 = !DISubroutineType(types: !10553)
!10553 = !{!120, !818, !120, !626, !120}
!10554 = !{!10555, !10556, !10557, !10558, !10559}
!10555 = !DILocalVariable(name: "dest", arg: 1, scope: !10551, file: !1755, line: 261, type: !818)
!10556 = !DILocalVariable(name: "dest_size", arg: 2, scope: !10551, file: !1755, line: 261, type: !120)
!10557 = !DILocalVariable(name: "src", arg: 3, scope: !10551, file: !1755, line: 261, type: !626)
!10558 = !DILocalVariable(name: "src_size", arg: 4, scope: !10551, file: !1755, line: 261, type: !120)
!10559 = !DILocalVariable(name: "bytes_to_copy", scope: !10551, file: !1755, line: 263, type: !120)
!10560 = !DILocation(line: 0, scope: !10551)
!10561 = !DILocation(line: 265, column: 18, scope: !10551)
!10562 = !DILocation(line: 266, column: 2, scope: !10551)
!10563 = !DILocation(line: 268, column: 2, scope: !10551)
!10564 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1755, file: !1755, line: 383, type: !10565, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10567)
!10565 = !DISubroutineType(types: !10566)
!10566 = !{null, !1759}
!10567 = !{!10568}
!10568 = !DILocalVariable(name: "thread", arg: 1, scope: !10564, file: !1755, line: 383, type: !1759)
!10569 = !DILocation(line: 0, scope: !10564)
!10570 = !DILocation(line: 387, column: 2, scope: !10564)
!10571 = !DILocation(line: 388, column: 1, scope: !10564)
!10572 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1755, file: !1755, line: 528, type: !10573, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10580)
!10573 = !DISubroutineType(types: !10574)
!10574 = !{!818, !1759, !10575, !120, !2989, !102, !102, !102, !103, !137, !626}
!10575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10576, size: 32)
!10576 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !2990, line: 44, baseType: !10577)
!10577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1709, line: 47, size: 8, elements: !10578)
!10578 = !{!10579}
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10577, file: !1709, line: 48, baseType: !109, size: 8)
!10580 = !{!10581, !10582, !10583, !10584, !10585, !10586, !10587, !10588, !10589, !10590, !10591}
!10581 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10572, file: !1755, line: 528, type: !1759)
!10582 = !DILocalVariable(name: "stack", arg: 2, scope: !10572, file: !1755, line: 529, type: !10575)
!10583 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10572, file: !1755, line: 529, type: !120)
!10584 = !DILocalVariable(name: "entry", arg: 4, scope: !10572, file: !1755, line: 530, type: !2989)
!10585 = !DILocalVariable(name: "p1", arg: 5, scope: !10572, file: !1755, line: 531, type: !102)
!10586 = !DILocalVariable(name: "p2", arg: 6, scope: !10572, file: !1755, line: 531, type: !102)
!10587 = !DILocalVariable(name: "p3", arg: 7, scope: !10572, file: !1755, line: 531, type: !102)
!10588 = !DILocalVariable(name: "prio", arg: 8, scope: !10572, file: !1755, line: 532, type: !103)
!10589 = !DILocalVariable(name: "options", arg: 9, scope: !10572, file: !1755, line: 532, type: !137)
!10590 = !DILocalVariable(name: "name", arg: 10, scope: !10572, file: !1755, line: 532, type: !626)
!10591 = !DILocalVariable(name: "stack_ptr", scope: !10572, file: !1755, line: 534, type: !818)
!10592 = !DILocation(line: 0, scope: !10572)
!10593 = !DILocation(line: 550, column: 28, scope: !10572)
!10594 = !DILocation(line: 550, column: 2, scope: !10572)
!10595 = !DILocation(line: 553, column: 34, scope: !10572)
!10596 = !DILocation(line: 553, column: 2, scope: !10572)
!10597 = !DILocation(line: 554, column: 14, scope: !10572)
!10598 = !DILocation(line: 564, column: 2, scope: !10572)
!10599 = !DILocation(line: 567, column: 14, scope: !10572)
!10600 = !DILocation(line: 567, column: 24, scope: !10572)
!10601 = !DILocation(line: 612, column: 7, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10572, file: !1755, line: 612, column: 6)
!10603 = !DILocation(line: 612, column: 6, scope: !10572)
!10604 = !DILocation(line: 627, column: 40, scope: !10572)
!10605 = !DILocation(line: 637, column: 2, scope: !10572)
!10606 = !DILocation(line: 613, column: 15, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10602, file: !1755, line: 612, column: 17)
!10608 = !DILocation(line: 613, column: 29, scope: !10607)
!10609 = !DILocation(line: 638, column: 1, scope: !10572)
!10610 = distinct !DISubprogram(name: "z_waitq_init", scope: !10611, file: !10611, line: 47, type: !10612, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10614)
!10611 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10612 = !DISubroutineType(types: !10613)
!10613 = !{null, !1790}
!10614 = !{!10615}
!10615 = !DILocalVariable(name: "w", arg: 1, scope: !10610, file: !10611, line: 47, type: !1790)
!10616 = !DILocation(line: 0, scope: !10610)
!10617 = !DILocation(line: 49, column: 21, scope: !10610)
!10618 = !DILocation(line: 49, column: 2, scope: !10610)
!10619 = !DILocation(line: 50, column: 1, scope: !10610)
!10620 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1755, file: !1755, line: 791, type: !10621, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10624)
!10621 = !DISubroutineType(types: !10622)
!10622 = !{null, !10623, !103, !137, !32}
!10623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!10624 = !{!10625, !10626, !10627, !10628}
!10625 = !DILocalVariable(name: "thread_base", arg: 1, scope: !10620, file: !1755, line: 791, type: !10623)
!10626 = !DILocalVariable(name: "priority", arg: 2, scope: !10620, file: !1755, line: 791, type: !103)
!10627 = !DILocalVariable(name: "initial_state", arg: 3, scope: !10620, file: !1755, line: 792, type: !137)
!10628 = !DILocalVariable(name: "options", arg: 4, scope: !10620, file: !1755, line: 792, type: !32)
!10629 = !DILocation(line: 0, scope: !10620)
!10630 = !DILocation(line: 795, column: 15, scope: !10620)
!10631 = !DILocation(line: 795, column: 25, scope: !10620)
!10632 = !DILocation(line: 796, column: 30, scope: !10620)
!10633 = !DILocation(line: 796, column: 15, scope: !10620)
!10634 = !DILocation(line: 796, column: 28, scope: !10620)
!10635 = !DILocation(line: 797, column: 30, scope: !10620)
!10636 = !DILocation(line: 797, column: 15, scope: !10620)
!10637 = !DILocation(line: 797, column: 28, scope: !10620)
!10638 = !DILocation(line: 799, column: 22, scope: !10620)
!10639 = !DILocation(line: 799, column: 15, scope: !10620)
!10640 = !DILocation(line: 799, column: 20, scope: !10620)
!10641 = !DILocation(line: 801, column: 15, scope: !10620)
!10642 = !DILocation(line: 801, column: 28, scope: !10620)
!10643 = !DILocation(line: 814, column: 2, scope: !10620)
!10644 = !DILocation(line: 815, column: 1, scope: !10620)
!10645 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1755, file: !1755, line: 449, type: !10646, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10648)
!10646 = !DISubroutineType(types: !10647)
!10647 = !{!818, !1759, !10575, !120}
!10648 = !{!10649, !10650, !10651, !10652, !10653, !10654, !10655, !10656}
!10649 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10645, file: !1755, line: 449, type: !1759)
!10650 = !DILocalVariable(name: "stack", arg: 2, scope: !10645, file: !1755, line: 450, type: !10575)
!10651 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10645, file: !1755, line: 450, type: !120)
!10652 = !DILocalVariable(name: "stack_obj_size", scope: !10645, file: !1755, line: 452, type: !120)
!10653 = !DILocalVariable(name: "stack_buf_size", scope: !10645, file: !1755, line: 452, type: !120)
!10654 = !DILocalVariable(name: "stack_ptr", scope: !10645, file: !1755, line: 453, type: !818)
!10655 = !DILocalVariable(name: "stack_buf_start", scope: !10645, file: !1755, line: 453, type: !818)
!10656 = !DILocalVariable(name: "delta", scope: !10645, file: !1755, line: 454, type: !120)
!10657 = !DILocation(line: 0, scope: !10645)
!10658 = !DILocation(line: 465, column: 20, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10645, file: !1755, line: 463, column: 2)
!10660 = !DILocation(line: 473, column: 28, scope: !10645)
!10661 = !DILocation(line: 520, column: 2, scope: !10645)
!10662 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !10663, file: !10663, line: 40, type: !10664, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10666)
!10663 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10664 = !DISubroutineType(types: !10665)
!10665 = !{null, !10623}
!10666 = !{!10667}
!10667 = !DILocalVariable(name: "thread_base", arg: 1, scope: !10662, file: !10663, line: 40, type: !10623)
!10668 = !DILocation(line: 0, scope: !10662)
!10669 = !DILocation(line: 42, column: 31, scope: !10662)
!10670 = !DILocation(line: 42, column: 2, scope: !10662)
!10671 = !DILocation(line: 43, column: 1, scope: !10662)
!10672 = distinct !DISubprogram(name: "z_init_timeout", scope: !10663, file: !10663, line: 25, type: !1816, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10673)
!10673 = !{!10674}
!10674 = !DILocalVariable(name: "to", arg: 1, scope: !10672, file: !10663, line: 25, type: !1818)
!10675 = !DILocation(line: 0, scope: !10672)
!10676 = !DILocation(line: 27, column: 22, scope: !10672)
!10677 = !DILocation(line: 27, column: 2, scope: !10672)
!10678 = !DILocation(line: 28, column: 1, scope: !10672)
!10679 = distinct !DISubprogram(name: "sys_dnode_init", scope: !1605, file: !1605, line: 211, type: !10680, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10682)
!10680 = !DISubroutineType(types: !10681)
!10681 = !{null, !1856}
!10682 = !{!10683}
!10683 = !DILocalVariable(name: "node", arg: 1, scope: !10679, file: !1605, line: 211, type: !1856)
!10684 = !DILocation(line: 0, scope: !10679)
!10685 = !DILocation(line: 213, column: 8, scope: !10679)
!10686 = !DILocation(line: 213, column: 13, scope: !10679)
!10687 = !DILocation(line: 214, column: 8, scope: !10679)
!10688 = !DILocation(line: 214, column: 13, scope: !10679)
!10689 = !DILocation(line: 215, column: 1, scope: !10679)
!10690 = distinct !DISubprogram(name: "sys_dlist_init", scope: !1605, file: !1605, line: 197, type: !10691, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10694)
!10691 = !DISubroutineType(types: !10692)
!10692 = !{null, !10693}
!10693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!10694 = !{!10695}
!10695 = !DILocalVariable(name: "list", arg: 1, scope: !10690, file: !1605, line: 197, type: !10693)
!10696 = !DILocation(line: 0, scope: !10690)
!10697 = !DILocation(line: 199, column: 8, scope: !10690)
!10698 = !DILocation(line: 199, column: 13, scope: !10690)
!10699 = !DILocation(line: 200, column: 8, scope: !10690)
!10700 = !DILocation(line: 200, column: 13, scope: !10690)
!10701 = !DILocation(line: 201, column: 1, scope: !10690)
!10702 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1755, file: !1755, line: 641, type: !10703, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10709)
!10703 = !DISubroutineType(types: !10704)
!10704 = !{!1758, !1759, !10575, !120, !2989, !102, !102, !102, !103, !137, !10705}
!10705 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1342, line: 67, baseType: !10706)
!10706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1342, line: 65, size: 64, elements: !10707)
!10707 = !{!10708}
!10708 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10706, file: !1342, line: 66, baseType: !1341, size: 64)
!10709 = !{!10710, !10711, !10712, !10713, !10714, !10715, !10716, !10717, !10718, !10719}
!10710 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10702, file: !1755, line: 641, type: !1759)
!10711 = !DILocalVariable(name: "stack", arg: 2, scope: !10702, file: !1755, line: 642, type: !10575)
!10712 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10702, file: !1755, line: 643, type: !120)
!10713 = !DILocalVariable(name: "entry", arg: 4, scope: !10702, file: !1755, line: 643, type: !2989)
!10714 = !DILocalVariable(name: "p1", arg: 5, scope: !10702, file: !1755, line: 644, type: !102)
!10715 = !DILocalVariable(name: "p2", arg: 6, scope: !10702, file: !1755, line: 644, type: !102)
!10716 = !DILocalVariable(name: "p3", arg: 7, scope: !10702, file: !1755, line: 644, type: !102)
!10717 = !DILocalVariable(name: "prio", arg: 8, scope: !10702, file: !1755, line: 645, type: !103)
!10718 = !DILocalVariable(name: "options", arg: 9, scope: !10702, file: !1755, line: 645, type: !137)
!10719 = !DILocalVariable(name: "delay", arg: 10, scope: !10702, file: !1755, line: 645, type: !10705)
!10720 = !DILocation(line: 0, scope: !10702)
!10721 = !DILocation(line: 649, column: 2, scope: !10702)
!10722 = !DILocation(line: 652, column: 7, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10702, file: !1755, line: 652, column: 6)
!10724 = !DILocation(line: 652, column: 6, scope: !10702)
!10725 = !DILocation(line: 653, column: 3, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10723, file: !1755, line: 652, column: 39)
!10727 = !DILocation(line: 654, column: 2, scope: !10726)
!10728 = !DILocation(line: 656, column: 2, scope: !10702)
!10729 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1755, file: !1755, line: 401, type: !10730, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10732)
!10730 = !DISubroutineType(types: !10731)
!10731 = !{null, !1759, !10705}
!10732 = !{!10733, !10734}
!10733 = !DILocalVariable(name: "thread", arg: 1, scope: !10729, file: !1755, line: 401, type: !1759)
!10734 = !DILocalVariable(name: "delay", arg: 2, scope: !10729, file: !1755, line: 401, type: !10705)
!10735 = !DILocation(line: 0, scope: !10729)
!10736 = !DILocation(line: 404, column: 6, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10729, file: !1755, line: 404, column: 6)
!10738 = !DILocation(line: 404, column: 6, scope: !10729)
!10739 = !DILocation(line: 405, column: 3, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10737, file: !1755, line: 404, column: 38)
!10741 = !DILocation(line: 406, column: 2, scope: !10740)
!10742 = !DILocation(line: 407, column: 3, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10737, file: !1755, line: 406, column: 9)
!10744 = !DILocation(line: 413, column: 1, scope: !10729)
!10745 = distinct !DISubprogram(name: "k_thread_start", scope: !3105, file: !3105, line: 205, type: !10746, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10748)
!10746 = !DISubroutineType(types: !10747)
!10747 = !{null, !1758}
!10748 = !{!10749}
!10749 = !DILocalVariable(name: "thread", arg: 1, scope: !10745, file: !3105, line: 205, type: !1758)
!10750 = !DILocation(line: 0, scope: !10745)
!10751 = !DILocation(line: 214, column: 2, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10745, file: !3105, line: 214, column: 2)
!10753 = !{i64 2151062389}
!10754 = !DILocation(line: 215, column: 2, scope: !10745)
!10755 = !DILocation(line: 216, column: 1, scope: !10745)
!10756 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !10663, file: !10663, line: 47, type: !10730, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10757)
!10757 = !{!10758, !10759}
!10758 = !DILocalVariable(name: "thread", arg: 1, scope: !10756, file: !10663, line: 47, type: !1759)
!10759 = !DILocalVariable(name: "ticks", arg: 2, scope: !10756, file: !10663, line: 47, type: !10705)
!10760 = !DILocation(line: 0, scope: !10756)
!10761 = !DILocation(line: 49, column: 30, scope: !10756)
!10762 = !DILocation(line: 49, column: 2, scope: !10756)
!10763 = !DILocation(line: 50, column: 1, scope: !10756)
!10764 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1755, file: !1755, line: 748, type: !2671, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10765)
!10765 = !{!10766, !10784}
!10766 = !DILocalVariable(name: "thread_data", scope: !10767, file: !1755, line: 750, type: !10768)
!10767 = distinct !DILexicalBlock(scope: !10764, file: !1755, line: 750, column: 2)
!10768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10769, size: 32)
!10769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !1678, line: 620, size: 384, elements: !10770)
!10770 = !{!10771, !10772, !10773, !10774, !10775, !10776, !10777, !10778, !10779, !10780, !10781, !10783}
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !10769, file: !1678, line: 621, baseType: !1759, size: 32)
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !10769, file: !1678, line: 622, baseType: !10575, size: 32, offset: 32)
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !10769, file: !1678, line: 623, baseType: !32, size: 32, offset: 64)
!10774 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !10769, file: !1678, line: 624, baseType: !2989, size: 32, offset: 96)
!10775 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !10769, file: !1678, line: 625, baseType: !102, size: 32, offset: 128)
!10776 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !10769, file: !1678, line: 626, baseType: !102, size: 32, offset: 160)
!10777 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !10769, file: !1678, line: 627, baseType: !102, size: 32, offset: 192)
!10778 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !10769, file: !1678, line: 628, baseType: !103, size: 32, offset: 224)
!10779 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !10769, file: !1678, line: 629, baseType: !137, size: 32, offset: 256)
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !10769, file: !1678, line: 630, baseType: !893, size: 32, offset: 288)
!10781 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !10769, file: !1678, line: 631, baseType: !10782, size: 32, offset: 320)
!10782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!10783 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !10769, file: !1678, line: 632, baseType: !626, size: 32, offset: 352)
!10784 = !DILocalVariable(name: "thread_data", scope: !10785, file: !1755, line: 781, type: !10768)
!10785 = distinct !DILexicalBlock(scope: !10764, file: !1755, line: 781, column: 2)
!10786 = !DILocation(line: 0, scope: !10767)
!10787 = !DILocation(line: 750, column: 2, scope: !10767)
!10788 = !DILocation(line: 780, column: 2, scope: !10764)
!10789 = !DILocation(line: 0, scope: !10785)
!10790 = !DILocation(line: 781, column: 2, scope: !10785)
!10791 = !DILocation(line: 752, column: 17, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10793, file: !1755, line: 750, column: 38)
!10793 = distinct !DILexicalBlock(scope: !10767, file: !1755, line: 750, column: 2)
!10794 = !DILocation(line: 753, column: 17, scope: !10792)
!10795 = !DILocation(line: 754, column: 17, scope: !10792)
!10796 = !DILocation(line: 755, column: 17, scope: !10792)
!10797 = !DILocation(line: 756, column: 17, scope: !10792)
!10798 = !DILocation(line: 757, column: 17, scope: !10792)
!10799 = !DILocation(line: 758, column: 17, scope: !10792)
!10800 = !DILocation(line: 759, column: 17, scope: !10792)
!10801 = !DILocation(line: 760, column: 17, scope: !10792)
!10802 = !DILocation(line: 751, column: 3, scope: !10792)
!10803 = !DILocation(line: 763, column: 16, scope: !10792)
!10804 = !DILocation(line: 763, column: 29, scope: !10792)
!10805 = !DILocation(line: 763, column: 39, scope: !10792)
!10806 = !DILocation(line: 750, column: 2, scope: !10793)
!10807 = !DILocation(line: 750, column: 2, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10793, file: !1755, line: 750, column: 2)
!10809 = distinct !{!10809, !10787, !10810}
!10810 = !DILocation(line: 764, column: 2, scope: !10767)
!10811 = !DILocation(line: 787, column: 2, scope: !10764)
!10812 = !DILocation(line: 788, column: 1, scope: !10764)
!10813 = !DILocation(line: 782, column: 20, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !1755, line: 782, column: 7)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !1755, line: 781, column: 38)
!10816 = distinct !DILexicalBlock(scope: !10785, file: !1755, line: 781, column: 2)
!10817 = !DILocation(line: 782, column: 31, scope: !10814)
!10818 = !DILocation(line: 782, column: 7, scope: !10815)
!10819 = !DILocation(line: 783, column: 37, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10814, file: !1755, line: 782, column: 51)
!10821 = !DILocation(line: 784, column: 10, scope: !10820)
!10822 = !DILocation(line: 783, column: 4, scope: !10820)
!10823 = !DILocation(line: 785, column: 3, scope: !10820)
!10824 = !DILocation(line: 781, column: 2, scope: !10816)
!10825 = !DILocation(line: 781, column: 2, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10816, file: !1755, line: 781, column: 2)
!10827 = distinct !{!10827, !10790, !10828}
!10828 = !DILocation(line: 786, column: 2, scope: !10785)
!10829 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !10830, file: !10830, line: 403, type: !10831, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10833)
!10830 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10831 = !DISubroutineType(types: !10832)
!10832 = !{!163, !163}
!10833 = !{!10834}
!10834 = !DILocalVariable(name: "t", arg: 1, scope: !10829, file: !10830, line: 403, type: !163)
!10835 = !DILocation(line: 0, scope: !10829)
!10836 = !DILocalVariable(name: "t", arg: 1, scope: !10837, file: !10830, line: 102, type: !163)
!10837 = distinct !DISubprogram(name: "z_tmcvt", scope: !10830, file: !10830, line: 102, type: !10838, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10840)
!10838 = !DISubroutineType(types: !10839)
!10839 = !{!163, !163, !137, !137, !636, !636, !636, !636}
!10840 = !{!10836, !10841, !10842, !10843, !10844, !10845, !10846, !10847, !10848, !10849, !10850}
!10841 = !DILocalVariable(name: "from_hz", arg: 2, scope: !10837, file: !10830, line: 102, type: !137)
!10842 = !DILocalVariable(name: "to_hz", arg: 3, scope: !10837, file: !10830, line: 103, type: !137)
!10843 = !DILocalVariable(name: "const_hz", arg: 4, scope: !10837, file: !10830, line: 103, type: !636)
!10844 = !DILocalVariable(name: "result32", arg: 5, scope: !10837, file: !10830, line: 104, type: !636)
!10845 = !DILocalVariable(name: "round_up", arg: 6, scope: !10837, file: !10830, line: 104, type: !636)
!10846 = !DILocalVariable(name: "round_off", arg: 7, scope: !10837, file: !10830, line: 105, type: !636)
!10847 = !DILocalVariable(name: "mul_ratio", scope: !10837, file: !10830, line: 107, type: !636)
!10848 = !DILocalVariable(name: "div_ratio", scope: !10837, file: !10830, line: 109, type: !636)
!10849 = !DILocalVariable(name: "off", scope: !10837, file: !10830, line: 116, type: !163)
!10850 = !DILocalVariable(name: "rdivisor", scope: !10851, file: !10830, line: 119, type: !137)
!10851 = distinct !DILexicalBlock(scope: !10852, file: !10830, line: 118, column: 18)
!10852 = distinct !DILexicalBlock(scope: !10837, file: !10830, line: 118, column: 6)
!10853 = !DILocation(line: 0, scope: !10837, inlinedAt: !10854)
!10854 = distinct !DILocation(line: 406, column: 9, scope: !10829)
!10855 = !DILocation(line: 145, column: 13, scope: !10856, inlinedAt: !10854)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !10830, line: 144, column: 10)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !10830, line: 142, column: 7)
!10858 = distinct !DILexicalBlock(scope: !10859, file: !10830, line: 141, column: 24)
!10859 = distinct !DILexicalBlock(scope: !10860, file: !10830, line: 141, column: 13)
!10860 = distinct !DILexicalBlock(scope: !10837, file: !10830, line: 134, column: 6)
!10861 = !DILocation(line: 406, column: 2, scope: !10829)
!10862 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1755, file: !1755, line: 817, type: !2987, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10863)
!10863 = !{!10864, !10865, !10866, !10867}
!10864 = !DILocalVariable(name: "entry", arg: 1, scope: !10862, file: !1755, line: 817, type: !2989)
!10865 = !DILocalVariable(name: "p1", arg: 2, scope: !10862, file: !1755, line: 818, type: !102)
!10866 = !DILocalVariable(name: "p2", arg: 3, scope: !10862, file: !1755, line: 818, type: !102)
!10867 = !DILocalVariable(name: "p3", arg: 4, scope: !10862, file: !1755, line: 818, type: !102)
!10868 = !DILocation(line: 0, scope: !10862)
!10869 = !DILocation(line: 822, column: 2, scope: !10862)
!10870 = !DILocation(line: 822, column: 17, scope: !10862)
!10871 = !DILocation(line: 822, column: 30, scope: !10862)
!10872 = !DILocation(line: 823, column: 2, scope: !10862)
!10873 = !DILocation(line: 845, column: 2, scope: !10862)
!10874 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1755, file: !1755, line: 888, type: !10875, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10877)
!10875 = !DISubroutineType(types: !10876)
!10876 = !{!103, !1759}
!10877 = !{!10878}
!10878 = !DILocalVariable(name: "thread", arg: 1, scope: !10874, file: !1755, line: 888, type: !1759)
!10879 = !DILocation(line: 0, scope: !10874)
!10880 = !DILocation(line: 893, column: 2, scope: !10874)
!10881 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1755, file: !1755, line: 897, type: !10882, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10884)
!10882 = !DISubroutineType(types: !10883)
!10883 = !{!103, !1759, !32}
!10884 = !{!10885, !10886}
!10885 = !DILocalVariable(name: "thread", arg: 1, scope: !10881, file: !1755, line: 897, type: !1759)
!10886 = !DILocalVariable(name: "options", arg: 2, scope: !10881, file: !1755, line: 897, type: !32)
!10887 = !DILocation(line: 0, scope: !10881)
!10888 = !DILocation(line: 902, column: 2, scope: !10881)
!10889 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1755, file: !1755, line: 1072, type: !10890, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10895)
!10890 = !DISubroutineType(types: !10891)
!10891 = !{!103, !1758, !10892}
!10892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10893, size: 32)
!10893 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !1595, line: 234, baseType: !10894)
!10894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !1595, line: 192, elements: !162)
!10895 = !{!10896, !10897}
!10896 = !DILocalVariable(name: "thread", arg: 1, scope: !10889, file: !1755, line: 1072, type: !1758)
!10897 = !DILocalVariable(name: "stats", arg: 2, scope: !10889, file: !1755, line: 1073, type: !10892)
!10898 = !DILocation(line: 0, scope: !10889)
!10899 = !DILocation(line: 1075, column: 14, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10889, file: !1755, line: 1075, column: 6)
!10901 = !DILocation(line: 1075, column: 23, scope: !10900)
!10902 = !DILocation(line: 1086, column: 1, scope: !10889)
!10903 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1755, file: !1755, line: 1088, type: !10904, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !10906)
!10904 = !DISubroutineType(types: !10905)
!10905 = !{!103, !10892}
!10906 = !{!10907}
!10907 = !DILocalVariable(name: "stats", arg: 1, scope: !10903, file: !1755, line: 1088, type: !10892)
!10908 = !DILocation(line: 0, scope: !10903)
!10909 = !DILocation(line: 1094, column: 12, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10903, file: !1755, line: 1094, column: 6)
!10911 = !DILocation(line: 1120, column: 1, scope: !10903)
!10912 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !10913, file: !10913, line: 20, type: !2671, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !162)
!10913 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10914 = !DILocation(line: 30, column: 2, scope: !10912)
!10915 = !DILocation(line: 31, column: 1, scope: !10912)
!10916 = distinct !DISubprogram(name: "idle", scope: !10913, file: !10913, line: 33, type: !2992, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !10917)
!10917 = !{!10918, !10919, !10920}
!10918 = !DILocalVariable(name: "unused1", arg: 1, scope: !10916, file: !10913, line: 33, type: !102)
!10919 = !DILocalVariable(name: "unused2", arg: 2, scope: !10916, file: !10913, line: 33, type: !102)
!10920 = !DILocalVariable(name: "unused3", arg: 3, scope: !10916, file: !10913, line: 33, type: !102)
!10921 = !DILocation(line: 0, scope: !10916)
!10922 = !DILocation(line: 41, column: 2, scope: !10916)
!10923 = !DILocation(line: 55, column: 2, scope: !10924, inlinedAt: !10928)
!10924 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !7636, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !10925)
!10925 = !{!10926, !10927}
!10926 = !DILocalVariable(name: "key", scope: !10924, file: !6193, line: 44, type: !32)
!10927 = !DILocalVariable(name: "tmp", scope: !10924, file: !6193, line: 53, type: !32)
!10928 = distinct !DILocation(line: 62, column: 10, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10916, file: !10913, line: 41, column: 15)
!10930 = !{i64 2840957}
!10931 = !DILocation(line: 0, scope: !10924, inlinedAt: !10928)
!10932 = !DILocation(line: 86, column: 3, scope: !10929)
!10933 = distinct !{!10933, !10922, !10934}
!10934 = !DILocation(line: 105, column: 2, scope: !10916)
!10935 = distinct !DISubprogram(name: "k_cpu_idle", scope: !1678, file: !1678, line: 5627, type: !2671, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !162)
!10936 = !DILocation(line: 5629, column: 2, scope: !10935)
!10937 = !DILocation(line: 5630, column: 1, scope: !10935)
!10938 = !DISubprogram(name: "arch_cpu_idle", scope: !2990, file: !2990, line: 167, type: !2671, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10939 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !1976, file: !1976, line: 93, type: !10940, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !10942)
!10940 = !DISubroutineType(types: !10941)
!10941 = !{!893, !1877, !1877}
!10942 = !{!10943, !10944, !10945, !10946}
!10943 = !DILocalVariable(name: "thread_1", arg: 1, scope: !10939, file: !1976, line: 93, type: !1877)
!10944 = !DILocalVariable(name: "thread_2", arg: 2, scope: !10939, file: !1976, line: 94, type: !1877)
!10945 = !DILocalVariable(name: "b1", scope: !10939, file: !1976, line: 97, type: !893)
!10946 = !DILocalVariable(name: "b2", scope: !10939, file: !1976, line: 98, type: !893)
!10947 = !DILocation(line: 0, scope: !10939)
!10948 = !DILocation(line: 97, column: 30, scope: !10939)
!10949 = !DILocation(line: 98, column: 30, scope: !10939)
!10950 = !DILocation(line: 100, column: 9, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10939, file: !1976, line: 100, column: 6)
!10952 = !DILocation(line: 100, column: 6, scope: !10939)
!10953 = !DILocation(line: 125, column: 1, scope: !10939)
!10954 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !1976, file: !1976, line: 428, type: !10955, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !10957)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{null, !1877}
!10957 = !{!10958}
!10958 = !DILocalVariable(name: "curr", arg: 1, scope: !10954, file: !1976, line: 428, type: !1877)
!10959 = !DILocation(line: 0, scope: !10954)
!10960 = !DILocation(line: 434, column: 6, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10954, file: !1976, line: 434, column: 6)
!10962 = !DILocation(line: 434, column: 23, scope: !10961)
!10963 = !DILocation(line: 434, column: 6, scope: !10954)
!10964 = !DILocation(line: 435, column: 50, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10961, file: !1976, line: 434, column: 29)
!10966 = !DILocation(line: 435, column: 48, scope: !10965)
!10967 = !DILocation(line: 435, column: 29, scope: !10965)
!10968 = !DILocation(line: 436, column: 24, scope: !10965)
!10969 = !DILocation(line: 436, column: 3, scope: !10965)
!10970 = !DILocation(line: 437, column: 2, scope: !10965)
!10971 = !DILocation(line: 438, column: 1, scope: !10954)
!10972 = distinct !DISubprogram(name: "slice_time", scope: !1976, file: !1976, line: 407, type: !10973, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !10975)
!10973 = !DISubroutineType(types: !10974)
!10974 = !{!103, !1877}
!10975 = !{!10976, !10977}
!10976 = !DILocalVariable(name: "curr", arg: 1, scope: !10972, file: !1976, line: 407, type: !1877)
!10977 = !DILocalVariable(name: "ret", scope: !10972, file: !1976, line: 409, type: !103)
!10978 = !DILocation(line: 0, scope: !10972)
!10979 = !DILocation(line: 409, column: 12, scope: !10972)
!10980 = !DILocation(line: 416, column: 2, scope: !10972)
!10981 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !1976, file: !1976, line: 440, type: !10982, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !10984)
!10982 = !DISubroutineType(types: !10983)
!10983 = !{null, !893, !103}
!10984 = !{!10985, !10986, !10987, !10993}
!10985 = !DILocalVariable(name: "slice", arg: 1, scope: !10981, file: !1976, line: 440, type: !893)
!10986 = !DILocalVariable(name: "prio", arg: 2, scope: !10981, file: !1976, line: 440, type: !103)
!10987 = !DILocalVariable(name: "__i", scope: !10988, file: !1976, line: 442, type: !10989)
!10988 = distinct !DILexicalBlock(scope: !10981, file: !1976, line: 442, column: 2)
!10989 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !1451, line: 106, baseType: !10990)
!10990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !1451, line: 32, size: 32, elements: !10991)
!10991 = !{!10992}
!10992 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10990, file: !1451, line: 33, baseType: !103, size: 32)
!10993 = !DILocalVariable(name: "__key", scope: !10988, file: !1976, line: 442, type: !10989)
!10994 = !DILocation(line: 0, scope: !10981)
!10995 = !DILocation(line: 0, scope: !10988)
!10996 = !DILocalVariable(name: "l", arg: 1, scope: !10997, file: !1451, line: 136, type: !11000)
!10997 = distinct !DISubprogram(name: "k_spin_lock", scope: !1451, file: !1451, line: 136, type: !10998, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11001)
!10998 = !DISubroutineType(types: !10999)
!10999 = !{!10989, !11000}
!11000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!11001 = !{!10996, !11002}
!11002 = !DILocalVariable(name: "k", scope: !10997, file: !1451, line: 139, type: !10989)
!11003 = !DILocation(line: 0, scope: !10997, inlinedAt: !11004)
!11004 = distinct !DILocation(line: 442, column: 2, scope: !10988)
!11005 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11010)
!11006 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !7636, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11007)
!11007 = !{!11008, !11009}
!11008 = !DILocalVariable(name: "key", scope: !11006, file: !6193, line: 44, type: !32)
!11009 = !DILocalVariable(name: "tmp", scope: !11006, file: !6193, line: 53, type: !32)
!11010 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !11004)
!11011 = !{i64 2884928}
!11012 = !DILocation(line: 0, scope: !11006, inlinedAt: !11010)
!11013 = !DILocation(line: 443, column: 29, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !1976, line: 442, column: 26)
!11015 = distinct !DILexicalBlock(scope: !10988, file: !1976, line: 442, column: 2)
!11016 = !DILocation(line: 444, column: 17, scope: !11014)
!11017 = !DILocation(line: 445, column: 51, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11014, file: !1976, line: 445, column: 7)
!11019 = !DILocation(line: 445, column: 7, scope: !11014)
!11020 = !DILocation(line: 0, scope: !11014)
!11021 = !DILocation(line: 451, column: 18, scope: !11014)
!11022 = !DILocation(line: 452, column: 3, scope: !11014)
!11023 = !DILocalVariable(name: "key", arg: 2, scope: !11024, file: !1451, line: 190, type: !10989)
!11024 = distinct !DISubprogram(name: "k_spin_unlock", scope: !1451, file: !1451, line: 189, type: !11025, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11027)
!11025 = !DISubroutineType(types: !11026)
!11026 = !{null, !11000, !10989}
!11027 = !{!11028, !11023}
!11028 = !DILocalVariable(name: "l", arg: 1, scope: !11024, file: !1451, line: 189, type: !11000)
!11029 = !DILocation(line: 0, scope: !11024, inlinedAt: !11030)
!11030 = distinct !DILocation(line: 442, column: 2, scope: !11015)
!11031 = !DILocalVariable(name: "key", arg: 1, scope: !11032, file: !6193, line: 84, type: !32)
!11032 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6031, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11033)
!11033 = !{!11031}
!11034 = !DILocation(line: 0, scope: !11032, inlinedAt: !11035)
!11035 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11030)
!11036 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11035)
!11037 = !{i64 2885745}
!11038 = !DILocation(line: 454, column: 1, scope: !10981)
!11039 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !10830, file: !10830, line: 389, type: !11040, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11042)
!11040 = !DISubroutineType(types: !11041)
!11041 = !{!137, !137}
!11042 = !{!11043}
!11043 = !DILocalVariable(name: "t", arg: 1, scope: !11039, file: !10830, line: 389, type: !137)
!11044 = !DILocation(line: 0, scope: !11039)
!11045 = !DILocalVariable(name: "t", arg: 1, scope: !11046, file: !10830, line: 102, type: !163)
!11046 = distinct !DISubprogram(name: "z_tmcvt", scope: !10830, file: !10830, line: 102, type: !10838, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11047)
!11047 = !{!11045, !11048, !11049, !11050, !11051, !11052, !11053, !11054, !11055, !11056, !11057}
!11048 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11046, file: !10830, line: 102, type: !137)
!11049 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11046, file: !10830, line: 103, type: !137)
!11050 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11046, file: !10830, line: 103, type: !636)
!11051 = !DILocalVariable(name: "result32", arg: 5, scope: !11046, file: !10830, line: 104, type: !636)
!11052 = !DILocalVariable(name: "round_up", arg: 6, scope: !11046, file: !10830, line: 104, type: !636)
!11053 = !DILocalVariable(name: "round_off", arg: 7, scope: !11046, file: !10830, line: 105, type: !636)
!11054 = !DILocalVariable(name: "mul_ratio", scope: !11046, file: !10830, line: 107, type: !636)
!11055 = !DILocalVariable(name: "div_ratio", scope: !11046, file: !10830, line: 109, type: !636)
!11056 = !DILocalVariable(name: "off", scope: !11046, file: !10830, line: 116, type: !163)
!11057 = !DILocalVariable(name: "rdivisor", scope: !11058, file: !10830, line: 119, type: !137)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !10830, line: 118, column: 18)
!11059 = distinct !DILexicalBlock(scope: !11046, file: !10830, line: 118, column: 6)
!11060 = !DILocation(line: 0, scope: !11046, inlinedAt: !11061)
!11061 = distinct !DILocation(line: 392, column: 9, scope: !11039)
!11062 = !DILocation(line: 143, column: 25, scope: !11063, inlinedAt: !11061)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !10830, line: 142, column: 17)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !10830, line: 142, column: 7)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !10830, line: 141, column: 24)
!11066 = distinct !DILexicalBlock(scope: !11067, file: !10830, line: 141, column: 13)
!11067 = distinct !DILexicalBlock(scope: !11046, file: !10830, line: 134, column: 6)
!11068 = !DILocation(line: 392, column: 2, scope: !11039)
!11069 = distinct !DISubprogram(name: "z_time_slice", scope: !1976, file: !1976, line: 502, type: !10248, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11070)
!11070 = !{!11071, !11072}
!11071 = !DILocalVariable(name: "ticks", arg: 1, scope: !11069, file: !1976, line: 502, type: !103)
!11072 = !DILocalVariable(name: "key", scope: !11069, file: !1976, line: 511, type: !10989)
!11073 = !DILocation(line: 0, scope: !11069)
!11074 = !DILocation(line: 0, scope: !10997, inlinedAt: !11075)
!11075 = distinct !DILocation(line: 511, column: 25, scope: !11069)
!11076 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11077)
!11077 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !11075)
!11078 = !DILocation(line: 0, scope: !11006, inlinedAt: !11077)
!11079 = !DILocation(line: 514, column: 6, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11069, file: !1976, line: 514, column: 6)
!11081 = !DILocation(line: 514, column: 25, scope: !11080)
!11082 = !DILocation(line: 514, column: 22, scope: !11080)
!11083 = !DILocation(line: 514, column: 6, scope: !11069)
!11084 = !DILocation(line: 515, column: 3, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11080, file: !1976, line: 514, column: 35)
!11086 = !DILocation(line: 0, scope: !11024, inlinedAt: !11087)
!11087 = distinct !DILocation(line: 516, column: 3, scope: !11085)
!11088 = !DILocation(line: 0, scope: !11032, inlinedAt: !11089)
!11089 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11087)
!11090 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11089)
!11091 = !DILocation(line: 517, column: 3, scope: !11085)
!11092 = !DILocation(line: 519, column: 18, scope: !11069)
!11093 = !DILocation(line: 522, column: 6, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11069, file: !1976, line: 522, column: 6)
!11095 = !DILocation(line: 522, column: 27, scope: !11094)
!11096 = !DILocation(line: 522, column: 30, scope: !11094)
!11097 = !DILocation(line: 522, column: 6, scope: !11069)
!11098 = !DILocation(line: 523, column: 30, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11100, file: !1976, line: 523, column: 7)
!11100 = distinct !DILexicalBlock(scope: !11094, file: !1976, line: 522, column: 51)
!11101 = !DILocation(line: 523, column: 13, scope: !11099)
!11102 = !DILocation(line: 523, column: 7, scope: !11100)
!11103 = !DILocation(line: 530, column: 10, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11099, file: !1976, line: 523, column: 43)
!11105 = !DILocation(line: 531, column: 3, scope: !11104)
!11106 = !DILocation(line: 532, column: 30, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11099, file: !1976, line: 531, column: 10)
!11108 = !DILocation(line: 535, column: 29, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11094, file: !1976, line: 534, column: 9)
!11110 = !DILocation(line: 0, scope: !11024, inlinedAt: !11111)
!11111 = distinct !DILocation(line: 537, column: 2, scope: !11069)
!11112 = !DILocation(line: 0, scope: !11032, inlinedAt: !11113)
!11113 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11111)
!11114 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11113)
!11115 = !DILocation(line: 538, column: 1, scope: !11069)
!11116 = distinct !DISubprogram(name: "sliceable", scope: !1976, file: !1976, line: 468, type: !11117, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11119)
!11117 = !DISubroutineType(types: !11118)
!11118 = !{!636, !1877}
!11119 = !{!11120, !11121}
!11120 = !DILocalVariable(name: "thread", arg: 1, scope: !11116, file: !1976, line: 468, type: !1877)
!11121 = !DILocalVariable(name: "ret", scope: !11116, file: !1976, line: 470, type: !636)
!11122 = !DILocation(line: 0, scope: !11116)
!11123 = !DILocation(line: 470, column: 13, scope: !11116)
!11124 = !DILocation(line: 471, column: 3, scope: !11116)
!11125 = !DILocation(line: 471, column: 7, scope: !11116)
!11126 = !DILocation(line: 472, column: 3, scope: !11116)
!11127 = !DILocation(line: 472, column: 37, scope: !11116)
!11128 = !DILocation(line: 472, column: 24, scope: !11116)
!11129 = !DILocation(line: 472, column: 43, scope: !11116)
!11130 = !DILocation(line: 472, column: 7, scope: !11116)
!11131 = !DILocation(line: 473, column: 3, scope: !11116)
!11132 = !DILocation(line: 473, column: 7, scope: !11116)
!11133 = !DILocation(line: 473, column: 6, scope: !11116)
!11134 = !DILocation(line: 479, column: 2, scope: !11116)
!11135 = distinct !DISubprogram(name: "slice_expired_locked", scope: !1976, file: !1976, line: 482, type: !11136, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11138)
!11136 = !DISubroutineType(types: !11137)
!11137 = !{!10989, !10989}
!11138 = !{!11139, !11140}
!11139 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !11135, file: !1976, line: 482, type: !10989)
!11140 = !DILocalVariable(name: "curr", scope: !11135, file: !1976, line: 484, type: !1877)
!11141 = !DILocation(line: 0, scope: !11135)
!11142 = !DILocation(line: 484, column: 26, scope: !11135)
!11143 = !DILocation(line: 493, column: 7, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11135, file: !1976, line: 493, column: 6)
!11145 = !DILocation(line: 493, column: 6, scope: !11135)
!11146 = !DILocation(line: 494, column: 3, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11144, file: !1976, line: 493, column: 49)
!11148 = !DILocation(line: 495, column: 2, scope: !11147)
!11149 = !DILocation(line: 496, column: 2, scope: !11135)
!11150 = !DILocation(line: 499, column: 1, scope: !11135)
!11151 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10291, file: !10291, line: 106, type: !11117, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11152)
!11152 = !{!11153, !11154}
!11153 = !DILocalVariable(name: "thread", arg: 1, scope: !11151, file: !10291, line: 106, type: !1877)
!11154 = !DILocalVariable(name: "state", scope: !11151, file: !10291, line: 108, type: !465)
!11155 = !DILocation(line: 0, scope: !11151)
!11156 = !DILocation(line: 108, column: 31, scope: !11151)
!11157 = !DILocation(line: 110, column: 16, scope: !11151)
!11158 = !DILocation(line: 111, column: 41, scope: !11151)
!11159 = !DILocation(line: 110, column: 2, scope: !11151)
!11160 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !1976, file: !1976, line: 393, type: !10955, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11161)
!11161 = !{!11162}
!11162 = !DILocalVariable(name: "thread", arg: 1, scope: !11160, file: !1976, line: 393, type: !1877)
!11163 = !DILocation(line: 0, scope: !11160)
!11164 = !DILocation(line: 395, column: 6, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11160, file: !1976, line: 395, column: 6)
!11166 = !DILocation(line: 395, column: 6, scope: !11160)
!11167 = !DILocalVariable(name: "thread", arg: 1, scope: !11168, file: !1976, line: 264, type: !1877)
!11168 = distinct !DISubprogram(name: "dequeue_thread", scope: !1976, file: !1976, line: 264, type: !10955, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11169)
!11169 = !{!11167}
!11170 = !DILocation(line: 0, scope: !11168, inlinedAt: !11171)
!11171 = distinct !DILocation(line: 396, column: 3, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11165, file: !1976, line: 395, column: 34)
!11173 = !DILocation(line: 266, column: 15, scope: !11168, inlinedAt: !11171)
!11174 = !DILocation(line: 266, column: 28, scope: !11168, inlinedAt: !11171)
!11175 = !DILocalVariable(name: "thread", arg: 1, scope: !11176, file: !1976, line: 232, type: !1877)
!11176 = distinct !DISubprogram(name: "runq_remove", scope: !1976, file: !1976, line: 232, type: !10955, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11177)
!11177 = !{!11175}
!11178 = !DILocation(line: 0, scope: !11176, inlinedAt: !11179)
!11179 = distinct !DILocation(line: 268, column: 3, scope: !11180, inlinedAt: !11171)
!11180 = distinct !DILexicalBlock(scope: !11181, file: !1976, line: 267, column: 35)
!11181 = distinct !DILexicalBlock(scope: !11168, file: !1976, line: 267, column: 6)
!11182 = !DILocation(line: 234, column: 2, scope: !11176, inlinedAt: !11179)
!11183 = !DILocation(line: 397, column: 2, scope: !11172)
!11184 = !DILocalVariable(name: "thread", arg: 1, scope: !11185, file: !1976, line: 250, type: !1877)
!11185 = distinct !DISubprogram(name: "queue_thread", scope: !1976, file: !1976, line: 250, type: !10955, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11186)
!11186 = !{!11184}
!11187 = !DILocation(line: 0, scope: !11185, inlinedAt: !11188)
!11188 = distinct !DILocation(line: 398, column: 2, scope: !11160)
!11189 = !DILocation(line: 252, column: 15, scope: !11185, inlinedAt: !11188)
!11190 = !DILocation(line: 252, column: 28, scope: !11185, inlinedAt: !11188)
!11191 = !DILocalVariable(name: "thread", arg: 1, scope: !11192, file: !1976, line: 227, type: !1877)
!11192 = distinct !DISubprogram(name: "runq_add", scope: !1976, file: !1976, line: 227, type: !10955, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11193)
!11193 = !{!11191}
!11194 = !DILocation(line: 0, scope: !11192, inlinedAt: !11195)
!11195 = distinct !DILocation(line: 254, column: 3, scope: !11196, inlinedAt: !11188)
!11196 = distinct !DILexicalBlock(scope: !11197, file: !1976, line: 253, column: 35)
!11197 = distinct !DILexicalBlock(scope: !11185, file: !1976, line: 253, column: 6)
!11198 = !DILocalVariable(name: "pq", arg: 1, scope: !11199, file: !1976, line: 181, type: !11202)
!11199 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !1976, file: !1976, line: 181, type: !11200, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11203)
!11200 = !DISubroutineType(types: !11201)
!11201 = !{null, !11202, !1877}
!11202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!11203 = !{!11198, !11204, !11205}
!11204 = !DILocalVariable(name: "thread", arg: 2, scope: !11199, file: !1976, line: 182, type: !1877)
!11205 = !DILocalVariable(name: "t", scope: !11199, file: !1976, line: 184, type: !1877)
!11206 = !DILocation(line: 0, scope: !11199, inlinedAt: !11207)
!11207 = distinct !DILocation(line: 229, column: 2, scope: !11192, inlinedAt: !11195)
!11208 = !DILocation(line: 188, column: 2, scope: !11209, inlinedAt: !11207)
!11209 = distinct !DILexicalBlock(scope: !11199, file: !1976, line: 188, column: 2)
!11210 = !DILocation(line: 188, column: 2, scope: !11211, inlinedAt: !11207)
!11211 = distinct !DILexicalBlock(scope: !11209, file: !1976, line: 188, column: 2)
!11212 = !DILocation(line: 0, scope: !11209, inlinedAt: !11207)
!11213 = !DILocation(line: 189, column: 7, scope: !11214, inlinedAt: !11207)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !1976, line: 189, column: 7)
!11215 = distinct !DILexicalBlock(scope: !11211, file: !1976, line: 188, column: 56)
!11216 = !DILocation(line: 189, column: 35, scope: !11214, inlinedAt: !11207)
!11217 = !DILocation(line: 189, column: 7, scope: !11215, inlinedAt: !11207)
!11218 = !DILocation(line: 191, column: 21, scope: !11219, inlinedAt: !11207)
!11219 = distinct !DILexicalBlock(scope: !11214, file: !1976, line: 189, column: 40)
!11220 = !DILocation(line: 190, column: 4, scope: !11219, inlinedAt: !11207)
!11221 = !DILocation(line: 192, column: 4, scope: !11219, inlinedAt: !11207)
!11222 = distinct !{!11222, !11208, !11223}
!11223 = !DILocation(line: 194, column: 2, scope: !11209, inlinedAt: !11207)
!11224 = !DILocation(line: 196, column: 37, scope: !11199, inlinedAt: !11207)
!11225 = !DILocation(line: 196, column: 2, scope: !11199, inlinedAt: !11207)
!11226 = !DILocation(line: 197, column: 1, scope: !11199, inlinedAt: !11207)
!11227 = !DILocation(line: 399, column: 25, scope: !11160)
!11228 = !DILocation(line: 399, column: 22, scope: !11160)
!11229 = !DILocation(line: 399, column: 2, scope: !11160)
!11230 = !DILocation(line: 400, column: 1, scope: !11160)
!11231 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10291, file: !10291, line: 136, type: !11117, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11232)
!11232 = !{!11233}
!11233 = !DILocalVariable(name: "thread", arg: 1, scope: !11231, file: !10291, line: 136, type: !1877)
!11234 = !DILocation(line: 0, scope: !11231)
!11235 = !DILocation(line: 138, column: 9, scope: !11231)
!11236 = !DILocation(line: 138, column: 2, scope: !11231)
!11237 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !1976, file: !1976, line: 1137, type: !11200, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11238)
!11238 = !{!11239, !11240}
!11239 = !DILocalVariable(name: "pq", arg: 1, scope: !11237, file: !1976, line: 1137, type: !11202)
!11240 = !DILocalVariable(name: "thread", arg: 2, scope: !11237, file: !1976, line: 1137, type: !1877)
!11241 = !DILocation(line: 0, scope: !11237)
!11242 = !DILocation(line: 1141, column: 33, scope: !11237)
!11243 = !DILocation(line: 1141, column: 2, scope: !11237)
!11244 = !DILocation(line: 1142, column: 1, scope: !11237)
!11245 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !1605, file: !1605, line: 294, type: !11246, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11248)
!11246 = !DISubroutineType(types: !11247)
!11247 = !{!1972, !11202}
!11248 = !{!11249}
!11249 = !DILocalVariable(name: "list", arg: 1, scope: !11245, file: !1605, line: 294, type: !11202)
!11250 = !DILocation(line: 0, scope: !11245)
!11251 = !DILocation(line: 296, column: 9, scope: !11245)
!11252 = !DILocation(line: 296, column: 49, scope: !11245)
!11253 = !DILocation(line: 296, column: 2, scope: !11245)
!11254 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !1605, file: !1605, line: 443, type: !11255, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11257)
!11255 = !DISubroutineType(types: !11256)
!11256 = !{null, !1972, !1972}
!11257 = !{!11258, !11259, !11260}
!11258 = !DILocalVariable(name: "successor", arg: 1, scope: !11254, file: !1605, line: 443, type: !1972)
!11259 = !DILocalVariable(name: "node", arg: 2, scope: !11254, file: !1605, line: 443, type: !1972)
!11260 = !DILocalVariable(name: "prev", scope: !11254, file: !1605, line: 445, type: !11261)
!11261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1972)
!11262 = !DILocation(line: 0, scope: !11254)
!11263 = !DILocation(line: 445, column: 39, scope: !11254)
!11264 = !DILocation(line: 447, column: 8, scope: !11254)
!11265 = !DILocation(line: 447, column: 13, scope: !11254)
!11266 = !DILocation(line: 448, column: 8, scope: !11254)
!11267 = !DILocation(line: 448, column: 13, scope: !11254)
!11268 = !DILocation(line: 449, column: 8, scope: !11254)
!11269 = !DILocation(line: 449, column: 13, scope: !11254)
!11270 = !DILocation(line: 450, column: 18, scope: !11254)
!11271 = !DILocation(line: 451, column: 1, scope: !11254)
!11272 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !1605, file: !1605, line: 341, type: !11273, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11275)
!11273 = !DISubroutineType(types: !11274)
!11274 = !{!1972, !11202, !1972}
!11275 = !{!11276, !11277}
!11276 = !DILocalVariable(name: "list", arg: 1, scope: !11272, file: !1605, line: 341, type: !11202)
!11277 = !DILocalVariable(name: "node", arg: 2, scope: !11272, file: !1605, line: 342, type: !1972)
!11278 = !DILocation(line: 0, scope: !11272)
!11279 = !DILocation(line: 344, column: 15, scope: !11272)
!11280 = !DILocation(line: 344, column: 9, scope: !11272)
!11281 = !DILocation(line: 344, column: 26, scope: !11272)
!11282 = !DILocation(line: 344, column: 2, scope: !11272)
!11283 = distinct !DISubprogram(name: "sys_dlist_append", scope: !1605, file: !1605, line: 404, type: !11284, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11286)
!11284 = !DISubroutineType(types: !11285)
!11285 = !{null, !11202, !1972}
!11286 = !{!11287, !11288, !11289}
!11287 = !DILocalVariable(name: "list", arg: 1, scope: !11283, file: !1605, line: 404, type: !11202)
!11288 = !DILocalVariable(name: "node", arg: 2, scope: !11283, file: !1605, line: 404, type: !1972)
!11289 = !DILocalVariable(name: "tail", scope: !11283, file: !1605, line: 406, type: !11261)
!11290 = !DILocation(line: 0, scope: !11283)
!11291 = !DILocation(line: 406, column: 34, scope: !11283)
!11292 = !DILocation(line: 408, column: 8, scope: !11283)
!11293 = !DILocation(line: 408, column: 13, scope: !11283)
!11294 = !DILocation(line: 409, column: 8, scope: !11283)
!11295 = !DILocation(line: 409, column: 13, scope: !11283)
!11296 = !DILocation(line: 411, column: 8, scope: !11283)
!11297 = !DILocation(line: 411, column: 13, scope: !11283)
!11298 = !DILocation(line: 412, column: 13, scope: !11283)
!11299 = !DILocation(line: 413, column: 1, scope: !11283)
!11300 = distinct !DISubprogram(name: "update_cache", scope: !1976, file: !1976, line: 559, type: !10248, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11301)
!11301 = !{!11302, !11303}
!11302 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !11300, file: !1976, line: 559, type: !103)
!11303 = !DILocalVariable(name: "thread", scope: !11300, file: !1976, line: 562, type: !1877)
!11304 = !DILocation(line: 0, scope: !11300)
!11305 = !DILocation(line: 239, column: 9, scope: !11306, inlinedAt: !11309)
!11306 = distinct !DISubprogram(name: "runq_best", scope: !1976, file: !1976, line: 237, type: !11307, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !162)
!11307 = !DISubroutineType(types: !11308)
!11308 = !{!1877}
!11309 = distinct !DILocation(line: 314, column: 28, scope: !11310, inlinedAt: !11313)
!11310 = distinct !DISubprogram(name: "next_up", scope: !1976, file: !1976, line: 312, type: !11307, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11311)
!11311 = !{!11312}
!11312 = !DILocalVariable(name: "thread", scope: !11310, file: !1976, line: 314, type: !1877)
!11313 = distinct !DILocation(line: 562, column: 28, scope: !11300)
!11314 = !DILocation(line: 0, scope: !11310, inlinedAt: !11313)
!11315 = !DILocation(line: 340, column: 17, scope: !11310, inlinedAt: !11313)
!11316 = !DILocation(line: 340, column: 9, scope: !11310, inlinedAt: !11313)
!11317 = !DILocalVariable(name: "thread", arg: 1, scope: !11318, file: !1976, line: 127, type: !1877)
!11318 = distinct !DISubprogram(name: "should_preempt", scope: !1976, file: !1976, line: 127, type: !11319, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11321)
!11319 = !DISubroutineType(types: !11320)
!11320 = !{!636, !1877, !103}
!11321 = !{!11317, !11322}
!11322 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !11318, file: !1976, line: 128, type: !103)
!11323 = !DILocation(line: 0, scope: !11318, inlinedAt: !11324)
!11324 = distinct !DILocation(line: 564, column: 6, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11300, file: !1976, line: 564, column: 6)
!11326 = !DILocation(line: 133, column: 17, scope: !11327, inlinedAt: !11324)
!11327 = distinct !DILexicalBlock(scope: !11318, file: !1976, line: 133, column: 6)
!11328 = !DILocation(line: 0, scope: !11325)
!11329 = !DILocation(line: 133, column: 6, scope: !11318, inlinedAt: !11324)
!11330 = !DILocation(line: 140, column: 6, scope: !11331, inlinedAt: !11324)
!11331 = distinct !DILexicalBlock(scope: !11318, file: !1976, line: 140, column: 6)
!11332 = !DILocation(line: 140, column: 6, scope: !11318, inlinedAt: !11324)
!11333 = !DILocation(line: 150, column: 9, scope: !11334, inlinedAt: !11324)
!11334 = distinct !DILexicalBlock(scope: !11318, file: !1976, line: 149, column: 6)
!11335 = !DILocation(line: 149, column: 6, scope: !11318, inlinedAt: !11324)
!11336 = !DILocation(line: 157, column: 6, scope: !11337, inlinedAt: !11324)
!11337 = distinct !DILexicalBlock(scope: !11318, file: !1976, line: 157, column: 6)
!11338 = !DILocation(line: 564, column: 6, scope: !11300)
!11339 = !DILocation(line: 566, column: 14, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !1976, line: 566, column: 7)
!11341 = distinct !DILexicalBlock(scope: !11325, file: !1976, line: 564, column: 42)
!11342 = !DILocation(line: 566, column: 7, scope: !11341)
!11343 = !DILocation(line: 567, column: 4, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11340, file: !1976, line: 566, column: 27)
!11345 = !DILocation(line: 568, column: 3, scope: !11344)
!11346 = !DILocation(line: 585, column: 1, scope: !11300)
!11347 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !1976, file: !1976, line: 1144, type: !11348, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11350)
!11348 = !DISubroutineType(types: !11349)
!11349 = !{!1877, !11202}
!11350 = !{!11351, !11352, !11353}
!11351 = !DILocalVariable(name: "pq", arg: 1, scope: !11347, file: !1976, line: 1144, type: !11202)
!11352 = !DILocalVariable(name: "thread", scope: !11347, file: !1976, line: 1146, type: !1877)
!11353 = !DILocalVariable(name: "n", scope: !11347, file: !1976, line: 1147, type: !1972)
!11354 = !DILocation(line: 0, scope: !11347)
!11355 = !DILocation(line: 1147, column: 19, scope: !11347)
!11356 = !DILocation(line: 1152, column: 2, scope: !11347)
!11357 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10291, file: !10291, line: 115, type: !11117, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11358)
!11358 = !{!11359}
!11359 = !DILocalVariable(name: "thread", arg: 1, scope: !11357, file: !10291, line: 115, type: !1877)
!11360 = !DILocation(line: 0, scope: !11357)
!11361 = !DILocation(line: 117, column: 46, scope: !11357)
!11362 = !DILocation(line: 117, column: 10, scope: !11357)
!11363 = !DILocation(line: 117, column: 9, scope: !11357)
!11364 = !DILocation(line: 117, column: 2, scope: !11357)
!11365 = distinct !DISubprogram(name: "is_preempt", scope: !1976, file: !1976, line: 62, type: !10973, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11366)
!11366 = !{!11367}
!11367 = !DILocalVariable(name: "thread", arg: 1, scope: !11365, file: !1976, line: 62, type: !1877)
!11368 = !DILocation(line: 0, scope: !11365)
!11369 = !DILocation(line: 65, column: 22, scope: !11365)
!11370 = !DILocation(line: 65, column: 30, scope: !11365)
!11371 = !DILocation(line: 65, column: 2, scope: !11365)
!11372 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !10663, file: !10663, line: 35, type: !11373, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11377)
!11373 = !DISubroutineType(types: !11374)
!11374 = !{!636, !11375}
!11375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11376, size: 32)
!11376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1928)
!11377 = !{!11378}
!11378 = !DILocalVariable(name: "to", arg: 1, scope: !11372, file: !10663, line: 35, type: !11375)
!11379 = !DILocation(line: 0, scope: !11372)
!11380 = !DILocation(line: 37, column: 35, scope: !11372)
!11381 = !DILocation(line: 37, column: 10, scope: !11372)
!11382 = !DILocation(line: 37, column: 9, scope: !11372)
!11383 = !DILocation(line: 37, column: 2, scope: !11372)
!11384 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !1605, file: !1605, line: 225, type: !11385, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11389)
!11385 = !DISubroutineType(types: !11386)
!11386 = !{!636, !11387}
!11387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11388, size: 32)
!11388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1887)
!11389 = !{!11390}
!11390 = !DILocalVariable(name: "node", arg: 1, scope: !11384, file: !1605, line: 225, type: !11387)
!11391 = !DILocation(line: 0, scope: !11384)
!11392 = !DILocation(line: 227, column: 15, scope: !11384)
!11393 = !DILocation(line: 227, column: 20, scope: !11384)
!11394 = !DILocation(line: 227, column: 2, scope: !11384)
!11395 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !1605, file: !1605, line: 325, type: !11273, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11396)
!11396 = !{!11397, !11398}
!11397 = !DILocalVariable(name: "list", arg: 1, scope: !11395, file: !1605, line: 325, type: !11202)
!11398 = !DILocalVariable(name: "node", arg: 2, scope: !11395, file: !1605, line: 326, type: !1972)
!11399 = !DILocation(line: 0, scope: !11395)
!11400 = !DILocation(line: 328, column: 24, scope: !11395)
!11401 = !DILocation(line: 328, column: 15, scope: !11395)
!11402 = !DILocation(line: 328, column: 9, scope: !11395)
!11403 = !DILocation(line: 328, column: 45, scope: !11395)
!11404 = !DILocation(line: 328, column: 2, scope: !11395)
!11405 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !1605, file: !1605, line: 266, type: !11406, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11408)
!11406 = !DISubroutineType(types: !11407)
!11407 = !{!636, !11202}
!11408 = !{!11409}
!11409 = !DILocalVariable(name: "list", arg: 1, scope: !11405, file: !1605, line: 266, type: !11202)
!11410 = !DILocation(line: 0, scope: !11405)
!11411 = !DILocation(line: 268, column: 15, scope: !11405)
!11412 = !DILocation(line: 268, column: 20, scope: !11405)
!11413 = !DILocation(line: 268, column: 2, scope: !11405)
!11414 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !1605, file: !1605, line: 496, type: !11415, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11417)
!11415 = !DISubroutineType(types: !11416)
!11416 = !{null, !1972}
!11417 = !{!11418, !11419, !11420}
!11418 = !DILocalVariable(name: "node", arg: 1, scope: !11414, file: !1605, line: 496, type: !1972)
!11419 = !DILocalVariable(name: "prev", scope: !11414, file: !1605, line: 498, type: !11261)
!11420 = !DILocalVariable(name: "next", scope: !11414, file: !1605, line: 499, type: !11261)
!11421 = !DILocation(line: 0, scope: !11414)
!11422 = !DILocation(line: 498, column: 34, scope: !11414)
!11423 = !DILocation(line: 499, column: 34, scope: !11414)
!11424 = !DILocation(line: 501, column: 8, scope: !11414)
!11425 = !DILocation(line: 501, column: 13, scope: !11414)
!11426 = !DILocation(line: 502, column: 8, scope: !11414)
!11427 = !DILocation(line: 502, column: 13, scope: !11414)
!11428 = !DILocation(line: 503, column: 2, scope: !11414)
!11429 = !DILocation(line: 504, column: 1, scope: !11414)
!11430 = distinct !DISubprogram(name: "sys_dnode_init", scope: !1605, file: !1605, line: 211, type: !11415, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11431)
!11431 = !{!11432}
!11432 = !DILocalVariable(name: "node", arg: 1, scope: !11430, file: !1605, line: 211, type: !1972)
!11433 = !DILocation(line: 0, scope: !11430)
!11434 = !DILocation(line: 213, column: 8, scope: !11430)
!11435 = !DILocation(line: 213, column: 13, scope: !11430)
!11436 = !DILocation(line: 214, column: 8, scope: !11430)
!11437 = !DILocation(line: 214, column: 13, scope: !11430)
!11438 = !DILocation(line: 215, column: 1, scope: !11430)
!11439 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10291, file: !10291, line: 131, type: !11440, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11442)
!11440 = !DISubroutineType(types: !11441)
!11441 = !{!636, !1877, !137}
!11442 = !{!11443, !11444}
!11443 = !DILocalVariable(name: "thread", arg: 1, scope: !11439, file: !10291, line: 131, type: !1877)
!11444 = !DILocalVariable(name: "state", arg: 2, scope: !11439, file: !10291, line: 131, type: !137)
!11445 = !DILocation(line: 0, scope: !11439)
!11446 = !DILocation(line: 133, column: 23, scope: !11439)
!11447 = !DILocation(line: 133, column: 45, scope: !11439)
!11448 = !DILocation(line: 133, column: 2, scope: !11439)
!11449 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10291, file: !10291, line: 211, type: !11450, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11452)
!11450 = !DISubroutineType(types: !11451)
!11451 = !{!636, !103, !103}
!11452 = !{!11453, !11454}
!11453 = !DILocalVariable(name: "prio", arg: 1, scope: !11449, file: !10291, line: 211, type: !103)
!11454 = !DILocalVariable(name: "test_prio", arg: 2, scope: !11449, file: !10291, line: 211, type: !103)
!11455 = !DILocation(line: 0, scope: !11449)
!11456 = !DILocation(line: 213, column: 9, scope: !11449)
!11457 = !DILocation(line: 213, column: 2, scope: !11449)
!11458 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10291, file: !10291, line: 83, type: !11117, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11459)
!11459 = !{!11460}
!11460 = !DILocalVariable(name: "thread", arg: 1, scope: !11458, file: !10291, line: 83, type: !1877)
!11461 = !DILocation(line: 0, scope: !11458)
!11462 = !DILocation(line: 89, column: 16, scope: !11458)
!11463 = !DILocation(line: 89, column: 2, scope: !11458)
!11464 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10291, file: !10291, line: 206, type: !11450, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11465)
!11465 = !{!11466, !11467}
!11466 = !DILocalVariable(name: "prio1", arg: 1, scope: !11464, file: !10291, line: 206, type: !103)
!11467 = !DILocalVariable(name: "prio2", arg: 2, scope: !11464, file: !10291, line: 206, type: !103)
!11468 = !DILocation(line: 0, scope: !11464)
!11469 = !DILocation(line: 208, column: 15, scope: !11464)
!11470 = !DILocation(line: 208, column: 2, scope: !11464)
!11471 = distinct !DISubprogram(name: "z_ready_thread", scope: !1976, file: !1976, line: 635, type: !10955, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11472)
!11472 = !{!11473, !11474, !11476}
!11473 = !DILocalVariable(name: "thread", arg: 1, scope: !11471, file: !1976, line: 635, type: !1877)
!11474 = !DILocalVariable(name: "__i", scope: !11475, file: !1976, line: 637, type: !10989)
!11475 = distinct !DILexicalBlock(scope: !11471, file: !1976, line: 637, column: 2)
!11476 = !DILocalVariable(name: "__key", scope: !11475, file: !1976, line: 637, type: !10989)
!11477 = !DILocation(line: 0, scope: !11471)
!11478 = !DILocation(line: 0, scope: !11475)
!11479 = !DILocation(line: 0, scope: !10997, inlinedAt: !11480)
!11480 = distinct !DILocation(line: 637, column: 2, scope: !11475)
!11481 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11482)
!11482 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !11480)
!11483 = !DILocation(line: 0, scope: !11006, inlinedAt: !11482)
!11484 = !DILocation(line: 639, column: 4, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11486, file: !1976, line: 638, column: 41)
!11486 = distinct !DILexicalBlock(scope: !11487, file: !1976, line: 638, column: 7)
!11487 = distinct !DILexicalBlock(scope: !11488, file: !1976, line: 637, column: 26)
!11488 = distinct !DILexicalBlock(scope: !11475, file: !1976, line: 637, column: 2)
!11489 = !DILocation(line: 0, scope: !11024, inlinedAt: !11490)
!11490 = distinct !DILocation(line: 637, column: 2, scope: !11488)
!11491 = !DILocation(line: 0, scope: !11032, inlinedAt: !11492)
!11492 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11490)
!11493 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11492)
!11494 = !DILocation(line: 642, column: 1, scope: !11471)
!11495 = distinct !DISubprogram(name: "ready_thread", scope: !1976, file: !1976, line: 617, type: !10955, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11496)
!11496 = !{!11497}
!11497 = !DILocalVariable(name: "thread", arg: 1, scope: !11495, file: !1976, line: 617, type: !1877)
!11498 = !DILocation(line: 0, scope: !11495)
!11499 = !DILocation(line: 626, column: 7, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11495, file: !1976, line: 626, column: 6)
!11501 = !DILocation(line: 626, column: 34, scope: !11500)
!11502 = !DILocation(line: 626, column: 37, scope: !11500)
!11503 = !DILocation(line: 626, column: 6, scope: !11495)
!11504 = !DILocation(line: 0, scope: !11185, inlinedAt: !11505)
!11505 = distinct !DILocation(line: 629, column: 3, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11500, file: !1976, line: 626, column: 64)
!11507 = !DILocation(line: 252, column: 15, scope: !11185, inlinedAt: !11505)
!11508 = !DILocation(line: 252, column: 28, scope: !11185, inlinedAt: !11505)
!11509 = !DILocation(line: 0, scope: !11192, inlinedAt: !11510)
!11510 = distinct !DILocation(line: 254, column: 3, scope: !11196, inlinedAt: !11505)
!11511 = !DILocation(line: 0, scope: !11199, inlinedAt: !11512)
!11512 = distinct !DILocation(line: 229, column: 2, scope: !11192, inlinedAt: !11510)
!11513 = !DILocation(line: 188, column: 2, scope: !11209, inlinedAt: !11512)
!11514 = !DILocation(line: 188, column: 2, scope: !11211, inlinedAt: !11512)
!11515 = !DILocation(line: 0, scope: !11209, inlinedAt: !11512)
!11516 = !DILocation(line: 189, column: 7, scope: !11214, inlinedAt: !11512)
!11517 = !DILocation(line: 189, column: 35, scope: !11214, inlinedAt: !11512)
!11518 = !DILocation(line: 189, column: 7, scope: !11215, inlinedAt: !11512)
!11519 = !DILocation(line: 191, column: 21, scope: !11219, inlinedAt: !11512)
!11520 = !DILocation(line: 190, column: 4, scope: !11219, inlinedAt: !11512)
!11521 = !DILocation(line: 192, column: 4, scope: !11219, inlinedAt: !11512)
!11522 = distinct !{!11522, !11513, !11523}
!11523 = !DILocation(line: 194, column: 2, scope: !11209, inlinedAt: !11512)
!11524 = !DILocation(line: 196, column: 37, scope: !11199, inlinedAt: !11512)
!11525 = !DILocation(line: 196, column: 2, scope: !11199, inlinedAt: !11512)
!11526 = !DILocation(line: 197, column: 1, scope: !11199, inlinedAt: !11512)
!11527 = !DILocation(line: 630, column: 3, scope: !11506)
!11528 = !DILocation(line: 632, column: 2, scope: !11506)
!11529 = !DILocation(line: 633, column: 1, scope: !11495)
!11530 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10291, file: !10291, line: 120, type: !11117, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11531)
!11531 = !{!11532}
!11532 = !DILocalVariable(name: "thread", arg: 1, scope: !11530, file: !10291, line: 120, type: !1877)
!11533 = !DILocation(line: 0, scope: !11530)
!11534 = !DILocation(line: 122, column: 12, scope: !11530)
!11535 = !DILocation(line: 122, column: 62, scope: !11530)
!11536 = !DILocation(line: 123, column: 4, scope: !11530)
!11537 = !DILocation(line: 122, column: 2, scope: !11530)
!11538 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !1976, file: !1976, line: 644, type: !10955, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11539)
!11539 = !{!11540, !11541, !11543}
!11540 = !DILocalVariable(name: "thread", arg: 1, scope: !11538, file: !1976, line: 644, type: !1877)
!11541 = !DILocalVariable(name: "__i", scope: !11542, file: !1976, line: 646, type: !10989)
!11542 = distinct !DILexicalBlock(scope: !11538, file: !1976, line: 646, column: 2)
!11543 = !DILocalVariable(name: "__key", scope: !11542, file: !1976, line: 646, type: !10989)
!11544 = !DILocation(line: 0, scope: !11538)
!11545 = !DILocation(line: 0, scope: !11542)
!11546 = !DILocation(line: 0, scope: !10997, inlinedAt: !11547)
!11547 = distinct !DILocation(line: 646, column: 2, scope: !11542)
!11548 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11549)
!11549 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !11547)
!11550 = !DILocation(line: 0, scope: !11006, inlinedAt: !11549)
!11551 = !DILocation(line: 647, column: 3, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11553, file: !1976, line: 646, column: 26)
!11553 = distinct !DILexicalBlock(scope: !11542, file: !1976, line: 646, column: 2)
!11554 = !DILocation(line: 0, scope: !11024, inlinedAt: !11555)
!11555 = distinct !DILocation(line: 646, column: 2, scope: !11553)
!11556 = !DILocation(line: 0, scope: !11032, inlinedAt: !11557)
!11557 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11555)
!11558 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11557)
!11559 = !DILocation(line: 649, column: 1, scope: !11538)
!11560 = distinct !DISubprogram(name: "z_sched_start", scope: !1976, file: !1976, line: 651, type: !10955, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11561)
!11561 = !{!11562, !11563}
!11562 = !DILocalVariable(name: "thread", arg: 1, scope: !11560, file: !1976, line: 651, type: !1877)
!11563 = !DILocalVariable(name: "key", scope: !11560, file: !1976, line: 653, type: !10989)
!11564 = !DILocation(line: 0, scope: !11560)
!11565 = !DILocation(line: 0, scope: !10997, inlinedAt: !11566)
!11566 = distinct !DILocation(line: 653, column: 25, scope: !11560)
!11567 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11568)
!11568 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !11566)
!11569 = !DILocation(line: 0, scope: !11006, inlinedAt: !11568)
!11570 = !DILocation(line: 655, column: 6, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11560, file: !1976, line: 655, column: 6)
!11572 = !DILocation(line: 655, column: 6, scope: !11560)
!11573 = !DILocation(line: 0, scope: !11024, inlinedAt: !11574)
!11574 = distinct !DILocation(line: 656, column: 3, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11571, file: !1976, line: 655, column: 36)
!11576 = !DILocation(line: 0, scope: !11032, inlinedAt: !11577)
!11577 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11574)
!11578 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11577)
!11579 = !DILocation(line: 657, column: 3, scope: !11575)
!11580 = !DILocation(line: 660, column: 2, scope: !11560)
!11581 = !DILocation(line: 661, column: 2, scope: !11560)
!11582 = !DILocation(line: 662, column: 2, scope: !11560)
!11583 = !DILocation(line: 663, column: 1, scope: !11560)
!11584 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10291, file: !10291, line: 126, type: !11117, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11585)
!11585 = !{!11586}
!11586 = !DILocalVariable(name: "thread", arg: 1, scope: !11584, file: !10291, line: 126, type: !1877)
!11587 = !DILocation(line: 0, scope: !11584)
!11588 = !DILocation(line: 128, column: 23, scope: !11584)
!11589 = !DILocation(line: 128, column: 36, scope: !11584)
!11590 = !DILocation(line: 128, column: 56, scope: !11584)
!11591 = !DILocation(line: 128, column: 2, scope: !11584)
!11592 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10291, file: !10291, line: 155, type: !10955, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11593)
!11593 = !{!11594}
!11594 = !DILocalVariable(name: "thread", arg: 1, scope: !11592, file: !10291, line: 155, type: !1877)
!11595 = !DILocation(line: 0, scope: !11592)
!11596 = !DILocation(line: 157, column: 15, scope: !11592)
!11597 = !DILocation(line: 157, column: 28, scope: !11592)
!11598 = !DILocation(line: 158, column: 1, scope: !11592)
!11599 = distinct !DISubprogram(name: "z_reschedule", scope: !1976, file: !1976, line: 967, type: !11025, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11600)
!11600 = !{!11601, !11602}
!11601 = !DILocalVariable(name: "lock", arg: 1, scope: !11599, file: !1976, line: 967, type: !11000)
!11602 = !DILocalVariable(name: "key", arg: 2, scope: !11599, file: !1976, line: 967, type: !10989)
!11603 = !DILocation(line: 0, scope: !11599)
!11604 = !DILocation(line: 969, column: 6, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11599, file: !1976, line: 969, column: 6)
!11606 = !DILocation(line: 969, column: 23, scope: !11605)
!11607 = !DILocation(line: 969, column: 26, scope: !11605)
!11608 = !DILocation(line: 969, column: 6, scope: !11599)
!11609 = !DILocalVariable(name: "key", arg: 2, scope: !11610, file: !10393, line: 193, type: !10989)
!11610 = distinct !DISubprogram(name: "z_swap", scope: !10393, file: !10393, line: 193, type: !11611, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11613)
!11611 = !DISubroutineType(types: !11612)
!11612 = !{!103, !11000, !10989}
!11613 = !{!11614, !11609}
!11614 = !DILocalVariable(name: "lock", arg: 1, scope: !11610, file: !10393, line: 193, type: !11000)
!11615 = !DILocation(line: 0, scope: !11610, inlinedAt: !11616)
!11616 = distinct !DILocation(line: 970, column: 3, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11605, file: !1976, line: 969, column: 39)
!11618 = !DILocation(line: 196, column: 9, scope: !11610, inlinedAt: !11616)
!11619 = !DILocation(line: 971, column: 2, scope: !11617)
!11620 = !DILocation(line: 0, scope: !11024, inlinedAt: !11621)
!11621 = distinct !DILocation(line: 972, column: 3, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11605, file: !1976, line: 971, column: 9)
!11623 = !DILocation(line: 0, scope: !11032, inlinedAt: !11624)
!11624 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11621)
!11625 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11624)
!11626 = !DILocation(line: 975, column: 1, scope: !11599)
!11627 = distinct !DISubprogram(name: "resched", scope: !1976, file: !1976, line: 940, type: !11628, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11630)
!11628 = !DISubroutineType(types: !11629)
!11629 = !{!636, !137}
!11630 = !{!11631}
!11631 = !DILocalVariable(name: "key", arg: 1, scope: !11627, file: !1976, line: 940, type: !137)
!11632 = !DILocation(line: 0, scope: !11627)
!11633 = !DILocalVariable(name: "key", arg: 1, scope: !11634, file: !6193, line: 112, type: !32)
!11634 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6193, file: !6193, line: 112, type: !11635, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11637)
!11635 = !DISubroutineType(types: !11636)
!11636 = !{!636, !32}
!11637 = !{!11633}
!11638 = !DILocation(line: 0, scope: !11634, inlinedAt: !11639)
!11639 = distinct !DILocation(line: 946, column: 9, scope: !11627)
!11640 = !DILocation(line: 115, column: 13, scope: !11634, inlinedAt: !11639)
!11641 = !DILocation(line: 946, column: 32, scope: !11627)
!11642 = !DILocation(line: 1031, column: 3, scope: !11643, inlinedAt: !11646)
!11643 = distinct !DISubprogram(name: "__get_IPSR", scope: !6080, file: !6080, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11644)
!11644 = !{!11645}
!11645 = !DILocalVariable(name: "result", scope: !11643, file: !6080, line: 1029, type: !137)
!11646 = distinct !DILocation(line: 48, column: 10, scope: !11647, inlinedAt: !11648)
!11647 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6813, file: !6813, line: 46, type: !6814, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !162)
!11648 = distinct !DILocation(line: 946, column: 36, scope: !11627)
!11649 = !{i64 7007741}
!11650 = !DILocation(line: 0, scope: !11643, inlinedAt: !11646)
!11651 = !DILocation(line: 48, column: 9, scope: !11647, inlinedAt: !11648)
!11652 = !DILocation(line: 946, column: 2, scope: !11627)
!11653 = distinct !DISubprogram(name: "need_swap", scope: !1976, file: !1976, line: 953, type: !6814, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11654)
!11654 = !{!11655}
!11655 = !DILocalVariable(name: "new_thread", scope: !11653, file: !1976, line: 959, type: !1877)
!11656 = !DILocation(line: 962, column: 31, scope: !11653)
!11657 = !DILocation(line: 0, scope: !11653)
!11658 = !DILocation(line: 963, column: 23, scope: !11653)
!11659 = !DILocation(line: 963, column: 20, scope: !11653)
!11660 = !DILocation(line: 963, column: 2, scope: !11653)
!11661 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10393, file: !10393, line: 181, type: !6090, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11662)
!11662 = !{!11663, !11664}
!11663 = !DILocalVariable(name: "key", arg: 1, scope: !11661, file: !10393, line: 181, type: !32)
!11664 = !DILocalVariable(name: "ret", scope: !11661, file: !10393, line: 183, type: !103)
!11665 = !DILocation(line: 0, scope: !11661)
!11666 = !DILocation(line: 185, column: 8, scope: !11661)
!11667 = !DILocation(line: 186, column: 2, scope: !11661)
!11668 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !1976, file: !1976, line: 665, type: !10955, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11669)
!11669 = !{!11670, !11671, !11673}
!11670 = !DILocalVariable(name: "thread", arg: 1, scope: !11668, file: !1976, line: 665, type: !1877)
!11671 = !DILocalVariable(name: "__i", scope: !11672, file: !1976, line: 671, type: !10989)
!11672 = distinct !DILexicalBlock(scope: !11668, file: !1976, line: 671, column: 2)
!11673 = !DILocalVariable(name: "__key", scope: !11672, file: !1976, line: 671, type: !10989)
!11674 = !DILocation(line: 0, scope: !11668)
!11675 = !DILocation(line: 669, column: 8, scope: !11668)
!11676 = !DILocation(line: 0, scope: !11672)
!11677 = !DILocation(line: 0, scope: !10997, inlinedAt: !11678)
!11678 = distinct !DILocation(line: 671, column: 2, scope: !11672)
!11679 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11680)
!11680 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !11678)
!11681 = !DILocation(line: 0, scope: !11006, inlinedAt: !11680)
!11682 = !DILocation(line: 672, column: 7, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !1976, line: 672, column: 7)
!11684 = distinct !DILexicalBlock(scope: !11685, file: !1976, line: 671, column: 26)
!11685 = distinct !DILexicalBlock(scope: !11672, file: !1976, line: 671, column: 2)
!11686 = !DILocation(line: 672, column: 7, scope: !11684)
!11687 = !DILocation(line: 0, scope: !11168, inlinedAt: !11688)
!11688 = distinct !DILocation(line: 673, column: 4, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11683, file: !1976, line: 672, column: 35)
!11690 = !DILocation(line: 266, column: 15, scope: !11168, inlinedAt: !11688)
!11691 = !DILocation(line: 266, column: 28, scope: !11168, inlinedAt: !11688)
!11692 = !DILocation(line: 0, scope: !11176, inlinedAt: !11693)
!11693 = distinct !DILocation(line: 268, column: 3, scope: !11180, inlinedAt: !11688)
!11694 = !DILocation(line: 234, column: 2, scope: !11176, inlinedAt: !11693)
!11695 = !DILocation(line: 674, column: 3, scope: !11689)
!11696 = !DILocation(line: 675, column: 3, scope: !11684)
!11697 = !DILocation(line: 676, column: 26, scope: !11684)
!11698 = !DILocation(line: 676, column: 23, scope: !11684)
!11699 = !DILocation(line: 676, column: 3, scope: !11684)
!11700 = !DILocation(line: 0, scope: !11024, inlinedAt: !11701)
!11701 = distinct !DILocation(line: 671, column: 2, scope: !11685)
!11702 = !DILocation(line: 0, scope: !11032, inlinedAt: !11703)
!11703 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11701)
!11704 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11703)
!11705 = !DILocation(line: 679, column: 16, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11668, file: !1976, line: 679, column: 6)
!11707 = !DILocation(line: 679, column: 13, scope: !11706)
!11708 = !DILocation(line: 679, column: 6, scope: !11668)
!11709 = !DILocation(line: 680, column: 3, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11706, file: !1976, line: 679, column: 26)
!11711 = !DILocation(line: 681, column: 2, scope: !11710)
!11712 = !DILocation(line: 684, column: 1, scope: !11668)
!11713 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !10663, file: !10663, line: 52, type: !10973, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11714)
!11714 = !{!11715}
!11715 = !DILocalVariable(name: "thread", arg: 1, scope: !11713, file: !10663, line: 52, type: !1877)
!11716 = !DILocation(line: 0, scope: !11713)
!11717 = !DILocation(line: 54, column: 39, scope: !11713)
!11718 = !DILocation(line: 54, column: 9, scope: !11713)
!11719 = !DILocation(line: 54, column: 2, scope: !11713)
!11720 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10291, file: !10291, line: 141, type: !10955, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11721)
!11721 = !{!11722}
!11722 = !DILocalVariable(name: "thread", arg: 1, scope: !11720, file: !10291, line: 141, type: !1877)
!11723 = !DILocation(line: 0, scope: !11720)
!11724 = !DILocation(line: 143, column: 15, scope: !11720)
!11725 = !DILocation(line: 143, column: 28, scope: !11720)
!11726 = !DILocation(line: 146, column: 1, scope: !11720)
!11727 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10291, file: !10291, line: 73, type: !2671, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !162)
!11728 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11729)
!11729 = distinct !DILocation(line: 75, column: 30, scope: !11727)
!11730 = !DILocation(line: 0, scope: !11006, inlinedAt: !11729)
!11731 = !DILocation(line: 75, column: 9, scope: !11727)
!11732 = !DILocation(line: 76, column: 1, scope: !11727)
!11733 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !1976, file: !1976, line: 977, type: !6169, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11734)
!11734 = !{!11735}
!11735 = !DILocalVariable(name: "key", arg: 1, scope: !11733, file: !1976, line: 977, type: !137)
!11736 = !DILocation(line: 0, scope: !11733)
!11737 = !DILocation(line: 979, column: 6, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11733, file: !1976, line: 979, column: 6)
!11739 = !DILocation(line: 979, column: 6, scope: !11733)
!11740 = !DILocation(line: 980, column: 3, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11738, file: !1976, line: 979, column: 20)
!11742 = !DILocation(line: 981, column: 2, scope: !11741)
!11743 = !DILocation(line: 0, scope: !11032, inlinedAt: !11744)
!11744 = distinct !DILocation(line: 982, column: 3, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11738, file: !1976, line: 981, column: 9)
!11746 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11744)
!11747 = !DILocation(line: 985, column: 1, scope: !11733)
!11748 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !1976, file: !1976, line: 695, type: !10955, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11749)
!11749 = !{!11750, !11751}
!11750 = !DILocalVariable(name: "thread", arg: 1, scope: !11748, file: !1976, line: 695, type: !1877)
!11751 = !DILocalVariable(name: "key", scope: !11748, file: !1976, line: 699, type: !10989)
!11752 = !DILocation(line: 0, scope: !11748)
!11753 = !DILocation(line: 0, scope: !10997, inlinedAt: !11754)
!11754 = distinct !DILocation(line: 699, column: 25, scope: !11748)
!11755 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11756)
!11756 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !11754)
!11757 = !DILocation(line: 0, scope: !11006, inlinedAt: !11756)
!11758 = !DILocation(line: 702, column: 7, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11748, file: !1976, line: 702, column: 6)
!11760 = !DILocation(line: 702, column: 6, scope: !11748)
!11761 = !DILocation(line: 0, scope: !11024, inlinedAt: !11762)
!11762 = distinct !DILocation(line: 703, column: 3, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11759, file: !1976, line: 702, column: 38)
!11764 = !DILocation(line: 0, scope: !11032, inlinedAt: !11765)
!11765 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11762)
!11766 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11765)
!11767 = !DILocation(line: 704, column: 3, scope: !11763)
!11768 = !DILocation(line: 707, column: 2, scope: !11748)
!11769 = !DILocation(line: 708, column: 2, scope: !11748)
!11770 = !DILocation(line: 710, column: 2, scope: !11748)
!11771 = !DILocation(line: 713, column: 1, scope: !11748)
!11772 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10291, file: !10291, line: 96, type: !11117, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11773)
!11773 = !{!11774}
!11774 = !DILocalVariable(name: "thread", arg: 1, scope: !11772, file: !10291, line: 96, type: !1877)
!11775 = !DILocation(line: 0, scope: !11772)
!11776 = !DILocation(line: 98, column: 23, scope: !11772)
!11777 = !DILocation(line: 98, column: 36, scope: !11772)
!11778 = !DILocation(line: 98, column: 57, scope: !11772)
!11779 = !DILocation(line: 98, column: 2, scope: !11772)
!11780 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10291, file: !10291, line: 148, type: !10955, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11781)
!11781 = !{!11782}
!11782 = !DILocalVariable(name: "thread", arg: 1, scope: !11780, file: !10291, line: 148, type: !1877)
!11783 = !DILocation(line: 0, scope: !11780)
!11784 = !DILocation(line: 150, column: 15, scope: !11780)
!11785 = !DILocation(line: 150, column: 28, scope: !11780)
!11786 = !DILocation(line: 153, column: 1, scope: !11780)
!11787 = distinct !DISubprogram(name: "z_pend_thread", scope: !1976, file: !1976, line: 770, type: !11788, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11794)
!11788 = !DISubroutineType(types: !11789)
!11789 = !{null, !1877, !1908, !11790}
!11790 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1342, line: 67, baseType: !11791)
!11791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1342, line: 65, size: 64, elements: !11792)
!11792 = !{!11793}
!11793 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11791, file: !1342, line: 66, baseType: !1341, size: 64)
!11794 = !{!11795, !11796, !11797, !11798, !11800}
!11795 = !DILocalVariable(name: "thread", arg: 1, scope: !11787, file: !1976, line: 770, type: !1877)
!11796 = !DILocalVariable(name: "wait_q", arg: 2, scope: !11787, file: !1976, line: 770, type: !1908)
!11797 = !DILocalVariable(name: "timeout", arg: 3, scope: !11787, file: !1976, line: 771, type: !11790)
!11798 = !DILocalVariable(name: "__i", scope: !11799, file: !1976, line: 774, type: !10989)
!11799 = distinct !DILexicalBlock(scope: !11787, file: !1976, line: 774, column: 2)
!11800 = !DILocalVariable(name: "__key", scope: !11799, file: !1976, line: 774, type: !10989)
!11801 = !DILocation(line: 0, scope: !11787)
!11802 = !DILocation(line: 0, scope: !11799)
!11803 = !DILocation(line: 0, scope: !10997, inlinedAt: !11804)
!11804 = distinct !DILocation(line: 774, column: 2, scope: !11799)
!11805 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11806)
!11806 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !11804)
!11807 = !DILocation(line: 0, scope: !11006, inlinedAt: !11806)
!11808 = !DILocation(line: 775, column: 3, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11810, file: !1976, line: 774, column: 26)
!11810 = distinct !DILexicalBlock(scope: !11799, file: !1976, line: 774, column: 2)
!11811 = !DILocation(line: 0, scope: !11024, inlinedAt: !11812)
!11812 = distinct !DILocation(line: 774, column: 2, scope: !11810)
!11813 = !DILocation(line: 0, scope: !11032, inlinedAt: !11814)
!11814 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11812)
!11815 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11814)
!11816 = !DILocation(line: 777, column: 1, scope: !11787)
!11817 = distinct !DISubprogram(name: "pend_locked", scope: !1976, file: !1976, line: 760, type: !11788, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11818)
!11818 = !{!11819, !11820, !11821}
!11819 = !DILocalVariable(name: "thread", arg: 1, scope: !11817, file: !1976, line: 760, type: !1877)
!11820 = !DILocalVariable(name: "wait_q", arg: 2, scope: !11817, file: !1976, line: 760, type: !1908)
!11821 = !DILocalVariable(name: "timeout", arg: 3, scope: !11817, file: !1976, line: 761, type: !11790)
!11822 = !DILocation(line: 0, scope: !11817)
!11823 = !DILocation(line: 766, column: 2, scope: !11817)
!11824 = !DILocation(line: 767, column: 2, scope: !11817)
!11825 = !DILocation(line: 768, column: 1, scope: !11817)
!11826 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !1976, file: !1976, line: 740, type: !11827, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11829)
!11827 = !DISubroutineType(types: !11828)
!11828 = !{null, !1877, !1908}
!11829 = !{!11830, !11831}
!11830 = !DILocalVariable(name: "thread", arg: 1, scope: !11826, file: !1976, line: 740, type: !1877)
!11831 = !DILocalVariable(name: "wait_q", arg: 2, scope: !11826, file: !1976, line: 740, type: !1908)
!11832 = !DILocation(line: 0, scope: !11826)
!11833 = !DILocation(line: 742, column: 2, scope: !11826)
!11834 = !DILocation(line: 743, column: 2, scope: !11826)
!11835 = !DILocation(line: 747, column: 13, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11826, file: !1976, line: 747, column: 6)
!11837 = !DILocation(line: 747, column: 6, scope: !11826)
!11838 = !DILocation(line: 748, column: 16, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11836, file: !1976, line: 747, column: 22)
!11840 = !DILocation(line: 748, column: 26, scope: !11839)
!11841 = !DILocation(line: 749, column: 28, scope: !11839)
!11842 = !DILocation(line: 0, scope: !11199, inlinedAt: !11843)
!11843 = distinct !DILocation(line: 749, column: 3, scope: !11839)
!11844 = !DILocation(line: 188, column: 2, scope: !11209, inlinedAt: !11843)
!11845 = !DILocation(line: 188, column: 2, scope: !11211, inlinedAt: !11843)
!11846 = !DILocation(line: 0, scope: !11209, inlinedAt: !11843)
!11847 = !DILocation(line: 189, column: 7, scope: !11214, inlinedAt: !11843)
!11848 = !DILocation(line: 189, column: 35, scope: !11214, inlinedAt: !11843)
!11849 = !DILocation(line: 189, column: 7, scope: !11215, inlinedAt: !11843)
!11850 = !DILocation(line: 191, column: 21, scope: !11219, inlinedAt: !11843)
!11851 = !DILocation(line: 190, column: 4, scope: !11219, inlinedAt: !11843)
!11852 = !DILocation(line: 192, column: 4, scope: !11219, inlinedAt: !11843)
!11853 = distinct !{!11853, !11844, !11854}
!11854 = !DILocation(line: 194, column: 2, scope: !11209, inlinedAt: !11843)
!11855 = !DILocation(line: 196, column: 37, scope: !11199, inlinedAt: !11843)
!11856 = !DILocation(line: 196, column: 2, scope: !11199, inlinedAt: !11843)
!11857 = !DILocation(line: 197, column: 1, scope: !11199, inlinedAt: !11843)
!11858 = !DILocation(line: 751, column: 1, scope: !11826)
!11859 = distinct !DISubprogram(name: "add_thread_timeout", scope: !1976, file: !1976, line: 753, type: !11860, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11862)
!11860 = !DISubroutineType(types: !11861)
!11861 = !{null, !1877, !11790}
!11862 = !{!11863, !11864}
!11863 = !DILocalVariable(name: "thread", arg: 1, scope: !11859, file: !1976, line: 753, type: !1877)
!11864 = !DILocalVariable(name: "timeout", arg: 2, scope: !11859, file: !1976, line: 753, type: !11790)
!11865 = !DILocation(line: 0, scope: !11859)
!11866 = !DILocation(line: 755, column: 7, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11859, file: !1976, line: 755, column: 6)
!11868 = !DILocation(line: 755, column: 6, scope: !11859)
!11869 = !DILocation(line: 756, column: 3, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11867, file: !1976, line: 755, column: 41)
!11871 = !DILocation(line: 757, column: 2, scope: !11870)
!11872 = !DILocation(line: 758, column: 1, scope: !11859)
!11873 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !10663, file: !10663, line: 47, type: !11860, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11874)
!11874 = !{!11875, !11876}
!11875 = !DILocalVariable(name: "thread", arg: 1, scope: !11873, file: !10663, line: 47, type: !1877)
!11876 = !DILocalVariable(name: "ticks", arg: 2, scope: !11873, file: !10663, line: 47, type: !11790)
!11877 = !DILocation(line: 0, scope: !11873)
!11878 = !DILocation(line: 49, column: 30, scope: !11873)
!11879 = !DILocation(line: 49, column: 2, scope: !11873)
!11880 = !DILocation(line: 50, column: 1, scope: !11873)
!11881 = distinct !DISubprogram(name: "z_thread_timeout", scope: !1976, file: !1976, line: 795, type: !1934, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11882)
!11882 = !{!11883, !11884, !11885, !11887, !11888}
!11883 = !DILocalVariable(name: "timeout", arg: 1, scope: !11881, file: !1976, line: 795, type: !1936)
!11884 = !DILocalVariable(name: "thread", scope: !11881, file: !1976, line: 797, type: !1877)
!11885 = !DILocalVariable(name: "__i", scope: !11886, file: !1976, line: 800, type: !10989)
!11886 = distinct !DILexicalBlock(scope: !11881, file: !1976, line: 800, column: 2)
!11887 = !DILocalVariable(name: "__key", scope: !11886, file: !1976, line: 800, type: !10989)
!11888 = !DILocalVariable(name: "killed", scope: !11889, file: !1976, line: 801, type: !636)
!11889 = distinct !DILexicalBlock(scope: !11890, file: !1976, line: 800, column: 26)
!11890 = distinct !DILexicalBlock(scope: !11886, file: !1976, line: 800, column: 2)
!11891 = !DILocation(line: 0, scope: !11881)
!11892 = !DILocation(line: 797, column: 28, scope: !11881)
!11893 = !DILocation(line: 0, scope: !11886)
!11894 = !DILocation(line: 0, scope: !10997, inlinedAt: !11895)
!11895 = distinct !DILocation(line: 800, column: 2, scope: !11886)
!11896 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11897)
!11897 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !11895)
!11898 = !DILocation(line: 0, scope: !11006, inlinedAt: !11897)
!11899 = !DILocation(line: 801, column: 27, scope: !11889)
!11900 = !DILocation(line: 801, column: 32, scope: !11889)
!11901 = !DILocation(line: 801, column: 61, scope: !11889)
!11902 = !DILocation(line: 0, scope: !11889)
!11903 = !DILocation(line: 804, column: 7, scope: !11889)
!11904 = !DILocation(line: 805, column: 21, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !1976, line: 805, column: 8)
!11906 = distinct !DILexicalBlock(scope: !11907, file: !1976, line: 804, column: 16)
!11907 = distinct !DILexicalBlock(scope: !11889, file: !1976, line: 804, column: 7)
!11908 = !DILocation(line: 805, column: 31, scope: !11905)
!11909 = !DILocation(line: 805, column: 8, scope: !11906)
!11910 = !DILocation(line: 806, column: 5, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11905, file: !1976, line: 805, column: 40)
!11912 = !DILocation(line: 807, column: 4, scope: !11911)
!11913 = !DILocation(line: 808, column: 4, scope: !11906)
!11914 = !DILocation(line: 809, column: 4, scope: !11906)
!11915 = !DILocation(line: 810, column: 4, scope: !11906)
!11916 = !DILocation(line: 811, column: 3, scope: !11906)
!11917 = !DILocation(line: 0, scope: !11024, inlinedAt: !11918)
!11918 = distinct !DILocation(line: 800, column: 2, scope: !11890)
!11919 = !DILocation(line: 0, scope: !11032, inlinedAt: !11920)
!11920 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11918)
!11921 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11920)
!11922 = !DILocation(line: 813, column: 1, scope: !11881)
!11923 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !1976, file: !1976, line: 779, type: !10955, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11924)
!11924 = !{!11925}
!11925 = !DILocalVariable(name: "thread", arg: 1, scope: !11923, file: !1976, line: 779, type: !1877)
!11926 = !DILocation(line: 0, scope: !11923)
!11927 = !DILocation(line: 781, column: 2, scope: !11923)
!11928 = !DILocation(line: 782, column: 2, scope: !11923)
!11929 = !DILocation(line: 783, column: 15, scope: !11923)
!11930 = !DILocation(line: 783, column: 25, scope: !11923)
!11931 = !DILocation(line: 784, column: 1, scope: !11923)
!11932 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10291, file: !10291, line: 165, type: !10955, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11933)
!11933 = !{!11934}
!11934 = !DILocalVariable(name: "thread", arg: 1, scope: !11932, file: !10291, line: 165, type: !1877)
!11935 = !DILocation(line: 0, scope: !11932)
!11936 = !DILocation(line: 167, column: 15, scope: !11932)
!11937 = !DILocation(line: 167, column: 28, scope: !11932)
!11938 = !DILocation(line: 168, column: 1, scope: !11932)
!11939 = distinct !DISubprogram(name: "unready_thread", scope: !1976, file: !1976, line: 731, type: !10955, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11940)
!11940 = !{!11941}
!11941 = !DILocalVariable(name: "thread", arg: 1, scope: !11939, file: !1976, line: 731, type: !1877)
!11942 = !DILocation(line: 0, scope: !11939)
!11943 = !DILocation(line: 733, column: 6, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11939, file: !1976, line: 733, column: 6)
!11945 = !DILocation(line: 733, column: 6, scope: !11939)
!11946 = !DILocation(line: 0, scope: !11168, inlinedAt: !11947)
!11947 = distinct !DILocation(line: 734, column: 3, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11944, file: !1976, line: 733, column: 34)
!11949 = !DILocation(line: 266, column: 15, scope: !11168, inlinedAt: !11947)
!11950 = !DILocation(line: 266, column: 28, scope: !11168, inlinedAt: !11947)
!11951 = !DILocation(line: 0, scope: !11176, inlinedAt: !11952)
!11952 = distinct !DILocation(line: 268, column: 3, scope: !11180, inlinedAt: !11947)
!11953 = !DILocation(line: 234, column: 2, scope: !11176, inlinedAt: !11952)
!11954 = !DILocation(line: 735, column: 2, scope: !11948)
!11955 = !DILocation(line: 736, column: 25, scope: !11939)
!11956 = !DILocation(line: 736, column: 22, scope: !11939)
!11957 = !DILocation(line: 736, column: 2, scope: !11939)
!11958 = !DILocation(line: 737, column: 1, scope: !11939)
!11959 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10291, file: !10291, line: 160, type: !10955, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11960)
!11960 = !{!11961}
!11961 = !DILocalVariable(name: "thread", arg: 1, scope: !11959, file: !10291, line: 160, type: !1877)
!11962 = !DILocation(line: 0, scope: !11959)
!11963 = !DILocation(line: 162, column: 15, scope: !11959)
!11964 = !DILocation(line: 162, column: 28, scope: !11959)
!11965 = !DILocation(line: 163, column: 1, scope: !11959)
!11966 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !1976, file: !1976, line: 786, type: !10955, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11967)
!11967 = !{!11968, !11969, !11971}
!11968 = !DILocalVariable(name: "thread", arg: 1, scope: !11966, file: !1976, line: 786, type: !1877)
!11969 = !DILocalVariable(name: "__i", scope: !11970, file: !1976, line: 788, type: !10989)
!11970 = distinct !DILexicalBlock(scope: !11966, file: !1976, line: 788, column: 2)
!11971 = !DILocalVariable(name: "__key", scope: !11970, file: !1976, line: 788, type: !10989)
!11972 = !DILocation(line: 0, scope: !11966)
!11973 = !DILocation(line: 0, scope: !11970)
!11974 = !DILocation(line: 0, scope: !10997, inlinedAt: !11975)
!11975 = distinct !DILocation(line: 788, column: 2, scope: !11970)
!11976 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !11977)
!11977 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !11975)
!11978 = !DILocation(line: 0, scope: !11006, inlinedAt: !11977)
!11979 = !DILocation(line: 789, column: 3, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11981, file: !1976, line: 788, column: 26)
!11981 = distinct !DILexicalBlock(scope: !11970, file: !1976, line: 788, column: 2)
!11982 = !DILocation(line: 0, scope: !11024, inlinedAt: !11983)
!11983 = distinct !DILocation(line: 788, column: 2, scope: !11981)
!11984 = !DILocation(line: 0, scope: !11032, inlinedAt: !11985)
!11985 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !11983)
!11986 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !11985)
!11987 = !DILocation(line: 791, column: 1, scope: !11966)
!11988 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !1976, file: !1976, line: 816, type: !11989, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11991)
!11989 = !DISubroutineType(types: !11990)
!11990 = !{!103, !137, !1908, !11790}
!11991 = !{!11992, !11993, !11994, !11995, !11996, !11998}
!11992 = !DILocalVariable(name: "key", arg: 1, scope: !11988, file: !1976, line: 816, type: !137)
!11993 = !DILocalVariable(name: "wait_q", arg: 2, scope: !11988, file: !1976, line: 816, type: !1908)
!11994 = !DILocalVariable(name: "timeout", arg: 3, scope: !11988, file: !1976, line: 816, type: !11790)
!11995 = !DILocalVariable(name: "ret", scope: !11988, file: !1976, line: 828, type: !103)
!11996 = !DILocalVariable(name: "__i", scope: !11997, file: !1976, line: 829, type: !10989)
!11997 = distinct !DILexicalBlock(scope: !11988, file: !1976, line: 829, column: 2)
!11998 = !DILocalVariable(name: "__key", scope: !11997, file: !1976, line: 829, type: !10989)
!11999 = !DILocation(line: 0, scope: !11988)
!12000 = !DILocation(line: 823, column: 14, scope: !11988)
!12001 = !DILocation(line: 823, column: 2, scope: !11988)
!12002 = !DILocation(line: 826, column: 20, scope: !11988)
!12003 = !DILocation(line: 826, column: 18, scope: !11988)
!12004 = !DILocation(line: 828, column: 12, scope: !11988)
!12005 = !DILocation(line: 0, scope: !11997)
!12006 = !DILocation(line: 0, scope: !10997, inlinedAt: !12007)
!12007 = distinct !DILocation(line: 829, column: 2, scope: !11997)
!12008 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12009)
!12009 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12007)
!12010 = !DILocation(line: 0, scope: !11006, inlinedAt: !12009)
!12011 = !DILocation(line: 830, column: 7, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12013, file: !1976, line: 830, column: 7)
!12013 = distinct !DILexicalBlock(scope: !12014, file: !1976, line: 829, column: 26)
!12014 = distinct !DILexicalBlock(scope: !11997, file: !1976, line: 829, column: 2)
!12015 = !DILocation(line: 830, column: 26, scope: !12012)
!12016 = !DILocation(line: 830, column: 23, scope: !12012)
!12017 = !DILocation(line: 830, column: 7, scope: !12013)
!12018 = !DILocation(line: 831, column: 20, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12012, file: !1976, line: 830, column: 36)
!12020 = !DILocation(line: 832, column: 3, scope: !12019)
!12021 = !DILocation(line: 0, scope: !11024, inlinedAt: !12022)
!12022 = distinct !DILocation(line: 829, column: 2, scope: !12014)
!12023 = !DILocation(line: 0, scope: !11032, inlinedAt: !12024)
!12024 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12022)
!12025 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12024)
!12026 = !DILocation(line: 834, column: 2, scope: !11988)
!12027 = distinct !DISubprogram(name: "z_pend_curr", scope: !1976, file: !1976, line: 840, type: !12028, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12030)
!12028 = !DISubroutineType(types: !12029)
!12029 = !{!103, !11000, !10989, !1908, !11790}
!12030 = !{!12031, !12032, !12033, !12034}
!12031 = !DILocalVariable(name: "lock", arg: 1, scope: !12027, file: !1976, line: 840, type: !11000)
!12032 = !DILocalVariable(name: "key", arg: 2, scope: !12027, file: !1976, line: 840, type: !10989)
!12033 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12027, file: !1976, line: 841, type: !1908)
!12034 = !DILocalVariable(name: "timeout", arg: 4, scope: !12027, file: !1976, line: 841, type: !11790)
!12035 = !DILocation(line: 0, scope: !12027)
!12036 = !DILocation(line: 844, column: 20, scope: !12027)
!12037 = !DILocation(line: 844, column: 18, scope: !12027)
!12038 = !DILocation(line: 0, scope: !10997, inlinedAt: !12039)
!12039 = distinct !DILocation(line: 856, column: 9, scope: !12027)
!12040 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12041)
!12041 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12039)
!12042 = !DILocation(line: 0, scope: !11006, inlinedAt: !12041)
!12043 = !DILocation(line: 857, column: 14, scope: !12027)
!12044 = !DILocation(line: 857, column: 2, scope: !12027)
!12045 = !DILocation(line: 0, scope: !11610, inlinedAt: !12046)
!12046 = distinct !DILocation(line: 859, column: 9, scope: !12027)
!12047 = !DILocation(line: 196, column: 9, scope: !11610, inlinedAt: !12046)
!12048 = !DILocation(line: 859, column: 2, scope: !12027)
!12049 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !1976, file: !1976, line: 862, type: !12050, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12052)
!12050 = !DISubroutineType(types: !12051)
!12051 = !{!1877, !1908}
!12052 = !{!12053, !12054, !12055, !12057}
!12053 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12049, file: !1976, line: 862, type: !1908)
!12054 = !DILocalVariable(name: "thread", scope: !12049, file: !1976, line: 864, type: !1877)
!12055 = !DILocalVariable(name: "__i", scope: !12056, file: !1976, line: 866, type: !10989)
!12056 = distinct !DILexicalBlock(scope: !12049, file: !1976, line: 866, column: 2)
!12057 = !DILocalVariable(name: "__key", scope: !12056, file: !1976, line: 866, type: !10989)
!12058 = !DILocation(line: 0, scope: !12049)
!12059 = !DILocation(line: 0, scope: !12056)
!12060 = !DILocation(line: 0, scope: !10997, inlinedAt: !12061)
!12061 = distinct !DILocation(line: 866, column: 2, scope: !12056)
!12062 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12063)
!12063 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12061)
!12064 = !DILocation(line: 0, scope: !11006, inlinedAt: !12063)
!12065 = !DILocation(line: 867, column: 12, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12067, file: !1976, line: 866, column: 26)
!12067 = distinct !DILexicalBlock(scope: !12056, file: !1976, line: 866, column: 2)
!12068 = !DILocation(line: 869, column: 14, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12066, file: !1976, line: 869, column: 7)
!12070 = !DILocation(line: 869, column: 7, scope: !12066)
!12071 = !DILocation(line: 870, column: 4, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12069, file: !1976, line: 869, column: 23)
!12073 = !DILocation(line: 871, column: 3, scope: !12072)
!12074 = !DILocation(line: 0, scope: !11024, inlinedAt: !12075)
!12075 = distinct !DILocation(line: 866, column: 2, scope: !12067)
!12076 = !DILocation(line: 0, scope: !11032, inlinedAt: !12077)
!12077 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12075)
!12078 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12077)
!12079 = !DILocation(line: 874, column: 2, scope: !12049)
!12080 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !1976, file: !1976, line: 877, type: !12050, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12081)
!12081 = !{!12082, !12083, !12084, !12086}
!12082 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12080, file: !1976, line: 877, type: !1908)
!12083 = !DILocalVariable(name: "thread", scope: !12080, file: !1976, line: 879, type: !1877)
!12084 = !DILocalVariable(name: "__i", scope: !12085, file: !1976, line: 881, type: !10989)
!12085 = distinct !DILexicalBlock(scope: !12080, file: !1976, line: 881, column: 2)
!12086 = !DILocalVariable(name: "__key", scope: !12085, file: !1976, line: 881, type: !10989)
!12087 = !DILocation(line: 0, scope: !12080)
!12088 = !DILocation(line: 0, scope: !12085)
!12089 = !DILocation(line: 0, scope: !10997, inlinedAt: !12090)
!12090 = distinct !DILocation(line: 881, column: 2, scope: !12085)
!12091 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12092)
!12092 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12090)
!12093 = !DILocation(line: 0, scope: !11006, inlinedAt: !12092)
!12094 = !DILocation(line: 882, column: 12, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12096, file: !1976, line: 881, column: 26)
!12096 = distinct !DILexicalBlock(scope: !12085, file: !1976, line: 881, column: 2)
!12097 = !DILocation(line: 884, column: 14, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12095, file: !1976, line: 884, column: 7)
!12099 = !DILocation(line: 884, column: 7, scope: !12095)
!12100 = !DILocation(line: 885, column: 4, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12098, file: !1976, line: 884, column: 23)
!12102 = !DILocation(line: 886, column: 10, scope: !12101)
!12103 = !DILocation(line: 887, column: 3, scope: !12101)
!12104 = !DILocation(line: 0, scope: !11024, inlinedAt: !12105)
!12105 = distinct !DILocation(line: 881, column: 2, scope: !12096)
!12106 = !DILocation(line: 0, scope: !11032, inlinedAt: !12107)
!12107 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12105)
!12108 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12107)
!12109 = !DILocation(line: 890, column: 2, scope: !12080)
!12110 = distinct !DISubprogram(name: "z_unpend_thread", scope: !1976, file: !1976, line: 893, type: !10955, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12111)
!12111 = !{!12112}
!12112 = !DILocalVariable(name: "thread", arg: 1, scope: !12110, file: !1976, line: 893, type: !1877)
!12113 = !DILocation(line: 0, scope: !12110)
!12114 = !DILocation(line: 0, scope: !11966, inlinedAt: !12115)
!12115 = distinct !DILocation(line: 895, column: 2, scope: !12110)
!12116 = !DILocation(line: 0, scope: !11970, inlinedAt: !12115)
!12117 = !DILocation(line: 0, scope: !10997, inlinedAt: !12118)
!12118 = distinct !DILocation(line: 788, column: 2, scope: !11970, inlinedAt: !12115)
!12119 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12120)
!12120 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12118)
!12121 = !DILocation(line: 0, scope: !11006, inlinedAt: !12120)
!12122 = !DILocation(line: 789, column: 3, scope: !11980, inlinedAt: !12115)
!12123 = !DILocation(line: 0, scope: !11024, inlinedAt: !12124)
!12124 = distinct !DILocation(line: 788, column: 2, scope: !11981, inlinedAt: !12115)
!12125 = !DILocation(line: 0, scope: !11032, inlinedAt: !12126)
!12126 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12124)
!12127 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12126)
!12128 = !DILocation(line: 896, column: 8, scope: !12110)
!12129 = !DILocation(line: 897, column: 1, scope: !12110)
!12130 = distinct !DISubprogram(name: "z_set_prio", scope: !1976, file: !1976, line: 902, type: !11319, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12131)
!12131 = !{!12132, !12133, !12134, !12135, !12137}
!12132 = !DILocalVariable(name: "thread", arg: 1, scope: !12130, file: !1976, line: 902, type: !1877)
!12133 = !DILocalVariable(name: "prio", arg: 2, scope: !12130, file: !1976, line: 902, type: !103)
!12134 = !DILocalVariable(name: "need_sched", scope: !12130, file: !1976, line: 904, type: !636)
!12135 = !DILocalVariable(name: "__i", scope: !12136, file: !1976, line: 906, type: !10989)
!12136 = distinct !DILexicalBlock(scope: !12130, file: !1976, line: 906, column: 2)
!12137 = !DILocalVariable(name: "__key", scope: !12136, file: !1976, line: 906, type: !10989)
!12138 = !DILocation(line: 0, scope: !12130)
!12139 = !DILocation(line: 0, scope: !12136)
!12140 = !DILocation(line: 0, scope: !10997, inlinedAt: !12141)
!12141 = distinct !DILocation(line: 906, column: 2, scope: !12136)
!12142 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12143)
!12143 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12141)
!12144 = !DILocation(line: 0, scope: !11006, inlinedAt: !12143)
!12145 = !DILocation(line: 907, column: 16, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12147, file: !1976, line: 906, column: 26)
!12147 = distinct !DILexicalBlock(scope: !12136, file: !1976, line: 906, column: 2)
!12148 = !DILocation(line: 909, column: 7, scope: !12146)
!12149 = !DILocation(line: 0, scope: !11168, inlinedAt: !12150)
!12150 = distinct !DILocation(line: 912, column: 5, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12152, file: !1976, line: 911, column: 63)
!12152 = distinct !DILexicalBlock(scope: !12153, file: !1976, line: 911, column: 8)
!12153 = distinct !DILexicalBlock(scope: !12154, file: !1976, line: 909, column: 19)
!12154 = distinct !DILexicalBlock(scope: !12146, file: !1976, line: 909, column: 7)
!12155 = !DILocation(line: 266, column: 28, scope: !11168, inlinedAt: !12150)
!12156 = !DILocation(line: 0, scope: !11176, inlinedAt: !12157)
!12157 = distinct !DILocation(line: 268, column: 3, scope: !11180, inlinedAt: !12150)
!12158 = !DILocation(line: 234, column: 2, scope: !11176, inlinedAt: !12157)
!12159 = !DILocation(line: 913, column: 23, scope: !12151)
!12160 = !DILocation(line: 0, scope: !11185, inlinedAt: !12161)
!12161 = distinct !DILocation(line: 914, column: 5, scope: !12151)
!12162 = !DILocation(line: 252, column: 28, scope: !11185, inlinedAt: !12161)
!12163 = !DILocation(line: 0, scope: !11192, inlinedAt: !12164)
!12164 = distinct !DILocation(line: 254, column: 3, scope: !11196, inlinedAt: !12161)
!12165 = !DILocation(line: 0, scope: !11199, inlinedAt: !12166)
!12166 = distinct !DILocation(line: 229, column: 2, scope: !11192, inlinedAt: !12164)
!12167 = !DILocation(line: 188, column: 2, scope: !11209, inlinedAt: !12166)
!12168 = !DILocation(line: 188, column: 2, scope: !11211, inlinedAt: !12166)
!12169 = !DILocation(line: 0, scope: !11209, inlinedAt: !12166)
!12170 = !DILocation(line: 189, column: 7, scope: !11214, inlinedAt: !12166)
!12171 = !DILocation(line: 189, column: 35, scope: !11214, inlinedAt: !12166)
!12172 = !DILocation(line: 189, column: 7, scope: !11215, inlinedAt: !12166)
!12173 = !DILocation(line: 190, column: 4, scope: !11219, inlinedAt: !12166)
!12174 = !DILocation(line: 192, column: 4, scope: !11219, inlinedAt: !12166)
!12175 = distinct !{!12175, !12167, !12176}
!12176 = !DILocation(line: 194, column: 2, scope: !11209, inlinedAt: !12166)
!12177 = !DILocation(line: 196, column: 2, scope: !11199, inlinedAt: !12166)
!12178 = !DILocation(line: 197, column: 1, scope: !11199, inlinedAt: !12166)
!12179 = !DILocation(line: 918, column: 4, scope: !12153)
!12180 = !DILocation(line: 919, column: 3, scope: !12153)
!12181 = !DILocation(line: 920, column: 22, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12154, file: !1976, line: 919, column: 10)
!12183 = !DILocation(line: 0, scope: !11024, inlinedAt: !12184)
!12184 = distinct !DILocation(line: 906, column: 2, scope: !12147)
!12185 = !DILocation(line: 0, scope: !11032, inlinedAt: !12186)
!12186 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12184)
!12187 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12186)
!12188 = !DILocation(line: 926, column: 2, scope: !12130)
!12189 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !1976, file: !1976, line: 929, type: !12190, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12192)
!12190 = !DISubroutineType(types: !12191)
!12191 = !{null, !1877, !103}
!12192 = !{!12193, !12194, !12195}
!12193 = !DILocalVariable(name: "thread", arg: 1, scope: !12189, file: !1976, line: 929, type: !1877)
!12194 = !DILocalVariable(name: "prio", arg: 2, scope: !12189, file: !1976, line: 929, type: !103)
!12195 = !DILocalVariable(name: "need_sched", scope: !12189, file: !1976, line: 931, type: !636)
!12196 = !DILocation(line: 0, scope: !12189)
!12197 = !DILocation(line: 931, column: 20, scope: !12189)
!12198 = !DILocation(line: 935, column: 17, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12189, file: !1976, line: 935, column: 6)
!12200 = !DILocation(line: 935, column: 20, scope: !12199)
!12201 = !DILocation(line: 935, column: 35, scope: !12199)
!12202 = !DILocation(line: 935, column: 48, scope: !12199)
!12203 = !DILocation(line: 935, column: 6, scope: !12189)
!12204 = !DILocation(line: 936, column: 3, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12199, file: !1976, line: 935, column: 55)
!12206 = !DILocation(line: 937, column: 2, scope: !12205)
!12207 = !DILocation(line: 938, column: 1, scope: !12189)
!12208 = distinct !DISubprogram(name: "k_sched_lock", scope: !1976, file: !1976, line: 987, type: !2671, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12209)
!12209 = !{!12210, !12212}
!12210 = !DILocalVariable(name: "__i", scope: !12211, file: !1976, line: 989, type: !10989)
!12211 = distinct !DILexicalBlock(scope: !12208, file: !1976, line: 989, column: 2)
!12212 = !DILocalVariable(name: "__key", scope: !12211, file: !1976, line: 989, type: !10989)
!12213 = !DILocation(line: 0, scope: !12211)
!12214 = !DILocation(line: 0, scope: !10997, inlinedAt: !12215)
!12215 = distinct !DILocation(line: 989, column: 2, scope: !12211)
!12216 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12217)
!12217 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12215)
!12218 = !DILocation(line: 0, scope: !11006, inlinedAt: !12217)
!12219 = !DILocation(line: 992, column: 3, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12221, file: !1976, line: 989, column: 26)
!12221 = distinct !DILexicalBlock(scope: !12211, file: !1976, line: 989, column: 2)
!12222 = !DILocation(line: 0, scope: !11024, inlinedAt: !12223)
!12223 = distinct !DILocation(line: 989, column: 2, scope: !12221)
!12224 = !DILocation(line: 0, scope: !11032, inlinedAt: !12225)
!12225 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12223)
!12226 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12225)
!12227 = !DILocation(line: 994, column: 1, scope: !12208)
!12228 = distinct !DISubprogram(name: "z_sched_lock", scope: !10291, file: !10291, line: 251, type: !2671, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !162)
!12229 = !DILocation(line: 256, column: 4, scope: !12228)
!12230 = !DILocation(line: 256, column: 19, scope: !12228)
!12231 = !DILocation(line: 256, column: 2, scope: !12228)
!12232 = !DILocation(line: 258, column: 2, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12228, file: !10291, line: 258, column: 2)
!12234 = !{i64 2154790340}
!12235 = !DILocation(line: 259, column: 1, scope: !12228)
!12236 = distinct !DISubprogram(name: "k_sched_unlock", scope: !1976, file: !1976, line: 996, type: !2671, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12237)
!12237 = !{!12238, !12240}
!12238 = !DILocalVariable(name: "__i", scope: !12239, file: !1976, line: 998, type: !10989)
!12239 = distinct !DILexicalBlock(scope: !12236, file: !1976, line: 998, column: 2)
!12240 = !DILocalVariable(name: "__key", scope: !12239, file: !1976, line: 998, type: !10989)
!12241 = !DILocation(line: 0, scope: !12239)
!12242 = !DILocation(line: 0, scope: !10997, inlinedAt: !12243)
!12243 = distinct !DILocation(line: 998, column: 2, scope: !12239)
!12244 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12245)
!12245 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12243)
!12246 = !DILocation(line: 0, scope: !11006, inlinedAt: !12245)
!12247 = !DILocation(line: 1002, column: 5, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12249, file: !1976, line: 998, column: 26)
!12249 = distinct !DILexicalBlock(scope: !12239, file: !1976, line: 998, column: 2)
!12250 = !DILocation(line: 1002, column: 20, scope: !12248)
!12251 = !DILocation(line: 1002, column: 3, scope: !12248)
!12252 = !DILocation(line: 1003, column: 3, scope: !12248)
!12253 = !DILocation(line: 0, scope: !11024, inlinedAt: !12254)
!12254 = distinct !DILocation(line: 998, column: 2, scope: !12249)
!12255 = !DILocation(line: 0, scope: !11032, inlinedAt: !12256)
!12256 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12254)
!12257 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12256)
!12258 = !DILocation(line: 1011, column: 2, scope: !12236)
!12259 = !DILocation(line: 1012, column: 1, scope: !12236)
!12260 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !1976, file: !1976, line: 1014, type: !11307, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !162)
!12261 = !DILocation(line: 1028, column: 25, scope: !12260)
!12262 = !DILocation(line: 1028, column: 2, scope: !12260)
!12263 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !1976, file: !1976, line: 1155, type: !12264, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12266)
!12264 = !DISubroutineType(types: !12265)
!12265 = !{!636, !1906, !1906}
!12266 = !{!12267, !12268, !12269, !12270, !12271}
!12267 = !DILocalVariable(name: "a", arg: 1, scope: !12263, file: !1976, line: 1155, type: !1906)
!12268 = !DILocalVariable(name: "b", arg: 2, scope: !12263, file: !1976, line: 1155, type: !1906)
!12269 = !DILocalVariable(name: "thread_a", scope: !12263, file: !1976, line: 1157, type: !1877)
!12270 = !DILocalVariable(name: "thread_b", scope: !12263, file: !1976, line: 1157, type: !1877)
!12271 = !DILocalVariable(name: "cmp", scope: !12263, file: !1976, line: 1158, type: !893)
!12272 = !DILocation(line: 0, scope: !12263)
!12273 = !DILocation(line: 1160, column: 13, scope: !12263)
!12274 = !DILocation(line: 1161, column: 13, scope: !12263)
!12275 = !DILocation(line: 1163, column: 8, scope: !12263)
!12276 = !DILocation(line: 1165, column: 10, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12263, file: !1976, line: 1165, column: 6)
!12278 = !DILocation(line: 1165, column: 6, scope: !12263)
!12279 = !DILocation(line: 1167, column: 17, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12277, file: !1976, line: 1167, column: 13)
!12281 = !DILocation(line: 1167, column: 13, scope: !12277)
!12282 = !DILocation(line: 1170, column: 25, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12280, file: !1976, line: 1169, column: 9)
!12284 = !DILocation(line: 1170, column: 52, scope: !12283)
!12285 = !DILocation(line: 1170, column: 35, scope: !12283)
!12286 = !DILocation(line: 1170, column: 3, scope: !12283)
!12287 = !DILocation(line: 0, scope: !12277)
!12288 = !DILocation(line: 1173, column: 1, scope: !12263)
!12289 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !1976, file: !1976, line: 1175, type: !12290, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12305)
!12290 = !DISubroutineType(types: !12291)
!12291 = !{null, !12292, !1877}
!12292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12293, size: 32)
!12293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !12294, line: 37, size: 128, elements: !12295)
!12294 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12295 = !{!12296, !12304}
!12296 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !12293, file: !12294, line: 38, baseType: !12297, size: 96)
!12297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !1621, line: 83, size: 96, elements: !12298)
!12298 = !{!12299, !12300, !12303}
!12299 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !12297, file: !1621, line: 84, baseType: !1906, size: 32)
!12300 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !12297, file: !1621, line: 85, baseType: !12301, size: 32, offset: 32)
!12301 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !1621, line: 81, baseType: !12302)
!12302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12264, size: 32)
!12303 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !12297, file: !1621, line: 86, baseType: !103, size: 32, offset: 64)
!12304 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !12293, file: !12294, line: 39, baseType: !103, size: 32, offset: 96)
!12305 = !{!12306, !12307, !12308, !12309, !12318}
!12306 = !DILocalVariable(name: "pq", arg: 1, scope: !12289, file: !1976, line: 1175, type: !12292)
!12307 = !DILocalVariable(name: "thread", arg: 2, scope: !12289, file: !1976, line: 1175, type: !1877)
!12308 = !DILocalVariable(name: "t", scope: !12289, file: !1976, line: 1177, type: !1877)
!12309 = !DILocalVariable(name: "__f", scope: !12310, file: !1976, line: 1190, type: !12313)
!12310 = distinct !DILexicalBlock(scope: !12311, file: !1976, line: 1190, column: 3)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !1976, line: 1189, column: 27)
!12312 = distinct !DILexicalBlock(scope: !12289, file: !1976, line: 1189, column: 6)
!12313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !1621, line: 155, size: 96, elements: !12314)
!12314 = !{!12315, !12316, !12317}
!12315 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !12313, file: !1621, line: 156, baseType: !1971, size: 32)
!12316 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !12313, file: !1621, line: 157, baseType: !681, size: 32, offset: 32)
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !12313, file: !1621, line: 158, baseType: !893, size: 32, offset: 64)
!12318 = !DILocalVariable(name: "n", scope: !12319, file: !1976, line: 1190, type: !1906)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !1976, line: 1190, column: 3)
!12320 = distinct !DILexicalBlock(scope: !12310, file: !1976, line: 1190, column: 3)
!12321 = !DILocation(line: 0, scope: !12289)
!12322 = !DILocation(line: 1181, column: 31, scope: !12289)
!12323 = !DILocation(line: 1181, column: 45, scope: !12289)
!12324 = !DILocation(line: 1181, column: 15, scope: !12289)
!12325 = !DILocation(line: 1181, column: 25, scope: !12289)
!12326 = !DILocation(line: 1189, column: 11, scope: !12312)
!12327 = !DILocation(line: 1189, column: 7, scope: !12312)
!12328 = !DILocation(line: 1189, column: 6, scope: !12289)
!12329 = !DILocation(line: 1190, column: 3, scope: !12310)
!12330 = !DILocation(line: 1190, column: 3, scope: !12319)
!12331 = !DILocation(line: 0, scope: !12319)
!12332 = !DILocation(line: 1190, column: 3, scope: !12320)
!12333 = !DILocation(line: 1193, column: 2, scope: !12311)
!12334 = !DILocation(line: 1191, column: 42, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12320, file: !1976, line: 1190, column: 54)
!12336 = !DILocation(line: 1191, column: 12, scope: !12335)
!12337 = !DILocation(line: 1191, column: 22, scope: !12335)
!12338 = distinct !{!12338, !12329, !12339}
!12339 = !DILocation(line: 1192, column: 3, scope: !12310)
!12340 = !DILocation(line: 1195, column: 17, scope: !12289)
!12341 = !DILocation(line: 1195, column: 37, scope: !12289)
!12342 = !DILocation(line: 1195, column: 2, scope: !12289)
!12343 = !DILocation(line: 1196, column: 1, scope: !12289)
!12344 = !DISubprogram(name: "z_rb_foreach_next", scope: !1621, file: !1621, line: 176, type: !12345, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12345 = !DISubroutineType(types: !12346)
!12346 = !{!1906, !12347, !12348}
!12347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12297, size: 32)
!12348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12313, size: 32)
!12349 = !DISubprogram(name: "rb_insert", scope: !1621, file: !1621, line: 105, type: !12350, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12350 = !DISubroutineType(types: !12351)
!12351 = !{null, !12347, !1906}
!12352 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !1976, file: !1976, line: 1198, type: !12290, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12353)
!12353 = !{!12354, !12355}
!12354 = !DILocalVariable(name: "pq", arg: 1, scope: !12352, file: !1976, line: 1198, type: !12292)
!12355 = !DILocalVariable(name: "thread", arg: 2, scope: !12352, file: !1976, line: 1198, type: !1877)
!12356 = !DILocation(line: 0, scope: !12352)
!12357 = !DILocation(line: 1202, column: 17, scope: !12352)
!12358 = !DILocation(line: 1202, column: 37, scope: !12352)
!12359 = !DILocation(line: 1202, column: 2, scope: !12352)
!12360 = !DILocation(line: 1204, column: 16, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12352, file: !1976, line: 1204, column: 6)
!12362 = !DILocation(line: 1204, column: 7, scope: !12361)
!12363 = !DILocation(line: 1204, column: 6, scope: !12352)
!12364 = !DILocation(line: 1205, column: 7, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12361, file: !1976, line: 1204, column: 22)
!12366 = !DILocation(line: 1205, column: 22, scope: !12365)
!12367 = !DILocation(line: 1206, column: 2, scope: !12365)
!12368 = !DILocation(line: 1207, column: 1, scope: !12352)
!12369 = !DISubprogram(name: "rb_remove", scope: !1621, file: !1621, line: 110, type: !12350, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12370 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !1976, file: !1976, line: 1209, type: !12371, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12373)
!12371 = !DISubroutineType(types: !12372)
!12372 = !{!1877, !12292}
!12373 = !{!12374, !12375, !12376}
!12374 = !DILocalVariable(name: "pq", arg: 1, scope: !12370, file: !1976, line: 1209, type: !12292)
!12375 = !DILocalVariable(name: "thread", scope: !12370, file: !1976, line: 1211, type: !1877)
!12376 = !DILocalVariable(name: "n", scope: !12370, file: !1976, line: 1212, type: !1906)
!12377 = !DILocation(line: 0, scope: !12370)
!12378 = !DILocation(line: 1212, column: 37, scope: !12370)
!12379 = !DILocation(line: 1212, column: 21, scope: !12370)
!12380 = !DILocation(line: 1217, column: 2, scope: !12370)
!12381 = distinct !DISubprogram(name: "rb_get_min", scope: !1621, file: !1621, line: 115, type: !12382, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12384)
!12382 = !DISubroutineType(types: !12383)
!12383 = !{!1906, !12347}
!12384 = !{!12385}
!12385 = !DILocalVariable(name: "tree", arg: 1, scope: !12381, file: !1621, line: 115, type: !12347)
!12386 = !DILocation(line: 0, scope: !12381)
!12387 = !DILocation(line: 117, column: 9, scope: !12381)
!12388 = !DILocation(line: 117, column: 2, scope: !12381)
!12389 = !DISubprogram(name: "z_rb_get_minmax", scope: !1621, file: !1621, line: 100, type: !12390, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12390 = !DISubroutineType(types: !12391)
!12391 = !{!1906, !12347, !465}
!12392 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !1976, file: !1976, line: 1246, type: !12393, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12401)
!12393 = !DISubroutineType(types: !12394)
!12394 = !{!1877, !12395}
!12395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12396, size: 32)
!12396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !12294, line: 53, size: 2080, elements: !12397)
!12397 = !{!12398, !12400}
!12398 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !12396, file: !12294, line: 54, baseType: !12399, size: 2048)
!12399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1913, size: 2048, elements: !535)
!12400 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !12396, file: !12294, line: 55, baseType: !32, size: 32, offset: 2048)
!12401 = !{!12402, !12403, !12404, !12405}
!12402 = !DILocalVariable(name: "pq", arg: 1, scope: !12392, file: !1976, line: 1246, type: !12395)
!12403 = !DILocalVariable(name: "thread", scope: !12392, file: !1976, line: 1252, type: !1877)
!12404 = !DILocalVariable(name: "l", scope: !12392, file: !1976, line: 1253, type: !11202)
!12405 = !DILocalVariable(name: "n", scope: !12392, file: !1976, line: 1254, type: !1972)
!12406 = !DILocation(line: 0, scope: !12392)
!12407 = !DILocation(line: 1248, column: 11, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12392, file: !1976, line: 1248, column: 6)
!12409 = !DILocation(line: 1248, column: 7, scope: !12408)
!12410 = !DILocation(line: 1248, column: 6, scope: !12392)
!12411 = !DILocation(line: 1253, column: 31, scope: !12392)
!12412 = !DILocation(line: 1253, column: 20, scope: !12392)
!12413 = !DILocation(line: 1254, column: 19, scope: !12392)
!12414 = !DILocation(line: 1260, column: 1, scope: !12392)
!12415 = distinct !DISubprogram(name: "z_unpend_all", scope: !1976, file: !1976, line: 1262, type: !12416, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12418)
!12416 = !DISubroutineType(types: !12417)
!12417 = !{!103, !1908}
!12418 = !{!12419, !12420, !12421}
!12419 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12415, file: !1976, line: 1262, type: !1908)
!12420 = !DILocalVariable(name: "need_sched", scope: !12415, file: !1976, line: 1264, type: !103)
!12421 = !DILocalVariable(name: "thread", scope: !12415, file: !1976, line: 1265, type: !1877)
!12422 = !DILocation(line: 0, scope: !12415)
!12423 = !DILocation(line: 1267, column: 19, scope: !12415)
!12424 = !DILocation(line: 1267, column: 41, scope: !12415)
!12425 = !DILocation(line: 1267, column: 2, scope: !12415)
!12426 = !DILocation(line: 1268, column: 3, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12415, file: !1976, line: 1267, column: 50)
!12428 = !DILocation(line: 1269, column: 3, scope: !12427)
!12429 = distinct !{!12429, !12425, !12430}
!12430 = !DILocation(line: 1271, column: 2, scope: !12415)
!12431 = !DILocation(line: 1273, column: 2, scope: !12415)
!12432 = distinct !DISubprogram(name: "z_waitq_head", scope: !10611, file: !10611, line: 52, type: !12050, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12433)
!12433 = !{!12434}
!12434 = !DILocalVariable(name: "w", arg: 1, scope: !12432, file: !10611, line: 52, type: !1908)
!12435 = !DILocation(line: 0, scope: !12432)
!12436 = !DILocation(line: 54, column: 52, scope: !12432)
!12437 = !DILocation(line: 54, column: 28, scope: !12432)
!12438 = !DILocation(line: 54, column: 9, scope: !12432)
!12439 = !DILocation(line: 54, column: 2, scope: !12432)
!12440 = distinct !DISubprogram(name: "init_ready_q", scope: !1976, file: !1976, line: 1276, type: !12441, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12448)
!12441 = !DISubroutineType(types: !12442)
!12442 = !{null, !12443}
!12443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12444, size: 32)
!12444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !1584, line: 83, size: 96, elements: !12445)
!12445 = !{!12446, !12447}
!12446 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !12444, file: !1584, line: 86, baseType: !1877, size: 32)
!12447 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !12444, file: !1584, line: 90, baseType: !1913, size: 64, offset: 32)
!12448 = !{!12449}
!12449 = !DILocalVariable(name: "rq", arg: 1, scope: !12440, file: !1976, line: 1276, type: !12443)
!12450 = !DILocation(line: 0, scope: !12440)
!12451 = !DILocation(line: 1289, column: 22, scope: !12440)
!12452 = !DILocation(line: 1289, column: 2, scope: !12440)
!12453 = !DILocation(line: 1291, column: 1, scope: !12440)
!12454 = distinct !DISubprogram(name: "sys_dlist_init", scope: !1605, file: !1605, line: 197, type: !12455, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12457)
!12455 = !DISubroutineType(types: !12456)
!12456 = !{null, !11202}
!12457 = !{!12458}
!12458 = !DILocalVariable(name: "list", arg: 1, scope: !12454, file: !1605, line: 197, type: !11202)
!12459 = !DILocation(line: 0, scope: !12454)
!12460 = !DILocation(line: 199, column: 8, scope: !12454)
!12461 = !DILocation(line: 199, column: 13, scope: !12454)
!12462 = !DILocation(line: 200, column: 8, scope: !12454)
!12463 = !DILocation(line: 200, column: 13, scope: !12454)
!12464 = !DILocation(line: 201, column: 1, scope: !12454)
!12465 = distinct !DISubprogram(name: "z_sched_init", scope: !1976, file: !1976, line: 1293, type: !2671, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !162)
!12466 = !DILocation(line: 1302, column: 2, scope: !12465)
!12467 = !DILocation(line: 1306, column: 2, scope: !12465)
!12468 = !DILocation(line: 1309, column: 1, scope: !12465)
!12469 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !1976, file: !1976, line: 1311, type: !12470, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12473)
!12470 = !DISubroutineType(types: !12471)
!12471 = !{!103, !12472}
!12472 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1595, line: 347, baseType: !1877)
!12473 = !{!12474}
!12474 = !DILocalVariable(name: "thread", arg: 1, scope: !12469, file: !1976, line: 1311, type: !12472)
!12475 = !DILocation(line: 0, scope: !12469)
!12476 = !DILocation(line: 1313, column: 22, scope: !12469)
!12477 = !DILocation(line: 1313, column: 9, scope: !12469)
!12478 = !DILocation(line: 1313, column: 2, scope: !12469)
!12479 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !1976, file: !1976, line: 1325, type: !12480, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12482)
!12480 = !DISubroutineType(types: !12481)
!12481 = !{null, !12472, !103}
!12482 = !{!12483, !12484, !12485}
!12483 = !DILocalVariable(name: "thread", arg: 1, scope: !12479, file: !1976, line: 1325, type: !12472)
!12484 = !DILocalVariable(name: "prio", arg: 2, scope: !12479, file: !1976, line: 1325, type: !103)
!12485 = !DILocalVariable(name: "th", scope: !12479, file: !1976, line: 1334, type: !1877)
!12486 = !DILocation(line: 0, scope: !12479)
!12487 = !DILocation(line: 1336, column: 2, scope: !12479)
!12488 = !DILocation(line: 1337, column: 1, scope: !12479)
!12489 = distinct !DISubprogram(name: "k_can_yield", scope: !1976, file: !1976, line: 1384, type: !6814, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !162)
!12490 = !DILocation(line: 1386, column: 11, scope: !12489)
!12491 = !DILocation(line: 1386, column: 29, scope: !12489)
!12492 = !DILocation(line: 1386, column: 32, scope: !12489)
!12493 = !DILocation(line: 1386, column: 46, scope: !12489)
!12494 = !DILocation(line: 1387, column: 28, scope: !12489)
!12495 = !DILocation(line: 1387, column: 4, scope: !12489)
!12496 = !DILocation(line: 1386, column: 2, scope: !12489)
!12497 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !1678, file: !1678, line: 989, type: !6814, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !162)
!12498 = !DILocation(line: 993, column: 10, scope: !12497)
!12499 = !DILocation(line: 993, column: 2, scope: !12497)
!12500 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !1976, file: !1976, line: 1390, type: !2671, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12501)
!12501 = !{!12502}
!12502 = !DILocalVariable(name: "key", scope: !12500, file: !1976, line: 1396, type: !10989)
!12503 = !DILocation(line: 0, scope: !10997, inlinedAt: !12504)
!12504 = distinct !DILocation(line: 1396, column: 25, scope: !12500)
!12505 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12506)
!12506 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12504)
!12507 = !DILocation(line: 0, scope: !11006, inlinedAt: !12506)
!12508 = !DILocation(line: 0, scope: !12500)
!12509 = !DILocation(line: 1400, column: 18, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !1976, line: 1399, column: 36)
!12511 = distinct !DILexicalBlock(scope: !12500, file: !1976, line: 1398, column: 6)
!12512 = !DILocation(line: 0, scope: !11168, inlinedAt: !12513)
!12513 = distinct !DILocation(line: 1400, column: 3, scope: !12510)
!12514 = !DILocation(line: 266, column: 15, scope: !11168, inlinedAt: !12513)
!12515 = !DILocation(line: 266, column: 28, scope: !11168, inlinedAt: !12513)
!12516 = !DILocation(line: 0, scope: !11176, inlinedAt: !12517)
!12517 = distinct !DILocation(line: 268, column: 3, scope: !11180, inlinedAt: !12513)
!12518 = !DILocation(line: 234, column: 2, scope: !11176, inlinedAt: !12517)
!12519 = !DILocation(line: 1402, column: 15, scope: !12500)
!12520 = !DILocation(line: 0, scope: !11185, inlinedAt: !12521)
!12521 = distinct !DILocation(line: 1402, column: 2, scope: !12500)
!12522 = !DILocation(line: 252, column: 15, scope: !11185, inlinedAt: !12521)
!12523 = !DILocation(line: 252, column: 28, scope: !11185, inlinedAt: !12521)
!12524 = !DILocation(line: 0, scope: !11192, inlinedAt: !12525)
!12525 = distinct !DILocation(line: 254, column: 3, scope: !11196, inlinedAt: !12521)
!12526 = !DILocation(line: 0, scope: !11199, inlinedAt: !12527)
!12527 = distinct !DILocation(line: 229, column: 2, scope: !11192, inlinedAt: !12525)
!12528 = !DILocation(line: 188, column: 2, scope: !11209, inlinedAt: !12527)
!12529 = !DILocation(line: 188, column: 2, scope: !11211, inlinedAt: !12527)
!12530 = !DILocation(line: 0, scope: !11209, inlinedAt: !12527)
!12531 = !DILocation(line: 189, column: 7, scope: !11214, inlinedAt: !12527)
!12532 = !DILocation(line: 189, column: 35, scope: !11214, inlinedAt: !12527)
!12533 = !DILocation(line: 189, column: 7, scope: !11215, inlinedAt: !12527)
!12534 = !DILocation(line: 191, column: 21, scope: !11219, inlinedAt: !12527)
!12535 = !DILocation(line: 190, column: 4, scope: !11219, inlinedAt: !12527)
!12536 = !DILocation(line: 192, column: 4, scope: !11219, inlinedAt: !12527)
!12537 = distinct !{!12537, !12528, !12538}
!12538 = !DILocation(line: 194, column: 2, scope: !11209, inlinedAt: !12527)
!12539 = !DILocation(line: 196, column: 37, scope: !11199, inlinedAt: !12527)
!12540 = !DILocation(line: 196, column: 2, scope: !11199, inlinedAt: !12527)
!12541 = !DILocation(line: 197, column: 1, scope: !11199, inlinedAt: !12527)
!12542 = !DILocation(line: 1403, column: 2, scope: !12500)
!12543 = !DILocation(line: 0, scope: !11610, inlinedAt: !12544)
!12544 = distinct !DILocation(line: 1404, column: 2, scope: !12500)
!12545 = !DILocation(line: 196, column: 9, scope: !11610, inlinedAt: !12544)
!12546 = !DILocation(line: 1405, column: 1, scope: !12500)
!12547 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !1976, file: !1976, line: 1459, type: !12548, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12550)
!12548 = !DISubroutineType(types: !12549)
!12549 = !{!893, !11790}
!12550 = !{!12551, !12552, !12553}
!12551 = !DILocalVariable(name: "timeout", arg: 1, scope: !12547, file: !1976, line: 1459, type: !11790)
!12552 = !DILocalVariable(name: "ticks", scope: !12547, file: !1976, line: 1461, type: !1341)
!12553 = !DILocalVariable(name: "ret", scope: !12547, file: !1976, line: 1480, type: !893)
!12554 = !DILocation(line: 0, scope: !12547)
!12555 = !DILocation(line: 1468, column: 6, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12547, file: !1976, line: 1468, column: 6)
!12557 = !DILocation(line: 1468, column: 6, scope: !12547)
!12558 = !DILocation(line: 1469, column: 20, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12556, file: !1976, line: 1468, column: 40)
!12560 = !DILocation(line: 1469, column: 3, scope: !12559)
!12561 = !DILocation(line: 1473, column: 3, scope: !12559)
!12562 = !DILocation(line: 1478, column: 10, scope: !12547)
!12563 = !DILocation(line: 1480, column: 16, scope: !12547)
!12564 = !DILocation(line: 1485, column: 1, scope: !12547)
!12565 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3105, file: !3105, line: 310, type: !12566, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12568)
!12566 = !DISubroutineType(types: !12567)
!12567 = !{null, !12472}
!12568 = !{!12569}
!12569 = !DILocalVariable(name: "thread", arg: 1, scope: !12565, file: !3105, line: 310, type: !12472)
!12570 = !DILocation(line: 0, scope: !12565)
!12571 = !DILocation(line: 319, column: 2, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12565, file: !3105, line: 319, column: 2)
!12573 = !{i64 2151079954}
!12574 = !DILocation(line: 320, column: 2, scope: !12565)
!12575 = !DILocation(line: 321, column: 1, scope: !12565)
!12576 = distinct !DISubprogram(name: "z_tick_sleep", scope: !1976, file: !1976, line: 1415, type: !12577, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12579)
!12577 = !DISubroutineType(types: !12578)
!12578 = !{!893, !1341}
!12579 = !{!12580, !12581, !12582, !12583}
!12580 = !DILocalVariable(name: "ticks", arg: 1, scope: !12576, file: !1976, line: 1415, type: !1341)
!12581 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !12576, file: !1976, line: 1418, type: !137)
!12582 = !DILocalVariable(name: "timeout", scope: !12576, file: !1976, line: 1430, type: !11790)
!12583 = !DILocalVariable(name: "key", scope: !12576, file: !1976, line: 1437, type: !10989)
!12584 = !DILocation(line: 0, scope: !12576)
!12585 = !DILocation(line: 1425, column: 12, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12576, file: !1976, line: 1425, column: 6)
!12587 = !DILocation(line: 1425, column: 6, scope: !12576)
!12588 = !DILocation(line: 1426, column: 3, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12586, file: !1976, line: 1425, column: 18)
!12590 = !DILocation(line: 1427, column: 3, scope: !12589)
!12591 = !DILocation(line: 1431, column: 24, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12576, file: !1976, line: 1431, column: 6)
!12593 = !DILocation(line: 1431, column: 6, scope: !12576)
!12594 = !DILocation(line: 1432, column: 35, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12592, file: !1976, line: 1431, column: 30)
!12596 = !DILocation(line: 1432, column: 27, scope: !12595)
!12597 = !DILocation(line: 1433, column: 2, scope: !12595)
!12598 = !DILocation(line: 1434, column: 27, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12592, file: !1976, line: 1433, column: 9)
!12600 = !DILocation(line: 0, scope: !12592)
!12601 = !DILocation(line: 0, scope: !10997, inlinedAt: !12602)
!12602 = distinct !DILocation(line: 1437, column: 25, scope: !12576)
!12603 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12604)
!12604 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12602)
!12605 = !DILocation(line: 0, scope: !11006, inlinedAt: !12604)
!12606 = !DILocation(line: 1440, column: 20, scope: !12576)
!12607 = !DILocation(line: 1440, column: 18, scope: !12576)
!12608 = !DILocation(line: 1442, column: 2, scope: !12576)
!12609 = !DILocation(line: 1443, column: 23, scope: !12576)
!12610 = !DILocation(line: 1443, column: 2, scope: !12576)
!12611 = !DILocation(line: 1444, column: 29, scope: !12576)
!12612 = !DILocation(line: 1444, column: 2, scope: !12576)
!12613 = !DILocation(line: 0, scope: !11610, inlinedAt: !12614)
!12614 = distinct !DILocation(line: 1446, column: 8, scope: !12576)
!12615 = !DILocation(line: 196, column: 9, scope: !11610, inlinedAt: !12614)
!12616 = !DILocation(line: 1450, column: 10, scope: !12576)
!12617 = !DILocation(line: 1450, column: 45, scope: !12576)
!12618 = !DILocation(line: 1450, column: 43, scope: !12576)
!12619 = !DILocation(line: 1451, column: 6, scope: !12576)
!12620 = !DILocation(line: 1457, column: 1, scope: !12576)
!12621 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !10830, file: !10830, line: 1103, type: !10831, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12622)
!12622 = !{!12623}
!12623 = !DILocalVariable(name: "t", arg: 1, scope: !12621, file: !10830, line: 1103, type: !163)
!12624 = !DILocation(line: 0, scope: !12621)
!12625 = !DILocation(line: 0, scope: !11046, inlinedAt: !12626)
!12626 = distinct !DILocation(line: 1106, column: 9, scope: !12621)
!12627 = !DILocation(line: 139, column: 13, scope: !12628, inlinedAt: !12626)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !10830, line: 138, column: 10)
!12629 = distinct !DILexicalBlock(scope: !12630, file: !10830, line: 136, column: 7)
!12630 = distinct !DILexicalBlock(scope: !11067, file: !10830, line: 134, column: 17)
!12631 = !DILocation(line: 1106, column: 2, scope: !12621)
!12632 = distinct !DISubprogram(name: "k_yield", scope: !3105, file: !3105, line: 140, type: !2671, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !162)
!12633 = !DILocation(line: 148, column: 2, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12632, file: !3105, line: 148, column: 2)
!12635 = !{i64 2151079274}
!12636 = !DILocation(line: 149, column: 2, scope: !12632)
!12637 = !DILocation(line: 150, column: 1, scope: !12632)
!12638 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !1976, file: !1976, line: 1495, type: !12639, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12641)
!12639 = !DISubroutineType(types: !12640)
!12640 = !{!893, !103}
!12641 = !{!12642, !12643}
!12642 = !DILocalVariable(name: "us", arg: 1, scope: !12638, file: !1976, line: 1495, type: !103)
!12643 = !DILocalVariable(name: "ticks", scope: !12638, file: !1976, line: 1497, type: !893)
!12644 = !DILocation(line: 0, scope: !12638)
!12645 = !DILocation(line: 1501, column: 31, scope: !12638)
!12646 = !DILocation(line: 1501, column: 10, scope: !12638)
!12647 = !DILocation(line: 1502, column: 23, scope: !12638)
!12648 = !DILocation(line: 1502, column: 10, scope: !12638)
!12649 = !DILocation(line: 1506, column: 31, scope: !12638)
!12650 = !DILocation(line: 1506, column: 9, scope: !12638)
!12651 = !DILocation(line: 1506, column: 2, scope: !12638)
!12652 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !10830, file: !10830, line: 571, type: !10831, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12653)
!12653 = !{!12654}
!12654 = !DILocalVariable(name: "t", arg: 1, scope: !12652, file: !10830, line: 571, type: !163)
!12655 = !DILocation(line: 0, scope: !12652)
!12656 = !DILocation(line: 0, scope: !11046, inlinedAt: !12657)
!12657 = distinct !DILocation(line: 574, column: 9, scope: !12652)
!12658 = !DILocation(line: 135, column: 5, scope: !12630, inlinedAt: !12657)
!12659 = !DILocation(line: 139, column: 13, scope: !12628, inlinedAt: !12657)
!12660 = !DILocation(line: 574, column: 2, scope: !12652)
!12661 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !10830, file: !10830, line: 1187, type: !10831, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12662)
!12662 = !{!12663}
!12663 = !DILocalVariable(name: "t", arg: 1, scope: !12661, file: !10830, line: 1187, type: !163)
!12664 = !DILocation(line: 0, scope: !12661)
!12665 = !DILocation(line: 0, scope: !11046, inlinedAt: !12666)
!12666 = distinct !DILocation(line: 1190, column: 9, scope: !12661)
!12667 = !DILocation(line: 145, column: 13, scope: !12668, inlinedAt: !12666)
!12668 = distinct !DILexicalBlock(scope: !11064, file: !10830, line: 144, column: 10)
!12669 = !DILocation(line: 1190, column: 2, scope: !12661)
!12670 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !1976, file: !1976, line: 1517, type: !12566, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12671)
!12671 = !{!12672}
!12672 = !DILocalVariable(name: "thread", arg: 1, scope: !12670, file: !1976, line: 1517, type: !12472)
!12673 = !DILocation(line: 0, scope: !12670)
!12674 = !DILocation(line: 1521, column: 6, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12670, file: !1976, line: 1521, column: 6)
!12676 = !DILocation(line: 1521, column: 6, scope: !12670)
!12677 = !DILocation(line: 1525, column: 6, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12670, file: !1976, line: 1525, column: 6)
!12679 = !DILocation(line: 1525, column: 37, scope: !12678)
!12680 = !DILocation(line: 1525, column: 6, scope: !12670)
!12681 = !DILocation(line: 1527, column: 20, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !1976, line: 1527, column: 7)
!12683 = distinct !DILexicalBlock(scope: !12678, file: !1976, line: 1525, column: 42)
!12684 = !DILocation(line: 1527, column: 33, scope: !12682)
!12685 = !DILocation(line: 1527, column: 7, scope: !12683)
!12686 = !DILocation(line: 1532, column: 2, scope: !12670)
!12687 = !DILocation(line: 1533, column: 2, scope: !12670)
!12688 = !DILocation(line: 1031, column: 3, scope: !11643, inlinedAt: !12689)
!12689 = distinct !DILocation(line: 48, column: 10, scope: !11647, inlinedAt: !12690)
!12690 = distinct !DILocation(line: 1537, column: 7, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12670, file: !1976, line: 1537, column: 6)
!12692 = !DILocation(line: 0, scope: !11643, inlinedAt: !12689)
!12693 = !DILocation(line: 48, column: 9, scope: !11647, inlinedAt: !12690)
!12694 = !DILocation(line: 1537, column: 6, scope: !12670)
!12695 = !DILocation(line: 1538, column: 3, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12691, file: !1976, line: 1537, column: 25)
!12697 = !DILocation(line: 1539, column: 2, scope: !12696)
!12698 = !DILocation(line: 1540, column: 1, scope: !12670)
!12699 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10291, file: !10291, line: 101, type: !11117, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12700)
!12700 = !{!12701}
!12701 = !DILocalVariable(name: "thread", arg: 1, scope: !12699, file: !10291, line: 101, type: !1877)
!12702 = !DILocation(line: 0, scope: !12699)
!12703 = !DILocation(line: 103, column: 23, scope: !12699)
!12704 = !DILocation(line: 103, column: 36, scope: !12699)
!12705 = !DILocation(line: 103, column: 55, scope: !12699)
!12706 = !DILocation(line: 103, column: 2, scope: !12699)
!12707 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !1976, file: !1976, line: 1567, type: !12708, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12710)
!12708 = !DISubroutineType(types: !12709)
!12709 = !{!12472}
!12710 = !{!12711}
!12711 = !DILocalVariable(name: "ret", scope: !12707, file: !1976, line: 1577, type: !12472)
!12712 = !DILocation(line: 1577, column: 30, scope: !12707)
!12713 = !DILocation(line: 0, scope: !12707)
!12714 = !DILocation(line: 1582, column: 2, scope: !12707)
!12715 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !1976, file: !1976, line: 1593, type: !12716, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !162)
!12716 = !DISubroutineType(types: !12717)
!12717 = !{!103}
!12718 = !DILocation(line: 1031, column: 3, scope: !11643, inlinedAt: !12719)
!12719 = distinct !DILocation(line: 48, column: 10, scope: !11647, inlinedAt: !12720)
!12720 = distinct !DILocation(line: 1595, column: 10, scope: !12715)
!12721 = !DILocation(line: 0, scope: !11643, inlinedAt: !12719)
!12722 = !DILocation(line: 48, column: 9, scope: !11647, inlinedAt: !12720)
!12723 = !DILocation(line: 1595, column: 27, scope: !12715)
!12724 = !DILocation(line: 1595, column: 41, scope: !12715)
!12725 = !DILocation(line: 1595, column: 30, scope: !12715)
!12726 = !DILocation(line: 1595, column: 2, scope: !12715)
!12727 = distinct !DISubprogram(name: "z_thread_abort", scope: !1976, file: !1976, line: 1725, type: !10955, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12728)
!12728 = !{!12729, !12730}
!12729 = !DILocalVariable(name: "thread", arg: 1, scope: !12727, file: !1976, line: 1725, type: !1877)
!12730 = !DILocalVariable(name: "key", scope: !12727, file: !1976, line: 1727, type: !10989)
!12731 = !DILocation(line: 0, scope: !12727)
!12732 = !DILocation(line: 0, scope: !10997, inlinedAt: !12733)
!12733 = distinct !DILocation(line: 1727, column: 25, scope: !12727)
!12734 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12735)
!12735 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12733)
!12736 = !DILocation(line: 0, scope: !11006, inlinedAt: !12735)
!12737 = !DILocation(line: 1729, column: 20, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12727, file: !1976, line: 1729, column: 6)
!12739 = !DILocation(line: 1729, column: 33, scope: !12738)
!12740 = !DILocation(line: 1729, column: 48, scope: !12738)
!12741 = !DILocation(line: 1729, column: 6, scope: !12727)
!12742 = !DILocation(line: 0, scope: !11024, inlinedAt: !12743)
!12743 = distinct !DILocation(line: 1730, column: 3, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12738, file: !1976, line: 1729, column: 54)
!12745 = !DILocation(line: 0, scope: !11032, inlinedAt: !12746)
!12746 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12743)
!12747 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12746)
!12748 = !DILocation(line: 1732, column: 3, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12744, file: !1976, line: 1732, column: 3)
!12750 = !{i64 2155445459, i64 2155445475, i64 2155445501, i64 2155445529, i64 2155445549}
!12751 = !DILocation(line: 1733, column: 3, scope: !12744)
!12752 = !DILocation(line: 1736, column: 20, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12727, file: !1976, line: 1736, column: 6)
!12754 = !DILocation(line: 1736, column: 33, scope: !12753)
!12755 = !DILocation(line: 1736, column: 49, scope: !12753)
!12756 = !DILocation(line: 1736, column: 6, scope: !12727)
!12757 = !DILocation(line: 0, scope: !11024, inlinedAt: !12758)
!12758 = distinct !DILocation(line: 1737, column: 3, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12753, file: !1976, line: 1736, column: 56)
!12760 = !DILocation(line: 0, scope: !11032, inlinedAt: !12761)
!12761 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12758)
!12762 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12761)
!12763 = !DILocation(line: 1738, column: 3, scope: !12759)
!12764 = !DILocation(line: 1775, column: 2, scope: !12727)
!12765 = !DILocation(line: 1776, column: 16, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12727, file: !1976, line: 1776, column: 6)
!12767 = !DILocation(line: 1776, column: 13, scope: !12766)
!12768 = !DILocation(line: 1776, column: 25, scope: !12766)
!12769 = !DILocation(line: 1031, column: 3, scope: !11643, inlinedAt: !12770)
!12770 = distinct !DILocation(line: 48, column: 10, scope: !11647, inlinedAt: !12771)
!12771 = distinct !DILocation(line: 1776, column: 29, scope: !12766)
!12772 = !DILocation(line: 0, scope: !11643, inlinedAt: !12770)
!12773 = !DILocation(line: 48, column: 9, scope: !11647, inlinedAt: !12771)
!12774 = !DILocation(line: 1776, column: 6, scope: !12727)
!12775 = !DILocation(line: 0, scope: !11610, inlinedAt: !12776)
!12776 = distinct !DILocation(line: 1777, column: 3, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12766, file: !1976, line: 1776, column: 47)
!12778 = !DILocation(line: 196, column: 9, scope: !11610, inlinedAt: !12776)
!12779 = !DILocation(line: 1779, column: 2, scope: !12777)
!12780 = !DILocation(line: 0, scope: !11024, inlinedAt: !12781)
!12781 = distinct !DILocation(line: 1780, column: 2, scope: !12727)
!12782 = !DILocation(line: 0, scope: !11032, inlinedAt: !12783)
!12783 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12781)
!12784 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12783)
!12785 = !DILocation(line: 1781, column: 1, scope: !12727)
!12786 = distinct !DISubprogram(name: "end_thread", scope: !1976, file: !1976, line: 1690, type: !10955, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12787)
!12787 = !{!12788}
!12788 = !DILocalVariable(name: "thread", arg: 1, scope: !12786, file: !1976, line: 1690, type: !1877)
!12789 = !DILocation(line: 0, scope: !12786)
!12790 = !DILocation(line: 1695, column: 20, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12786, file: !1976, line: 1695, column: 6)
!12792 = !DILocation(line: 1695, column: 33, scope: !12791)
!12793 = !DILocation(line: 1695, column: 49, scope: !12791)
!12794 = !DILocation(line: 1695, column: 6, scope: !12786)
!12795 = !DILocation(line: 1697, column: 29, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12791, file: !1976, line: 1695, column: 56)
!12797 = !DILocation(line: 1698, column: 7, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12796, file: !1976, line: 1698, column: 7)
!12799 = !DILocation(line: 1698, column: 7, scope: !12796)
!12800 = !DILocation(line: 0, scope: !11168, inlinedAt: !12801)
!12801 = distinct !DILocation(line: 1699, column: 4, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12798, file: !1976, line: 1698, column: 35)
!12803 = !DILocation(line: 266, column: 28, scope: !11168, inlinedAt: !12801)
!12804 = !DILocation(line: 0, scope: !11176, inlinedAt: !12805)
!12805 = distinct !DILocation(line: 268, column: 3, scope: !11180, inlinedAt: !12801)
!12806 = !DILocation(line: 234, column: 2, scope: !11176, inlinedAt: !12805)
!12807 = !DILocation(line: 1700, column: 3, scope: !12802)
!12808 = !DILocation(line: 1701, column: 20, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12796, file: !1976, line: 1701, column: 7)
!12810 = !DILocation(line: 1701, column: 30, scope: !12809)
!12811 = !DILocation(line: 1701, column: 7, scope: !12796)
!12812 = !DILocation(line: 1702, column: 4, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12809, file: !1976, line: 1701, column: 39)
!12814 = !DILocation(line: 1703, column: 3, scope: !12813)
!12815 = !DILocation(line: 1704, column: 9, scope: !12796)
!12816 = !DILocation(line: 1705, column: 23, scope: !12796)
!12817 = !DILocation(line: 1705, column: 3, scope: !12796)
!12818 = !DILocation(line: 1706, column: 3, scope: !12796)
!12819 = !DILocation(line: 1722, column: 2, scope: !12796)
!12820 = !DILocation(line: 1723, column: 1, scope: !12786)
!12821 = distinct !DISubprogram(name: "unpend_all", scope: !1976, file: !1976, line: 1674, type: !12822, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12824)
!12822 = !DISubroutineType(types: !12823)
!12823 = !{null, !1908}
!12824 = !{!12825, !12826}
!12825 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12821, file: !1976, line: 1674, type: !1908)
!12826 = !DILocalVariable(name: "thread", scope: !12821, file: !1976, line: 1676, type: !1877)
!12827 = !DILocation(line: 0, scope: !12821)
!12828 = !DILocation(line: 1678, column: 19, scope: !12821)
!12829 = !DILocation(line: 1678, column: 41, scope: !12821)
!12830 = !DILocation(line: 1678, column: 2, scope: !12821)
!12831 = !DILocation(line: 1679, column: 3, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12821, file: !1976, line: 1678, column: 50)
!12833 = !DILocation(line: 1680, column: 9, scope: !12832)
!12834 = !DILocalVariable(name: "thread", arg: 1, scope: !12835, file: !10311, line: 65, type: !1877)
!12835 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10311, file: !10311, line: 65, type: !12836, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12838)
!12836 = !DISubroutineType(types: !12837)
!12837 = !{null, !1877, !32}
!12838 = !{!12834, !12839}
!12839 = !DILocalVariable(name: "value", arg: 2, scope: !12835, file: !10311, line: 65, type: !32)
!12840 = !DILocation(line: 0, scope: !12835, inlinedAt: !12841)
!12841 = distinct !DILocation(line: 1681, column: 3, scope: !12832)
!12842 = !DILocation(line: 67, column: 15, scope: !12835, inlinedAt: !12841)
!12843 = !DILocation(line: 67, column: 33, scope: !12835, inlinedAt: !12841)
!12844 = !DILocation(line: 1682, column: 3, scope: !12832)
!12845 = distinct !{!12845, !12830, !12846}
!12846 = !DILocation(line: 1683, column: 2, scope: !12821)
!12847 = !DILocation(line: 1684, column: 1, scope: !12821)
!12848 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !1976, file: !1976, line: 1794, type: !12849, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12851)
!12849 = !DISubroutineType(types: !12850)
!12850 = !{!103, !1877, !11790}
!12851 = !{!12852, !12853, !12854, !12855}
!12852 = !DILocalVariable(name: "thread", arg: 1, scope: !12848, file: !1976, line: 1794, type: !1877)
!12853 = !DILocalVariable(name: "timeout", arg: 2, scope: !12848, file: !1976, line: 1794, type: !11790)
!12854 = !DILocalVariable(name: "key", scope: !12848, file: !1976, line: 1796, type: !10989)
!12855 = !DILocalVariable(name: "ret", scope: !12848, file: !1976, line: 1797, type: !103)
!12856 = !DILocation(line: 0, scope: !12848)
!12857 = !DILocation(line: 0, scope: !10997, inlinedAt: !12858)
!12858 = distinct !DILocation(line: 1796, column: 25, scope: !12848)
!12859 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12860)
!12860 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12858)
!12861 = !DILocation(line: 0, scope: !11006, inlinedAt: !12860)
!12862 = !DILocation(line: 1801, column: 20, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12848, file: !1976, line: 1801, column: 6)
!12864 = !DILocation(line: 1801, column: 33, scope: !12863)
!12865 = !DILocation(line: 1801, column: 49, scope: !12863)
!12866 = !DILocation(line: 1801, column: 6, scope: !12848)
!12867 = !DILocation(line: 1803, column: 13, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12863, file: !1976, line: 1803, column: 13)
!12869 = !DILocation(line: 1803, column: 13, scope: !12863)
!12870 = !DILocation(line: 1805, column: 24, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12868, file: !1976, line: 1805, column: 13)
!12872 = !DILocation(line: 1805, column: 21, scope: !12871)
!12873 = !DILocation(line: 1805, column: 34, scope: !12871)
!12874 = !DILocation(line: 1806, column: 20, scope: !12871)
!12875 = !DILocation(line: 1806, column: 44, scope: !12871)
!12876 = !DILocation(line: 1806, column: 30, scope: !12871)
!12877 = !DILocation(line: 1805, column: 13, scope: !12868)
!12878 = !DILocation(line: 1810, column: 42, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12871, file: !1976, line: 1808, column: 9)
!12880 = !DILocation(line: 1810, column: 3, scope: !12879)
!12881 = !DILocation(line: 1811, column: 22, scope: !12879)
!12882 = !DILocation(line: 1811, column: 3, scope: !12879)
!12883 = !DILocation(line: 0, scope: !11610, inlinedAt: !12884)
!12884 = distinct !DILocation(line: 1814, column: 9, scope: !12879)
!12885 = !DILocation(line: 196, column: 9, scope: !11610, inlinedAt: !12884)
!12886 = !DILocation(line: 1817, column: 3, scope: !12879)
!12887 = !DILocation(line: 0, scope: !12863)
!12888 = !DILocation(line: 0, scope: !11024, inlinedAt: !12889)
!12889 = distinct !DILocation(line: 1822, column: 2, scope: !12848)
!12890 = !DILocation(line: 0, scope: !11032, inlinedAt: !12891)
!12891 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12889)
!12892 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12891)
!12893 = !DILocation(line: 1823, column: 2, scope: !12848)
!12894 = !DILocation(line: 1824, column: 1, scope: !12848)
!12895 = distinct !DISubprogram(name: "z_sched_wake", scope: !1976, file: !1976, line: 1882, type: !12896, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12898)
!12896 = !DISubroutineType(types: !12897)
!12897 = !{!636, !1908, !103, !102}
!12898 = !{!12899, !12900, !12901, !12902, !12903, !12904, !12906}
!12899 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12895, file: !1976, line: 1882, type: !1908)
!12900 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !12895, file: !1976, line: 1882, type: !103)
!12901 = !DILocalVariable(name: "swap_data", arg: 3, scope: !12895, file: !1976, line: 1882, type: !102)
!12902 = !DILocalVariable(name: "thread", scope: !12895, file: !1976, line: 1884, type: !1877)
!12903 = !DILocalVariable(name: "ret", scope: !12895, file: !1976, line: 1885, type: !636)
!12904 = !DILocalVariable(name: "__i", scope: !12905, file: !1976, line: 1887, type: !10989)
!12905 = distinct !DILexicalBlock(scope: !12895, file: !1976, line: 1887, column: 2)
!12906 = !DILocalVariable(name: "__key", scope: !12905, file: !1976, line: 1887, type: !10989)
!12907 = !DILocation(line: 0, scope: !12895)
!12908 = !DILocation(line: 0, scope: !12905)
!12909 = !DILocation(line: 0, scope: !10997, inlinedAt: !12910)
!12910 = distinct !DILocation(line: 1887, column: 2, scope: !12905)
!12911 = !DILocation(line: 55, column: 2, scope: !11006, inlinedAt: !12912)
!12912 = distinct !DILocation(line: 145, column: 10, scope: !10997, inlinedAt: !12910)
!12913 = !DILocation(line: 0, scope: !11006, inlinedAt: !12912)
!12914 = !DILocation(line: 1888, column: 12, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12916, file: !1976, line: 1887, column: 26)
!12916 = distinct !DILexicalBlock(scope: !12905, file: !1976, line: 1887, column: 2)
!12917 = !DILocation(line: 1890, column: 14, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12915, file: !1976, line: 1890, column: 7)
!12919 = !DILocation(line: 1890, column: 7, scope: !12915)
!12920 = !DILocalVariable(name: "thread", arg: 1, scope: !12921, file: !12922, line: 134, type: !1877)
!12921 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !12922, file: !12922, line: 134, type: !12923, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12925)
!12922 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12923 = !DISubroutineType(types: !12924)
!12924 = !{null, !1877, !32, !102}
!12925 = !{!12920, !12926, !12927}
!12926 = !DILocalVariable(name: "value", arg: 2, scope: !12921, file: !12922, line: 135, type: !32)
!12927 = !DILocalVariable(name: "data", arg: 3, scope: !12921, file: !12922, line: 136, type: !102)
!12928 = !DILocation(line: 0, scope: !12921, inlinedAt: !12929)
!12929 = distinct !DILocation(line: 1891, column: 4, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12918, file: !1976, line: 1890, column: 23)
!12931 = !DILocation(line: 0, scope: !12835, inlinedAt: !12932)
!12932 = distinct !DILocation(line: 138, column: 2, scope: !12921, inlinedAt: !12929)
!12933 = !DILocation(line: 67, column: 15, scope: !12835, inlinedAt: !12932)
!12934 = !DILocation(line: 67, column: 33, scope: !12835, inlinedAt: !12932)
!12935 = !DILocation(line: 139, column: 15, scope: !12921, inlinedAt: !12929)
!12936 = !DILocation(line: 139, column: 25, scope: !12921, inlinedAt: !12929)
!12937 = !DILocation(line: 1894, column: 4, scope: !12930)
!12938 = !DILocation(line: 1895, column: 10, scope: !12930)
!12939 = !DILocation(line: 1896, column: 4, scope: !12930)
!12940 = !DILocation(line: 1898, column: 3, scope: !12930)
!12941 = !DILocation(line: 0, scope: !11024, inlinedAt: !12942)
!12942 = distinct !DILocation(line: 1887, column: 2, scope: !12916)
!12943 = !DILocation(line: 0, scope: !11032, inlinedAt: !12944)
!12944 = distinct !DILocation(line: 215, column: 2, scope: !11024, inlinedAt: !12942)
!12945 = !DILocation(line: 95, column: 2, scope: !11032, inlinedAt: !12944)
!12946 = !DILocation(line: 1901, column: 2, scope: !12895)
!12947 = distinct !DISubprogram(name: "z_sched_wait", scope: !1976, file: !1976, line: 1904, type: !12948, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12951)
!12948 = !DISubroutineType(types: !12949)
!12949 = !{!103, !11000, !10989, !1908, !11790, !12950}
!12950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!12951 = !{!12952, !12953, !12954, !12955, !12956, !12957}
!12952 = !DILocalVariable(name: "lock", arg: 1, scope: !12947, file: !1976, line: 1904, type: !11000)
!12953 = !DILocalVariable(name: "key", arg: 2, scope: !12947, file: !1976, line: 1904, type: !10989)
!12954 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12947, file: !1976, line: 1905, type: !1908)
!12955 = !DILocalVariable(name: "timeout", arg: 4, scope: !12947, file: !1976, line: 1905, type: !11790)
!12956 = !DILocalVariable(name: "data", arg: 5, scope: !12947, file: !1976, line: 1905, type: !12950)
!12957 = !DILocalVariable(name: "ret", scope: !12947, file: !1976, line: 1907, type: !103)
!12958 = !DILocation(line: 0, scope: !12947)
!12959 = !DILocation(line: 1907, column: 12, scope: !12947)
!12960 = !DILocation(line: 1909, column: 11, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12947, file: !1976, line: 1909, column: 6)
!12962 = !DILocation(line: 1909, column: 6, scope: !12947)
!12963 = !DILocation(line: 1910, column: 11, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12961, file: !1976, line: 1909, column: 20)
!12965 = !DILocation(line: 1910, column: 26, scope: !12964)
!12966 = !DILocation(line: 1910, column: 9, scope: !12964)
!12967 = !DILocation(line: 1911, column: 2, scope: !12964)
!12968 = !DILocation(line: 1912, column: 2, scope: !12947)
!12969 = distinct !DISubprogram(name: "z_data_copy", scope: !12970, file: !12970, line: 22, type: !2671, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !162)
!12970 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12971 = !DILocation(line: 24, column: 2, scope: !12969)
!12972 = !DILocation(line: 27, column: 2, scope: !12969)
!12973 = !DILocation(line: 71, column: 1, scope: !12969)
!12974 = distinct !DISubprogram(name: "z_add_timeout", scope: !2013, file: !2013, line: 88, type: !12975, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !12981)
!12975 = !DISubroutineType(types: !12976)
!12976 = !{null, !1986, !2005, !12977}
!12977 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1342, line: 67, baseType: !12978)
!12978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1342, line: 65, size: 64, elements: !12979)
!12979 = !{!12980}
!12980 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12978, file: !1342, line: 66, baseType: !1341, size: 64)
!12981 = !{!12982, !12983, !12984, !12985, !12991, !12992, !12995, !12998}
!12982 = !DILocalVariable(name: "to", arg: 1, scope: !12974, file: !2013, line: 88, type: !1986)
!12983 = !DILocalVariable(name: "fn", arg: 2, scope: !12974, file: !2013, line: 88, type: !2005)
!12984 = !DILocalVariable(name: "timeout", arg: 3, scope: !12974, file: !2013, line: 89, type: !12977)
!12985 = !DILocalVariable(name: "__i", scope: !12986, file: !2013, line: 102, type: !12987)
!12986 = distinct !DILexicalBlock(scope: !12974, file: !2013, line: 102, column: 2)
!12987 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !1451, line: 106, baseType: !12988)
!12988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !1451, line: 32, size: 32, elements: !12989)
!12989 = !{!12990}
!12990 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12988, file: !1451, line: 33, baseType: !103, size: 32)
!12991 = !DILocalVariable(name: "__key", scope: !12986, file: !2013, line: 102, type: !12987)
!12992 = !DILocalVariable(name: "t", scope: !12993, file: !2013, line: 103, type: !1986)
!12993 = distinct !DILexicalBlock(scope: !12994, file: !2013, line: 102, column: 24)
!12994 = distinct !DILexicalBlock(scope: !12986, file: !2013, line: 102, column: 2)
!12995 = !DILocalVariable(name: "ticks", scope: !12996, file: !2013, line: 107, type: !1341)
!12996 = distinct !DILexicalBlock(scope: !12997, file: !2013, line: 106, column: 39)
!12997 = distinct !DILexicalBlock(scope: !12993, file: !2013, line: 105, column: 7)
!12998 = !DILocalVariable(name: "next_time", scope: !12999, file: !2013, line: 137, type: !893)
!12999 = distinct !DILexicalBlock(scope: !13000, file: !2013, line: 127, column: 22)
!13000 = distinct !DILexicalBlock(scope: !12993, file: !2013, line: 127, column: 7)
!13001 = !DILocation(line: 0, scope: !12974)
!13002 = !DILocation(line: 91, column: 6, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !12974, file: !2013, line: 91, column: 6)
!13004 = !DILocation(line: 91, column: 6, scope: !12974)
!13005 = !DILocation(line: 100, column: 6, scope: !12974)
!13006 = !DILocation(line: 100, column: 9, scope: !12974)
!13007 = !DILocation(line: 0, scope: !12986)
!13008 = !DILocalVariable(name: "l", arg: 1, scope: !13009, file: !1451, line: 136, type: !13012)
!13009 = distinct !DISubprogram(name: "k_spin_lock", scope: !1451, file: !1451, line: 136, type: !13010, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13013)
!13010 = !DISubroutineType(types: !13011)
!13011 = !{!12987, !13012}
!13012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!13013 = !{!13008, !13014}
!13014 = !DILocalVariable(name: "k", scope: !13009, file: !1451, line: 139, type: !12987)
!13015 = !DILocation(line: 0, scope: !13009, inlinedAt: !13016)
!13016 = distinct !DILocation(line: 102, column: 2, scope: !12986)
!13017 = !DILocation(line: 55, column: 2, scope: !13018, inlinedAt: !13022)
!13018 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !7636, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13019)
!13019 = !{!13020, !13021}
!13020 = !DILocalVariable(name: "key", scope: !13018, file: !6193, line: 44, type: !32)
!13021 = !DILocalVariable(name: "tmp", scope: !13018, file: !6193, line: 53, type: !32)
!13022 = distinct !DILocation(line: 145, column: 10, scope: !13009, inlinedAt: !13016)
!13023 = !{i64 2846470}
!13024 = !DILocation(line: 0, scope: !13018, inlinedAt: !13022)
!13025 = !DILocation(line: 106, column: 33, scope: !12997)
!13026 = !DILocation(line: 105, column: 7, scope: !12993)
!13027 = !DILocation(line: 107, column: 50, scope: !12996)
!13028 = !DILocation(line: 107, column: 48, scope: !12996)
!13029 = !DILocation(line: 0, scope: !12996)
!13030 = !DILocation(line: 109, column: 17, scope: !12996)
!13031 = !DILocation(line: 110, column: 3, scope: !12996)
!13032 = !DILocation(line: 111, column: 31, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !12997, file: !2013, line: 110, column: 10)
!13034 = !DILocation(line: 111, column: 37, scope: !13033)
!13035 = !DILocation(line: 111, column: 35, scope: !13033)
!13036 = !DILocation(line: 0, scope: !12997)
!13037 = !DILocation(line: 109, column: 8, scope: !12996)
!13038 = !DILocation(line: 109, column: 15, scope: !12996)
!13039 = !DILocation(line: 114, column: 12, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !12993, file: !2013, line: 114, column: 3)
!13041 = !DILocation(line: 0, scope: !12993)
!13042 = !DILocation(line: 114, column: 3, scope: !13040)
!13043 = !DILocation(line: 115, column: 24, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13045, file: !2013, line: 115, column: 8)
!13045 = distinct !DILexicalBlock(scope: !13046, file: !2013, line: 114, column: 45)
!13046 = distinct !DILexicalBlock(scope: !13040, file: !2013, line: 114, column: 3)
!13047 = !DILocation(line: 115, column: 11, scope: !13044)
!13048 = !DILocation(line: 115, column: 18, scope: !13044)
!13049 = !DILocation(line: 115, column: 8, scope: !13045)
!13050 = !DILocation(line: 116, column: 15, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13044, file: !2013, line: 115, column: 32)
!13052 = !DILocation(line: 117, column: 26, scope: !13051)
!13053 = !DILocation(line: 117, column: 37, scope: !13051)
!13054 = !DILocation(line: 117, column: 5, scope: !13051)
!13055 = !DILocation(line: 123, column: 7, scope: !12993)
!13056 = !DILocation(line: 120, column: 15, scope: !13045)
!13057 = !DILocation(line: 114, column: 36, scope: !13046)
!13058 = distinct !{!13058, !13042, !13059}
!13059 = !DILocation(line: 121, column: 3, scope: !13040)
!13060 = !DILocation(line: 124, column: 41, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13062, file: !2013, line: 123, column: 18)
!13062 = distinct !DILexicalBlock(scope: !12993, file: !2013, line: 123, column: 7)
!13063 = !DILocation(line: 124, column: 4, scope: !13061)
!13064 = !DILocation(line: 125, column: 3, scope: !13061)
!13065 = !DILocation(line: 127, column: 13, scope: !13000)
!13066 = !DILocation(line: 127, column: 10, scope: !13000)
!13067 = !DILocation(line: 127, column: 7, scope: !12993)
!13068 = !DILocation(line: 137, column: 24, scope: !12999)
!13069 = !DILocation(line: 0, scope: !12999)
!13070 = !DILocation(line: 139, column: 18, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !12999, file: !2013, line: 139, column: 8)
!13072 = !DILocation(line: 139, column: 23, scope: !13071)
!13073 = !DILocation(line: 141, column: 5, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13071, file: !2013, line: 140, column: 48)
!13075 = !DILocation(line: 142, column: 4, scope: !13074)
!13076 = !DILocalVariable(name: "key", arg: 2, scope: !13077, file: !1451, line: 190, type: !12987)
!13077 = distinct !DISubprogram(name: "k_spin_unlock", scope: !1451, file: !1451, line: 189, type: !13078, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13080)
!13078 = !DISubroutineType(types: !13079)
!13079 = !{null, !13012, !12987}
!13080 = !{!13081, !13076}
!13081 = !DILocalVariable(name: "l", arg: 1, scope: !13077, file: !1451, line: 189, type: !13012)
!13082 = !DILocation(line: 0, scope: !13077, inlinedAt: !13083)
!13083 = distinct !DILocation(line: 102, column: 2, scope: !12994)
!13084 = !DILocalVariable(name: "key", arg: 1, scope: !13085, file: !6193, line: 84, type: !32)
!13085 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6031, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13086)
!13086 = !{!13084}
!13087 = !DILocation(line: 0, scope: !13085, inlinedAt: !13088)
!13088 = distinct !DILocation(line: 215, column: 2, scope: !13077, inlinedAt: !13083)
!13089 = !DILocation(line: 95, column: 2, scope: !13085, inlinedAt: !13088)
!13090 = !{i64 2847287}
!13091 = !DILocation(line: 148, column: 1, scope: !12974)
!13092 = distinct !DISubprogram(name: "elapsed", scope: !2013, file: !2013, line: 62, type: !13093, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !162)
!13093 = !DISubroutineType(types: !13094)
!13094 = !{!893}
!13095 = !DILocation(line: 64, column: 9, scope: !13092)
!13096 = !DILocation(line: 64, column: 28, scope: !13092)
!13097 = !DILocation(line: 64, column: 35, scope: !13092)
!13098 = !DILocation(line: 64, column: 2, scope: !13092)
!13099 = distinct !DISubprogram(name: "first", scope: !2013, file: !2013, line: 39, type: !13100, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13102)
!13100 = !DISubroutineType(types: !13101)
!13101 = !{!1986}
!13102 = !{!13103}
!13103 = !DILocalVariable(name: "t", scope: !13099, file: !2013, line: 41, type: !13104)
!13104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!13105 = !DILocation(line: 41, column: 19, scope: !13099)
!13106 = !DILocation(line: 0, scope: !13099)
!13107 = !DILocation(line: 43, column: 9, scope: !13099)
!13108 = !DILocation(line: 43, column: 2, scope: !13099)
!13109 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !1605, file: !1605, line: 443, type: !13110, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13112)
!13110 = !DISubroutineType(types: !13111)
!13111 = !{null, !13104, !13104}
!13112 = !{!13113, !13114, !13115}
!13113 = !DILocalVariable(name: "successor", arg: 1, scope: !13109, file: !1605, line: 443, type: !13104)
!13114 = !DILocalVariable(name: "node", arg: 2, scope: !13109, file: !1605, line: 443, type: !13104)
!13115 = !DILocalVariable(name: "prev", scope: !13109, file: !1605, line: 445, type: !13116)
!13116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13104)
!13117 = !DILocation(line: 0, scope: !13109)
!13118 = !DILocation(line: 445, column: 39, scope: !13109)
!13119 = !DILocation(line: 447, column: 8, scope: !13109)
!13120 = !DILocation(line: 447, column: 13, scope: !13109)
!13121 = !DILocation(line: 448, column: 8, scope: !13109)
!13122 = !DILocation(line: 448, column: 13, scope: !13109)
!13123 = !DILocation(line: 449, column: 8, scope: !13109)
!13124 = !DILocation(line: 449, column: 13, scope: !13109)
!13125 = !DILocation(line: 450, column: 18, scope: !13109)
!13126 = !DILocation(line: 451, column: 1, scope: !13109)
!13127 = distinct !DISubprogram(name: "next", scope: !2013, file: !2013, line: 46, type: !13128, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13130)
!13128 = !DISubroutineType(types: !13129)
!13129 = !{!1986, !1986}
!13130 = !{!13131, !13132}
!13131 = !DILocalVariable(name: "t", arg: 1, scope: !13127, file: !2013, line: 46, type: !1986)
!13132 = !DILocalVariable(name: "n", scope: !13127, file: !2013, line: 48, type: !13104)
!13133 = !DILocation(line: 0, scope: !13127)
!13134 = !DILocation(line: 48, column: 58, scope: !13127)
!13135 = !DILocation(line: 48, column: 19, scope: !13127)
!13136 = !DILocation(line: 50, column: 9, scope: !13127)
!13137 = !DILocation(line: 50, column: 2, scope: !13127)
!13138 = distinct !DISubprogram(name: "sys_dlist_append", scope: !1605, file: !1605, line: 404, type: !13139, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13142)
!13139 = !DISubroutineType(types: !13140)
!13140 = !{null, !13141, !13104}
!13141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!13142 = !{!13143, !13144, !13145}
!13143 = !DILocalVariable(name: "list", arg: 1, scope: !13138, file: !1605, line: 404, type: !13141)
!13144 = !DILocalVariable(name: "node", arg: 2, scope: !13138, file: !1605, line: 404, type: !13104)
!13145 = !DILocalVariable(name: "tail", scope: !13138, file: !1605, line: 406, type: !13116)
!13146 = !DILocation(line: 0, scope: !13138)
!13147 = !DILocation(line: 406, column: 34, scope: !13138)
!13148 = !DILocation(line: 408, column: 8, scope: !13138)
!13149 = !DILocation(line: 408, column: 13, scope: !13138)
!13150 = !DILocation(line: 409, column: 8, scope: !13138)
!13151 = !DILocation(line: 409, column: 13, scope: !13138)
!13152 = !DILocation(line: 411, column: 8, scope: !13138)
!13153 = !DILocation(line: 411, column: 13, scope: !13138)
!13154 = !DILocation(line: 412, column: 13, scope: !13138)
!13155 = !DILocation(line: 413, column: 1, scope: !13138)
!13156 = distinct !DISubprogram(name: "next_timeout", scope: !2013, file: !2013, line: 67, type: !13093, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13157)
!13157 = !{!13158, !13159, !13160}
!13158 = !DILocalVariable(name: "to", scope: !13156, file: !2013, line: 69, type: !1986)
!13159 = !DILocalVariable(name: "ticks_elapsed", scope: !13156, file: !2013, line: 70, type: !893)
!13160 = !DILocalVariable(name: "ret", scope: !13156, file: !2013, line: 71, type: !893)
!13161 = !DILocation(line: 69, column: 24, scope: !13156)
!13162 = !DILocation(line: 0, scope: !13156)
!13163 = !DILocation(line: 70, column: 26, scope: !13156)
!13164 = !DILocation(line: 73, column: 10, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13156, file: !2013, line: 73, column: 6)
!13166 = !DILocation(line: 73, column: 19, scope: !13165)
!13167 = !DILocation(line: 74, column: 21, scope: !13165)
!13168 = !DILocation(line: 74, column: 30, scope: !13165)
!13169 = !DILocation(line: 74, column: 28, scope: !13165)
!13170 = !DILocation(line: 74, column: 45, scope: !13165)
!13171 = !DILocation(line: 73, column: 6, scope: !13156)
!13172 = !DILocation(line: 77, column: 9, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13165, file: !2013, line: 76, column: 9)
!13174 = !DILocation(line: 0, scope: !13165)
!13175 = !DILocation(line: 81, column: 20, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13156, file: !2013, line: 81, column: 6)
!13177 = !DILocation(line: 81, column: 6, scope: !13176)
!13178 = !DILocation(line: 81, column: 32, scope: !13176)
!13179 = !DILocation(line: 85, column: 2, scope: !13156)
!13180 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !1605, file: !1605, line: 341, type: !13181, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13183)
!13181 = !DISubroutineType(types: !13182)
!13182 = !{!13104, !13141, !13104}
!13183 = !{!13184, !13185}
!13184 = !DILocalVariable(name: "list", arg: 1, scope: !13180, file: !1605, line: 341, type: !13141)
!13185 = !DILocalVariable(name: "node", arg: 2, scope: !13180, file: !1605, line: 342, type: !13104)
!13186 = !DILocation(line: 0, scope: !13180)
!13187 = !DILocation(line: 344, column: 15, scope: !13180)
!13188 = !DILocation(line: 344, column: 9, scope: !13180)
!13189 = !DILocation(line: 344, column: 26, scope: !13180)
!13190 = !DILocation(line: 344, column: 2, scope: !13180)
!13191 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !1605, file: !1605, line: 325, type: !13181, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13192)
!13192 = !{!13193, !13194}
!13193 = !DILocalVariable(name: "list", arg: 1, scope: !13191, file: !1605, line: 325, type: !13141)
!13194 = !DILocalVariable(name: "node", arg: 2, scope: !13191, file: !1605, line: 326, type: !13104)
!13195 = !DILocation(line: 0, scope: !13191)
!13196 = !DILocation(line: 328, column: 24, scope: !13191)
!13197 = !DILocation(line: 328, column: 15, scope: !13191)
!13198 = !DILocation(line: 328, column: 9, scope: !13191)
!13199 = !DILocation(line: 328, column: 45, scope: !13191)
!13200 = !DILocation(line: 328, column: 2, scope: !13191)
!13201 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !1605, file: !1605, line: 294, type: !13202, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13204)
!13202 = !DISubroutineType(types: !13203)
!13203 = !{!13104, !13141}
!13204 = !{!13205}
!13205 = !DILocalVariable(name: "list", arg: 1, scope: !13201, file: !1605, line: 294, type: !13141)
!13206 = !DILocation(line: 0, scope: !13201)
!13207 = !DILocation(line: 296, column: 9, scope: !13201)
!13208 = !DILocation(line: 296, column: 2, scope: !13201)
!13209 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !1605, file: !1605, line: 266, type: !13210, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13212)
!13210 = !DISubroutineType(types: !13211)
!13211 = !{!636, !13141}
!13212 = !{!13213}
!13213 = !DILocalVariable(name: "list", arg: 1, scope: !13209, file: !1605, line: 266, type: !13141)
!13214 = !DILocation(line: 0, scope: !13209)
!13215 = !DILocation(line: 268, column: 15, scope: !13209)
!13216 = !DILocation(line: 268, column: 20, scope: !13209)
!13217 = !DILocation(line: 268, column: 2, scope: !13209)
!13218 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2013, file: !2013, line: 150, type: !13219, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13221)
!13219 = !DISubroutineType(types: !13220)
!13220 = !{!103, !1986}
!13221 = !{!13222, !13223, !13224, !13226}
!13222 = !DILocalVariable(name: "to", arg: 1, scope: !13218, file: !2013, line: 150, type: !1986)
!13223 = !DILocalVariable(name: "ret", scope: !13218, file: !2013, line: 152, type: !103)
!13224 = !DILocalVariable(name: "__i", scope: !13225, file: !2013, line: 154, type: !12987)
!13225 = distinct !DILexicalBlock(scope: !13218, file: !2013, line: 154, column: 2)
!13226 = !DILocalVariable(name: "__key", scope: !13225, file: !2013, line: 154, type: !12987)
!13227 = !DILocation(line: 0, scope: !13218)
!13228 = !DILocation(line: 0, scope: !13225)
!13229 = !DILocation(line: 0, scope: !13009, inlinedAt: !13230)
!13230 = distinct !DILocation(line: 154, column: 2, scope: !13225)
!13231 = !DILocation(line: 55, column: 2, scope: !13018, inlinedAt: !13232)
!13232 = distinct !DILocation(line: 145, column: 10, scope: !13009, inlinedAt: !13230)
!13233 = !DILocation(line: 0, scope: !13018, inlinedAt: !13232)
!13234 = !DILocation(line: 155, column: 7, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13236, file: !2013, line: 155, column: 7)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !2013, line: 154, column: 24)
!13237 = distinct !DILexicalBlock(scope: !13225, file: !2013, line: 154, column: 2)
!13238 = !DILocation(line: 155, column: 7, scope: !13236)
!13239 = !DILocation(line: 156, column: 4, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13235, file: !2013, line: 155, column: 39)
!13241 = !DILocation(line: 158, column: 3, scope: !13240)
!13242 = !DILocation(line: 0, scope: !13077, inlinedAt: !13243)
!13243 = distinct !DILocation(line: 154, column: 2, scope: !13237)
!13244 = !DILocation(line: 0, scope: !13085, inlinedAt: !13245)
!13245 = distinct !DILocation(line: 215, column: 2, scope: !13077, inlinedAt: !13243)
!13246 = !DILocation(line: 95, column: 2, scope: !13085, inlinedAt: !13245)
!13247 = !DILocation(line: 161, column: 2, scope: !13218)
!13248 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !1605, file: !1605, line: 225, type: !13249, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13253)
!13249 = !DISubroutineType(types: !13250)
!13250 = !{!636, !13251}
!13251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13252, size: 32)
!13252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1990)
!13253 = !{!13254}
!13254 = !DILocalVariable(name: "node", arg: 1, scope: !13248, file: !1605, line: 225, type: !13251)
!13255 = !DILocation(line: 0, scope: !13248)
!13256 = !DILocation(line: 227, column: 15, scope: !13248)
!13257 = !DILocation(line: 227, column: 20, scope: !13248)
!13258 = !DILocation(line: 227, column: 2, scope: !13248)
!13259 = distinct !DISubprogram(name: "remove_timeout", scope: !2013, file: !2013, line: 53, type: !2007, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13260)
!13260 = !{!13261}
!13261 = !DILocalVariable(name: "t", arg: 1, scope: !13259, file: !2013, line: 53, type: !1986)
!13262 = !DILocation(line: 0, scope: !13259)
!13263 = !DILocation(line: 55, column: 6, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13259, file: !2013, line: 55, column: 6)
!13265 = !DILocation(line: 55, column: 14, scope: !13264)
!13266 = !DILocation(line: 55, column: 6, scope: !13259)
!13267 = !DILocation(line: 56, column: 25, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13264, file: !2013, line: 55, column: 23)
!13269 = !DILocation(line: 56, column: 12, scope: !13268)
!13270 = !DILocation(line: 56, column: 19, scope: !13268)
!13271 = !DILocation(line: 57, column: 2, scope: !13268)
!13272 = !DILocation(line: 59, column: 23, scope: !13259)
!13273 = !DILocation(line: 59, column: 2, scope: !13259)
!13274 = !DILocation(line: 60, column: 1, scope: !13259)
!13275 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !1605, file: !1605, line: 496, type: !13276, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13278)
!13276 = !DISubroutineType(types: !13277)
!13277 = !{null, !13104}
!13278 = !{!13279, !13280, !13281}
!13279 = !DILocalVariable(name: "node", arg: 1, scope: !13275, file: !1605, line: 496, type: !13104)
!13280 = !DILocalVariable(name: "prev", scope: !13275, file: !1605, line: 498, type: !13116)
!13281 = !DILocalVariable(name: "next", scope: !13275, file: !1605, line: 499, type: !13116)
!13282 = !DILocation(line: 0, scope: !13275)
!13283 = !DILocation(line: 498, column: 34, scope: !13275)
!13284 = !DILocation(line: 499, column: 34, scope: !13275)
!13285 = !DILocation(line: 501, column: 8, scope: !13275)
!13286 = !DILocation(line: 501, column: 13, scope: !13275)
!13287 = !DILocation(line: 502, column: 8, scope: !13275)
!13288 = !DILocation(line: 502, column: 13, scope: !13275)
!13289 = !DILocation(line: 503, column: 2, scope: !13275)
!13290 = !DILocation(line: 504, column: 1, scope: !13275)
!13291 = distinct !DISubprogram(name: "sys_dnode_init", scope: !1605, file: !1605, line: 211, type: !13276, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13292)
!13292 = !{!13293}
!13293 = !DILocalVariable(name: "node", arg: 1, scope: !13291, file: !1605, line: 211, type: !13104)
!13294 = !DILocation(line: 0, scope: !13291)
!13295 = !DILocation(line: 213, column: 8, scope: !13291)
!13296 = !DILocation(line: 213, column: 13, scope: !13291)
!13297 = !DILocation(line: 214, column: 8, scope: !13291)
!13298 = !DILocation(line: 214, column: 13, scope: !13291)
!13299 = !DILocation(line: 215, column: 1, scope: !13291)
!13300 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2013, file: !2013, line: 183, type: !13301, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13305)
!13301 = !DISubroutineType(types: !13302)
!13302 = !{!1341, !13303}
!13303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13304, size: 32)
!13304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1987)
!13305 = !{!13306, !13307, !13308, !13310}
!13306 = !DILocalVariable(name: "timeout", arg: 1, scope: !13300, file: !2013, line: 183, type: !13303)
!13307 = !DILocalVariable(name: "ticks", scope: !13300, file: !2013, line: 185, type: !1341)
!13308 = !DILocalVariable(name: "__i", scope: !13309, file: !2013, line: 187, type: !12987)
!13309 = distinct !DILexicalBlock(scope: !13300, file: !2013, line: 187, column: 2)
!13310 = !DILocalVariable(name: "__key", scope: !13309, file: !2013, line: 187, type: !12987)
!13311 = !DILocation(line: 0, scope: !13300)
!13312 = !DILocation(line: 0, scope: !13309)
!13313 = !DILocation(line: 0, scope: !13009, inlinedAt: !13314)
!13314 = distinct !DILocation(line: 187, column: 2, scope: !13309)
!13315 = !DILocation(line: 55, column: 2, scope: !13018, inlinedAt: !13316)
!13316 = distinct !DILocation(line: 145, column: 10, scope: !13009, inlinedAt: !13314)
!13317 = !DILocation(line: 0, scope: !13018, inlinedAt: !13316)
!13318 = !DILocation(line: 188, column: 11, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13320, file: !2013, line: 187, column: 24)
!13320 = distinct !DILexicalBlock(scope: !13309, file: !2013, line: 187, column: 2)
!13321 = !DILocation(line: 0, scope: !13077, inlinedAt: !13322)
!13322 = distinct !DILocation(line: 187, column: 2, scope: !13320)
!13323 = !DILocation(line: 0, scope: !13085, inlinedAt: !13324)
!13324 = distinct !DILocation(line: 215, column: 2, scope: !13077, inlinedAt: !13322)
!13325 = !DILocation(line: 95, column: 2, scope: !13085, inlinedAt: !13324)
!13326 = !DILocation(line: 191, column: 2, scope: !13300)
!13327 = distinct !DISubprogram(name: "timeout_rem", scope: !2013, file: !2013, line: 165, type: !13301, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13328)
!13328 = !{!13329, !13330, !13331}
!13329 = !DILocalVariable(name: "timeout", arg: 1, scope: !13327, file: !2013, line: 165, type: !13303)
!13330 = !DILocalVariable(name: "ticks", scope: !13327, file: !2013, line: 167, type: !1341)
!13331 = !DILocalVariable(name: "t", scope: !13332, file: !2013, line: 173, type: !1986)
!13332 = distinct !DILexicalBlock(scope: !13327, file: !2013, line: 173, column: 2)
!13333 = !DILocation(line: 0, scope: !13327)
!13334 = !DILocation(line: 169, column: 6, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13327, file: !2013, line: 169, column: 6)
!13336 = !DILocation(line: 169, column: 6, scope: !13327)
!13337 = !DILocation(line: 173, column: 28, scope: !13332)
!13338 = !DILocation(line: 0, scope: !13332)
!13339 = !DILocation(line: 173, column: 39, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13332, file: !2013, line: 173, column: 2)
!13341 = !DILocation(line: 173, column: 2, scope: !13332)
!13342 = !DILocation(line: 174, column: 15, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13340, file: !2013, line: 173, column: 61)
!13344 = !DILocation(line: 174, column: 9, scope: !13343)
!13345 = !DILocation(line: 175, column: 15, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13343, file: !2013, line: 175, column: 7)
!13347 = !DILocation(line: 175, column: 7, scope: !13343)
!13348 = !DILocation(line: 173, column: 52, scope: !13340)
!13349 = distinct !{!13349, !13341, !13350}
!13350 = !DILocation(line: 178, column: 2, scope: !13332)
!13351 = !DILocation(line: 180, column: 17, scope: !13327)
!13352 = !DILocation(line: 180, column: 15, scope: !13327)
!13353 = !DILocation(line: 180, column: 2, scope: !13327)
!13354 = !DILocation(line: 181, column: 1, scope: !13327)
!13355 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !10663, file: !10663, line: 35, type: !13356, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13358)
!13356 = !DISubroutineType(types: !13357)
!13357 = !{!636, !13303}
!13358 = !{!13359}
!13359 = !DILocalVariable(name: "to", arg: 1, scope: !13355, file: !10663, line: 35, type: !13303)
!13360 = !DILocation(line: 0, scope: !13355)
!13361 = !DILocation(line: 37, column: 35, scope: !13355)
!13362 = !DILocation(line: 37, column: 10, scope: !13355)
!13363 = !DILocation(line: 37, column: 9, scope: !13355)
!13364 = !DILocation(line: 37, column: 2, scope: !13355)
!13365 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2013, file: !2013, line: 194, type: !13301, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13366)
!13366 = !{!13367, !13368, !13369, !13371}
!13367 = !DILocalVariable(name: "timeout", arg: 1, scope: !13365, file: !2013, line: 194, type: !13303)
!13368 = !DILocalVariable(name: "ticks", scope: !13365, file: !2013, line: 196, type: !1341)
!13369 = !DILocalVariable(name: "__i", scope: !13370, file: !2013, line: 198, type: !12987)
!13370 = distinct !DILexicalBlock(scope: !13365, file: !2013, line: 198, column: 2)
!13371 = !DILocalVariable(name: "__key", scope: !13370, file: !2013, line: 198, type: !12987)
!13372 = !DILocation(line: 0, scope: !13365)
!13373 = !DILocation(line: 0, scope: !13370)
!13374 = !DILocation(line: 0, scope: !13009, inlinedAt: !13375)
!13375 = distinct !DILocation(line: 198, column: 2, scope: !13370)
!13376 = !DILocation(line: 55, column: 2, scope: !13018, inlinedAt: !13377)
!13377 = distinct !DILocation(line: 145, column: 10, scope: !13009, inlinedAt: !13375)
!13378 = !DILocation(line: 0, scope: !13018, inlinedAt: !13377)
!13379 = !DILocation(line: 199, column: 11, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13381, file: !2013, line: 198, column: 24)
!13381 = distinct !DILexicalBlock(scope: !13370, file: !2013, line: 198, column: 2)
!13382 = !DILocation(line: 199, column: 23, scope: !13380)
!13383 = !DILocation(line: 0, scope: !13077, inlinedAt: !13384)
!13384 = distinct !DILocation(line: 198, column: 2, scope: !13381)
!13385 = !DILocation(line: 0, scope: !13085, inlinedAt: !13386)
!13386 = distinct !DILocation(line: 215, column: 2, scope: !13077, inlinedAt: !13384)
!13387 = !DILocation(line: 95, column: 2, scope: !13085, inlinedAt: !13386)
!13388 = !DILocation(line: 199, column: 21, scope: !13380)
!13389 = !DILocation(line: 202, column: 2, scope: !13365)
!13390 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2013, file: !2013, line: 205, type: !13093, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13391)
!13391 = !{!13392, !13393, !13395}
!13392 = !DILocalVariable(name: "ret", scope: !13390, file: !2013, line: 207, type: !893)
!13393 = !DILocalVariable(name: "__i", scope: !13394, file: !2013, line: 209, type: !12987)
!13394 = distinct !DILexicalBlock(scope: !13390, file: !2013, line: 209, column: 2)
!13395 = !DILocalVariable(name: "__key", scope: !13394, file: !2013, line: 209, type: !12987)
!13396 = !DILocation(line: 0, scope: !13390)
!13397 = !DILocation(line: 0, scope: !13394)
!13398 = !DILocation(line: 0, scope: !13009, inlinedAt: !13399)
!13399 = distinct !DILocation(line: 209, column: 2, scope: !13394)
!13400 = !DILocation(line: 55, column: 2, scope: !13018, inlinedAt: !13401)
!13401 = distinct !DILocation(line: 145, column: 10, scope: !13009, inlinedAt: !13399)
!13402 = !DILocation(line: 0, scope: !13018, inlinedAt: !13401)
!13403 = !DILocation(line: 210, column: 9, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13405, file: !2013, line: 209, column: 24)
!13405 = distinct !DILexicalBlock(scope: !13394, file: !2013, line: 209, column: 2)
!13406 = !DILocation(line: 0, scope: !13077, inlinedAt: !13407)
!13407 = distinct !DILocation(line: 209, column: 2, scope: !13405)
!13408 = !DILocation(line: 0, scope: !13085, inlinedAt: !13409)
!13409 = distinct !DILocation(line: 215, column: 2, scope: !13077, inlinedAt: !13407)
!13410 = !DILocation(line: 95, column: 2, scope: !13085, inlinedAt: !13409)
!13411 = !DILocation(line: 212, column: 2, scope: !13390)
!13412 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2013, file: !2013, line: 215, type: !8295, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13413)
!13413 = !{!13414, !13415, !13416, !13418, !13419, !13422, !13423}
!13414 = !DILocalVariable(name: "ticks", arg: 1, scope: !13412, file: !2013, line: 215, type: !893)
!13415 = !DILocalVariable(name: "is_idle", arg: 2, scope: !13412, file: !2013, line: 215, type: !636)
!13416 = !DILocalVariable(name: "__i", scope: !13417, file: !2013, line: 217, type: !12987)
!13417 = distinct !DILexicalBlock(scope: !13412, file: !2013, line: 217, column: 2)
!13418 = !DILocalVariable(name: "__key", scope: !13417, file: !2013, line: 217, type: !12987)
!13419 = !DILocalVariable(name: "next_to", scope: !13420, file: !2013, line: 218, type: !103)
!13420 = distinct !DILexicalBlock(scope: !13421, file: !2013, line: 217, column: 24)
!13421 = distinct !DILexicalBlock(scope: !13417, file: !2013, line: 217, column: 2)
!13422 = !DILocalVariable(name: "sooner", scope: !13420, file: !2013, line: 219, type: !636)
!13423 = !DILocalVariable(name: "imminent", scope: !13420, file: !2013, line: 221, type: !636)
!13424 = !DILocation(line: 0, scope: !13412)
!13425 = !DILocation(line: 0, scope: !13417)
!13426 = !DILocation(line: 0, scope: !13009, inlinedAt: !13427)
!13427 = distinct !DILocation(line: 217, column: 2, scope: !13417)
!13428 = !DILocation(line: 55, column: 2, scope: !13018, inlinedAt: !13429)
!13429 = distinct !DILocation(line: 145, column: 10, scope: !13009, inlinedAt: !13427)
!13430 = !DILocation(line: 0, scope: !13018, inlinedAt: !13429)
!13431 = !DILocation(line: 218, column: 17, scope: !13420)
!13432 = !DILocation(line: 0, scope: !13420)
!13433 = !DILocation(line: 221, column: 27, scope: !13420)
!13434 = !DILocation(line: 233, column: 17, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13420, file: !2013, line: 233, column: 7)
!13436 = !DILocation(line: 234, column: 26, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13435, file: !2013, line: 233, column: 56)
!13438 = !DILocation(line: 234, column: 4, scope: !13437)
!13439 = !DILocation(line: 235, column: 3, scope: !13437)
!13440 = !DILocation(line: 0, scope: !13077, inlinedAt: !13441)
!13441 = distinct !DILocation(line: 217, column: 2, scope: !13421)
!13442 = !DILocation(line: 0, scope: !13085, inlinedAt: !13443)
!13443 = distinct !DILocation(line: 215, column: 2, scope: !13077, inlinedAt: !13441)
!13444 = !DILocation(line: 95, column: 2, scope: !13085, inlinedAt: !13443)
!13445 = !DILocation(line: 237, column: 1, scope: !13412)
!13446 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2013, file: !2013, line: 239, type: !13447, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13449)
!13447 = !DISubroutineType(types: !13448)
!13448 = !{null, !893}
!13449 = !{!13450, !13451, !13452, !13454}
!13450 = !DILocalVariable(name: "ticks", arg: 1, scope: !13446, file: !2013, line: 239, type: !893)
!13451 = !DILocalVariable(name: "key", scope: !13446, file: !2013, line: 245, type: !12987)
!13452 = !DILocalVariable(name: "t", scope: !13453, file: !2013, line: 262, type: !1986)
!13453 = distinct !DILexicalBlock(scope: !13446, file: !2013, line: 261, column: 67)
!13454 = !DILocalVariable(name: "dt", scope: !13453, file: !2013, line: 263, type: !103)
!13455 = !DILocation(line: 0, scope: !13446)
!13456 = !DILocation(line: 242, column: 2, scope: !13446)
!13457 = !DILocation(line: 0, scope: !13009, inlinedAt: !13458)
!13458 = distinct !DILocation(line: 245, column: 25, scope: !13446)
!13459 = !DILocation(line: 55, column: 2, scope: !13018, inlinedAt: !13460)
!13460 = distinct !DILocation(line: 145, column: 10, scope: !13009, inlinedAt: !13458)
!13461 = !DILocation(line: 0, scope: !13018, inlinedAt: !13460)
!13462 = !DILocation(line: 261, column: 9, scope: !13446)
!13463 = !DILocation(line: 261, column: 17, scope: !13446)
!13464 = !DILocation(line: 261, column: 25, scope: !13446)
!13465 = !DILocation(line: 261, column: 37, scope: !13446)
!13466 = !DILocation(line: 261, column: 47, scope: !13446)
!13467 = !DILocation(line: 261, column: 44, scope: !13446)
!13468 = !DILocation(line: 261, column: 2, scope: !13446)
!13469 = !DILocation(line: 0, scope: !13453)
!13470 = !DILocation(line: 263, column: 12, scope: !13453)
!13471 = !DILocation(line: 265, column: 16, scope: !13453)
!13472 = !DILocation(line: 265, column: 13, scope: !13453)
!13473 = !DILocation(line: 266, column: 13, scope: !13453)
!13474 = !DILocation(line: 267, column: 3, scope: !13453)
!13475 = !DILocation(line: 0, scope: !13077, inlinedAt: !13476)
!13476 = distinct !DILocation(line: 269, column: 3, scope: !13453)
!13477 = !DILocation(line: 0, scope: !13085, inlinedAt: !13478)
!13478 = distinct !DILocation(line: 215, column: 2, scope: !13077, inlinedAt: !13476)
!13479 = !DILocation(line: 95, column: 2, scope: !13085, inlinedAt: !13478)
!13480 = !DILocation(line: 270, column: 6, scope: !13453)
!13481 = !DILocation(line: 270, column: 3, scope: !13453)
!13482 = !DILocation(line: 0, scope: !13009, inlinedAt: !13483)
!13483 = distinct !DILocation(line: 271, column: 9, scope: !13453)
!13484 = !DILocation(line: 55, column: 2, scope: !13018, inlinedAt: !13485)
!13485 = distinct !DILocation(line: 145, column: 10, scope: !13009, inlinedAt: !13483)
!13486 = !DILocation(line: 0, scope: !13018, inlinedAt: !13485)
!13487 = !DILocation(line: 272, column: 22, scope: !13453)
!13488 = distinct !{!13488, !13468, !13489}
!13489 = !DILocation(line: 273, column: 2, scope: !13446)
!13490 = !DILocation(line: 276, column: 19, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13492, file: !2013, line: 275, column: 23)
!13492 = distinct !DILexicalBlock(scope: !13446, file: !2013, line: 275, column: 6)
!13493 = !DILocation(line: 277, column: 2, scope: !13491)
!13494 = !DILocation(line: 279, column: 15, scope: !13446)
!13495 = !DILocation(line: 279, column: 12, scope: !13446)
!13496 = !DILocation(line: 280, column: 21, scope: !13446)
!13497 = !DILocation(line: 282, column: 24, scope: !13446)
!13498 = !DILocation(line: 282, column: 2, scope: !13446)
!13499 = !DILocation(line: 0, scope: !13077, inlinedAt: !13500)
!13500 = distinct !DILocation(line: 284, column: 2, scope: !13446)
!13501 = !DILocation(line: 0, scope: !13085, inlinedAt: !13502)
!13502 = distinct !DILocation(line: 215, column: 2, scope: !13077, inlinedAt: !13500)
!13503 = !DILocation(line: 95, column: 2, scope: !13085, inlinedAt: !13502)
!13504 = !DILocation(line: 285, column: 1, scope: !13446)
!13505 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2013, file: !2013, line: 287, type: !13506, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13508)
!13506 = !DISubroutineType(types: !13507)
!13507 = !{!1343}
!13508 = !{!13509, !13510, !13512}
!13509 = !DILocalVariable(name: "t", scope: !13505, file: !2013, line: 289, type: !163)
!13510 = !DILocalVariable(name: "__i", scope: !13511, file: !2013, line: 291, type: !12987)
!13511 = distinct !DILexicalBlock(scope: !13505, file: !2013, line: 291, column: 2)
!13512 = !DILocalVariable(name: "__key", scope: !13511, file: !2013, line: 291, type: !12987)
!13513 = !DILocation(line: 0, scope: !13505)
!13514 = !DILocation(line: 0, scope: !13511)
!13515 = !DILocation(line: 0, scope: !13009, inlinedAt: !13516)
!13516 = distinct !DILocation(line: 291, column: 2, scope: !13511)
!13517 = !DILocation(line: 55, column: 2, scope: !13018, inlinedAt: !13518)
!13518 = distinct !DILocation(line: 145, column: 10, scope: !13009, inlinedAt: !13516)
!13519 = !DILocation(line: 0, scope: !13018, inlinedAt: !13518)
!13520 = !DILocation(line: 292, column: 7, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13522, file: !2013, line: 291, column: 24)
!13522 = distinct !DILexicalBlock(scope: !13511, file: !2013, line: 291, column: 2)
!13523 = !DILocation(line: 292, column: 19, scope: !13521)
!13524 = !DILocation(line: 0, scope: !13077, inlinedAt: !13525)
!13525 = distinct !DILocation(line: 291, column: 2, scope: !13522)
!13526 = !DILocation(line: 0, scope: !13085, inlinedAt: !13527)
!13527 = distinct !DILocation(line: 215, column: 2, scope: !13077, inlinedAt: !13525)
!13528 = !DILocation(line: 95, column: 2, scope: !13085, inlinedAt: !13527)
!13529 = !DILocation(line: 292, column: 17, scope: !13521)
!13530 = !DILocation(line: 294, column: 2, scope: !13505)
!13531 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2013, file: !2013, line: 297, type: !135, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !162)
!13532 = !DILocation(line: 300, column: 19, scope: !13531)
!13533 = !DILocation(line: 300, column: 9, scope: !13531)
!13534 = !DILocation(line: 300, column: 2, scope: !13531)
!13535 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2013, file: !2013, line: 306, type: !13506, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !162)
!13536 = !DILocation(line: 308, column: 9, scope: !13535)
!13537 = !DILocation(line: 308, column: 2, scope: !13535)
!13538 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2013, file: !2013, line: 319, type: !6169, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13539)
!13539 = !{!13540, !13541, !13542, !13543}
!13540 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !13538, file: !2013, line: 319, type: !137)
!13541 = !DILocalVariable(name: "start_cycles", scope: !13538, file: !2013, line: 328, type: !137)
!13542 = !DILocalVariable(name: "cycles_to_wait", scope: !13538, file: !2013, line: 331, type: !137)
!13543 = !DILocalVariable(name: "current_cycles", scope: !13544, file: !2013, line: 338, type: !137)
!13544 = distinct !DILexicalBlock(scope: !13545, file: !2013, line: 337, column: 11)
!13545 = distinct !DILexicalBlock(scope: !13546, file: !2013, line: 337, column: 2)
!13546 = distinct !DILexicalBlock(scope: !13538, file: !2013, line: 337, column: 2)
!13547 = !DILocation(line: 0, scope: !13538)
!13548 = !DILocation(line: 322, column: 19, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13538, file: !2013, line: 322, column: 6)
!13550 = !DILocation(line: 322, column: 6, scope: !13538)
!13551 = !DILocation(line: 328, column: 26, scope: !13538)
!13552 = !DILocation(line: 333, column: 43, scope: !13538)
!13553 = !DILocation(line: 337, column: 2, scope: !13538)
!13554 = !DILocation(line: 338, column: 29, scope: !13544)
!13555 = !DILocation(line: 0, scope: !13544)
!13556 = !DILocation(line: 341, column: 23, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13544, file: !2013, line: 341, column: 7)
!13558 = !DILocation(line: 341, column: 39, scope: !13557)
!13559 = !DILocation(line: 349, column: 1, scope: !13538)
!13560 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !1678, file: !1678, line: 1675, type: !135, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !162)
!13561 = !DILocation(line: 1677, column: 9, scope: !13560)
!13562 = !DILocation(line: 1677, column: 2, scope: !13560)
!13563 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !13564, file: !13564, line: 24, type: !135, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !162)
!13564 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13565 = !DILocation(line: 26, column: 9, scope: !13563)
!13566 = !DILocation(line: 26, column: 2, scope: !13563)
!13567 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2013, file: !2013, line: 364, type: !13568, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1983, retainedNodes: !13570)
!13568 = !DISubroutineType(types: !13569)
!13569 = !{!163, !12977}
!13570 = !{!13571, !13572}
!13571 = !DILocalVariable(name: "timeout", arg: 1, scope: !13567, file: !2013, line: 364, type: !12977)
!13572 = !DILocalVariable(name: "dt", scope: !13567, file: !2013, line: 366, type: !1341)
!13573 = !DILocation(line: 0, scope: !13567)
!13574 = !DILocation(line: 368, column: 6, scope: !13567)
!13575 = !DILocation(line: 371, column: 10, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13577, file: !2013, line: 370, column: 47)
!13577 = distinct !DILexicalBlock(scope: !13578, file: !2013, line: 370, column: 13)
!13578 = distinct !DILexicalBlock(scope: !13567, file: !2013, line: 368, column: 6)
!13579 = !DILocation(line: 371, column: 3, scope: !13576)
!13580 = !DILocation(line: 376, column: 58, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13582, file: !2013, line: 376, column: 7)
!13582 = distinct !DILexicalBlock(scope: !13577, file: !2013, line: 372, column: 9)
!13583 = !DILocation(line: 376, column: 7, scope: !13582)
!13584 = !DILocation(line: 376, column: 43, scope: !13581)
!13585 = !DILocation(line: 377, column: 4, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13581, file: !2013, line: 376, column: 64)
!13587 = !DILocation(line: 379, column: 10, scope: !13582)
!13588 = !DILocation(line: 379, column: 33, scope: !13582)
!13589 = !DILocation(line: 379, column: 31, scope: !13582)
!13590 = !DILocation(line: 379, column: 3, scope: !13582)
!13591 = !DILocation(line: 0, scope: !13578)
!13592 = !DILocation(line: 381, column: 1, scope: !13567)
!13593 = distinct !DISubprogram(name: "boot_banner", scope: !13594, file: !13594, line: 26, type: !2671, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !162)
!13594 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13595 = !DILocation(line: 34, column: 2, scope: !13593)
!13596 = !DILocation(line: 36, column: 1, scope: !13593)
