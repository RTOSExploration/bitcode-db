; ModuleID = 'build/96b_meerkat96/subsys/console/echo/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.z_heap_bucket, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.z_heap_bucket, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._thread_arch = type { i32, i32 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.5], [13808 x i8], [191 x %struct.anon.5], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.5 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.5] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct._gpio_init_config = type { i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.5], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536850792 to i8*), void (i8*)* inttoptr (i32 536849473 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536850768 to i8*), void (i8*)* inttoptr (i32 536849313 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536850768 to i8*), void (i8*)* inttoptr (i32 536849313 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [62 x i8] c"You should see another line with instructions below. If not,\0A\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"the (interrupt-driven) console device doesn't work as expected:\0A\00", align 1
@prompt = internal constant [50 x i8] c"Start typing characters to see them echoed back\0D\0A\00", align 1, !dbg !25
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !111
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [12 x i8*] [i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !120
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !554
@console_txbuf = internal global [512 x i8] zeroinitializer, align 1, !dbg !659
@console_rxbuf = internal global [64 x i8] zeroinitializer, align 1, !dbg !653
@_vector_start = external dso_local global [0 x i8], align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !707
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !717
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !870
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !818
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !862
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !864
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !811
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !880
@esc_state = internal global i32 0, align 4, !dbg !905
@cur = internal unnamed_addr global i8 0, align 1, !dbg !913
@end = internal unnamed_addr global i8 0, align 1, !dbg !915
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !909
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !911
@.str.42 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.41 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !921
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1106
@.str.46 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.z_heap_bucket { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1057
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1088
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1055
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1043
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1031
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1033
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1090
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1101
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1111
@.str.50 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1117
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1375
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1373
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1367
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1358
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1360
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1377
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1379
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1384
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1389
@overflow_cyc = internal global i32 0, align 4, !dbg !1400
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1660
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1662
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1658
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1629
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1664
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.2 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1694
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1700
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !1913
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1922
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !1929
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1934
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.95 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.99, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.101, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.102, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !1960
@.str.98 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.99 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.100 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.101 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.102 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2068
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2082
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2105
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2207
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2210
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2212
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1927
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1924
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2214
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2250
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1789
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2248
@.str.171 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2253
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3017 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #22, !dbg !3021, !srcloc !3022
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #22, !dbg !3023, !srcloc !3024
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #22, !dbg !3025, !srcloc !3026
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #22, !dbg !3027, !srcloc !3028
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #22, !dbg !3029, !srcloc !3030
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #22, !dbg !3031, !srcloc !3032
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #22, !dbg !3033, !srcloc !3034
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #22, !dbg !3035, !srcloc !3036
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #22, !dbg !3037, !srcloc !3038
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #22, !dbg !3039, !srcloc !3040
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #22, !dbg !3041, !srcloc !3042
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #22, !dbg !3043, !srcloc !3044
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #22, !dbg !3045, !srcloc !3046
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #22, !dbg !3047, !srcloc !3048
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #22, !dbg !3049, !srcloc !3050
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #22, !dbg !3051, !srcloc !3052
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #22, !dbg !3053, !srcloc !3054
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #22, !dbg !3055, !srcloc !3056
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #22, !dbg !3057, !srcloc !3058
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #22, !dbg !3059, !srcloc !3060
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #22, !dbg !3061, !srcloc !3062
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #22, !dbg !3063, !srcloc !3064
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #22, !dbg !3065, !srcloc !3066
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #22, !dbg !3067, !srcloc !3068
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #22, !dbg !3069, !srcloc !3072
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #22, !dbg !3073, !srcloc !3074
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #22, !dbg !3075, !srcloc !3076
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #22, !dbg !3077, !srcloc !3078
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #22, !dbg !3079, !srcloc !3080
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #22, !dbg !3081, !srcloc !3082
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #22, !dbg !3083, !srcloc !3084
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #22, !dbg !3085, !srcloc !3086
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #22, !dbg !3087, !srcloc !3088
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #22, !dbg !3089, !srcloc !3090
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #22, !dbg !3091, !srcloc !3092
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #22, !dbg !3093, !srcloc !3094
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #22, !dbg !3095, !srcloc !3096
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #22, !dbg !3097, !srcloc !3098
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #22, !dbg !3099, !srcloc !3100
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #22, !dbg !3101, !srcloc !3102
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #22, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #22, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #22, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #22, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #22, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #22, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #22, !dbg !3115, !srcloc !3116
  ret void, !dbg !3117
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3120 {
  %1 = tail call i32 @console_init() #23, !dbg !3124
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i32 0, i32 0)) #23, !dbg !3125
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !3126
  %2 = tail call i32 @console_write(i8* noundef null, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @prompt, i32 0, i32 0), i32 noundef 49) #23, !dbg !3127
  br label %3, !dbg !3128

3:                                                ; preds = %11, %0
  %4 = tail call i32 @console_getchar() #23, !dbg !3129
  %5 = trunc i32 %4 to i8, !dbg !3129
  call void @llvm.dbg.value(metadata i8 %5, metadata !3122, metadata !DIExpression()), !dbg !3130
  %6 = tail call i32 @console_putchar(i8 noundef zeroext %5) #23, !dbg !3131
  %7 = and i32 %4, 255, !dbg !3132
  %8 = icmp eq i32 %7, 13, !dbg !3134
  br i1 %8, label %9, label %11, !dbg !3135

9:                                                ; preds = %3
  %10 = tail call i32 @console_putchar(i8 noundef zeroext 10) #23, !dbg !3136
  br label %11, !dbg !3138

11:                                               ; preds = %9, %3
  br label %3, !dbg !3129, !llvm.loop !3139
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3143, metadata !DIExpression()), !dbg !3144
  ret i32 0, !dbg !3145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3146 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3150, metadata !DIExpression()), !dbg !3151
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3152
  ret void, !dbg !3153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3154 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3157
  ret i8* %1, !dbg !3158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3159 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3171, metadata !DIExpression()), !dbg !3180
  call void @llvm.dbg.value(metadata i8* %0, metadata !3170, metadata !DIExpression()), !dbg !3180
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3181
  ret void, !dbg !3183
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3188, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata i8* %1, metadata !3189, metadata !DIExpression()), !dbg !3190
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3191
  %4 = tail call i32 %3(i32 noundef %0) #23, !dbg !3191
  ret i32 %4, !dbg !3192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3193 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3205, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3202, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i8* %1, metadata !3203, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i8* %2, metadata !3204, metadata !DIExpression()), !dbg !3206
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #23, !dbg !3207
  ret void, !dbg !3208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3209 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3213, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.value(metadata i32 %1, metadata !3214, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.value(metadata i32 0, metadata !3215, metadata !DIExpression()), !dbg !3216
  %3 = icmp eq i32 %1, 0, !dbg !3217
  br i1 %3, label %13, label %4, !dbg !3220

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3215, metadata !DIExpression()), !dbg !3216
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3221
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3223
  %8 = load i8, i8* %7, align 1, !dbg !3223
  %9 = zext i8 %8 to i32, !dbg !3223
  %10 = tail call i32 %6(i32 noundef %9) #23, !dbg !3221
  %11 = add nuw i32 %5, 1, !dbg !3224
  call void @llvm.dbg.value(metadata i32 %11, metadata !3215, metadata !DIExpression()), !dbg !3216
  %12 = icmp eq i32 %11, %1, !dbg !3217
  br i1 %12, label %13, label %4, !dbg !3220, !llvm.loop !3225

13:                                               ; preds = %4, %2
  ret void, !dbg !3227
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3228 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3232, metadata !DIExpression()), !dbg !3234
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3235
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3235
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3233, metadata !DIExpression()), !dbg !3236
  call void @llvm.va_start(i8* nonnull %3), !dbg !3237
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3238
  %5 = load i32, i32* %4, align 4, !dbg !3238
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3238
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3238
  call void @llvm.va_end(i8* nonnull %3), !dbg !3239
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3240
  ret void, !dbg !3240
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3241 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3245, metadata !DIExpression()), !dbg !3250
  call void @llvm.dbg.value(metadata i32 %1, metadata !3246, metadata !DIExpression()), !dbg !3250
  call void @llvm.dbg.value(metadata i8* %2, metadata !3247, metadata !DIExpression()), !dbg !3250
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3251
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !3251
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3248, metadata !DIExpression()), !dbg !3252
  call void @llvm.va_start(i8* nonnull %5), !dbg !3253
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3254
  %7 = load i32, i32* %6, align 4, !dbg !3254
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3254
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3254
  call void @llvm.dbg.value(metadata i32 %9, metadata !3249, metadata !DIExpression()), !dbg !3250
  call void @llvm.va_end(i8* nonnull %5), !dbg !3255
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !3256
  ret i32 %9, !dbg !3257
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3258 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3265, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i8* %0, metadata !3262, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i32 %1, metadata !3263, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i8* %2, metadata !3264, metadata !DIExpression()), !dbg !3272
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3273
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #22, !dbg !3273
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3266, metadata !DIExpression()), !dbg !3274
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3275
  store i8* %0, i8** %7, align 4, !dbg !3275
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3275
  store i32 %1, i32* %8, align 4, !dbg !3275
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3275
  store i32 0, i32* %9, align 4, !dbg !3275
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3276
  %10 = load i32, i32* %9, align 4, !dbg !3277
  %11 = load i32, i32* %8, align 4, !dbg !3279
  %12 = icmp slt i32 %10, %11, !dbg !3280
  br i1 %12, label %13, label %15, !dbg !3281

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3282
  store i8 0, i8* %14, align 1, !dbg !3284
  br label %15, !dbg !3285

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #22, !dbg !3286
  ret i32 %10, !dbg !3287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3293, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3294, metadata !DIExpression()), !dbg !3295
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3296
  %4 = load i8*, i8** %3, align 4, !dbg !3296
  %5 = icmp eq i8* %4, null, !dbg !3298
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3299
  br i1 %5, label %12, label %8, !dbg !3300

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3301
  %10 = load i32, i32* %9, align 4, !dbg !3301
  %11 = icmp slt i32 %7, %10, !dbg !3302
  br i1 %11, label %15, label %12, !dbg !3303

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3304
  %14 = add nsw i32 %7, 1, !dbg !3306
  store i32 %14, i32* %13, align 4, !dbg !3306
  br label %25, !dbg !3307

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3308
  %17 = icmp eq i32 %7, %16, !dbg !3310
  br i1 %17, label %18, label %21, !dbg !3311

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3312
  store i32 %19, i32* %6, align 4, !dbg !3312
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3314
  store i8 0, i8* %20, align 1, !dbg !3315
  br label %25, !dbg !3316

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3317
  %23 = add nsw i32 %7, 1, !dbg !3319
  store i32 %23, i32* %6, align 4, !dbg !3319
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3320
  store i8 %22, i8* %24, align 1, !dbg !3321
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3322
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3323 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3333, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8* %1, metadata !3334, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8* %2, metadata !3335, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8* %3, metadata !3336, metadata !DIExpression()), !dbg !3337
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #23, !dbg !3338
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #25, !dbg !3339
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !3340
  unreachable, !dbg !3341
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3342 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #25, !dbg !3440
  ret %struct.k_thread* %1, !dbg !3441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3442 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3447, metadata !DIExpression()), !dbg !3448
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !3449, !srcloc !3451
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #23, !dbg !3452
  ret void, !dbg !3453
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3454 {
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !3455, !srcloc !3457
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #23, !dbg !3458
  ret %struct.k_thread* %1, !dbg !3459
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3460 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3471, metadata !DIExpression()), !dbg !3475
  call void @llvm.dbg.value(metadata i8* %1, metadata !3472, metadata !DIExpression()), !dbg !3475
  %3 = icmp eq i8* %1, null, !dbg !3476
  br i1 %3, label %8, label %4, !dbg !3478

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3479
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3479
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3473, metadata !DIExpression()), !dbg !3475
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #24, !dbg !3480, !range !3481
  call void @llvm.dbg.value(metadata i32 %7, metadata !3474, metadata !DIExpression()), !dbg !3475
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #24, !dbg !3482
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #24, !dbg !3483
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3485 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3489, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i8* %1, metadata !3490, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i8* %1, metadata !3491, metadata !DIExpression()), !dbg !3493
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3494
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3492, metadata !DIExpression()), !dbg !3493
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3495
  %5 = ptrtoint i8* %4 to i32, !dbg !3496
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3496
  %7 = sub i32 %5, %6, !dbg !3496
  %8 = lshr i32 %7, 3, !dbg !3497
  ret i32 %8, !dbg !3498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3499 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3503, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i32 %1, metadata !3504, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i1 %2, metadata !3505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3508
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3509
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3506, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3507, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3508
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3510
  %6 = bitcast i8* %5 to i16*, !dbg !3510
  %7 = load i16, i16* %6, align 2, !dbg !3510
  %8 = and i16 %7, -2, !dbg !3514
  %9 = zext i1 %2 to i16, !dbg !3514
  %10 = or i16 %8, %9, !dbg !3514
  store i16 %10, i16* %6, align 2, !dbg !3510
  ret void, !dbg !3515
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3516 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3520, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.value(metadata i32 %1, metadata !3521, metadata !DIExpression()), !dbg !3522
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3523
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3525
  br i1 %4, label %7, label %5, !dbg !3526

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3527
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3529
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #24, !dbg !3530
  br label %7, !dbg !3531

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3532, !range !3534
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #24, !dbg !3535
  br i1 %9, label %13, label %10, !dbg !3536

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #24, !dbg !3537
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3539, !range !3534
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #24, !dbg !3540
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %12, metadata !3521, metadata !DIExpression()), !dbg !3522
  br label %13, !dbg !3542

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3521, metadata !DIExpression()), !dbg !3522
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #24, !dbg !3543
  ret void, !dbg !3544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3545 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3549, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata i32 %1, metadata !3550, metadata !DIExpression()), !dbg !3551
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3552
  %4 = add i32 %3, %1, !dbg !3553
  ret i32 %4, !dbg !3554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3555 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3559, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.value(metadata i32 %1, metadata !3560, metadata !DIExpression()), !dbg !3561
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #24, !dbg !3562
  %4 = and i32 %3, 1, !dbg !3563
  %5 = icmp ne i32 %4, 0, !dbg !3562
  ret i1 %5, !dbg !3564
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3565 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3567, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.value(metadata i32 %1, metadata !3568, metadata !DIExpression()), !dbg !3572
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3573, !range !3574
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3575
  call void @llvm.dbg.value(metadata i32 %4, metadata !3569, metadata !DIExpression()), !dbg !3576
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #24, !dbg !3577
  ret void, !dbg !3578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3579 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3583, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.value(metadata i32 %1, metadata !3584, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.value(metadata i32 %2, metadata !3585, metadata !DIExpression()), !dbg !3588
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3589
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !3590
  %6 = add i32 %5, %4, !dbg !3591
  call void @llvm.dbg.value(metadata i32 %6, metadata !3586, metadata !DIExpression()), !dbg !3588
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #24, !dbg !3592
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !3593
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #24, !dbg !3594
  ret void, !dbg !3595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3596 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3598, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata i32 %1, metadata !3599, metadata !DIExpression()), !dbg !3600
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #24, !dbg !3601
  %4 = sub i32 %1, %3, !dbg !3602
  ret i32 %4, !dbg !3603
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3604 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3606, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata i32 %1, metadata !3607, metadata !DIExpression()), !dbg !3611
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3612, !range !3574
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3613
  call void @llvm.dbg.value(metadata i32 %4, metadata !3608, metadata !DIExpression()), !dbg !3614
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #24, !dbg !3615
  ret void, !dbg !3616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3617 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3621, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata i32 %1, metadata !3622, metadata !DIExpression()), !dbg !3623
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #24, !dbg !3624
  %4 = lshr i32 %3, 1, !dbg !3625
  ret i32 %4, !dbg !3626
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3627 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3631, metadata !DIExpression()), !dbg !3634
  call void @llvm.dbg.value(metadata i32 %1, metadata !3632, metadata !DIExpression()), !dbg !3634
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #24, !dbg !3635
  %4 = add i32 %1, 1, !dbg !3636
  %5 = sub i32 %4, %3, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %5, metadata !3633, metadata !DIExpression()), !dbg !3634
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3638, !range !3639
  %7 = sub nsw i32 31, %6, !dbg !3640
  ret i32 %7, !dbg !3641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3642 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3646, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %1, metadata !3647, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %2, metadata !3648, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3649, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3655
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3656
  %5 = load i32, i32* %4, align 4, !dbg !3656
  %6 = icmp eq i32 %5, 0, !dbg !3657
  br i1 %6, label %7, label %12, !dbg !3658

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3659
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3661
  %10 = load i32, i32* %9, align 4, !dbg !3662
  %11 = or i32 %10, %8, !dbg !3662
  store i32 %11, i32* %9, align 4, !dbg !3662
  store i32 %1, i32* %4, align 4, !dbg !3663
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #24, !dbg !3664
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #24, !dbg !3665
  br label %14, !dbg !3666

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3651, metadata !DIExpression()), !dbg !3667
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #24, !dbg !3668, !range !3669
  call void @llvm.dbg.value(metadata i32 %13, metadata !3654, metadata !DIExpression()), !dbg !3667
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #24, !dbg !3670
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #24, !dbg !3671
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #24, !dbg !3672
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #24, !dbg !3673
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3675 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3677, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata i32 %1, metadata !3678, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata i32 %2, metadata !3679, metadata !DIExpression()), !dbg !3680
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #24, !dbg !3681
  ret void, !dbg !3682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3683 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3685, metadata !DIExpression()), !dbg !3688
  call void @llvm.dbg.value(metadata i32 %1, metadata !3686, metadata !DIExpression()), !dbg !3688
  call void @llvm.dbg.value(metadata i32 %2, metadata !3687, metadata !DIExpression()), !dbg !3688
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #24, !dbg !3689
  ret void, !dbg !3690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3691 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3693, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata i32 %1, metadata !3694, metadata !DIExpression()), !dbg !3695
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #24, !dbg !3696
  ret i32 %3, !dbg !3697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3698 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3702, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %1, metadata !3703, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %2, metadata !3704, metadata !DIExpression()), !dbg !3707
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3708
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3705, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3706, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3707
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3706, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3707
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3709
  call void @llvm.dbg.value(metadata i8* %5, metadata !3706, metadata !DIExpression()), !dbg !3707
  %6 = bitcast i8* %5 to i16*, !dbg !3710
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3713
  %8 = load i16, i16* %7, align 2, !dbg !3713
  %9 = zext i16 %8 to i32, !dbg !3713
  ret i32 %9, !dbg !3714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3715 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3719, metadata !DIExpression()), !dbg !3720
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3721
  ret %struct.chunk_unit_t* %2, !dbg !3722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3723 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3727, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %1, metadata !3728, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %2, metadata !3729, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %3, metadata !3730, metadata !DIExpression()), !dbg !3733
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3734
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3731, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3732, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3733
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3735
  call void @llvm.dbg.value(metadata i8* %6, metadata !3732, metadata !DIExpression()), !dbg !3733
  %7 = trunc i32 %3 to i16, !dbg !3736
  %8 = bitcast i8* %6 to i16*, !dbg !3739
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3740
  store i16 %7, i16* %9, align 2, !dbg !3741
  ret void, !dbg !3742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3743 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3747, metadata !DIExpression()), !dbg !3748
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #24, !dbg !3749
  ret i32 %2, !dbg !3750
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3751 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3755, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata i32 %1, metadata !3756, metadata !DIExpression()), !dbg !3757
  %3 = add i32 %1, 4, !dbg !3758
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #24, !dbg !3759
  ret i32 %4, !dbg !3760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3765, metadata !DIExpression()), !dbg !3766
  %2 = add i32 %0, 7, !dbg !3767
  %3 = lshr i32 %2, 3, !dbg !3768
  ret i32 %3, !dbg !3769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3770 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3774, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %1, metadata !3775, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %2, metadata !3776, metadata !DIExpression()), !dbg !3777
  %4 = shl i32 %2, 1, !dbg !3778
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #24, !dbg !3779
  ret void, !dbg !3780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3781 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3783, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i32 %1, metadata !3784, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i32 %2, metadata !3785, metadata !DIExpression()), !dbg !3786
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #24, !dbg !3787
  ret void, !dbg !3788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3789 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3791, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i32 %1, metadata !3792, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i32 %2, metadata !3793, metadata !DIExpression()), !dbg !3799
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !3800
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3794, metadata !DIExpression()), !dbg !3799
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3801
  %6 = icmp eq i32 %5, %1, !dbg !3802
  br i1 %6, label %7, label %14, !dbg !3803

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3804
  %9 = xor i32 %8, -1, !dbg !3806
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3807
  %11 = load i32, i32* %10, align 4, !dbg !3808
  %12 = and i32 %11, %9, !dbg !3808
  store i32 %12, i32* %10, align 4, !dbg !3808
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3809
  store i32 0, i32* %13, align 4, !dbg !3810
  br label %17, !dbg !3811

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3812
  call void @llvm.dbg.value(metadata i32 %15, metadata !3795, metadata !DIExpression()), !dbg !3813
  call void @llvm.dbg.value(metadata i32 %5, metadata !3798, metadata !DIExpression()), !dbg !3813
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3814
  store i32 %5, i32* %16, align 4, !dbg !3815
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #24, !dbg !3816
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #24, !dbg !3817
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !3818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3819 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3821, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i32 %1, metadata !3822, metadata !DIExpression()), !dbg !3823
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #24, !dbg !3824
  ret i32 %3, !dbg !3825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3826 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3830, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i8* %1, metadata !3831, metadata !DIExpression()), !dbg !3837
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3838
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3838
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3832, metadata !DIExpression()), !dbg !3837
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #24, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %5, metadata !3833, metadata !DIExpression()), !dbg !3837
  %6 = ptrtoint i8* %1 to i32, !dbg !3840
  call void @llvm.dbg.value(metadata i32 %6, metadata !3834, metadata !DIExpression()), !dbg !3837
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #24, !dbg !3841
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3841
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3842
  call void @llvm.dbg.value(metadata i32 %9, metadata !3835, metadata !DIExpression()), !dbg !3837
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #24, !dbg !3843
  %11 = shl i32 %10, 3, !dbg !3844
  call void @llvm.dbg.value(metadata i32 %11, metadata !3836, metadata !DIExpression()), !dbg !3837
  %12 = sub i32 %9, %6, !dbg !3845
  %13 = add i32 %12, %11, !dbg !3846
  ret i32 %13, !dbg !3847
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3848 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3852, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i32 %1, metadata !3853, metadata !DIExpression()), !dbg !3858
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3859
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3859
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3854, metadata !DIExpression()), !dbg !3858
  %5 = icmp eq i32 %1, 0, !dbg !3860
  br i1 %5, label %19, label %6, !dbg !3862

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #24, !dbg !3863
  br i1 %7, label %19, label %8, !dbg !3864

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #24, !dbg !3865, !range !3481
  call void @llvm.dbg.value(metadata i32 %9, metadata !3856, metadata !DIExpression()), !dbg !3858
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #24, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %10, metadata !3857, metadata !DIExpression()), !dbg !3858
  %11 = icmp eq i32 %10, 0, !dbg !3867
  br i1 %11, label %19, label %12, !dbg !3869

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #24, !dbg !3870
  %14 = icmp ugt i32 %13, %9, !dbg !3872
  br i1 %14, label %15, label %17, !dbg !3873

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3874
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #24, !dbg !3876
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #24, !dbg !3877
  br label %17, !dbg !3878

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #24, !dbg !3879
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #24, !dbg !3880
  call void @llvm.dbg.value(metadata i8* %18, metadata !3855, metadata !DIExpression()), !dbg !3858
  br label %19, !dbg !3881

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3858
  ret i8* %20, !dbg !3882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3883 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3887, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata i32 %1, metadata !3888, metadata !DIExpression()), !dbg !3889
  %3 = lshr i32 %1, 3, !dbg !3890
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3891
  %5 = load i32, i32* %4, align 4, !dbg !3891
  %6 = icmp uge i32 %3, %5, !dbg !3892
  ret i1 %6, !dbg !3893
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3894 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3898, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i32 %1, metadata !3899, metadata !DIExpression()), !dbg !3913
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3914
  call void @llvm.dbg.value(metadata i32 %3, metadata !3900, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3901, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3913
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !3915
  %5 = load i32, i32* %4, align 4, !dbg !3915
  %6 = icmp eq i32 %5, 0, !dbg !3916
  br i1 %6, label %19, label %7, !dbg !3917

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3918
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3919
  call void @llvm.dbg.value(metadata i32 %9, metadata !3905, metadata !DIExpression()), !dbg !3919
  call void @llvm.dbg.value(metadata i32 %8, metadata !3906, metadata !DIExpression()), !dbg !3920
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #24, !dbg !3921
  %11 = icmp ult i32 %10, %1, !dbg !3923
  br i1 %11, label %13, label %12, !dbg !3924

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #24, !dbg !3925
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #24, !dbg !3927
  store i32 %14, i32* %4, align 4, !dbg !3928
  %15 = add nsw i32 %9, -1, !dbg !3929
  call void @llvm.dbg.value(metadata i32 %15, metadata !3905, metadata !DIExpression()), !dbg !3919
  %16 = icmp eq i32 %15, 0, !dbg !3929
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3930
  br i1 %18, label %19, label %7, !dbg !3930, !llvm.loop !3931

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3934
  %21 = load i32, i32* %20, align 4, !dbg !3934
  %22 = add nsw i32 %3, 1, !dbg !3935
  %23 = shl nsw i32 -1, %22, !dbg !3935
  %24 = and i32 %21, %23, !dbg !3936
  call void @llvm.dbg.value(metadata i32 %24, metadata !3908, metadata !DIExpression()), !dbg !3913
  %25 = icmp eq i32 %24, 0, !dbg !3937
  br i1 %25, label %30, label %26, !dbg !3938

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3939, !range !3639
  call void @llvm.dbg.value(metadata i32 %27, metadata !3909, metadata !DIExpression()), !dbg !3940
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !3941
  %29 = load i32, i32* %28, align 4, !dbg !3941
  call void @llvm.dbg.value(metadata i32 %29, metadata !3912, metadata !DIExpression()), !dbg !3940
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #24, !dbg !3942
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3913
  ret i32 %31, !dbg !3943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3944 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3946, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %1, metadata !3947, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %2, metadata !3948, metadata !DIExpression()), !dbg !3952
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3953
  call void @llvm.dbg.value(metadata i32 %4, metadata !3949, metadata !DIExpression()), !dbg !3952
  %5 = sub i32 %2, %1, !dbg !3954
  call void @llvm.dbg.value(metadata i32 %5, metadata !3950, metadata !DIExpression()), !dbg !3952
  %6 = sub i32 %4, %5, !dbg !3955
  call void @llvm.dbg.value(metadata i32 %6, metadata !3951, metadata !DIExpression()), !dbg !3952
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #24, !dbg !3956
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #24, !dbg !3957
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #24, !dbg !3958
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !3959
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #24, !dbg !3960
  ret void, !dbg !3961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3962 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3966, metadata !DIExpression()), !dbg !3970
  call void @llvm.dbg.value(metadata i32 %1, metadata !3967, metadata !DIExpression()), !dbg !3970
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3971
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3968, metadata !DIExpression()), !dbg !3970
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3972
  call void @llvm.dbg.value(metadata i8* %4, metadata !3969, metadata !DIExpression()), !dbg !3970
  ret i8* %4, !dbg !3973
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3974 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3978, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata i32 %1, metadata !3979, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata i32 %2, metadata !3980, metadata !DIExpression()), !dbg !3990
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3991
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3991
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3981, metadata !DIExpression()), !dbg !3990
  %6 = sub i32 0, %1, !dbg !3992
  %7 = and i32 %6, %1, !dbg !3993
  call void @llvm.dbg.value(metadata i32 %7, metadata !3983, metadata !DIExpression()), !dbg !3990
  %8 = icmp eq i32 %7, %1, !dbg !3994
  br i1 %8, label %13, label %9, !dbg !3996

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %10, metadata !3979, metadata !DIExpression()), !dbg !3990
  %11 = icmp ult i32 %7, 4, !dbg !3999
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3999
  br label %17, !dbg !3999

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4000
  br i1 %14, label %15, label %17, !dbg !4003

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #24, !dbg !4004
  br label %57, !dbg !4006

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3990
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4007
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3979, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata i32 %19, metadata !3982, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata i32 %18, metadata !3983, metadata !DIExpression()), !dbg !3990
  %21 = icmp eq i32 %2, 0, !dbg !4008
  br i1 %21, label %57, label %22, !dbg !4010

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #24, !dbg !4011
  br i1 %23, label %57, label %24, !dbg !4012

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4013
  %26 = add i32 %25, %20, !dbg !4014
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #24, !dbg !4015, !range !3481
  call void @llvm.dbg.value(metadata i32 %27, metadata !3984, metadata !DIExpression()), !dbg !3990
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #24, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %28, metadata !3985, metadata !DIExpression()), !dbg !3990
  %29 = icmp eq i32 %28, 0, !dbg !4017
  br i1 %29, label %57, label %30, !dbg !4019

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #24, !dbg !4020
  call void @llvm.dbg.value(metadata i8* %31, metadata !3986, metadata !DIExpression()), !dbg !3990
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4021
  %33 = ptrtoint i8* %32 to i32, !dbg !4021
  %34 = add i32 %20, -1, !dbg !4021
  %35 = add i32 %34, %33, !dbg !4021
  %36 = sub i32 0, %20, !dbg !4021
  %37 = and i32 %35, %36, !dbg !4021
  %38 = inttoptr i32 %37 to i8*, !dbg !4022
  %39 = sub i32 0, %18, !dbg !4023
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4023
  call void @llvm.dbg.value(metadata i8* %40, metadata !3986, metadata !DIExpression()), !dbg !3990
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4024
  %42 = ptrtoint i8* %41 to i32, !dbg !4024
  %43 = add i32 %42, 7, !dbg !4024
  %44 = and i32 %43, -8, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %44, metadata !3987, metadata !DIExpression()), !dbg !3990
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #24, !dbg !4025
  call void @llvm.dbg.value(metadata i32 %45, metadata !3988, metadata !DIExpression()), !dbg !3990
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #24, !dbg !4026
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4027
  %48 = sub i32 %44, %47, !dbg !4027
  %49 = ashr exact i32 %48, 3, !dbg !4027
  call void @llvm.dbg.value(metadata i32 %49, metadata !3989, metadata !DIExpression()), !dbg !3990
  %50 = icmp ugt i32 %45, %28, !dbg !4028
  br i1 %50, label %51, label %52, !dbg !4030

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #24, !dbg !4031
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #24, !dbg !4033
  br label %52, !dbg !4034

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #24, !dbg !4035
  %54 = icmp ugt i32 %53, %49, !dbg !4037
  br i1 %54, label %55, label %56, !dbg !4038

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #24, !dbg !4039
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #24, !dbg !4041
  br label %56, !dbg !4042

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #24, !dbg !4043
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3990
  ret i8* %58, !dbg !4044
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4045 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4049, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i8* %1, metadata !4050, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i32 %2, metadata !4051, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i32 %3, metadata !4052, metadata !DIExpression()), !dbg !4068
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4069
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4069
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4053, metadata !DIExpression()), !dbg !4068
  %7 = icmp eq i8* %1, null, !dbg !4070
  br i1 %7, label %8, label %10, !dbg !4072

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #24, !dbg !4073
  br label %59, !dbg !4075

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4076
  br i1 %11, label %12, label %13, !dbg !4078

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #24, !dbg !4079
  br label %59, !dbg !4081

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #24, !dbg !4082
  br i1 %14, label %59, label %15, !dbg !4084

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #24, !dbg !4085, !range !3481
  call void @llvm.dbg.value(metadata i32 %16, metadata !4054, metadata !DIExpression()), !dbg !4068
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %17, metadata !4055, metadata !DIExpression()), !dbg !4068
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !4087
  %19 = ptrtoint i8* %1 to i32, !dbg !4088
  %20 = ptrtoint i8* %18 to i32, !dbg !4088
  %21 = sub i32 %19, %20, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %21, metadata !4056, metadata !DIExpression()), !dbg !4068
  %22 = add i32 %21, %3, !dbg !4089
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #24, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %23, metadata !4057, metadata !DIExpression()), !dbg !4068
  %24 = icmp eq i32 %2, 0, !dbg !4091
  br i1 %24, label %29, label %25, !dbg !4092

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4093
  %27 = and i32 %26, %19, !dbg !4094
  %28 = icmp eq i32 %27, 0, !dbg !4094
  br i1 %28, label %29, label %49, !dbg !4095

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !4096
  %31 = icmp eq i32 %23, %30, !dbg !4097
  br i1 %31, label %59, label %32, !dbg !4098

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4099
  br i1 %33, label %34, label %36, !dbg !4100

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4101
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #24, !dbg !4103
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #24, !dbg !4104
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #24, !dbg !4105
  br label %59, !dbg !4106

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !4107
  br i1 %37, label %49, label %38, !dbg !4108

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !4109
  %40 = add i32 %39, %30, !dbg !4110
  %41 = icmp ult i32 %40, %23, !dbg !4111
  br i1 %41, label %49, label %42, !dbg !4112

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4113
  call void @llvm.dbg.value(metadata i32 %43, metadata !4058, metadata !DIExpression()), !dbg !4114
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !4115
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !4116
  %45 = icmp ult i32 %43, %44, !dbg !4118
  br i1 %45, label %46, label %48, !dbg !4119

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4120
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #24, !dbg !4122
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #24, !dbg !4123
  br label %48, !dbg !4124

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #24, !dbg !4125
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #24, !dbg !4126
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #24, !dbg !4127
  call void @llvm.dbg.value(metadata i8* %50, metadata !4064, metadata !DIExpression()), !dbg !4068
  %51 = icmp eq i8* %50, null, !dbg !4128
  br i1 %51, label %59, label %52, !dbg !4129

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !4130, !range !3574
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #24, !dbg !4131
  %55 = sub i32 %54, %21, !dbg !4132
  call void @llvm.dbg.value(metadata i32 %55, metadata !4065, metadata !DIExpression()), !dbg !4133
  %56 = icmp ult i32 %55, %3, !dbg !4134
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4134
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #23, !dbg !4135
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #24, !dbg !4136
  br label %59, !dbg !4137

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4068
  ret i8* %60, !dbg !4138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4139 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4143, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 %1, metadata !4144, metadata !DIExpression()), !dbg !4145
  %3 = shl i32 %1, 3, !dbg !4146
  %4 = add i32 %3, -4, !dbg !4147
  ret i32 %4, !dbg !4148
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4149 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4153, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i8* %1, metadata !4154, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 %2, metadata !4155, metadata !DIExpression()), !dbg !4164
  %4 = add i32 %2, -4, !dbg !4165
  call void @llvm.dbg.value(metadata i32 %4, metadata !4155, metadata !DIExpression()), !dbg !4164
  %5 = ptrtoint i8* %1 to i32, !dbg !4166
  %6 = add i32 %5, 7, !dbg !4166
  %7 = and i32 %6, -8, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %7, metadata !4156, metadata !DIExpression()), !dbg !4164
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4167
  %9 = ptrtoint i8* %8 to i32, !dbg !4167
  %10 = and i32 %9, -8, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %10, metadata !4157, metadata !DIExpression()), !dbg !4164
  %11 = sub i32 %10, %7, !dbg !4168
  %12 = lshr exact i32 %11, 3, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %12, metadata !4158, metadata !DIExpression()), !dbg !4164
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4170
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4159, metadata !DIExpression()), !dbg !4164
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4171
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4172
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4173
  store i32 %12, i32* %15, align 8, !dbg !4174
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4175
  store i32 0, i32* %16, align 4, !dbg !4176
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #24, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %17, metadata !4160, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4164
  %18 = shl i32 %17, 2, !dbg !4178
  %19 = add i32 %18, 20, !dbg !4179
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #24, !dbg !4180
  call void @llvm.dbg.value(metadata i32 %20, metadata !4161, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 0, metadata !4162, metadata !DIExpression()), !dbg !4181
  %21 = icmp slt i32 %17, 0, !dbg !4182
  br i1 %21, label %22, label %24, !dbg !4184

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #24, !dbg !4185
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #24, !dbg !4186
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #24, !dbg !4187
  %23 = sub i32 %12, %20, !dbg !4188
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #24, !dbg !4189
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #24, !dbg !4190
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #24, !dbg !4191
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #24, !dbg !4192
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #24, !dbg !4193
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #24, !dbg !4194
  ret void, !dbg !4195

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4162, metadata !DIExpression()), !dbg !4181
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4196
  store i32 0, i32* %26, align 4, !dbg !4198
  %27 = add nuw i32 %25, 1, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %27, metadata !4162, metadata !DIExpression()), !dbg !4181
  %28 = icmp eq i32 %25, %17, !dbg !4182
  br i1 %28, label %22, label %24, !dbg !4184, !llvm.loop !4200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4202 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4215, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4212, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i8* %1, metadata !4213, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i8* %2, metadata !4214, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %4, metadata !4216, metadata !DIExpression()), !dbg !4343
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4344
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #22, !dbg !4344
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4217, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.value(metadata i32 0, metadata !4221, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i1 undef, metadata !4223, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4343
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4346

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4346

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4347
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4215, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i8* %30, metadata !4214, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %29, metadata !4221, metadata !DIExpression()), !dbg !4343
  %31 = load i8, i8* %30, align 1, !dbg !4348
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4346

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4348
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4349
  call void @llvm.dbg.value(metadata i8* %34, metadata !4214, metadata !DIExpression()), !dbg !4343
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #23, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %35, metadata !4225, metadata !DIExpression()), !dbg !4350
  %36 = icmp slt i32 %35, 0, !dbg !4351
  %37 = add i32 %29, 1, !dbg !4349
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  br i1 %36, label %365, label %28, !llvm.loop !4353

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #22, !dbg !4355
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4230, metadata !DIExpression()), !dbg !4356
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4356
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4275, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4278, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i8* %30, metadata !4281, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i32 -1, metadata !4282, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i32 -1, metadata !4283, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i8* null, metadata !4284, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i8* %14, metadata !4285, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i8 0, metadata !4286, metadata !DIExpression()), !dbg !4357
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4358
  call void @llvm.dbg.value(metadata i8* %39, metadata !4214, metadata !DIExpression()), !dbg !4343
  %40 = load i24, i24* %15, align 8, !dbg !4359
  %41 = and i24 %40, 256, !dbg !4359
  %42 = icmp eq i24 %41, 0, !dbg !4359
  br i1 %42, label %51, label %43, !dbg !4361

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4362
  call void @llvm.dbg.value(metadata i8* %44, metadata !4215, metadata !DIExpression()), !dbg !4343
  %45 = bitcast i8* %27 to i32*, !dbg !4362
  %46 = load i32, i32* %45, align 4, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %46, metadata !4282, metadata !DIExpression()), !dbg !4357
  %47 = icmp slt i32 %46, 0, !dbg !4364
  br i1 %47, label %48, label %56, !dbg !4366

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4367
  store i24 %49, i24* %15, align 8, !dbg !4367
  %50 = sub nsw i32 0, %46, !dbg !4369
  call void @llvm.dbg.value(metadata i32 %50, metadata !4282, metadata !DIExpression()), !dbg !4357
  br label %56, !dbg !4370

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4371
  %53 = icmp eq i24 %52, 0, !dbg !4371
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4373
  br label %56, !dbg !4373

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4374
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4357
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4215, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %58, metadata !4282, metadata !DIExpression()), !dbg !4357
  %60 = and i24 %57, 1024, !dbg !4374
  %61 = icmp eq i24 %60, 0, !dbg !4374
  br i1 %61, label %69, label %62, !dbg !4375

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4376
  call void @llvm.dbg.value(metadata i8* %63, metadata !4215, metadata !DIExpression()), !dbg !4343
  %64 = bitcast i8* %59 to i32*, !dbg !4376
  %65 = load i32, i32* %64, align 4, !dbg !4376
  call void @llvm.dbg.value(metadata i32 %65, metadata !4287, metadata !DIExpression()), !dbg !4377
  %66 = icmp slt i32 %65, 0, !dbg !4378
  br i1 %66, label %67, label %74, !dbg !4380

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4381
  store i24 %68, i24* %15, align 8, !dbg !4381
  br label %74, !dbg !4383

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4384
  %71 = icmp eq i24 %70, 0, !dbg !4384
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4386
  br label %74, !dbg !4386

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4387
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4357
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4357
  call void @llvm.dbg.value(metadata i8* %77, metadata !4215, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %76, metadata !4283, metadata !DIExpression()), !dbg !4357
  store i32 0, i32* %16, align 4, !dbg !4388
  store i32 0, i32* %17, align 8, !dbg !4389
  %78 = lshr i24 %75, 16, !dbg !4387
  call void @llvm.dbg.value(metadata i24 %78, metadata !4290, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4357
  %79 = lshr i24 %75, 11, !dbg !4390
  %80 = and i24 %79, 15, !dbg !4390
  %81 = zext i24 %80 to i32, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %81, metadata !4291, metadata !DIExpression()), !dbg !4357
  %82 = trunc i24 %78 to i3, !dbg !4391
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4391

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4392

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4395
  call void @llvm.dbg.value(metadata i8* %85, metadata !4215, metadata !DIExpression()), !dbg !4343
  %86 = bitcast i8* %77 to i32*, !dbg !4395
  %87 = load i32, i32* %86, align 4, !dbg !4395
  %88 = sext i32 %87 to i64, !dbg !4395
  store i64 %88, i64* %20, align 8, !dbg !4397
  br label %115, !dbg !4398

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4399
  call void @llvm.dbg.value(metadata i8* %90, metadata !4215, metadata !DIExpression()), !dbg !4343
  %91 = bitcast i8* %77 to i32*, !dbg !4399
  %92 = load i32, i32* %91, align 4, !dbg !4399
  %93 = sext i32 %92 to i64, !dbg !4399
  store i64 %93, i64* %20, align 8, !dbg !4402
  br label %115, !dbg !4403

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4404
  %96 = add i32 %95, 7, !dbg !4404
  %97 = and i32 %96, -8, !dbg !4404
  %98 = inttoptr i32 %97 to i8*, !dbg !4404
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4404
  call void @llvm.dbg.value(metadata i8* %99, metadata !4215, metadata !DIExpression()), !dbg !4343
  %100 = inttoptr i32 %97 to i64*, !dbg !4404
  %101 = load i64, i64* %100, align 8, !dbg !4404
  store i64 %101, i64* %20, align 8, !dbg !4405
  br label %115, !dbg !4406

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4407
  %104 = add i32 %103, 7, !dbg !4407
  %105 = and i32 %104, -8, !dbg !4407
  %106 = inttoptr i32 %105 to i8*, !dbg !4407
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4407
  call void @llvm.dbg.value(metadata i8* %107, metadata !4215, metadata !DIExpression()), !dbg !4343
  %108 = inttoptr i32 %105 to i64*, !dbg !4407
  %109 = load i64, i64* %108, align 8, !dbg !4407
  store i64 %109, i64* %20, align 8, !dbg !4408
  br label %115, !dbg !4409

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4410
  call void @llvm.dbg.value(metadata i8* %111, metadata !4215, metadata !DIExpression()), !dbg !4343
  %112 = bitcast i8* %77 to i32*, !dbg !4410
  %113 = load i32, i32* %112, align 4, !dbg !4410
  %114 = sext i32 %113 to i64, !dbg !4411
  store i64 %114, i64* %20, align 8, !dbg !4412
  br label %115, !dbg !4413

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4414
  call void @llvm.dbg.value(metadata i8* %117, metadata !4215, metadata !DIExpression()), !dbg !4343
  %118 = trunc i24 %79 to i4, !dbg !4415
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4415

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4416
  %121 = ashr exact i64 %120, 56, !dbg !4416
  store i64 %121, i64* %20, align 8, !dbg !4419
  br label %177, !dbg !4420

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4421
  %124 = ashr exact i64 %123, 48, !dbg !4421
  store i64 %124, i64* %20, align 8, !dbg !4424
  br label %177, !dbg !4425

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4426

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4429
  call void @llvm.dbg.value(metadata i8* %127, metadata !4215, metadata !DIExpression()), !dbg !4343
  %128 = bitcast i8* %77 to i32*, !dbg !4429
  %129 = load i32, i32* %128, align 4, !dbg !4429
  %130 = zext i32 %129 to i64, !dbg !4429
  store i64 %130, i64* %20, align 8, !dbg !4431
  br label %157, !dbg !4432

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4433
  call void @llvm.dbg.value(metadata i8* %132, metadata !4215, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i8* %132, metadata !4215, metadata !DIExpression()), !dbg !4343
  %133 = bitcast i8* %77 to i32*, !dbg !4433
  %134 = load i32, i32* %133, align 4, !dbg !4433
  %135 = zext i32 %134 to i64, !dbg !4433
  store i64 %135, i64* %20, align 8, !dbg !4433
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4435
  %138 = add i32 %137, 7, !dbg !4435
  %139 = and i32 %138, -8, !dbg !4435
  %140 = inttoptr i32 %139 to i8*, !dbg !4435
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4435
  call void @llvm.dbg.value(metadata i8* %141, metadata !4215, metadata !DIExpression()), !dbg !4343
  %142 = inttoptr i32 %139 to i64*, !dbg !4435
  %143 = load i64, i64* %142, align 8, !dbg !4435
  store i64 %143, i64* %20, align 8, !dbg !4436
  br label %157, !dbg !4437

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4438
  %146 = add i32 %145, 7, !dbg !4438
  %147 = and i32 %146, -8, !dbg !4438
  %148 = inttoptr i32 %147 to i8*, !dbg !4438
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4438
  call void @llvm.dbg.value(metadata i8* %149, metadata !4215, metadata !DIExpression()), !dbg !4343
  %150 = inttoptr i32 %147 to i64*, !dbg !4438
  %151 = load i64, i64* %150, align 8, !dbg !4438
  store i64 %151, i64* %20, align 8, !dbg !4439
  br label %157, !dbg !4440

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4441
  call void @llvm.dbg.value(metadata i8* %153, metadata !4215, metadata !DIExpression()), !dbg !4343
  %154 = bitcast i8* %77 to i32*, !dbg !4441
  %155 = load i32, i32* %154, align 4, !dbg !4441
  %156 = zext i32 %155 to i64, !dbg !4442
  store i64 %156, i64* %20, align 8, !dbg !4443
  br label %157, !dbg !4444

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4445
  call void @llvm.dbg.value(metadata i8* %159, metadata !4215, metadata !DIExpression()), !dbg !4343
  %160 = trunc i24 %79 to i4, !dbg !4446
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4446

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4447
  store i64 %162, i64* %20, align 8, !dbg !4450
  br label %177, !dbg !4451

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4452
  store i64 %164, i64* %20, align 8, !dbg !4455
  br label %177, !dbg !4456

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4457
  %167 = add i32 %166, 7, !dbg !4457
  %168 = and i32 %167, -8, !dbg !4457
  %169 = inttoptr i32 %168 to i8*, !dbg !4457
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4457
  call void @llvm.dbg.value(metadata i8* %170, metadata !4215, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i8* %170, metadata !4215, metadata !DIExpression()), !dbg !4343
  %171 = inttoptr i32 %168 to double*, !dbg !4457
  %172 = load double, double* %171, align 8, !dbg !4457
  store double %172, double* %19, align 8, !dbg !4457
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4461
  call void @llvm.dbg.value(metadata i8* %174, metadata !4215, metadata !DIExpression()), !dbg !4343
  %175 = bitcast i8* %77 to i8**, !dbg !4461
  %176 = load i8*, i8** %175, align 4, !dbg !4461
  store i8* %176, i8** %18, align 8, !dbg !4464
  br label %177, !dbg !4465

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4357
  call void @llvm.dbg.value(metadata i8* %178, metadata !4215, metadata !DIExpression()), !dbg !4343
  %179 = and i24 %75, 3, !dbg !4466
  %180 = icmp eq i24 %179, 0, !dbg !4466
  br i1 %180, label %185, label %181, !dbg !4466

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4467
  call void @llvm.dbg.value(metadata i32 %182, metadata !4292, metadata !DIExpression()), !dbg !4468
  %183 = icmp slt i32 %182, 0, !dbg !4469
  %184 = add i32 %182, %29, !dbg !4467
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4471
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4472

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #23, !dbg !4473
  call void @llvm.dbg.value(metadata i32 %188, metadata !4296, metadata !DIExpression()), !dbg !4474
  %189 = icmp slt i32 %188, 0, !dbg !4475
  %190 = add i32 %29, 1, !dbg !4473
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4477
  call void @llvm.dbg.value(metadata i8* %192, metadata !4284, metadata !DIExpression()), !dbg !4357
  %193 = icmp sgt i32 %76, -1, !dbg !4478
  br i1 %193, label %194, label %196, !dbg !4480

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #23, !dbg !4481
  call void @llvm.dbg.value(metadata i32 %195, metadata !4299, metadata !DIExpression()), !dbg !4483
  br label %241, !dbg !4484

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #23, !dbg !4485
  call void @llvm.dbg.value(metadata i32 %197, metadata !4299, metadata !DIExpression()), !dbg !4483
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4284, metadata !DIExpression()), !dbg !4357
  %199 = load i64, i64* %20, align 8, !dbg !4487
  %200 = trunc i64 %199 to i8, !dbg !4488
  store i8 %200, i8* %10, align 1, !dbg !4489
  call void @llvm.dbg.value(metadata i8* %23, metadata !4285, metadata !DIExpression()), !dbg !4357
  br label %245, !dbg !4490

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4491
  %203 = icmp eq i24 %202, 0, !dbg !4491
  %204 = trunc i24 %75 to i8, !dbg !4493
  %205 = shl i8 %204, 1, !dbg !4493
  %206 = and i8 %205, 32, !dbg !4493
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4493
  call void @llvm.dbg.value(metadata i8 %207, metadata !4286, metadata !DIExpression()), !dbg !4357
  %208 = load i64, i64* %20, align 8, !dbg !4494
  call void @llvm.dbg.value(metadata i64 %208, metadata !4222, metadata !DIExpression()), !dbg !4343
  %209 = icmp slt i64 %208, 0, !dbg !4495
  br i1 %209, label %210, label %212, !dbg !4497

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4286, metadata !DIExpression()), !dbg !4357
  %211 = sub nsw i64 0, %208, !dbg !4498
  store i64 %211, i64* %20, align 8, !dbg !4500
  br label %212, !dbg !4501

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4357
  call void @llvm.dbg.value(metadata i8 %213, metadata !4286, metadata !DIExpression()), !dbg !4357
  %214 = load i64, i64* %20, align 8, !dbg !4502
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4503
  call void @llvm.dbg.value(metadata i8* %215, metadata !4284, metadata !DIExpression()), !dbg !4357
  br label %216, !dbg !4504

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4505
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4506
  call void @llvm.dbg.value(metadata i8* %218, metadata !4284, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i8 %217, metadata !4286, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.label(metadata !4342), !dbg !4507
  %219 = icmp sgt i32 %76, -1, !dbg !4508
  br i1 %219, label %222, label %220, !dbg !4509

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4510
  br label %245, !dbg !4509

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4512
  %224 = sub i32 %22, %223, !dbg !4512
  call void @llvm.dbg.value(metadata i32 %224, metadata !4301, metadata !DIExpression()), !dbg !4513
  %225 = load i24, i24* %15, align 8, !dbg !4514
  %226 = and i24 %225, -65, !dbg !4514
  store i24 %226, i24* %15, align 8, !dbg !4514
  %227 = icmp ugt i32 %76, %224, !dbg !4515
  br i1 %227, label %228, label %245, !dbg !4517

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4518
  store i32 %229, i32* %16, align 4, !dbg !4520
  br label %245, !dbg !4521

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4522
  %232 = icmp eq i8* %231, null, !dbg !4524
  br i1 %232, label %245, label %233, !dbg !4525

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4526
  %235 = zext i32 %234 to i64, !dbg !4526
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4528
  call void @llvm.dbg.value(metadata i8* %236, metadata !4284, metadata !DIExpression()), !dbg !4357
  %237 = load i24, i24* %15, align 8, !dbg !4529
  %238 = or i24 %237, 1048576, !dbg !4529
  store i24 %238, i24* %15, align 8, !dbg !4529
  store i8 120, i8* %21, align 1, !dbg !4530
  br label %216, !dbg !4531

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4532
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4535
  br label %363, !dbg !4536

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4537
  call void @llvm.dbg.value(metadata i32 %242, metadata !4299, metadata !DIExpression()), !dbg !4483
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4538
  call void @llvm.dbg.value(metadata i32 -1, metadata !4283, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i32 %29, metadata !4221, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i8* %192, metadata !4284, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i8* %243, metadata !4285, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i8 0, metadata !4286, metadata !DIExpression()), !dbg !4357
  %244 = icmp eq i8* %192, null, !dbg !4539
  br i1 %244, label %363, label %245, !dbg !4541, !llvm.loop !4353

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4510
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4357
  call void @llvm.dbg.value(metadata i32 0, metadata !4305, metadata !DIExpression()), !dbg !4357
  %250 = zext i8 %249 to i32, !dbg !4542
  %251 = icmp eq i8 %249, 0, !dbg !4544
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4357
  call void @llvm.dbg.value(metadata i32 undef, metadata !4304, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4357
  call void @llvm.dbg.value(metadata i32 undef, metadata !4304, metadata !DIExpression()), !dbg !4357
  %252 = icmp sgt i32 %58, 0, !dbg !4545
  br i1 %252, label %253, label %302, !dbg !4546

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4510
  %255 = icmp eq i24 %254, 0, !dbg !4510
  %256 = ptrtoint i8* %248 to i32, !dbg !4547
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4357
  %257 = ptrtoint i8* %247 to i32, !dbg !4547
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4357
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4357
  %258 = xor i1 %251, true, !dbg !4548
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4357
  %259 = sext i1 %258 to i32, !dbg !4548
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4357
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4357
  %260 = lshr i24 %246, 19, !dbg !4549
  %261 = and i24 %260, 1, !dbg !4549
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4549
  %263 = zext i24 %262 to i32, !dbg !4549
  %264 = add i32 %257, %259, !dbg !4549
  %265 = add i32 %256, %263, !dbg !4549
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4357
  %266 = and i24 %246, 4194304, !dbg !4550
  %267 = icmp eq i24 %266, 0, !dbg !4550
  %268 = load i32, i32* %16, align 4, !dbg !4552
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4357
  call void @llvm.dbg.value(metadata i32 undef, metadata !4304, metadata !DIExpression()), !dbg !4357
  %269 = load i32, i32* %17, align 8, !dbg !4553
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4553
  call void @llvm.dbg.value(metadata i32 undef, metadata !4304, metadata !DIExpression()), !dbg !4357
  %271 = add i32 %264, %58, !dbg !4553
  %272 = add i32 %265, %268, !dbg !4553
  %273 = add i32 %272, %270, !dbg !4554
  %274 = sub i32 %271, %273, !dbg !4554
  call void @llvm.dbg.value(metadata i32 %274, metadata !4282, metadata !DIExpression()), !dbg !4357
  %275 = and i24 %246, 4, !dbg !4555
  %276 = icmp eq i24 %275, 0, !dbg !4555
  br i1 %276, label %277, label %302, !dbg !4556

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4306, metadata !DIExpression()), !dbg !4557
  %278 = and i24 %246, 64, !dbg !4558
  %279 = icmp eq i24 %278, 0, !dbg !4558
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4559
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4559
  %282 = select i1 %279, i32 32, i32 48, !dbg !4559
  br i1 %280, label %287, label %283, !dbg !4559

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #23, !dbg !4560
  call void @llvm.dbg.value(metadata i32 %284, metadata !4311, metadata !DIExpression()), !dbg !4561
  %285 = icmp slt i32 %284, 0, !dbg !4562
  %286 = add i32 %29, 1, !dbg !4560
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4357
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4347
  call void @llvm.dbg.value(metadata i32 %290, metadata !4221, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i8 undef, metadata !4306, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata i8 %288, metadata !4286, metadata !DIExpression()), !dbg !4357
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4564
  %292 = add i32 %291, -1, !dbg !4564
  br label %293, !dbg !4564

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4565
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4347
  call void @llvm.dbg.value(metadata i32 %295, metadata !4221, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %294, metadata !4282, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i32 %294, metadata !4282, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4357
  %296 = icmp sgt i32 %294, 0, !dbg !4566
  br i1 %296, label %297, label %302, !dbg !4564

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4567
  call void @llvm.dbg.value(metadata i32 %298, metadata !4282, metadata !DIExpression()), !dbg !4357
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #23, !dbg !4568
  call void @llvm.dbg.value(metadata i32 %299, metadata !4317, metadata !DIExpression()), !dbg !4569
  %300 = icmp slt i32 %299, 0, !dbg !4570
  %301 = add i32 %295, 1, !dbg !4568
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  br i1 %300, label %361, label %293, !llvm.loop !4572

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4357
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4357
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4347
  call void @llvm.dbg.value(metadata i32 %305, metadata !4221, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %304, metadata !4282, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i8 %303, metadata !4286, metadata !DIExpression()), !dbg !4357
  %306 = icmp eq i8 %303, 0, !dbg !4574
  br i1 %306, label %312, label %307, !dbg !4575

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4576
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #23, !dbg !4577
  call void @llvm.dbg.value(metadata i32 %309, metadata !4320, metadata !DIExpression()), !dbg !4578
  %310 = icmp slt i32 %309, 0, !dbg !4579
  %311 = add i32 %305, 1, !dbg !4577
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4347
  call void @llvm.dbg.value(metadata i32 %313, metadata !4221, metadata !DIExpression()), !dbg !4343
  %314 = lshr i24 %246, 20, !dbg !4581
  %315 = lshr i24 %246, 19, !dbg !4582
  %316 = or i24 %314, %315, !dbg !4583
  %317 = and i24 %316, 1, !dbg !4583
  %318 = icmp eq i24 %317, 0, !dbg !4583
  br i1 %318, label %323, label %319, !dbg !4584

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #23, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %320, metadata !4324, metadata !DIExpression()), !dbg !4586
  %321 = icmp slt i32 %320, 0, !dbg !4587
  %322 = add i32 %313, 1, !dbg !4585
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4347
  call void @llvm.dbg.value(metadata i32 %324, metadata !4221, metadata !DIExpression()), !dbg !4343
  %325 = and i24 %246, 1048576, !dbg !4589
  %326 = icmp eq i24 %325, 0, !dbg !4589
  br i1 %326, label %333, label %327, !dbg !4590

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4591
  %329 = zext i8 %328 to i32, !dbg !4591
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #23, !dbg !4591
  call void @llvm.dbg.value(metadata i32 %330, metadata !4330, metadata !DIExpression()), !dbg !4592
  %331 = icmp slt i32 %330, 0, !dbg !4593
  %332 = add i32 %324, 1, !dbg !4591
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4347
  call void @llvm.dbg.value(metadata i32 %334, metadata !4221, metadata !DIExpression()), !dbg !4343
  %335 = load i32, i32* %16, align 4, !dbg !4595
  call void @llvm.dbg.value(metadata i32 %335, metadata !4305, metadata !DIExpression()), !dbg !4357
  br label %336, !dbg !4596

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4597
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4347
  call void @llvm.dbg.value(metadata i32 %338, metadata !4221, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %337, metadata !4305, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4357
  %339 = icmp sgt i32 %337, 0, !dbg !4598
  br i1 %339, label %340, label %345, !dbg !4596

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4599
  call void @llvm.dbg.value(metadata i32 %341, metadata !4305, metadata !DIExpression()), !dbg !4357
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #23, !dbg !4600
  call void @llvm.dbg.value(metadata i32 %342, metadata !4334, metadata !DIExpression()), !dbg !4601
  %343 = icmp slt i32 %342, 0, !dbg !4602
  %344 = add i32 %338, 1, !dbg !4600
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  br i1 %343, label %361, label %336, !llvm.loop !4604

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %346, metadata !4337, metadata !DIExpression()), !dbg !4607
  %347 = icmp slt i32 %346, 0, !dbg !4608
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %349, metadata !4221, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %304, metadata !4282, metadata !DIExpression()), !dbg !4357
  %350 = icmp sgt i32 %304, 0, !dbg !4610
  br i1 %350, label %351, label %363, !dbg !4611

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4611
  %353 = add i32 %352, %338, !dbg !4611
  br label %354, !dbg !4611

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %355, metadata !4282, metadata !DIExpression()), !dbg !4357
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #23, !dbg !4612
  call void @llvm.dbg.value(metadata i32 %356, metadata !4339, metadata !DIExpression()), !dbg !4613
  %357 = icmp slt i32 %356, 0, !dbg !4614
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4616
  call void @llvm.dbg.value(metadata i32 undef, metadata !4221, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %359, metadata !4282, metadata !DIExpression()), !dbg !4357
  %360 = icmp sgt i32 %355, 1, !dbg !4610
  br i1 %360, label %354, label %363, !dbg !4611, !llvm.loop !4617

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4221, metadata !DIExpression()), !dbg !4343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #22, !dbg !4354
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4347
  call void @llvm.dbg.value(metadata i32 %364, metadata !4221, metadata !DIExpression()), !dbg !4343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #22, !dbg !4354
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4343
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #22, !dbg !4619
  ret i32 %366, !dbg !4619
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4620 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4624, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i8* %1, metadata !4625, metadata !DIExpression()), !dbg !4626
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4627
  store i24 0, i24* %3, align 4, !dbg !4627
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4627
  store i8 0, i8* %4, align 1, !dbg !4627
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4627
  store i32 0, i32* %5, align 4, !dbg !4627
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4627
  store i32 0, i32* %6, align 4, !dbg !4627
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4628
  call void @llvm.dbg.value(metadata i8* %7, metadata !4625, metadata !DIExpression()), !dbg !4626
  %8 = load i8, i8* %7, align 1, !dbg !4629
  %9 = icmp eq i8 %8, 37, !dbg !4631
  br i1 %9, label %10, label %12, !dbg !4632

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4633
  call void @llvm.dbg.value(metadata i8* %11, metadata !4625, metadata !DIExpression()), !dbg !4626
  store i8 37, i8* %4, align 1, !dbg !4635
  br label %18, !dbg !4636

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4637
  call void @llvm.dbg.value(metadata i8* %13, metadata !4625, metadata !DIExpression()), !dbg !4626
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4638
  call void @llvm.dbg.value(metadata i8* %14, metadata !4625, metadata !DIExpression()), !dbg !4626
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4639
  call void @llvm.dbg.value(metadata i8* %15, metadata !4625, metadata !DIExpression()), !dbg !4626
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4640
  call void @llvm.dbg.value(metadata i8* %16, metadata !4625, metadata !DIExpression()), !dbg !4626
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4641
  call void @llvm.dbg.value(metadata i8* %17, metadata !4625, metadata !DIExpression()), !dbg !4626
  br label %18, !dbg !4642

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4626
  ret i8* %19, !dbg !4643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4644 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4648, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i8* %1, metadata !4649, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i8* %2, metadata !4650, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i8* %3, metadata !4651, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i32 0, metadata !4652, metadata !DIExpression()), !dbg !4655
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4656

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4657
  call void @llvm.dbg.value(metadata i32 %9, metadata !4652, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i8* %8, metadata !4650, metadata !DIExpression()), !dbg !4655
  %10 = icmp ult i8* %8, %3, !dbg !4658
  br i1 %10, label %11, label %13, !dbg !4659

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4660
  br label %17, !dbg !4659

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4661

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4662
  %16 = icmp eq i8 %15, 0, !dbg !4661
  br i1 %16, label %24, label %17, !dbg !4656

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4660
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4663
  call void @llvm.dbg.value(metadata i8* %19, metadata !4650, metadata !DIExpression()), !dbg !4655
  %20 = zext i8 %18 to i32, !dbg !4664
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #23, !dbg !4665
  call void @llvm.dbg.value(metadata i32 %21, metadata !4653, metadata !DIExpression()), !dbg !4666
  %22 = icmp slt i32 %21, 0, !dbg !4667
  %23 = add i32 %9, 1, !dbg !4669
  call void @llvm.dbg.value(metadata i32 undef, metadata !4652, metadata !DIExpression()), !dbg !4655
  br i1 %22, label %24, label %7, !llvm.loop !4670

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4655
  ret i32 %25, !dbg !4672
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4673 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4677, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4678, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i8* %2, metadata !4679, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i8* %3, metadata !4680, metadata !DIExpression()), !dbg !4687
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4688
  %6 = load i8, i8* %5, align 1, !dbg !4688
  %7 = zext i8 %6 to i32, !dbg !4689
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4690
  %9 = icmp eq i32 %8, 0, !dbg !4690
  call void @llvm.dbg.value(metadata i1 %9, metadata !4681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4687
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %10, metadata !4682, metadata !DIExpression()), !dbg !4687
  %11 = ptrtoint i8* %3 to i32, !dbg !4692
  %12 = ptrtoint i8* %2 to i32, !dbg !4692
  %13 = sub i32 %11, %12, !dbg !4692
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4693
  call void @llvm.dbg.value(metadata i8* %14, metadata !4684, metadata !DIExpression()), !dbg !4687
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4694

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4687
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4677, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i8* %18, metadata !4684, metadata !DIExpression()), !dbg !4687
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4695
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4696
  call void @llvm.dbg.value(metadata i32 %25, metadata !4685, metadata !DIExpression()), !dbg !4697
  %26 = icmp ult i32 %25, 10, !dbg !4698
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4699
  %28 = add i32 %27, %25, !dbg !4697
  %29 = trunc i32 %28 to i8, !dbg !4699
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4700
  call void @llvm.dbg.value(metadata i8* %30, metadata !4684, metadata !DIExpression()), !dbg !4687
  store i8 %29, i8* %30, align 1, !dbg !4701
  call void @llvm.dbg.value(metadata i64 %22, metadata !4677, metadata !DIExpression()), !dbg !4687
  %31 = icmp uge i64 %19, %15, !dbg !4702
  %32 = icmp ugt i8* %30, %2, !dbg !4703
  %33 = and i1 %31, %32, !dbg !4703
  br i1 %33, label %17, label %34, !dbg !4704, !llvm.loop !4705

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4707
  %36 = load i24, i24* %35, align 4, !dbg !4707
  %37 = and i24 %36, 32, !dbg !4707
  %38 = icmp eq i24 %37, 0, !dbg !4707
  br i1 %38, label %44, label %39, !dbg !4709

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4710

40:                                               ; preds = %39
  br label %41, !dbg !4712

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4716
  store i24 %43, i24* %35, align 4, !dbg !4716
  br label %44, !dbg !4717

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4717
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4718 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4724, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.value(metadata i8* %1, metadata !4725, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.value(metadata i32 %2, metadata !4726, metadata !DIExpression()), !dbg !4727
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4728
  %5 = load i24, i24* %4, align 4, !dbg !4728
  %6 = lshr i24 %5, 11, !dbg !4728
  %7 = and i24 %6, 15, !dbg !4728
  %8 = zext i24 %7 to i32, !dbg !4728
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4729

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4730
  store i32 %2, i32* %10, align 4, !dbg !4732
  br label %28, !dbg !4733

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4734
  store i8 %12, i8* %1, align 1, !dbg !4735
  br label %28, !dbg !4736

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4737
  %15 = bitcast i8* %1 to i16*, !dbg !4738
  store i16 %14, i16* %15, align 2, !dbg !4739
  br label %28, !dbg !4740

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4741
  store i32 %2, i32* %17, align 4, !dbg !4742
  br label %28, !dbg !4743

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4744
  %20 = bitcast i8* %1 to i64*, !dbg !4745
  store i64 %19, i64* %20, align 8, !dbg !4746
  br label %28, !dbg !4747

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4748
  %23 = bitcast i8* %1 to i64*, !dbg !4749
  store i64 %22, i64* %23, align 8, !dbg !4750
  br label %28, !dbg !4751

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4752
  store i32 %2, i32* %25, align 4, !dbg !4753
  br label %28, !dbg !4754

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4755
  store i32 %2, i32* %27, align 4, !dbg !4756
  br label %28, !dbg !4757

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4758
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4762, metadata !DIExpression()), !dbg !4763
  %2 = add i32 %0, -65, !dbg !4764
  %3 = icmp ult i32 %2, 26, !dbg !4765
  %4 = zext i1 %3 to i32, !dbg !4765
  ret i32 %4, !dbg !4766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4767 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4771, metadata !DIExpression()), !dbg !4772
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4773

2:                                                ; preds = %1
  br label %4, !dbg !4774

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4776

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4777
  ret i32 %5, !dbg !4778
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !4779 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4781, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8* %1, metadata !4782, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8 1, metadata !4783, metadata !DIExpression()), !dbg !4784
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4785

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4783, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8* %5, metadata !4782, metadata !DIExpression()), !dbg !4784
  %6 = load i8, i8* %5, align 1, !dbg !4786
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4788

7:                                                ; preds = %4
  br label %11, !dbg !4789

8:                                                ; preds = %4
  br label %11, !dbg !4791

9:                                                ; preds = %4
  br label %11, !dbg !4792

10:                                               ; preds = %4
  br label %11, !dbg !4793

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4794
  %14 = or i24 %13, %12, !dbg !4794
  store i24 %14, i24* %3, align 4, !dbg !4794
  call void @llvm.dbg.value(metadata i8 poison, metadata !4783, metadata !DIExpression()), !dbg !4784
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4782, metadata !DIExpression()), !dbg !4784
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4783, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8* %15, metadata !4782, metadata !DIExpression()), !dbg !4784
  %17 = load i24, i24* %3, align 4, !dbg !4795
  %18 = and i24 %17, 68, !dbg !4797
  %19 = icmp eq i24 %18, 68, !dbg !4797
  br i1 %19, label %20, label %22, !dbg !4797

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4798
  store i24 %21, i24* %3, align 4, !dbg !4798
  br label %22, !dbg !4800

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4801
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4802 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4804, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i8* %1, metadata !4805, metadata !DIExpression()), !dbg !4808
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4809
  %5 = load i24, i24* %4, align 4, !dbg !4810
  %6 = or i24 %5, 128, !dbg !4810
  store i24 %6, i24* %4, align 4, !dbg !4810
  call void @llvm.dbg.value(metadata i8* %1, metadata !4805, metadata !DIExpression()), !dbg !4808
  %7 = load i8, i8* %1, align 1, !dbg !4811
  %8 = icmp eq i8 %7, 42, !dbg !4813
  br i1 %8, label %9, label %12, !dbg !4814

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4815
  store i24 %10, i24* %4, align 4, !dbg !4815
  call void @llvm.dbg.value(metadata i8* %1, metadata !4805, metadata !DIExpression()), !dbg !4808
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4817
  call void @llvm.dbg.value(metadata i8* %11, metadata !4805, metadata !DIExpression()), !dbg !4808
  store i8* %11, i8** %3, align 4, !dbg !4817
  br label %29, !dbg !4818

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4806, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i8** %3, metadata !4805, metadata !DIExpression(DW_OP_deref)), !dbg !4808
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %13, metadata !4807, metadata !DIExpression()), !dbg !4808
  %14 = load i8*, i8** %3, align 4, !dbg !4820
  call void @llvm.dbg.value(metadata i8* %14, metadata !4805, metadata !DIExpression()), !dbg !4808
  %15 = icmp eq i8* %14, %1, !dbg !4822
  br i1 %15, label %29, label %16, !dbg !4823

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4824
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4826
  store i32 %13, i32* %18, align 4, !dbg !4827
  %19 = lshr i32 %13, 31, !dbg !4828
  %20 = lshr i24 %17, 1, !dbg !4829
  %21 = and i24 %20, 1, !dbg !4829
  %22 = zext i24 %21 to i32, !dbg !4829
  %23 = or i32 %19, %22, !dbg !4829
  %24 = trunc i32 %23 to i24, !dbg !4829
  %25 = shl nuw nsw i24 %24, 1, !dbg !4829
  %26 = and i24 %17, -131, !dbg !4829
  %27 = or i24 %26, 128, !dbg !4829
  %28 = or i24 %25, %27, !dbg !4829
  store i24 %28, i24* %4, align 4, !dbg !4829
  br label %29, !dbg !4830

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4808
  ret i8* %30, !dbg !4831
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4832 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4834, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.value(metadata i8* %1, metadata !4835, metadata !DIExpression()), !dbg !4837
  %4 = load i8, i8* %1, align 1, !dbg !4838
  %5 = icmp eq i8 %4, 46, !dbg !4839
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4840
  %7 = load i24, i24* %6, align 4, !dbg !4841
  %8 = select i1 %5, i24 512, i24 0, !dbg !4841
  %9 = and i24 %7, -513, !dbg !4841
  %10 = or i24 %9, %8, !dbg !4841
  store i24 %10, i24* %6, align 4, !dbg !4841
  br i1 %5, label %11, label %32, !dbg !4842

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4835, metadata !DIExpression()), !dbg !4837
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4843
  call void @llvm.dbg.value(metadata i8* %12, metadata !4835, metadata !DIExpression()), !dbg !4837
  store i8* %12, i8** %3, align 4, !dbg !4843
  %13 = load i8, i8* %12, align 1, !dbg !4844
  %14 = icmp eq i8 %13, 42, !dbg !4846
  br i1 %14, label %15, label %18, !dbg !4847

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4848
  store i24 %16, i24* %6, align 4, !dbg !4848
  call void @llvm.dbg.value(metadata i8* %12, metadata !4835, metadata !DIExpression()), !dbg !4837
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %17, metadata !4835, metadata !DIExpression()), !dbg !4837
  store i8* %17, i8** %3, align 4, !dbg !4850
  br label %32, !dbg !4851

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4835, metadata !DIExpression(DW_OP_deref)), !dbg !4837
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %19, metadata !4836, metadata !DIExpression()), !dbg !4837
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4853
  store i32 %19, i32* %20, align 4, !dbg !4854
  %21 = lshr i32 %19, 31, !dbg !4855
  %22 = load i24, i24* %6, align 4, !dbg !4856
  %23 = lshr i24 %22, 1, !dbg !4856
  %24 = and i24 %23, 1, !dbg !4856
  %25 = zext i24 %24 to i32, !dbg !4856
  %26 = or i32 %21, %25, !dbg !4856
  %27 = trunc i32 %26 to i24, !dbg !4856
  %28 = shl nuw nsw i24 %27, 1, !dbg !4856
  %29 = and i24 %22, -3, !dbg !4856
  %30 = or i24 %28, %29, !dbg !4856
  store i24 %30, i24* %6, align 4, !dbg !4856
  %31 = load i8*, i8** %3, align 4, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %31, metadata !4835, metadata !DIExpression()), !dbg !4837
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4837
  ret i8* %33, !dbg !4858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4859 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4861, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata i8* %1, metadata !4862, metadata !DIExpression()), !dbg !4863
  %3 = load i8, i8* %1, align 1, !dbg !4864
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4865

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4866
  call void @llvm.dbg.value(metadata i8* %5, metadata !4862, metadata !DIExpression()), !dbg !4863
  %6 = load i8, i8* %5, align 1, !dbg !4869
  %7 = icmp eq i8 %6, 104, !dbg !4870
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4871
  %9 = load i24, i24* %8, align 4, !dbg !4871
  %10 = and i24 %9, -30721, !dbg !4871
  br i1 %7, label %11, label %14, !dbg !4872

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4873
  store i24 %12, i24* %8, align 4, !dbg !4873
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4875
  call void @llvm.dbg.value(metadata i8* %13, metadata !4862, metadata !DIExpression()), !dbg !4863
  br label %56, !dbg !4876

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4877
  store i24 %15, i24* %8, align 4, !dbg !4877
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4879
  call void @llvm.dbg.value(metadata i8* %17, metadata !4862, metadata !DIExpression()), !dbg !4863
  %18 = load i8, i8* %17, align 1, !dbg !4881
  %19 = icmp eq i8 %18, 108, !dbg !4882
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4883
  %21 = load i24, i24* %20, align 4, !dbg !4883
  %22 = and i24 %21, -30721, !dbg !4883
  br i1 %19, label %23, label %26, !dbg !4884

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4885
  store i24 %24, i24* %20, align 4, !dbg !4885
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4887
  call void @llvm.dbg.value(metadata i8* %25, metadata !4862, metadata !DIExpression()), !dbg !4863
  br label %56, !dbg !4888

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4889
  store i24 %27, i24* %20, align 4, !dbg !4889
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4891
  %30 = load i24, i24* %29, align 4, !dbg !4892
  %31 = and i24 %30, -30721, !dbg !4892
  %32 = or i24 %31, 10240, !dbg !4892
  store i24 %32, i24* %29, align 4, !dbg !4892
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4893
  call void @llvm.dbg.value(metadata i8* %33, metadata !4862, metadata !DIExpression()), !dbg !4863
  br label %56, !dbg !4894

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4895
  %36 = load i24, i24* %35, align 4, !dbg !4896
  %37 = and i24 %36, -30721, !dbg !4896
  %38 = or i24 %37, 12288, !dbg !4896
  store i24 %38, i24* %35, align 4, !dbg !4896
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4897
  call void @llvm.dbg.value(metadata i8* %39, metadata !4862, metadata !DIExpression()), !dbg !4863
  br label %56, !dbg !4898

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4899
  %42 = load i24, i24* %41, align 4, !dbg !4900
  %43 = and i24 %42, -30721, !dbg !4900
  %44 = or i24 %43, 14336, !dbg !4900
  store i24 %44, i24* %41, align 4, !dbg !4900
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4901
  call void @llvm.dbg.value(metadata i8* %45, metadata !4862, metadata !DIExpression()), !dbg !4863
  br label %56, !dbg !4902

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4903
  %48 = load i24, i24* %47, align 4, !dbg !4904
  %49 = and i24 %48, -30723, !dbg !4904
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4905
  call void @llvm.dbg.value(metadata i8* %50, metadata !4862, metadata !DIExpression()), !dbg !4863
  %51 = or i24 %49, 16386, !dbg !4906
  store i24 %51, i24* %47, align 4, !dbg !4906
  br label %56, !dbg !4907

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4908
  %54 = load i24, i24* %53, align 4, !dbg !4909
  %55 = and i24 %54, -30721, !dbg !4909
  store i24 %55, i24* %53, align 4, !dbg !4909
  br label %56, !dbg !4910

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4862, metadata !DIExpression()), !dbg !4863
  ret i8* %57, !dbg !4911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4912 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4914, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.value(metadata i8* %1, metadata !4915, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.value(metadata i8 0, metadata !4916, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.value(metadata i8* %1, metadata !4915, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4919
  %3 = load i8, i8* %1, align 1, !dbg !4920
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4921
  store i8 %3, i8* %4, align 1, !dbg !4922
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4923

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4924

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4925
  %9 = load i24, i24* %8, align 4, !dbg !4925
  %10 = and i24 %9, -458753, !dbg !4925
  %11 = or i24 %10, %7, !dbg !4925
  call void @llvm.dbg.label(metadata !4917), !dbg !4926
  %12 = and i24 %9, 30720, !dbg !4927
  %13 = icmp eq i24 %12, 16384, !dbg !4927
  %14 = zext i1 %13 to i24, !dbg !4929
  %15 = or i24 %11, %14, !dbg !4929
  %16 = icmp eq i8 %3, 99, !dbg !4930
  br i1 %16, label %17, label %43, !dbg !4932

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4933
  %19 = icmp ne i24 %18, 0, !dbg !4933
  call void @llvm.dbg.value(metadata i1 %19, metadata !4916, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4919
  br label %43, !dbg !4935

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4936
  %22 = load i24, i24* %21, align 4, !dbg !4937
  %23 = and i24 %22, -458753, !dbg !4937
  %24 = or i24 %23, 262144, !dbg !4937
  call void @llvm.dbg.value(metadata i8 1, metadata !4916, metadata !DIExpression()), !dbg !4919
  br label %43, !dbg !4938

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4941
  %27 = load i24, i24* %26, align 4, !dbg !4942
  %28 = and i24 %27, -458753, !dbg !4942
  %29 = or i24 %28, 196608, !dbg !4942
  %30 = and i24 %27, 30720, !dbg !4943
  %31 = icmp eq i24 %30, 16384, !dbg !4943
  br label %43, !dbg !4945

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4946
  %34 = load i24, i24* %33, align 4, !dbg !4947
  %35 = and i24 %34, -458753, !dbg !4947
  %36 = or i24 %35, 196608, !dbg !4947
  %37 = and i24 %34, 30720, !dbg !4948
  %38 = icmp ne i24 %37, 0, !dbg !4948
  br label %43, !dbg !4950

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4951
  %41 = load i24, i24* %40, align 4, !dbg !4952
  %42 = or i24 %41, 1, !dbg !4952
  br label %43, !dbg !4953

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4954
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4955
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4956
  call void @llvm.dbg.value(metadata i8* %48, metadata !4915, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.value(metadata i8 poison, metadata !4916, metadata !DIExpression()), !dbg !4919
  %49 = lshr i24 %44, 1, !dbg !4954
  %50 = and i24 %49, 1, !dbg !4954
  %51 = zext i24 %50 to i32, !dbg !4954
  %52 = or i32 %51, %47, !dbg !4954
  %53 = trunc i32 %52 to i24, !dbg !4954
  %54 = shl nuw nsw i24 %53, 1, !dbg !4954
  %55 = and i24 %44, -3, !dbg !4954
  %56 = or i24 %54, %55, !dbg !4954
  store i24 %56, i24* %46, align 4, !dbg !4954
  ret i8* %48, !dbg !4957
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !4958 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4963, metadata !DIExpression()), !dbg !4966
  %2 = load i8*, i8** %0, align 4, !dbg !4967
  call void @llvm.dbg.value(metadata i8* %2, metadata !4964, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i32 0, metadata !4965, metadata !DIExpression()), !dbg !4966
  %3 = load i8, i8* %2, align 1, !dbg !4968
  %4 = zext i8 %3 to i32, !dbg !4969
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !4970
  %6 = icmp eq i32 %5, 0, !dbg !4971
  br i1 %6, label %19, label %7, !dbg !4971

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4965, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i8* %10, metadata !4964, metadata !DIExpression()), !dbg !4966
  %11 = mul i32 %9, 10, !dbg !4972
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4974
  call void @llvm.dbg.value(metadata i8* %12, metadata !4964, metadata !DIExpression()), !dbg !4966
  %13 = add i32 %11, -48, !dbg !4975
  %14 = add i32 %13, %8, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %14, metadata !4965, metadata !DIExpression()), !dbg !4966
  %15 = load i8, i8* %12, align 1, !dbg !4968
  %16 = zext i8 %15 to i32, !dbg !4969
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !4970
  %18 = icmp eq i32 %17, 0, !dbg !4971
  br i1 %18, label %19, label %7, !dbg !4971, !llvm.loop !4977

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4966
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4966
  store i8* %20, i8** %0, align 4, !dbg !4979
  ret i32 %21, !dbg !4980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !4981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4983, metadata !DIExpression()), !dbg !4984
  %2 = add i32 %0, -48, !dbg !4985
  %3 = icmp ult i32 %2, 10, !dbg !4986
  %4 = zext i1 %3 to i32, !dbg !4986
  ret i32 %4, !dbg !4987
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4988 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #22, !dbg !4990, !srcloc !4991
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #22, !dbg !4992, !srcloc !4993
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #22, !dbg !4994, !srcloc !4995
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #22, !dbg !4996, !srcloc !4997
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #22, !dbg !4998, !srcloc !4999
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #22, !dbg !5000, !srcloc !5001
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #22, !dbg !5002, !srcloc !5003
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #22, !dbg !5004, !srcloc !5005
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #22, !dbg !5006, !srcloc !5007
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #22, !dbg !5008, !srcloc !5009
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #22, !dbg !5010, !srcloc !5011
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #22, !dbg !5012, !srcloc !5013
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #22, !dbg !5014, !srcloc !5015
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #22, !dbg !5016, !srcloc !5017
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #22, !dbg !5018, !srcloc !5019
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #22, !dbg !5020, !srcloc !5021
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #22, !dbg !5022, !srcloc !5023
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #22, !dbg !5024, !srcloc !5025
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #22, !dbg !5026, !srcloc !5027
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #22, !dbg !5028, !srcloc !5029
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #22, !dbg !5030, !srcloc !5031
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #22, !dbg !5032, !srcloc !5033
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #22, !dbg !5034, !srcloc !5035
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #22, !dbg !5036, !srcloc !5037
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #22, !dbg !5038, !srcloc !5039
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #22, !dbg !5040, !srcloc !5041
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #22, !dbg !5042, !srcloc !5043
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #22, !dbg !5044, !srcloc !5045
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #22, !dbg !5046, !srcloc !5047
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #22, !dbg !5048, !srcloc !5049
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #22, !dbg !5050, !srcloc !5051
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #22, !dbg !5052, !srcloc !5053
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #22, !dbg !5054, !srcloc !5055
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #22, !dbg !5056, !srcloc !5057
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #22, !dbg !5058, !srcloc !5059
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #22, !dbg !5060, !srcloc !5061
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #22, !dbg !5062, !srcloc !5063
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #22, !dbg !5064, !srcloc !5065
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #22, !dbg !5066, !srcloc !5067
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #22, !dbg !5068, !srcloc !5069
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #22, !dbg !5070, !srcloc !5071
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #22, !dbg !5072, !srcloc !5073
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #22, !dbg !5074, !srcloc !5075
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #22, !dbg !5076, !srcloc !5077
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #22, !dbg !5078, !srcloc !5079
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #22, !dbg !5080, !srcloc !5081
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #22, !dbg !5082, !srcloc !5083
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #22, !dbg !5084, !srcloc !5085
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #22, !dbg !5086, !srcloc !5087
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #22, !dbg !5088, !srcloc !5089
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #22, !dbg !5090, !srcloc !5091
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #22, !dbg !5092, !srcloc !5093
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #22, !dbg !5094, !srcloc !5095
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #22, !dbg !5096, !srcloc !5097
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #22, !dbg !5098, !srcloc !5099
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #22, !dbg !5100, !srcloc !5101
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #22, !dbg !5102, !srcloc !5103
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #22, !dbg !5104, !srcloc !5105
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #22, !dbg !5106, !srcloc !5107
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #22, !dbg !5108, !srcloc !5109
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #22, !dbg !5110, !srcloc !5111
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #22, !dbg !5112, !srcloc !5113
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #22, !dbg !5114, !srcloc !5115
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #22, !dbg !5116, !srcloc !5117
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #22, !dbg !5118, !srcloc !5119
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #22, !dbg !5120, !srcloc !5121
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #22, !dbg !5122, !srcloc !5123
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #22, !dbg !5124, !srcloc !5125
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #22, !dbg !5126, !srcloc !5127
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #22, !dbg !5128, !srcloc !5129
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #22, !dbg !5130, !srcloc !5131
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #22, !dbg !5132, !srcloc !5133
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #22, !dbg !5134, !srcloc !5135
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #22, !dbg !5136, !srcloc !5137
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #22, !dbg !5138, !srcloc !5139
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #22, !dbg !5140, !srcloc !5141
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #22, !dbg !5142, !srcloc !5143
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #22, !dbg !5144, !srcloc !5145
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #22, !dbg !5146, !srcloc !5147
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #22, !dbg !5148, !srcloc !5149
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #22, !dbg !5150, !srcloc !5151
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #22, !dbg !5152, !srcloc !5153
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #22, !dbg !5154, !srcloc !5155
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #22, !dbg !5156, !srcloc !5157
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #22, !dbg !5158, !srcloc !5159
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #22, !dbg !5160, !srcloc !5161
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #22, !dbg !5162, !srcloc !5163
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #22, !dbg !5164, !srcloc !5165
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #22, !dbg !5166, !srcloc !5167
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #22, !dbg !5168, !srcloc !5169
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #22, !dbg !5170, !srcloc !5171
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #22, !dbg !5172, !srcloc !5173
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #22, !dbg !5174, !srcloc !5175
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #22, !dbg !5176, !srcloc !5177
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #22, !dbg !5178, !srcloc !5179
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #22, !dbg !5180, !srcloc !5181
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #22, !dbg !5182, !srcloc !5183
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #22, !dbg !5184, !srcloc !5185
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #22, !dbg !5186, !srcloc !5187
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #22, !dbg !5188, !srcloc !5189
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #22, !dbg !5190, !srcloc !5191
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #22, !dbg !5192, !srcloc !5193
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #22, !dbg !5194, !srcloc !5195
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #22, !dbg !5196, !srcloc !5197
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #22, !dbg !5198, !srcloc !5199
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #22, !dbg !5200, !srcloc !5201
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #22, !dbg !5202, !srcloc !5203
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #22, !dbg !5204, !srcloc !5205
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #22, !dbg !5206, !srcloc !5207
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #22, !dbg !5208, !srcloc !5209
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #22, !dbg !5210, !srcloc !5211
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #22, !dbg !5212, !srcloc !5213
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #22, !dbg !5214, !srcloc !5215
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #22, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #22, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #22, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #22, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #22, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #22, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #22, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #22, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #22, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #22, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #22, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #22, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #22, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #22, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #22, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #22, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #22, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #22, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #22, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #22, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #22, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #22, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #22, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #22, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #22, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #22, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #22, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #22, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #22, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #22, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #22, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #22, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #22, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #22, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #22, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #22, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #22, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #22, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #22, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #22, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #22, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #22, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #22, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #22, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #22, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #22, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #22, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #22, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #22, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #22, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #22, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #22, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #22, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #22, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #22, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #22, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #22, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #22, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #22, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #22, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #22, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #22, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #22, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #22, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #22, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #22, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #22, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #22, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #22, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #22, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #22, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #22, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #22, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #22, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #22, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #22, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #22, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #22, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #22, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #22, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #22, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #22, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #22, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #22, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #22, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #22, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #22, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #22, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #22, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,64\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #22, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,512\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #22, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #22, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #22, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #22, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #22, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #22, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #22, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #22, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #22, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #22, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #22, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #22, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #22, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #22, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #22, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #22, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #22, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #22, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #22, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #22, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #22, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #22, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #22, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #22, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #22, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #22, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #22, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #22, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #22, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #22, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #22, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #22, !dbg !5458, !srcloc !5459
  ret void, !dbg !5460
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5461 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5463, metadata !DIExpression()), !dbg !5464
  tail call void @SOC_RdcInit() #24, !dbg !5465
  tail call void @SOC_ClockInit() #24, !dbg !5466
  tail call fastcc void @nxp_mcimx7_gpio_config() #24, !dbg !5467
  ret i32 0, !dbg !5468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #15 !dbg !5469 {
  tail call fastcc void @RDC_SetDomainID() #24, !dbg !5470
  ret void, !dbg !5471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !5472 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #23, !dbg !5473
  tail call fastcc void @CCM_EnableRoot() #24, !dbg !5474
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #24, !dbg !5475
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #24, !dbg !5476
  tail call fastcc void @WDOG_DisablePowerdown() #24, !dbg !5477
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #24, !dbg !5478
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #24, !dbg !5479
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #24, !dbg !5480
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #24, !dbg !5481
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #24, !dbg !5482
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #24, !dbg !5483
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #24, !dbg !5484
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #24, !dbg !5485
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #24, !dbg !5486
  ret void, !dbg !5487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #15 !dbg !5488 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #24, !dbg !5489
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #24, !dbg !5490
  ret void, !dbg !5491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5492 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5497, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %0, metadata !5498, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8 %1, metadata !5499, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8 0, metadata !5500, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8 0, metadata !5501, metadata !DIExpression()), !dbg !5502
  %3 = zext i8 %1 to i32, !dbg !5503
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !5504
  store volatile i32 %3, i32* %4, align 4, !dbg !5505
  ret void, !dbg !5506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5507 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5511, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.value(metadata i32 %0, metadata !5512, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.value(metadata i32 %1, metadata !5513, metadata !DIExpression()), !dbg !5514
  %3 = inttoptr i32 %0 to i32*, !dbg !5515
  store volatile i32 %1, i32* %3, align 4, !dbg !5516
  ret void, !dbg !5517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #15 !dbg !5518 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5522, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.value(metadata i32 809024384, metadata !5523, metadata !DIExpression()), !dbg !5524
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !5525
  ret void, !dbg !5526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #15 !dbg !5527 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !5532, metadata !DIExpression()), !dbg !5533
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5534
  %2 = and i16 %1, -2, !dbg !5534
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5534
  ret void, !dbg !5535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #15 !dbg !5536 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5540, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.value(metadata i32 1, metadata !5541, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.value(metadata i32 1, metadata !5542, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.value(metadata i8 0, metadata !5543, metadata !DIExpression()), !dbg !5544
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !5545
  ret void, !dbg !5546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5547 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5593, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i8* %1, metadata !5594, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 %2, metadata !5595, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i8* %1, metadata !5596, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 0, metadata !5597, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 0, metadata !5598, metadata !DIExpression()), !dbg !5599
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5600
  %5 = load i32, i32* %4, align 4, !dbg !5600
  %6 = icmp eq i32 %5, 0, !dbg !5602
  %7 = icmp eq i32 %2, 0, !dbg !5599
  br i1 %6, label %9, label %8, !dbg !5603

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5597, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i8* %1, metadata !5596, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 %2, metadata !5595, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 %2, metadata !5595, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5599
  br i1 %7, label %37, label %20, !dbg !5604

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5596, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 %2, metadata !5595, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 %2, metadata !5595, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5599
  br i1 %7, label %37, label %10, !dbg !5605

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5605

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5596, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 %14, metadata !5595, metadata !DIExpression()), !dbg !5599
  %15 = add i32 %14, -1, !dbg !5607
  call void @llvm.dbg.value(metadata i32 %15, metadata !5595, metadata !DIExpression()), !dbg !5599
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5608
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5610
  call void @llvm.dbg.value(metadata i8* %17, metadata !5596, metadata !DIExpression()), !dbg !5599
  %18 = load i8, i8* %13, align 1, !dbg !5611
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #24, !dbg !5612
  call void @llvm.dbg.value(metadata i32 %15, metadata !5595, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5599
  %19 = icmp eq i32 %15, 0, !dbg !5605
  br i1 %19, label %37, label %12, !dbg !5605, !llvm.loop !5613

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !5615
  call void @llvm.dbg.value(metadata i32 %22, metadata !5597, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i8* %23, metadata !5596, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i8* %23, metadata !5596, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5599
  %25 = load i8, i8* %23, align 1, !dbg !5616
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #24, !dbg !5618
  call void @llvm.dbg.value(metadata i32 %26, metadata !5598, metadata !DIExpression()), !dbg !5599
  %27 = icmp slt i32 %26, 0, !dbg !5619
  br i1 %27, label %28, label %33, !dbg !5621

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !5622
  br i1 %29, label %30, label %37, !dbg !5625

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !5626
  %32 = tail call fastcc i32* @z_errno() #24, !dbg !5628
  store i32 %31, i32* %32, align 4, !dbg !5629
  br label %37, !dbg !5630

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5631
  call void @llvm.dbg.value(metadata i8* %34, metadata !5596, metadata !DIExpression()), !dbg !5599
  %35 = add nuw i32 %22, 1, !dbg !5632
  call void @llvm.dbg.value(metadata i32 %35, metadata !5597, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 %24, metadata !5595, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 %24, metadata !5595, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5599
  %36 = icmp eq i32 %24, 0, !dbg !5604
  br i1 %36, label %37, label %20, !dbg !5604, !llvm.loop !5633

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5599
  ret i32 %38, !dbg !5635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5636 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5639, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.value(metadata i8 %1, metadata !5640, metadata !DIExpression()), !dbg !5641
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !5642, !srcloc !5644
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #24, !dbg !5645
  ret void, !dbg !5646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5647 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5651, metadata !DIExpression()), !dbg !5656
  call void @llvm.dbg.value(metadata i8 %1, metadata !5652, metadata !DIExpression()), !dbg !5656
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !5657
  %4 = tail call zeroext i1 @k_is_in_isr() #23, !dbg !5658
  br i1 %4, label %14, label %5, !dbg !5658

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !5659
  %7 = load i32, i32* %6, align 4, !dbg !5659
  %8 = icmp eq i32 %7, -1, !dbg !5659
  br i1 %8, label %14, label %9, !dbg !5659

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !5659
  %11 = select i1 %10, i32 %7, i32 0, !dbg !5659
  %12 = zext i32 %11 to i64, !dbg !5659
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #24, !dbg !5659
  br label %14, !dbg !5659

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !5656
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !5660
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #24, !dbg !5660
  call void @llvm.dbg.value(metadata i32 %17, metadata !5655, metadata !DIExpression()), !dbg !5656
  %18 = icmp slt i32 %17, 0, !dbg !5661
  br i1 %18, label %42, label %19, !dbg !5663

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !5664, !srcloc !5673
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !5664
  call void @llvm.dbg.value(metadata i32 %21, metadata !5670, metadata !DIExpression()) #22, !dbg !5674
  call void @llvm.dbg.value(metadata i32 undef, metadata !5671, metadata !DIExpression()) #22, !dbg !5674
  call void @llvm.dbg.value(metadata i32 %21, metadata !5653, metadata !DIExpression()), !dbg !5656
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !5675
  %23 = load i16, i16* %22, align 2, !dbg !5675
  %24 = zext i16 %23 to i32, !dbg !5676
  %25 = add nuw nsw i32 %24, 1, !dbg !5677
  call void @llvm.dbg.value(metadata i32 %25, metadata !5654, metadata !DIExpression()), !dbg !5656
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5678
  %27 = load i32, i32* %26, align 4, !dbg !5678
  %28 = icmp ult i32 %25, %27, !dbg !5680
  %29 = select i1 %28, i32 %25, i32 0, !dbg !5681
  call void @llvm.dbg.value(metadata i32 %29, metadata !5654, metadata !DIExpression()), !dbg !5656
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !5682
  %31 = load i16, i16* %30, align 4, !dbg !5682
  %32 = zext i16 %31 to i32, !dbg !5684
  %33 = icmp eq i32 %29, %32, !dbg !5685
  br i1 %33, label %34, label %35, !dbg !5686

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !5687, metadata !DIExpression()) #22, !dbg !5692
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #22, !dbg !5695, !srcloc !5696
  br label %42, !dbg !5697

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !5698
  %37 = load i8*, i8** %36, align 4, !dbg !5698
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !5699
  store i8 %1, i8* %38, align 1, !dbg !5700
  %39 = trunc i32 %29 to i16, !dbg !5701
  store i16 %39, i16* %22, align 2, !dbg !5702
  call void @llvm.dbg.value(metadata i32 %21, metadata !5687, metadata !DIExpression()) #22, !dbg !5703
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #22, !dbg !5705, !srcloc !5696
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !5706
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !5706
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #24, !dbg !5707
  br label %42, !dbg !5708

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !5656
  ret i32 %43, !dbg !5709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !5710 {
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !5714, !srcloc !5716
  %1 = tail call i32* @z_impl_z_errno() #23, !dbg !5717
  ret i32* %1, !dbg !5718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !5719 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5724, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.value(metadata i64 %0, metadata !5726, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i32 1000, metadata !5731, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i32 10000, metadata !5732, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i8 1, metadata !5733, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i8 0, metadata !5734, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i8 1, metadata !5735, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i8 0, metadata !5736, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i8 1, metadata !5737, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i8 0, metadata !5738, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i64 0, metadata !5739, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i64 0, metadata !5739, metadata !DIExpression()), !dbg !5743
  %2 = mul i64 %0, 10, !dbg !5745
  ret i64 %2, !dbg !5751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !5752 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5762, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !5761, metadata !DIExpression()), !dbg !5763
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !5764, !srcloc !5766
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #23, !dbg !5767
  ret i32 %3, !dbg !5768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !5769 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5771, metadata !DIExpression()), !dbg !5772
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !5773, !srcloc !5775
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #24, !dbg !5776
  ret void, !dbg !5777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !5778 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5780, metadata !DIExpression()), !dbg !5782
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !5783
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !5783
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !5783
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !5781, metadata !DIExpression()), !dbg !5782
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !5784
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !5784
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !5786
  br i1 %7, label %9, label %8, !dbg !5787

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #23, !dbg !5788
  br label %9, !dbg !5790

9:                                                ; preds = %8, %1
  ret void, !dbg !5791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5794, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i8 %1, metadata !5795, metadata !DIExpression()), !dbg !5797
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !5798
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !5798
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !5798
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !5796, metadata !DIExpression()), !dbg !5797
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !5799
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !5799
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #23, !dbg !5800
  ret void, !dbg !5801
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5802 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5806, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i8* %1, metadata !5807, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 %2, metadata !5808, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i8* %1, metadata !5809, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 0, metadata !5810, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 0, metadata !5811, metadata !DIExpression()), !dbg !5812
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !5813
  %5 = load i32, i32* %4, align 4, !dbg !5813
  %6 = icmp eq i32 %5, 0, !dbg !5815
  br i1 %6, label %9, label %7, !dbg !5816

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5810, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i8* %1, metadata !5809, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 %2, metadata !5808, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 %2, metadata !5808, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5812
  %8 = icmp eq i32 %2, 0, !dbg !5817
  br i1 %8, label %28, label %11, !dbg !5817

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #24, !dbg !5818
  br label %28, !dbg !5820

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !5821
  call void @llvm.dbg.value(metadata i32 %13, metadata !5810, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i8* %14, metadata !5809, metadata !DIExpression()), !dbg !5812
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #24, !dbg !5822
  call void @llvm.dbg.value(metadata i32 %16, metadata !5811, metadata !DIExpression()), !dbg !5812
  %17 = icmp slt i32 %16, 0, !dbg !5824
  br i1 %17, label %18, label %23, !dbg !5826

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !5827
  br i1 %19, label %20, label %28, !dbg !5830

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !5831
  %22 = tail call fastcc i32* @z_errno() #24, !dbg !5833
  store i32 %21, i32* %22, align 4, !dbg !5834
  br label %28, !dbg !5835

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !5836
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !5837
  call void @llvm.dbg.value(metadata i8* %25, metadata !5809, metadata !DIExpression()), !dbg !5812
  store i8 %24, i8* %14, align 1, !dbg !5838
  %26 = add nuw i32 %13, 1, !dbg !5839
  call void @llvm.dbg.value(metadata i32 %26, metadata !5810, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 %15, metadata !5808, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 %15, metadata !5808, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5812
  %27 = icmp eq i32 %15, 0, !dbg !5817
  br i1 %27, label %28, label %11, !dbg !5817, !llvm.loop !5840

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !5812
  ret i32 %29, !dbg !5842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !5843 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5845, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %1, metadata !5846, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %2, metadata !5847, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %1, metadata !5848, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 0, metadata !5849, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 0, metadata !5850, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 undef, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 0, metadata !5849, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %1, metadata !5848, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %2, metadata !5847, metadata !DIExpression()), !dbg !5854
  %5 = icmp eq i32 %2, 0, !dbg !5855
  br i1 %5, label %48, label %6, !dbg !5855

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !5856
  %8 = load i32, i32* %7, align 4, !dbg !5856
  call void @llvm.dbg.value(metadata i32 %8, metadata !5851, metadata !DIExpression()), !dbg !5854
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !5855

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %12, metadata !5849, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %13, metadata !5848, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %14, metadata !5847, metadata !DIExpression()), !dbg !5854
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !5857
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !5858
  call void @llvm.dbg.value(metadata i8* %4, metadata !5852, metadata !DIExpression(DW_OP_deref)), !dbg !5859
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #24, !dbg !5860
  call void @llvm.dbg.value(metadata i32 %16, metadata !5850, metadata !DIExpression()), !dbg !5854
  %17 = icmp slt i32 %16, -1, !dbg !5861
  br i1 %17, label %18, label %22, !dbg !5863

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !5864
  br i1 %19, label %20, label %44, !dbg !5867

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #24, !dbg !5868
  store i32 %16, i32* %21, align 4, !dbg !5870
  call void @llvm.dbg.value(metadata i32 %39, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 undef, metadata !5849, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %32, metadata !5848, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %33, metadata !5847, metadata !DIExpression()), !dbg !5854
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !5871
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !5872
  br i1 %23, label %24, label %30, !dbg !5874

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !5875
  call void @llvm.dbg.value(metadata i8 %25, metadata !5852, metadata !DIExpression()), !dbg !5859
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5877
  call void @llvm.dbg.value(metadata i8* %26, metadata !5848, metadata !DIExpression()), !dbg !5854
  store i8 %25, i8* %13, align 1, !dbg !5878
  %27 = add i32 %12, 1, !dbg !5879
  call void @llvm.dbg.value(metadata i32 %27, metadata !5849, metadata !DIExpression()), !dbg !5854
  %28 = add i32 %14, -1, !dbg !5880
  call void @llvm.dbg.value(metadata i32 %28, metadata !5847, metadata !DIExpression()), !dbg !5854
  %29 = icmp eq i32 %28, 0, !dbg !5881
  br i1 %29, label %44, label %30, !dbg !5883

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !5884
  br i1 %34, label %38, label %35, !dbg !5885

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !5886
  call void @llvm.dbg.value(metadata i32 %36, metadata !5851, metadata !DIExpression()), !dbg !5854
  %37 = icmp eq i32 %11, 0, !dbg !5887
  br i1 %37, label %44, label %38, !dbg !5888

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !5854
  call void @llvm.dbg.value(metadata i32 %39, metadata !5851, metadata !DIExpression()), !dbg !5854
  %40 = icmp eq i32 %16, -1, !dbg !5889
  br i1 %40, label %41, label %46, !dbg !5891

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #24, !dbg !5892
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !5894
  call fastcc void @k_sleep([1 x i64] %43) #24, !dbg !5894
  br label %46, !dbg !5895

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 undef, metadata !5849, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %32, metadata !5848, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %33, metadata !5847, metadata !DIExpression()), !dbg !5854
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !5871
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %31, metadata !5849, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %32, metadata !5848, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %33, metadata !5847, metadata !DIExpression()), !dbg !5854
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !5871
  %47 = icmp eq i32 %33, 0, !dbg !5855
  br i1 %47, label %48, label %10, !dbg !5855

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !5854
  ret i32 %49, !dbg !5896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !5897 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5901, metadata !DIExpression()), !dbg !5905
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !5906
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !5907
  %4 = load i32, i32* %3, align 4, !dbg !5907
  %5 = icmp eq i32 %4, -1, !dbg !5907
  br i1 %5, label %11, label %6, !dbg !5907

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !5907
  %8 = select i1 %7, i32 %4, i32 0, !dbg !5907
  %9 = zext i32 %8 to i64, !dbg !5907
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #24, !dbg !5907
  br label %11, !dbg !5907

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !5907
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !5908
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #24, !dbg !5908
  call void @llvm.dbg.value(metadata i32 %14, metadata !5904, metadata !DIExpression()), !dbg !5905
  %15 = icmp slt i32 %14, 0, !dbg !5909
  br i1 %15, label %33, label %16, !dbg !5911

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !5912, !srcloc !5673
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !5912
  call void @llvm.dbg.value(metadata i32 %18, metadata !5670, metadata !DIExpression()) #22, !dbg !5914
  call void @llvm.dbg.value(metadata i32 undef, metadata !5671, metadata !DIExpression()) #22, !dbg !5914
  call void @llvm.dbg.value(metadata i32 %18, metadata !5902, metadata !DIExpression()), !dbg !5905
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !5915
  %20 = load i8*, i8** %19, align 4, !dbg !5915
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !5916
  %22 = load i16, i16* %21, align 4, !dbg !5917
  %23 = add i16 %22, 1, !dbg !5917
  store i16 %23, i16* %21, align 4, !dbg !5917
  %24 = zext i16 %22 to i32, !dbg !5918
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !5918
  %26 = load i8, i8* %25, align 1, !dbg !5918
  call void @llvm.dbg.value(metadata i8 %26, metadata !5903, metadata !DIExpression()), !dbg !5905
  %27 = zext i16 %23 to i32, !dbg !5919
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !5921
  %29 = load i32, i32* %28, align 4, !dbg !5921
  %30 = icmp ugt i32 %29, %27, !dbg !5922
  %31 = select i1 %30, i16 %23, i16 0, !dbg !5923
  store i16 %31, i16* %21, align 4, !dbg !5905
  call void @llvm.dbg.value(metadata i32 %18, metadata !5687, metadata !DIExpression()) #22, !dbg !5924
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #22, !dbg !5926, !srcloc !5696
  %32 = zext i8 %26 to i32, !dbg !5927
  br label %33, !dbg !5928

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !5905
  ret i32 %34, !dbg !5929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !5930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5932, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata i8* %1, metadata !5933, metadata !DIExpression()), !dbg !5934
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !5935, !srcloc !5937
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !5938
  ret i32 %3, !dbg !5939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !5940 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5944, metadata !DIExpression()), !dbg !5945
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !5946, !srcloc !5948
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #23, !dbg !5949
  ret void, !dbg !5950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !5951 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5953, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i8* %1, metadata !5954, metadata !DIExpression()), !dbg !5956
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !5957
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !5957
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !5957
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !5955, metadata !DIExpression()), !dbg !5956
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !5958
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !5958
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !5960
  br i1 %8, label %11, label %9, !dbg !5961

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #23, !dbg !5962
  br label %11, !dbg !5963

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !5956
  ret i32 %12, !dbg !5964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !5965 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5969, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !5970, metadata !DIExpression()), !dbg !5971
  %3 = icmp eq %struct.device* %1, null, !dbg !5972
  br i1 %3, label %17, label %4, !dbg !5974

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !5975
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !5976
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !5977
  store i8* null, i8** %6, align 4, !dbg !5978
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !5979
  store i32 0, i32* %7, align 4, !dbg !5980
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !5981
  store i8* null, i8** %8, align 4, !dbg !5982
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5983
  store i32 0, i32* %9, align 4, !dbg !5984
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !5985
  store i16 0, i16* %10, align 2, !dbg !5986
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !5987
  store i16 0, i16* %11, align 4, !dbg !5988
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !5989
  store i16 0, i16* %12, align 2, !dbg !5990
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !5991
  store i16 0, i16* %13, align 4, !dbg !5992
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !5993
  store i32 -1, i32* %14, align 4, !dbg !5994
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !5995
  store i32 -1, i32* %15, align 4, !dbg !5996
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !5997
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #24, !dbg !5998
  br label %17, !dbg !5999

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !5971
  ret i32 %18, !dbg !6000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6001 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6003, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6004, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.value(metadata i8* %1, metadata !6005, metadata !DIExpression()), !dbg !6007
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6008
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6008
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6008
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6006, metadata !DIExpression()), !dbg !6007
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6009
  br i1 %6, label %12, label %7, !dbg !6011

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6012
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6012
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6013
  br i1 %10, label %12, label %11, !dbg !6014

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #23, !dbg !6015
  br label %12, !dbg !6017

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6018
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6019 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6021, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i8* %1, metadata !6022, metadata !DIExpression()), !dbg !6027
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6028
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6023, metadata !DIExpression()), !dbg !6027
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #24, !dbg !6029
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #24, !dbg !6030
  %6 = icmp eq i32 %5, 0, !dbg !6030
  br i1 %6, label %15, label %7, !dbg !6031

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !6032
  call void @llvm.dbg.value(metadata i8* %3, metadata !6024, metadata !DIExpression(DW_OP_deref)), !dbg !6033
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #24, !dbg !6034
  %9 = icmp eq i32 %8, 0, !dbg !6037
  br i1 %9, label %14, label %10, !dbg !6038

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6039
  call void @llvm.dbg.value(metadata i8 %11, metadata !6024, metadata !DIExpression()), !dbg !6033
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #24, !dbg !6040
  call void @llvm.dbg.value(metadata i8* %3, metadata !6024, metadata !DIExpression(DW_OP_deref)), !dbg !6033
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #24, !dbg !6034
  %13 = icmp eq i32 %12, 0, !dbg !6037
  br i1 %13, label %14, label %10, !dbg !6038, !llvm.loop !6041

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !6044
  br label %15, !dbg !6045

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #24, !dbg !6046
  %17 = icmp eq i32 %16, 0, !dbg !6046
  br i1 %17, label %44, label %18, !dbg !6048

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6049
  %20 = bitcast i8* %19 to i16*, !dbg !6049
  %21 = load i16, i16* %20, align 4, !dbg !6049
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6052
  %23 = bitcast i8* %22 to i16*, !dbg !6052
  %24 = load i16, i16* %23, align 2, !dbg !6052
  %25 = icmp eq i16 %21, %24, !dbg !6053
  br i1 %25, label %26, label %27, !dbg !6054

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #24, !dbg !6055
  br label %44, !dbg !6057

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6058
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6059
  %30 = bitcast i8* %29 to i8**, !dbg !6059
  %31 = load i8*, i8** %30, align 4, !dbg !6059
  %32 = add i16 %21, 1, !dbg !6061
  store i16 %32, i16* %20, align 4, !dbg !6061
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6062
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #24, !dbg !6063
  %34 = load i16, i16* %20, align 4, !dbg !6064
  %35 = zext i16 %34 to i32, !dbg !6066
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6067
  %37 = bitcast i8* %36 to i32*, !dbg !6067
  %38 = load i32, i32* %37, align 4, !dbg !6067
  %39 = icmp ugt i32 %38, %35, !dbg !6068
  br i1 %39, label %41, label %40, !dbg !6069

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6070
  br label %41, !dbg !6072

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6073
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6073
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #24, !dbg !6074
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6076 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6078, metadata !DIExpression()), !dbg !6079
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6080, !srcloc !6082
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #24, !dbg !6083
  ret void, !dbg !6084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6087, metadata !DIExpression()), !dbg !6089
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6090
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6090
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6090
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6088, metadata !DIExpression()), !dbg !6089
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6091
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6091
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6093
  br i1 %7, label %10, label %8, !dbg !6094

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #23, !dbg !6095
  br label %10, !dbg !6096

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6089
  ret i32 %11, !dbg !6097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6098 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6100, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8* %1, metadata !6101, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 1, metadata !6102, metadata !DIExpression()), !dbg !6104
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6105
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6105
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6105
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6103, metadata !DIExpression()), !dbg !6104
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6106
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6106
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6108
  br i1 %8, label %11, label %9, !dbg !6109

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #23, !dbg !6110
  br label %11, !dbg !6111

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6104
  ret i32 %12, !dbg !6112
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6113 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6115, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i8 %1, metadata !6116, metadata !DIExpression()), !dbg !6118
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6119
  %4 = load i16, i16* %3, align 2, !dbg !6119
  %5 = zext i16 %4 to i32, !dbg !6120
  %6 = add nuw nsw i32 %5, 1, !dbg !6121
  call void @llvm.dbg.value(metadata i32 %6, metadata !6117, metadata !DIExpression()), !dbg !6118
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6122
  %8 = load i32, i32* %7, align 4, !dbg !6122
  %9 = icmp ult i32 %6, %8, !dbg !6124
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6125
  call void @llvm.dbg.value(metadata i32 %10, metadata !6117, metadata !DIExpression()), !dbg !6118
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6126
  %12 = load i16, i16* %11, align 4, !dbg !6126
  %13 = zext i16 %12 to i32, !dbg !6128
  %14 = icmp eq i32 %10, %13, !dbg !6129
  br i1 %14, label %15, label %17, !dbg !6130

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #24, !dbg !6131
  br label %23, !dbg !6133

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6134
  %19 = load i8*, i8** %18, align 4, !dbg !6134
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6135
  store i8 %1, i8* %20, align 1, !dbg !6136
  %21 = trunc i32 %10 to i16, !dbg !6137
  store i16 %21, i16* %3, align 2, !dbg !6138
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6139
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #24, !dbg !6140
  br label %23, !dbg !6141

23:                                               ; preds = %17, %15
  ret void, !dbg !6142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6145, metadata !DIExpression()), !dbg !6147
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6148
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6148
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6148
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6146, metadata !DIExpression()), !dbg !6147
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6149
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6149
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6151
  br i1 %7, label %10, label %8, !dbg !6152

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #23, !dbg !6153
  br label %10, !dbg !6154

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6147
  ret i32 %11, !dbg !6155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6156 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6158, metadata !DIExpression()), !dbg !6159
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6160, !srcloc !6162
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #24, !dbg !6163
  ret void, !dbg !6164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6165 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6167, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.value(metadata i8* %1, metadata !6168, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.value(metadata i32 1, metadata !6169, metadata !DIExpression()), !dbg !6171
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6172
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6172
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6172
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6170, metadata !DIExpression()), !dbg !6171
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6173
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6173
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6175
  br i1 %8, label %11, label %9, !dbg !6176

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #23, !dbg !6177
  br label %11, !dbg !6178

11:                                               ; preds = %2, %9
  ret void, !dbg !6179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6180 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6184, metadata !DIExpression()), !dbg !6185
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6186, !srcloc !6188
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #23, !dbg !6189
  ret void, !dbg !6190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6191 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6193, metadata !DIExpression()), !dbg !6195
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6196
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6196
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6196
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6194, metadata !DIExpression()), !dbg !6195
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6197
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6197
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6199
  br i1 %7, label %9, label %8, !dbg !6200

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #23, !dbg !6201
  br label %9, !dbg !6203

9:                                                ; preds = %8, %1
  ret void, !dbg !6204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6205 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6207, metadata !DIExpression()), !dbg !6209
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6210
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6210
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6210
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6208, metadata !DIExpression()), !dbg !6209
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6211
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6211
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6213
  br i1 %7, label %10, label %8, !dbg !6214

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #23, !dbg !6215
  br label %10, !dbg !6216

10:                                               ; preds = %1, %8
  ret void, !dbg !6217
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6218 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6222, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i8* %1, metadata !6223, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 %2, metadata !6224, metadata !DIExpression()), !dbg !6225
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6226
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6226
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #24, !dbg !6227
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6228
  store i8* %1, i8** %6, align 4, !dbg !6229
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6230
  store i32 %2, i32* %7, align 4, !dbg !6231
  %8 = icmp eq i32 %2, 0, !dbg !6232
  br i1 %8, label %12, label %9, !dbg !6234

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6235
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #24, !dbg !6237
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6238
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #24, !dbg !6239
  br label %12, !dbg !6240

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6242 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6244, metadata !DIExpression()), !dbg !6245
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6246, !srcloc !6248
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #24, !dbg !6249
  ret void, !dbg !6250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6251 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6255, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.value(metadata i32 %1, metadata !6256, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.value(metadata i32 -1, metadata !6257, metadata !DIExpression()), !dbg !6258
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6259, !srcloc !6261
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #23, !dbg !6262
  ret void, !dbg !6263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6264 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6266, metadata !DIExpression()), !dbg !6267
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6268, !srcloc !6270
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #24, !dbg !6271
  ret void, !dbg !6272
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6273 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6275, metadata !DIExpression()), !dbg !6277
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6278
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6278
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6278
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6276, metadata !DIExpression()), !dbg !6277
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6279
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6279
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6281
  br i1 %7, label %9, label %8, !dbg !6282

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #23, !dbg !6283
  br label %9, !dbg !6285

9:                                                ; preds = %8, %1
  ret void, !dbg !6286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6289, metadata !DIExpression()), !dbg !6291
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6292
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6292
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6292
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6290, metadata !DIExpression()), !dbg !6291
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6293
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6293
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6295
  br i1 %7, label %9, label %8, !dbg !6296

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #23, !dbg !6297
  br label %9, !dbg !6299

9:                                                ; preds = %8, %1
  ret void, !dbg !6300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6301 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6303, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata i8* %1, metadata !6304, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata i32 %2, metadata !6305, metadata !DIExpression()), !dbg !6306
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6307
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6307
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #24, !dbg !6308
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6309
  store i8* %1, i8** %6, align 4, !dbg !6310
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6311
  store i32 %2, i32* %7, align 4, !dbg !6312
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6313
  %9 = add i32 %2, -1, !dbg !6314
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #24, !dbg !6315
  ret i32 0, !dbg !6316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6321, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata i8* %1, metadata !6322, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata i32 %2, metadata !6323, metadata !DIExpression()), !dbg !6324
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #23, !dbg !6325
  ret i32 %4, !dbg !6326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6327 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6331, metadata !DIExpression()), !dbg !6334
  call void @llvm.dbg.value(metadata i8* %1, metadata !6332, metadata !DIExpression()), !dbg !6334
  call void @llvm.dbg.value(metadata i32 %2, metadata !6333, metadata !DIExpression()), !dbg !6334
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #23, !dbg !6335
  ret i32 %4, !dbg !6336
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6337 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6339, metadata !DIExpression()), !dbg !6340
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6339, metadata !DIExpression(DW_OP_deref)), !dbg !6340
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #23, !dbg !6341
  ret i32 %3, !dbg !6342
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6343 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #22, !dbg !6349
  call void @llvm.dbg.value(metadata i8* %1, metadata !6347, metadata !DIExpression(DW_OP_deref)), !dbg !6350
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #23, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %2, metadata !6348, metadata !DIExpression()), !dbg !6350
  %3 = icmp slt i32 %2, 0, !dbg !6352
  %4 = load i8, i8* %1, align 1, !dbg !6354
  %5 = zext i8 %4 to i32, !dbg !6354
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6354
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #22, !dbg !6355
  ret i32 %6, !dbg !6355
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6356 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !6358, metadata !DIExpression()), !dbg !6363
  %1 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !6364
  br i1 %1, label %2, label %13, !dbg !6366

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !6367
  call void @llvm.dbg.value(metadata i32 %3, metadata !6359, metadata !DIExpression()), !dbg !6363
  %4 = icmp eq i32 %3, 0, !dbg !6368
  br i1 %4, label %5, label %13, !dbg !6370

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6371
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6360, metadata !DIExpression()), !dbg !6372
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6373
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6373
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6375
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([512 x i8], [512 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 512) #23, !dbg !6376
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 64) #23, !dbg !6377
  br label %13, !dbg !6378

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6380 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !6385, metadata !DIExpression()), !dbg !6386
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6387, !srcloc !6389
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !6390
  ret i1 %1, !dbg !6391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6392 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !6394, metadata !DIExpression()), !dbg !6395
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !6396
  ret i1 %1, !dbg !6397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6447, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6448, metadata !DIExpression()), !dbg !6449
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #23, !dbg !6450
  ret void, !dbg !6451
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6452 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6469, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6470, metadata !DIExpression()), !dbg !6472
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6473
  %4 = load i32, i32* %3, align 4, !dbg !6473
  call void @llvm.dbg.value(metadata i32 %4, metadata !6471, metadata !DIExpression()), !dbg !6472
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6474
  ret void, !dbg !6475
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6476 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6480, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i8* %0, metadata !6481, metadata !DIExpression()), !dbg !6483
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6484
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #22, !dbg !6484
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6482, metadata !DIExpression()), !dbg !6485
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6485
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6486
  %5 = bitcast i8* %4 to i32*, !dbg !6486
  %6 = load i32, i32* %5, align 4, !dbg !6486
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6487
  store i32 %6, i32* %7, align 4, !dbg !6488
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6489
  unreachable, !dbg !6490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6494, metadata !DIExpression()), !dbg !6495
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6496
  ret void, !dbg !6497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6502, metadata !DIExpression()), !dbg !6503
  %2 = icmp sgt i32 %0, -1, !dbg !6504
  br i1 %2, label %3, label %8, !dbg !6506

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6507, !srcloc !6509
  %4 = and i32 %0, 31, !dbg !6510
  %5 = shl nuw i32 1, %4, !dbg !6511
  %6 = lshr i32 %0, 5, !dbg !6512
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6513
  store volatile i32 %5, i32* %7, align 4, !dbg !6514
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !6515, !srcloc !6516
  br label %8, !dbg !6517

8:                                                ; preds = %3, %1
  ret void, !dbg !6518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6521, metadata !DIExpression()), !dbg !6522
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6523
  ret void, !dbg !6524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6527, metadata !DIExpression()), !dbg !6528
  %2 = icmp sgt i32 %0, -1, !dbg !6529
  br i1 %2, label %3, label %8, !dbg !6531

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6532
  %5 = shl nuw i32 1, %4, !dbg !6534
  %6 = lshr i32 %0, 5, !dbg !6535
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6536
  store volatile i32 %5, i32* %7, align 4, !dbg !6537
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !6538, !srcloc !6542
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !6543, !srcloc !6546
  br label %8, !dbg !6547

8:                                                ; preds = %3, %1
  ret void, !dbg !6548
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6553, metadata !DIExpression()), !dbg !6554
  %2 = lshr i32 %0, 5, !dbg !6555
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6556
  %4 = load volatile i32, i32* %3, align 4, !dbg !6556
  %5 = and i32 %0, 31, !dbg !6557
  %6 = shl nuw i32 1, %5, !dbg !6557
  %7 = and i32 %4, %6, !dbg !6558
  ret i32 %7, !dbg !6559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6564, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.value(metadata i32 %1, metadata !6565, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.value(metadata i32 %2, metadata !6566, metadata !DIExpression()), !dbg !6567
  %4 = add i32 %1, 1, !dbg !6568
  call void @llvm.dbg.value(metadata i32 %4, metadata !6565, metadata !DIExpression()), !dbg !6567
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6571
  ret void, !dbg !6572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6577, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i32 %1, metadata !6578, metadata !DIExpression()), !dbg !6579
  %3 = trunc i32 %1 to i8, !dbg !6580
  %4 = shl i8 %3, 4, !dbg !6580
  %5 = and i32 %0, 15, !dbg !6582
  %6 = add nsw i32 %5, -4, !dbg !6582
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6582
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6582
  %9 = icmp slt i32 %0, 0, !dbg !6582
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6582
  store volatile i8 %4, i8* %10, align 1, !dbg !6580
  ret void, !dbg !6583
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6584 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6586, metadata !DIExpression()), !dbg !6587
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #23, !dbg !6588
  ret void, !dbg !6589
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6590 {
  tail call void @z_SysNmiOnReset() #23, !dbg !6592
  tail call void @z_arm_int_exit() #23, !dbg !6593
  ret void, !dbg !6594
}

; Function Attrs: optsize
declare !dbg !6595 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6596 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6598 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6600
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6601
  tail call void @z_bss_zero() #23, !dbg !6602
  tail call void @z_data_copy() #23, !dbg !6603
  tail call void @z_arm_interrupt_init() #23, !dbg !6604
  tail call void @z_cstart() #26, !dbg !6605
  unreachable, !dbg !6605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6606 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6607
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !6608, !srcloc !6611
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !6612, !srcloc !6615
  ret void, !dbg !6616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6617 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6618
  %2 = and i32 %1, -15728641, !dbg !6618
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6618
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #22, !dbg !6619, !srcloc !6626
  call void @llvm.dbg.value(metadata i32 %3, metadata !6624, metadata !DIExpression()) #22, !dbg !6627
  %4 = and i32 %3, -5, !dbg !6628
  call void @llvm.dbg.value(metadata i32 %4, metadata !6629, metadata !DIExpression()) #22, !dbg !6634
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #22, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !6638, !srcloc !6615
  ret void, !dbg !6640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6644, metadata !DIExpression()), !dbg !6645
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6646
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 0, !dbg !6647
  store i32 %0, i32* %3, align 8, !dbg !6648
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6649
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 1, !dbg !6650
  store i32 %4, i32* %5, align 4, !dbg !6651
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6652
  %7 = or i32 %6, 268435456, !dbg !6652
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6652
  call void @llvm.dbg.value(metadata i32 0, metadata !6653, metadata !DIExpression()) #22, !dbg !6656
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #22, !dbg !6658, !srcloc !6659
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6660
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 6, i32 1, !dbg !6661
  %10 = load i32, i32* %9, align 4, !dbg !6661
  ret i32 %10, !dbg !6662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6663 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6767, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6768, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.value(metadata i8* %2, metadata !6769, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6770, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.value(metadata i8* %4, metadata !6771, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.value(metadata i8* %5, metadata !6772, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.value(metadata i8* %6, metadata !6773, metadata !DIExpression()), !dbg !6775
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6776
  call void @llvm.dbg.value(metadata i8* %8, metadata !6774, metadata !DIExpression()), !dbg !6775
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6777
  %10 = bitcast i8* %9 to i32*, !dbg !6777
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6778
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6779
  %12 = bitcast i8* %8 to i32*, !dbg !6780
  store i32 %11, i32* %12, align 4, !dbg !6781
  %13 = ptrtoint i8* %4 to i32, !dbg !6782
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6783
  %15 = bitcast i8* %14 to i32*, !dbg !6783
  store i32 %13, i32* %15, align 4, !dbg !6784
  %16 = ptrtoint i8* %5 to i32, !dbg !6785
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6786
  %18 = bitcast i8* %17 to i32*, !dbg !6786
  store i32 %16, i32* %18, align 4, !dbg !6787
  %19 = ptrtoint i8* %6 to i32, !dbg !6788
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6789
  %21 = bitcast i8* %20 to i32*, !dbg !6789
  store i32 %19, i32* %21, align 4, !dbg !6790
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6791
  %23 = bitcast i8* %22 to i32*, !dbg !6791
  store i32 16777216, i32* %23, align 4, !dbg !6792
  %24 = ptrtoint i8* %8 to i32, !dbg !6793
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6794
  store i32 %24, i32* %25, align 8, !dbg !6795
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !6796
  store i32 0, i32* %26, align 8, !dbg !6797
  ret void, !dbg !6798
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6799 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6803, metadata !DIExpression()), !dbg !6806
  call void @llvm.dbg.value(metadata i8* %1, metadata !6804, metadata !DIExpression()), !dbg !6806
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6805, metadata !DIExpression()), !dbg !6806
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6807
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #22, !dbg !6808, !srcloc !6809
  unreachable, !dbg !6810
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6811 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6829, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i32 %1, metadata !6830, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i32 %2, metadata !6831, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6832, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i32 0, metadata !6833, metadata !DIExpression()), !dbg !6839
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6840
  %9 = and i32 %8, 511, !dbg !6841
  call void @llvm.dbg.value(metadata i32 %9, metadata !6834, metadata !DIExpression()), !dbg !6839
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #22, !dbg !6842
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #22, !dbg !6842
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6843
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #22, !dbg !6843
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6838, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i32 0, metadata !6845, metadata !DIExpression()) #22, !dbg !6848
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #22, !dbg !6850, !srcloc !6851
  call void @llvm.dbg.value(metadata i8* %6, metadata !6836, metadata !DIExpression(DW_OP_deref)), !dbg !6839
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6852
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6837, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i8* %5, metadata !6835, metadata !DIExpression(DW_OP_deref)), !dbg !6839
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !6853
  call void @llvm.dbg.value(metadata i32 %12, metadata !6833, metadata !DIExpression()), !dbg !6839
  %13 = load i8, i8* %5, align 1, !dbg !6854, !range !6856
  call void @llvm.dbg.value(metadata i8 %13, metadata !6835, metadata !DIExpression()), !dbg !6839
  %14 = icmp eq i8 %13, 0, !dbg !6854
  br i1 %14, label %15, label %32, !dbg !6857

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6858
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #23, !dbg !6859
  %18 = load i8, i8* %6, align 1, !dbg !6860, !range !6856
  call void @llvm.dbg.value(metadata i8 %18, metadata !6836, metadata !DIExpression()), !dbg !6839
  %19 = icmp eq i8 %18, 0, !dbg !6860
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6862
  %21 = load i32, i32* %20, align 4, !dbg !6862
  br i1 %19, label %27, label %22, !dbg !6863

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6864
  %24 = icmp eq i32 %23, 0, !dbg !6867
  br i1 %24, label %25, label %31, !dbg !6868

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6869
  br label %29, !dbg !6871

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6872
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6862
  br label %31, !dbg !6874

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #23, !dbg !6874
  br label %32, !dbg !6875

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #22, !dbg !6875
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #22, !dbg !6875
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #22, !dbg !6875
  ret void, !dbg !6875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6881, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i32 %1, metadata !6882, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i32 %2, metadata !6883, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i8* %3, metadata !6884, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i8 0, metadata !6885, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6886, metadata !DIExpression()), !dbg !6887
  store i8 0, i8* %3, align 1, !dbg !6888
  %5 = icmp ult i32 %2, -16777216, !dbg !6889
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6891
  br i1 %8, label %16, label %9, !dbg !6891

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6892
  %11 = icmp eq i32 %10, 0, !dbg !6892
  br i1 %11, label %12, label %13, !dbg !6894

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6886, metadata !DIExpression()), !dbg !6887
  store i8 1, i8* %3, align 1, !dbg !6897
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6887
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6886, metadata !DIExpression()), !dbg !6887
  br label %16, !dbg !6900

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6887
  ret %struct.__esf* %17, !dbg !6901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6902 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6906, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i32 %1, metadata !6907, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i8* %2, metadata !6908, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i32 0, metadata !6909, metadata !DIExpression()), !dbg !6910
  store i8 0, i8* %2, align 1, !dbg !6911
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !6912

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6913
  call void @llvm.dbg.value(metadata i32 %5, metadata !6909, metadata !DIExpression()), !dbg !6910
  br label %10, !dbg !6915

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6916
  call void @llvm.dbg.value(metadata i32 0, metadata !6909, metadata !DIExpression()), !dbg !6910
  br label %10, !dbg !6917

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6918
  call void @llvm.dbg.value(metadata i32 0, metadata !6909, metadata !DIExpression()), !dbg !6910
  br label %10, !dbg !6919

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6920
  call void @llvm.dbg.value(metadata i32 0, metadata !6909, metadata !DIExpression()), !dbg !6910
  br label %10, !dbg !6921

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6922
  br label %10, !dbg !6923

10:                                               ; preds = %4, %6, %7, %8, %9, %3
  %11 = phi i32 [ 0, %3 ], [ %5, %4 ], [ 0, %6 ], [ 0, %7 ], [ 0, %8 ], [ 0, %9 ]
  ret i32 %11, !dbg !6924
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6925 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6929, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.value(metadata i8* %1, metadata !6930, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.value(metadata i32 0, metadata !6931, metadata !DIExpression()), !dbg !6932
  store i8 0, i8* %1, align 1, !dbg !6933
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6934
  %4 = and i32 %3, 2, !dbg !6936
  %5 = icmp eq i32 %4, 0, !dbg !6937
  br i1 %5, label %6, label %32, !dbg !6938

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6939
  %8 = icmp sgt i32 %7, -1, !dbg !6941
  br i1 %8, label %9, label %32, !dbg !6942

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6943
  %11 = and i32 %10, 1073741824, !dbg !6945
  %12 = icmp eq i32 %11, 0, !dbg !6946
  br i1 %12, label %32, label %13, !dbg !6947

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6948
  br i1 %14, label %15, label %18, !dbg !6951

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6952
  %17 = load i32, i32* %16, align 4, !dbg !6952
  call void @llvm.dbg.value(metadata i32 %17, metadata !6931, metadata !DIExpression()), !dbg !6932
  br label %32, !dbg !6954

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6955
  %20 = and i32 %19, 255, !dbg !6957
  %21 = icmp eq i32 %20, 0, !dbg !6958
  br i1 %21, label %23, label %22, !dbg !6959

22:                                               ; preds = %18
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6960
  call void @llvm.dbg.value(metadata i32 0, metadata !6931, metadata !DIExpression()), !dbg !6932
  br label %32, !dbg !6962

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6963
  %25 = and i32 %24, 65280, !dbg !6965
  %26 = icmp eq i32 %25, 0, !dbg !6966
  br i1 %26, label %28, label %27, !dbg !6967

27:                                               ; preds = %23
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6968
  call void @llvm.dbg.value(metadata i32 0, metadata !6931, metadata !DIExpression()), !dbg !6932
  br label %32, !dbg !6970

28:                                               ; preds = %23
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6971
  %30 = icmp ult i32 %29, 65536, !dbg !6973
  br i1 %30, label %32, label %31, !dbg !6974

31:                                               ; preds = %28
  tail call fastcc void @usage_fault() #24, !dbg !6975
  call void @llvm.dbg.value(metadata i32 0, metadata !6931, metadata !DIExpression()), !dbg !6932
  br label %32, !dbg !6977

32:                                               ; preds = %6, %9, %15, %27, %28, %31, %22, %2
  %33 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ 0, %22 ], [ 0, %27 ], [ 0, %31 ], [ 0, %28 ], [ 0, %9 ], !dbg !6932
  call void @llvm.dbg.value(metadata i32 %33, metadata !6931, metadata !DIExpression()), !dbg !6932
  ret i32 %33, !dbg !6978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6979 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6981, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.value(metadata i32 %0, metadata !6982, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.value(metadata i8* %1, metadata !6983, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.value(metadata i32 0, metadata !6984, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.value(metadata i32 -22, metadata !6985, metadata !DIExpression()), !dbg !6989
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6990
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6992
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6994
  %6 = and i32 %5, 2, !dbg !6995
  %7 = icmp eq i32 %6, 0, !dbg !6996
  br i1 %7, label %18, label %8, !dbg !6997

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6998
  call void @llvm.dbg.value(metadata i32 %9, metadata !6986, metadata !DIExpression()), !dbg !6999
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7000
  %11 = and i32 %10, 128, !dbg !7002
  %12 = icmp eq i32 %11, 0, !dbg !7003
  %13 = icmp eq i32 %0, 0
  %14 = or i1 %13, %12, !dbg !7004
  call void @llvm.dbg.value(metadata i32 %9, metadata !6985, metadata !DIExpression()), !dbg !6989
  br i1 %14, label %18, label %15, !dbg !7004

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7005
  %17 = and i32 %16, -129, !dbg !7005
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7005
  br label %18, !dbg !7009

18:                                               ; preds = %8, %15, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !6985, metadata !DIExpression()), !dbg !6989
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7010
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7012
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7014
  %22 = and i32 %21, 16, !dbg !7016
  %23 = icmp eq i32 %22, 0, !dbg !7016
  br i1 %23, label %24, label %26, !dbg !7017

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7018
  br label %26, !dbg !7019

26:                                               ; preds = %24, %18
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7020
  %28 = and i32 %27, 32, !dbg !7022
  %29 = icmp eq i32 %28, 0, !dbg !7023
  br i1 %29, label %33, label %30, !dbg !7024

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7025
  %32 = and i32 %31, -8193, !dbg !7025
  store volatile i32 %32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7025
  br label %33, !dbg !7027

33:                                               ; preds = %30, %26
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7028
  %35 = or i32 %34, 255, !dbg !7028
  store volatile i32 %35, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7028
  store i8 0, i8* %1, align 1, !dbg !7029
  ret void, !dbg !7030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7031 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7035, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i32 %0, metadata !7036, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i8* %1, metadata !7037, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i32 0, metadata !7038, metadata !DIExpression()), !dbg !7042
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7043
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7045
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7047
  %6 = and i32 %5, 512, !dbg !7048
  %7 = icmp eq i32 %6, 0, !dbg !7048
  br i1 %7, label %18, label %8, !dbg !7049

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7050
  call void @llvm.dbg.value(metadata i32 %9, metadata !7039, metadata !DIExpression()), !dbg !7051
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7052
  %11 = and i32 %10, 32768, !dbg !7054
  %12 = icmp ne i32 %11, 0, !dbg !7055
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7056
  br i1 %14, label %15, label %18, !dbg !7056

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7057
  %17 = and i32 %16, -32769, !dbg !7057
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7057
  br label %18, !dbg !7061

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7062
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7064
  %21 = and i32 %20, 256, !dbg !7066
  %22 = icmp eq i32 %21, 0, !dbg !7067
  br i1 %22, label %23, label %25, !dbg !7068

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7069
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7071
  %27 = or i32 %26, 65280, !dbg !7071
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7071
  store i8 0, i8* %1, align 1, !dbg !7072
  ret void, !dbg !7073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7074 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7080, metadata !DIExpression()), !dbg !7082
  call void @llvm.dbg.value(metadata i32 0, metadata !7081, metadata !DIExpression()), !dbg !7082
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7083
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7085
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7087
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7089
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7091
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7093
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7095
  %8 = or i32 %7, -65536, !dbg !7095
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7095
  ret void, !dbg !7096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7097 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7101, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i8* %0, metadata !7102, metadata !DIExpression()), !dbg !7103
  store i8 0, i8* %0, align 1, !dbg !7104
  ret void, !dbg !7105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7106 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7110, metadata !DIExpression()), !dbg !7113
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7114
  %3 = load i32, i32* %2, align 4, !dbg !7114
  %4 = inttoptr i32 %3 to i16*, !dbg !7115
  call void @llvm.dbg.value(metadata i16* %4, metadata !7111, metadata !DIExpression()), !dbg !7113
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7116
  %6 = or i32 %5, 256, !dbg !7116
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7116
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !7117, !srcloc !7120
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !7121, !srcloc !7124
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7125
  %8 = load i16, i16* %7, align 2, !dbg !7126
  call void @llvm.dbg.value(metadata i16 %8, metadata !7112, metadata !DIExpression()), !dbg !7113
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7127
  %10 = and i32 %9, -257, !dbg !7127
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7127
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !7128, !srcloc !7120
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !7130, !srcloc !7124
  %11 = icmp eq i16 %8, -8446, !dbg !7132
  ret i1 %11, !dbg !7134
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7135 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7136
  %2 = or i32 %1, 16, !dbg !7136
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7136
  ret void, !dbg !7137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7138 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7141, metadata !DIExpression()), !dbg !7142
  br label %1, !dbg !7143

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7141, metadata !DIExpression()), !dbg !7142
  tail call fastcc void @__NVIC_SetPriority.18(i32 noundef %2) #24, !dbg !7145
  %3 = add nuw nsw i32 %2, 1, !dbg !7148
  call void @llvm.dbg.value(metadata i32 %3, metadata !7141, metadata !DIExpression()), !dbg !7142
  %4 = icmp eq i32 %3, 127, !dbg !7149
  br i1 %4, label %5, label %1, !dbg !7143, !llvm.loop !7150

5:                                                ; preds = %1
  ret void, !dbg !7152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.18(i32 noundef %0) unnamed_addr #15 !dbg !7153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7155, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 1, metadata !7156, metadata !DIExpression()), !dbg !7157
  %2 = and i32 %0, 15, !dbg !7158
  %3 = add nsw i32 %2, -4, !dbg !7158
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7158
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7158
  %6 = icmp slt i32 %0, 0, !dbg !7158
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7158
  store volatile i8 16, i8* %7, align 1, !dbg !7159
  ret void, !dbg !7161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7162 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7262, metadata !DIExpression()), !dbg !7263
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7264
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7266
  br i1 %3, label %4, label %12, !dbg !7267

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !7268, !srcloc !7280
  call void @llvm.dbg.value(metadata i32 %5, metadata !7271, metadata !DIExpression()) #22, !dbg !7281
  %6 = icmp eq i32 %5, 0, !dbg !7282
  br i1 %6, label %12, label %7, !dbg !7283

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7284
  %9 = or i32 %8, 268435456, !dbg !7284
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7284
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7286
  %11 = and i32 %10, -32769, !dbg !7286
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7286
  br label %12, !dbg !7287

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #23, !dbg !7288
  ret void, !dbg !7289
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7290 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7297, metadata !DIExpression()), !dbg !7300
  call void @llvm.dbg.value(metadata i8* %1, metadata !7298, metadata !DIExpression()), !dbg !7300
  call void @llvm.dbg.value(metadata i8* %0, metadata !7299, metadata !DIExpression()), !dbg !7300
  %3 = load i8, i8* %1, align 1, !dbg !7301
  %4 = icmp eq i8 %3, 0, !dbg !7302
  br i1 %4, label %13, label %5, !dbg !7303

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7297, metadata !DIExpression()), !dbg !7300
  call void @llvm.dbg.value(metadata i8* %8, metadata !7298, metadata !DIExpression()), !dbg !7300
  store i8 %6, i8* %7, align 1, !dbg !7304
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7306
  call void @llvm.dbg.value(metadata i8* %9, metadata !7297, metadata !DIExpression()), !dbg !7300
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7307
  call void @llvm.dbg.value(metadata i8* %10, metadata !7298, metadata !DIExpression()), !dbg !7300
  %11 = load i8, i8* %10, align 1, !dbg !7301
  %12 = icmp eq i8 %11, 0, !dbg !7302
  br i1 %12, label %13, label %5, !dbg !7303, !llvm.loop !7308

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7310
  ret i8* %0, !dbg !7311
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7312 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7316, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i8* %1, metadata !7317, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 %2, metadata !7318, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i8* %0, metadata !7319, metadata !DIExpression()), !dbg !7320
  %4 = icmp eq i32 %2, 0, !dbg !7321
  br i1 %4, label %22, label %5, !dbg !7322

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7316, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 %7, metadata !7318, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i8* %8, metadata !7317, metadata !DIExpression()), !dbg !7320
  %9 = load i8, i8* %8, align 1, !dbg !7323
  %10 = icmp eq i8 %9, 0, !dbg !7324
  br i1 %10, label %16, label %11, !dbg !7325

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7326
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7328
  call void @llvm.dbg.value(metadata i8* %12, metadata !7317, metadata !DIExpression()), !dbg !7320
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7329
  call void @llvm.dbg.value(metadata i8* %13, metadata !7316, metadata !DIExpression()), !dbg !7320
  %14 = add i32 %7, -1, !dbg !7330
  call void @llvm.dbg.value(metadata i32 %14, metadata !7318, metadata !DIExpression()), !dbg !7320
  %15 = icmp eq i32 %14, 0, !dbg !7321
  br i1 %15, label %22, label %5, !dbg !7322, !llvm.loop !7331

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7316, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 %18, metadata !7318, metadata !DIExpression()), !dbg !7320
  store i8 0, i8* %17, align 1, !dbg !7333
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7335
  call void @llvm.dbg.value(metadata i8* %19, metadata !7316, metadata !DIExpression()), !dbg !7320
  %20 = add i32 %18, -1, !dbg !7336
  call void @llvm.dbg.value(metadata i32 %20, metadata !7318, metadata !DIExpression()), !dbg !7320
  %21 = icmp eq i32 %20, 0, !dbg !7337
  br i1 %21, label %22, label %16, !dbg !7338, !llvm.loop !7339

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7341
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !7342 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7346, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 %1, metadata !7347, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 %1, metadata !7348, metadata !DIExpression()), !dbg !7349
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7350

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7346, metadata !DIExpression()), !dbg !7349
  %6 = load i8, i8* %5, align 1, !dbg !7351
  %7 = icmp eq i8 %6, %3, !dbg !7352
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7353
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7354
  call void @llvm.dbg.value(metadata i8* %10, metadata !7346, metadata !DIExpression()), !dbg !7349
  br i1 %9, label %11, label %4, !dbg !7353, !llvm.loop !7356

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7358
  ret i8* %12, !dbg !7359
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !7360 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7362, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i32 %1, metadata !7363, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i8* null, metadata !7364, metadata !DIExpression()), !dbg !7365
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7366

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7365
  call void @llvm.dbg.value(metadata i8* %6, metadata !7364, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i8* %5, metadata !7362, metadata !DIExpression()), !dbg !7365
  %7 = load i8, i8* %5, align 1, !dbg !7367
  %8 = icmp eq i8 %7, %3, !dbg !7370
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7371
  call void @llvm.dbg.value(metadata i8* %9, metadata !7364, metadata !DIExpression()), !dbg !7365
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7372
  call void @llvm.dbg.value(metadata i8* %10, metadata !7362, metadata !DIExpression()), !dbg !7365
  %11 = icmp eq i8 %7, 0, !dbg !7373
  br i1 %11, label %12, label %4, !dbg !7373, !llvm.loop !7374

12:                                               ; preds = %4
  ret i8* %9, !dbg !7376
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #17 !dbg !7377 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7381, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i32 0, metadata !7382, metadata !DIExpression()), !dbg !7383
  %2 = load i8, i8* %0, align 1, !dbg !7384
  %3 = icmp eq i8 %2, 0, !dbg !7385
  br i1 %3, label %11, label %4, !dbg !7386

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7382, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i8* %6, metadata !7381, metadata !DIExpression()), !dbg !7383
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7387
  call void @llvm.dbg.value(metadata i8* %7, metadata !7381, metadata !DIExpression()), !dbg !7383
  %8 = add i32 %5, 1, !dbg !7389
  call void @llvm.dbg.value(metadata i32 %8, metadata !7382, metadata !DIExpression()), !dbg !7383
  %9 = load i8, i8* %7, align 1, !dbg !7384
  %10 = icmp eq i8 %9, 0, !dbg !7385
  br i1 %10, label %11, label %4, !dbg !7386, !llvm.loop !7390

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7383
  ret i32 %12, !dbg !7392
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !7393 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7397, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %1, metadata !7398, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 0, metadata !7399, metadata !DIExpression()), !dbg !7400
  %3 = load i8, i8* %0, align 1, !dbg !7401
  %4 = icmp ne i8 %3, 0, !dbg !7402
  %5 = icmp ne i32 %1, 0, !dbg !7403
  %6 = and i1 %4, %5, !dbg !7403
  br i1 %6, label %7, label %16, !dbg !7404

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7399, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %9, metadata !7397, metadata !DIExpression()), !dbg !7400
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7405
  call void @llvm.dbg.value(metadata i8* %10, metadata !7397, metadata !DIExpression()), !dbg !7400
  %11 = add nuw i32 %8, 1, !dbg !7407
  call void @llvm.dbg.value(metadata i32 %11, metadata !7399, metadata !DIExpression()), !dbg !7400
  %12 = load i8, i8* %10, align 1, !dbg !7401
  %13 = icmp ne i8 %12, 0, !dbg !7402
  %14 = icmp ult i32 %11, %1, !dbg !7403
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7403
  br i1 %15, label %7, label %16, !dbg !7404, !llvm.loop !7408

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7400
  ret i32 %17, !dbg !7410
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !7411 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7415, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.value(metadata i8* %1, metadata !7416, metadata !DIExpression()), !dbg !7417
  %3 = load i8, i8* %0, align 1, !dbg !7418
  %4 = load i8, i8* %1, align 1, !dbg !7419
  %5 = icmp ne i8 %3, %4, !dbg !7420
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7421
  br i1 %7, label %18, label %8, !dbg !7421

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7416, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.value(metadata i8* %10, metadata !7415, metadata !DIExpression()), !dbg !7417
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7422
  call void @llvm.dbg.value(metadata i8* %11, metadata !7415, metadata !DIExpression()), !dbg !7417
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7424
  call void @llvm.dbg.value(metadata i8* %12, metadata !7416, metadata !DIExpression()), !dbg !7417
  %13 = load i8, i8* %11, align 1, !dbg !7418
  %14 = load i8, i8* %12, align 1, !dbg !7419
  %15 = icmp ne i8 %13, %14, !dbg !7420
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7421
  br i1 %17, label %18, label %8, !dbg !7421, !llvm.loop !7425

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7418
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7419
  %21 = zext i8 %19 to i32, !dbg !7428
  %22 = zext i8 %20 to i32, !dbg !7429
  %23 = sub nsw i32 %21, %22, !dbg !7430
  ret i32 %23, !dbg !7431
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7432 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7436, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i8* %1, metadata !7437, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i32 %2, metadata !7438, metadata !DIExpression()), !dbg !7439
  %4 = icmp eq i32 %2, 0, !dbg !7440
  br i1 %4, label %23, label %5, !dbg !7440

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7438, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i8* %7, metadata !7437, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i8* %8, metadata !7436, metadata !DIExpression()), !dbg !7439
  %9 = load i8, i8* %8, align 1, !dbg !7441
  %10 = load i8, i8* %7, align 1, !dbg !7442
  %11 = icmp ne i8 %9, %10, !dbg !7443
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7444
  br i1 %13, label %19, label %14, !dbg !7444

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7445
  call void @llvm.dbg.value(metadata i8* %15, metadata !7436, metadata !DIExpression()), !dbg !7439
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7447
  call void @llvm.dbg.value(metadata i8* %16, metadata !7437, metadata !DIExpression()), !dbg !7439
  %17 = add i32 %6, -1, !dbg !7448
  call void @llvm.dbg.value(metadata i32 %17, metadata !7438, metadata !DIExpression()), !dbg !7439
  %18 = icmp eq i32 %17, 0, !dbg !7440
  br i1 %18, label %23, label %5, !dbg !7440, !llvm.loop !7449

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7452
  %21 = zext i8 %10 to i32, !dbg !7453
  %22 = sub nsw i32 %20, %21, !dbg !7454
  br label %23, !dbg !7455

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7455
  ret i32 %24, !dbg !7456
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7457 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7462, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i8* %1, metadata !7463, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i8** %2, metadata !7464, metadata !DIExpression()), !dbg !7467
  %4 = icmp eq i8* %0, null, !dbg !7468
  br i1 %4, label %5, label %7, !dbg !7468

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7469
  br label %7, !dbg !7468

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7468
  call void @llvm.dbg.value(metadata i8* %8, metadata !7465, metadata !DIExpression()), !dbg !7467
  %9 = load i8, i8* %8, align 1, !dbg !7470
  %10 = icmp eq i8 %9, 0, !dbg !7470
  br i1 %10, label %33, label %11, !dbg !7471

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7465, metadata !DIExpression()), !dbg !7467
  %14 = zext i8 %12 to i32, !dbg !7470
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7472
  %16 = icmp eq i8* %15, null, !dbg !7471
  br i1 %16, label %21, label %17, !dbg !7473

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7474
  call void @llvm.dbg.value(metadata i8* %18, metadata !7465, metadata !DIExpression()), !dbg !7467
  %19 = load i8, i8* %18, align 1, !dbg !7470
  %20 = icmp eq i8 %19, 0, !dbg !7470
  br i1 %20, label %33, label %11, !dbg !7471, !llvm.loop !7476

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7466, metadata !DIExpression()), !dbg !7467
  %24 = zext i8 %22 to i32, !dbg !7478
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7479
  %26 = icmp eq i8* %25, null, !dbg !7480
  br i1 %26, label %27, label %31, !dbg !7481

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7482
  call void @llvm.dbg.value(metadata i8* %28, metadata !7466, metadata !DIExpression()), !dbg !7467
  %29 = load i8, i8* %28, align 1, !dbg !7478
  %30 = icmp eq i8 %29, 0, !dbg !7478
  br i1 %30, label %33, label %21, !dbg !7484, !llvm.loop !7485

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7487
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7490
  br label %33, !dbg !7491

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7467
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7467
  store i8* %34, i8** %2, align 4, !dbg !7467
  ret i8* %35, !dbg !7492
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7493 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7495, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i8* %1, metadata !7496, metadata !DIExpression()), !dbg !7497
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7498
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7499
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7500
  ret i8* %0, !dbg !7501
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7502 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7504, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i8* %1, metadata !7505, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i32 %2, metadata !7506, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i8* %0, metadata !7507, metadata !DIExpression()), !dbg !7509
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7510
  call void @llvm.dbg.value(metadata i32 %4, metadata !7508, metadata !DIExpression()), !dbg !7509
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7511
  call void @llvm.dbg.value(metadata i8* %5, metadata !7504, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i8* %1, metadata !7505, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i32 %2, metadata !7506, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i32 %2, metadata !7506, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7509
  %6 = icmp eq i32 %2, 0, !dbg !7512
  br i1 %6, label %18, label %7, !dbg !7513

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7514
  call void @llvm.dbg.value(metadata i8* %9, metadata !7504, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i8* %10, metadata !7505, metadata !DIExpression()), !dbg !7509
  %12 = load i8, i8* %10, align 1, !dbg !7515
  %13 = icmp eq i8 %12, 0, !dbg !7516
  br i1 %13, label %18, label %14, !dbg !7517

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7518
  call void @llvm.dbg.value(metadata i8* %15, metadata !7505, metadata !DIExpression()), !dbg !7509
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7520
  call void @llvm.dbg.value(metadata i8* %16, metadata !7504, metadata !DIExpression()), !dbg !7509
  store i8 %12, i8* %9, align 1, !dbg !7521
  call void @llvm.dbg.value(metadata i32 %11, metadata !7506, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i32 %11, metadata !7506, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7509
  %17 = icmp eq i32 %11, 0, !dbg !7512
  br i1 %17, label %18, label %7, !dbg !7513, !llvm.loop !7522

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7509
  store i8 0, i8* %19, align 1, !dbg !7524
  ret i8* %0, !dbg !7525
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7526 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7530, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8* %1, metadata !7531, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %2, metadata !7532, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8* %0, metadata !7533, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8* %1, metadata !7534, metadata !DIExpression()), !dbg !7535
  %4 = icmp eq i32 %2, 0, !dbg !7536
  br i1 %4, label %31, label %5, !dbg !7538

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7534, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8* %0, metadata !7533, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %2, metadata !7532, metadata !DIExpression()), !dbg !7535
  %6 = add i32 %2, -1, !dbg !7539
  call void @llvm.dbg.value(metadata i32 %6, metadata !7532, metadata !DIExpression()), !dbg !7535
  %7 = icmp eq i32 %6, 0, !dbg !7540
  br i1 %7, label %23, label %8, !dbg !7541

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7542
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7542
  br label %11, !dbg !7542

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7534, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8* %14, metadata !7533, metadata !DIExpression()), !dbg !7535
  %15 = load i8, i8* %14, align 1, !dbg !7543
  %16 = load i8, i8* %13, align 1, !dbg !7544
  %17 = icmp eq i8 %15, %16, !dbg !7545
  br i1 %17, label %18, label %23, !dbg !7542

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7546
  call void @llvm.dbg.value(metadata i8* %19, metadata !7533, metadata !DIExpression()), !dbg !7535
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7548
  call void @llvm.dbg.value(metadata i8* %20, metadata !7534, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %12, metadata !7532, metadata !DIExpression()), !dbg !7535
  %21 = add i32 %12, -1, !dbg !7539
  call void @llvm.dbg.value(metadata i32 %21, metadata !7532, metadata !DIExpression()), !dbg !7535
  %22 = icmp eq i32 %21, 0, !dbg !7540
  br i1 %22, label %23, label %11, !dbg !7541, !llvm.loop !7549

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7535
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7535
  %26 = load i8, i8* %24, align 1, !dbg !7551
  %27 = zext i8 %26 to i32, !dbg !7551
  %28 = load i8, i8* %25, align 1, !dbg !7552
  %29 = zext i8 %28 to i32, !dbg !7552
  %30 = sub nsw i32 %27, %29, !dbg !7553
  br label %31, !dbg !7554

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7535
  ret i32 %32, !dbg !7555
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7556 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7560, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i8* %1, metadata !7561, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 %2, metadata !7562, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i8* %0, metadata !7563, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i8* %1, metadata !7564, metadata !DIExpression()), !dbg !7565
  %4 = ptrtoint i8* %0 to i32, !dbg !7566
  %5 = ptrtoint i8* %1 to i32, !dbg !7566
  %6 = sub i32 %4, %5, !dbg !7566
  %7 = icmp ult i32 %6, %2, !dbg !7568
  br i1 %7, label %10, label %8, !dbg !7569

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7564, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i8* %0, metadata !7563, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 %2, metadata !7562, metadata !DIExpression()), !dbg !7565
  %9 = icmp eq i32 %2, 0, !dbg !7570
  br i1 %9, label %26, label %17, !dbg !7572

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7562, metadata !DIExpression()), !dbg !7565
  %12 = add i32 %11, -1, !dbg !7573
  call void @llvm.dbg.value(metadata i32 %12, metadata !7562, metadata !DIExpression()), !dbg !7565
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7576
  %14 = load i8, i8* %13, align 1, !dbg !7576
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7577
  store i8 %14, i8* %15, align 1, !dbg !7578
  %16 = icmp eq i32 %12, 0, !dbg !7579
  br i1 %16, label %26, label %10, !dbg !7580, !llvm.loop !7581

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7564, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i8* %19, metadata !7563, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 %20, metadata !7562, metadata !DIExpression()), !dbg !7565
  %21 = load i8, i8* %18, align 1, !dbg !7583
  store i8 %21, i8* %19, align 1, !dbg !7585
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7586
  call void @llvm.dbg.value(metadata i8* %22, metadata !7563, metadata !DIExpression()), !dbg !7565
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7587
  call void @llvm.dbg.value(metadata i8* %23, metadata !7564, metadata !DIExpression()), !dbg !7565
  %24 = add i32 %20, -1, !dbg !7588
  call void @llvm.dbg.value(metadata i32 %24, metadata !7562, metadata !DIExpression()), !dbg !7565
  %25 = icmp eq i32 %24, 0, !dbg !7570
  br i1 %25, label %26, label %17, !dbg !7572, !llvm.loop !7589

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7591
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7592 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7598, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i8* %1, metadata !7599, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %2, metadata !7600, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i8* %0, metadata !7601, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i8* %1, metadata !7602, metadata !DIExpression()), !dbg !7603
  %4 = icmp eq i32 %2, 0, !dbg !7604
  br i1 %4, label %14, label %5, !dbg !7605

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7602, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i8* %7, metadata !7601, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %8, metadata !7600, metadata !DIExpression()), !dbg !7603
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7606
  call void @llvm.dbg.value(metadata i8* %9, metadata !7602, metadata !DIExpression()), !dbg !7603
  %10 = load i8, i8* %6, align 1, !dbg !7608
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7609
  call void @llvm.dbg.value(metadata i8* %11, metadata !7601, metadata !DIExpression()), !dbg !7603
  store i8 %10, i8* %7, align 1, !dbg !7610
  %12 = add i32 %8, -1, !dbg !7611
  call void @llvm.dbg.value(metadata i32 %12, metadata !7600, metadata !DIExpression()), !dbg !7603
  %13 = icmp eq i32 %12, 0, !dbg !7604
  br i1 %13, label %14, label %5, !dbg !7605, !llvm.loop !7612

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7614
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7615 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7619, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i32 %2, metadata !7621, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i8* %0, metadata !7622, metadata !DIExpression()), !dbg !7624
  %4 = trunc i32 %1 to i8, !dbg !7625
  call void @llvm.dbg.value(metadata i8 %4, metadata !7623, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i32 %2, metadata !7621, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i8* %0, metadata !7622, metadata !DIExpression()), !dbg !7624
  %5 = icmp eq i32 %2, 0, !dbg !7626
  br i1 %5, label %12, label %6, !dbg !7627

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7621, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i8* %8, metadata !7622, metadata !DIExpression()), !dbg !7624
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7628
  call void @llvm.dbg.value(metadata i8* %9, metadata !7622, metadata !DIExpression()), !dbg !7624
  store i8 %4, i8* %8, align 1, !dbg !7630
  %10 = add i32 %7, -1, !dbg !7631
  call void @llvm.dbg.value(metadata i32 %10, metadata !7621, metadata !DIExpression()), !dbg !7624
  %11 = icmp eq i32 %10, 0, !dbg !7626
  br i1 %11, label %12, label %6, !dbg !7627, !llvm.loop !7632

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7634
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7635 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7639, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %1, metadata !7640, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %2, metadata !7641, metadata !DIExpression()), !dbg !7645
  %4 = icmp eq i32 %2, 0, !dbg !7646
  br i1 %4, label %17, label %5, !dbg !7647

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7648

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7649
  call void @llvm.dbg.value(metadata i8* %9, metadata !7642, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %8, metadata !7641, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %9, metadata !7642, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7649
  %10 = load i8, i8* %9, align 1, !dbg !7650
  %11 = icmp eq i8 %10, %6, !dbg !7653
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7654
  call void @llvm.dbg.value(metadata i8* %12, metadata !7642, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %13, metadata !7641, metadata !DIExpression()), !dbg !7645
  br i1 %15, label %16, label %7, !dbg !7654, !llvm.loop !7655

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7657

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7645
  ret i8* %19, !dbg !7658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7659 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7661, metadata !DIExpression()), !dbg !7662
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7663
  ret void, !dbg !7664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7667, metadata !DIExpression()), !dbg !7668
  ret i32 -1, !dbg !7669
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7674, metadata !DIExpression()), !dbg !7676
  call void @llvm.dbg.value(metadata i32* %1, metadata !7675, metadata !DIExpression()), !dbg !7676
  %3 = ptrtoint i32* %1 to i32, !dbg !7677
  %4 = and i32 %3, -2, !dbg !7677
  %5 = icmp eq i32 %4, 2, !dbg !7677
  br i1 %5, label %6, label %9, !dbg !7677

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7678
  %8 = tail call i32 %7(i32 noundef %0) #23, !dbg !7678
  br label %9, !dbg !7679

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7679
  ret i32 %10, !dbg !7680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7683, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32* %1, metadata !7684, metadata !DIExpression()), !dbg !7685
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !7686
  ret i32 %3, !dbg !7687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7691, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.value(metadata i32* %1, metadata !7692, metadata !DIExpression()), !dbg !7693
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7694, !srcloc !7696
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !7697
  ret i32 %3, !dbg !7698
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7699 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7704, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i32* %1, metadata !7705, metadata !DIExpression()), !dbg !7708
  %3 = tail call i32 @strlen(i8* noundef %0) #23, !dbg !7709
  call void @llvm.dbg.value(metadata i32 %3, metadata !7706, metadata !DIExpression()), !dbg !7708
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !7710
  call void @llvm.dbg.value(metadata i32 %4, metadata !7707, metadata !DIExpression()), !dbg !7708
  %5 = icmp ne i32 %3, %4, !dbg !7711
  %6 = sext i1 %5 to i32, !dbg !7712
  ret i32 %6, !dbg !7713
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7718, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %1, metadata !7719, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %2, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32* %3, metadata !7721, metadata !DIExpression()), !dbg !7722
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !7723
  ret i32 %5, !dbg !7724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7725 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7727, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 %1, metadata !7728, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 %2, metadata !7729, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32* %3, metadata !7730, metadata !DIExpression()), !dbg !7731
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7732, !srcloc !7734
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !7735
  ret i32 %5, !dbg !7736
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7737 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7739, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i32 %1, metadata !7740, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i32 %2, metadata !7741, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i32* %3, metadata !7742, metadata !DIExpression()), !dbg !7747
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7748
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7750
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7750
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7750
  br i1 %11, label %33, label %12, !dbg !7750

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7747
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7747
  call void @llvm.dbg.value(metadata i8* %14, metadata !7745, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i32 %13, metadata !7743, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i32 %1, metadata !7744, metadata !DIExpression()), !dbg !7747
  br label %15, !dbg !7751

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7753
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7747
  call void @llvm.dbg.value(metadata i8* %17, metadata !7745, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i32 %16, metadata !7744, metadata !DIExpression()), !dbg !7747
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7754
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7757
  call void @llvm.dbg.value(metadata i8* %19, metadata !7745, metadata !DIExpression()), !dbg !7747
  %20 = load i8, i8* %17, align 1, !dbg !7758
  %21 = zext i8 %20 to i32, !dbg !7759
  %22 = tail call i32 %18(i32 noundef %21) #23, !dbg !7754
  %23 = icmp eq i32 %22, -1, !dbg !7760
  br i1 %23, label %30, label %24, !dbg !7761

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %25, metadata !7744, metadata !DIExpression()), !dbg !7747
  %26 = icmp eq i32 %25, 0, !dbg !7763
  br i1 %26, label %27, label %15, !dbg !7764, !llvm.loop !7765

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7767
  call void @llvm.dbg.value(metadata i32 %28, metadata !7743, metadata !DIExpression()), !dbg !7747
  %29 = icmp eq i32 %28, 0, !dbg !7768
  br i1 %29, label %30, label %12, !dbg !7769, !llvm.loop !7770

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7747
  call void @llvm.dbg.value(metadata i32 %31, metadata !7743, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.label(metadata !7746), !dbg !7773
  %32 = sub i32 %2, %31, !dbg !7774
  br label %33, !dbg !7775

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7747
  ret i32 %34, !dbg !7776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7777 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7781, metadata !DIExpression()), !dbg !7782
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !7783
  %3 = icmp eq i32 %2, -1, !dbg !7785
  br i1 %3, label %8, label %4, !dbg !7786

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !7787
  %6 = icmp eq i32 %5, -1, !dbg !7788
  %7 = sext i1 %6 to i32, !dbg !7787
  br label %8, !dbg !7789

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7782
  ret i32 %9, !dbg !7790
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7791 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7793, metadata !DIExpression()), !dbg !7794
  %2 = tail call fastcc zeroext i1 @device_is_ready.28() #24, !dbg !7795
  br i1 %2, label %3, label %4, !dbg !7797

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !7798
  br label %4, !dbg !7799

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7794
  ret i32 %5, !dbg !7800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.28() unnamed_addr #1 !dbg !7801 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7805, metadata !DIExpression()), !dbg !7806
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7807, !srcloc !7809
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.31() #24, !dbg !7810
  ret i1 %1, !dbg !7811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7812 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #23, !dbg !7813
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #23, !dbg !7814
  ret void, !dbg !7815
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7818, metadata !DIExpression()), !dbg !7820
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !7821
  %3 = trunc i32 %0 to i8, !dbg !7821
  %4 = tail call i32 %2(i8 noundef zeroext %3) #23, !dbg !7821
  %5 = icmp eq i32 %4, 1, !dbg !7821
  call void @llvm.dbg.value(metadata i1 %5, metadata !7819, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7820
  br i1 %5, label %10, label %6, !dbg !7822

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !7823
  br i1 %7, label %8, label %9, !dbg !7825

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.29(i8 noundef zeroext 13) #24, !dbg !7826
  br label %9, !dbg !7828

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.29(i8 noundef zeroext %3) #24, !dbg !7829
  br label %10, !dbg !7830

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !7831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.29(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7832 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7834, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata i8 %0, metadata !7835, metadata !DIExpression()), !dbg !7836
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7837, !srcloc !7839
  tail call fastcc void @z_impl_uart_poll_out.30(i8 noundef zeroext %0) #24, !dbg !7840
  ret void, !dbg !7841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.30(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7842 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7844, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i8 %0, metadata !7845, metadata !DIExpression()), !dbg !7847
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7848
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7846, metadata !DIExpression()), !dbg !7847
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7849
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7849
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #23, !dbg !7850
  ret void, !dbg !7851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !7852 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7854, metadata !DIExpression()), !dbg !7855
  ret i32 0, !dbg !7856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.31() unnamed_addr #1 !dbg !7857 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7859, metadata !DIExpression()), !dbg !7860
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !7861
  ret i1 %1, !dbg !7862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !7863 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !7867, metadata !DIExpression()), !dbg !7868
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !7869
  ret void, !dbg !7870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !7871 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !7875, metadata !DIExpression()), !dbg !7876
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !7877
  ret void, !dbg !7878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !7879 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7883, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7884, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7885, metadata !DIExpression()), !dbg !7886
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !7887
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !7888
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !7889
  tail call fastcc void @console_input_init() #24, !dbg !7890
  ret void, !dbg !7891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !7892 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #22, !dbg !7895
  tail call fastcc void @uart_irq_rx_disable.32() #24, !dbg !7896
  tail call fastcc void @uart_irq_tx_disable.33() #24, !dbg !7897
  tail call fastcc void @uart_irq_callback_set() #24, !dbg !7898
  %2 = call fastcc i32 @uart_irq_rx_ready.34() #24, !dbg !7899
  %3 = icmp eq i32 %2, 0, !dbg !7900
  br i1 %3, label %8, label %4, !dbg !7900

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !7894, metadata !DIExpression(DW_OP_deref)), !dbg !7901
  %5 = call fastcc i32 @uart_fifo_read.35(i8* noundef nonnull %1) #24, !dbg !7902
  %6 = call fastcc i32 @uart_irq_rx_ready.34() #24, !dbg !7899
  %7 = icmp eq i32 %6, 0, !dbg !7900
  br i1 %7, label %8, label %4, !dbg !7900, !llvm.loop !7904

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.36() #24, !dbg !7906
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #22, !dbg !7907
  ret void, !dbg !7907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.32() unnamed_addr #1 !dbg !7908 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7910, metadata !DIExpression()), !dbg !7911
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7912, !srcloc !7914
  tail call fastcc void @z_impl_uart_irq_rx_disable.45() #24, !dbg !7915
  ret void, !dbg !7916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.33() unnamed_addr #1 !dbg !7917 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7919, metadata !DIExpression()), !dbg !7920
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7921, !srcloc !7923
  tail call fastcc void @z_impl_uart_irq_tx_disable.44() #24, !dbg !7924
  ret void, !dbg !7925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !7926 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7930, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !7931, metadata !DIExpression()), !dbg !7932
  tail call fastcc void @uart_irq_callback_user_data_set.38() #24, !dbg !7933
  ret void, !dbg !7934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.34() unnamed_addr #1 !dbg !7935 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7937, metadata !DIExpression()), !dbg !7939
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7940
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7938, metadata !DIExpression()), !dbg !7939
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !7941
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !7941
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !7943
  br i1 %4, label %7, label %5, !dbg !7944

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !7945
  br label %7, !dbg !7946

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !7939
  ret i32 %8, !dbg !7947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.35(i8* noundef %0) unnamed_addr #1 !dbg !7948 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7950, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i8* %0, metadata !7951, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i32 1, metadata !7952, metadata !DIExpression()), !dbg !7954
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7955
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7953, metadata !DIExpression()), !dbg !7954
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !7956
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !7956
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !7958
  br i1 %5, label %8, label %6, !dbg !7959

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8* noundef %0, i32 noundef 1) #23, !dbg !7960
  br label %8, !dbg !7961

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !7954
  ret i32 %9, !dbg !7962
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.36() unnamed_addr #1 !dbg !7963 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7965, metadata !DIExpression()), !dbg !7966
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !7967, !srcloc !7969
  tail call fastcc void @z_impl_uart_irq_rx_enable.37() #24, !dbg !7970
  ret void, !dbg !7971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.37() unnamed_addr #1 !dbg !7972 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7974, metadata !DIExpression()), !dbg !7976
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7977
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7975, metadata !DIExpression()), !dbg !7976
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !7978
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !7978
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !7980
  br i1 %4, label %6, label %5, !dbg !7981

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !7982
  br label %6, !dbg !7984

6:                                                ; preds = %5, %0
  ret void, !dbg !7985
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !882 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !884, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %1, metadata !885, metadata !DIExpression()), !dbg !7986
  %4 = call fastcc i32 @uart_irq_update.39() #24, !dbg !7987
  %5 = icmp eq i32 %4, 0, !dbg !7987
  br i1 %5, label %96, label %6, !dbg !7988

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #24, !dbg !7989
  %8 = icmp eq i32 %7, 0, !dbg !7988
  br i1 %8, label %96, label %9, !dbg !7990

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7991
  %10 = call fastcc i32 @uart_irq_rx_ready.34() #24, !dbg !7992
  %11 = icmp eq i32 %10, 0, !dbg !7992
  br i1 %11, label %93, label %12, !dbg !7994, !llvm.loop !7995

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !886, metadata !DIExpression(DW_OP_deref)), !dbg !7997
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #24, !dbg !7998
  call void @llvm.dbg.value(metadata i32 %13, metadata !888, metadata !DIExpression()), !dbg !7997
  %14 = icmp slt i32 %13, 0, !dbg !7999
  br i1 %14, label %92, label %15, !dbg !8001

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !8002
  %17 = icmp eq i32 (i8)* %16, null, !dbg !8004
  br i1 %17, label %22, label %18, !dbg !8005

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !8006
  call void @llvm.dbg.value(metadata i8 %19, metadata !886, metadata !DIExpression()), !dbg !7997
  %20 = call i32 %16(i8 noundef zeroext %19) #23, !dbg !8007
  %21 = icmp eq i32 %20, 0, !dbg !8008
  br i1 %21, label %22, label %92, !dbg !8009

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8010
  %24 = icmp eq %struct.console_input* %23, null, !dbg !8010
  br i1 %24, label %25, label %30, !dbg !8011

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !8012
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !8012
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #24, !dbg !8012
  call void @llvm.dbg.value(metadata i8* %28, metadata !889, metadata !DIExpression()), !dbg !8013
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8014
  %29 = icmp eq i8* %28, null, !dbg !8015
  br i1 %29, label %92, label %30, !dbg !8017

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #24, !dbg !8018
  br i1 %31, label %32, label %36, !dbg !8020

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !8021
  call void @llvm.dbg.value(metadata i8 %33, metadata !886, metadata !DIExpression()), !dbg !7997
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8023
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !8023
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #24, !dbg !8024
  br label %93, !dbg !8025, !llvm.loop !7995

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #24, !dbg !8026
  %38 = load i8, i8* %3, align 1, !dbg !7997
  call void @llvm.dbg.value(metadata i8 %38, metadata !886, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8 %38, metadata !886, metadata !DIExpression()), !dbg !7997
  br i1 %37, label %39, label %42, !dbg !8028

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !8029
  br i1 %40, label %41, label %93, !dbg !8032, !llvm.loop !7995

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #24, !dbg !8033
  call fastcc void @atomic_set_bit(i32 noundef 2) #24, !dbg !8035
  br label %93, !dbg !8036, !llvm.loop !7995

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !8037
  %44 = call fastcc i32 @isprint(i32 noundef %43) #24, !dbg !8039
  %45 = icmp eq i32 %44, 0, !dbg !8039
  br i1 %45, label %46, label %81, !dbg !8040

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !886, metadata !DIExpression()), !dbg !7997
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !8041, !llvm.loop !7995

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !8043
  %49 = icmp eq i8 %48, 0, !dbg !8046
  br i1 %49, label %93, label %50, !dbg !8047, !llvm.loop !7995

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8048
  %52 = add i8 %48, -1, !dbg !8050
  store i8 %52, i8* @cur, align 1, !dbg !8050
  %53 = zext i8 %52 to i32, !dbg !8048
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !8048
  %55 = load i8, i8* @end, align 1, !dbg !8051
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #24, !dbg !8052
  br label %93, !dbg !8053, !llvm.loop !7995

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #24, !dbg !8054
  br label %93, !dbg !8055, !llvm.loop !7995

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8056
  %59 = load i8, i8* @cur, align 1, !dbg !8057
  %60 = zext i8 %59 to i32, !dbg !8057
  %61 = load i8, i8* @end, align 1, !dbg !8058
  %62 = zext i8 %61 to i32, !dbg !8058
  %63 = add nuw nsw i32 %62, %60, !dbg !8059
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !8056
  store i8 0, i8* %64, align 1, !dbg !8060
  call fastcc void @uart_poll_out.29(i8 noundef zeroext 13) #24, !dbg !8061
  call fastcc void @uart_poll_out.29(i8 noundef zeroext 10) #24, !dbg !8062
  store i8 0, i8* @cur, align 1, !dbg !8063
  store i8 0, i8* @end, align 1, !dbg !8064
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !8065
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !8065
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8065
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #23, !dbg !8065
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8067
  br label %93, !dbg !8068, !llvm.loop !7995

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8069
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !8069
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !8071
  br i1 %73, label %93, label %74, !dbg !8071, !llvm.loop !7995

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8072
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !8072
  %77 = load i8, i8* @cur, align 1, !dbg !8074
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #23, !dbg !8075
  %79 = load i8, i8* @cur, align 1, !dbg !8076
  %80 = add i8 %79, %78, !dbg !8076
  store i8 %80, i8* @cur, align 1, !dbg !8076
  br label %93, !dbg !8077, !llvm.loop !7995

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !8078
  %83 = zext i8 %82 to i32, !dbg !8078
  %84 = load i8, i8* @end, align 1, !dbg !8080
  %85 = zext i8 %84 to i32, !dbg !8080
  %86 = add nuw nsw i32 %85, %83, !dbg !8081
  %87 = icmp ult i32 %86, 127, !dbg !8082
  br i1 %87, label %88, label %93, !dbg !8083

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8084
  %90 = add i8 %82, 1, !dbg !8086
  store i8 %90, i8* @cur, align 1, !dbg !8086
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !8084
  call void @llvm.dbg.value(metadata i8 %38, metadata !886, metadata !DIExpression()), !dbg !7997
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #24, !dbg !8087
  br label %93, !dbg !8088

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7996
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7996
  %94 = call fastcc i32 @uart_irq_update.39() #24, !dbg !7987
  %95 = icmp eq i32 %94, 0, !dbg !7987
  br i1 %95, label %96, label %6, !dbg !7988

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !8089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.38() unnamed_addr #1 !dbg !8090 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8092, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8093, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.value(metadata i8* null, metadata !8094, metadata !DIExpression()), !dbg !8096
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8097
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8095, metadata !DIExpression()), !dbg !8096
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !8098
  br i1 %2, label %8, label %3, !dbg !8100

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !8101
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !8101
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !8102
  br i1 %6, label %8, label %7, !dbg !8103

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_198, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #23, !dbg !8104
  br label %8, !dbg !8106

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !8107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.39() unnamed_addr #1 !dbg !8108 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8110, metadata !DIExpression()), !dbg !8111
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !8112, !srcloc !8114
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.43() #24, !dbg !8115
  ret i32 %1, !dbg !8116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !8117 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8119, metadata !DIExpression()), !dbg !8120
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !8121, !srcloc !8123
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #24, !dbg !8124
  ret i32 %1, !dbg !8125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !8126 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8130, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.value(metadata i8* %0, metadata !8131, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.value(metadata i32 1, metadata !8132, metadata !DIExpression()), !dbg !8134
  %2 = tail call fastcc i32 @uart_fifo_read.35(i8* noundef %0) #24, !dbg !8135
  call void @llvm.dbg.value(metadata i32 %2, metadata !8133, metadata !DIExpression()), !dbg !8134
  %3 = icmp slt i32 %2, 0, !dbg !8136
  br i1 %3, label %4, label %5, !dbg !8138

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.32() #24, !dbg !8139
  br label %5, !dbg !8141

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !8134
  ret i32 %6, !dbg !8142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !8143 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8153, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !8152, metadata !DIExpression()), !dbg !8154
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !8155, !srcloc !8157
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #23, !dbg !8158
  ret i8* %2, !dbg !8159
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !8160 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8166, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.value(metadata i32 %0, metadata !8167, metadata !DIExpression()), !dbg !8170
  %2 = tail call fastcc i32 @atomic_get() #24, !dbg !8171
  call void @llvm.dbg.value(metadata i32 %2, metadata !8168, metadata !DIExpression()), !dbg !8170
  %3 = and i32 %0, 31, !dbg !8172
  %4 = shl nuw i32 1, %3, !dbg !8173
  %5 = and i32 %2, %4, !dbg !8173
  %6 = icmp ne i32 %5, 0, !dbg !8173
  ret i1 %6, !dbg !8174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !8175 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8179, metadata !DIExpression()), !dbg !8182
  call void @llvm.dbg.value(metadata i8* %1, metadata !8180, metadata !DIExpression()), !dbg !8182
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #24, !dbg !8183
  br i1 %3, label %4, label %11, !dbg !8185

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !8186
  %6 = tail call fastcc i32 @isdigit.40(i32 noundef %5) #24, !dbg !8189
  %7 = icmp eq i32 %6, 0, !dbg !8189
  br i1 %7, label %8, label %9, !dbg !8190

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !8191
  br label %34, !dbg !8193

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #24, !dbg !8194
  %10 = add nsw i32 %5, -48, !dbg !8195
  store i32 %10, i32* @ansi_val, align 4, !dbg !8196
  store i32 0, i32* @ansi_val_2, align 4, !dbg !8197
  br label %81, !dbg !8198

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #24, !dbg !8199
  br i1 %12, label %13, label %34, !dbg !8201

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !8202
  %15 = tail call fastcc i32 @isdigit.40(i32 noundef %14) #24, !dbg !8205
  %16 = icmp eq i32 %15, 0, !dbg !8205
  br i1 %16, label %29, label %17, !dbg !8206

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #24, !dbg !8207
  br i1 %18, label %19, label %24, !dbg !8210

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !8211
  %21 = mul i32 %20, 10, !dbg !8211
  %22 = add nsw i32 %14, -48, !dbg !8213
  %23 = add i32 %22, %21, !dbg !8214
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !8214
  br label %81, !dbg !8215

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !8216
  %26 = mul i32 %25, 10, !dbg !8216
  %27 = add nsw i32 %14, -48, !dbg !8218
  %28 = add i32 %27, %26, !dbg !8219
  store i32 %28, i32* @ansi_val, align 4, !dbg !8219
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !8220
  br i1 %30, label %31, label %33, !dbg !8222

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #24, !dbg !8223
  br i1 %32, label %33, label %81, !dbg !8224

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #24, !dbg !8225
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #24, !dbg !8226
  br label %34, !dbg !8227

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !8181), !dbg !8228
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !8229

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !8230
  %37 = load i8, i8* @cur, align 1, !dbg !8233
  %38 = zext i8 %37 to i32, !dbg !8233
  %39 = icmp ugt i32 %36, %38, !dbg !8234
  br i1 %39, label %80, label %40, !dbg !8235

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !8236
  %42 = trunc i32 %36 to i8, !dbg !8236
  %43 = add i8 %41, %42, !dbg !8236
  store i8 %43, i8* @end, align 1, !dbg !8236
  %44 = sub i8 %37, %42, !dbg !8237
  store i8 %44, i8* @cur, align 1, !dbg !8237
  tail call fastcc void @cursor_backward(i32 noundef %36) #24, !dbg !8238
  br label %80, !dbg !8239

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !8240
  %47 = load i8, i8* @end, align 1, !dbg !8242
  %48 = zext i8 %47 to i32, !dbg !8242
  %49 = icmp ugt i32 %46, %48, !dbg !8243
  br i1 %49, label %80, label %50, !dbg !8244

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !8245
  %52 = sub i8 %47, %51, !dbg !8245
  store i8 %52, i8* @end, align 1, !dbg !8245
  %53 = load i8, i8* @cur, align 1, !dbg !8246
  %54 = add i8 %53, %51, !dbg !8246
  store i8 %54, i8* @cur, align 1, !dbg !8246
  tail call fastcc void @cursor_forward(i32 noundef %46) #24, !dbg !8247
  br label %80, !dbg !8248

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !8249
  %57 = icmp eq i8 %56, 0, !dbg !8249
  br i1 %57, label %80, label %58, !dbg !8251

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !8252
  tail call fastcc void @cursor_backward(i32 noundef %59) #24, !dbg !8253
  %60 = load i8, i8* @cur, align 1, !dbg !8254
  %61 = load i8, i8* @end, align 1, !dbg !8255
  %62 = add i8 %61, %60, !dbg !8255
  store i8 %62, i8* @end, align 1, !dbg !8255
  store i8 0, i8* @cur, align 1, !dbg !8256
  br label %80, !dbg !8257

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !8258
  %65 = icmp eq i8 %64, 0, !dbg !8258
  br i1 %65, label %80, label %66, !dbg !8260

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !8261
  tail call fastcc void @cursor_forward(i32 noundef %67) #24, !dbg !8262
  %68 = load i8, i8* @end, align 1, !dbg !8263
  %69 = load i8, i8* @cur, align 1, !dbg !8264
  %70 = add i8 %69, %68, !dbg !8264
  store i8 %70, i8* @cur, align 1, !dbg !8264
  store i8 0, i8* @end, align 1, !dbg !8265
  br label %80, !dbg !8266

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !8267
  %73 = icmp eq i8 %72, 0, !dbg !8267
  br i1 %73, label %80, label %74, !dbg !8269

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #24, !dbg !8270
  %75 = load i8, i8* @cur, align 1, !dbg !8271
  %76 = zext i8 %75 to i32, !dbg !8272
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !8272
  %78 = load i8, i8* @end, align 1, !dbg !8273
  %79 = add i8 %78, -1, !dbg !8273
  store i8 %79, i8* @end, align 1, !dbg !8273
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #24, !dbg !8274
  br label %80, !dbg !8275

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #24, !dbg !8276
  br label %81, !dbg !8277

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !8277
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8278 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8283, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 %0, metadata !8284, metadata !DIExpression()), !dbg !8287
  %2 = and i32 %0, 31, !dbg !8288
  %3 = shl nuw i32 1, %2, !dbg !8288
  call void @llvm.dbg.value(metadata i32 %3, metadata !8285, metadata !DIExpression()), !dbg !8287
  %4 = xor i32 %3, -1, !dbg !8289
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #24, !dbg !8290
  call void @llvm.dbg.value(metadata i32 %5, metadata !8286, metadata !DIExpression()), !dbg !8287
  %6 = and i32 %5, %3, !dbg !8291
  %7 = icmp ne i32 %6, 0, !dbg !8292
  ret i1 %7, !dbg !8293
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !8294 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8298, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i32 %0, metadata !8299, metadata !DIExpression()), !dbg !8301
  %2 = and i32 %0, 31, !dbg !8302
  %3 = shl nuw i32 1, %2, !dbg !8302
  call void @llvm.dbg.value(metadata i32 %3, metadata !8300, metadata !DIExpression()), !dbg !8301
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #24, !dbg !8303
  ret void, !dbg !8304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !8305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8307, metadata !DIExpression()), !dbg !8308
  %2 = add i32 %0, -32, !dbg !8309
  %3 = icmp ult i32 %2, 95, !dbg !8309
  %4 = zext i1 %3 to i32, !dbg !8309
  ret i32 %4, !dbg !8310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8311 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8315, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.value(metadata i8 %1, metadata !8316, metadata !DIExpression()), !dbg !8317
  tail call fastcc void @uart_poll_out.29(i8 noundef zeroext 8) #24, !dbg !8318
  %3 = icmp eq i8 %1, 0, !dbg !8319
  br i1 %3, label %4, label %5, !dbg !8321

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.29(i8 noundef zeroext 32) #24, !dbg !8322
  tail call fastcc void @uart_poll_out.29(i8 noundef zeroext 8) #24, !dbg !8324
  br label %14, !dbg !8325

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #24, !dbg !8326
  call void @llvm.dbg.value(metadata i8 %1, metadata !8316, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.value(metadata i8* %0, metadata !8315, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.value(metadata i8 %1, metadata !8316, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8317
  br label %6, !dbg !8327

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !8316, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.value(metadata i8* %8, metadata !8315, metadata !DIExpression()), !dbg !8317
  %9 = add i8 %7, -1, !dbg !8328
  call void @llvm.dbg.value(metadata i8 %9, metadata !8316, metadata !DIExpression()), !dbg !8317
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8329
  %11 = load i8, i8* %10, align 1, !dbg !8331
  store i8 %11, i8* %8, align 1, !dbg !8332
  call void @llvm.dbg.value(metadata i8* %10, metadata !8315, metadata !DIExpression()), !dbg !8317
  tail call fastcc void @uart_poll_out.29(i8 noundef zeroext %11) #24, !dbg !8333
  call void @llvm.dbg.value(metadata i8 %9, metadata !8316, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8317
  %12 = icmp eq i8 %9, 0, !dbg !8334
  br i1 %12, label %13, label %6, !dbg !8327, !llvm.loop !8335

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.29(i8 noundef zeroext 32) #24, !dbg !8337
  tail call fastcc void @cursor_restore() #24, !dbg !8338
  br label %14, !dbg !8339

14:                                               ; preds = %13, %4
  ret void, !dbg !8339
}

; Function Attrs: optsize
declare !dbg !8340 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !8343 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8347, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8 %1, metadata !8348, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8 %2, metadata !8349, metadata !DIExpression()), !dbg !8351
  tail call fastcc void @uart_poll_out.29(i8 noundef zeroext %1) #24, !dbg !8352
  %4 = icmp eq i8 %2, 0, !dbg !8353
  br i1 %4, label %5, label %6, !dbg !8355

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !8356
  br label %17, !dbg !8358

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !8359
  call void @llvm.dbg.value(metadata i8 %7, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8* %0, metadata !8347, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8351
  store i8 %1, i8* %0, align 1, !dbg !8360
  tail call fastcc void @cursor_save() #24, !dbg !8361
  call void @llvm.dbg.value(metadata i8 %7, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8 %2, metadata !8349, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8* %0, metadata !8347, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8351
  call void @llvm.dbg.value(metadata i8 %2, metadata !8349, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8351
  br label %8, !dbg !8362

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8351
  call void @llvm.dbg.value(metadata i8 %10, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8 %11, metadata !8349, metadata !DIExpression()), !dbg !8351
  %13 = add i8 %11, -1, !dbg !8363
  call void @llvm.dbg.value(metadata i8 %13, metadata !8349, metadata !DIExpression()), !dbg !8351
  tail call fastcc void @uart_poll_out.29(i8 noundef zeroext %10) #24, !dbg !8364
  %14 = load i8, i8* %12, align 1, !dbg !8366
  call void @llvm.dbg.value(metadata i8 %14, metadata !8348, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8* %12, metadata !8347, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8351
  store i8 %10, i8* %12, align 1, !dbg !8367
  call void @llvm.dbg.value(metadata i8 %14, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8* %12, metadata !8347, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8351
  call void @llvm.dbg.value(metadata i8 %13, metadata !8349, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8351
  %15 = icmp eq i8 %13, 0, !dbg !8368
  br i1 %15, label %16, label %8, !dbg !8362, !llvm.loop !8369

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #24, !dbg !8371
  br label %17, !dbg !8372

17:                                               ; preds = %16, %5
  ret void, !dbg !8372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !8373 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !8374
  ret void, !dbg !8375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !8376 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #23, !dbg !8377
  ret void, !dbg !8378
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !8379 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8384, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 %0, metadata !8385, metadata !DIExpression()), !dbg !8386
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8387
  ret i32 %2, !dbg !8388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !8389 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8391, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32 %0, metadata !8392, metadata !DIExpression()), !dbg !8393
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8394
  ret i32 %2, !dbg !8395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.40(i32 noundef %0) unnamed_addr #11 !dbg !8396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8398, metadata !DIExpression()), !dbg !8399
  %2 = add i32 %0, -48, !dbg !8400
  %3 = icmp ult i32 %2, 10, !dbg !8401
  %4 = zext i1 %3 to i32, !dbg !8401
  ret i32 %4, !dbg !8402
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !8403 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8405, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i32 4, metadata !8406, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i32 16, metadata !8407, metadata !DIExpression()), !dbg !8409
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #24, !dbg !8410
  call void @llvm.dbg.value(metadata i32 %1, metadata !8408, metadata !DIExpression()), !dbg !8409
  %2 = and i32 %1, 16, !dbg !8411
  %3 = icmp ne i32 %2, 0, !dbg !8412
  ret i1 %3, !dbg !8413
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8414 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8416, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.value(metadata i32 %0, metadata !8417, metadata !DIExpression()), !dbg !8419
  %2 = and i32 %0, 31, !dbg !8420
  %3 = shl nuw i32 1, %2, !dbg !8420
  call void @llvm.dbg.value(metadata i32 %3, metadata !8418, metadata !DIExpression()), !dbg !8419
  %4 = xor i32 %3, -1, !dbg !8421
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #24, !dbg !8422
  ret void, !dbg !8423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !8424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8426, metadata !DIExpression()), !dbg !8427
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i32 noundef %0) #23, !dbg !8428
  ret void, !dbg !8429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !8430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8432, metadata !DIExpression()), !dbg !8433
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.41, i32 0, i32 0), i32 noundef %0) #23, !dbg !8434
  ret void, !dbg !8435
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !8436 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8440, metadata !DIExpression()), !dbg !8441
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !8442
  ret i32 %1, !dbg !8443
}

; Function Attrs: optsize
declare !dbg !8444 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !8445 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8447, metadata !DIExpression()), !dbg !8449
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8450
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8448, metadata !DIExpression()), !dbg !8449
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !8451
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8451
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8453
  br i1 %4, label %7, label %5, !dbg !8454

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !8455
  br label %7, !dbg !8456

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8449
  ret i32 %8, !dbg !8457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.43() unnamed_addr #1 !dbg !8458 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8460, metadata !DIExpression()), !dbg !8462
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8463
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8461, metadata !DIExpression()), !dbg !8462
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !8464
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8464
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8466
  br i1 %4, label %7, label %5, !dbg !8467

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !8468
  br label %7, !dbg !8469

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8462
  ret i32 %8, !dbg !8470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.44() unnamed_addr #1 !dbg !8471 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8473, metadata !DIExpression()), !dbg !8475
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8476
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8474, metadata !DIExpression()), !dbg !8475
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !8477
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8477
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8479
  br i1 %4, label %6, label %5, !dbg !8480

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !8481
  br label %6, !dbg !8483

6:                                                ; preds = %5, %0
  ret void, !dbg !8484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.45() unnamed_addr #1 !dbg !8485 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8487, metadata !DIExpression()), !dbg !8489
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8490
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8488, metadata !DIExpression()), !dbg !8489
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !8491
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8491
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8493
  br i1 %4, label %6, label %5, !dbg !8494

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !8495
  br label %6, !dbg !8497

6:                                                ; preds = %5, %0
  ret void, !dbg !8498
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8499 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8501, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i8 %1, metadata !8502, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i32 %2, metadata !8503, metadata !DIExpression()), !dbg !8514
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8515
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !8515
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !8515
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !8504, metadata !DIExpression()), !dbg !8514
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !8516
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !8516
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !8506, metadata !DIExpression()), !dbg !8514
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !8517
  %13 = icmp eq i32 %12, 196608, !dbg !8517
  br i1 %13, label %66, label %14, !dbg !8517

14:                                               ; preds = %3
  %15 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !8519
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #22, !dbg !8519
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !8507, metadata !DIExpression()), !dbg !8520
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !8521
  %17 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %16, align 4, !dbg !8521
  %18 = zext i8 %1 to i32, !dbg !8522
  %19 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, i32 1, !dbg !8523
  %20 = load i32, i32* %19, align 4, !dbg !8523
  %21 = inttoptr i32 %20 to i32*, !dbg !8524
  call void @llvm.dbg.value(metadata i32* %21, metadata !8512, metadata !DIExpression()), !dbg !8514
  %22 = load volatile i32, i32* %21, align 4, !dbg !8525
  call void @llvm.dbg.value(metadata i32 %22, metadata !8513, metadata !DIExpression()), !dbg !8514
  %23 = and i32 %2, 2, !dbg !8526
  %24 = icmp eq i32 %23, 0, !dbg !8528
  br i1 %24, label %25, label %64, !dbg !8529

25:                                               ; preds = %14
  %26 = and i32 %2, 48, !dbg !8530
  %27 = icmp eq i32 %26, 0, !dbg !8530
  br i1 %27, label %36, label %28, !dbg !8530

28:                                               ; preds = %25
  %29 = and i32 %2, 16, !dbg !8532
  %30 = icmp eq i32 %29, 0, !dbg !8533
  call void @llvm.dbg.value(metadata i32 %22, metadata !8513, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !8514
  br i1 %30, label %33, label %31, !dbg !8534

31:                                               ; preds = %28
  %32 = or i32 %22, 48, !dbg !8536
  call void @llvm.dbg.value(metadata i32 %32, metadata !8513, metadata !DIExpression()), !dbg !8514
  br label %38, !dbg !8539

33:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %22, metadata !8513, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !8514
  %34 = and i32 %22, -49, !dbg !8540
  %35 = or i32 %34, 16, !dbg !8540
  call void @llvm.dbg.value(metadata i32 %35, metadata !8513, metadata !DIExpression()), !dbg !8514
  br label %38

36:                                               ; preds = %25
  %37 = and i32 %22, -17, !dbg !8542
  call void @llvm.dbg.value(metadata i32 %37, metadata !8513, metadata !DIExpression()), !dbg !8514
  br label %38

38:                                               ; preds = %31, %33, %36
  %39 = phi i32 [ %32, %31 ], [ %35, %33 ], [ %37, %36 ], !dbg !8544
  call void @llvm.dbg.value(metadata i32 %39, metadata !8513, metadata !DIExpression()), !dbg !8514
  %40 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, !dbg !8545
  %41 = bitcast %struct.pinctrl_soc_pinmux* %40 to i8*, !dbg !8546
  %42 = call i8* @memcpy(i8* noundef nonnull %15, i8* noundef %41, i32 noundef 20) #23, !dbg !8547
  %43 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !8548
  store i32 %39, i32* %43, align 4, !dbg !8549
  %44 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #23, !dbg !8550
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #23, !dbg !8551
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #23, !dbg !8552
  br i1 %11, label %58, label %45, !dbg !8553

45:                                               ; preds = %38
  %46 = and i32 %2, 262144, !dbg !8554
  %47 = icmp eq i32 %46, 0, !dbg !8558
  br i1 %47, label %48, label %51, !dbg !8559

48:                                               ; preds = %45
  %49 = and i32 %2, 524288, !dbg !8560
  %50 = icmp eq i32 %49, 0, !dbg !8562
  br i1 %50, label %53, label %51, !dbg !8563

51:                                               ; preds = %48, %45
  %52 = phi i32 [ 0, %45 ], [ 1, %48 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %18, i32 noundef %52) #23, !dbg !8564
  br label %53, !dbg !8565

53:                                               ; preds = %51, %48
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !8565
  %55 = load volatile i32, i32* %54, align 4, !dbg !8565
  %56 = shl nuw i32 1, %18, !dbg !8565
  %57 = or i32 %55, %56, !dbg !8565
  store volatile i32 %57, i32* %54, align 4, !dbg !8565
  br label %64, !dbg !8566

58:                                               ; preds = %38
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !8567
  %60 = load volatile i32, i32* %59, align 4, !dbg !8567
  %61 = shl nuw i32 1, %18, !dbg !8567
  %62 = xor i32 %61, -1, !dbg !8567
  %63 = and i32 %60, %62, !dbg !8567
  store volatile i32 %63, i32* %59, align 4, !dbg !8567
  br label %64

64:                                               ; preds = %53, %58, %14
  %65 = phi i32 [ -134, %14 ], [ 0, %58 ], [ 0, %53 ], !dbg !8514
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #22, !dbg !8569
  br label %66

66:                                               ; preds = %3, %64
  %67 = phi i32 [ %65, %64 ], [ -134, %3 ], !dbg !8514
  ret i32 %67, !dbg !8569
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8570 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8574, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.value(metadata i32* %1, metadata !8575, metadata !DIExpression()), !dbg !8578
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8579
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8579
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8579
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8576, metadata !DIExpression()), !dbg !8578
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8580
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8580
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8577, metadata !DIExpression()), !dbg !8578
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !8581
  store i32 %8, i32* %1, align 4, !dbg !8582
  ret i32 0, !dbg !8583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8584 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8586, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.value(metadata i32 %1, metadata !8587, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.value(metadata i32 %2, metadata !8588, metadata !DIExpression()), !dbg !8591
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8592
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !8592
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !8592
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !8589, metadata !DIExpression()), !dbg !8591
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !8593
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !8593
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !8590, metadata !DIExpression()), !dbg !8591
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #24, !dbg !8594
  %10 = xor i32 %1, -1, !dbg !8595
  %11 = and i32 %9, %10, !dbg !8596
  %12 = and i32 %2, %1, !dbg !8597
  %13 = or i32 %11, %12, !dbg !8598
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #24, !dbg !8599
  ret i32 0, !dbg !8600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8601 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8603, metadata !DIExpression()), !dbg !8607
  call void @llvm.dbg.value(metadata i32 %1, metadata !8604, metadata !DIExpression()), !dbg !8607
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8608
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8608
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8608
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8605, metadata !DIExpression()), !dbg !8607
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8609
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8609
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8606, metadata !DIExpression()), !dbg !8607
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !8610
  %9 = or i32 %8, %1, !dbg !8611
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #24, !dbg !8612
  ret i32 0, !dbg !8613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8614 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8616, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata i32 %1, metadata !8617, metadata !DIExpression()), !dbg !8620
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8621
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8621
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8621
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8618, metadata !DIExpression()), !dbg !8620
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8622
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8622
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8619, metadata !DIExpression()), !dbg !8620
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !8623
  %9 = xor i32 %1, -1, !dbg !8624
  %10 = and i32 %8, %9, !dbg !8625
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #24, !dbg !8626
  ret i32 0, !dbg !8627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8630, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i32 %1, metadata !8631, metadata !DIExpression()), !dbg !8634
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8635
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8635
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8635
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8632, metadata !DIExpression()), !dbg !8634
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8636
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8636
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8633, metadata !DIExpression()), !dbg !8634
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !8637
  %9 = xor i32 %8, %1, !dbg !8638
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #24, !dbg !8639
  ret i32 0, !dbg !8640
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8641 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8643, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata i8 %1, metadata !8644, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata i32 %2, metadata !8645, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata i32 %3, metadata !8646, metadata !DIExpression()), !dbg !8653
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8654
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !8654
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !8654
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !8647, metadata !DIExpression()), !dbg !8653
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !8655
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !8655
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !8648, metadata !DIExpression()), !dbg !8653
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !8656
  %11 = load volatile i32, i32* %10, align 4, !dbg !8656
  %12 = zext i8 %1 to i32, !dbg !8658
  %13 = shl nuw i32 1, %12, !dbg !8658
  %14 = and i32 %11, %13, !dbg !8659
  %15 = icmp ne i32 %14, 0, !dbg !8660
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !8661
  br i1 %17, label %77, label %18, !dbg !8661

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !8662
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !8664
  br i1 %21, label %29, label %22, !dbg !8664

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !8665
  br i1 %24, label %29, label %25, !dbg !8665

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !8667
  %27 = and i1 %26, %23, !dbg !8669
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !8670
  call void @llvm.dbg.value(metadata i32 %30, metadata !8651, metadata !DIExpression()), !dbg !8653
  %31 = icmp ult i8 %1, 16, !dbg !8671
  br i1 %31, label %32, label %35, !dbg !8673

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !8674
  call void @llvm.dbg.value(metadata i8 %33, metadata !8652, metadata !DIExpression()), !dbg !8653
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !8676
  call void @llvm.dbg.value(metadata i32* %34, metadata !8649, metadata !DIExpression()), !dbg !8653
  br label %41, !dbg !8677

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !8678
  br i1 %36, label %37, label %77, !dbg !8680

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !8681
  %39 = add nsw i8 %38, -32, !dbg !8681
  call void @llvm.dbg.value(metadata i8 %39, metadata !8652, metadata !DIExpression()), !dbg !8653
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !8683
  call void @llvm.dbg.value(metadata i32* %40, metadata !8649, metadata !DIExpression()), !dbg !8653
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !8684
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !8684
  call void @llvm.dbg.value(metadata i8 %43, metadata !8652, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata i32* %42, metadata !8649, metadata !DIExpression()), !dbg !8653
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !8685, !srcloc !8691
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !8685
  call void @llvm.dbg.value(metadata i32 %45, metadata !8688, metadata !DIExpression()) #22, !dbg !8692
  call void @llvm.dbg.value(metadata i32 undef, metadata !8689, metadata !DIExpression()) #22, !dbg !8692
  call void @llvm.dbg.value(metadata i32 %45, metadata !8650, metadata !DIExpression()), !dbg !8653
  %46 = load volatile i32, i32* %42, align 4, !dbg !8693
  %47 = zext i8 %43 to i32, !dbg !8694
  %48 = shl nuw i32 3, %47, !dbg !8695
  %49 = xor i32 %48, -1, !dbg !8696
  %50 = and i32 %46, %49, !dbg !8697
  %51 = shl nuw i32 %30, %47, !dbg !8698
  %52 = or i32 %50, %51, !dbg !8699
  store volatile i32 %52, i32* %42, align 4, !dbg !8700
  %53 = icmp eq i32 %3, 100663296, !dbg !8701
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !8701
  %55 = load volatile i32, i32* %54, align 4, !dbg !8701
  %56 = or i32 %55, %13, !dbg !8701
  %57 = xor i32 %13, -1, !dbg !8701
  %58 = and i32 %55, %57, !dbg !8701
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !8701
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !8701
  store volatile i32 %59, i32* %60, align 4, !dbg !8701
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !8702
  %62 = load volatile i32, i32* %61, align 4, !dbg !8702
  br i1 %16, label %63, label %68, !dbg !8702

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !8702
  store volatile i32 %64, i32* %61, align 4, !dbg !8702
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !8703
  %66 = load volatile i32, i32* %65, align 4, !dbg !8703
  %67 = or i32 %66, %13, !dbg !8703
  br label %74, !dbg !8703

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !8702
  %70 = and i32 %62, %69, !dbg !8702
  store volatile i32 %70, i32* %61, align 4, !dbg !8702
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !8703
  %72 = load volatile i32, i32* %71, align 4, !dbg !8703
  %73 = and i32 %72, %69, !dbg !8703
  br label %74, !dbg !8703

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !8703
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !8703
  store volatile i32 %75, i32* %76, align 4, !dbg !8703
  call void @llvm.dbg.value(metadata i32 %45, metadata !8704, metadata !DIExpression()) #22, !dbg !8707
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #22, !dbg !8709, !srcloc !8710
  br label %77, !dbg !8711

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !8653
  ret i32 %78, !dbg !8712
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8713 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8715, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8716, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i1 %2, metadata !8717, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8720
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8721
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !8721
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !8721
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !8718, metadata !DIExpression()), !dbg !8720
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !8722
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !8723
  ret i32 %8, !dbg !8724
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8725 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8731, metadata !DIExpression()), !dbg !8734
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8732, metadata !DIExpression()), !dbg !8734
  call void @llvm.dbg.value(metadata i1 %2, metadata !8733, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8734
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !8735
  br i1 %4, label %10, label %5, !dbg !8737

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8738
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !8741
  %8 = or i1 %7, %2, !dbg !8742
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8742
  br i1 %2, label %11, label %13, !dbg !8742

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8743

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8744
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !8747
  br label %13, !dbg !8748

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8734
  ret i32 %14, !dbg !8749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8750 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8754, metadata !DIExpression()), !dbg !8755
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8756
  %3 = icmp eq %struct._snode* %2, null, !dbg !8756
  ret i1 %3, !dbg !8756
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8757 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8761, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8762, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8763, metadata !DIExpression()), !dbg !8765
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8766
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8763, metadata !DIExpression()), !dbg !8765
  %4 = icmp eq %struct._snode* %3, null, !dbg !8768
  br i1 %4, label %15, label %5, !dbg !8766

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8763, metadata !DIExpression()), !dbg !8765
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8770
  br i1 %6, label %9, label %11, !dbg !8773

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8763, metadata !DIExpression()), !dbg !8765
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8770
  br i1 %8, label %9, label %11, !dbg !8773, !llvm.loop !8774

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !8775
  br label %15, !dbg !8775

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8763, metadata !DIExpression()), !dbg !8765
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !8768
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8764, metadata !DIExpression()), !dbg !8765
  %14 = icmp eq %struct._snode* %13, null, !dbg !8768
  br i1 %14, label %15, label %7, !dbg !8766, !llvm.loop !8774

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !8778 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8782, metadata !DIExpression()), !dbg !8784
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8783, metadata !DIExpression()), !dbg !8784
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8785
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !8785
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !8785
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8786
  %5 = icmp eq %struct._snode* %4, null, !dbg !8786
  br i1 %5, label %6, label %8, !dbg !8785

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8788
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !8788
  br label %8, !dbg !8788

8:                                                ; preds = %6, %2
  ret void, !dbg !8785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8790 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8794, metadata !DIExpression()), !dbg !8795
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8796
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8796
  ret %struct._snode* %3, !dbg !8797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8798 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8802, metadata !DIExpression()), !dbg !8804
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8803, metadata !DIExpression()), !dbg !8804
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8805
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8806
  ret void, !dbg !8807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8808 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8810, metadata !DIExpression()), !dbg !8812
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8811, metadata !DIExpression()), !dbg !8812
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8813
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8814
  ret void, !dbg !8815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8816 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8818, metadata !DIExpression()), !dbg !8819
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8820
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8820
  ret %struct._snode* %3, !dbg !8821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8822 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8824, metadata !DIExpression()), !dbg !8826
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8825, metadata !DIExpression()), !dbg !8826
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8827
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8828
  ret void, !dbg !8829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !8830 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8834, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8835, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8836, metadata !DIExpression()), !dbg !8837
  %4 = icmp eq %struct._snode* %1, null, !dbg !8838
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !8840
  br i1 %4, label %6, label %11, !dbg !8841

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !8842
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8844
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8844
  br i1 %8, label %9, label %15, !dbg !8842

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8846
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !8846
  br label %15, !dbg !8846

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !8848
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8850
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8850
  br i1 %13, label %14, label %15, !dbg !8848

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !8852
  br label %15, !dbg !8852

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !8841
  ret void, !dbg !8841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8854 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8858, metadata !DIExpression()), !dbg !8859
  %2 = icmp eq %struct._snode* %0, null, !dbg !8860
  br i1 %2, label %5, label %3, !dbg !8860

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !8860
  br label %5, !dbg !8860

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8860
  ret %struct._snode* %6, !dbg !8860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8861 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8863, metadata !DIExpression()), !dbg !8864
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !8865
  ret %struct._snode* %2, !dbg !8865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8866 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8868, metadata !DIExpression()), !dbg !8869
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8870
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8870
  ret %struct._snode* %3, !dbg !8871
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #16 !dbg !8872 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !8876, metadata !DIExpression()), !dbg !8877
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !8878
  %3 = load volatile i32, i32* %2, align 4, !dbg !8878
  ret i32 %3, !dbg !8879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8880 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !8884, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.value(metadata i32 %1, metadata !8885, metadata !DIExpression()), !dbg !8886
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !8887
  store volatile i32 %1, i32* %3, align 4, !dbg !8888
  ret void, !dbg !8889
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !8890 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8894, metadata !DIExpression()), !dbg !8898
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8899
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !8899
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !8899
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !8895, metadata !DIExpression()), !dbg !8898
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8900
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !8900
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !8900
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !8896, metadata !DIExpression()), !dbg !8898
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !8901
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !8901
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !8902
  %11 = load volatile i32, i32* %10, align 4, !dbg !8902
  call void @llvm.dbg.value(metadata i32 %11, metadata !8897, metadata !DIExpression()), !dbg !8898
  store volatile i32 %11, i32* %10, align 4, !dbg !8903
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !8904
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #24, !dbg !8905
  ret void, !dbg !8906
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8907 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8911, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8912, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 %2, metadata !8913, metadata !DIExpression()), !dbg !8916
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8917
  %5 = icmp eq %struct._snode* %4, null, !dbg !8917
  br i1 %5, label %21, label %6, !dbg !8917

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !8919
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8915, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8914, metadata !DIExpression()), !dbg !8916
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8920
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8920
  %11 = load i32, i32* %10, align 4, !dbg !8920
  %12 = and i32 %11, %2, !dbg !8924
  %13 = icmp eq i32 %12, 0, !dbg !8924
  br i1 %13, label %19, label %14, !dbg !8925

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8914, metadata !DIExpression()), !dbg !8916
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8926
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8926
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8926
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #23, !dbg !8928
  br label %19, !dbg !8929

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8914, metadata !DIExpression()), !dbg !8916
  %20 = icmp eq %struct._snode* %8, null, !dbg !8930
  br i1 %20, label %21, label %6, !dbg !8930

21:                                               ; preds = %19, %3
  ret void, !dbg !8931
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1092 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1094, metadata !DIExpression()), !dbg !8932
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #23, !dbg !8933
  tail call void @arch_irq_enable(i32 noundef 64) #23, !dbg !8935
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #23, !dbg !8936
  tail call void @arch_irq_enable(i32 noundef 65) #23, !dbg !8935
  ret i32 0, !dbg !8935
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !8938 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8940, metadata !DIExpression()), !dbg !8944
  call void @llvm.dbg.value(metadata i8* %1, metadata !8941, metadata !DIExpression()), !dbg !8944
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8945
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !8945
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !8945
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !8945
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !8945
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !8942, metadata !DIExpression()), !dbg !8944
  call void @llvm.dbg.value(metadata i32 -1, metadata !8943, metadata !DIExpression()), !dbg !8944
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #24, !dbg !8946
  br i1 %8, label %9, label %13, !dbg !8948

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #24, !dbg !8949
  store i8 %10, i8* %1, align 1, !dbg !8951
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #24, !dbg !8952
  br i1 %11, label %12, label %13, !dbg !8954

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #23, !dbg !8955
  br label %13, !dbg !8957

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !8944
  call void @llvm.dbg.value(metadata i32 %14, metadata !8943, metadata !DIExpression()), !dbg !8944
  ret i32 %14, !dbg !8958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !8959 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8961, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i8 %1, metadata !8962, metadata !DIExpression()), !dbg !8964
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8965
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !8965
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !8965
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !8965
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !8965
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !8963, metadata !DIExpression()), !dbg !8964
  br label %8, !dbg !8966

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #24, !dbg !8967
  br i1 %9, label %10, label %8, !dbg !8966, !llvm.loop !8968

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #24, !dbg !8970
  ret void, !dbg !8971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #15 !dbg !8972 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8974, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i8* %1, metadata !8975, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i32 %2, metadata !8976, metadata !DIExpression()), !dbg !8979
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8980
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !8980
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !8980
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !8980
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8980
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !8977, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i32 0, metadata !8978, metadata !DIExpression()), !dbg !8979
  %9 = icmp eq i32 %2, 0, !dbg !8981
  br i1 %9, label %18, label %10, !dbg !8982

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8978, metadata !DIExpression()), !dbg !8979
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #24, !dbg !8983
  br i1 %12, label %13, label %18, !dbg !8984

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !8985
  %15 = load i8, i8* %14, align 1, !dbg !8985
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #24, !dbg !8987
  %16 = add nuw i32 %11, 1, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %16, metadata !8978, metadata !DIExpression()), !dbg !8979
  %17 = icmp eq i32 %16, %2, !dbg !8981
  br i1 %17, label %18, label %10, !dbg !8982, !llvm.loop !8989

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !8979
  ret i32 %19, !dbg !8991
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !8992 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8994, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i8* %1, metadata !8995, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 %2, metadata !8996, metadata !DIExpression()), !dbg !8999
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9000
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !9000
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !9000
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !9000
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !9000
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !8997, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 0, metadata !8998, metadata !DIExpression()), !dbg !8999
  %9 = icmp eq i32 %2, 0, !dbg !9001
  br i1 %9, label %18, label %10, !dbg !9002

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8998, metadata !DIExpression()), !dbg !8999
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #24, !dbg !9003
  br i1 %12, label %13, label %18, !dbg !9004

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #24, !dbg !9005
  %15 = add nuw i32 %11, 1, !dbg !9007
  call void @llvm.dbg.value(metadata i32 %15, metadata !8998, metadata !DIExpression()), !dbg !8999
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !9008
  store i8 %14, i8* %16, align 1, !dbg !9009
  %17 = icmp eq i32 %15, %2, !dbg !9001
  br i1 %17, label %18, label %10, !dbg !9002, !llvm.loop !9010

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !8999
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #24, !dbg !9012
  br i1 %20, label %21, label %22, !dbg !9014

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #23, !dbg !9015
  br label %22, !dbg !9017

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !9018
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9021, metadata !DIExpression()), !dbg !9023
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9024
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9024
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9024
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9024
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9024
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9022, metadata !DIExpression()), !dbg !9023
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #23, !dbg !9025
  ret void, !dbg !9026
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9029, metadata !DIExpression()), !dbg !9031
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9032
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9032
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9032
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9032
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9032
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9030, metadata !DIExpression()), !dbg !9031
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #23, !dbg !9033
  ret void, !dbg !9034
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9035 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9037, metadata !DIExpression()), !dbg !9039
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9040
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9040
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9040
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9040
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9040
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9038, metadata !DIExpression()), !dbg !9039
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #24, !dbg !9041
  %8 = zext i1 %7 to i32, !dbg !9041
  ret i32 %8, !dbg !9042
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9043 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9045, metadata !DIExpression()), !dbg !9047
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9048
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9048
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9048
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9048
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9048
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9046, metadata !DIExpression()), !dbg !9047
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #23, !dbg !9049
  ret void, !dbg !9050
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9051 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9053, metadata !DIExpression()), !dbg !9055
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9056
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9056
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9056
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9056
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9056
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9054, metadata !DIExpression()), !dbg !9055
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #23, !dbg !9057
  ret void, !dbg !9058
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9059 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9061, metadata !DIExpression()), !dbg !9063
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9064
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9064
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9064
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9064
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9064
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9062, metadata !DIExpression()), !dbg !9063
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #24, !dbg !9065
  %8 = zext i1 %7 to i32, !dbg !9065
  ret i32 %8, !dbg !9066
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9067 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9069, metadata !DIExpression()), !dbg !9071
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9072
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9072
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9072
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9072
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9072
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9070, metadata !DIExpression()), !dbg !9071
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #23, !dbg !9073
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #23, !dbg !9074
  ret void, !dbg !9075
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9076 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9078, metadata !DIExpression()), !dbg !9080
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9081
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9081
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9081
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9081
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9081
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9079, metadata !DIExpression()), !dbg !9080
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #23, !dbg !9082
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #23, !dbg !9083
  ret void, !dbg !9084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !9085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9087, metadata !DIExpression()), !dbg !9089
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9090
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9090
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9090
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9090
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9090
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9088, metadata !DIExpression()), !dbg !9089
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #24, !dbg !9091
  br i1 %7, label %11, label %8, !dbg !9092

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #24, !dbg !9093
  %10 = zext i1 %9 to i32, !dbg !9092
  br label %11, !dbg !9092

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !9094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9097, metadata !DIExpression()), !dbg !9098
  ret i32 1, !dbg !9099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !9100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9102, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9103, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i8* %2, metadata !9104, metadata !DIExpression()), !dbg !9107
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9108
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !9108
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !9108
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !9105, metadata !DIExpression()), !dbg !9107
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !9109
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9110
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !9111
  store i8* %2, i8** %8, align 4, !dbg !9112
  ret void, !dbg !9113
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9114 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9118, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i32 %1, metadata !9119, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i32* null, metadata !9120, metadata !DIExpression()), !dbg !9121
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9122
  %4 = lshr i32 %1, 16, !dbg !9123
  %5 = add i32 %4, %3, !dbg !9124
  %6 = inttoptr i32 %5 to i32*, !dbg !9125
  call void @llvm.dbg.value(metadata i32* %6, metadata !9120, metadata !DIExpression()), !dbg !9121
  %7 = load volatile i32, i32* %6, align 4, !dbg !9126
  %8 = and i32 %1, 65535, !dbg !9127
  %9 = shl nuw i32 1, %8, !dbg !9128
  %10 = and i32 %7, %9, !dbg !9128
  %11 = icmp ne i32 %10, 0, !dbg !9128
  ret i1 %11, !dbg !9129
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !9130 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9134, metadata !DIExpression()), !dbg !9135
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !9136
  %3 = load volatile i32, i32* %2, align 4, !dbg !9136
  %4 = trunc i32 %3 to i8, !dbg !9137
  ret i8 %4, !dbg !9138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !9139 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9143, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8 %1, metadata !9144, metadata !DIExpression()), !dbg !9145
  %3 = zext i8 %1 to i32, !dbg !9146
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !9147
  store volatile i32 %3, i32* %4, align 4, !dbg !9148
  ret void, !dbg !9149
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1393, metadata !DIExpression()), !dbg !9150
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #23, !dbg !9151
  tail call void @arch_irq_enable(i32 noundef 26) #23, !dbg !9153
  ret void, !dbg !9153
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !9154 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9156, metadata !DIExpression()), !dbg !9158
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9159
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !9159
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !9159
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !9157, metadata !DIExpression()), !dbg !9158
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !9160
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !9160
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !9162
  br i1 %7, label %11, label %8, !dbg !9163

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !9164
  %10 = load i8*, i8** %9, align 4, !dbg !9164
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #23, !dbg !9166
  br label %11, !dbg !9167

11:                                               ; preds = %8, %1
  ret void, !dbg !9168
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !9169 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9171, metadata !DIExpression()), !dbg !9186
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9187
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9187
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9187
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9187
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9187
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9172, metadata !DIExpression()), !dbg !9186
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !9173, metadata !DIExpression()), !dbg !9186
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !9188, !srcloc !9194
  call void @llvm.dbg.value(metadata i32 undef, metadata !9191, metadata !DIExpression()) #22, !dbg !9195
  call void @llvm.dbg.value(metadata i32 undef, metadata !9192, metadata !DIExpression()) #22, !dbg !9195
  call void @llvm.dbg.value(metadata i32 undef, metadata !9174, metadata !DIExpression()), !dbg !9186
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !9196
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #22, !dbg !9196
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !9176, metadata !DIExpression()), !dbg !9197
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !9198
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !9199
  %12 = load i32, i32* %11, align 4, !dbg !9199
  store i32 %12, i32* %10, align 4, !dbg !9198
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !9198
  store i32 32, i32* %13, align 4, !dbg !9198
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !9198
  store i32 0, i32* %14, align 4, !dbg !9198
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !9198
  store i32 0, i32* %15, align 4, !dbg !9198
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !9198
  store i32 6, i32* %16, align 4, !dbg !9198
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !9200
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !9200
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #24, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %19, metadata !9175, metadata !DIExpression()), !dbg !9186
  %20 = icmp eq i32 %19, 0, !dbg !9202
  br i1 %20, label %21, label %30, !dbg !9204

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !9198
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !9188
  call void @llvm.dbg.value(metadata i32 %23, metadata !9191, metadata !DIExpression()) #22, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %23, metadata !9174, metadata !DIExpression()), !dbg !9186
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #23, !dbg !9205
  store i32 %24, i32* %22, align 4, !dbg !9206
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #23, !dbg !9207
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #24, !dbg !9208
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #24, !dbg !9209
  call void @llvm.dbg.value(metadata i32 undef, metadata !9210, metadata !DIExpression()) #22, !dbg !9213
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #22, !dbg !9215, !srcloc !9216
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !9217
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !9217
  call void %26(%struct.device* noundef nonnull %0) #23, !dbg !9218
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !9219
  %28 = load i8, i8* %27, align 4, !dbg !9219
  %29 = zext i8 %28 to i32, !dbg !9220
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #23, !dbg !9221
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #24, !dbg !9222
  br label %30, !dbg !9223

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #22, !dbg !9224
  ret i32 %19, !dbg !9224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9225 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9229, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.value(metadata i8 0, metadata !9230, metadata !DIExpression()), !dbg !9233
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9234
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !9234
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9232, metadata !DIExpression(DW_OP_deref)), !dbg !9233
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #23, !dbg !9235
  call void @llvm.dbg.value(metadata i32 %4, metadata !9231, metadata !DIExpression()), !dbg !9233
  %5 = icmp slt i32 %4, 0, !dbg !9236
  br i1 %5, label %9, label %6, !dbg !9238

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9239
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9232, metadata !DIExpression()), !dbg !9233
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !9240
  br label %9, !dbg !9241

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9233
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !9242
  ret i32 %10, !dbg !9242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !9243 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9245, metadata !DIExpression()), !dbg !9247
  call void @llvm.dbg.value(metadata i8 2, metadata !9246, metadata !DIExpression()), !dbg !9247
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9248
  %3 = load volatile i32, i32* %2, align 4, !dbg !9248
  %4 = and i32 %3, -64513, !dbg !9249
  %5 = or i32 %4, 2048, !dbg !9250
  store volatile i32 %5, i32* %2, align 4, !dbg !9251
  ret void, !dbg !9252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !9253 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9255, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.value(metadata i8 1, metadata !9256, metadata !DIExpression()), !dbg !9257
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9258
  %3 = load volatile i32, i32* %2, align 4, !dbg !9258
  %4 = and i32 %3, -64, !dbg !9259
  %5 = or i32 %4, 1, !dbg !9260
  store volatile i32 %5, i32* %2, align 4, !dbg !9261
  ret void, !dbg !9262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !9263 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9267, metadata !DIExpression()), !dbg !9268
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9269
  %3 = load volatile i32, i32* %2, align 4, !dbg !9270
  %4 = or i32 %3, 1, !dbg !9270
  store volatile i32 %4, i32* %2, align 4, !dbg !9270
  ret void, !dbg !9271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9272 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9276, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9277, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata i32 0, metadata !9278, metadata !DIExpression()), !dbg !9279
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9280
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !9280
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9281
  %5 = load i8, i8* %4, align 4, !dbg !9281
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #23, !dbg !9282
  ret i32 %6, !dbg !9283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9286, metadata !DIExpression()), !dbg !9287
  tail call fastcc void @__NVIC_SetPriority.53() #24, !dbg !9288
  store i32 19999, i32* @last_load, align 4, !dbg !9289
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9290
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9291
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9292
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9293
  %3 = or i32 %2, 7, !dbg !9293
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9293
  ret i32 0, !dbg !9294
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.53() unnamed_addr #15 !dbg !9295 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9297, metadata !DIExpression()), !dbg !9299
  call void @llvm.dbg.value(metadata i32 1, metadata !9298, metadata !DIExpression()), !dbg !9299
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9300
  ret void, !dbg !9303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9304 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9306, metadata !DIExpression()), !dbg !9308
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !9309
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9310
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9311
  %5 = add i32 %4, %3, !dbg !9311
  store i32 %5, i32* @cycle_count, align 4, !dbg !9311
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9312
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9313
  %7 = sub i32 %5, %6, !dbg !9316
  %8 = udiv i32 %7, 20000, !dbg !9317
  call void @llvm.dbg.value(metadata i32 %8, metadata !9307, metadata !DIExpression()), !dbg !9308
  %9 = mul nuw i32 %8, 20000, !dbg !9318
  %10 = add i32 %9, %6, !dbg !9319
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9319
  tail call void @sys_clock_announce(i32 noundef %8) #23, !dbg !9320
  tail call void @z_arm_int_exit() #23, !dbg !9321
  ret void, !dbg !9322
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !9323 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9328
  call void @llvm.dbg.value(metadata i32 %1, metadata !9325, metadata !DIExpression()), !dbg !9329
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9330
  call void @llvm.dbg.value(metadata i32 %2, metadata !9326, metadata !DIExpression()), !dbg !9329
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9331
  call void @llvm.dbg.value(metadata i32 %3, metadata !9327, metadata !DIExpression()), !dbg !9329
  %4 = and i32 %2, 65536, !dbg !9332
  %5 = icmp ne i32 %4, 0, !dbg !9332
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !9334
  %8 = load i32, i32* @last_load, align 4, !dbg !9329
  br i1 %7, label %9, label %13, !dbg !9334

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9335
  %11 = add i32 %10, %8, !dbg !9335
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !9335
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9337
  br label %13, !dbg !9338

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !9339
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9340
  %16 = add i32 %14, %15, !dbg !9341
  ret i32 %16, !dbg !9342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9347, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i1 %1, metadata !9348, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9360
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !9361
  br i1 %4, label %5, label %8, !dbg !9361

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9363
  %7 = and i32 %6, -2, !dbg !9363
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9363
  store i32 -16777216, i32* @last_load, align 4, !dbg !9365
  br label %54, !dbg !9366

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !9367
  call void @llvm.dbg.value(metadata i32 %9, metadata !9352, metadata !DIExpression()), !dbg !9360
  br i1 %3, label %18, label %10, !dbg !9368

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !9368
  call void @llvm.dbg.value(metadata i32 undef, metadata !9347, metadata !DIExpression()), !dbg !9360
  %12 = icmp slt i32 %11, 1, !dbg !9369
  br i1 %12, label %18, label %13, !dbg !9369

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !9369
  %15 = select i1 %14, i32 %11, i32 837, !dbg !9369
  %16 = mul nuw nsw i32 %15, 20000, !dbg !9369
  %17 = add nuw nsw i32 %16, 19999, !dbg !9369
  br label %18, !dbg !9369

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9347, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9370, metadata !DIExpression()) #22, !dbg !9377
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !9379, !srcloc !9385
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %21, metadata !9382, metadata !DIExpression()) #22, !dbg !9386
  call void @llvm.dbg.value(metadata i32 undef, metadata !9383, metadata !DIExpression()) #22, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %21, metadata !9376, metadata !DIExpression()) #22, !dbg !9377
  call void @llvm.dbg.value(metadata i32 %21, metadata !9353, metadata !DIExpression()), !dbg !9360
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !9387
  call void @llvm.dbg.value(metadata i32 %22, metadata !9358, metadata !DIExpression()), !dbg !9360
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9388
  call void @llvm.dbg.value(metadata i32 %23, metadata !9350, metadata !DIExpression()), !dbg !9360
  %24 = load i32, i32* @cycle_count, align 4, !dbg !9389
  %25 = add i32 %24, %22, !dbg !9389
  store i32 %25, i32* @cycle_count, align 4, !dbg !9389
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9390
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !9391
  %27 = sub i32 %25, %26, !dbg !9392
  call void @llvm.dbg.value(metadata i32 %27, metadata !9359, metadata !DIExpression()), !dbg !9360
  %28 = icmp slt i32 %27, 0, !dbg !9393
  br i1 %28, label %38, label %29, !dbg !9395

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !9349, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 undef, metadata !9349, metadata !DIExpression()), !dbg !9360
  %30 = add nuw i32 %19, %27, !dbg !9396
  %31 = urem i32 %30, 20000, !dbg !9398
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !9349, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9360
  %32 = sub nuw nsw i32 %19, %31, !dbg !9399
  call void @llvm.dbg.value(metadata i32 %32, metadata !9349, metadata !DIExpression()), !dbg !9360
  %33 = icmp ugt i32 %32, 1250, !dbg !9400
  br i1 %33, label %34, label %36, !dbg !9400

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !9349, metadata !DIExpression()), !dbg !9360
  %35 = icmp ugt i32 %32, 16740000, !dbg !9401
  br i1 %35, label %38, label %36, !dbg !9403

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1250, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1250, %18 ], [ 16740000, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !9404
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %40, metadata !9351, metadata !DIExpression()), !dbg !9360
  %41 = add nsw i32 %39, -1, !dbg !9406
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9407
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9408
  %42 = icmp ult i32 %23, %40, !dbg !9409
  br i1 %42, label %43, label %48, !dbg !9411

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !9412
  %45 = add i32 %23, %9, !dbg !9414
  %46 = sub i32 %45, %40, !dbg !9415
  %47 = add i32 %46, %44, !dbg !9412
  br label %52, !dbg !9416

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !9417
  %50 = load i32, i32* @cycle_count, align 4, !dbg !9419
  %51 = add i32 %49, %50, !dbg !9419
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !9420
  store i32 %53, i32* @cycle_count, align 4, !dbg !9420
  call void @llvm.dbg.value(metadata i32 %21, metadata !9421, metadata !DIExpression()) #22, !dbg !9427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9426, metadata !DIExpression()) #22, !dbg !9427
  call void @llvm.dbg.value(metadata i32 %21, metadata !9429, metadata !DIExpression()) #22, !dbg !9432
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #22, !dbg !9434, !srcloc !9435
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !9436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9437 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9370, metadata !DIExpression()) #22, !dbg !9441
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !9443, !srcloc !9385
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %2, metadata !9382, metadata !DIExpression()) #22, !dbg !9445
  call void @llvm.dbg.value(metadata i32 undef, metadata !9383, metadata !DIExpression()) #22, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %2, metadata !9376, metadata !DIExpression()) #22, !dbg !9441
  call void @llvm.dbg.value(metadata i32 %2, metadata !9439, metadata !DIExpression()), !dbg !9446
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9447
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9448
  %5 = add i32 %4, %3, !dbg !9449
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9450
  %7 = sub i32 %5, %6, !dbg !9451
  call void @llvm.dbg.value(metadata i32 %7, metadata !9440, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata i32 %2, metadata !9421, metadata !DIExpression()) #22, !dbg !9452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9426, metadata !DIExpression()) #22, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %2, metadata !9429, metadata !DIExpression()) #22, !dbg !9454
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !9456, !srcloc !9435
  %8 = udiv i32 %7, 20000, !dbg !9457
  ret i32 %8, !dbg !9458
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9459 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9370, metadata !DIExpression()) #22, !dbg !9463
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !9465, !srcloc !9385
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9465
  call void @llvm.dbg.value(metadata i32 %2, metadata !9382, metadata !DIExpression()) #22, !dbg !9467
  call void @llvm.dbg.value(metadata i32 undef, metadata !9383, metadata !DIExpression()) #22, !dbg !9467
  call void @llvm.dbg.value(metadata i32 %2, metadata !9376, metadata !DIExpression()) #22, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %2, metadata !9461, metadata !DIExpression()), !dbg !9468
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9469
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9470
  %5 = add i32 %4, %3, !dbg !9471
  call void @llvm.dbg.value(metadata i32 %5, metadata !9462, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata i32 %2, metadata !9421, metadata !DIExpression()) #22, !dbg !9472
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9426, metadata !DIExpression()) #22, !dbg !9472
  call void @llvm.dbg.value(metadata i32 %2, metadata !9429, metadata !DIExpression()) #22, !dbg !9474
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !9476, !srcloc !9435
  ret i32 %5, !dbg !9477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !9478 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9479
  %2 = icmp eq i32 %1, -16777216, !dbg !9481
  br i1 %2, label %3, label %6, !dbg !9482

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9483
  %5 = or i32 %4, 1, !dbg !9483
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9483
  br label %6, !dbg !9485

6:                                                ; preds = %3, %0
  ret void, !dbg !9486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !9487 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9488
  %2 = and i32 %1, -2, !dbg !9488
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9488
  ret void, !dbg !9489
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !9490 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9523, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i8 %1, metadata !9524, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9525, metadata !DIExpression()), !dbg !9526
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9527
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9527
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9526
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9528
  %8 = load i8, i8* %6, align 4, !dbg !9529
  %9 = zext i8 %8 to i32, !dbg !9530
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9530
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9531
  br i1 %11, label %18, label %24, !dbg !9532

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9526
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9528
  %14 = load i8, i8* %6, align 4, !dbg !9529
  %15 = zext i8 %14 to i32, !dbg !9530
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9530
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9531
  br i1 %17, label %18, label %24, !dbg !9532, !llvm.loop !9533

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9535
  %21 = load i8, i8* %20, align 1, !dbg !9535
  %22 = icmp eq i8 %21, %1, !dbg !9538
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9539
  br i1 %22, label %24, label %12, !dbg !9540

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9526
  ret i32 %25, !dbg !9541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #11 !dbg !9542 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9544, metadata !DIExpression()), !dbg !9545
  ret i32 0, !dbg !9546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9547 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !9565, metadata !DIExpression()), !dbg !9578
  call void @llvm.dbg.value(metadata i8 %1, metadata !9566, metadata !DIExpression()), !dbg !9578
  call void @llvm.dbg.value(metadata i32 %2, metadata !9567, metadata !DIExpression()), !dbg !9578
  call void @llvm.dbg.value(metadata i8 0, metadata !9568, metadata !DIExpression()), !dbg !9579
  %4 = icmp eq i8 %1, 0, !dbg !9580
  br i1 %4, label %7, label %5, !dbg !9581

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9580
  br label %8, !dbg !9581

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !9582

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9568, metadata !DIExpression()), !dbg !9579
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !9583
  %11 = load i32, i32* %10, align 4, !dbg !9583
  call void @llvm.dbg.value(metadata i32 %11, metadata !9570, metadata !DIExpression()), !dbg !9584
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !9585
  %13 = load i8, i8* %12, align 4, !dbg !9585
  call void @llvm.dbg.value(metadata i8 %13, metadata !9573, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9584
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !9586
  %15 = load i32, i32* %14, align 4, !dbg !9586
  call void @llvm.dbg.value(metadata i32 %15, metadata !9574, metadata !DIExpression()), !dbg !9584
  call void @llvm.dbg.value(metadata i8 %13, metadata !9575, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9584
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !9587
  %17 = load i32, i32* %16, align 4, !dbg !9587
  call void @llvm.dbg.value(metadata i32 %17, metadata !9576, metadata !DIExpression()), !dbg !9584
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !9588
  %19 = load i32, i32* %18, align 4, !dbg !9588
  call void @llvm.dbg.value(metadata i32 %19, metadata !9577, metadata !DIExpression()), !dbg !9584
  %20 = and i8 %13, 15, !dbg !9589
  %21 = zext i8 %20 to i32, !dbg !9589
  %22 = lshr i32 %19, 27, !dbg !9590
  %23 = and i32 %22, 16, !dbg !9590
  %24 = or i32 %23, %21, !dbg !9591
  %25 = inttoptr i32 %11 to i32*, !dbg !9592
  store volatile i32 %24, i32* %25, align 4, !dbg !9593
  %26 = icmp eq i32 %15, 0, !dbg !9594
  br i1 %26, label %32, label %27, !dbg !9596

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !9597
  call void @llvm.dbg.value(metadata i8 %28, metadata !9575, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9584
  %29 = and i8 %28, 7, !dbg !9598
  %30 = zext i8 %29 to i32, !dbg !9598
  %31 = inttoptr i32 %15 to i32*, !dbg !9600
  store volatile i32 %30, i32* %31, align 4, !dbg !9601
  br label %32, !dbg !9602

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !9603
  br i1 %33, label %37, label %34, !dbg !9605

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !9606
  %36 = inttoptr i32 %17 to i32*, !dbg !9608
  store volatile i32 %35, i32* %36, align 4, !dbg !9609
  br label %37, !dbg !9610

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !9611
  call void @llvm.dbg.value(metadata i32 %38, metadata !9568, metadata !DIExpression()), !dbg !9579
  %39 = icmp eq i32 %38, %6, !dbg !9580
  br i1 %39, label %7, label %8, !dbg !9581, !llvm.loop !9612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !9614 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !9671, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %1, metadata !9672, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %2, metadata !9673, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %3, metadata !9674, metadata !DIExpression()), !dbg !9675
  %5 = inttoptr i32 %1 to i32*, !dbg !9676
  %6 = load volatile i32, i32* %5, align 4, !dbg !9676
  %7 = and i32 %6, -458816, !dbg !9677
  %8 = shl i32 %2, 16, !dbg !9678
  %9 = and i32 %8, 458752, !dbg !9678
  %10 = and i32 %3, 63, !dbg !9679
  %11 = or i32 %10, %9, !dbg !9680
  %12 = or i32 %11, %7, !dbg !9681
  store volatile i32 %12, i32* %5, align 4, !dbg !9682
  ret void, !dbg !9683
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #16 !dbg !9684 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !9688, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 %1, metadata !9689, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32* %2, metadata !9690, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32* %3, metadata !9691, metadata !DIExpression()), !dbg !9692
  %5 = inttoptr i32 %1 to i32*, !dbg !9693
  %6 = load volatile i32, i32* %5, align 4, !dbg !9693
  %7 = lshr i32 %6, 16, !dbg !9694
  %8 = and i32 %7, 7, !dbg !9694
  store i32 %8, i32* %2, align 4, !dbg !9695
  %9 = load volatile i32, i32* %5, align 4, !dbg !9696
  %10 = and i32 %9, 63, !dbg !9697
  store i32 %10, i32* %3, align 4, !dbg !9698
  ret void, !dbg !9699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #15 !dbg !9700 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !9704, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %1, metadata !9705, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %2, metadata !9706, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %3, metadata !9707, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %4, metadata !9708, metadata !DIExpression()), !dbg !9709
  %6 = inttoptr i32 %1 to i32*, !dbg !9710
  %7 = load volatile i32, i32* %6, align 4, !dbg !9710
  %8 = and i32 %7, -117899328, !dbg !9711
  %9 = shl i32 %2, 24, !dbg !9712
  %10 = and i32 %9, 117440512, !dbg !9712
  %11 = shl i32 %3, 16, !dbg !9713
  %12 = and i32 %11, 458752, !dbg !9713
  %13 = and i32 %4, 63, !dbg !9714
  %14 = or i32 %12, %10, !dbg !9715
  %15 = or i32 %14, %13, !dbg !9716
  %16 = or i32 %15, %8, !dbg !9717
  store volatile i32 %16, i32* %6, align 4, !dbg !9718
  ret void, !dbg !9719
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !9720 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9725, metadata !DIExpression()), !dbg !9726
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #24, !dbg !9727
  br i1 %2, label %7, label %3, !dbg !9729

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !9730
  %5 = and i32 %4, 127, !dbg !9731
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !9732
  br label %7, !dbg !9733

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !9726
  ret i32 %8, !dbg !9734
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9735 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9739, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i32 %1, metadata !9740, metadata !DIExpression()), !dbg !9741
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !9742
  %4 = and i32 %1, 65535, !dbg !9742
  %5 = add i32 %4, %3, !dbg !9742
  %6 = inttoptr i32 %5 to i32*, !dbg !9742
  %7 = load volatile i32, i32* %6, align 4, !dbg !9742
  %8 = and i32 %7, 65536, !dbg !9743
  %9 = icmp ne i32 %8, 0, !dbg !9744
  ret i1 %9, !dbg !9745
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !9746 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9748, metadata !DIExpression()), !dbg !9749
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #24, !dbg !9750
  br i1 %2, label %8, label %3, !dbg !9752

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !9753
  %5 = and i32 %4, 1, !dbg !9755
  %6 = icmp eq i32 %5, 0, !dbg !9755
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !9756
  br label %8, !dbg !9756

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !9749
  ret i32 %9, !dbg !9757
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !9758 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9760, metadata !DIExpression()), !dbg !9764
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #24, !dbg !9765
  br i1 %2, label %40, label %3, !dbg !9767

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !9768
  %5 = trunc i32 %4 to i8, !dbg !9768
  %6 = and i8 %5, 127, !dbg !9768
  call void @llvm.dbg.value(metadata i8 %6, metadata !9761, metadata !DIExpression()), !dbg !9764
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !9769
  %8 = lshr i32 %7, 21, !dbg !9770
  %9 = and i32 %8, 3, !dbg !9771
  call void @llvm.dbg.value(metadata i32 %9, metadata !9762, metadata !DIExpression()), !dbg !9764
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %9, !dbg !9772
  %11 = load i32, i32* %10, align 4, !dbg !9772
  call void @llvm.dbg.value(metadata i8 undef, metadata !9762, metadata !DIExpression()), !dbg !9764
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !9773
  %13 = load volatile i32, i32* %12, align 4, !dbg !9773
  %14 = and i32 %13, 32768, !dbg !9775
  %15 = icmp eq i32 %14, 0, !dbg !9775
  br i1 %15, label %36, label %16, !dbg !9776

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !9777
  %18 = and i32 %17, 32767, !dbg !9779
  %19 = uitofp i32 %18 to float, !dbg !9780
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !9781
  %21 = load volatile i32, i32* %20, align 4, !dbg !9781
  %22 = and i32 %21, 1073741823, !dbg !9782
  %23 = uitofp i32 %22 to float, !dbg !9783
  %24 = fdiv float %19, %23, !dbg !9784
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !9785
  %26 = load volatile i32, i32* %25, align 4, !dbg !9785
  %27 = and i32 %26, 1073741823, !dbg !9786
  %28 = uitofp i32 %27 to float, !dbg !9787
  %29 = fmul float %24, %28, !dbg !9788
  call void @llvm.dbg.value(metadata float %29, metadata !9763, metadata !DIExpression()), !dbg !9764
  %30 = lshr i32 24000000, %11, !dbg !9789
  %31 = uitofp i32 %30 to float, !dbg !9790
  %32 = uitofp i8 %6 to float, !dbg !9791
  %33 = fadd float %29, %32, !dbg !9792
  %34 = fmul float %33, %31, !dbg !9793
  %35 = fptoui float %34 to i32, !dbg !9794
  br label %40, !dbg !9795

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !9796
  %38 = zext i8 %6 to i32, !dbg !9798
  %39 = mul nuw i32 %37, %38, !dbg !9799
  br label %40, !dbg !9800

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !9764
  ret i32 %41, !dbg !9801
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !9802 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9804, metadata !DIExpression()), !dbg !9805
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #24, !dbg !9806
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !9805
  ret i32 %3, !dbg !9808
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !9809 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9811, metadata !DIExpression()), !dbg !9816
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #24, !dbg !9817
  br i1 %2, label %47, label %3, !dbg !9819

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !9820
  %5 = trunc i32 %4 to i8, !dbg !9820
  %6 = and i8 %5, 127, !dbg !9820
  call void @llvm.dbg.value(metadata i8 %6, metadata !9812, metadata !DIExpression()), !dbg !9816
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !9821
  %8 = lshr i32 %7, 22, !dbg !9822
  %9 = and i32 %8, 3, !dbg !9823
  call void @llvm.dbg.value(metadata i32 %8, metadata !9813, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !9816
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !9824
  %11 = lshr i32 %10, 19, !dbg !9825
  %12 = and i32 %11, 3, !dbg !9826
  call void @llvm.dbg.value(metadata i32 %11, metadata !9814, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !9816
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !9827
  %14 = load i32, i32* %13, align 4, !dbg !9827
  call void @llvm.dbg.value(metadata i8 undef, metadata !9813, metadata !DIExpression()), !dbg !9816
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !9828
  %16 = load i32, i32* %15, align 4, !dbg !9828
  call void @llvm.dbg.value(metadata i8 undef, metadata !9814, metadata !DIExpression()), !dbg !9816
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !9829
  %18 = load volatile i32, i32* %17, align 4, !dbg !9829
  %19 = and i32 %18, 32768, !dbg !9831
  %20 = icmp eq i32 %19, 0, !dbg !9831
  br i1 %20, label %42, label %21, !dbg !9832

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !9833
  %23 = and i32 %22, 32767, !dbg !9835
  %24 = uitofp i32 %23 to float, !dbg !9836
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !9837
  %26 = load volatile i32, i32* %25, align 4, !dbg !9837
  %27 = and i32 %26, 1073741823, !dbg !9838
  %28 = uitofp i32 %27 to float, !dbg !9839
  %29 = fdiv float %24, %28, !dbg !9840
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !9841
  %31 = load volatile i32, i32* %30, align 4, !dbg !9841
  %32 = and i32 %31, 1073741823, !dbg !9842
  %33 = uitofp i32 %32 to float, !dbg !9843
  %34 = fmul float %29, %33, !dbg !9844
  call void @llvm.dbg.value(metadata float %34, metadata !9815, metadata !DIExpression()), !dbg !9816
  %35 = lshr i32 24000000, %16, !dbg !9845
  %36 = lshr i32 %35, %14, !dbg !9846
  %37 = uitofp i32 %36 to float, !dbg !9847
  %38 = uitofp i8 %6 to float, !dbg !9848
  %39 = fadd float %34, %38, !dbg !9849
  %40 = fmul float %39, %37, !dbg !9850
  %41 = fptoui float %40 to i32, !dbg !9851
  br label %47, !dbg !9852

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !9853
  %44 = lshr i32 %43, %14, !dbg !9855
  %45 = zext i8 %6 to i32, !dbg !9856
  %46 = mul nuw i32 %44, %45, !dbg !9857
  br label %47, !dbg !9858

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !9816
  ret i32 %48, !dbg !9859
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !9860 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9862, metadata !DIExpression()), !dbg !9867
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #24, !dbg !9868
  br i1 %2, label %47, label %3, !dbg !9870

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !9871
  %5 = trunc i32 %4 to i8, !dbg !9871
  %6 = and i8 %5, 127, !dbg !9871
  call void @llvm.dbg.value(metadata i8 %6, metadata !9863, metadata !DIExpression()), !dbg !9867
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !9872
  %8 = lshr i32 %7, 22, !dbg !9873
  %9 = and i32 %8, 3, !dbg !9874
  call void @llvm.dbg.value(metadata i32 %8, metadata !9864, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !9867
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !9875
  %11 = lshr i32 %10, 19, !dbg !9876
  %12 = and i32 %11, 3, !dbg !9877
  call void @llvm.dbg.value(metadata i32 %11, metadata !9865, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !9867
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !9878
  %14 = load i32, i32* %13, align 4, !dbg !9878
  call void @llvm.dbg.value(metadata i8 undef, metadata !9864, metadata !DIExpression()), !dbg !9867
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !9879
  %16 = load i32, i32* %15, align 4, !dbg !9879
  call void @llvm.dbg.value(metadata i8 undef, metadata !9865, metadata !DIExpression()), !dbg !9867
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !9880
  %18 = load volatile i32, i32* %17, align 4, !dbg !9880
  %19 = and i32 %18, 32768, !dbg !9882
  %20 = icmp eq i32 %19, 0, !dbg !9882
  br i1 %20, label %42, label %21, !dbg !9883

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !9884
  %23 = and i32 %22, 32767, !dbg !9886
  %24 = uitofp i32 %23 to float, !dbg !9887
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !9888
  %26 = load volatile i32, i32* %25, align 4, !dbg !9888
  %27 = and i32 %26, 1073741823, !dbg !9889
  %28 = uitofp i32 %27 to float, !dbg !9890
  %29 = fdiv float %24, %28, !dbg !9891
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !9892
  %31 = load volatile i32, i32* %30, align 4, !dbg !9892
  %32 = and i32 %31, 1073741823, !dbg !9893
  %33 = uitofp i32 %32 to float, !dbg !9894
  %34 = fmul float %29, %33, !dbg !9895
  call void @llvm.dbg.value(metadata float %34, metadata !9866, metadata !DIExpression()), !dbg !9867
  %35 = lshr i32 24000000, %16, !dbg !9896
  %36 = lshr i32 %35, %14, !dbg !9897
  %37 = uitofp i32 %36 to float, !dbg !9898
  %38 = uitofp i8 %6 to float, !dbg !9899
  %39 = fadd float %34, %38, !dbg !9900
  %40 = fmul float %39, %37, !dbg !9901
  %41 = fptoui float %40 to i32, !dbg !9902
  br label %47, !dbg !9903

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !9904
  %44 = lshr i32 %43, %14, !dbg !9906
  %45 = zext i8 %6 to i32, !dbg !9907
  %46 = mul nuw i32 %44, %45, !dbg !9908
  br label %47, !dbg !9909

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !9867
  ret i32 %48, !dbg !9910
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !9911 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9915, metadata !DIExpression()), !dbg !9919
  call void @llvm.dbg.value(metadata i32 %1, metadata !9916, metadata !DIExpression()), !dbg !9919
  %3 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #24, !dbg !9920
  call void @llvm.dbg.value(metadata i32 %3, metadata !9917, metadata !DIExpression()), !dbg !9919
  %4 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #24, !dbg !9921
  call void @llvm.dbg.value(metadata i32 %4, metadata !9918, metadata !DIExpression()), !dbg !9919
  %5 = udiv i32 %3, %4, !dbg !9922
  %6 = mul i32 %5, 18, !dbg !9923
  ret i32 %6, !dbg !9924
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9925 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9927, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.value(metadata i32 %1, metadata !9928, metadata !DIExpression()), !dbg !9929
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !9930
  %4 = and i32 %1, 65535, !dbg !9930
  %5 = add i32 %4, %3, !dbg !9930
  %6 = inttoptr i32 %5 to i32*, !dbg !9930
  %7 = load volatile i32, i32* %6, align 4, !dbg !9930
  %8 = lshr i32 %1, 16, !dbg !9931
  %9 = and i32 %8, 31, !dbg !9931
  %10 = lshr i32 %7, %9, !dbg !9932
  %11 = and i32 %10, 63, !dbg !9933
  ret i32 %11, !dbg !9934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct._gpio_init_config* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9935 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9962, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !9963, metadata !DIExpression()), !dbg !9966
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !9967
  store volatile i32 0, i32* %3, align 4, !dbg !9968
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !9969
  store volatile i32 0, i32* %4, align 4, !dbg !9970
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !9971
  %6 = load i32, i32* %5, align 4, !dbg !9971
  call void @llvm.dbg.value(metadata i32 %6, metadata !9964, metadata !DIExpression()), !dbg !9966
  %7 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !9972
  %8 = load i32, i32* %7, align 4, !dbg !9972
  %9 = icmp eq i32 %8, 1, !dbg !9974
  %10 = shl nuw i32 1, %6, !dbg !9975
  br i1 %9, label %11, label %15, !dbg !9976

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !9977
  %13 = load volatile i32, i32* %12, align 4, !dbg !9978
  %14 = or i32 %13, %10, !dbg !9978
  store volatile i32 %14, i32* %12, align 4, !dbg !9978
  br label %20, !dbg !9977

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !9979
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !9980
  %18 = load volatile i32, i32* %17, align 4, !dbg !9981
  %19 = and i32 %18, %16, !dbg !9981
  store volatile i32 %19, i32* %17, align 4, !dbg !9981
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !9982
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !9984
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !9984
  %24 = add i32 %6, -16, !dbg !9984
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !9984
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !9984
  call void @llvm.dbg.value(metadata i32* %26, metadata !9965, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata i32 %25, metadata !9964, metadata !DIExpression()), !dbg !9966
  %27 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !9985
  %28 = load i32, i32* %27, align 4, !dbg !9985
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !9986

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !9987
  %31 = shl i32 3, %30, !dbg !9990
  %32 = xor i32 %31, -1, !dbg !9991
  %33 = load volatile i32, i32* %26, align 4, !dbg !9992
  %34 = and i32 %33, %32, !dbg !9992
  br label %56, !dbg !9993

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !9994
  %37 = shl i32 %25, 1, !dbg !9996
  %38 = shl i32 3, %37, !dbg !9997
  %39 = xor i32 %38, -1, !dbg !9998
  %40 = and i32 %36, %39, !dbg !9999
  %41 = shl nuw i32 1, %37, !dbg !10000
  %42 = or i32 %40, %41, !dbg !10001
  br label %56, !dbg !10002

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !10003
  %45 = shl i32 %25, 1, !dbg !10005
  %46 = shl i32 3, %45, !dbg !10006
  %47 = xor i32 %46, -1, !dbg !10007
  %48 = and i32 %44, %47, !dbg !10008
  %49 = shl i32 2, %45, !dbg !10009
  %50 = or i32 %48, %49, !dbg !10010
  br label %56, !dbg !10011

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !10012
  %53 = shl i32 3, %52, !dbg !10014
  %54 = load volatile i32, i32* %26, align 4, !dbg !10015
  %55 = or i32 %54, %53, !dbg !10015
  br label %56, !dbg !10016

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !10017
  br label %58, !dbg !10018

58:                                               ; preds = %56, %20
  ret void, !dbg !10018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !10019 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10024, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i32 %1, metadata !10025, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i32 %2, metadata !10026, metadata !DIExpression()), !dbg !10027
  %4 = icmp eq i32 %2, 1, !dbg !10028
  %5 = shl nuw i32 1, %1, !dbg !10030
  br i1 %4, label %6, label %10, !dbg !10031

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10032
  %8 = load volatile i32, i32* %7, align 4, !dbg !10034
  %9 = or i32 %8, %5, !dbg !10034
  store volatile i32 %9, i32* %7, align 4, !dbg !10034
  br label %15, !dbg !10035

10:                                               ; preds = %3
  %11 = xor i32 %5, -1, !dbg !10036
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10038
  %13 = load volatile i32, i32* %12, align 4, !dbg !10039
  %14 = and i32 %13, %11, !dbg !10039
  store volatile i32 %14, i32* %12, align 4, !dbg !10039
  br label %15

15:                                               ; preds = %10, %6
  ret void, !dbg !10040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !10041 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10045, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.value(metadata i32 %1, metadata !10046, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.value(metadata i1 %2, metadata !10047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10048
  %4 = shl nuw i32 1, %1, !dbg !10049
  br i1 %2, label %5, label %9, !dbg !10051

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10052
  %7 = load volatile i32, i32* %6, align 4, !dbg !10053
  %8 = or i32 %7, %4, !dbg !10053
  store volatile i32 %8, i32* %6, align 4, !dbg !10053
  br label %14, !dbg !10052

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !10054
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10055
  %12 = load volatile i32, i32* %11, align 4, !dbg !10056
  %13 = and i32 %12, %10, !dbg !10056
  store volatile i32 %13, i32* %11, align 4, !dbg !10056
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !10057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !10058 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10060, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.value(metadata i32 %1, metadata !10061, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.value(metadata i1 %2, metadata !10062, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10063
  %4 = shl nuw i32 1, %1, !dbg !10064
  br i1 %2, label %5, label %9, !dbg !10066

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10067
  %7 = load volatile i32, i32* %6, align 4, !dbg !10068
  %8 = or i32 %7, %4, !dbg !10068
  store volatile i32 %8, i32* %6, align 4, !dbg !10068
  br label %14, !dbg !10067

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !10069
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10070
  %12 = load volatile i32, i32* %11, align 4, !dbg !10071
  %13 = and i32 %12, %10, !dbg !10071
  store volatile i32 %13, i32* %11, align 4, !dbg !10071
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !10072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !10073 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10112, metadata !DIExpression()), !dbg !10114
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !10113, metadata !DIExpression()), !dbg !10114
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10115
  %4 = load volatile i32, i32* %3, align 4, !dbg !10116
  %5 = and i32 %4, -2, !dbg !10116
  store volatile i32 %5, i32* %3, align 4, !dbg !10116
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #24, !dbg !10117
  %6 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !10118
  %7 = load i32, i32* %6, align 4, !dbg !10118
  %8 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !10119
  %9 = load i32, i32* %8, align 4, !dbg !10119
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !10120
  %11 = load i32, i32* %10, align 4, !dbg !10120
  %12 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !10121
  %13 = load i32, i32* %12, align 4, !dbg !10121
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10122
  %15 = load volatile i32, i32* %14, align 4, !dbg !10123
  %16 = or i32 %7, %9, !dbg !10124
  %17 = or i32 %16, %11, !dbg !10125
  %18 = or i32 %17, %13, !dbg !10126
  %19 = or i32 %18, %15, !dbg !10123
  %20 = or i32 %19, 16384, !dbg !10123
  store volatile i32 %20, i32* %14, align 4, !dbg !10123
  %21 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10127
  %22 = load volatile i32, i32* %21, align 4, !dbg !10128
  %23 = or i32 %22, 4, !dbg !10128
  store volatile i32 %23, i32* %21, align 4, !dbg !10128
  %24 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !10129
  %25 = load i32, i32* %24, align 4, !dbg !10129
  %26 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !10130
  %27 = load i32, i32* %26, align 4, !dbg !10130
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %25, i32 noundef %27) #24, !dbg !10131
  ret void, !dbg !10132
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #15 !dbg !10133 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10137, metadata !DIExpression()), !dbg !10138
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10139
  %3 = load volatile i32, i32* %2, align 4, !dbg !10140
  %4 = and i32 %3, -2, !dbg !10140
  store volatile i32 %4, i32* %2, align 4, !dbg !10140
  store volatile i32 0, i32* %2, align 4, !dbg !10141
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10142
  store volatile i32 1, i32* %5, align 4, !dbg !10143
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10144
  store volatile i32 1792, i32* %6, align 4, !dbg !10145
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10146
  store volatile i32 32768, i32* %7, align 4, !dbg !10147
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10148
  store volatile i32 2049, i32* %8, align 4, !dbg !10149
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !10150
  store volatile i32 43, i32* %9, align 4, !dbg !10151
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !10152
  store volatile i32 0, i32* %10, align 4, !dbg !10153
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !10154
  store volatile i32 0, i32* %11, align 4, !dbg !10155
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !10156
  store volatile i32 96, i32* %12, align 4, !dbg !10157
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10158
  store volatile i32 0, i32* %13, align 4, !dbg !10159
  %14 = load volatile i32, i32* %5, align 4, !dbg !10160
  %15 = and i32 %14, -2, !dbg !10160
  store volatile i32 %15, i32* %5, align 4, !dbg !10160
  br label %16, !dbg !10161

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !10162
  %18 = and i32 %17, 1, !dbg !10163
  %19 = icmp eq i32 %18, 0, !dbg !10164
  br i1 %19, label %16, label %20, !dbg !10161, !llvm.loop !10165

20:                                               ; preds = %16
  ret void, !dbg !10167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !10168 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10172, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %1, metadata !10173, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %2, metadata !10174, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 1, metadata !10179, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %1, metadata !10175, metadata !DIExpression()), !dbg !10185
  %4 = shl i32 %2, 4, !dbg !10186
  call void @llvm.dbg.value(metadata i32 %4, metadata !10176, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 1, metadata !10177, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %1, metadata !10175, metadata !DIExpression()), !dbg !10185
  %5 = icmp eq i32 %4, 0, !dbg !10187
  br i1 %5, label %11, label %6, !dbg !10188

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10175, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %8, metadata !10176, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %8, metadata !10177, metadata !DIExpression()), !dbg !10185
  %9 = urem i32 %7, %8, !dbg !10189
  call void @llvm.dbg.value(metadata i32 %8, metadata !10175, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %9, metadata !10176, metadata !DIExpression()), !dbg !10185
  %10 = icmp eq i32 %9, 0, !dbg !10187
  br i1 %10, label %11, label %6, !dbg !10188, !llvm.loop !10191

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !10185
  %13 = udiv i32 %1, %12, !dbg !10193
  call void @llvm.dbg.value(metadata i32 %13, metadata !10175, metadata !DIExpression()), !dbg !10185
  %14 = udiv i32 %4, %12, !dbg !10194
  call void @llvm.dbg.value(metadata i32 %14, metadata !10176, metadata !DIExpression()), !dbg !10185
  %15 = icmp ugt i32 %13, 458745, !dbg !10195
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !10196
  br i1 %17, label %18, label %33, !dbg !10196

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !10197
  %20 = udiv i32 %19, 458745, !dbg !10198
  %21 = add nuw nsw i32 %20, 1, !dbg !10199
  call void @llvm.dbg.value(metadata i32 %21, metadata !10180, metadata !DIExpression()), !dbg !10200
  %22 = add i32 %14, -1, !dbg !10201
  %23 = udiv i32 %22, 65535, !dbg !10202
  %24 = add nuw nsw i32 %23, 1, !dbg !10203
  call void @llvm.dbg.value(metadata i32 %24, metadata !10183, metadata !DIExpression()), !dbg !10200
  %25 = icmp ugt i32 %21, %24, !dbg !10204
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !10205
  call void @llvm.dbg.value(metadata i32 %26, metadata !10184, metadata !DIExpression()), !dbg !10200
  %27 = udiv i32 %13, %26, !dbg !10206
  call void @llvm.dbg.value(metadata i32 %27, metadata !10175, metadata !DIExpression()), !dbg !10185
  %28 = udiv i32 %14, %26, !dbg !10207
  call void @llvm.dbg.value(metadata i32 %28, metadata !10176, metadata !DIExpression()), !dbg !10185
  %29 = icmp ugt i32 %26, %13, !dbg !10208
  %30 = select i1 %29, i32 1, i32 %27, !dbg !10210
  call void @llvm.dbg.value(metadata i32 %30, metadata !10175, metadata !DIExpression()), !dbg !10185
  %31 = icmp ugt i32 %26, %14, !dbg !10211
  %32 = select i1 %31, i32 1, i32 %28, !dbg !10213
  call void @llvm.dbg.value(metadata i32 %32, metadata !10176, metadata !DIExpression()), !dbg !10185
  br label %33, !dbg !10214

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !10185
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !10185
  call void @llvm.dbg.value(metadata i32 %35, metadata !10175, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %34, metadata !10176, metadata !DIExpression()), !dbg !10185
  %36 = add i32 %35, -1, !dbg !10215
  %37 = udiv i32 %36, 65535, !dbg !10216
  %38 = add nuw nsw i32 %37, 1, !dbg !10217
  call void @llvm.dbg.value(metadata i32 %38, metadata !10179, metadata !DIExpression()), !dbg !10185
  %39 = add nsw i32 %37, -1, !dbg !10218
  %40 = icmp ult i32 %39, 6, !dbg !10218
  br i1 %40, label %41, label %44, !dbg !10218

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !10218
  %43 = load i32, i32* %42, align 4, !dbg !10218
  br label %44, !dbg !10218

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !10219
  call void @llvm.dbg.value(metadata i32 %45, metadata !10178, metadata !DIExpression()), !dbg !10185
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10221
  %47 = load volatile i32, i32* %46, align 4, !dbg !10222
  %48 = and i32 %47, -897, !dbg !10222
  store volatile i32 %48, i32* %46, align 4, !dbg !10222
  %49 = load volatile i32, i32* %46, align 4, !dbg !10223
  %50 = or i32 %49, %45, !dbg !10223
  store volatile i32 %50, i32* %46, align 4, !dbg !10223
  %51 = add i32 %34, 65535, !dbg !10224
  %52 = and i32 %51, 65535, !dbg !10224
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !10225
  store volatile i32 %52, i32* %53, align 4, !dbg !10226
  %54 = udiv i32 %35, %38, !dbg !10227
  %55 = add i32 %54, 65535, !dbg !10227
  %56 = and i32 %55, 65535, !dbg !10227
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !10228
  store volatile i32 %56, i32* %57, align 4, !dbg !10229
  %58 = mul nuw nsw i32 %38, 1000, !dbg !10230
  %59 = udiv i32 %1, %58, !dbg !10230
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !10231
  store volatile i32 %59, i32* %60, align 4, !dbg !10232
  ret void, !dbg !10233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !10234 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10238, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.value(metadata i32 %1, metadata !10239, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.value(metadata i1 %2, metadata !10240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10241
  %4 = and i32 %1, 2, !dbg !10242
  %5 = icmp eq i32 %4, 0, !dbg !10242
  br i1 %2, label %6, label %18, !dbg !10244

6:                                                ; preds = %3
  br i1 %5, label %11, label %7, !dbg !10245

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10247
  %9 = load volatile i32, i32* %8, align 4, !dbg !10249
  %10 = or i32 %9, 512, !dbg !10249
  store volatile i32 %10, i32* %8, align 4, !dbg !10249
  br label %11, !dbg !10247

11:                                               ; preds = %7, %6
  %12 = and i32 %1, 4, !dbg !10250
  %13 = icmp eq i32 %12, 0, !dbg !10250
  br i1 %13, label %30, label %14, !dbg !10252

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10253
  %16 = load volatile i32, i32* %15, align 4, !dbg !10254
  %17 = or i32 %16, 2, !dbg !10254
  store volatile i32 %17, i32* %15, align 4, !dbg !10254
  br label %30, !dbg !10253

18:                                               ; preds = %3
  br i1 %5, label %23, label %19, !dbg !10255

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10257
  %21 = load volatile i32, i32* %20, align 4, !dbg !10259
  %22 = and i32 %21, -513, !dbg !10259
  store volatile i32 %22, i32* %20, align 4, !dbg !10259
  br label %23, !dbg !10257

23:                                               ; preds = %19, %18
  %24 = and i32 %1, 4, !dbg !10260
  %25 = icmp eq i32 %24, 0, !dbg !10260
  br i1 %25, label %30, label %26, !dbg !10262

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10263
  %28 = load volatile i32, i32* %27, align 4, !dbg !10264
  %29 = and i32 %28, -3, !dbg !10264
  store volatile i32 %29, i32* %27, align 4, !dbg !10264
  br label %30, !dbg !10263

30:                                               ; preds = %23, %26, %11, %14
  ret void, !dbg !10265
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10266 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10270, metadata !DIExpression()), !dbg !10272
  call void @llvm.dbg.value(metadata i1 %1, metadata !10271, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10272
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10273
  %4 = load volatile i32, i32* %3, align 4, !dbg !10273
  %5 = and i32 %4, 2, !dbg !10275
  %6 = select i1 %1, i32 0, i32 -3, !dbg !10275
  %7 = or i32 %5, %6, !dbg !10275
  store volatile i32 %7, i32* %3, align 4, !dbg !10273
  ret void, !dbg !10276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10277 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10279, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i1 %1, metadata !10280, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10281
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10282
  %4 = load volatile i32, i32* %3, align 4, !dbg !10282
  %5 = and i32 %4, -17, !dbg !10284
  %6 = select i1 %1, i32 0, i32 16, !dbg !10284
  %7 = or i32 %5, %6, !dbg !10284
  store volatile i32 %7, i32* %3, align 4, !dbg !10282
  ret void, !dbg !10285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !10286 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10288, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.value(metadata i32 %1, metadata !10289, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.value(metadata i1 %2, metadata !10290, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10293
  call void @llvm.dbg.value(metadata i32* null, metadata !10291, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.value(metadata i32 0, metadata !10292, metadata !DIExpression()), !dbg !10293
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10294
  %5 = lshr i32 %1, 16, !dbg !10295
  %6 = add i32 %5, %4, !dbg !10296
  %7 = inttoptr i32 %6 to i32*, !dbg !10297
  call void @llvm.dbg.value(metadata i32* %7, metadata !10291, metadata !DIExpression()), !dbg !10293
  %8 = and i32 %1, 65535, !dbg !10298
  %9 = shl nuw i32 1, %8, !dbg !10299
  call void @llvm.dbg.value(metadata i32 %9, metadata !10292, metadata !DIExpression()), !dbg !10293
  br i1 %2, label %10, label %13, !dbg !10300

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !10301
  %12 = or i32 %11, %9, !dbg !10301
  br label %17, !dbg !10303

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !10304
  %15 = load volatile i32, i32* %7, align 4, !dbg !10305
  %16 = and i32 %15, %14, !dbg !10305
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !10306
  ret void, !dbg !10307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !10308 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10312, metadata !DIExpression()), !dbg !10316
  call void @llvm.dbg.value(metadata i32 %1, metadata !10313, metadata !DIExpression()), !dbg !10316
  call void @llvm.dbg.value(metadata i32* null, metadata !10314, metadata !DIExpression()), !dbg !10316
  call void @llvm.dbg.value(metadata i32 0, metadata !10315, metadata !DIExpression()), !dbg !10316
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10317
  %4 = lshr i32 %1, 16, !dbg !10318
  %5 = add i32 %4, %3, !dbg !10319
  %6 = inttoptr i32 %5 to i32*, !dbg !10320
  call void @llvm.dbg.value(metadata i32* %6, metadata !10314, metadata !DIExpression()), !dbg !10316
  %7 = and i32 %1, 65535, !dbg !10321
  %8 = shl nuw i32 1, %7, !dbg !10322
  call void @llvm.dbg.value(metadata i32 %8, metadata !10315, metadata !DIExpression()), !dbg !10316
  store volatile i32 %8, i32* %6, align 4, !dbg !10323
  ret void, !dbg !10324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10327, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i32 %1, metadata !10328, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i1 %2, metadata !10329, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10332
  call void @llvm.dbg.value(metadata i32* null, metadata !10330, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i32 0, metadata !10331, metadata !DIExpression()), !dbg !10332
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10333
  %5 = lshr i32 %1, 16, !dbg !10334
  %6 = add i32 %5, %4, !dbg !10335
  %7 = inttoptr i32 %6 to i32*, !dbg !10336
  call void @llvm.dbg.value(metadata i32* %7, metadata !10330, metadata !DIExpression()), !dbg !10332
  %8 = and i32 %1, 65535, !dbg !10337
  %9 = shl nuw i32 1, %8, !dbg !10338
  call void @llvm.dbg.value(metadata i32 %9, metadata !10331, metadata !DIExpression()), !dbg !10332
  br i1 %2, label %10, label %13, !dbg !10339

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !10340
  %12 = or i32 %11, %9, !dbg !10340
  br label %17, !dbg !10342

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !10343
  %15 = load volatile i32, i32* %7, align 4, !dbg !10344
  %16 = and i32 %15, %14, !dbg !10344
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !10345
  ret void, !dbg !10346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10347 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10349, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata i1 %1, metadata !10350, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10351
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10352
  %4 = load volatile i32, i32* %3, align 4, !dbg !10352
  %5 = and i32 %4, -16385, !dbg !10354
  %6 = select i1 %1, i32 0, i32 16384, !dbg !10354
  %7 = or i32 %5, %6, !dbg !10354
  store volatile i32 %7, i32* %3, align 4, !dbg !10352
  ret void, !dbg !10355
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10356 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10358, metadata !DIExpression()), !dbg !10360
  call void @llvm.dbg.value(metadata i1 %1, metadata !10359, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10360
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10361
  %4 = load volatile i32, i32* %3, align 4, !dbg !10361
  %5 = and i32 %4, -8193, !dbg !10363
  %6 = select i1 %1, i32 8192, i32 0, !dbg !10363
  %7 = or i32 %5, %6, !dbg !10363
  store volatile i32 %7, i32* %3, align 4, !dbg !10361
  ret void, !dbg !10364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10365 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10367, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i1 %1, metadata !10368, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10369
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10370
  %4 = load volatile i32, i32* %3, align 4, !dbg !10370
  %5 = and i32 %4, -4097, !dbg !10372
  %6 = select i1 %1, i32 4096, i32 0, !dbg !10372
  %7 = or i32 %5, %6, !dbg !10372
  store volatile i32 %7, i32* %3, align 4, !dbg !10370
  ret void, !dbg !10373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !10374 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10376, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata i32 %1, metadata !10377, metadata !DIExpression()), !dbg !10378
  %3 = icmp eq i32 %1, 0, !dbg !10379
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10381
  %5 = load volatile i32, i32* %4, align 4, !dbg !10381
  %6 = and i32 %5, -65, !dbg !10382
  %7 = select i1 %3, i32 0, i32 64, !dbg !10382
  %8 = or i32 %6, %7, !dbg !10382
  store volatile i32 %8, i32* %4, align 4, !dbg !10381
  ret void, !dbg !10383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10384 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10386, metadata !DIExpression()), !dbg !10388
  call void @llvm.dbg.value(metadata i1 %1, metadata !10387, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10388
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10389
  %4 = load volatile i32, i32* %3, align 4, !dbg !10389
  %5 = and i32 %4, -1025, !dbg !10391
  %6 = select i1 %1, i32 1024, i32 0, !dbg !10391
  %7 = or i32 %5, %6, !dbg !10391
  store volatile i32 %7, i32* %3, align 4, !dbg !10389
  ret void, !dbg !10392
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10393 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10395, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata i1 %1, metadata !10396, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10397
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10398
  %4 = load volatile i32, i32* %3, align 4, !dbg !10398
  %5 = and i32 %4, -513, !dbg !10400
  %6 = select i1 %1, i32 512, i32 0, !dbg !10400
  %7 = or i32 %5, %6, !dbg !10400
  store volatile i32 %7, i32* %3, align 4, !dbg !10398
  ret void, !dbg !10401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10402 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10404, metadata !DIExpression()), !dbg !10406
  call void @llvm.dbg.value(metadata i1 %1, metadata !10405, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10406
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10407
  %4 = load volatile i32, i32* %3, align 4, !dbg !10407
  %5 = and i32 %4, -257, !dbg !10409
  %6 = select i1 %1, i32 256, i32 0, !dbg !10409
  %7 = or i32 %5, %6, !dbg !10409
  store volatile i32 %7, i32* %3, align 4, !dbg !10407
  ret void, !dbg !10410
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #15 !dbg !10411 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10415, metadata !DIExpression()), !dbg !10417
  call void @llvm.dbg.value(metadata i16 %1, metadata !10416, metadata !DIExpression()), !dbg !10417
  %3 = zext i16 %1 to i32, !dbg !10418
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10420
  %5 = load volatile i32, i32* %4, align 4, !dbg !10420
  %6 = and i32 %5, -5, !dbg !10421
  %7 = lshr i32 %3, 6, !dbg !10421
  %8 = and i32 %7, 4, !dbg !10421
  %9 = or i32 %6, %8, !dbg !10421
  store volatile i32 %9, i32* %4, align 4, !dbg !10420
  %10 = and i32 %3, 255, !dbg !10422
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !10423
  store volatile i32 %10, i32* %11, align 4, !dbg !10424
  ret void, !dbg !10425
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #16 !dbg !10426 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10430, metadata !DIExpression()), !dbg !10432
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !10433
  %3 = load volatile i32, i32* %2, align 4, !dbg !10433
  call void @llvm.dbg.value(metadata i32 %3, metadata !10431, metadata !DIExpression()), !dbg !10432
  %4 = trunc i32 %3 to i16, !dbg !10434
  %5 = and i16 %4, 255, !dbg !10434
  %6 = lshr i16 %4, 2, !dbg !10434
  %7 = and i16 %6, 256, !dbg !10434
  %8 = or i16 %7, %5, !dbg !10434
  call void @llvm.dbg.value(metadata i16 %8, metadata !10431, metadata !DIExpression()), !dbg !10432
  ret i16 %8, !dbg !10435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10436 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10438, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata i1 %1, metadata !10439, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10440
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10441
  %4 = load volatile i32, i32* %3, align 4, !dbg !10441
  %5 = and i32 %4, -2, !dbg !10443
  %6 = zext i1 %1 to i32, !dbg !10443
  %7 = or i32 %5, %6, !dbg !10443
  store volatile i32 %7, i32* %3, align 4, !dbg !10441
  ret void, !dbg !10444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10445 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10447, metadata !DIExpression()), !dbg !10449
  call void @llvm.dbg.value(metadata i1 %1, metadata !10448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10449
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10450
  %4 = load volatile i32, i32* %3, align 4, !dbg !10450
  %5 = and i32 %4, -3, !dbg !10452
  %6 = select i1 %1, i32 2, i32 0, !dbg !10452
  %7 = or i32 %5, %6, !dbg !10452
  store volatile i32 %7, i32* %3, align 4, !dbg !10450
  ret void, !dbg !10453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10454 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10456, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata i1 %1, metadata !10457, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10458
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10459
  %4 = load volatile i32, i32* %3, align 4, !dbg !10459
  %5 = and i32 %4, -129, !dbg !10461
  %6 = select i1 %1, i32 128, i32 0, !dbg !10461
  %7 = or i32 %5, %6, !dbg !10461
  store volatile i32 %7, i32* %3, align 4, !dbg !10459
  ret void, !dbg !10462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10465, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %1, metadata !10466, metadata !DIExpression()), !dbg !10467
  %3 = icmp eq i32 %1, 0, !dbg !10468
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10470
  %5 = load volatile i32, i32* %4, align 4, !dbg !10470
  %6 = and i32 %5, -33, !dbg !10471
  %7 = select i1 %3, i32 32, i32 0, !dbg !10471
  %8 = or i32 %6, %7, !dbg !10471
  store volatile i32 %8, i32* %4, align 4, !dbg !10470
  ret void, !dbg !10472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10473 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10475, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i1 %1, metadata !10476, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10477
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10478
  %4 = load volatile i32, i32* %3, align 4, !dbg !10478
  %5 = and i32 %4, -16385, !dbg !10480
  %6 = select i1 %1, i32 16384, i32 0, !dbg !10480
  %7 = or i32 %5, %6, !dbg !10480
  store volatile i32 %7, i32* %3, align 4, !dbg !10478
  ret void, !dbg !10481
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10482 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10484, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata i1 %1, metadata !10485, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10486
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10487
  %4 = load volatile i32, i32* %3, align 4, !dbg !10487
  %5 = and i32 %4, -17, !dbg !10489
  %6 = select i1 %1, i32 16, i32 0, !dbg !10489
  %7 = or i32 %5, %6, !dbg !10489
  store volatile i32 %7, i32* %3, align 4, !dbg !10487
  ret void, !dbg !10490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !10491 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10493, metadata !DIExpression()), !dbg !10495
  call void @llvm.dbg.value(metadata i1 %1, metadata !10494, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10495
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10496
  %4 = load volatile i32, i32* %3, align 4, !dbg !10496
  %5 = and i32 %4, -2049, !dbg !10498
  %6 = select i1 %1, i32 2048, i32 0, !dbg !10498
  %7 = or i32 %5, %6, !dbg !10498
  store volatile i32 %7, i32* %3, align 4, !dbg !10496
  ret void, !dbg !10499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !10500 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !10519, metadata !DIExpression()), !dbg !10524
  %4 = bitcast i32* %2 to i8*, !dbg !10525
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10525
  %5 = bitcast i32* %3 to i8*, !dbg !10525
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10525
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !10526
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !10527

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !10520, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.value(metadata i32* %2, metadata !10522, metadata !DIExpression(DW_OP_deref)), !dbg !10524
  call void @llvm.dbg.value(metadata i32* %3, metadata !10523, metadata !DIExpression(DW_OP_deref)), !dbg !10524
  br label %8, !dbg !10528

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !10530
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !10530
  call void @llvm.dbg.value(metadata i32 %10, metadata !10520, metadata !DIExpression()), !dbg !10524
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !10531

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #23, !dbg !10532
  call void @llvm.dbg.value(metadata i32 %12, metadata !10521, metadata !DIExpression()), !dbg !10524
  br label %13, !dbg !10534

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !10535
  call void @llvm.dbg.value(metadata i32 %14, metadata !10521, metadata !DIExpression()), !dbg !10524
  %15 = load i32, i32* %2, align 4, !dbg !10536
  call void @llvm.dbg.value(metadata i32 %15, metadata !10522, metadata !DIExpression()), !dbg !10524
  %16 = add i32 %15, 1, !dbg !10537
  %17 = udiv i32 %14, %16, !dbg !10538
  %18 = load i32, i32* %3, align 4, !dbg !10539
  call void @llvm.dbg.value(metadata i32 %18, metadata !10523, metadata !DIExpression()), !dbg !10524
  %19 = add i32 %18, 1, !dbg !10540
  %20 = udiv i32 %17, %19, !dbg !10541
  br label %21, !dbg !10542

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !10524
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10543
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10543
  ret i32 %22, !dbg !10543
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #16 !dbg !10544 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !10548, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata i32 %0, metadata !10549, metadata !DIExpression()), !dbg !10550
  %2 = inttoptr i32 %0 to i32*, !dbg !10551
  %3 = load volatile i32, i32* %2, align 4, !dbg !10551
  %4 = lshr i32 %3, 24, !dbg !10552
  %5 = and i32 %4, 7, !dbg !10552
  ret i32 %5, !dbg !10553
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !10554 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !10576, metadata !DIExpression()), !dbg !10581
  %4 = bitcast i32* %2 to i8*, !dbg !10582
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10582
  %5 = bitcast i32* %3 to i8*, !dbg !10582
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10582
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !10583
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !10584

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !10577, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata i32* %2, metadata !10579, metadata !DIExpression(DW_OP_deref)), !dbg !10581
  call void @llvm.dbg.value(metadata i32* %3, metadata !10580, metadata !DIExpression(DW_OP_deref)), !dbg !10581
  br label %8, !dbg !10585

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !10587
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !10587
  call void @llvm.dbg.value(metadata i32 %10, metadata !10577, metadata !DIExpression()), !dbg !10581
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !10588

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #23, !dbg !10589
  call void @llvm.dbg.value(metadata i32 %12, metadata !10578, metadata !DIExpression()), !dbg !10581
  br label %13, !dbg !10591

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !10592
  call void @llvm.dbg.value(metadata i32 %14, metadata !10578, metadata !DIExpression()), !dbg !10581
  %15 = load i32, i32* %2, align 4, !dbg !10593
  call void @llvm.dbg.value(metadata i32 %15, metadata !10579, metadata !DIExpression()), !dbg !10581
  %16 = add i32 %15, 1, !dbg !10594
  %17 = udiv i32 %14, %16, !dbg !10595
  %18 = load i32, i32* %3, align 4, !dbg !10596
  call void @llvm.dbg.value(metadata i32 %18, metadata !10580, metadata !DIExpression()), !dbg !10581
  %19 = add i32 %18, 1, !dbg !10597
  %20 = udiv i32 %17, %19, !dbg !10598
  br label %21, !dbg !10599

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !10581
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10600
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10600
  ret i32 %22, !dbg !10600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !10601 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !10645, metadata !DIExpression()), !dbg !10650
  %4 = bitcast i32* %2 to i8*, !dbg !10651
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10651
  %5 = bitcast i32* %3 to i8*, !dbg !10651
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10651
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !10652
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !10653

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !10646, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i32* %2, metadata !10648, metadata !DIExpression(DW_OP_deref)), !dbg !10650
  call void @llvm.dbg.value(metadata i32* %3, metadata !10649, metadata !DIExpression(DW_OP_deref)), !dbg !10650
  br label %8, !dbg !10654

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !10656
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !10656
  call void @llvm.dbg.value(metadata i32 %10, metadata !10646, metadata !DIExpression()), !dbg !10650
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !10657

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !10658
  %13 = lshr i32 %12, 2, !dbg !10660
  call void @llvm.dbg.value(metadata i32 %13, metadata !10647, metadata !DIExpression()), !dbg !10650
  br label %16, !dbg !10661

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !10662
  call void @llvm.dbg.value(metadata i32 %15, metadata !10647, metadata !DIExpression()), !dbg !10650
  br label %16, !dbg !10663

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !10664
  call void @llvm.dbg.value(metadata i32 %17, metadata !10647, metadata !DIExpression()), !dbg !10650
  %18 = load i32, i32* %2, align 4, !dbg !10665
  call void @llvm.dbg.value(metadata i32 %18, metadata !10648, metadata !DIExpression()), !dbg !10650
  %19 = add i32 %18, 1, !dbg !10666
  %20 = udiv i32 %17, %19, !dbg !10667
  %21 = load i32, i32* %3, align 4, !dbg !10668
  call void @llvm.dbg.value(metadata i32 %21, metadata !10649, metadata !DIExpression()), !dbg !10650
  %22 = add i32 %21, 1, !dbg !10669
  %23 = udiv i32 %20, %22, !dbg !10670
  br label %24, !dbg !10671

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !10650
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10672
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10672
  ret i32 %25, !dbg !10672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !10673 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !10691, metadata !DIExpression()), !dbg !10696
  %4 = bitcast i32* %2 to i8*, !dbg !10697
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10697
  %5 = bitcast i32* %3 to i8*, !dbg !10697
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10697
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !10698
  %7 = add i32 %6, -815923200, !dbg !10699
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !10699
  %9 = icmp ult i32 %8, 4, !dbg !10699
  br i1 %9, label %10, label %25, !dbg !10699

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !10699
  %12 = add i32 %11, 809020800, !dbg !10699
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #24, !dbg !10700
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !10700
  call void @llvm.dbg.value(metadata i32 %13, metadata !10692, metadata !DIExpression()), !dbg !10696
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !10702

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !10703
  %16 = lshr i32 %15, 2, !dbg !10705
  call void @llvm.dbg.value(metadata i32 %16, metadata !10693, metadata !DIExpression()), !dbg !10696
  br label %17, !dbg !10706

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !10707
  call void @llvm.dbg.value(metadata i32 %18, metadata !10693, metadata !DIExpression()), !dbg !10696
  %19 = load i32, i32* %2, align 4, !dbg !10708
  call void @llvm.dbg.value(metadata i32 %19, metadata !10694, metadata !DIExpression()), !dbg !10696
  %20 = add i32 %19, 1, !dbg !10709
  %21 = udiv i32 %18, %20, !dbg !10710
  %22 = load i32, i32* %3, align 4, !dbg !10711
  call void @llvm.dbg.value(metadata i32 %22, metadata !10695, metadata !DIExpression()), !dbg !10696
  %23 = add i32 %22, 1, !dbg !10712
  %24 = udiv i32 %21, %23, !dbg !10713
  br label %25, !dbg !10714

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !10696
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10715
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10715
  ret i32 %26, !dbg !10715
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !10716 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10743, metadata !DIExpression()), !dbg !10748
  %4 = bitcast i32* %2 to i8*, !dbg !10749
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10749
  %5 = bitcast i32* %3 to i8*, !dbg !10749
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10749
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10750
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !10751

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10744, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %2, metadata !10746, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %3, metadata !10747, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  br label %13, !dbg !10752

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10744, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %2, metadata !10746, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %3, metadata !10747, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  br label %13, !dbg !10754

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10744, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %2, metadata !10746, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %3, metadata !10747, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  br label %13, !dbg !10755

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10744, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %2, metadata !10746, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %3, metadata !10747, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  br label %13, !dbg !10756

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10744, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %2, metadata !10746, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %3, metadata !10747, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  br label %13, !dbg !10757

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !10744, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %2, metadata !10746, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  call void @llvm.dbg.value(metadata i32* %3, metadata !10747, metadata !DIExpression(DW_OP_deref)), !dbg !10748
  br label %13, !dbg !10758

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #24, !dbg !10759
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %15, metadata !10744, metadata !DIExpression()), !dbg !10748
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !10760

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !10761
  %18 = lshr i32 %17, 1, !dbg !10763
  call void @llvm.dbg.value(metadata i32 %18, metadata !10745, metadata !DIExpression()), !dbg !10748
  br label %21, !dbg !10764

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !10765
  call void @llvm.dbg.value(metadata i32 %20, metadata !10745, metadata !DIExpression()), !dbg !10748
  br label %21, !dbg !10766

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !10767
  call void @llvm.dbg.value(metadata i32 %22, metadata !10745, metadata !DIExpression()), !dbg !10748
  %23 = load i32, i32* %2, align 4, !dbg !10768
  call void @llvm.dbg.value(metadata i32 %23, metadata !10746, metadata !DIExpression()), !dbg !10748
  %24 = add i32 %23, 1, !dbg !10769
  %25 = udiv i32 %22, %24, !dbg !10770
  %26 = load i32, i32* %3, align 4, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %26, metadata !10747, metadata !DIExpression()), !dbg !10748
  %27 = add i32 %26, 1, !dbg !10772
  %28 = udiv i32 %25, %27, !dbg !10773
  br label %29, !dbg !10774

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !10748
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10775
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10775
  ret i32 %30, !dbg !10775
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #19 !dbg !10776 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10779, metadata !DIExpression()), !dbg !10795
  call void @llvm.dbg.value(metadata i32 undef, metadata !10779, metadata !DIExpression()), !dbg !10795
  call void @llvm.dbg.value(metadata i32 undef, metadata !10779, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10795
  ret void, !dbg !10796
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10797 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10801, metadata !DIExpression()), !dbg !10803
  %2 = icmp eq i8* %0, null, !dbg !10804
  br i1 %2, label %29, label %3, !dbg !10806

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10807
  %5 = icmp eq i8 %4, 0, !dbg !10808
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10809
  br i1 %6, label %29, label %8, !dbg !10809

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10802, metadata !DIExpression()), !dbg !10803
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10810

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10802, metadata !DIExpression()), !dbg !10803
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !10812
  br i1 %10, label %11, label %15, !dbg !10817

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10818
  %13 = load i8*, i8** %12, align 4, !dbg !10818
  %14 = icmp eq i8* %13, %0, !dbg !10819
  br i1 %14, label %29, label %15, !dbg !10820

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10821
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10802, metadata !DIExpression()), !dbg !10803
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10822
  br i1 %17, label %7, label %8, !dbg !10823, !llvm.loop !10824

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10802, metadata !DIExpression()), !dbg !10803
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !10826
  br i1 %20, label %21, label %26, !dbg !10830

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10831
  %23 = load i8*, i8** %22, align 4, !dbg !10831
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #23, !dbg !10832
  %25 = icmp eq i32 %24, 0, !dbg !10833
  br i1 %25, label %29, label %26, !dbg !10834

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10835
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10802, metadata !DIExpression()), !dbg !10803
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10836
  br i1 %28, label %29, label %18, !dbg !10810, !llvm.loop !10837

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10803
  ret %struct.device* %30, !dbg !10839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !10840 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10844, metadata !DIExpression()), !dbg !10845
  %2 = icmp eq %struct.device* %0, null, !dbg !10846
  br i1 %2, label %14, label %3, !dbg !10848

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10849
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10849
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10850
  %7 = load i8, i8* %6, align 1, !dbg !10850
  %8 = and i8 %7, 1, !dbg !10850
  %9 = icmp eq i8 %8, 0, !dbg !10850
  br i1 %9, label %14, label %10, !dbg !10851

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10852
  %12 = load i8, i8* %11, align 1, !dbg !10852
  %13 = icmp eq i8 %12, 0, !dbg !10853
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10845
  ret i1 %15, !dbg !10854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !10855 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10860, metadata !DIExpression()), !dbg !10861
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10862
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10863
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10864 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10872, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10873, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i8* %2, metadata !10874, metadata !DIExpression()), !dbg !10877
  %5 = bitcast i32* %4 to i8*, !dbg !10878
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10878
  call void @llvm.dbg.value(metadata i32 0, metadata !10875, metadata !DIExpression()), !dbg !10877
  store i32 0, i32* %4, align 4, !dbg !10879
  call void @llvm.dbg.value(metadata i32* %4, metadata !10875, metadata !DIExpression(DW_OP_deref)), !dbg !10877
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10880
  call void @llvm.dbg.value(metadata i16* %6, metadata !10876, metadata !DIExpression()), !dbg !10877
  %7 = load i32, i32* %4, align 4, !dbg !10881
  call void @llvm.dbg.value(metadata i32 %7, metadata !10875, metadata !DIExpression()), !dbg !10877
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10882
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10883
  ret i32 %8, !dbg !10884
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !10885 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10889, metadata !DIExpression()), !dbg !10895
  call void @llvm.dbg.value(metadata i32* %1, metadata !10890, metadata !DIExpression()), !dbg !10895
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10896
  %4 = load i16*, i16** %3, align 4, !dbg !10896
  call void @llvm.dbg.value(metadata i16* %4, metadata !10891, metadata !DIExpression()), !dbg !10895
  %5 = icmp eq i16* %4, null, !dbg !10897
  br i1 %5, label %14, label %6, !dbg !10898

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10899
  call void @llvm.dbg.value(metadata i32 %7, metadata !10892, metadata !DIExpression()), !dbg !10899
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10900
  %9 = load i16, i16* %8, align 2, !dbg !10900
  %10 = add i16 %9, -32767, !dbg !10901
  %11 = icmp ult i16 %10, 2, !dbg !10901
  %12 = add i32 %7, 1, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %12, metadata !10892, metadata !DIExpression()), !dbg !10899
  br i1 %11, label %13, label %6, !dbg !10901, !llvm.loop !10904

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10907
  br label %14, !dbg !10908

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10910 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10914, metadata !DIExpression()), !dbg !10925
  call void @llvm.dbg.value(metadata i32 %1, metadata !10915, metadata !DIExpression()), !dbg !10925
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10916, metadata !DIExpression()), !dbg !10925
  call void @llvm.dbg.value(metadata i8* %3, metadata !10917, metadata !DIExpression()), !dbg !10925
  call void @llvm.dbg.value(metadata i32 0, metadata !10918, metadata !DIExpression()), !dbg !10926
  %5 = icmp eq i32 %1, 0, !dbg !10927
  br i1 %5, label %16, label %8, !dbg !10928

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10918, metadata !DIExpression()), !dbg !10926
  %7 = icmp eq i32 %15, %1, !dbg !10927
  br i1 %7, label %16, label %8, !dbg !10928, !llvm.loop !10929

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10918, metadata !DIExpression()), !dbg !10926
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10931
  %11 = load i16, i16* %10, align 2, !dbg !10931
  call void @llvm.dbg.value(metadata i16 %11, metadata !10920, metadata !DIExpression()), !dbg !10932
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !10933
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10923, metadata !DIExpression()), !dbg !10932
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #23, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %13, metadata !10924, metadata !DIExpression()), !dbg !10932
  %14 = icmp slt i32 %13, 0, !dbg !10935
  %15 = add nuw i32 %9, 1, !dbg !10937
  call void @llvm.dbg.value(metadata i32 %15, metadata !10918, metadata !DIExpression()), !dbg !10926
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !10939 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10943, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10944, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10945, metadata !DIExpression()), !dbg !10946
  %2 = sext i16 %0 to i32, !dbg !10947
  %3 = icmp slt i16 %0, 1, !dbg !10949
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10950
  %6 = add nsw i32 %2, -1, !dbg !10950
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10950
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10950
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10944, metadata !DIExpression()), !dbg !10946
  ret %struct.device* %8, !dbg !10951
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10952 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10954, metadata !DIExpression()), !dbg !10959
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10955, metadata !DIExpression()), !dbg !10959
  call void @llvm.dbg.value(metadata i8* %2, metadata !10956, metadata !DIExpression()), !dbg !10959
  %5 = bitcast i32* %4 to i8*, !dbg !10960
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10960
  call void @llvm.dbg.value(metadata i32 0, metadata !10957, metadata !DIExpression()), !dbg !10959
  store i32 0, i32* %4, align 4, !dbg !10961
  call void @llvm.dbg.value(metadata i32* %4, metadata !10957, metadata !DIExpression(DW_OP_deref)), !dbg !10959
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10962
  call void @llvm.dbg.value(metadata i16* %6, metadata !10958, metadata !DIExpression()), !dbg !10959
  %7 = load i32, i32* %4, align 4, !dbg !10963
  call void @llvm.dbg.value(metadata i32 %7, metadata !10957, metadata !DIExpression()), !dbg !10959
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10964
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10965
  ret i32 %8, !dbg !10966
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !10967 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10969, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32* %1, metadata !10970, metadata !DIExpression()), !dbg !10974
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10975
  %4 = load i16*, i16** %3, align 4, !dbg !10975
  call void @llvm.dbg.value(metadata i16* %4, metadata !10971, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32 0, metadata !10972, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32 0, metadata !10973, metadata !DIExpression()), !dbg !10974
  %5 = icmp eq i16* %4, null, !dbg !10976
  br i1 %5, label %22, label %6, !dbg !10978

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10972, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i16* %8, metadata !10971, metadata !DIExpression()), !dbg !10974
  %9 = load i16, i16* %8, align 2, !dbg !10979
  %10 = icmp eq i16 %9, -32768, !dbg !10983
  call void @llvm.dbg.value(metadata i32 undef, metadata !10972, metadata !DIExpression()), !dbg !10974
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10984
  call void @llvm.dbg.value(metadata i16* %11, metadata !10971, metadata !DIExpression()), !dbg !10974
  %12 = zext i1 %10 to i32, !dbg !10985
  %13 = add i32 %7, %12, !dbg !10985
  call void @llvm.dbg.value(metadata i32 %13, metadata !10972, metadata !DIExpression()), !dbg !10974
  %14 = icmp eq i32 %13, 2, !dbg !10986
  br i1 %14, label %15, label %6, !dbg !10987

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10974
  call void @llvm.dbg.value(metadata i32 %16, metadata !10973, metadata !DIExpression()), !dbg !10974
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10988
  %18 = load i16, i16* %17, align 2, !dbg !10988
  %19 = icmp eq i16 %18, 32767, !dbg !10989
  %20 = add i32 %16, 1, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %20, metadata !10973, metadata !DIExpression()), !dbg !10974
  br i1 %19, label %21, label %15, !dbg !10992, !llvm.loop !10993

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10995
  br label %22, !dbg !10996

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10997
  call void @llvm.dbg.value(metadata i16* %23, metadata !10971, metadata !DIExpression()), !dbg !10974
  ret i16* %23, !dbg !10998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !10999 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11000
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11001
  ret i32* %2, !dbg !11002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !11003 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11145, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11146, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11147, metadata !DIExpression()), !dbg !11148
  ret void, !dbg !11149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !11150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11154, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i32 %1, metadata !11155, metadata !DIExpression()), !dbg !11156
  ret void, !dbg !11157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !11158 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11162, metadata !DIExpression()), !dbg !11164
  call void @llvm.dbg.value(metadata i32 %1, metadata !11163, metadata !DIExpression()), !dbg !11164
  ret void, !dbg !11165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !11166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11170, metadata !DIExpression()), !dbg !11172
  call void @llvm.dbg.value(metadata i8* %1, metadata !11171, metadata !DIExpression()), !dbg !11172
  ret i32 -134, !dbg !11173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !11174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11178, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i8* %1, metadata !11179, metadata !DIExpression()), !dbg !11180
  ret i32 -134, !dbg !11181
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11185, metadata !DIExpression()), !dbg !11186
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11187, !srcloc !11193
  call void @llvm.dbg.value(metadata i32 undef, metadata !11190, metadata !DIExpression()) #22, !dbg !11194
  call void @llvm.dbg.value(metadata i32 undef, metadata !11191, metadata !DIExpression()) #22, !dbg !11194
  br label %3, !dbg !11195

3:                                                ; preds = %3, %1
  br label %3, !dbg !11196, !llvm.loop !11199
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11206, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11207, metadata !DIExpression()), !dbg !11208
  tail call void @arch_system_halt(i32 noundef %0) #27, !dbg !11209
  unreachable, !dbg !11209
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11212, metadata !DIExpression()), !dbg !11213
  tail call void @arch_system_halt(i32 noundef %0) #27, !dbg !11214
  unreachable, !dbg !11214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11217, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11218, metadata !DIExpression()), !dbg !11221
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11222, !srcloc !11193
  call void @llvm.dbg.value(metadata i32 undef, metadata !11190, metadata !DIExpression()) #22, !dbg !11224
  call void @llvm.dbg.value(metadata i32 undef, metadata !11191, metadata !DIExpression()) #22, !dbg !11224
  call void @llvm.dbg.value(metadata i32 undef, metadata !11219, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11220, metadata !DIExpression()), !dbg !11221
  %4 = icmp eq %struct.__esf* %1, null, !dbg !11225
  br i1 %4, label %6, label %5, !dbg !11227

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !11228
  br label %7, !dbg !11229

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !11228
  br label %7, !dbg !11232

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !11222
  call void @llvm.dbg.value(metadata i32 %8, metadata !11190, metadata !DIExpression()) #22, !dbg !11224
  call void @llvm.dbg.value(metadata i32 %8, metadata !11219, metadata !DIExpression()), !dbg !11221
  %9 = tail call fastcc %struct.k_thread* @k_current_get.85() #25, !dbg !11234
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11220, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.value(metadata i32 undef, metadata !11235, metadata !DIExpression()) #22, !dbg !11238
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #22, !dbg !11240, !srcloc !11241
  tail call fastcc void @k_thread_abort.86(%struct.k_thread* noundef %9) #24, !dbg !11242
  ret void, !dbg !11245
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.85() unnamed_addr #9 !dbg !11246 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.87() #25, !dbg !11250
  ret %struct.k_thread* %1, !dbg !11251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.86(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11252 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11256, metadata !DIExpression()), !dbg !11257
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !11258, !srcloc !11260
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #23, !dbg !11261
  ret void, !dbg !11262
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.87() unnamed_addr #9 !dbg !11263 {
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !11264, !srcloc !11266
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #23, !dbg !11267
  ret %struct.k_thread* %1, !dbg !11268
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11273, metadata !DIExpression()), !dbg !11276
  call void @llvm.dbg.value(metadata i32 %1, metadata !11274, metadata !DIExpression()), !dbg !11276
  call void @llvm.dbg.value(metadata i32 %2, metadata !11275, metadata !DIExpression()), !dbg !11276
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #23, !dbg !11277
  ret void, !dbg !11278
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11279 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11283, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i8* %1, metadata !11284, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 %2, metadata !11285, metadata !DIExpression()), !dbg !11286
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #23, !dbg !11287
  ret void, !dbg !11288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11289 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !11290
  ret void, !dbg !11291
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11296, metadata !DIExpression()), !dbg !11297
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !11298
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11299
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11300
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11301
  %4 = trunc i32 %0 to i8, !dbg !11302
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11303
  store i8 %4, i8* %5, align 4, !dbg !11304
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11305
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !11306
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11307
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11308
  store i8* %8, i8** %9, align 4, !dbg !11309
  ret void, !dbg !11310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11313, metadata !DIExpression()), !dbg !11319
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11320
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11314, metadata !DIExpression()), !dbg !11319
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11321
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11315, metadata !DIExpression()), !dbg !11319
  call void @llvm.dbg.value(metadata i8* null, metadata !11318, metadata !DIExpression()), !dbg !11319
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11322
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11323
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #23, !dbg !11324
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !11325
  ret void, !dbg !11326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !11327 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11331, metadata !DIExpression()), !dbg !11332
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !11333
  ret i8* %2, !dbg !11334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11335 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11340, metadata !DIExpression()), !dbg !11341
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11342
  %3 = load i8, i8* %2, align 1, !dbg !11343
  %4 = and i8 %3, -5, !dbg !11343
  store i8 %4, i8* %2, align 1, !dbg !11343
  ret void, !dbg !11344
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !11345 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !11348
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #23, !dbg !11349
  %3 = ptrtoint i8* %2 to i32, !dbg !11358
  %4 = add i32 %3, 2048, !dbg !11359
  call void @llvm.dbg.value(metadata i32 %4, metadata !11353, metadata !DIExpression()) #22, !dbg !11360
  call void @llvm.dbg.value(metadata i32 %4, metadata !11361, metadata !DIExpression()) #22, !dbg !11364
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #22, !dbg !11366, !srcloc !11367
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11368
  %6 = or i32 %5, 512, !dbg !11368
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11368
  tail call fastcc void @__NVIC_SetPriority.94(i32 noundef -2, i32 noundef 255) #23, !dbg !11369
  tail call fastcc void @__NVIC_SetPriority.94(i32 noundef -5, i32 noundef 0) #23, !dbg !11372
  tail call fastcc void @__NVIC_SetPriority.94(i32 noundef -12, i32 noundef 0) #23, !dbg !11373
  tail call fastcc void @__NVIC_SetPriority.94(i32 noundef -11, i32 noundef 0) #23, !dbg !11374
  tail call fastcc void @__NVIC_SetPriority.94(i32 noundef -10, i32 noundef 0) #23, !dbg !11375
  tail call fastcc void @__NVIC_SetPriority.94(i32 noundef -4, i32 noundef 0) #23, !dbg !11376
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11377
  %8 = or i32 %7, 458752, !dbg !11377
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11377
  tail call void @z_arm_fault_init() #23, !dbg !11378
  tail call void @z_arm_cpu_idle_init() #23, !dbg !11379
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11380
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11383
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !11384
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #22, !dbg !11384
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11347, metadata !DIExpression()), !dbg !11385
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !11386
  call void @z_device_state_init() #23, !dbg !11387
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !11388
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !11389
  %10 = call fastcc i8* @prepare_multithreading() #24, !dbg !11390
  call fastcc void @switch_to_main_thread(i8* noundef %10) #27, !dbg !11391
  unreachable, !dbg !11391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1940, metadata !DIExpression()), !dbg !11392
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11393
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11393
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1941, metadata !DIExpression()), !dbg !11392
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1941, metadata !DIExpression()), !dbg !11392
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11394
  br i1 %7, label %8, label %35, !dbg !11395

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1941, metadata !DIExpression()), !dbg !11392
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11396
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11396
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1951, metadata !DIExpression()), !dbg !11397
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11398
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11398
  %14 = tail call i32 %13(%struct.device* noundef %11) #23, !dbg !11399
  call void @llvm.dbg.value(metadata i32 %14, metadata !1955, metadata !DIExpression()), !dbg !11397
  %15 = icmp eq %struct.device* %11, null, !dbg !11400
  br i1 %15, label %32, label %16, !dbg !11402

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11403
  br i1 %17, label %26, label %18, !dbg !11406

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11407
  call void @llvm.dbg.value(metadata i32 %19, metadata !1955, metadata !DIExpression()), !dbg !11397
  %20 = icmp ult i32 %19, 255, !dbg !11409
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11409
  call void @llvm.dbg.value(metadata i32 %21, metadata !1955, metadata !DIExpression()), !dbg !11397
  %22 = trunc i32 %21 to i8, !dbg !11410
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11411
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11411
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11412
  store i8 %22, i8* %25, align 1, !dbg !11413
  br label %26, !dbg !11414

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11415
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11415
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11416
  %30 = load i8, i8* %29, align 1, !dbg !11417
  %31 = or i8 %30, 1, !dbg !11417
  store i8 %31, i8* %29, align 1, !dbg !11417
  br label %32, !dbg !11418

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11419
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1941, metadata !DIExpression()), !dbg !11392
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11394
  br i1 %34, label %8, label %35, !dbg !11395, !llvm.loop !11420

35:                                               ; preds = %32, %1
  ret void, !dbg !11422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.94(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11425, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.value(metadata i32 %1, metadata !11426, metadata !DIExpression()), !dbg !11427
  %3 = trunc i32 %1 to i8, !dbg !11428
  %4 = shl i8 %3, 4, !dbg !11428
  %5 = and i32 %0, 15, !dbg !11431
  %6 = add nsw i32 %5, -4, !dbg !11432
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11433
  store volatile i8 %4, i8* %7, align 1, !dbg !11434
  ret void, !dbg !11435
}

; Function Attrs: optsize
declare !dbg !11436 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !11437 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11440, metadata !DIExpression()), !dbg !11441
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11442
  store i8 1, i8* %2, align 1, !dbg !11443
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11444
  store i8 1, i8* %3, align 4, !dbg !11445
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !11446
  store %struct.k_heap* null, %struct.k_heap** %4, align 4, !dbg !11447
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11448
  ret void, !dbg !11449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11450 {
  tail call void @z_sched_init() #23, !dbg !11455
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11456
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0)) #23, !dbg !11457
  call void @llvm.dbg.value(metadata i8* %1, metadata !11454, metadata !DIExpression()), !dbg !11458
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11459
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #23, !dbg !11460
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !11461
  ret i8* %1, !dbg !11462
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !11463 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11467, metadata !DIExpression()), !dbg !11468
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #23, !dbg !11469
  unreachable, !dbg !11470
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11473, metadata !DIExpression()), !dbg !11476
  call void @llvm.dbg.value(metadata i8* %1, metadata !11474, metadata !DIExpression()), !dbg !11476
  call void @llvm.dbg.value(metadata i8* %2, metadata !11475, metadata !DIExpression()), !dbg !11476
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11477
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !11478
  tail call void @boot_banner() #23, !dbg !11479
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !11480
  tail call void @z_init_static_threads() #23, !dbg !11481
  tail call void @main() #23, !dbg !11482
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11483
  %5 = and i8 %4, -2, !dbg !11483
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11483
  ret void, !dbg !11484
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !11485 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11495, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.value(metadata i8* %1, metadata !11496, metadata !DIExpression()), !dbg !11497
  ret void, !dbg !11498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !11499 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11501, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.value(metadata i8* %1, metadata !11502, metadata !DIExpression()), !dbg !11503
  ret void, !dbg !11504
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11505 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !11506, !srcloc !11513
  call void @llvm.dbg.value(metadata i32 %1, metadata !11509, metadata !DIExpression()) #22, !dbg !11514
  %2 = icmp ne i32 %1, 0, !dbg !11515
  ret i1 %2, !dbg !11516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !11517 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11518
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11519
  %3 = load i8, i8* %2, align 4, !dbg !11520
  %4 = or i8 %3, 1, !dbg !11520
  store i8 %4, i8* %2, align 4, !dbg !11520
  ret void, !dbg !11521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !11522 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11523
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11524
  %3 = load i8, i8* %2, align 4, !dbg !11525
  %4 = and i8 %3, -2, !dbg !11525
  store i8 %4, i8* %2, align 4, !dbg !11525
  ret void, !dbg !11526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !11527 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11528
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11529
  %3 = load i8, i8* %2, align 4, !dbg !11529
  %4 = and i8 %3, 1, !dbg !11530
  %5 = icmp ne i8 %4, 0, !dbg !11531
  ret i1 %5, !dbg !11532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !11533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11537, metadata !DIExpression()), !dbg !11539
  call void @llvm.dbg.value(metadata i8* %1, metadata !11538, metadata !DIExpression()), !dbg !11539
  ret i32 -88, !dbg !11540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !11541 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11545, metadata !DIExpression()), !dbg !11546
  ret i8* null, !dbg !11547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !11548 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11552, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i8* %1, metadata !11553, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i32 %2, metadata !11554, metadata !DIExpression()), !dbg !11555
  ret i32 -88, !dbg !11556
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1962 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2073, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i8* %1, metadata !2074, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 %2, metadata !2075, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 0, metadata !2076, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i8 undef, metadata !2078, metadata !DIExpression()), !dbg !11557
  %4 = icmp eq i8* %1, null, !dbg !11558
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11560
  br i1 %6, label %46, label %7, !dbg !11560

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11561
  %9 = load i8, i8* %8, align 1, !dbg !11561
  call void @llvm.dbg.value(metadata i8 %9, metadata !2078, metadata !DIExpression()), !dbg !11557
  %10 = add i32 %2, -1, !dbg !11562
  call void @llvm.dbg.value(metadata i32 %10, metadata !2075, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i8 0, metadata !2079, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata i8 %9, metadata !2078, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 0, metadata !2076, metadata !DIExpression()), !dbg !11557
  %11 = icmp eq i8 %9, 0, !dbg !11564
  br i1 %11, label %12, label %15, !dbg !11566

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11567
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11568
  store i8 0, i8* %14, align 1, !dbg !11569
  br label %46, !dbg !11570

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2079, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata i8 %17, metadata !2078, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 %18, metadata !2076, metadata !DIExpression()), !dbg !11557
  %19 = zext i8 %17 to i32, !dbg !11571
  %20 = zext i8 %16 to i32, !dbg !11572
  %21 = shl nuw i32 1, %20, !dbg !11572
  call void @llvm.dbg.value(metadata i32 %21, metadata !2077, metadata !DIExpression()), !dbg !11557
  %22 = and i32 %21, %19, !dbg !11574
  %23 = icmp eq i32 %22, 0, !dbg !11576
  br i1 %23, label %42, label %24, !dbg !11577

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11578
  %26 = sub i32 %10, %18, !dbg !11579
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11580
  %28 = load i8*, i8** %27, align 4, !dbg !11580
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11581
  %30 = load i32, i32* %29, align 4, !dbg !11581
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !11582
  %32 = add i32 %31, %18, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %32, metadata !2076, metadata !DIExpression()), !dbg !11557
  %33 = trunc i32 %21 to i8, !dbg !11584
  %34 = xor i8 %33, -1, !dbg !11584
  %35 = and i8 %17, %34, !dbg !11584
  call void @llvm.dbg.value(metadata i8 %35, metadata !2078, metadata !DIExpression()), !dbg !11557
  %36 = icmp eq i8 %35, 0, !dbg !11585
  br i1 %36, label %12, label %37, !dbg !11587

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11588
  %39 = sub i32 %10, %32, !dbg !11590
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #24, !dbg !11591
  %41 = add i32 %40, %32, !dbg !11592
  call void @llvm.dbg.value(metadata i32 %41, metadata !2076, metadata !DIExpression()), !dbg !11557
  br label %42, !dbg !11593

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11557
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11557
  call void @llvm.dbg.value(metadata i8 %44, metadata !2078, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 %43, metadata !2076, metadata !DIExpression()), !dbg !11557
  %45 = add i8 %16, 1, !dbg !11594
  call void @llvm.dbg.value(metadata i8 %45, metadata !2079, metadata !DIExpression()), !dbg !11563
  br label %15, !dbg !11566

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !11557
  ret i8* %47, !dbg !11595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11596 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11600, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.value(metadata i32 %1, metadata !11601, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.value(metadata i8* %2, metadata !11602, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.value(metadata i32 %3, metadata !11603, metadata !DIExpression()), !dbg !11605
  %5 = icmp ult i32 %1, %3, !dbg !11606
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11606
  call void @llvm.dbg.value(metadata i32 %6, metadata !11604, metadata !DIExpression()), !dbg !11605
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #23, !dbg !11607
  ret i32 %6, !dbg !11608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11609 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11613, metadata !DIExpression()), !dbg !11614
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #23, !dbg !11615
  ret void, !dbg !11616
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11617 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11626, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11627, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i32 %2, metadata !11628, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11629, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i8* %4, metadata !11630, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i8* %5, metadata !11631, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i8* %6, metadata !11632, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i32 %7, metadata !11633, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i32 %8, metadata !11634, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i8* undef, metadata !11635, metadata !DIExpression()), !dbg !11637
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11638
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #24, !dbg !11639
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11640
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !11641
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !11642
  call void @llvm.dbg.value(metadata i8* %13, metadata !11636, metadata !DIExpression()), !dbg !11637
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #23, !dbg !11643
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11644
  store i8* null, i8** %14, align 4, !dbg !11645
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11646
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11646
  br i1 %16, label %20, label %17, !dbg !11648

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 5, !dbg !11649
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 4, !dbg !11649
  br label %20, !dbg !11650

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11637
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !11651
  store %struct.k_heap* %21, %struct.k_heap** %22, align 4, !dbg !11653
  ret i8* %13, !dbg !11654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !11655 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11660, metadata !DIExpression()), !dbg !11661
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11662
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !11663
  ret void, !dbg !11664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !11665 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11670, metadata !DIExpression()), !dbg !11674
  call void @llvm.dbg.value(metadata i32 %1, metadata !11671, metadata !DIExpression()), !dbg !11674
  call void @llvm.dbg.value(metadata i32 %2, metadata !11672, metadata !DIExpression()), !dbg !11674
  call void @llvm.dbg.value(metadata i32 %3, metadata !11673, metadata !DIExpression()), !dbg !11674
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11675
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11676
  %6 = trunc i32 %3 to i8, !dbg !11677
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11678
  store i8 %6, i8* %7, align 4, !dbg !11679
  %8 = trunc i32 %2 to i8, !dbg !11680
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11681
  store i8 %8, i8* %9, align 1, !dbg !11682
  %10 = trunc i32 %1 to i8, !dbg !11683
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11684
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11684
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11684
  store i8 %10, i8* %13, align 2, !dbg !11685
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11686
  store i8 0, i8* %14, align 1, !dbg !11687
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !11688
  ret void, !dbg !11689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !11690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11694, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11695, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.value(metadata i32 %1, metadata !11696, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.value(metadata i32 0, metadata !11701, metadata !DIExpression()), !dbg !11702
  %3 = add i32 %1, 7, !dbg !11703
  %4 = and i32 %3, -8, !dbg !11703
  call void @llvm.dbg.value(metadata i32 %4, metadata !11697, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.value(metadata i8* undef, metadata !11700, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.value(metadata i32 %4, metadata !11698, metadata !DIExpression()), !dbg !11702
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !11705
  call void @llvm.dbg.value(metadata i8* %5, metadata !11699, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.value(metadata i32 0, metadata !11701, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.value(metadata i8* %5, metadata !11699, metadata !DIExpression()), !dbg !11702
  ret i8* %5, !dbg !11706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11707 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11712, metadata !DIExpression()), !dbg !11713
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11714
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !11715
  ret void, !dbg !11716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11717 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11719, metadata !DIExpression()), !dbg !11720
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11721
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !11722
  ret void, !dbg !11723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11724 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11728, metadata !DIExpression()), !dbg !11729
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11730
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11731
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11732
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11733
  ret void, !dbg !11734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11735 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11740, metadata !DIExpression()), !dbg !11741
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11742
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11743
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11744
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11745
  ret void, !dbg !11746
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11747 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11764, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11755, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11756, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i32 %2, metadata !11757, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11758, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i8* %4, metadata !11759, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i8* %5, metadata !11760, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i8* %6, metadata !11761, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i32 %7, metadata !11762, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i32 %8, metadata !11763, metadata !DIExpression()), !dbg !11765
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !11766
  %13 = icmp eq i64 %11, -1, !dbg !11767
  br i1 %13, label %15, label %14, !dbg !11769

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !11770
  br label %15, !dbg !11772

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11774 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11779, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11778, metadata !DIExpression()), !dbg !11780
  %4 = icmp eq i64 %3, 0, !dbg !11781
  br i1 %4, label %5, label %6, !dbg !11783

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !11784
  br label %7, !dbg !11786

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !11787
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11790 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11794, metadata !DIExpression()), !dbg !11795
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !11796, !srcloc !11798
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !11799
  ret void, !dbg !11800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11801 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11804, metadata !DIExpression()), !dbg !11805
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11803, metadata !DIExpression()), !dbg !11805
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11806
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #23, !dbg !11807
  ret void, !dbg !11808
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11809 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11811, metadata !DIExpression()), !dbg !11831
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11832

1:                                                ; preds = %2
  tail call void @k_sched_lock() #23, !dbg !11833
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11829, metadata !DIExpression()), !dbg !11834
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11835

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11811, metadata !DIExpression()), !dbg !11831
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11836
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11836
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11839
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11839
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11840
  %9 = load i32, i32* %8, align 4, !dbg !11840
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11841
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11841
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11842
  %13 = load i8*, i8** %12, align 4, !dbg !11842
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11843
  %15 = load i8*, i8** %14, align 4, !dbg !11843
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11844
  %17 = load i8*, i8** %16, align 4, !dbg !11844
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11845
  %19 = load i32, i32* %18, align 4, !dbg !11845
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11846
  %21 = load i32, i32* %20, align 4, !dbg !11846
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !11847
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11848
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11849
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11850
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11850
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11851
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11811, metadata !DIExpression()), !dbg !11831
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11852
  br i1 %27, label %2, label %1, !dbg !11832, !llvm.loop !11854

28:                                               ; preds = %0
  tail call void @k_sched_lock() #23, !dbg !11833
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11829, metadata !DIExpression()), !dbg !11834
  br label %29, !dbg !11835

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #23, !dbg !11856
  ret void, !dbg !11857

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11829, metadata !DIExpression()), !dbg !11834
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11858
  %33 = load i32, i32* %32, align 4, !dbg !11858
  %34 = icmp eq i32 %33, -1, !dbg !11862
  br i1 %34, label %43, label %35, !dbg !11863

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11864
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11864
  %38 = icmp sgt i32 %33, 0, !dbg !11866
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11866
  %40 = zext i32 %39 to i64, !dbg !11866
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.107(i64 noundef %40) #24, !dbg !11866
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11867
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !11867
  br label %43, !dbg !11868

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11869
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11829, metadata !DIExpression()), !dbg !11834
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11870
  br i1 %45, label %30, label %29, !dbg !11835, !llvm.loop !11872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.107(i64 noundef %0) unnamed_addr #11 !dbg !11874 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11876, metadata !DIExpression()), !dbg !11877
  call void @llvm.dbg.value(metadata i64 %0, metadata !11878, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i32 1000, metadata !11881, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i32 10000, metadata !11882, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8 1, metadata !11883, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8 0, metadata !11884, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8 1, metadata !11885, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8 0, metadata !11886, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8 1, metadata !11887, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8 0, metadata !11888, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i64 0, metadata !11889, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i64 0, metadata !11889, metadata !DIExpression()), !dbg !11893
  %2 = mul i64 %0, 10, !dbg !11895
  ret i64 %2, !dbg !11901
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !11902 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11904, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.value(metadata i8* %1, metadata !11905, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.value(metadata i8* %2, metadata !11906, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.value(metadata i8* %3, metadata !11907, metadata !DIExpression()), !dbg !11908
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11909
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11910
  %7 = load i8, i8* %6, align 4, !dbg !11911
  %8 = or i8 %7, 4, !dbg !11911
  store i8 %8, i8* %6, align 4, !dbg !11911
  tail call void @z_thread_essential_clear() #24, !dbg !11912
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !11913
  unreachable, !dbg !11913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !11914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11918, metadata !DIExpression()), !dbg !11919
  ret i32 -134, !dbg !11920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !11921 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11925, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i32 %1, metadata !11926, metadata !DIExpression()), !dbg !11927
  ret i32 -134, !dbg !11928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !11929 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11936, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11937, metadata !DIExpression()), !dbg !11938
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11939
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11941
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11938
  ret i32 %6, !dbg !11942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !11943 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11947, metadata !DIExpression()), !dbg !11948
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11949
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11948
  ret i32 %3, !dbg !11951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11952 {
  tail call void @sys_clock_idle_exit() #23, !dbg !11954
  ret void, !dbg !11955
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !11956 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11958, metadata !DIExpression()), !dbg !11961
  call void @llvm.dbg.value(metadata i8* %1, metadata !11959, metadata !DIExpression()), !dbg !11961
  call void @llvm.dbg.value(metadata i8* %2, metadata !11960, metadata !DIExpression()), !dbg !11961
  br label %4, !dbg !11962

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11963, !srcloc !11970
  call void @llvm.dbg.value(metadata i32 undef, metadata !11966, metadata !DIExpression()) #22, !dbg !11971
  call void @llvm.dbg.value(metadata i32 undef, metadata !11967, metadata !DIExpression()) #22, !dbg !11971
  tail call fastcc void @k_cpu_idle() #24, !dbg !11972
  br label %4, !dbg !11962, !llvm.loop !11973
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11975 {
  tail call void @arch_cpu_idle() #23, !dbg !11976
  ret void, !dbg !11977
}

; Function Attrs: optsize
declare !dbg !11978 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !11979 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !11994, metadata !DIExpression()), !dbg !11997
  call void @llvm.dbg.value(metadata i32 %1, metadata !11995, metadata !DIExpression()), !dbg !11997
  call void @llvm.dbg.value(metadata i32 %2, metadata !11996, metadata !DIExpression()), !dbg !11997
  %4 = icmp eq i32 %2, 0, !dbg !11998
  %5 = icmp ugt i32 %1, %2, !dbg !11998
  %6 = or i1 %4, %5, !dbg !11998
  br i1 %6, label %11, label %7, !dbg !11998

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12000
  store i32 %1, i32* %8, align 4, !dbg !12001
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !12002
  store i32 %2, i32* %9, align 4, !dbg !12003
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !12004
  tail call fastcc void @z_waitq_init.112(%union.anon* noundef %10) #24, !dbg !12005
  br label %11, !dbg !12006

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !11997
  ret i32 %12, !dbg !12007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.112(%union.anon* noundef %0) unnamed_addr #4 !dbg !12008 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12013, metadata !DIExpression()), !dbg !12014
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12015
  tail call fastcc void @sys_dlist_init.113(%struct._dnode* noundef %2) #24, !dbg !12016
  ret void, !dbg !12017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.113(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12018 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12023, metadata !DIExpression()), !dbg !12024
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12025
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12026
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12027
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12028
  ret void, !dbg !12029
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !12030 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !12034, metadata !DIExpression()), !dbg !12114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12115, metadata !DIExpression()) #22, !dbg !12122
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12124, !srcloc !12130
  call void @llvm.dbg.value(metadata i32 undef, metadata !12127, metadata !DIExpression()) #22, !dbg !12131
  call void @llvm.dbg.value(metadata i32 undef, metadata !12128, metadata !DIExpression()) #22, !dbg !12131
  call void @llvm.dbg.value(metadata i32 undef, metadata !12121, metadata !DIExpression()) #22, !dbg !12122
  call void @llvm.dbg.value(metadata i32 undef, metadata !12035, metadata !DIExpression()), !dbg !12114
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !12132
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #23, !dbg !12133
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12040, metadata !DIExpression()), !dbg !12114
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12134
  br i1 %5, label %8, label %6, !dbg !12136

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12137, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i32 0, metadata !12142, metadata !DIExpression()), !dbg !12143
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 6, i32 1, !dbg !12146
  store i32 0, i32* %7, align 4, !dbg !12147
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #23, !dbg !12148
  br label %16, !dbg !12149

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12150
  %10 = load i32, i32* %9, align 4, !dbg !12150
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !12152
  %12 = load i32, i32* %11, align 4, !dbg !12152
  %13 = icmp ne i32 %10, %12, !dbg !12153
  %14 = zext i1 %13 to i32, !dbg !12154
  %15 = add i32 %10, %14, !dbg !12155
  store i32 %15, i32* %9, align 4, !dbg !12155
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !12124
  call void @llvm.dbg.value(metadata i32 %17, metadata !12127, metadata !DIExpression()) #22, !dbg !12131
  call void @llvm.dbg.value(metadata i32 %17, metadata !12121, metadata !DIExpression()) #22, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %17, metadata !12035, metadata !DIExpression()), !dbg !12114
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !12156
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #23, !dbg !12156
  ret void, !dbg !12157
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !12158 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12167, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !12166, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata i32 0, metadata !12168, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12115, metadata !DIExpression()) #22, !dbg !12172
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12174, !srcloc !12130
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %4, metadata !12127, metadata !DIExpression()) #22, !dbg !12176
  call void @llvm.dbg.value(metadata i32 undef, metadata !12128, metadata !DIExpression()) #22, !dbg !12176
  call void @llvm.dbg.value(metadata i32 %4, metadata !12121, metadata !DIExpression()) #22, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %4, metadata !12169, metadata !DIExpression()), !dbg !12171
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12177
  %6 = load i32, i32* %5, align 4, !dbg !12177
  %7 = icmp eq i32 %6, 0, !dbg !12177
  br i1 %7, label %10, label %8, !dbg !12179, !prof !12180

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !12181
  store i32 %9, i32* %5, align 4, !dbg !12181
  call void @llvm.dbg.value(metadata i32 %4, metadata !12183, metadata !DIExpression()) #22, !dbg !12189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12188, metadata !DIExpression()) #22, !dbg !12189
  call void @llvm.dbg.value(metadata i32 %4, metadata !12191, metadata !DIExpression()) #22, !dbg !12194
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !12196, !srcloc !12197
  call void @llvm.dbg.value(metadata i32 0, metadata !12168, metadata !DIExpression()), !dbg !12171
  br label %18, !dbg !12198

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12167, metadata !DIExpression()), !dbg !12171
  %12 = icmp eq i64 %11, 0, !dbg !12199
  br i1 %12, label %13, label %14, !dbg !12201

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !12183, metadata !DIExpression()) #22, !dbg !12202
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12188, metadata !DIExpression()) #22, !dbg !12202
  call void @llvm.dbg.value(metadata i32 %4, metadata !12191, metadata !DIExpression()) #22, !dbg !12205
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !12207, !srcloc !12197
  call void @llvm.dbg.value(metadata i32 -16, metadata !12168, metadata !DIExpression()), !dbg !12171
  br label %18, !dbg !12208

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !12209
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !12210
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #23, !dbg !12210
  call void @llvm.dbg.value(metadata i32 %17, metadata !12168, metadata !DIExpression()), !dbg !12171
  br label %18, !dbg !12211

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !12171
  call void @llvm.dbg.value(metadata i32 %19, metadata !12168, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.label(metadata !12170), !dbg !12212
  ret i32 %19, !dbg !12213
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !12214 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !12216, metadata !DIExpression()), !dbg !12219
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12115, metadata !DIExpression()) #22, !dbg !12220
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12222, !srcloc !12130
  call void @llvm.dbg.value(metadata i32 undef, metadata !12127, metadata !DIExpression()) #22, !dbg !12224
  call void @llvm.dbg.value(metadata i32 undef, metadata !12128, metadata !DIExpression()) #22, !dbg !12224
  call void @llvm.dbg.value(metadata i32 undef, metadata !12121, metadata !DIExpression()) #22, !dbg !12220
  call void @llvm.dbg.value(metadata i32 undef, metadata !12218, metadata !DIExpression()), !dbg !12219
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #23, !dbg !12225
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12217, metadata !DIExpression()), !dbg !12219
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12227
  br i1 %5, label %11, label %6, !dbg !12229

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !12137, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata i32 -11, metadata !12142, metadata !DIExpression()), !dbg !12230
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 6, i32 1, !dbg !12232
  store i32 -11, i32* %8, align 4, !dbg !12233
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #23, !dbg !12234
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #23, !dbg !12225
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12217, metadata !DIExpression()), !dbg !12219
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !12227
  br i1 %10, label %11, label %6, !dbg !12229, !llvm.loop !12235

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !12222
  call void @llvm.dbg.value(metadata i32 %12, metadata !12127, metadata !DIExpression()) #22, !dbg !12224
  call void @llvm.dbg.value(metadata i32 %12, metadata !12121, metadata !DIExpression()) #22, !dbg !12220
  call void @llvm.dbg.value(metadata i32 %12, metadata !12218, metadata !DIExpression()), !dbg !12219
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12238
  store i32 0, i32* %13, align 4, !dbg !12239
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !12240
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #23, !dbg !12240
  ret void, !dbg !12241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !12242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12246, metadata !DIExpression()), !dbg !12250
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12247, metadata !DIExpression()), !dbg !12250
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12251
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12251
  %5 = load i8, i8* %4, align 2, !dbg !12251
  call void @llvm.dbg.value(metadata i8 %5, metadata !12248, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12250
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12252
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12252
  %8 = load i8, i8* %7, align 2, !dbg !12252
  call void @llvm.dbg.value(metadata i8 %8, metadata !12249, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12250
  %9 = icmp eq i8 %8, %5, !dbg !12253
  %10 = sext i8 %5 to i32, !dbg !12255
  %11 = sext i8 %8 to i32, !dbg !12255
  %12 = sub nsw i32 %11, %10, !dbg !12255
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12255
  ret i32 %13, !dbg !12256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12261, metadata !DIExpression()), !dbg !12262
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !12263
  %3 = icmp eq i32 %2, 0, !dbg !12265
  br i1 %3, label %8, label %4, !dbg !12266

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #23, !dbg !12267
  %6 = add i32 %5, %2, !dbg !12269
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12270
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !12271
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #23, !dbg !12272
  br label %8, !dbg !12273

8:                                                ; preds = %4, %1
  ret void, !dbg !12274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !12275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12279, metadata !DIExpression()), !dbg !12281
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %1, metadata !12280, metadata !DIExpression()), !dbg !12281
  ret i32 %1, !dbg !12283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12288, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i32 %1, metadata !12289, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i32 0, metadata !12290, metadata !DIExpression()), !dbg !12298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !12306
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12308, !srcloc !12314
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12308
  call void @llvm.dbg.value(metadata i32 %4, metadata !12311, metadata !DIExpression()) #22, !dbg !12315
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !12315
  call void @llvm.dbg.value(metadata i32 %4, metadata !12305, metadata !DIExpression()) #22, !dbg !12306
  call void @llvm.dbg.value(metadata i32 %4, metadata !12296, metadata !DIExpression()), !dbg !12298
  call void @llvm.dbg.value(metadata i32 undef, metadata !12290, metadata !DIExpression()), !dbg !12298
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12316
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !12319
  %6 = icmp sgt i32 %0, 0, !dbg !12320
  %7 = icmp sgt i32 %5, 2, !dbg !12322
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12322
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12322
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12323
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12324
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12325
  call void @llvm.dbg.value(metadata i32 %4, metadata !12326, metadata !DIExpression()) #22, !dbg !12332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !12332
  call void @llvm.dbg.value(metadata i32 %4, metadata !12334, metadata !DIExpression()) #22, !dbg !12337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !12339, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !12290, metadata !DIExpression()), !dbg !12298
  call void @llvm.dbg.value(metadata i32 undef, metadata !12290, metadata !DIExpression()), !dbg !12298
  ret void, !dbg !12341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !12342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12346, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 %0, metadata !12348, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12363
  call void @llvm.dbg.value(metadata i32 1000, metadata !12351, metadata !DIExpression()), !dbg !12363
  call void @llvm.dbg.value(metadata i32 10000, metadata !12352, metadata !DIExpression()), !dbg !12363
  call void @llvm.dbg.value(metadata i8 1, metadata !12353, metadata !DIExpression()), !dbg !12363
  call void @llvm.dbg.value(metadata i1 true, metadata !12354, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12363
  call void @llvm.dbg.value(metadata i1 true, metadata !12355, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12363
  call void @llvm.dbg.value(metadata i8 0, metadata !12356, metadata !DIExpression()), !dbg !12363
  call void @llvm.dbg.value(metadata i1 true, metadata !12357, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12363
  call void @llvm.dbg.value(metadata i1 false, metadata !12358, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12363
  call void @llvm.dbg.value(metadata i64 0, metadata !12359, metadata !DIExpression()), !dbg !12363
  call void @llvm.dbg.value(metadata i64 0, metadata !12359, metadata !DIExpression()), !dbg !12363
  %2 = mul i32 %0, 10, !dbg !12365
  ret i32 %2, !dbg !12371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12374, metadata !DIExpression()), !dbg !12376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !12377
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12379, !srcloc !12314
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12379
  call void @llvm.dbg.value(metadata i32 %3, metadata !12311, metadata !DIExpression()) #22, !dbg !12381
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !12381
  call void @llvm.dbg.value(metadata i32 %3, metadata !12305, metadata !DIExpression()) #22, !dbg !12377
  call void @llvm.dbg.value(metadata i32 %3, metadata !12375, metadata !DIExpression()), !dbg !12376
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12382
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12384
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !12385
  br i1 %6, label %7, label %8, !dbg !12386

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12387
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !12389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !12389
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !12391
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !12393, !srcloc !12340
  br label %24, !dbg !12394

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12395
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !12396
  %10 = icmp eq i32 %9, 0, !dbg !12396
  br i1 %10, label %21, label %11, !dbg !12398

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !12399
  br i1 %12, label %13, label %21, !dbg !12400

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12401
  %15 = icmp sgt i32 %14, %0, !dbg !12404
  br i1 %15, label %19, label %16, !dbg !12405

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12406
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !12406
  call void @llvm.dbg.value(metadata i32 %18, metadata !12375, metadata !DIExpression()), !dbg !12376
  br label %22, !dbg !12408

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !12409
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12409
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12411
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !12376
  call void @llvm.dbg.value(metadata i32 %23, metadata !12375, metadata !DIExpression()), !dbg !12376
  call void @llvm.dbg.value(metadata i32 %23, metadata !12326, metadata !DIExpression()) #22, !dbg !12413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !12413
  call void @llvm.dbg.value(metadata i32 %23, metadata !12334, metadata !DIExpression()) #22, !dbg !12415
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #22, !dbg !12417, !srcloc !12340
  br label %24, !dbg !12418

24:                                               ; preds = %22, %7
  ret void, !dbg !12418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !12419 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12423, metadata !DIExpression()), !dbg !12425
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !12426
  %3 = icmp eq i32 %2, 0, !dbg !12426
  br i1 %3, label %16, label %4, !dbg !12427

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12428
  br i1 %5, label %16, label %6, !dbg !12429

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12430
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12430
  %9 = load i8, i8* %8, align 2, !dbg !12430
  %10 = sext i8 %9 to i32, !dbg !12431
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12432
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !12433
  br i1 %12, label %16, label %13, !dbg !12434

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !12435
  %15 = xor i1 %14, true, !dbg !12436
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12425
  call void @llvm.dbg.value(metadata i1 %17, metadata !12424, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12425
  ret i1 %17, !dbg !12437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12438 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12442, metadata !DIExpression()), !dbg !12444
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12445
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12443, metadata !DIExpression()), !dbg !12444
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !12446
  br i1 %3, label %5, label %4, !dbg !12448

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !12449
  br label %5, !dbg !12451

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12442, metadata !DIExpression()), !dbg !12444
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12452
  ret i32 %6, !dbg !12453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12454 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12456, metadata !DIExpression()), !dbg !12458
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12459
  %3 = load i8, i8* %2, align 1, !dbg !12459
  call void @llvm.dbg.value(metadata i8 %3, metadata !12457, metadata !DIExpression()), !dbg !12458
  %4 = and i8 %3, 31, !dbg !12460
  %5 = icmp ne i8 %4, 0, !dbg !12461
  ret i1 %5, !dbg !12462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12463 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12465, metadata !DIExpression()), !dbg !12466
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12467
  br i1 %2, label %3, label %7, !dbg !12469

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12470, metadata !DIExpression()) #22, !dbg !12473
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12476
  %5 = load i8, i8* %4, align 1, !dbg !12477
  %6 = and i8 %5, 127, !dbg !12477
  store i8 %6, i8* %4, align 1, !dbg !12477
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12478, metadata !DIExpression()) #22, !dbg !12481
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #23, !dbg !12485
  br label %7, !dbg !12486

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12487, metadata !DIExpression()) #22, !dbg !12490
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12492
  %9 = load i8, i8* %8, align 1, !dbg !12493
  %10 = or i8 %9, -128, !dbg !12493
  store i8 %10, i8* %8, align 1, !dbg !12493
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12494, metadata !DIExpression()) #22, !dbg !12497
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12501, metadata !DIExpression()) #22, !dbg !12509
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12507, metadata !DIExpression()) #22, !dbg !12509
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !12511
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12508, metadata !DIExpression()) #22, !dbg !12509
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12513
  br i1 %12, label %23, label %13, !dbg !12511

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12508, metadata !DIExpression()) #22, !dbg !12509
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12515
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12508, metadata !DIExpression()) #22, !dbg !12509
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #23, !dbg !12516
  %17 = icmp sgt i32 %16, 0, !dbg !12519
  br i1 %17, label %18, label %20, !dbg !12520

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12521
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #23, !dbg !12523
  br label %25, !dbg !12524

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #23, !dbg !12513
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12508, metadata !DIExpression()) #22, !dbg !12509
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12513
  br i1 %22, label %23, label %13, !dbg !12511, !llvm.loop !12525

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12527
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #23, !dbg !12528
  br label %25, !dbg !12529

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12530
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12531
  %28 = zext i1 %27 to i32, !dbg !12531
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !12532
  ret void, !dbg !12533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12534 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12536, metadata !DIExpression()), !dbg !12537
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !12538
  ret i1 %2, !dbg !12539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !12540 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12542, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12543, metadata !DIExpression()), !dbg !12544
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12545
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !12546
  ret void, !dbg !12547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !12548 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12552, metadata !DIExpression()), !dbg !12553
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !12554
  br i1 %2, label %6, label %3, !dbg !12554

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12555
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12555
  br label %6, !dbg !12554

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12554
  ret %struct._dnode* %7, !dbg !12556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12557 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12561, metadata !DIExpression()), !dbg !12565
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12562, metadata !DIExpression()), !dbg !12565
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12566
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12566
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12563, metadata !DIExpression()), !dbg !12565
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12567
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12568
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12569
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12570
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12571
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12572
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12573
  ret void, !dbg !12574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12575 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12579, metadata !DIExpression()), !dbg !12581
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12580, metadata !DIExpression()), !dbg !12581
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12582
  br i1 %3, label %6, label %4, !dbg !12583

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !12584
  br label %6, !dbg !12583

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12583
  ret %struct._dnode* %7, !dbg !12585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12586 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12590, metadata !DIExpression()), !dbg !12593
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12591, metadata !DIExpression()), !dbg !12593
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12594
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12594
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12592, metadata !DIExpression()), !dbg !12593
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12595
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12596
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12597
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12598
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12599
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12600
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12601
  ret void, !dbg !12602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12605, metadata !DIExpression()), !dbg !12607
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !12608
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12615, metadata !DIExpression()) #22, !dbg !12617
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12618
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12619
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12619
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12606, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12620, metadata !DIExpression()) #22, !dbg !12626
  call void @llvm.dbg.value(metadata i32 %0, metadata !12625, metadata !DIExpression()) #22, !dbg !12626
  %6 = icmp eq i32 %0, 0, !dbg !12629
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12631
  br i1 %6, label %8, label %15, !dbg !12632

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #23, !dbg !12633
  br i1 %9, label %15, label %10, !dbg !12635

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #23, !dbg !12636
  br i1 %11, label %15, label %12, !dbg !12638

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #23, !dbg !12639
  %14 = icmp eq i32 %13, 0, !dbg !12639
  br i1 %14, label %18, label %15, !dbg !12641

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !12642
  br i1 %16, label %18, label %17, !dbg !12645

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12646
  br label %18, !dbg !12648

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !12631
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12631
  ret void, !dbg !12649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !12650 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12654, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12655, metadata !DIExpression()), !dbg !12657
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !12658
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12656, metadata !DIExpression()), !dbg !12657
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12655, metadata !DIExpression()), !dbg !12657
  ret %struct.k_thread* %3, !dbg !12659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12660 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12662, metadata !DIExpression()), !dbg !12663
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12664
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12665
  %4 = xor i1 %3, true, !dbg !12666
  ret i1 %4, !dbg !12667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12668 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12670, metadata !DIExpression()), !dbg !12671
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12672
  %3 = load i16, i16* %2, align 2, !dbg !12672
  %4 = icmp ult i16 %3, 128, !dbg !12673
  %5 = zext i1 %4 to i32, !dbg !12673
  ret i32 %5, !dbg !12674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12675 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12681, metadata !DIExpression()), !dbg !12682
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12683
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !12684
  %4 = xor i1 %3, true, !dbg !12685
  ret i1 %4, !dbg !12686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12687 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12693, metadata !DIExpression()), !dbg !12694
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12695
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12695
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12696
  ret i1 %4, !dbg !12697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12698 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12700, metadata !DIExpression()), !dbg !12702
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12701, metadata !DIExpression()), !dbg !12702
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12703
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12703
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12704
  br i1 %5, label %9, label %6, !dbg !12705

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12706
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12706
  br label %9, !dbg !12705

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12705
  ret %struct._dnode* %10, !dbg !12707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !12708 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12712, metadata !DIExpression()), !dbg !12713
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12714
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12714
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12715
  ret i1 %4, !dbg !12716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !12717 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12721, metadata !DIExpression()), !dbg !12724
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12725
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12725
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12722, metadata !DIExpression()), !dbg !12724
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12726
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12726
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12723, metadata !DIExpression()), !dbg !12724
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12727
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12728
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12729
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12730
  tail call fastcc void @sys_dnode_init.118(%struct._dnode* noundef %0) #24, !dbg !12731
  ret void, !dbg !12732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.118(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12733 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12735, metadata !DIExpression()), !dbg !12736
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12737
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12738
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12739
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12740
  ret void, !dbg !12741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12746, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.value(metadata i32 128, metadata !12747, metadata !DIExpression()), !dbg !12748
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12749
  %3 = load i8, i8* %2, align 1, !dbg !12749
  %4 = icmp slt i8 %3, 0, !dbg !12750
  ret i1 %4, !dbg !12751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !12752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12756, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.value(metadata i32 %1, metadata !12757, metadata !DIExpression()), !dbg !12758
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !12759
  ret i1 %3, !dbg !12760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !12761 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12763, metadata !DIExpression()), !dbg !12764
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12765
  ret i1 %2, !dbg !12766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !12767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12769, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 %1, metadata !12770, metadata !DIExpression()), !dbg !12771
  %3 = icmp slt i32 %0, %1, !dbg !12772
  ret i1 %3, !dbg !12773
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12774 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12776, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.value(metadata i32 0, metadata !12777, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !12782
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12784, !srcloc !12314
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12784
  call void @llvm.dbg.value(metadata i32 %3, metadata !12311, metadata !DIExpression()) #22, !dbg !12786
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !12786
  call void @llvm.dbg.value(metadata i32 %3, metadata !12305, metadata !DIExpression()) #22, !dbg !12782
  call void @llvm.dbg.value(metadata i32 %3, metadata !12779, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.value(metadata i32 undef, metadata !12777, metadata !DIExpression()), !dbg !12781
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12787
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !12792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !12792
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !12794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !12796, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !12777, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.value(metadata i32 undef, metadata !12777, metadata !DIExpression()), !dbg !12781
  ret void, !dbg !12797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12800, metadata !DIExpression()), !dbg !12801
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12802
  br i1 %2, label %24, label %3, !dbg !12804

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !12805
  br i1 %4, label %5, label %24, !dbg !12806

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12487, metadata !DIExpression()) #22, !dbg !12807
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12810
  %7 = load i8, i8* %6, align 1, !dbg !12811
  %8 = or i8 %7, -128, !dbg !12811
  store i8 %8, i8* %6, align 1, !dbg !12811
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12494, metadata !DIExpression()) #22, !dbg !12812
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12501, metadata !DIExpression()) #22, !dbg !12814
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12507, metadata !DIExpression()) #22, !dbg !12814
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !12816
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12508, metadata !DIExpression()) #22, !dbg !12814
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12817
  br i1 %10, label %21, label %11, !dbg !12816

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12508, metadata !DIExpression()) #22, !dbg !12814
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12818
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12508, metadata !DIExpression()) #22, !dbg !12814
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #23, !dbg !12819
  %15 = icmp sgt i32 %14, 0, !dbg !12820
  br i1 %15, label %16, label %18, !dbg !12821

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12822
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #23, !dbg !12823
  br label %23, !dbg !12824

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #23, !dbg !12817
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12508, metadata !DIExpression()) #22, !dbg !12814
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12817
  br i1 %20, label %21, label %11, !dbg !12816, !llvm.loop !12825

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12827
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #23, !dbg !12828
  br label %23, !dbg !12829

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !12830
  br label %24, !dbg !12831

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12833 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12835, metadata !DIExpression()), !dbg !12836
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12837
  br i1 %2, label %6, label %3, !dbg !12838

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !12839
  %5 = xor i1 %4, true, !dbg !12838
  br label %6, !dbg !12838

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12841 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12843, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata i32 0, metadata !12844, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !12849
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12851, !srcloc !12314
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12851
  call void @llvm.dbg.value(metadata i32 %3, metadata !12311, metadata !DIExpression()) #22, !dbg !12853
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !12853
  call void @llvm.dbg.value(metadata i32 %3, metadata !12305, metadata !DIExpression()) #22, !dbg !12849
  call void @llvm.dbg.value(metadata i32 %3, metadata !12846, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata i32 undef, metadata !12844, metadata !DIExpression()), !dbg !12848
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !12854
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !12857
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !12857
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !12859
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !12861, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !12844, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata i32 undef, metadata !12844, metadata !DIExpression()), !dbg !12848
  ret void, !dbg !12862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12863 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12865, metadata !DIExpression()), !dbg !12867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !12868
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12870, !srcloc !12314
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12870
  call void @llvm.dbg.value(metadata i32 %3, metadata !12311, metadata !DIExpression()) #22, !dbg !12872
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !12872
  call void @llvm.dbg.value(metadata i32 %3, metadata !12305, metadata !DIExpression()) #22, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %3, metadata !12866, metadata !DIExpression()), !dbg !12867
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !12873
  br i1 %4, label %5, label %6, !dbg !12875

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !12876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !12876
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !12879
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !12881, !srcloc !12340
  br label %8, !dbg !12882

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.123(%struct.k_thread* noundef %0) #24, !dbg !12883
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12884
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12885
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !12885
  br label %8, !dbg !12886

8:                                                ; preds = %6, %5
  ret void, !dbg !12886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12889, metadata !DIExpression()), !dbg !12890
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12891
  %3 = load i8, i8* %2, align 1, !dbg !12891
  %4 = and i8 %3, 4, !dbg !12892
  %5 = icmp eq i8 %4, 0, !dbg !12893
  ret i1 %5, !dbg !12894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.123(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12897, metadata !DIExpression()), !dbg !12898
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12899
  %3 = load i8, i8* %2, align 1, !dbg !12900
  %4 = and i8 %3, -5, !dbg !12900
  store i8 %4, i8* %2, align 1, !dbg !12900
  ret void, !dbg !12901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12902 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12905, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12904, metadata !DIExpression()), !dbg !12906
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !12907
  br i1 %4, label %5, label %9, !dbg !12909

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !12910
  br i1 %6, label %7, label %9, !dbg !12911

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12912, metadata !DIExpression()) #22, !dbg !12918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12917, metadata !DIExpression()) #22, !dbg !12918
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #23, !dbg !12921
  br label %10, !dbg !12922

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !12923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !12923
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !12926
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !12928, !srcloc !12340
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12934, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i32 %0, metadata !12936, metadata !DIExpression()), !dbg !12941
  %2 = icmp eq i32 %0, 0, !dbg !12943
  br i1 %2, label %3, label %6, !dbg !12944

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !12945, !srcloc !12952
  call void @llvm.dbg.value(metadata i32 %4, metadata !12948, metadata !DIExpression()) #22, !dbg !12953
  %5 = icmp eq i32 %4, 0, !dbg !12954
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12935
  ret i1 %7, !dbg !12955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !12956 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12959
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12958, metadata !DIExpression()), !dbg !12960
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12961
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12962
  ret i1 %3, !dbg !12963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12966, metadata !DIExpression()), !dbg !12968
  %2 = tail call i32 @arch_swap(i32 noundef %0) #23, !dbg !12969
  call void @llvm.dbg.value(metadata i32 %2, metadata !12967, metadata !DIExpression()), !dbg !12968
  ret i32 %2, !dbg !12970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12971 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12973, metadata !DIExpression()), !dbg !12977
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12978
  call void @llvm.dbg.value(metadata i32 0, metadata !12974, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !12980
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12982, !srcloc !12314
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12982
  call void @llvm.dbg.value(metadata i32 %4, metadata !12311, metadata !DIExpression()) #22, !dbg !12984
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !12984
  call void @llvm.dbg.value(metadata i32 %4, metadata !12305, metadata !DIExpression()) #22, !dbg !12980
  call void @llvm.dbg.value(metadata i32 %4, metadata !12976, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()), !dbg !12979
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12985
  br i1 %5, label %6, label %10, !dbg !12989

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12470, metadata !DIExpression()) #22, !dbg !12990
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12993
  %8 = load i8, i8* %7, align 1, !dbg !12994
  %9 = and i8 %8, 127, !dbg !12994
  store i8 %9, i8* %7, align 1, !dbg !12994
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12478, metadata !DIExpression()) #22, !dbg !12995
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #23, !dbg !12997
  br label %10, !dbg !12998

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !12999
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13000
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13001
  %13 = zext i1 %12 to i32, !dbg !13001
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !13002
  call void @llvm.dbg.value(metadata i32 %4, metadata !12326, metadata !DIExpression()) #22, !dbg !13003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13003
  call void @llvm.dbg.value(metadata i32 %4, metadata !12334, metadata !DIExpression()) #22, !dbg !13005
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !13007, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !12974, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()), !dbg !12979
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13008
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13010
  br i1 %15, label %16, label %17, !dbg !13011

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13012
  br label %17, !dbg !13014

17:                                               ; preds = %16, %10
  ret void, !dbg !13015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13016 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13018, metadata !DIExpression()), !dbg !13019
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13020
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #23, !dbg !13021
  ret i32 %3, !dbg !13022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13025, metadata !DIExpression()), !dbg !13026
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13027
  %3 = load i8, i8* %2, align 1, !dbg !13028
  %4 = or i8 %3, 16, !dbg !13028
  store i8 %4, i8* %2, align 1, !dbg !13028
  ret void, !dbg !13029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13030 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13031, !srcloc !12314
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13031
  call void @llvm.dbg.value(metadata i32 %2, metadata !12311, metadata !DIExpression()) #22, !dbg !13033
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13033
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !13034
  ret void, !dbg !13035
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13038, metadata !DIExpression()), !dbg !13039
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !13040
  br i1 %2, label %3, label %5, !dbg !13042

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !13043
  br label %6, !dbg !13045

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12334, metadata !DIExpression()) #22, !dbg !13046
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #22, !dbg !13049, !srcloc !12340
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13050
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13053, metadata !DIExpression()), !dbg !13055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13056
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13058, !srcloc !12314
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13058
  call void @llvm.dbg.value(metadata i32 %3, metadata !12311, metadata !DIExpression()) #22, !dbg !13060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13060
  call void @llvm.dbg.value(metadata i32 %3, metadata !12305, metadata !DIExpression()) #22, !dbg !13056
  call void @llvm.dbg.value(metadata i32 %3, metadata !13054, metadata !DIExpression()), !dbg !13055
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !13061
  br i1 %4, label %6, label %5, !dbg !13063

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !13064
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13064
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !13067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !13069, !srcloc !12340
  br label %8, !dbg !13070

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !13071
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13072
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13073
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !13073
  br label %8, !dbg !13074

8:                                                ; preds = %6, %5
  ret void, !dbg !13074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13077, metadata !DIExpression()), !dbg !13078
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13079
  %3 = load i8, i8* %2, align 1, !dbg !13079
  %4 = and i8 %3, 16, !dbg !13080
  %5 = icmp ne i8 %4, 0, !dbg !13081
  ret i1 %5, !dbg !13082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13085, metadata !DIExpression()), !dbg !13086
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13087
  %3 = load i8, i8* %2, align 1, !dbg !13088
  %4 = and i8 %3, -17, !dbg !13088
  store i8 %4, i8* %2, align 1, !dbg !13088
  ret void, !dbg !13089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13090 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13100, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13098, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13099, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i32 0, metadata !13101, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13106
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13108, !srcloc !12314
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13108
  call void @llvm.dbg.value(metadata i32 %5, metadata !12311, metadata !DIExpression()) #22, !dbg !13110
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13110
  call void @llvm.dbg.value(metadata i32 %5, metadata !12305, metadata !DIExpression()) #22, !dbg !13106
  call void @llvm.dbg.value(metadata i32 %5, metadata !13103, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i32 undef, metadata !13101, metadata !DIExpression()), !dbg !13105
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %5, metadata !12326, metadata !DIExpression()) #22, !dbg !13114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13114
  call void @llvm.dbg.value(metadata i32 %5, metadata !12334, metadata !DIExpression()) #22, !dbg !13116
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #22, !dbg !13118, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !13101, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i32 undef, metadata !13101, metadata !DIExpression()), !dbg !13105
  ret void, !dbg !13119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13120 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13124, metadata !DIExpression()), !dbg !13125
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13122, metadata !DIExpression()), !dbg !13125
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13123, metadata !DIExpression()), !dbg !13125
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !13126
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !13127
  ret void, !dbg !13128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13129 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13133, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13134, metadata !DIExpression()), !dbg !13135
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !13136
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !13137
  %3 = icmp eq %union.anon* %1, null, !dbg !13138
  br i1 %3, label %21, label %4, !dbg !13140

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13141
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13143
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13144
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12501, metadata !DIExpression()) #22, !dbg !13145
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12507, metadata !DIExpression()) #22, !dbg !13145
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #23, !dbg !13147
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12508, metadata !DIExpression()) #22, !dbg !13145
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13148
  br i1 %8, label %19, label %9, !dbg !13147

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12508, metadata !DIExpression()) #22, !dbg !13145
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13149
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12508, metadata !DIExpression()) #22, !dbg !13145
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #23, !dbg !13150
  %13 = icmp sgt i32 %12, 0, !dbg !13151
  br i1 %13, label %14, label %16, !dbg !13152

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13153
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #23, !dbg !13154
  br label %21, !dbg !13155

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #23, !dbg !13148
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12508, metadata !DIExpression()) #22, !dbg !13145
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13148
  br i1 %18, label %19, label %9, !dbg !13147, !llvm.loop !13156

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13158
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #23, !dbg !13159
  br label %21, !dbg !13160

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13162 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13167, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13166, metadata !DIExpression()), !dbg !13168
  %4 = icmp eq i64 %3, -1, !dbg !13169
  br i1 %4, label %6, label %5, !dbg !13171

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.126(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13172
  br label %6, !dbg !13174

6:                                                ; preds = %5, %2
  ret void, !dbg !13175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.126(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13176 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13179, metadata !DIExpression()), !dbg !13180
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13178, metadata !DIExpression()), !dbg !13180
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13181
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #23, !dbg !13182
  ret void, !dbg !13183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13184 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13186, metadata !DIExpression()), !dbg !13194
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13195
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13195
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13187, metadata !DIExpression()), !dbg !13194
  call void @llvm.dbg.value(metadata i32 0, metadata !13188, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13197
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13199, !srcloc !12314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12311, metadata !DIExpression()) #22, !dbg !13201
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13201
  call void @llvm.dbg.value(metadata i32 undef, metadata !12305, metadata !DIExpression()) #22, !dbg !13197
  call void @llvm.dbg.value(metadata i32 undef, metadata !13190, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 undef, metadata !13188, metadata !DIExpression()), !dbg !13196
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13202
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13203
  %7 = load i8, i8* %6, align 1, !dbg !13203
  %8 = and i8 %7, 40, !dbg !13204
  %9 = icmp eq i8 %8, 0, !dbg !13204
  call void @llvm.dbg.value(metadata i1 %9, metadata !13191, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13205
  br i1 %9, label %10, label %17, !dbg !13206

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13207
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13207
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13207
  %14 = icmp eq %union.anon* %13, null, !dbg !13211
  br i1 %14, label %16, label %15, !dbg !13212

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !13213
  br label %16, !dbg !13215

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.123(%struct.k_thread* noundef nonnull %3) #24, !dbg !13216
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !13217
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !13218
  br label %17, !dbg !13219

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13199
  call void @llvm.dbg.value(metadata i32 %18, metadata !12311, metadata !DIExpression()) #22, !dbg !13201
  call void @llvm.dbg.value(metadata i32 %18, metadata !12305, metadata !DIExpression()) #22, !dbg !13197
  call void @llvm.dbg.value(metadata i32 %18, metadata !13190, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 undef, metadata !12326, metadata !DIExpression()) #22, !dbg !13220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13220
  call void @llvm.dbg.value(metadata i32 undef, metadata !12334, metadata !DIExpression()) #22, !dbg !13222
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #22, !dbg !13224, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !13188, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 undef, metadata !13188, metadata !DIExpression()), !dbg !13196
  ret void, !dbg !13225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13226 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13228, metadata !DIExpression()), !dbg !13229
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13230
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !13231
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13232
  store %union.anon* null, %union.anon** %2, align 8, !dbg !13233
  ret void, !dbg !13234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13235 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13237, metadata !DIExpression()), !dbg !13238
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13239
  %3 = load i8, i8* %2, align 1, !dbg !13240
  %4 = and i8 %3, -3, !dbg !13240
  store i8 %4, i8* %2, align 1, !dbg !13240
  ret void, !dbg !13241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13244, metadata !DIExpression()), !dbg !13245
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13246
  br i1 %2, label %3, label %7, !dbg !13248

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12470, metadata !DIExpression()) #22, !dbg !13249
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13252
  %5 = load i8, i8* %4, align 1, !dbg !13253
  %6 = and i8 %5, 127, !dbg !13253
  store i8 %6, i8* %4, align 1, !dbg !13253
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12478, metadata !DIExpression()) #22, !dbg !13254
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #23, !dbg !13256
  br label %7, !dbg !13257

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13258
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13259
  %10 = zext i1 %9 to i32, !dbg !13259
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !13260
  ret void, !dbg !13261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13262 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13264, metadata !DIExpression()), !dbg !13265
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13266
  %3 = load i8, i8* %2, align 1, !dbg !13267
  %4 = or i8 %3, 2, !dbg !13267
  store i8 %4, i8* %2, align 1, !dbg !13267
  ret void, !dbg !13268
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #20 !dbg !13269 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13271, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata i32 0, metadata !13272, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13277
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13279, !srcloc !12314
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13279
  call void @llvm.dbg.value(metadata i32 %3, metadata !12311, metadata !DIExpression()) #22, !dbg !13281
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13281
  call void @llvm.dbg.value(metadata i32 %3, metadata !12305, metadata !DIExpression()) #22, !dbg !13277
  call void @llvm.dbg.value(metadata i32 %3, metadata !13274, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 undef, metadata !13272, metadata !DIExpression()), !dbg !13276
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13282
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !13285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13285
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !13287
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !13289, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !13272, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 undef, metadata !13272, metadata !DIExpression()), !dbg !13276
  ret void, !dbg !13290
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13291 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13297, metadata !DIExpression()), !dbg !13302
  call void @llvm.dbg.value(metadata i32 %0, metadata !13295, metadata !DIExpression()), !dbg !13302
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13296, metadata !DIExpression()), !dbg !13302
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13303
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !13304
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13305
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13306
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !13307
  call void @llvm.dbg.value(metadata i32 %6, metadata !13298, metadata !DIExpression()), !dbg !13302
  call void @llvm.dbg.value(metadata i32 0, metadata !13299, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13309
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13311, !srcloc !12314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12311, metadata !DIExpression()) #22, !dbg !13313
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13313
  call void @llvm.dbg.value(metadata i32 undef, metadata !12305, metadata !DIExpression()) #22, !dbg !13309
  call void @llvm.dbg.value(metadata i32 undef, metadata !13301, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 undef, metadata !13299, metadata !DIExpression()), !dbg !13308
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13314
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13318
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13319
  br i1 %10, label %11, label %12, !dbg !13320

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13321
  br label %12, !dbg !13323

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13311
  call void @llvm.dbg.value(metadata i32 %13, metadata !12311, metadata !DIExpression()) #22, !dbg !13313
  call void @llvm.dbg.value(metadata i32 %13, metadata !12305, metadata !DIExpression()) #22, !dbg !13309
  call void @llvm.dbg.value(metadata i32 %13, metadata !13301, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 undef, metadata !12326, metadata !DIExpression()) #22, !dbg !13324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13324
  call void @llvm.dbg.value(metadata i32 undef, metadata !12334, metadata !DIExpression()) #22, !dbg !13326
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #22, !dbg !13328, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !13299, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 undef, metadata !13299, metadata !DIExpression()), !dbg !13308
  ret i32 %6, !dbg !13329
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13330 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13335, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.value(metadata i64 undef, metadata !13337, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13334, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13336, metadata !DIExpression()), !dbg !13338
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13339
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13341
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13343, !srcloc !12314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12311, metadata !DIExpression()) #22, !dbg !13345
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13345
  call void @llvm.dbg.value(metadata i32 undef, metadata !12305, metadata !DIExpression()) #22, !dbg !13341
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13346
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !13347
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12912, metadata !DIExpression()) #22, !dbg !13348
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12917, metadata !DIExpression()) #22, !dbg !13348
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #23, !dbg !13350
  ret i32 %9, !dbg !13351
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13352 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13356, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13357, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.value(metadata i32 0, metadata !13358, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13363
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13365, !srcloc !12314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12311, metadata !DIExpression()) #22, !dbg !13367
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13367
  call void @llvm.dbg.value(metadata i32 undef, metadata !12305, metadata !DIExpression()) #22, !dbg !13363
  call void @llvm.dbg.value(metadata i32 undef, metadata !13360, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13357, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.value(metadata i32 undef, metadata !13358, metadata !DIExpression()), !dbg !13362
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !13368
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13357, metadata !DIExpression()), !dbg !13361
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13371
  br i1 %5, label %7, label %6, !dbg !13373

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13374
  br label %7, !dbg !13376

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13365
  call void @llvm.dbg.value(metadata i32 %8, metadata !12311, metadata !DIExpression()) #22, !dbg !13367
  call void @llvm.dbg.value(metadata i32 %8, metadata !12305, metadata !DIExpression()) #22, !dbg !13363
  call void @llvm.dbg.value(metadata i32 %8, metadata !13360, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i32 undef, metadata !12326, metadata !DIExpression()) #22, !dbg !13377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13377
  call void @llvm.dbg.value(metadata i32 undef, metadata !12334, metadata !DIExpression()) #22, !dbg !13379
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #22, !dbg !13381, !srcloc !12340
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13357, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.value(metadata i32 undef, metadata !13358, metadata !DIExpression()), !dbg !13362
  ret %struct.k_thread* %4, !dbg !13382
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13383 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13385, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13386, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata i32 0, metadata !13387, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13392
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13394, !srcloc !12314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12311, metadata !DIExpression()) #22, !dbg !13396
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13396
  call void @llvm.dbg.value(metadata i32 undef, metadata !12305, metadata !DIExpression()) #22, !dbg !13392
  call void @llvm.dbg.value(metadata i32 undef, metadata !13389, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13386, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata i32 undef, metadata !13387, metadata !DIExpression()), !dbg !13391
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !13397
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13386, metadata !DIExpression()), !dbg !13390
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13400
  br i1 %5, label %8, label %6, !dbg !13402

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13403
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13405
  br label %8, !dbg !13406

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13394
  call void @llvm.dbg.value(metadata i32 %9, metadata !12311, metadata !DIExpression()) #22, !dbg !13396
  call void @llvm.dbg.value(metadata i32 %9, metadata !12305, metadata !DIExpression()) #22, !dbg !13392
  call void @llvm.dbg.value(metadata i32 %9, metadata !13389, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i32 undef, metadata !12326, metadata !DIExpression()) #22, !dbg !13407
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13407
  call void @llvm.dbg.value(metadata i32 undef, metadata !12334, metadata !DIExpression()) #22, !dbg !13409
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #22, !dbg !13411, !srcloc !12340
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13386, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata i32 undef, metadata !13387, metadata !DIExpression()), !dbg !13391
  ret %struct.k_thread* %4, !dbg !13412
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13415, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13271, metadata !DIExpression()) #22, !dbg !13417
  call void @llvm.dbg.value(metadata i32 0, metadata !13272, metadata !DIExpression()) #22, !dbg !13419
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13420
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13422, !srcloc !12314
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %3, metadata !12311, metadata !DIExpression()) #22, !dbg !13424
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13424
  call void @llvm.dbg.value(metadata i32 %3, metadata !12305, metadata !DIExpression()) #22, !dbg !13420
  call void @llvm.dbg.value(metadata i32 %3, metadata !13274, metadata !DIExpression()) #22, !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13272, metadata !DIExpression()) #22, !dbg !13419
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #23, !dbg !13425
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !13426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13426
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !13428
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !13430, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !13272, metadata !DIExpression()) #22, !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13272, metadata !DIExpression()) #22, !dbg !13419
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13431
  ret void, !dbg !13432
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13435, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i32 %1, metadata !13436, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i8 0, metadata !13437, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i32 0, metadata !13438, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13443
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13445, !srcloc !12314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12311, metadata !DIExpression()) #22, !dbg !13447
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13447
  call void @llvm.dbg.value(metadata i32 undef, metadata !12305, metadata !DIExpression()) #22, !dbg !13443
  call void @llvm.dbg.value(metadata i32 undef, metadata !13440, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i8 poison, metadata !13437, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i32 undef, metadata !13438, metadata !DIExpression()), !dbg !13442
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !13448
  call void @llvm.dbg.value(metadata i1 %6, metadata !13437, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13441
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13451

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12470, metadata !DIExpression()) #22, !dbg !13452
  %11 = load i8, i8* %4, align 1, !dbg !13458
  %12 = and i8 %11, 127, !dbg !13458
  store i8 %12, i8* %4, align 1, !dbg !13458
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12478, metadata !DIExpression()) #22, !dbg !13459
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #23, !dbg !13461
  store i8 %9, i8* %8, align 2, !dbg !13462
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12487, metadata !DIExpression()) #22, !dbg !13463
  %13 = load i8, i8* %4, align 1, !dbg !13465
  %14 = or i8 %13, -128, !dbg !13465
  store i8 %14, i8* %4, align 1, !dbg !13465
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12494, metadata !DIExpression()) #22, !dbg !13466
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12501, metadata !DIExpression()) #22, !dbg !13468
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12507, metadata !DIExpression()) #22, !dbg !13468
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !13470
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12508, metadata !DIExpression()) #22, !dbg !13468
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13471
  br i1 %16, label %26, label %17, !dbg !13470

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12508, metadata !DIExpression()) #22, !dbg !13468
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13472
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12508, metadata !DIExpression()) #22, !dbg !13468
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #23, !dbg !13473
  %21 = icmp sgt i32 %20, 0, !dbg !13474
  br i1 %21, label %22, label %23, !dbg !13475

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #23, !dbg !13476
  br label %27, !dbg !13477

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #23, !dbg !13471
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12508, metadata !DIExpression()) #22, !dbg !13468
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13471
  br i1 %25, label %26, label %17, !dbg !13470, !llvm.loop !13478

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #23, !dbg !13480
  br label %27, !dbg !13481

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13482
  br label %29, !dbg !13483

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13484
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13445
  call void @llvm.dbg.value(metadata i32 %30, metadata !12311, metadata !DIExpression()) #22, !dbg !13447
  call void @llvm.dbg.value(metadata i32 %30, metadata !12305, metadata !DIExpression()) #22, !dbg !13443
  call void @llvm.dbg.value(metadata i32 %30, metadata !13440, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i32 undef, metadata !12326, metadata !DIExpression()) #22, !dbg !13486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13486
  call void @llvm.dbg.value(metadata i32 undef, metadata !12334, metadata !DIExpression()) #22, !dbg !13488
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #22, !dbg !13490, !srcloc !12340
  call void @llvm.dbg.value(metadata i8 poison, metadata !13437, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i32 undef, metadata !13438, metadata !DIExpression()), !dbg !13442
  ret i1 %6, !dbg !13491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13492 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13496, metadata !DIExpression()), !dbg !13499
  call void @llvm.dbg.value(metadata i32 %1, metadata !13497, metadata !DIExpression()), !dbg !13499
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13500
  call void @llvm.dbg.value(metadata i1 %3, metadata !13498, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13499
  br i1 %3, label %4, label %12, !dbg !13501

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13503
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13504
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13504
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13504
  %9 = load i8, i8* %8, align 1, !dbg !13504
  %10 = icmp eq i8 %9, 0, !dbg !13505
  br i1 %10, label %11, label %12, !dbg !13506

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13507
  br label %12, !dbg !13509

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13510
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13511 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13513, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13517
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13519, !srcloc !12314
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13519
  call void @llvm.dbg.value(metadata i32 %2, metadata !12311, metadata !DIExpression()) #22, !dbg !13521
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13521
  call void @llvm.dbg.value(metadata i32 %2, metadata !12305, metadata !DIExpression()) #22, !dbg !13517
  call void @llvm.dbg.value(metadata i32 %2, metadata !13515, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 undef, metadata !13513, metadata !DIExpression()), !dbg !13516
  tail call fastcc void @z_sched_lock() #24, !dbg !13522
  call void @llvm.dbg.value(metadata i32 %2, metadata !12326, metadata !DIExpression()) #22, !dbg !13525
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13525
  call void @llvm.dbg.value(metadata i32 %2, metadata !12334, metadata !DIExpression()) #22, !dbg !13527
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !13529, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !13513, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 undef, metadata !13513, metadata !DIExpression()), !dbg !13516
  ret void, !dbg !13530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13531 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13532
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13533
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13533
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13533
  %5 = load i8, i8* %4, align 1, !dbg !13534
  %6 = add i8 %5, -1, !dbg !13534
  store i8 %6, i8* %4, align 1, !dbg !13534
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !13535, !srcloc !13537
  ret void, !dbg !13538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13539 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13541, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13545
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13547, !srcloc !12314
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13547
  call void @llvm.dbg.value(metadata i32 %2, metadata !12311, metadata !DIExpression()) #22, !dbg !13549
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13549
  call void @llvm.dbg.value(metadata i32 %2, metadata !12305, metadata !DIExpression()) #22, !dbg !13545
  call void @llvm.dbg.value(metadata i32 %2, metadata !13543, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.value(metadata i32 undef, metadata !13541, metadata !DIExpression()), !dbg !13544
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13550
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13553
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13553
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13553
  %7 = load i8, i8* %6, align 1, !dbg !13554
  %8 = add i8 %7, 1, !dbg !13554
  store i8 %8, i8* %6, align 1, !dbg !13554
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !13555
  call void @llvm.dbg.value(metadata i32 %2, metadata !12326, metadata !DIExpression()) #22, !dbg !13556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !13556
  call void @llvm.dbg.value(metadata i32 %2, metadata !12334, metadata !DIExpression()) #22, !dbg !13558
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !13560, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 1, metadata !13541, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.value(metadata i32 undef, metadata !13541, metadata !DIExpression()), !dbg !13544
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13561
  ret void, !dbg !13562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !13563 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13564
  ret %struct.k_thread* %1, !dbg !13565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13566 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13570, metadata !DIExpression()), !dbg !13575
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13571, metadata !DIExpression()), !dbg !13575
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13576
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13572, metadata !DIExpression()), !dbg !13575
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13577
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13573, metadata !DIExpression()), !dbg !13575
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !13578
  call void @llvm.dbg.value(metadata i32 %5, metadata !13574, metadata !DIExpression()), !dbg !13575
  %6 = icmp sgt i32 %5, 0, !dbg !13579
  br i1 %6, label %17, label %7, !dbg !13581

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13582
  br i1 %8, label %17, label %9, !dbg !13584

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13585
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13585
  %12 = load i32, i32* %11, align 8, !dbg !13585
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13587
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13587
  %15 = load i32, i32* %14, align 8, !dbg !13587
  %16 = icmp ult i32 %12, %15, !dbg !13588
  br label %17, !dbg !13589

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13590
  ret i1 %18, !dbg !13591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13592 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13609, metadata !DIExpression()), !dbg !13624
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13610, metadata !DIExpression()), !dbg !13624
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13625
  %5 = load i32, i32* %4, align 4, !dbg !13626
  %6 = add nsw i32 %5, 1, !dbg !13626
  store i32 %6, i32* %4, align 4, !dbg !13626
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13627
  store i32 %5, i32* %7, align 8, !dbg !13628
  %8 = load i32, i32* %4, align 4, !dbg !13629
  %9 = icmp eq i32 %8, 0, !dbg !13630
  br i1 %9, label %10, label %32, !dbg !13631

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13632
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #22, !dbg !13632
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13612, metadata !DIExpression()), !dbg !13632
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13632
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13632
  %14 = load i32, i32* %13, align 4, !dbg !13632
  %15 = shl i32 %14, 2, !dbg !13632
  %16 = alloca i8, i32 %15, align 8, !dbg !13632
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13632
  store i8* %16, i8** %17, align 4, !dbg !13632
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13632
  %19 = alloca i8, i32 %14, align 8, !dbg !13632
  store i8* %19, i8** %18, align 4, !dbg !13632
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13632
  store i32 -1, i32* %20, align 4, !dbg !13632
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #23, !dbg !13633
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13621, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13611, metadata !DIExpression()), !dbg !13624
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !13635
  br i1 %22, label %23, label %24, !dbg !13632

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #22, !dbg !13635
  br label %32, !dbg !13636

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !13611, metadata !DIExpression()), !dbg !13624
  %26 = load i32, i32* %4, align 4, !dbg !13637
  %27 = add nsw i32 %26, 1, !dbg !13637
  store i32 %27, i32* %4, align 4, !dbg !13637
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !13639
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !13639
  store i32 %26, i32* %29, align 8, !dbg !13640
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #23, !dbg !13633
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13621, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13611, metadata !DIExpression()), !dbg !13624
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !13635
  br i1 %31, label %23, label %24, !dbg !13632, !llvm.loop !13641

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13643
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13644
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #23, !dbg !13645
  ret void, !dbg !13646
}

; Function Attrs: optsize
declare !dbg !13647 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13652 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13655 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13657, metadata !DIExpression()), !dbg !13659
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13658, metadata !DIExpression()), !dbg !13659
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13660
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13661
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #23, !dbg !13662
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13663
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !13663
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !13665
  br i1 %7, label %8, label %10, !dbg !13666

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13667
  store i32 0, i32* %9, align 4, !dbg !13669
  br label %10, !dbg !13670

10:                                               ; preds = %8, %2
  ret void, !dbg !13671
}

; Function Attrs: optsize
declare !dbg !13672 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13673 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13677, metadata !DIExpression()), !dbg !13680
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13678, metadata !DIExpression()), !dbg !13680
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13681
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !13682
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13679, metadata !DIExpression()), !dbg !13680
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13678, metadata !DIExpression()), !dbg !13680
  ret %struct.k_thread* %4, !dbg !13683
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13684 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13688, metadata !DIExpression()), !dbg !13689
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #23, !dbg !13690
  ret %struct.rbnode* %2, !dbg !13691
}

; Function Attrs: optsize
declare !dbg !13692 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #21 !dbg !13695 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13705, metadata !DIExpression()), !dbg !13709
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13710
  %3 = load i32, i32* %2, align 4, !dbg !13710
  %4 = icmp eq i32 %3, 0, !dbg !13712
  br i1 %4, label %10, label %5, !dbg !13713

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13706, metadata !DIExpression()), !dbg !13709
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13714, !range !3639
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13715
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13707, metadata !DIExpression()), !dbg !13709
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !13716
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13708, metadata !DIExpression()), !dbg !13709
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13706, metadata !DIExpression()), !dbg !13709
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13709
  ret %struct.k_thread* %11, !dbg !13717
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13718 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13722, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i32 0, metadata !13723, metadata !DIExpression()), !dbg !13725
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13726
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13724, metadata !DIExpression()), !dbg !13725
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13727
  br i1 %3, label %8, label %4, !dbg !13728

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13729
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13731
  call void @llvm.dbg.value(metadata i32 1, metadata !13723, metadata !DIExpression()), !dbg !13725
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13726
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13724, metadata !DIExpression()), !dbg !13725
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13727
  br i1 %7, label %8, label %4, !dbg !13728, !llvm.loop !13732

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13725
  ret i32 %9, !dbg !13734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !13735 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13737, metadata !DIExpression()), !dbg !13738
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13739
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13740
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13741
  ret %struct.k_thread* %4, !dbg !13742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !13743 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13752, metadata !DIExpression()), !dbg !13753
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13754
  tail call fastcc void @sys_dlist_init.137(%struct._dnode* noundef nonnull %2) #24, !dbg !13755
  ret void, !dbg !13756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.137(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13757 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13761, metadata !DIExpression()), !dbg !13762
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13763
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13764
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13765
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13766
  ret void, !dbg !13767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13768 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !13769
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !13770
  ret void, !dbg !13771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !13772 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13777, metadata !DIExpression()), !dbg !13778
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13779
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13779
  %4 = load i8, i8* %3, align 2, !dbg !13779
  %5 = sext i8 %4 to i32, !dbg !13780
  ret i32 %5, !dbg !13781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13782 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13786, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i32 %1, metadata !13787, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13788, metadata !DIExpression()), !dbg !13789
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13790
  ret void, !dbg !13791
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13792 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !13793
  br i1 %1, label %8, label %2, !dbg !13794

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #23, !dbg !13795
  br i1 %3, label %8, label %4, !dbg !13796

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13797
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !13798
  %7 = xor i1 %6, true, !dbg !13796
  br label %8, !dbg !13796

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !13800 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13801, !range !6856
  %2 = icmp eq i8 %1, 0, !dbg !13801
  ret i1 %2, !dbg !13802
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13803 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13806
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13808, !srcloc !12314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12311, metadata !DIExpression()) #22, !dbg !13810
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13810
  call void @llvm.dbg.value(metadata i32 undef, metadata !12305, metadata !DIExpression()) #22, !dbg !13806
  call void @llvm.dbg.value(metadata i32 undef, metadata !13805, metadata !DIExpression()), !dbg !13811
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13812
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12470, metadata !DIExpression()) #22, !dbg !13815
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13817
  %4 = load i8, i8* %3, align 1, !dbg !13818
  %5 = and i8 %4, 127, !dbg !13818
  store i8 %5, i8* %3, align 1, !dbg !13818
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12478, metadata !DIExpression()) #22, !dbg !13819
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #23, !dbg !13821
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13822
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12487, metadata !DIExpression()) #22, !dbg !13823
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13825
  %8 = load i8, i8* %7, align 1, !dbg !13826
  %9 = or i8 %8, -128, !dbg !13826
  store i8 %9, i8* %7, align 1, !dbg !13826
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12494, metadata !DIExpression()) #22, !dbg !13827
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12501, metadata !DIExpression()) #22, !dbg !13829
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12507, metadata !DIExpression()) #22, !dbg !13829
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !13831
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12508, metadata !DIExpression()) #22, !dbg !13829
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13832
  br i1 %11, label %22, label %12, !dbg !13831

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12508, metadata !DIExpression()) #22, !dbg !13829
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13833
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12508, metadata !DIExpression()) #22, !dbg !13829
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #23, !dbg !13834
  %16 = icmp sgt i32 %15, 0, !dbg !13835
  br i1 %16, label %17, label %19, !dbg !13836

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13837
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #23, !dbg !13838
  br label %24, !dbg !13839

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #23, !dbg !13832
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12508, metadata !DIExpression()) #22, !dbg !13829
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13832
  br i1 %21, label %22, label %12, !dbg !13831, !llvm.loop !13840

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13842
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #23, !dbg !13843
  br label %24, !dbg !13844

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13808
  call void @llvm.dbg.value(metadata i32 %25, metadata !12311, metadata !DIExpression()) #22, !dbg !13810
  call void @llvm.dbg.value(metadata i32 %25, metadata !12305, metadata !DIExpression()) #22, !dbg !13806
  call void @llvm.dbg.value(metadata i32 %25, metadata !13805, metadata !DIExpression()), !dbg !13811
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13845
  call void @llvm.dbg.value(metadata i32 undef, metadata !12912, metadata !DIExpression()) #22, !dbg !13846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12917, metadata !DIExpression()) #22, !dbg !13846
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #23, !dbg !13848
  ret void, !dbg !13849
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13850 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13854, metadata !DIExpression()), !dbg !13857
  %3 = icmp eq i64 %2, -1, !dbg !13858
  br i1 %3, label %4, label %6, !dbg !13860

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13861
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !13863
  br label %11, !dbg !13864

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13855, metadata !DIExpression()), !dbg !13857
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !13865
  %8 = sext i32 %7 to i64, !dbg !13865
  call void @llvm.dbg.value(metadata i64 %8, metadata !13855, metadata !DIExpression()), !dbg !13857
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !13866
  %10 = trunc i64 %9 to i32, !dbg !13866
  call void @llvm.dbg.value(metadata i32 %10, metadata !13856, metadata !DIExpression()), !dbg !13857
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13857
  ret i32 %12, !dbg !13867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13872, metadata !DIExpression()), !dbg !13873
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !13874, !srcloc !13876
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !13877
  ret void, !dbg !13878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13879 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13883, metadata !DIExpression()), !dbg !13887
  %2 = icmp eq i64 %0, 0, !dbg !13888
  br i1 %2, label %3, label %4, !dbg !13890

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #24, !dbg !13891
  br label %29, !dbg !13893

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13885, metadata !DIExpression()), !dbg !13887
  %5 = icmp sgt i64 %0, -3, !dbg !13894
  br i1 %5, label %6, label %10, !dbg !13896

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #23, !dbg !13897
  %8 = trunc i64 %0 to i32, !dbg !13899
  %9 = add i32 %7, %8, !dbg !13899
  call void @llvm.dbg.value(metadata i32 %9, metadata !13884, metadata !DIExpression()), !dbg !13887
  br label %13, !dbg !13900

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13901
  %12 = sub i32 -2, %11, !dbg !13901
  call void @llvm.dbg.value(metadata i32 %12, metadata !13884, metadata !DIExpression()), !dbg !13887
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13903
  call void @llvm.dbg.value(metadata i32 %14, metadata !13884, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !13904
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13906, !srcloc !12314
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13906
  call void @llvm.dbg.value(metadata i32 %16, metadata !12311, metadata !DIExpression()) #22, !dbg !13908
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !13908
  call void @llvm.dbg.value(metadata i32 %16, metadata !12305, metadata !DIExpression()) #22, !dbg !13904
  call void @llvm.dbg.value(metadata i32 %16, metadata !13886, metadata !DIExpression()), !dbg !13887
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13909
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13910
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !13911
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13912
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13913
  tail call fastcc void @z_add_thread_timeout.126(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !13913
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13914
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !13915
  call void @llvm.dbg.value(metadata i32 %16, metadata !12912, metadata !DIExpression()) #22, !dbg !13916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12917, metadata !DIExpression()) #22, !dbg !13916
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #23, !dbg !13918
  %22 = zext i32 %14 to i64, !dbg !13919
  %23 = tail call i32 @sys_clock_tick_get_32() #23, !dbg !13920
  %24 = zext i32 %23 to i64, !dbg !13920
  %25 = sub nsw i64 %22, %24, !dbg !13921
  call void @llvm.dbg.value(metadata i64 %25, metadata !13883, metadata !DIExpression()), !dbg !13887
  %26 = icmp sgt i64 %25, 0, !dbg !13922
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13922
  %28 = trunc i64 %27 to i32, !dbg !13922
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13887
  ret i32 %30, !dbg !13923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !13924 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13926, metadata !DIExpression()), !dbg !13927
  call void @llvm.dbg.value(metadata i64 %0, metadata !12348, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata i32 10000, metadata !12351, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata i32 1000, metadata !12352, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata i8 1, metadata !12353, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata i1 false, metadata !12354, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13928
  call void @llvm.dbg.value(metadata i1 false, metadata !12355, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13928
  call void @llvm.dbg.value(metadata i8 0, metadata !12356, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata i1 false, metadata !12357, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13928
  call void @llvm.dbg.value(metadata i1 true, metadata !12358, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13928
  call void @llvm.dbg.value(metadata i64 0, metadata !12359, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata i64 0, metadata !12359, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata i64 %0, metadata !12348, metadata !DIExpression()), !dbg !13928
  %2 = udiv i64 %0, 10, !dbg !13930
  ret i64 %2, !dbg !13934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13935 {
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !13936, !srcloc !13938
  tail call void @z_impl_k_yield() #24, !dbg !13939
  ret void, !dbg !13940
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13945, metadata !DIExpression()), !dbg !13947
  %2 = sext i32 %0 to i64, !dbg !13948
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !13949
  call void @llvm.dbg.value(metadata i64 %3, metadata !13946, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13947
  %4 = shl i64 %3, 32, !dbg !13950
  %5 = ashr exact i64 %4, 32, !dbg !13950
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !13951
  call void @llvm.dbg.value(metadata i32 %6, metadata !13946, metadata !DIExpression()), !dbg !13947
  %7 = sext i32 %6 to i64, !dbg !13952
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !13953
  %9 = trunc i64 %8 to i32, !dbg !13953
  ret i32 %9, !dbg !13954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13955 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13957, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata i64 %0, metadata !12348, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12351, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.value(metadata i32 10000, metadata !12352, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.value(metadata i8 1, metadata !12353, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.value(metadata i1 false, metadata !12354, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13959
  call void @llvm.dbg.value(metadata i1 true, metadata !12355, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13959
  call void @llvm.dbg.value(metadata i8 0, metadata !12356, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.value(metadata i1 false, metadata !12357, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13959
  call void @llvm.dbg.value(metadata i1 true, metadata !12358, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13959
  call void @llvm.dbg.value(metadata i64 0, metadata !12359, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.value(metadata i64 0, metadata !12359, metadata !DIExpression()), !dbg !13959
  %2 = add i64 %0, 99, !dbg !13961
  call void @llvm.dbg.value(metadata i64 %2, metadata !12348, metadata !DIExpression()), !dbg !13959
  %3 = udiv i64 %2, 100, !dbg !13962
  ret i64 %3, !dbg !13963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !13964 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13966, metadata !DIExpression()), !dbg !13967
  call void @llvm.dbg.value(metadata i64 %0, metadata !12348, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.value(metadata i32 10000, metadata !12351, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12352, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.value(metadata i8 1, metadata !12353, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.value(metadata i1 false, metadata !12354, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13968
  call void @llvm.dbg.value(metadata i1 false, metadata !12355, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13968
  call void @llvm.dbg.value(metadata i8 0, metadata !12356, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.value(metadata i1 true, metadata !12357, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13968
  call void @llvm.dbg.value(metadata i1 false, metadata !12358, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13968
  call void @llvm.dbg.value(metadata i64 0, metadata !12359, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.value(metadata i64 0, metadata !12359, metadata !DIExpression()), !dbg !13968
  %2 = mul i64 %0, 100, !dbg !13970
  ret i64 %2, !dbg !13972
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13973 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13975, metadata !DIExpression()), !dbg !13976
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !13977
  br i1 %2, label %14, label %3, !dbg !13979

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13980
  %5 = icmp slt i32 %4, 0, !dbg !13982
  br i1 %5, label %6, label %10, !dbg !13983

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13984
  %8 = load i8, i8* %7, align 1, !dbg !13984
  %9 = icmp eq i8 %8, 16, !dbg !13987
  br i1 %9, label %10, label %14, !dbg !13988

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !13989
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13990
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !13991, !srcloc !12952
  call void @llvm.dbg.value(metadata i32 %11, metadata !12948, metadata !DIExpression()) #22, !dbg !13995
  %12 = icmp eq i32 %11, 0, !dbg !13996
  br i1 %12, label %13, label %14, !dbg !13997

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13998
  br label %14, !dbg !14000

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14002 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14004, metadata !DIExpression()), !dbg !14005
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14006
  %3 = load i8, i8* %2, align 1, !dbg !14006
  %4 = and i8 %3, 2, !dbg !14007
  %5 = icmp ne i8 %4, 0, !dbg !14008
  ret i1 %5, !dbg !14009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !14010 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14015
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14014, metadata !DIExpression()), !dbg !14016
  ret %struct.k_thread* %1, !dbg !14017
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14018 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !14019, !srcloc !12952
  call void @llvm.dbg.value(metadata i32 %1, metadata !12948, metadata !DIExpression()) #22, !dbg !14022
  %2 = icmp eq i32 %1, 0, !dbg !14023
  br i1 %2, label %3, label %8, !dbg !14024

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14025
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !14026
  %6 = icmp ne i32 %5, 0, !dbg !14024
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14030, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !14033
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14035, !srcloc !12314
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14035
  call void @llvm.dbg.value(metadata i32 %3, metadata !12311, metadata !DIExpression()) #22, !dbg !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !14037
  call void @llvm.dbg.value(metadata i32 %3, metadata !12305, metadata !DIExpression()) #22, !dbg !14033
  call void @llvm.dbg.value(metadata i32 %3, metadata !14031, metadata !DIExpression()), !dbg !14032
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14038
  %5 = load i8, i8* %4, align 4, !dbg !14038
  %6 = and i8 %5, 1, !dbg !14040
  %7 = icmp eq i8 %6, 0, !dbg !14041
  br i1 %7, label %9, label %8, !dbg !14042

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !14043
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !14043
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !14046
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14048, !srcloc !12340
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #22, !dbg !14049, !srcloc !14051
  br label %24, !dbg !14052

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14053
  %11 = load i8, i8* %10, align 1, !dbg !14053
  %12 = and i8 %11, 8, !dbg !14055
  %13 = icmp eq i8 %12, 0, !dbg !14056
  br i1 %13, label %15, label %14, !dbg !14057

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !14058
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !14058
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !14061
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14063, !srcloc !12340
  br label %24, !dbg !14064

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !14065
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14066
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14068
  br i1 %17, label %18, label %23, !dbg !14069

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !14070, !srcloc !12952
  call void @llvm.dbg.value(metadata i32 %19, metadata !12948, metadata !DIExpression()) #22, !dbg !14073
  %20 = icmp eq i32 %19, 0, !dbg !14074
  br i1 %20, label %21, label %23, !dbg !14075

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12912, metadata !DIExpression()) #22, !dbg !14076
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12917, metadata !DIExpression()) #22, !dbg !14076
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #23, !dbg !14079
  br label %23, !dbg !14080

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12326, metadata !DIExpression()) #22, !dbg !14081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !14081
  call void @llvm.dbg.value(metadata i32 %3, metadata !12334, metadata !DIExpression()) #22, !dbg !14083
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14085, !srcloc !12340
  br label %24, !dbg !14086

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14089, metadata !DIExpression()), !dbg !14090
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14091
  %3 = load i8, i8* %2, align 1, !dbg !14091
  %4 = and i8 %3, 8, !dbg !14093
  %5 = icmp eq i8 %4, 0, !dbg !14094
  br i1 %5, label %6, label %20, !dbg !14095

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14096
  %8 = or i8 %7, 8, !dbg !14096
  store i8 %8, i8* %2, align 1, !dbg !14096
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !14098
  br i1 %9, label %10, label %12, !dbg !14100

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12470, metadata !DIExpression()) #22, !dbg !14101
  %11 = and i8 %8, 95, !dbg !14104
  store i8 %11, i8* %2, align 1, !dbg !14104
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12478, metadata !DIExpression()) #22, !dbg !14105
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #23, !dbg !14107
  br label %12, !dbg !14108

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14109
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14109
  %15 = icmp eq %union.anon* %14, null, !dbg !14111
  br i1 %15, label %17, label %16, !dbg !14112

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !14113
  br label %17, !dbg !14115

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !14116
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14117
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !14118
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !14119
  br label %20, !dbg !14120

20:                                               ; preds = %17, %1
  ret void, !dbg !14121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14122 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14126, metadata !DIExpression()), !dbg !14128
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !14129
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14127, metadata !DIExpression()), !dbg !14128
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14130
  br i1 %3, label %10, label %4, !dbg !14131

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !14132
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !14134
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14135, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i32 0, metadata !14140, metadata !DIExpression()), !dbg !14141
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 1, !dbg !14143
  store i32 0, i32* %7, align 4, !dbg !14144
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !14145
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !14129
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14127, metadata !DIExpression()), !dbg !14128
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14130
  br i1 %9, label %10, label %4, !dbg !14131, !llvm.loop !14146

10:                                               ; preds = %4, %1
  ret void, !dbg !14148
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14149 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14154, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14153, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !14158
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14160, !srcloc !12314
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14160
  call void @llvm.dbg.value(metadata i32 %4, metadata !12311, metadata !DIExpression()) #22, !dbg !14162
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !14162
  call void @llvm.dbg.value(metadata i32 %4, metadata !12305, metadata !DIExpression()) #22, !dbg !14158
  call void @llvm.dbg.value(metadata i32 %4, metadata !14155, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.value(metadata i32 0, metadata !14156, metadata !DIExpression()), !dbg !14157
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14163
  %6 = load i8, i8* %5, align 1, !dbg !14163
  %7 = and i8 %6, 8, !dbg !14165
  %8 = icmp eq i8 %7, 0, !dbg !14166
  br i1 %8, label %9, label %24, !dbg !14167

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14154, metadata !DIExpression()), !dbg !14157
  %11 = icmp eq i64 %10, 0, !dbg !14168
  br i1 %11, label %24, label %12, !dbg !14170

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14171
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14173
  br i1 %14, label %24, label %15, !dbg !14174

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14175
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14175
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14176
  %19 = icmp eq %union.anon* %17, %18, !dbg !14177
  br i1 %19, label %24, label %20, !dbg !14178

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14179
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #24, !dbg !14181
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14182
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !14183
  call void @llvm.dbg.value(metadata i32 %4, metadata !12912, metadata !DIExpression()) #22, !dbg !14184
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12917, metadata !DIExpression()) #22, !dbg !14184
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #23, !dbg !14186
  call void @llvm.dbg.value(metadata i32 %23, metadata !14156, metadata !DIExpression()), !dbg !14157
  br label %26, !dbg !14187

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14188
  call void @llvm.dbg.value(metadata i32 %25, metadata !14156, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.value(metadata i32 %4, metadata !12326, metadata !DIExpression()) #22, !dbg !14189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !14189
  call void @llvm.dbg.value(metadata i32 %4, metadata !12334, metadata !DIExpression()) #22, !dbg !14191
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !14193, !srcloc !12340
  br label %26, !dbg !14194

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14157
  ret i32 %27, !dbg !14195
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14196 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14200, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 %1, metadata !14201, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i8* %2, metadata !14202, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i8 0, metadata !14204, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 0, metadata !14205, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12299, metadata !DIExpression()) #22, !dbg !14210
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14212, !srcloc !12314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12311, metadata !DIExpression()) #22, !dbg !14214
  call void @llvm.dbg.value(metadata i32 undef, metadata !12312, metadata !DIExpression()) #22, !dbg !14214
  call void @llvm.dbg.value(metadata i32 undef, metadata !12305, metadata !DIExpression()) #22, !dbg !14210
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata i8 poison, metadata !14204, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 undef, metadata !14205, metadata !DIExpression()), !dbg !14209
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !14215
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14203, metadata !DIExpression()), !dbg !14208
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14218
  br i1 %7, label %12, label %8, !dbg !14220

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14221, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.value(metadata i32 %1, metadata !14227, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.value(metadata i8* %2, metadata !14228, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14135, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata i32 %1, metadata !14140, metadata !DIExpression()), !dbg !14232
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 6, i32 1, !dbg !14234
  store i32 %1, i32* %9, align 4, !dbg !14235
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !14236
  store i8* %2, i8** %10, align 4, !dbg !14237
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !14238
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !14239
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !14240
  call void @llvm.dbg.value(metadata i8 1, metadata !14204, metadata !DIExpression()), !dbg !14208
  br label %12, !dbg !14241

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14212
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14212
  call void @llvm.dbg.value(metadata i32 %14, metadata !12311, metadata !DIExpression()) #22, !dbg !14214
  call void @llvm.dbg.value(metadata i32 %14, metadata !12305, metadata !DIExpression()) #22, !dbg !14210
  call void @llvm.dbg.value(metadata i32 %14, metadata !14207, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata i8 poison, metadata !14204, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 undef, metadata !12326, metadata !DIExpression()) #22, !dbg !14242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12331, metadata !DIExpression()) #22, !dbg !14242
  call void @llvm.dbg.value(metadata i32 undef, metadata !12334, metadata !DIExpression()) #22, !dbg !14244
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #22, !dbg !14246, !srcloc !12340
  call void @llvm.dbg.value(metadata i32 undef, metadata !14205, metadata !DIExpression()), !dbg !14209
  ret i1 %13, !dbg !14247
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14248 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14254, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i64 undef, metadata !14256, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14253, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14255, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i8** %4, metadata !14257, metadata !DIExpression()), !dbg !14259
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !14260
  call void @llvm.dbg.value(metadata i32 %6, metadata !14258, metadata !DIExpression()), !dbg !14259
  %7 = icmp eq i8** %4, null, !dbg !14261
  br i1 %7, label %12, label %8, !dbg !14263

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14264
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14266
  %11 = load i8*, i8** %10, align 4, !dbg !14266
  store i8* %11, i8** %4, align 4, !dbg !14267
  br label %12, !dbg !14268

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14270 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #23, !dbg !14272
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #23, !dbg !14273
  ret void, !dbg !14274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14275 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14285, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14283, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14284, metadata !DIExpression()), !dbg !14302
  %5 = icmp eq i64 %4, -1, !dbg !14303
  br i1 %5, label %55, label %6, !dbg !14305

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14306
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14307
  call void @llvm.dbg.value(metadata i32 0, metadata !14286, metadata !DIExpression()), !dbg !14308
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14309, metadata !DIExpression()) #22, !dbg !14316
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14318, !srcloc !14324
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14318
  call void @llvm.dbg.value(metadata i32 %9, metadata !14321, metadata !DIExpression()) #22, !dbg !14325
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #22, !dbg !14325
  call void @llvm.dbg.value(metadata i32 %9, metadata !14315, metadata !DIExpression()) #22, !dbg !14316
  call void @llvm.dbg.value(metadata i32 %9, metadata !14292, metadata !DIExpression()), !dbg !14308
  call void @llvm.dbg.value(metadata i32 undef, metadata !14286, metadata !DIExpression()), !dbg !14308
  %10 = icmp slt i64 %4, -1, !dbg !14326
  br i1 %10, label %11, label %17, !dbg !14327

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14328
  %13 = add i64 %4, %12, !dbg !14329
  %14 = sub i64 -2, %13, !dbg !14329
  call void @llvm.dbg.value(metadata i64 %14, metadata !14296, metadata !DIExpression()), !dbg !14330
  %15 = icmp sgt i64 %14, 1, !dbg !14331
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14331
  br label %22, !dbg !14332

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14333
  %19 = tail call fastcc i32 @elapsed.150() #24, !dbg !14335
  %20 = sext i32 %19 to i64, !dbg !14335
  %21 = add nsw i64 %18, %20, !dbg !14336
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14337
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14338
  store i64 %23, i64* %24, align 8, !dbg !14339
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !14340
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14293, metadata !DIExpression()), !dbg !14342
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14343
  br i1 %26, label %42, label %27, !dbg !14343

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14344
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14293, metadata !DIExpression()), !dbg !14342
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14348
  %31 = load i64, i64* %30, align 8, !dbg !14348
  %32 = icmp slt i64 %28, %31, !dbg !14349
  br i1 %32, label %33, label %38, !dbg !14350

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14348
  %35 = sub nsw i64 %31, %28, !dbg !14351
  store i64 %35, i64* %34, align 8, !dbg !14351
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14353
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14354
  tail call fastcc void @sys_dlist_insert.151(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !14355
  br label %44, !dbg !14356

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14357
  store i64 %39, i64* %24, align 8, !dbg !14357
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !14358
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14293, metadata !DIExpression()), !dbg !14342
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14343
  br i1 %41, label %42, label %27, !dbg !14343, !llvm.loop !14359

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14361
  tail call fastcc void @sys_dlist_append.152(%struct._dnode* noundef %43) #24, !dbg !14364
  br label %44, !dbg !14365

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !14366
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14367
  br i1 %46, label %47, label %54, !dbg !14368

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !14369
  call void @llvm.dbg.value(metadata i32 %48, metadata !14299, metadata !DIExpression()), !dbg !14370
  %49 = icmp ne i32 %48, 0, !dbg !14371
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !14373
  br i1 %52, label %54, label %53, !dbg !14373

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #23, !dbg !14374
  br label %54, !dbg !14376

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !14377, metadata !DIExpression()) #22, !dbg !14383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14382, metadata !DIExpression()) #22, !dbg !14383
  call void @llvm.dbg.value(metadata i32 %9, metadata !14385, metadata !DIExpression()) #22, !dbg !14388
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #22, !dbg !14390, !srcloc !14391
  call void @llvm.dbg.value(metadata i32 undef, metadata !14286, metadata !DIExpression()), !dbg !14308
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !14392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.150() unnamed_addr #1 !dbg !14393 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14396
  %2 = icmp eq i32 %1, 0, !dbg !14397
  br i1 %2, label %3, label %5, !dbg !14396

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #23, !dbg !14398
  br label %5, !dbg !14396

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14396
  ret i32 %6, !dbg !14399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !14400 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.155() #24, !dbg !14406
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14404, metadata !DIExpression()), !dbg !14407
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14408
  ret %struct._timeout* %2, !dbg !14409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.151(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14410 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14414, metadata !DIExpression()), !dbg !14418
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14415, metadata !DIExpression()), !dbg !14418
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14419
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14419
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14416, metadata !DIExpression()), !dbg !14418
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14420
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14421
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14422
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14423
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14424
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14425
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14426
  ret void, !dbg !14427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !14428 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14432, metadata !DIExpression()), !dbg !14434
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14435
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.153(%struct._dnode* noundef %2) #24, !dbg !14436
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14433, metadata !DIExpression()), !dbg !14434
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14437
  ret %struct._timeout* %4, !dbg !14438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.152(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14439 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14444, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14445, metadata !DIExpression()), !dbg !14447
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14448
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14446, metadata !DIExpression()), !dbg !14447
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14449
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14450
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14451
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14452
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14453
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14454
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14455
  ret void, !dbg !14456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14457 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !14462
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14459, metadata !DIExpression()), !dbg !14463
  %2 = tail call fastcc i32 @elapsed.150() #24, !dbg !14464
  call void @llvm.dbg.value(metadata i32 %2, metadata !14460, metadata !DIExpression()), !dbg !14463
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14465
  br i1 %3, label %14, label %4, !dbg !14467

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14468
  %6 = load i64, i64* %5, align 8, !dbg !14468
  %7 = sext i32 %2 to i64, !dbg !14469
  %8 = sub nsw i64 %6, %7, !dbg !14470
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14471
  br i1 %9, label %14, label %10, !dbg !14472

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14473
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14473
  %13 = trunc i64 %12 to i32, !dbg !14473
  call void @llvm.dbg.value(metadata i32 %13, metadata !14461, metadata !DIExpression()), !dbg !14463
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14475
  call void @llvm.dbg.value(metadata i32 %15, metadata !14461, metadata !DIExpression()), !dbg !14463
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14476
  %17 = icmp ne i32 %16, 0, !dbg !14478
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14479
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14479
  call void @llvm.dbg.value(metadata i32 %20, metadata !14461, metadata !DIExpression()), !dbg !14463
  ret i32 %20, !dbg !14480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.153(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14481 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14485, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14486, metadata !DIExpression()), !dbg !14487
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14488
  br i1 %2, label %5, label %3, !dbg !14489

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.154(%struct._dnode* noundef nonnull %0) #24, !dbg !14490
  br label %5, !dbg !14489

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14489
  ret %struct._dnode* %6, !dbg !14491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.154(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14492 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14494, metadata !DIExpression()), !dbg !14496
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14495, metadata !DIExpression()), !dbg !14496
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14497
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14498
  br i1 %3, label %7, label %4, !dbg !14499

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14500
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14500
  br label %7, !dbg !14499

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14499
  ret %struct._dnode* %8, !dbg !14501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.155() unnamed_addr #5 !dbg !14502 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14506, metadata !DIExpression()), !dbg !14507
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.156() #24, !dbg !14508
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14508
  ret %struct._dnode* %3, !dbg !14509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.156() unnamed_addr #5 !dbg !14510 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14514, metadata !DIExpression()), !dbg !14515
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14516
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14517
  ret i1 %2, !dbg !14518
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14519 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14523, metadata !DIExpression()), !dbg !14528
  call void @llvm.dbg.value(metadata i32 -22, metadata !14524, metadata !DIExpression()), !dbg !14528
  call void @llvm.dbg.value(metadata i32 0, metadata !14525, metadata !DIExpression()), !dbg !14529
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14309, metadata !DIExpression()) #22, !dbg !14530
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14532, !srcloc !14324
  call void @llvm.dbg.value(metadata i32 undef, metadata !14321, metadata !DIExpression()) #22, !dbg !14534
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #22, !dbg !14534
  call void @llvm.dbg.value(metadata i32 undef, metadata !14315, metadata !DIExpression()) #22, !dbg !14530
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()), !dbg !14529
  call void @llvm.dbg.value(metadata i32 -22, metadata !14524, metadata !DIExpression()), !dbg !14528
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()), !dbg !14529
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14524, metadata !DIExpression()), !dbg !14528
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.159(%struct._dnode* noundef %3) #24, !dbg !14535
  br i1 %4, label %5, label %6, !dbg !14539

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !14540
  call void @llvm.dbg.value(metadata i32 0, metadata !14524, metadata !DIExpression()), !dbg !14528
  br label %6, !dbg !14542

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !14528
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14532
  call void @llvm.dbg.value(metadata i32 %8, metadata !14321, metadata !DIExpression()) #22, !dbg !14534
  call void @llvm.dbg.value(metadata i32 %8, metadata !14315, metadata !DIExpression()) #22, !dbg !14530
  call void @llvm.dbg.value(metadata i32 %8, metadata !14527, metadata !DIExpression()), !dbg !14529
  call void @llvm.dbg.value(metadata i32 %7, metadata !14524, metadata !DIExpression()), !dbg !14528
  call void @llvm.dbg.value(metadata i32 undef, metadata !14377, metadata !DIExpression()) #22, !dbg !14543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14382, metadata !DIExpression()) #22, !dbg !14543
  call void @llvm.dbg.value(metadata i32 undef, metadata !14385, metadata !DIExpression()) #22, !dbg !14545
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #22, !dbg !14547, !srcloc !14391
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()), !dbg !14529
  ret i32 %7, !dbg !14548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.159(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14549 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14555, metadata !DIExpression()), !dbg !14556
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14557
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14557
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14558
  ret i1 %4, !dbg !14559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !14560 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14562, metadata !DIExpression()), !dbg !14563
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !14564
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14566
  br i1 %3, label %10, label %4, !dbg !14567

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14568
  %6 = load i64, i64* %5, align 8, !dbg !14568
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14570
  %8 = load i64, i64* %7, align 8, !dbg !14571
  %9 = add nsw i64 %8, %6, !dbg !14571
  store i64 %9, i64* %7, align 8, !dbg !14571
  br label %10, !dbg !14572

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14573
  tail call fastcc void @sys_dlist_remove.160(%struct._dnode* noundef %11) #24, !dbg !14574
  ret void, !dbg !14575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.160(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14576 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14580, metadata !DIExpression()), !dbg !14583
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14584
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14584
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14581, metadata !DIExpression()), !dbg !14583
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14585
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14585
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14582, metadata !DIExpression()), !dbg !14583
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14586
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14587
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14588
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14589
  tail call fastcc void @sys_dnode_init.161(%struct._dnode* noundef %0) #24, !dbg !14590
  ret void, !dbg !14591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.161(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14592 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14594, metadata !DIExpression()), !dbg !14595
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14596
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14597
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14598
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14599
  ret void, !dbg !14600
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14601 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14607, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i64 0, metadata !14608, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i32 0, metadata !14609, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14309, metadata !DIExpression()) #22, !dbg !14614
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14616, !srcloc !14324
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14616
  call void @llvm.dbg.value(metadata i32 %3, metadata !14321, metadata !DIExpression()) #22, !dbg !14618
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #22, !dbg !14618
  call void @llvm.dbg.value(metadata i32 %3, metadata !14315, metadata !DIExpression()) #22, !dbg !14614
  call void @llvm.dbg.value(metadata i32 %3, metadata !14611, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i64 0, metadata !14608, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i32 undef, metadata !14609, metadata !DIExpression()), !dbg !14613
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !14619
  call void @llvm.dbg.value(metadata i64 %4, metadata !14608, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i32 %3, metadata !14377, metadata !DIExpression()) #22, !dbg !14622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14382, metadata !DIExpression()) #22, !dbg !14622
  call void @llvm.dbg.value(metadata i32 %3, metadata !14385, metadata !DIExpression()) #22, !dbg !14624
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14626, !srcloc !14391
  call void @llvm.dbg.value(metadata i32 undef, metadata !14609, metadata !DIExpression()), !dbg !14613
  ret i64 %4, !dbg !14627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14628 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14630, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i64 0, metadata !14631, metadata !DIExpression()), !dbg !14634
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.162(%struct._timeout* noundef %0) #24, !dbg !14635
  br i1 %2, label %21, label %3, !dbg !14637

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !14638
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14632, metadata !DIExpression()), !dbg !14639
  call void @llvm.dbg.value(metadata i64 0, metadata !14631, metadata !DIExpression()), !dbg !14634
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14640
  br i1 %5, label %16, label %6, !dbg !14642

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14632, metadata !DIExpression()), !dbg !14639
  call void @llvm.dbg.value(metadata i64 %8, metadata !14631, metadata !DIExpression()), !dbg !14634
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14643
  %10 = load i64, i64* %9, align 8, !dbg !14643
  %11 = add nsw i64 %10, %8, !dbg !14645
  call void @llvm.dbg.value(metadata i64 %11, metadata !14631, metadata !DIExpression()), !dbg !14634
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14646
  br i1 %12, label %16, label %13, !dbg !14648

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !14649
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14632, metadata !DIExpression()), !dbg !14639
  call void @llvm.dbg.value(metadata i64 %11, metadata !14631, metadata !DIExpression()), !dbg !14634
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14640
  br i1 %15, label %16, label %6, !dbg !14642, !llvm.loop !14650

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14634
  call void @llvm.dbg.value(metadata i64 %17, metadata !14631, metadata !DIExpression()), !dbg !14634
  %18 = tail call fastcc i32 @elapsed.150() #24, !dbg !14652
  %19 = sext i32 %18 to i64, !dbg !14652
  %20 = sub nsw i64 %17, %19, !dbg !14653
  br label %21, !dbg !14654

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14634
  ret i64 %22, !dbg !14655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.162(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14656 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14660, metadata !DIExpression()), !dbg !14661
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14662
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.159(%struct._dnode* noundef %2) #24, !dbg !14663
  %4 = xor i1 %3, true, !dbg !14664
  ret i1 %4, !dbg !14665
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14666 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14668, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata i64 0, metadata !14669, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata i32 0, metadata !14670, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14309, metadata !DIExpression()) #22, !dbg !14675
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14677, !srcloc !14324
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14677
  call void @llvm.dbg.value(metadata i32 %3, metadata !14321, metadata !DIExpression()) #22, !dbg !14679
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #22, !dbg !14679
  call void @llvm.dbg.value(metadata i32 %3, metadata !14315, metadata !DIExpression()) #22, !dbg !14675
  call void @llvm.dbg.value(metadata i32 %3, metadata !14672, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata i64 0, metadata !14669, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata i32 undef, metadata !14670, metadata !DIExpression()), !dbg !14674
  %4 = load i64, i64* @curr_tick, align 8, !dbg !14680
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !14683
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !14669, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14673
  call void @llvm.dbg.value(metadata i32 %3, metadata !14377, metadata !DIExpression()) #22, !dbg !14684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14382, metadata !DIExpression()) #22, !dbg !14684
  call void @llvm.dbg.value(metadata i32 %3, metadata !14385, metadata !DIExpression()) #22, !dbg !14686
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14688, !srcloc !14391
  call void @llvm.dbg.value(metadata i32 undef, metadata !14670, metadata !DIExpression()), !dbg !14674
  %6 = add i64 %5, %4, !dbg !14689
  ret i64 %6, !dbg !14690
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14691 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14693, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 0, metadata !14694, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14309, metadata !DIExpression()) #22, !dbg !14699
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14701, !srcloc !14324
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14701
  call void @llvm.dbg.value(metadata i32 %2, metadata !14321, metadata !DIExpression()) #22, !dbg !14703
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #22, !dbg !14703
  call void @llvm.dbg.value(metadata i32 %2, metadata !14315, metadata !DIExpression()) #22, !dbg !14699
  call void @llvm.dbg.value(metadata i32 %2, metadata !14696, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata i32 -1, metadata !14693, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()), !dbg !14698
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !14704
  call void @llvm.dbg.value(metadata i32 %3, metadata !14693, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 %2, metadata !14377, metadata !DIExpression()) #22, !dbg !14707
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14382, metadata !DIExpression()) #22, !dbg !14707
  call void @llvm.dbg.value(metadata i32 %2, metadata !14385, metadata !DIExpression()) #22, !dbg !14709
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !14711, !srcloc !14391
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()), !dbg !14698
  ret i32 %3, !dbg !14712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14715, metadata !DIExpression()), !dbg !14725
  call void @llvm.dbg.value(metadata i1 %1, metadata !14716, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14725
  call void @llvm.dbg.value(metadata i32 0, metadata !14717, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14309, metadata !DIExpression()) #22, !dbg !14727
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14729, !srcloc !14324
  call void @llvm.dbg.value(metadata i32 undef, metadata !14321, metadata !DIExpression()) #22, !dbg !14731
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #22, !dbg !14731
  call void @llvm.dbg.value(metadata i32 undef, metadata !14315, metadata !DIExpression()) #22, !dbg !14727
  call void @llvm.dbg.value(metadata i32 undef, metadata !14719, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.value(metadata i32 undef, metadata !14717, metadata !DIExpression()), !dbg !14726
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !14732
  call void @llvm.dbg.value(metadata i32 %4, metadata !14720, metadata !DIExpression()), !dbg !14733
  call void @llvm.dbg.value(metadata i1 undef, metadata !14723, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14733
  %5 = icmp slt i32 %4, 2, !dbg !14734
  call void @llvm.dbg.value(metadata i1 %5, metadata !14724, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14733
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14735
  call void @llvm.dbg.value(metadata i1 %6, metadata !14723, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14733
  br i1 %7, label %11, label %8, !dbg !14735

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14737
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14737
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #23, !dbg !14739
  br label %11, !dbg !14740

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14729
  call void @llvm.dbg.value(metadata i32 %12, metadata !14321, metadata !DIExpression()) #22, !dbg !14731
  call void @llvm.dbg.value(metadata i32 %12, metadata !14315, metadata !DIExpression()) #22, !dbg !14727
  call void @llvm.dbg.value(metadata i32 %12, metadata !14719, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.value(metadata i32 undef, metadata !14377, metadata !DIExpression()) #22, !dbg !14741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14382, metadata !DIExpression()) #22, !dbg !14741
  call void @llvm.dbg.value(metadata i32 undef, metadata !14385, metadata !DIExpression()) #22, !dbg !14743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #22, !dbg !14745, !srcloc !14391
  call void @llvm.dbg.value(metadata i32 1, metadata !14717, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.value(metadata i32 undef, metadata !14717, metadata !DIExpression()), !dbg !14726
  ret void, !dbg !14746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14751, metadata !DIExpression()), !dbg !14756
  tail call void @z_time_slice(i32 noundef %0) #23, !dbg !14757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14309, metadata !DIExpression()) #22, !dbg !14758
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14760, !srcloc !14324
  call void @llvm.dbg.value(metadata i32 undef, metadata !14321, metadata !DIExpression()) #22, !dbg !14762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #22, !dbg !14762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14315, metadata !DIExpression()) #22, !dbg !14758
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()), !dbg !14756
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()), !dbg !14756
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !14763
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14764
  br i1 %4, label %28, label %5, !dbg !14765

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14766
  %10 = load i64, i64* %9, align 8, !dbg !14766
  %11 = sext i32 %8 to i64, !dbg !14767
  %12 = icmp sgt i64 %10, %11, !dbg !14768
  br i1 %12, label %26, label %13, !dbg !14769

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14756
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14753, metadata !DIExpression()), !dbg !14770
  %15 = trunc i64 %10 to i32, !dbg !14771
  call void @llvm.dbg.value(metadata i32 %15, metadata !14755, metadata !DIExpression()), !dbg !14770
  %16 = sext i32 %15 to i64, !dbg !14772
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14773
  %18 = add i64 %17, %16, !dbg !14773
  store i64 %18, i64* @curr_tick, align 8, !dbg !14773
  store i64 0, i64* %9, align 8, !dbg !14774
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !14775
  call void @llvm.dbg.value(metadata i32 %14, metadata !14377, metadata !DIExpression()) #22, !dbg !14776
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14382, metadata !DIExpression()) #22, !dbg !14776
  call void @llvm.dbg.value(metadata i32 %14, metadata !14385, metadata !DIExpression()) #22, !dbg !14778
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #22, !dbg !14780, !srcloc !14391
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14781
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14781
  tail call void %20(%struct._timeout* noundef nonnull %6) #23, !dbg !14782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14309, metadata !DIExpression()) #22, !dbg !14783
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14785, !srcloc !14324
  call void @llvm.dbg.value(metadata i32 undef, metadata !14321, metadata !DIExpression()) #22, !dbg !14787
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #22, !dbg !14787
  call void @llvm.dbg.value(metadata i32 undef, metadata !14315, metadata !DIExpression()) #22, !dbg !14783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()), !dbg !14756
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14788
  %23 = sub nsw i32 %22, %15, !dbg !14788
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()), !dbg !14756
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !14763
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14764
  br i1 %25, label %28, label %5, !dbg !14765, !llvm.loop !14789

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14791
  store i64 %27, i64* %9, align 8, !dbg !14791
  br label %32, !dbg !14794

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14756
  %31 = sext i32 %30 to i64, !dbg !14795
  br label %32, !dbg !14795

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14795
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14756
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14796
  %37 = add i64 %36, %33, !dbg !14796
  store i64 %37, i64* @curr_tick, align 8, !dbg !14796
  store i32 0, i32* @announce_remaining, align 4, !dbg !14797
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !14798
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #23, !dbg !14799
  call void @llvm.dbg.value(metadata i32 %35, metadata !14377, metadata !DIExpression()) #22, !dbg !14800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14382, metadata !DIExpression()) #22, !dbg !14800
  call void @llvm.dbg.value(metadata i32 %35, metadata !14385, metadata !DIExpression()) #22, !dbg !14802
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #22, !dbg !14804, !srcloc !14391
  ret void, !dbg !14805
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14806 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14810, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i32 0, metadata !14811, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14309, metadata !DIExpression()) #22, !dbg !14816
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14818, !srcloc !14324
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14818
  call void @llvm.dbg.value(metadata i32 %2, metadata !14321, metadata !DIExpression()) #22, !dbg !14820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #22, !dbg !14820
  call void @llvm.dbg.value(metadata i32 %2, metadata !14315, metadata !DIExpression()) #22, !dbg !14816
  call void @llvm.dbg.value(metadata i32 %2, metadata !14813, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.value(metadata i64 0, metadata !14810, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i32 undef, metadata !14811, metadata !DIExpression()), !dbg !14815
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14821
  %4 = tail call fastcc i32 @elapsed.150() #24, !dbg !14824
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14810, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14814
  call void @llvm.dbg.value(metadata i32 %2, metadata !14377, metadata !DIExpression()) #22, !dbg !14825
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14382, metadata !DIExpression()) #22, !dbg !14825
  call void @llvm.dbg.value(metadata i32 %2, metadata !14385, metadata !DIExpression()) #22, !dbg !14827
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !14829, !srcloc !14391
  call void @llvm.dbg.value(metadata i32 undef, metadata !14811, metadata !DIExpression()), !dbg !14815
  %5 = sext i32 %4 to i64, !dbg !14824
  %6 = add i64 %3, %5, !dbg !14830
  ret i64 %6, !dbg !14831
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14832 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !14833
  %2 = trunc i64 %1 to i32, !dbg !14834
  ret i32 %2, !dbg !14835
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14836 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !14837
  ret i64 %1, !dbg !14838
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14841, metadata !DIExpression()), !dbg !14848
  %2 = icmp eq i32 %0, 0, !dbg !14849
  br i1 %2, label %10, label %3, !dbg !14851

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !14852
  call void @llvm.dbg.value(metadata i32 %4, metadata !14842, metadata !DIExpression()), !dbg !14848
  %5 = mul i32 %0, 200, !dbg !14853
  call void @llvm.dbg.value(metadata i32 %5, metadata !14843, metadata !DIExpression()), !dbg !14848
  br label %6, !dbg !14854

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %7, metadata !14844, metadata !DIExpression()), !dbg !14856
  %8 = sub i32 %7, %4, !dbg !14857
  %9 = icmp ult i32 %8, %5, !dbg !14859
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14861 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !14862
  ret i32 %1, !dbg !14863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14864 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #23, !dbg !14866
  ret i32 %1, !dbg !14867
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14868 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14872, metadata !DIExpression()), !dbg !14874
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14875

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !14876
  br label %14, !dbg !14880

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14873, metadata !DIExpression()), !dbg !14874
  %6 = icmp slt i64 %2, -1, !dbg !14881
  br i1 %6, label %7, label %9, !dbg !14884

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14885
  br label %14, !dbg !14886

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !14888
  %11 = icmp ugt i64 %2, 1, !dbg !14889
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14889
  %13 = add nsw i64 %10, %12, !dbg !14890
  br label %14, !dbg !14891

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14892
  ret i64 %15, !dbg !14893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14894 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.171, i32 0, i32 0)) #23, !dbg !14896
  ret void, !dbg !14897
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !14898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14900, metadata !DIExpression()), !dbg !14920
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !14901, metadata !DIExpression()), !dbg !14921
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !14922

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !14923

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !14901, metadata !DIExpression()), !dbg !14921
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !14924
  %6 = load i8*, i8** %5, align 4, !dbg !14924
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !14928
  %8 = load i32, i32* %7, align 4, !dbg !14928
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #24, !dbg !14929
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !14930
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !14901, metadata !DIExpression()), !dbg !14921
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !14931
  br i1 %10, label %3, label %2, !dbg !14922, !llvm.loop !14933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14935 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !14939, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i8* %1, metadata !14940, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i32 %2, metadata !14941, metadata !DIExpression()), !dbg !14942
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !14943
  tail call fastcc void @z_waitq_init.173(%union.anon* noundef nonnull %4) #24, !dbg !14944
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !14945
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #23, !dbg !14946
  ret void, !dbg !14947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.173(%union.anon* noundef %0) unnamed_addr #4 !dbg !14948 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14953, metadata !DIExpression()), !dbg !14954
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14955
  tail call fastcc void @sys_dlist_init.174(%struct._dnode* noundef %2) #24, !dbg !14956
  ret void, !dbg !14957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.174(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14958 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14963, metadata !DIExpression()), !dbg !14964
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14965
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14966
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14967
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14968
  ret void, !dbg !14969
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14970 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !14981, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !14978, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32 %1, metadata !14979, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32 %2, metadata !14980, metadata !DIExpression()), !dbg !14991
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #23, !dbg !14992
  call void @llvm.dbg.value(metadata i64 %6, metadata !14983, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i8* null, metadata !14984, metadata !DIExpression()), !dbg !14991
  %7 = icmp eq i64 %5, -1, !dbg !14993
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !14993
  call void @llvm.dbg.value(metadata i64 %8, metadata !14983, metadata !DIExpression()), !dbg !14991
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !14994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14995, metadata !DIExpression()) #22, !dbg !15002
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !15004, !srcloc !15010
  call void @llvm.dbg.value(metadata i32 undef, metadata !15007, metadata !DIExpression()) #22, !dbg !15011
  call void @llvm.dbg.value(metadata i32 undef, metadata !15008, metadata !DIExpression()) #22, !dbg !15011
  call void @llvm.dbg.value(metadata i32 undef, metadata !15001, metadata !DIExpression()) #22, !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !14985, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i8 0, metadata !14990, metadata !DIExpression()), !dbg !14991
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !14984, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i8 0, metadata !14990, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32 undef, metadata !14985, metadata !DIExpression()), !dbg !14991
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #23, !dbg !15012
  call void @llvm.dbg.value(metadata i8* %12, metadata !14984, metadata !DIExpression()), !dbg !14991
  %13 = tail call i64 @sys_clock_tick_get() #23, !dbg !15014
  call void @llvm.dbg.value(metadata i64 %13, metadata !14982, metadata !DIExpression()), !dbg !14991
  %14 = icmp eq i8* %12, null, !dbg !15015
  br i1 %14, label %15, label %31, !dbg !15017

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14985, metadata !DIExpression()), !dbg !14991
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !15017

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !14990, metadata !DIExpression()), !dbg !14991
  %20 = sub nsw i64 %8, %18, !dbg !15018
  %21 = icmp slt i64 %20, 1, !dbg !15019
  br i1 %21, label %31, label %22, !dbg !15020

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !14991
  call void @llvm.dbg.value(metadata i8 undef, metadata !14990, metadata !DIExpression()), !dbg !14991
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !15021
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !15021
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #23, !dbg !15021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14995, metadata !DIExpression()) #22, !dbg !15022
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !15024, !srcloc !15010
  call void @llvm.dbg.value(metadata i32 undef, metadata !15007, metadata !DIExpression()) #22, !dbg !15026
  call void @llvm.dbg.value(metadata i32 undef, metadata !15008, metadata !DIExpression()) #22, !dbg !15026
  call void @llvm.dbg.value(metadata i32 undef, metadata !15001, metadata !DIExpression()) #22, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !14985, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i8* null, metadata !14984, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32 undef, metadata !14985, metadata !DIExpression()), !dbg !14991
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #23, !dbg !15012
  call void @llvm.dbg.value(metadata i8* %28, metadata !14984, metadata !DIExpression()), !dbg !14991
  %29 = tail call i64 @sys_clock_tick_get() #23, !dbg !15014
  call void @llvm.dbg.value(metadata i64 %29, metadata !14982, metadata !DIExpression()), !dbg !14991
  %30 = icmp eq i8* %28, null, !dbg !15015
  br i1 %30, label %17, label %31, !dbg !15017, !llvm.loop !15027

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !15012
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !14991
  call void @llvm.dbg.value(metadata i8* %33, metadata !14984, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32 %34, metadata !15030, metadata !DIExpression()) #22, !dbg !15036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15035, metadata !DIExpression()) #22, !dbg !15036
  call void @llvm.dbg.value(metadata i32 %34, metadata !15038, metadata !DIExpression()) #22, !dbg !15041
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #22, !dbg !15043, !srcloc !15044
  ret i8* %33, !dbg !15045
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15046 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15052, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15050, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata i32 %1, metadata !15051, metadata !DIExpression()), !dbg !15054
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #24, !dbg !15055
  call void @llvm.dbg.value(metadata i8* %4, metadata !15053, metadata !DIExpression()), !dbg !15054
  ret i8* %4, !dbg !15056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15057 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15061, metadata !DIExpression()), !dbg !15064
  call void @llvm.dbg.value(metadata i8* %1, metadata !15062, metadata !DIExpression()), !dbg !15064
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14995, metadata !DIExpression()) #22, !dbg !15065
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !15067, !srcloc !15010
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15067
  call void @llvm.dbg.value(metadata i32 %4, metadata !15007, metadata !DIExpression()) #22, !dbg !15069
  call void @llvm.dbg.value(metadata i32 undef, metadata !15008, metadata !DIExpression()) #22, !dbg !15069
  call void @llvm.dbg.value(metadata i32 %4, metadata !15001, metadata !DIExpression()) #22, !dbg !15065
  call void @llvm.dbg.value(metadata i32 %4, metadata !15063, metadata !DIExpression()), !dbg !15064
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !15070
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #23, !dbg !15071
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !15072
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #23, !dbg !15074
  %8 = icmp eq i32 %7, 0, !dbg !15075
  br i1 %8, label %12, label %9, !dbg !15076

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !15077
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !15078
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #23, !dbg !15078
  br label %13, !dbg !15080

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !15030, metadata !DIExpression()) #22, !dbg !15081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15035, metadata !DIExpression()) #22, !dbg !15081
  call void @llvm.dbg.value(metadata i32 %4, metadata !15038, metadata !DIExpression()) #22, !dbg !15084
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !15086, !srcloc !15044
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !15087
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin nounwind optsize "no-builtins" }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #26 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1108, !2, !2280, !27, !113, !2282, !2284, !2317, !2354, !122, !2356, !556, !2438, !2449, !2496, !2498, !2526, !2554, !2597, !2668, !2713, !2741, !709, !719, !923, !1119, !1402, !2746, !1666, !2748, !2751, !2828, !2842, !2854, !2979, !1696, !2982, !1702, !2061, !3000, !2084, !2107, !3002, !2216, !3005, !2255}
!llvm.ident = !{!3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007}
!llvm.module.flags = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "prompt", scope: !27, file: !105, line: 9, type: !106, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 400, elements: !109)
!107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!108 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!109 = !{!110}
!110 = !DISubrange(count: 50)
!111 = !DIGlobalVariableExpression(var: !112, expr: !DIExpression())
!112 = distinct !DIGlobalVariable(name: "_char_out", scope: !113, file: !116, line: 54, type: !117, isLocal: false, isDefinition: true)
!113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !115, splitDebugInlining: false, nameTableKind: None)
!114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!115 = !{!111}
!116 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DISubroutineType(types: !119)
!119 = !{!103, !103}
!120 = !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !122, file: !541, line: 258, type: !542, isLocal: true, isDefinition: true, align: 32)
!122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !124, retainedTypes: !407, globals: !540, splitDebugInlining: false, nameTableKind: None)
!123 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!124 = !{!125, !157, !167, !216, !222, !343, !378}
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !126, line: 54, baseType: !32, size: 32, elements: !127)
!126 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!128 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!129 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!130 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!131 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!132 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!133 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!134 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!135 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!136 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!137 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!138 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!139 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!140 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!141 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!142 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!143 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!144 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!145 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!146 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!147 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!148 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!149 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!150 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!151 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!152 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!153 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!154 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!155 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!156 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !126, line: 224, baseType: !32, size: 32, elements: !158)
!158 = !{!159, !160, !161, !162, !163, !164, !165, !166}
!159 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!160 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!161 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!162 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!163 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!164 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!165 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!166 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !126, line: 275, baseType: !32, size: 32, elements: !168)
!168 = !{!169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215}
!169 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!170 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!171 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!172 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!173 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!174 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!175 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!176 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!177 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!178 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!179 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!180 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!181 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!182 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!183 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!184 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!185 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!186 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!187 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!188 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!189 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!190 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!191 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!192 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!193 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!194 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!195 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!196 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!197 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!198 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!199 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!200 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!201 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!202 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!203 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!204 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!205 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!206 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!207 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!208 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!209 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!210 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!211 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!212 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!213 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!214 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!215 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !126, line: 327, baseType: !32, size: 32, elements: !217)
!217 = !{!218, !219, !220, !221}
!218 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!219 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!220 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!221 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!222 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !223, line: 76, baseType: !32, size: 32, elements: !224)
!223 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = !{!225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342}
!225 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!226 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!227 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!228 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!229 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!230 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!231 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!232 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!233 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!234 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!235 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!236 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!237 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!238 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!239 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!240 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!241 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!242 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!243 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!244 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!245 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!246 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!247 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!248 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!249 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!250 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!251 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!252 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!253 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!254 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!255 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!256 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!257 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!258 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!259 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!260 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!261 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!262 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!263 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!264 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!265 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!266 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!267 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!268 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!269 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!270 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!271 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!272 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!273 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!274 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!275 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!276 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!277 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!278 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!279 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!280 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!281 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!282 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!283 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!284 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!285 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!286 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!287 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!288 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!289 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!290 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!291 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!292 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!293 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!294 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!295 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!296 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!297 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!298 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!299 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!300 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!301 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!302 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!303 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!304 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!305 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!306 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!307 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!308 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!309 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!310 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!311 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!312 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!313 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!314 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!315 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!316 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!317 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!318 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!319 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!320 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!321 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!322 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!323 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!324 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!325 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!326 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!327 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!328 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!329 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!330 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!331 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!332 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!333 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!334 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!335 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!336 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!337 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!338 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!339 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!340 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!341 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!342 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!343 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !126, line: 237, baseType: !32, size: 32, elements: !344)
!344 = !{!345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377}
!345 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!346 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!347 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!348 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!349 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!350 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!351 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!352 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!353 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!354 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!355 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!356 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!357 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!358 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!359 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!360 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!361 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!362 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!363 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!364 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!365 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!366 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!367 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!368 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!369 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!370 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!371 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!372 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!373 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!374 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!375 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!376 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!377 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!378 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !223, line: 44, baseType: !32, size: 32, elements: !379)
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406}
!380 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!381 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!382 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!383 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!384 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!385 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!386 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!387 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!388 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!389 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!390 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!391 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!392 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!393 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!394 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!395 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!396 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!397 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!398 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!399 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!400 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!401 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!402 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!403 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!404 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!405 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!406 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!407 = !{!408, !483, !526, !539, !415}
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !410, line: 4575, baseType: !411)
!410 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 4532, size: 390144, elements: !412)
!412 = !{!413, !416, !417, !418, !419, !425, !435, !439, !449, !453}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !411, file: !410, line: 4533, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !415)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !411, file: !410, line: 4534, baseType: !414, size: 32, offset: 32)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !411, file: !410, line: 4535, baseType: !414, size: 32, offset: 64)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !411, file: !410, line: 4536, baseType: !414, size: 32, offset: 96)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !411, file: !410, line: 4537, baseType: !420, size: 16256, offset: 128)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 16256, elements: !423)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !422)
!422 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!423 = !{!424}
!424 = !DISubrange(count: 2032)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !411, file: !410, line: 4543, baseType: !426, size: 4224, offset: 16384)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !427, size: 4224, elements: !433)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !411, file: !410, line: 4538, size: 128, elements: !428)
!428 = !{!429, !430, !431, !432}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !427, file: !410, line: 4539, baseType: !414, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !427, file: !410, line: 4540, baseType: !414, size: 32, offset: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !427, file: !410, line: 4541, baseType: !414, size: 32, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !427, file: !410, line: 4542, baseType: !414, size: 32, offset: 96)
!433 = !{!434}
!434 = !DISubrange(count: 33)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !411, file: !410, line: 4544, baseType: !436, size: 110464, offset: 20608)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 110464, elements: !437)
!437 = !{!438}
!438 = !DISubrange(count: 13808)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !411, file: !410, line: 4550, baseType: !440, size: 24448, offset: 131072)
!440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !441, size: 24448, elements: !447)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !411, file: !410, line: 4545, size: 128, elements: !442)
!442 = !{!443, !444, !445, !446}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !441, file: !410, line: 4546, baseType: !414, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !441, file: !410, line: 4547, baseType: !414, size: 32, offset: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !441, file: !410, line: 4548, baseType: !414, size: 32, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !441, file: !410, line: 4549, baseType: !414, size: 32, offset: 96)
!447 = !{!448}
!448 = !DISubrange(count: 191)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !411, file: !410, line: 4551, baseType: !450, size: 106624, offset: 155520)
!450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 106624, elements: !451)
!451 = !{!452}
!452 = !DISubrange(count: 13328)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !411, file: !410, line: 4574, baseType: !454, size: 128000, offset: 262144)
!454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 128000, elements: !481)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !411, file: !410, line: 4552, size: 1024, elements: !456)
!456 = !{!457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !477, !478, !479, !480}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !455, file: !410, line: 4553, baseType: !414, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !455, file: !410, line: 4554, baseType: !414, size: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !455, file: !410, line: 4555, baseType: !414, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !455, file: !410, line: 4556, baseType: !414, size: 32, offset: 96)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !455, file: !410, line: 4557, baseType: !414, size: 32, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !455, file: !410, line: 4558, baseType: !414, size: 32, offset: 160)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !455, file: !410, line: 4559, baseType: !414, size: 32, offset: 192)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !455, file: !410, line: 4560, baseType: !414, size: 32, offset: 224)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !455, file: !410, line: 4561, baseType: !414, size: 32, offset: 256)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !455, file: !410, line: 4562, baseType: !414, size: 32, offset: 288)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !455, file: !410, line: 4563, baseType: !414, size: 32, offset: 320)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !455, file: !410, line: 4564, baseType: !414, size: 32, offset: 352)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !455, file: !410, line: 4565, baseType: !414, size: 32, offset: 384)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !455, file: !410, line: 4566, baseType: !414, size: 32, offset: 416)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !455, file: !410, line: 4567, baseType: !414, size: 32, offset: 448)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !455, file: !410, line: 4568, baseType: !414, size: 32, offset: 480)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !455, file: !410, line: 4569, baseType: !474, size: 384, offset: 512)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 384, elements: !475)
!475 = !{!476}
!476 = !DISubrange(count: 48)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !455, file: !410, line: 4570, baseType: !414, size: 32, offset: 896)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !455, file: !410, line: 4571, baseType: !414, size: 32, offset: 928)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !455, file: !410, line: 4572, baseType: !414, size: 32, offset: 960)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !455, file: !410, line: 4573, baseType: !414, size: 32, offset: 992)
!481 = !{!482}
!482 = !DISubrange(count: 125)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !410, line: 38320, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 38303, size: 23040, elements: !486)
!486 = !{!487, !489, !493, !494, !495, !496, !500, !504, !508, !512, !516}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !485, file: !410, line: 38304, baseType: !488, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !414)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !485, file: !410, line: 38305, baseType: !490, size: 256, offset: 32)
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 256, elements: !491)
!491 = !{!492}
!492 = !DISubrange(count: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !485, file: !410, line: 38306, baseType: !414, size: 32, offset: 288)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !485, file: !410, line: 38307, baseType: !414, size: 32, offset: 320)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !485, file: !410, line: 38308, baseType: !414, size: 32, offset: 352)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !485, file: !410, line: 38309, baseType: !497, size: 3712, offset: 384)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 3712, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 464)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !485, file: !410, line: 38310, baseType: !501, size: 864, offset: 4096)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 864, elements: !502)
!502 = !{!503}
!503 = !DISubrange(count: 27)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !485, file: !410, line: 38311, baseType: !505, size: 3232, offset: 4960)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 3232, elements: !506)
!506 = !{!507}
!507 = !DISubrange(count: 404)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !485, file: !410, line: 38312, baseType: !509, size: 3776, offset: 8192)
!509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 3776, elements: !510)
!510 = !{!511}
!511 = !DISubrange(count: 118)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !485, file: !410, line: 38313, baseType: !513, size: 4416, offset: 11968)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 4416, elements: !514)
!514 = !{!515}
!515 = !DISubrange(count: 552)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !485, file: !410, line: 38319, baseType: !517, size: 6656, offset: 16384)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 6656, elements: !524)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !485, file: !410, line: 38314, size: 128, elements: !519)
!519 = !{!520, !521, !522, !523}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !518, file: !410, line: 38315, baseType: !414, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !518, file: !410, line: 38316, baseType: !414, size: 32, offset: 32)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !518, file: !410, line: 38317, baseType: !414, size: 32, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !518, file: !410, line: 38318, baseType: !414, size: 32, offset: 96)
!524 = !{!525}
!525 = !DISubrange(count: 52)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !410, line: 43319, baseType: !528)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 43313, size: 80, elements: !529)
!529 = !{!530, !534, !535, !537, !538}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !528, file: !410, line: 43314, baseType: !531, size: 16)
!531 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !532)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !533)
!533 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !528, file: !410, line: 43315, baseType: !531, size: 16, offset: 16)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !528, file: !410, line: 43316, baseType: !536, size: 16, offset: 32)
!536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !531)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !528, file: !410, line: 43317, baseType: !531, size: 16, offset: 48)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !528, file: !410, line: 43318, baseType: !531, size: 16, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!540 = !{!120}
!541 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !544, line: 51, size: 64, elements: !545)
!544 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!545 = !{!546, !553}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !543, file: !544, line: 60, baseType: !547, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 32)
!548 = !DISubroutineType(types: !549)
!549 = !{!103, !550}
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !544, line: 48, flags: DIFlagFwdDecl)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !543, file: !544, line: 65, baseType: !550, size: 32, offset: 32)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "console_serial", scope: !556, file: !655, line: 13, type: !664, isLocal: true, isDefinition: true)
!556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !558, globals: !652, splitDebugInlining: false, nameTableKind: None)
!557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!558 = !{!559, !102, !103}
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !561)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !562, line: 336, size: 608, elements: !563)
!562 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!563 = !{!564, !592, !596, !600, !613, !618, !624, !630, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !561, file: !562, line: 365, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = !DISubroutineType(types: !567)
!567 = !{!103, !568, !591}
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !571, line: 378, size: 192, elements: !572)
!571 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !{!573, !575, !576, !577, !584, !585}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !570, file: !571, line: 380, baseType: !574, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !570, file: !571, line: 382, baseType: !13, size: 32, offset: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !570, file: !571, line: 384, baseType: !13, size: 32, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !570, file: !571, line: 386, baseType: !578, size: 32, offset: 96)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 32)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !571, line: 351, size: 16, elements: !580)
!580 = !{!581, !582}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !579, file: !571, line: 359, baseType: !421, size: 8)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !579, file: !571, line: 364, baseType: !583, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!583 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !570, file: !571, line: 388, baseType: !102, size: 32, offset: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !570, file: !571, line: 396, baseType: !586, size: 32, offset: 160)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !588)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !571, line: 43, baseType: !589)
!589 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !590)
!590 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !561, file: !562, line: 366, baseType: !593, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 32)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !568, !422}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !561, file: !562, line: 374, baseType: !597, size: 32, offset: 64)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 32)
!598 = !DISubroutineType(types: !599)
!599 = !{!103, !568}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !561, file: !562, line: 377, baseType: !601, size: 32, offset: 96)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 32)
!602 = !DISubroutineType(types: !603)
!603 = !{!103, !568, !604}
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !606)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !562, line: 122, size: 64, elements: !607)
!607 = !{!608, !609, !610, !611, !612}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !606, file: !562, line: 123, baseType: !415, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !606, file: !562, line: 124, baseType: !421, size: 8, offset: 32)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !606, file: !562, line: 125, baseType: !421, size: 8, offset: 40)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !606, file: !562, line: 126, baseType: !421, size: 8, offset: 48)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !606, file: !562, line: 127, baseType: !421, size: 8, offset: 56)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !561, file: !562, line: 379, baseType: !614, size: 32, offset: 128)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 32)
!615 = !DISubroutineType(types: !616)
!616 = !{!103, !568, !617}
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 32)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !561, file: !562, line: 384, baseType: !619, size: 32, offset: 160)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 32)
!620 = !DISubroutineType(types: !621)
!621 = !{!103, !568, !622, !103}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !561, file: !562, line: 393, baseType: !625, size: 32, offset: 192)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = !DISubroutineType(types: !627)
!627 = !{!103, !568, !628, !629}
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !561, file: !562, line: 402, baseType: !631, size: 32, offset: 224)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!632 = !DISubroutineType(types: !633)
!633 = !{null, !568}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !561, file: !562, line: 405, baseType: !631, size: 32, offset: 256)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !561, file: !562, line: 408, baseType: !597, size: 32, offset: 288)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !561, file: !562, line: 411, baseType: !631, size: 32, offset: 320)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !561, file: !562, line: 414, baseType: !631, size: 32, offset: 352)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !561, file: !562, line: 417, baseType: !597, size: 32, offset: 384)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !561, file: !562, line: 420, baseType: !597, size: 32, offset: 416)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !561, file: !562, line: 423, baseType: !631, size: 32, offset: 448)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !561, file: !562, line: 426, baseType: !631, size: 32, offset: 480)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !561, file: !562, line: 429, baseType: !597, size: 32, offset: 512)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !561, file: !562, line: 432, baseType: !597, size: 32, offset: 544)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !561, file: !562, line: 435, baseType: !645, size: 32, offset: 576)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 32)
!646 = !DISubroutineType(types: !647)
!647 = !{null, !568, !648, !102}
!648 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !562, line: 142, baseType: !649)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 32)
!650 = !DISubroutineType(types: !651)
!651 = !{null, !568, !102}
!652 = !{!554, !653, !659}
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !556, file: !655, line: 15, type: !656, isLocal: true, isDefinition: true)
!655 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 512, elements: !657)
!657 = !{!658}
!658 = !DISubrange(count: 64)
!659 = !DIGlobalVariableExpression(var: !660, expr: !DIExpression())
!660 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !556, file: !655, line: 16, type: !661, isLocal: true, isDefinition: true)
!661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 4096, elements: !662)
!662 = !{!663}
!663 = !DISubrange(count: 512)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !665, line: 18, size: 544, elements: !666)
!665 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!666 = !{!667, !668, !695, !696, !697, !698, !699, !701, !702, !703, !704, !705, !706}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !664, file: !665, line: 19, baseType: !568, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !664, file: !665, line: 21, baseType: !669, size: 128, offset: 32)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !670, line: 2909, size: 128, elements: !671)
!670 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!671 = !{!672, !693, !694}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !669, file: !670, line: 2910, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !675)
!674 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !676)
!676 = !{!677}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !675, file: !674, line: 232, baseType: !678, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !680)
!679 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !681)
!681 = !{!682, !688}
!682 = !DIDerivedType(tag: DW_TAG_member, scope: !680, file: !679, line: 38, baseType: !683, size: 32)
!683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !680, file: !679, line: 38, size: 32, elements: !684)
!684 = !{!685, !687}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !683, file: !679, line: 39, baseType: !686, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !683, file: !679, line: 40, baseType: !686, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, scope: !680, file: !679, line: 42, baseType: !689, size: 32, offset: 32)
!689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !680, file: !679, line: 42, size: 32, elements: !690)
!690 = !{!691, !692}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !689, file: !679, line: 43, baseType: !686, size: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !689, file: !679, line: 44, baseType: !686, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !669, file: !670, line: 2911, baseType: !32, size: 32, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !669, file: !670, line: 2912, baseType: !32, size: 32, offset: 96)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !664, file: !665, line: 22, baseType: !628, size: 32, offset: 160)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !664, file: !665, line: 23, baseType: !415, size: 32, offset: 192)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !664, file: !665, line: 24, baseType: !532, size: 16, offset: 224)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !664, file: !665, line: 24, baseType: !532, size: 16, offset: 240)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !664, file: !665, line: 25, baseType: !700, size: 32, offset: 256)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !664, file: !665, line: 27, baseType: !669, size: 128, offset: 288)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !664, file: !665, line: 28, baseType: !628, size: 32, offset: 416)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !664, file: !665, line: 29, baseType: !415, size: 32, offset: 448)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !664, file: !665, line: 30, baseType: !532, size: 16, offset: 480)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !664, file: !665, line: 30, baseType: !532, size: 16, offset: 496)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !664, file: !665, line: 31, baseType: !700, size: 32, offset: 512)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !709, file: !716, line: 21, type: !117, isLocal: true, isDefinition: true)
!709 = distinct !DICompileUnit(language: DW_LANG_C99, file: !710, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !711, globals: !715, splitDebugInlining: false, nameTableKind: None)
!710 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!711 = !{!712, !103, !102}
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !714, line: 22, baseType: !103)
!714 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!715 = !{!707}
!716 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !719, file: !723, line: 43, type: !917, isLocal: true, isDefinition: true)
!719 = distinct !DICompileUnit(language: DW_LANG_C99, file: !720, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !721, retainedTypes: !730, globals: !810, splitDebugInlining: false, nameTableKind: None)
!720 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!721 = !{!30, !722}
!722 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !723, line: 214, baseType: !32, size: 32, elements: !724)
!723 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!724 = !{!725, !726, !727, !728, !729}
!725 = !DIEnumerator(name: "ESC_ESC", value: 0)
!726 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!727 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!728 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!729 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!730 = !{!102, !103, !731, !32, !24}
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !562, line: 336, size: 608, elements: !734)
!734 = !{!735, !754, !758, !762, !775, !780, !784, !788, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !733, file: !562, line: 365, baseType: !736, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 32)
!737 = !DISubroutineType(types: !738)
!738 = !{!103, !739, !591}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !571, line: 378, size: 192, elements: !742)
!742 = !{!743, !744, !745, !746, !752, !753}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !741, file: !571, line: 380, baseType: !574, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !741, file: !571, line: 382, baseType: !13, size: 32, offset: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !741, file: !571, line: 384, baseType: !13, size: 32, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !741, file: !571, line: 386, baseType: !747, size: 32, offset: 96)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !571, line: 351, size: 16, elements: !749)
!749 = !{!750, !751}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !748, file: !571, line: 359, baseType: !421, size: 8)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !748, file: !571, line: 364, baseType: !583, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !741, file: !571, line: 388, baseType: !102, size: 32, offset: 128)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !741, file: !571, line: 396, baseType: !586, size: 32, offset: 160)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !733, file: !562, line: 366, baseType: !755, size: 32, offset: 32)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 32)
!756 = !DISubroutineType(types: !757)
!757 = !{null, !739, !422}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !733, file: !562, line: 374, baseType: !759, size: 32, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 32)
!760 = !DISubroutineType(types: !761)
!761 = !{!103, !739}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !733, file: !562, line: 377, baseType: !763, size: 32, offset: 96)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!764 = !DISubroutineType(types: !765)
!765 = !{!103, !739, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 32)
!767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !768)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !562, line: 122, size: 64, elements: !769)
!769 = !{!770, !771, !772, !773, !774}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !768, file: !562, line: 123, baseType: !415, size: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !768, file: !562, line: 124, baseType: !421, size: 8, offset: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !768, file: !562, line: 125, baseType: !421, size: 8, offset: 40)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !768, file: !562, line: 126, baseType: !421, size: 8, offset: 48)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !768, file: !562, line: 127, baseType: !421, size: 8, offset: 56)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !733, file: !562, line: 379, baseType: !776, size: 32, offset: 128)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 32)
!777 = !DISubroutineType(types: !778)
!778 = !{!103, !739, !779}
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !733, file: !562, line: 384, baseType: !781, size: 32, offset: 160)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 32)
!782 = !DISubroutineType(types: !783)
!783 = !{!103, !739, !622, !103}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !733, file: !562, line: 393, baseType: !785, size: 32, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = !DISubroutineType(types: !787)
!787 = !{!103, !739, !628, !629}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !733, file: !562, line: 402, baseType: !789, size: 32, offset: 224)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 32)
!790 = !DISubroutineType(types: !791)
!791 = !{null, !739}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !733, file: !562, line: 405, baseType: !789, size: 32, offset: 256)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !733, file: !562, line: 408, baseType: !759, size: 32, offset: 288)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !733, file: !562, line: 411, baseType: !789, size: 32, offset: 320)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !733, file: !562, line: 414, baseType: !789, size: 32, offset: 352)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !733, file: !562, line: 417, baseType: !759, size: 32, offset: 384)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !733, file: !562, line: 420, baseType: !759, size: 32, offset: 416)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !733, file: !562, line: 423, baseType: !789, size: 32, offset: 448)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !733, file: !562, line: 426, baseType: !789, size: 32, offset: 480)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !733, file: !562, line: 429, baseType: !759, size: 32, offset: 512)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !733, file: !562, line: 432, baseType: !759, size: 32, offset: 544)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !733, file: !562, line: 435, baseType: !803, size: 32, offset: 576)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 32)
!804 = !DISubroutineType(types: !805)
!805 = !{null, !739, !806, !102}
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !562, line: 142, baseType: !807)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = !DISubroutineType(types: !809)
!809 = !{null, !739, !102}
!810 = !{!811, !717, !818, !862, !864, !870, !877, !880, !905, !909, !911, !913, !915}
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !719, file: !723, line: 603, type: !813, isLocal: true, isDefinition: true, align: 32)
!813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !814)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !544, line: 51, size: 64, elements: !815)
!815 = !{!816, !817}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !814, file: !544, line: 60, baseType: !759, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !814, file: !544, line: 65, baseType: !739, size: 32, offset: 32)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "avail_queue", scope: !719, file: !723, line: 108, type: !820, isLocal: true, isDefinition: true)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !670, line: 2208, size: 128, elements: !822)
!822 = !{!823}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !821, file: !670, line: 2209, baseType: !824, size: 128)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !670, line: 1709, size: 128, elements: !825)
!825 = !{!826, !839, !843}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !824, file: !670, line: 1710, baseType: !827, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !828, line: 46, baseType: !829)
!828 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !828, line: 41, size: 64, elements: !830)
!830 = !{!831, !838}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !829, file: !828, line: 42, baseType: !832, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !828, line: 39, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !828, line: 35, size: 32, elements: !835)
!835 = !{!836}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !834, file: !828, line: 36, baseType: !837, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !828, line: 32, baseType: !415)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !829, file: !828, line: 43, baseType: !832, size: 32, offset: 32)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !824, file: !670, line: 1711, baseType: !840, offset: 64)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!841 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!842 = !{}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !824, file: !670, line: 1712, baseType: !844, size: 64, offset: 64)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !846)
!846 = !{!847}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !845, file: !674, line: 232, baseType: !848, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !850)
!850 = !{!851, !857}
!851 = !DIDerivedType(tag: DW_TAG_member, scope: !849, file: !679, line: 38, baseType: !852, size: 32)
!852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !849, file: !679, line: 38, size: 32, elements: !853)
!853 = !{!854, !856}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !852, file: !679, line: 39, baseType: !855, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !852, file: !679, line: 40, baseType: !855, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, scope: !849, file: !679, line: 42, baseType: !858, size: 32, offset: 32)
!858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !849, file: !679, line: 42, size: 32, elements: !859)
!859 = !{!860, !861}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !858, file: !679, line: 43, baseType: !855, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !858, file: !679, line: 44, baseType: !855, size: 32)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "lines_queue", scope: !719, file: !723, line: 109, type: !820, isLocal: true, isDefinition: true)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "completion_cb", scope: !719, file: !723, line: 110, type: !866, isLocal: true, isDefinition: true)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!867 = !DISubroutineType(types: !868)
!868 = !{!421, !869, !421}
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !719, file: !723, line: 54, type: !872, isLocal: true, isDefinition: true)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !874, line: 40, baseType: !875)
!874 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!875 = !DISubroutineType(types: !876)
!876 = !{!103, !108}
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !719, file: !723, line: 38, type: !879, isLocal: true, isDefinition: true)
!879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !739)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "cmd", scope: !882, file: !723, line: 435, type: !893, isLocal: true, isDefinition: true)
!882 = distinct !DISubprogram(name: "uart_console_isr", scope: !723, file: !723, line: 428, type: !808, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !883)
!883 = !{!884, !885, !886, !888, !889}
!884 = !DILocalVariable(name: "unused", arg: 1, scope: !882, file: !723, line: 428, type: !739)
!885 = !DILocalVariable(name: "user_data", arg: 2, scope: !882, file: !723, line: 428, type: !102)
!886 = !DILocalVariable(name: "byte", scope: !887, file: !723, line: 436, type: !421)
!887 = distinct !DILexicalBlock(scope: !882, file: !723, line: 434, column: 48)
!888 = !DILocalVariable(name: "rx", scope: !887, file: !723, line: 437, type: !103)
!889 = !DILocalVariable(name: "ret", scope: !890, file: !723, line: 461, type: !102)
!890 = distinct !DILexicalBlock(scope: !891, file: !723, line: 461, column: 10)
!891 = distinct !DILexicalBlock(scope: !892, file: !723, line: 460, column: 13)
!892 = distinct !DILexicalBlock(scope: !887, file: !723, line: 460, column: 7)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !895, line: 21, size: 1088, elements: !896)
!895 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!896 = !{!897, !900, !901}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !894, file: !895, line: 23, baseType: !898, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !899)
!899 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !894, file: !895, line: 25, baseType: !421, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !894, file: !895, line: 27, baseType: !902, size: 1024, offset: 40)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1024, elements: !903)
!903 = !{!904}
!904 = !DISubrange(count: 128)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "esc_state", scope: !719, file: !723, line: 228, type: !907, isLocal: true, isDefinition: true)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !908, line: 22, baseType: !899)
!908 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "ansi_val", scope: !719, file: !723, line: 229, type: !32, isLocal: true, isDefinition: true)
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!912 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !719, file: !723, line: 229, type: !32, isLocal: true, isDefinition: true)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "cur", scope: !719, file: !723, line: 230, type: !421, isLocal: true, isDefinition: true)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "end", scope: !719, file: !723, line: 230, type: !421, isLocal: true, isDefinition: true)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !874, line: 45, baseType: !918)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 32)
!919 = !DISubroutineType(types: !920)
!920 = !{!103, !421}
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !923, file: !1027, line: 318, type: !1103, isLocal: false, isDefinition: true)
!923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !925, retainedTypes: !942, globals: !1024, splitDebugInlining: false, nameTableKind: None)
!924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!925 = !{!926, !932, !937}
!926 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !927, line: 506, baseType: !32, size: 32, elements: !928)
!927 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!928 = !{!929, !930, !931}
!929 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!930 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!931 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!932 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !927, line: 512, baseType: !32, size: 32, elements: !933)
!933 = !{!934, !935, !936}
!934 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!935 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!936 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !938, line: 66, baseType: !32, size: 32, elements: !939)
!938 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!939 = !{!940, !941}
!940 = !DIEnumerator(name: "gpioPinClear", value: 0)
!941 = !DIEnumerator(name: "gpioPinSet", value: 1)
!942 = !{!943, !1013, !1018, !978, !932, !926, !1023, !102, !539, !993, !869}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !927, line: 523, size: 288, elements: !946)
!946 = !{!947, !968, !974, !979, !983, !984, !985, !989, !1009}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !945, file: !927, line: 524, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!949 = !DISubroutineType(types: !950)
!950 = !{!103, !951, !966, !967}
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !571, line: 378, size: 192, elements: !954)
!954 = !{!955, !956, !957, !958, !964, !965}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !953, file: !571, line: 380, baseType: !574, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !953, file: !571, line: 382, baseType: !13, size: 32, offset: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !953, file: !571, line: 384, baseType: !13, size: 32, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !953, file: !571, line: 386, baseType: !959, size: 32, offset: 96)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !571, line: 351, size: 16, elements: !961)
!961 = !{!962, !963}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !960, file: !571, line: 359, baseType: !421, size: 8)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !960, file: !571, line: 364, baseType: !583, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !953, file: !571, line: 388, baseType: !102, size: 32, offset: 128)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !953, file: !571, line: 396, baseType: !586, size: 32, offset: 160)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !927, line: 237, baseType: !421)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !927, line: 257, baseType: !415)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !945, file: !927, line: 530, baseType: !969, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DISubroutineType(types: !971)
!971 = !{!103, !951, !972}
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !927, line: 229, baseType: !415)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !945, file: !927, line: 532, baseType: !975, size: 32, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{!103, !951, !978, !973}
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !927, line: 216, baseType: !415)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !945, file: !927, line: 535, baseType: !980, size: 32, offset: 96)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DISubroutineType(types: !982)
!982 = !{!103, !951, !978}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !945, file: !927, line: 537, baseType: !980, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !945, file: !927, line: 539, baseType: !980, size: 32, offset: 160)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !945, file: !927, line: 541, baseType: !986, size: 32, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DISubroutineType(types: !988)
!988 = !{!103, !951, !966, !926, !932}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !945, file: !927, line: 544, baseType: !990, size: 32, offset: 224)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!103, !951, !993, !583}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !927, line: 478, size: 96, elements: !995)
!995 = !{!996, !1003, !1008}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !994, file: !927, line: 482, baseType: !997, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !998, line: 33, baseType: !999)
!998 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !998, line: 29, size: 32, elements: !1000)
!1000 = !{!1001}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !999, file: !998, line: 30, baseType: !1002, size: 32)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !994, file: !927, line: 485, baseType: !1004, size: 32, offset: 32)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !927, line: 464, baseType: !1005)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !951, !993, !978}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !994, file: !927, line: 493, baseType: !978, size: 32, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !945, file: !927, line: 547, baseType: !1010, size: 32, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!415, !951}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !927, line: 428, size: 32, elements: !1016)
!1016 = !{!1017}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1015, file: !927, line: 434, baseType: !978, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !927, line: 441, size: 32, elements: !1021)
!1021 = !{!1022}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1020, file: !927, line: 447, baseType: !978, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1024 = !{!921, !1025, !1031, !1033, !1043, !1055, !1057, !1088, !1090, !1101}
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !923, file: !1027, line: 318, type: !1028, isLocal: false, isDefinition: true, align: 16)
!1027 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !587, size: 400, elements: !1029)
!1029 = !{!1030}
!1030 = !DISubrange(count: 25)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !923, file: !1027, line: 318, type: !952, isLocal: false, isDefinition: true, align: 32)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !923, file: !1027, line: 318, type: !1035, isLocal: true, isDefinition: true, align: 32)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !544, line: 51, size: 64, elements: !1037)
!1037 = !{!1038, !1042}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1036, file: !544, line: 60, baseType: !1039, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!103, !951}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1036, file: !544, line: 65, baseType: !951, size: 32, offset: 32)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !923, file: !1027, line: 318, type: !1045, isLocal: true, isDefinition: true)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1027, line: 33, size: 96, elements: !1046)
!1046 = !{!1047, !1048}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1045, file: !1027, line: 35, baseType: !1020, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1045, file: !1027, line: 37, baseType: !1049, size: 64, offset: 32)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !998, line: 40, baseType: !1050)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !998, line: 35, size: 64, elements: !1051)
!1051 = !{!1052, !1054}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1050, file: !998, line: 36, baseType: !1053, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1050, file: !998, line: 37, baseType: !1053, size: 32, offset: 32)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !923, file: !1027, line: 318, type: !960, isLocal: true, isDefinition: true, align: 8)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !923, file: !1027, line: 318, type: !1059, isLocal: true, isDefinition: true)
!1059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1027, line: 23, size: 128, elements: !1061)
!1061 = !{!1062, !1063, !1076, !1087}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1060, file: !1027, line: 25, baseType: !1015, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1060, file: !1027, line: 26, baseType: !1064, size: 32, offset: 32)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !410, line: 19729, baseType: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 19720, size: 256, elements: !1067)
!1067 = !{!1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1066, file: !410, line: 19721, baseType: !414, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1066, file: !410, line: 19722, baseType: !414, size: 32, offset: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1066, file: !410, line: 19723, baseType: !488, size: 32, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1066, file: !410, line: 19724, baseType: !414, size: 32, offset: 96)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1066, file: !410, line: 19725, baseType: !414, size: 32, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1066, file: !410, line: 19726, baseType: !414, size: 32, offset: 160)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1066, file: !410, line: 19727, baseType: !414, size: 32, offset: 192)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1066, file: !410, line: 19728, baseType: !414, size: 32, offset: 224)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1060, file: !1027, line: 28, baseType: !1077, size: 32, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1080, line: 51, size: 128, elements: !1081)
!1080 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1081 = !{!1082, !1083, !1084, !1085, !1086}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1079, file: !1080, line: 52, baseType: !415, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1079, file: !1080, line: 53, baseType: !415, size: 32, offset: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1079, file: !1080, line: 54, baseType: !415, size: 32, offset: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1079, file: !1080, line: 55, baseType: !421, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1079, file: !1080, line: 56, baseType: !415, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1060, file: !1027, line: 29, baseType: !421, size: 8, offset: 96)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !923, file: !1027, line: 249, type: !944, isLocal: true, isDefinition: true)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1092, file: !1027, line: 318, type: !1095, isLocal: true, isDefinition: true, align: 32)
!1092 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1027, file: !1027, line: 318, type: !1040, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !1093)
!1093 = !{!1094}
!1094 = !DILocalVariable(name: "port", arg: 1, scope: !1092, file: !1027, line: 318, type: !951)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1095, file: !10, line: 55, baseType: !700, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1095, file: !10, line: 57, baseType: !700, size: 32, offset: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1095, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1095, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1092, file: !1027, line: 318, type: !1095, isLocal: true, isDefinition: true, align: 32)
!1103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 2048, elements: !1104)
!1104 = !{!1105}
!1105 = !DISubrange(count: 16)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1108, file: !1113, line: 7, type: !1114, isLocal: false, isDefinition: true, align: 16)
!1108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1109, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1110, splitDebugInlining: false, nameTableKind: None)
!1109 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!1110 = !{!1106, !1111}
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1108, file: !1113, line: 12, type: !1114, isLocal: false, isDefinition: true, align: 16)
!1113 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!1114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !587, size: 48, elements: !1115)
!1115 = !{!1116}
!1116 = !DISubrange(count: 3)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1119, file: !1316, line: 339, type: !1314, isLocal: true, isDefinition: true)
!1119 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1120, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1121, retainedTypes: !1207, globals: !1352, splitDebugInlining: false, nameTableKind: None)
!1120 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!1121 = !{!30, !1122, !1160, !1188, !1192, !1196, !1201}
!1122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1123, line: 122, baseType: !32, size: 32, elements: !1124)
!1123 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1124 = !{!1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159}
!1125 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1126 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1127 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1128 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1129 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1130 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1131 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1132 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1133 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1134 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1135 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1136 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1137 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1138 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1139 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1140 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1141 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1142 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1143 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1144 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1145 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1146 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1147 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1148 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1149 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1150 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1151 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1152 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1153 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1154 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1155 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1156 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1157 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1158 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1159 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1123, line: 91, baseType: !32, size: 32, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187}
!1162 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1163 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1164 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1165 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1166 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1167 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1168 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1169 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1170 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1171 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1172 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1173 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1174 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1175 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1176 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1177 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1178 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1179 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1180 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1181 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1182 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1183 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1184 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1185 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1186 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1187 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1123, line: 60, baseType: !32, size: 32, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1191 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1192 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1123, line: 67, baseType: !32, size: 32, elements: !1193)
!1193 = !{!1194, !1195}
!1194 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1195 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1123, line: 74, baseType: !32, size: 32, elements: !1197)
!1197 = !{!1198, !1199, !1200}
!1198 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1199 = !DIEnumerator(name: "uartParityEven", value: 256)
!1200 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1123, line: 82, baseType: !32, size: 32, elements: !1202)
!1202 = !{!1203, !1204, !1205, !1206}
!1203 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1204 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1205 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1206 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1207 = !{!102, !103, !1208, !1287, !1313, !1351, !415, !583, !421}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !562, line: 336, size: 608, elements: !1211)
!1211 = !{!1212, !1231, !1235, !1239, !1252, !1257, !1261, !1265, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1210, file: !562, line: 365, baseType: !1213, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!103, !1216, !591}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !571, line: 378, size: 192, elements: !1219)
!1219 = !{!1220, !1221, !1222, !1223, !1229, !1230}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1218, file: !571, line: 380, baseType: !574, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1218, file: !571, line: 382, baseType: !13, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1218, file: !571, line: 384, baseType: !13, size: 32, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1218, file: !571, line: 386, baseType: !1224, size: 32, offset: 96)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !571, line: 351, size: 16, elements: !1226)
!1226 = !{!1227, !1228}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1225, file: !571, line: 359, baseType: !421, size: 8)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1225, file: !571, line: 364, baseType: !583, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1218, file: !571, line: 388, baseType: !102, size: 32, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1218, file: !571, line: 396, baseType: !586, size: 32, offset: 160)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1210, file: !562, line: 366, baseType: !1232, size: 32, offset: 32)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{null, !1216, !422}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1210, file: !562, line: 374, baseType: !1236, size: 32, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!103, !1216}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1210, file: !562, line: 377, baseType: !1240, size: 32, offset: 96)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!103, !1216, !1243}
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !562, line: 122, size: 64, elements: !1246)
!1246 = !{!1247, !1248, !1249, !1250, !1251}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1245, file: !562, line: 123, baseType: !415, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1245, file: !562, line: 124, baseType: !421, size: 8, offset: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1245, file: !562, line: 125, baseType: !421, size: 8, offset: 40)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1245, file: !562, line: 126, baseType: !421, size: 8, offset: 48)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1245, file: !562, line: 127, baseType: !421, size: 8, offset: 56)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1210, file: !562, line: 379, baseType: !1253, size: 32, offset: 128)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!103, !1216, !1256}
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1210, file: !562, line: 384, baseType: !1258, size: 32, offset: 160)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!103, !1216, !622, !103}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1210, file: !562, line: 393, baseType: !1262, size: 32, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!103, !1216, !628, !629}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1210, file: !562, line: 402, baseType: !1266, size: 32, offset: 224)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{null, !1216}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1210, file: !562, line: 405, baseType: !1266, size: 32, offset: 256)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1210, file: !562, line: 408, baseType: !1236, size: 32, offset: 288)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1210, file: !562, line: 411, baseType: !1266, size: 32, offset: 320)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1210, file: !562, line: 414, baseType: !1266, size: 32, offset: 352)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1210, file: !562, line: 417, baseType: !1236, size: 32, offset: 384)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1210, file: !562, line: 420, baseType: !1236, size: 32, offset: 416)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1210, file: !562, line: 423, baseType: !1266, size: 32, offset: 448)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1210, file: !562, line: 426, baseType: !1266, size: 32, offset: 480)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1210, file: !562, line: 429, baseType: !1236, size: 32, offset: 512)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1210, file: !562, line: 432, baseType: !1236, size: 32, offset: 544)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1210, file: !562, line: 435, baseType: !1280, size: 32, offset: 576)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{null, !1216, !1283, !102}
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !562, line: 142, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{null, !1216, !102}
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !410, line: 41342, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 41322, size: 1504, elements: !1290)
!1290 = !{!1291, !1292, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1289, file: !410, line: 41323, baseType: !488, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1289, file: !410, line: 41324, baseType: !1293, size: 480, offset: 32)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 480, elements: !1294)
!1294 = !{!1295}
!1295 = !DISubrange(count: 60)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1289, file: !410, line: 41325, baseType: !414, size: 32, offset: 512)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1289, file: !410, line: 41326, baseType: !1293, size: 480, offset: 544)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1289, file: !410, line: 41327, baseType: !414, size: 32, offset: 1024)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1289, file: !410, line: 41328, baseType: !414, size: 32, offset: 1056)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1289, file: !410, line: 41329, baseType: !414, size: 32, offset: 1088)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1289, file: !410, line: 41330, baseType: !414, size: 32, offset: 1120)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1289, file: !410, line: 41331, baseType: !414, size: 32, offset: 1152)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1289, file: !410, line: 41332, baseType: !414, size: 32, offset: 1184)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1289, file: !410, line: 41333, baseType: !414, size: 32, offset: 1216)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1289, file: !410, line: 41334, baseType: !414, size: 32, offset: 1248)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1289, file: !410, line: 41335, baseType: !414, size: 32, offset: 1280)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1289, file: !410, line: 41336, baseType: !414, size: 32, offset: 1312)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1289, file: !410, line: 41337, baseType: !414, size: 32, offset: 1344)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1289, file: !410, line: 41338, baseType: !488, size: 32, offset: 1376)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1289, file: !410, line: 41339, baseType: !414, size: 32, offset: 1408)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1289, file: !410, line: 41340, baseType: !414, size: 32, offset: 1440)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1289, file: !410, line: 41341, baseType: !414, size: 32, offset: 1472)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1315)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1316, line: 29, size: 160, elements: !1317)
!1316 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1317 = !{!1318, !1319, !1320, !1321, !1350}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1315, file: !1316, line: 30, baseType: !1287, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1315, file: !1316, line: 31, baseType: !415, size: 32, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1315, file: !1316, line: 32, baseType: !421, size: 8, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1315, file: !1316, line: 33, baseType: !1322, size: 32, offset: 96)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1324)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1325, line: 60, size: 64, elements: !1326)
!1325 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1326 = !{!1327, !1349}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1324, file: !1325, line: 69, baseType: !1328, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1325, line: 50, size: 64, elements: !1331)
!1331 = !{!1332, !1347, !1348}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1330, file: !1325, line: 52, baseType: !1333, size: 32)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1335)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1080, line: 64, baseType: !1336)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1080, line: 59, size: 160, elements: !1337)
!1337 = !{!1338, !1346}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1336, file: !1080, line: 60, baseType: !1339, size: 128)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1080, line: 51, size: 128, elements: !1340)
!1340 = !{!1341, !1342, !1343, !1344, !1345}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1339, file: !1080, line: 52, baseType: !415, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1339, file: !1080, line: 53, baseType: !415, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1339, file: !1080, line: 54, baseType: !415, size: 32, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1339, file: !1080, line: 55, baseType: !421, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1339, file: !1080, line: 56, baseType: !415, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1336, file: !1080, line: 61, baseType: !415, size: 32, offset: 128)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1330, file: !1325, line: 54, baseType: !421, size: 8, offset: 32)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1330, file: !1325, line: 56, baseType: !421, size: 8, offset: 40)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1324, file: !1325, line: 71, baseType: !421, size: 8, offset: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1315, file: !1316, line: 35, baseType: !1266, size: 32, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 32)
!1352 = !{!1353, !1358, !1360, !1367, !1373, !1375, !1117, !1377, !1379, !1384, !1389}
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1119, file: !1316, line: 339, type: !1355, isLocal: false, isDefinition: true, align: 16)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !587, size: 96, elements: !1356)
!1356 = !{!1357}
!1357 = !DISubrange(count: 6)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1119, file: !1316, line: 339, type: !1217, isLocal: false, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1119, file: !1316, line: 339, type: !1362, isLocal: true, isDefinition: true, align: 32)
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1363)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !544, line: 51, size: 64, elements: !1364)
!1364 = !{!1365, !1366}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1363, file: !544, line: 60, baseType: !1236, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1363, file: !544, line: 65, baseType: !1216, size: 32, offset: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1119, file: !1316, line: 339, type: !1369, isLocal: true, isDefinition: true)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1316, line: 39, size: 64, elements: !1370)
!1370 = !{!1371, !1372}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1369, file: !1316, line: 41, baseType: !1283, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1369, file: !1316, line: 42, baseType: !102, size: 32, offset: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1119, file: !1316, line: 339, type: !1225, isLocal: true, isDefinition: true, align: 8)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1119, file: !1316, line: 270, type: !1209, isLocal: true, isDefinition: true)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1119, file: !1316, line: 339, type: !1323, isLocal: true, isDefinition: true)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1119, file: !1316, line: 339, type: !1381, isLocal: true, isDefinition: true)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1329, size: 64, elements: !1382)
!1382 = !{!1383}
!1383 = !DISubrange(count: 1)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1119, file: !1316, line: 339, type: !1386, isLocal: true, isDefinition: true)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1334, size: 320, elements: !1387)
!1387 = !{!1388}
!1388 = !DISubrange(count: 2)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1391, file: !1316, line: 339, type: !1394, isLocal: true, isDefinition: true, align: 32)
!1391 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1316, file: !1316, line: 339, type: !1267, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !1392)
!1392 = !{!1393}
!1393 = !DILocalVariable(name: "dev", arg: 1, scope: !1391, file: !1316, line: 339, type: !1216)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1395)
!1395 = !{!1396, !1397, !1398, !1399}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1394, file: !10, line: 55, baseType: !700, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1394, file: !10, line: 57, baseType: !700, size: 32, offset: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1394, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1394, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1402, file: !1631, line: 65, type: !414, isLocal: true, isDefinition: true)
!1402 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1403, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1404, retainedTypes: !1545, globals: !1628, splitDebugInlining: false, nameTableKind: None)
!1403 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!1404 = !{!1405}
!1405 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !410, line: 103, baseType: !103, size: 32, elements: !1406)
!1406 = !{!1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544}
!1407 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1408 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1409 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1410 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1411 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1412 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1413 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1414 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1415 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1416 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1417 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1418 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1419 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1420 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1421 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1422 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1423 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1424 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1425 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1426 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1427 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1428 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1429 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1430 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1431 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1432 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1433 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1434 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1435 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1436 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1437 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1438 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1439 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1440 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1441 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1442 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1443 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1444 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1445 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1446 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1447 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1448 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1449 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1450 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1451 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1452 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1453 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1454 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1455 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1456 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1457 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1458 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1459 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1460 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1461 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1462 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1463 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1464 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1465 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1466 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1467 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1468 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1469 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1470 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1471 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1472 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1473 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1474 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1475 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1476 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1477 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1478 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1479 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1480 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1481 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1482 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1483 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1484 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1485 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1486 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1487 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1488 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1489 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1490 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1491 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1492 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1493 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1494 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1495 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1496 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1497 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1498 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1499 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1500 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1501 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1502 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1503 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1504 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1505 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1506 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1507 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1508 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1509 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1510 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1511 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1512 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1513 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1514 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1515 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1516 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1517 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1518 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1519 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1520 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1521 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1522 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1523 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1524 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1525 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1526 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1527 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1528 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1529 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1530 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1531 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1532 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1533 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1534 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1535 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1536 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1537 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1538 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1539 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1540 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1541 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1542 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1543 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1544 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1545 = !{!1546, !1550, !700, !421, !415, !1559, !1592}
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1547, line: 46, baseType: !1548)
!1547 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !1549)
!1549 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1552, line: 770, baseType: !1553)
!1552 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 764, size: 128, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1553, file: !1552, line: 766, baseType: !414, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1553, file: !1552, line: 767, baseType: !414, size: 32, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1553, file: !1552, line: 768, baseType: !414, size: 32, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1553, file: !1552, line: 769, baseType: !488, size: 32, offset: 96)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1552, line: 426, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 411, size: 28704, elements: !1562)
!1562 = !{!1563, !1567, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1582, !1587, !1591}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1561, file: !1552, line: 413, baseType: !1564, size: 256)
!1564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 256, elements: !1565)
!1565 = !{!1566}
!1566 = !DISubrange(count: 8)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1561, file: !1552, line: 414, baseType: !1568, size: 768, offset: 256)
!1568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 768, elements: !1569)
!1569 = !{!1570}
!1570 = !DISubrange(count: 24)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1561, file: !1552, line: 415, baseType: !1564, size: 256, offset: 1024)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1561, file: !1552, line: 416, baseType: !1568, size: 768, offset: 1280)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1561, file: !1552, line: 417, baseType: !1564, size: 256, offset: 2048)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1561, file: !1552, line: 418, baseType: !1568, size: 768, offset: 2304)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1561, file: !1552, line: 419, baseType: !1564, size: 256, offset: 3072)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1561, file: !1552, line: 420, baseType: !1568, size: 768, offset: 3328)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1561, file: !1552, line: 421, baseType: !1564, size: 256, offset: 4096)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1561, file: !1552, line: 422, baseType: !1579, size: 1792, offset: 4352)
!1579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 1792, elements: !1580)
!1580 = !{!1581}
!1581 = !DISubrange(count: 56)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1561, file: !1552, line: 423, baseType: !1583, size: 1920, offset: 6144)
!1583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1584, size: 1920, elements: !1585)
!1584 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !421)
!1585 = !{!1586}
!1586 = !DISubrange(count: 240)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1561, file: !1552, line: 424, baseType: !1588, size: 20608, offset: 8064)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 20608, elements: !1589)
!1589 = !{!1590}
!1590 = !DISubrange(count: 644)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1561, file: !1552, line: 425, baseType: !414, size: 32, offset: 28672)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1552, line: 468, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 445, size: 1120, elements: !1595)
!1595 = !{!1596, !1597, !1598, !1599, !1600, !1601, !1602, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1615, !1616, !1617, !1621, !1625, !1627}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1594, file: !1552, line: 447, baseType: !488, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1594, file: !1552, line: 448, baseType: !414, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1594, file: !1552, line: 449, baseType: !414, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1594, file: !1552, line: 450, baseType: !414, size: 32, offset: 96)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1594, file: !1552, line: 451, baseType: !414, size: 32, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1594, file: !1552, line: 452, baseType: !414, size: 32, offset: 160)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1594, file: !1552, line: 453, baseType: !1603, size: 96, offset: 192)
!1603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1584, size: 96, elements: !1604)
!1604 = !{!1605}
!1605 = !DISubrange(count: 12)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1594, file: !1552, line: 454, baseType: !414, size: 32, offset: 288)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1594, file: !1552, line: 455, baseType: !414, size: 32, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1594, file: !1552, line: 456, baseType: !414, size: 32, offset: 352)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1594, file: !1552, line: 457, baseType: !414, size: 32, offset: 384)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1594, file: !1552, line: 458, baseType: !414, size: 32, offset: 416)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1594, file: !1552, line: 459, baseType: !414, size: 32, offset: 448)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1594, file: !1552, line: 460, baseType: !414, size: 32, offset: 480)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1594, file: !1552, line: 461, baseType: !1614, size: 64, offset: 512)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 64, elements: !1387)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1594, file: !1552, line: 462, baseType: !488, size: 32, offset: 576)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1594, file: !1552, line: 463, baseType: !488, size: 32, offset: 608)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1594, file: !1552, line: 464, baseType: !1618, size: 128, offset: 640)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 128, elements: !1619)
!1619 = !{!1620}
!1620 = !DISubrange(count: 4)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1594, file: !1552, line: 465, baseType: !1622, size: 160, offset: 768)
!1622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 160, elements: !1623)
!1623 = !{!1624}
!1624 = !DISubrange(count: 5)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1594, file: !1552, line: 466, baseType: !1626, size: 160, offset: 928)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 160, elements: !1623)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1594, file: !1552, line: 467, baseType: !414, size: 32, offset: 1088)
!1628 = !{!1629, !1655, !1658, !1660, !1662, !1400}
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1402, file: !1631, line: 285, type: !1632, isLocal: true, isDefinition: true, align: 32)
!1631 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1633)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !544, line: 51, size: 64, elements: !1634)
!1634 = !{!1635, !1654}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1633, file: !544, line: 60, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{!103, !1639}
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !571, line: 378, size: 192, elements: !1642)
!1642 = !{!1643, !1644, !1645, !1646, !1652, !1653}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1641, file: !571, line: 380, baseType: !574, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1641, file: !571, line: 382, baseType: !13, size: 32, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1641, file: !571, line: 384, baseType: !13, size: 32, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1641, file: !571, line: 386, baseType: !1647, size: 32, offset: 96)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !571, line: 351, size: 16, elements: !1649)
!1649 = !{!1650, !1651}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1648, file: !571, line: 359, baseType: !421, size: 8)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1648, file: !571, line: 364, baseType: !583, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1641, file: !571, line: 388, baseType: !102, size: 32, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1641, file: !571, line: 396, baseType: !586, size: 32, offset: 160)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1633, file: !544, line: 65, baseType: !1639, size: 32, offset: 32)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "lock", scope: !1402, file: !1631, line: 34, type: !1657, isLocal: true, isDefinition: true)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "last_load", scope: !1402, file: !1631, line: 36, type: !415, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1402, file: !1631, line: 48, type: !415, isLocal: true, isDefinition: true)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1402, file: !1631, line: 54, type: !415, isLocal: true, isDefinition: true)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1666, file: !1670, line: 69, type: !1671, isLocal: true, isDefinition: true, align: 32)
!1666 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1667, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1668, globals: !1669, splitDebugInlining: false, nameTableKind: None)
!1667 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!1668 = !{!539, !22}
!1669 = !{!1664}
!1670 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !544, line: 51, size: 64, elements: !1673)
!1673 = !{!1674, !1693}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1672, file: !544, line: 60, baseType: !1675, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!103, !1678}
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !571, line: 378, size: 192, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1691, !1692}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1680, file: !571, line: 380, baseType: !574, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1680, file: !571, line: 382, baseType: !13, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1680, file: !571, line: 384, baseType: !13, size: 32, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1680, file: !571, line: 386, baseType: !1686, size: 32, offset: 96)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !571, line: 351, size: 16, elements: !1688)
!1688 = !{!1689, !1690}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1687, file: !571, line: 359, baseType: !421, size: 8)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1687, file: !571, line: 364, baseType: !583, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1680, file: !571, line: 388, baseType: !102, size: 32, offset: 128)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1680, file: !571, line: 396, baseType: !586, size: 32, offset: 160)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1672, file: !544, line: 65, baseType: !1678, size: 32, offset: 32)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1696, file: !1699, line: 23, type: !629, isLocal: false, isDefinition: true)
!1696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1698, splitDebugInlining: false, nameTableKind: None)
!1697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!1698 = !{!1694}
!1699 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1702, file: !1706, line: 86, type: !1957, isLocal: false, isDefinition: true, align: 64)
!1702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1704, retainedTypes: !1713, globals: !1788, splitDebugInlining: false, nameTableKind: None)
!1703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!1704 = !{!1705, !30, !1405}
!1705 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1706, line: 63, baseType: !32, size: 32, elements: !1707)
!1706 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1707 = !{!1708, !1709, !1710, !1711, !1712}
!1708 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1709 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1710 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1711 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1712 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1713 = !{!1714, !102, !103, !1716, !869, !415, !1746, !700, !421, !1771}
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1715, line: 214, baseType: !32)
!1715 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1719, line: 51, size: 64, elements: !1720)
!1719 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1720 = !{!1721, !1741}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1718, file: !1719, line: 52, baseType: !1722, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1719, line: 38, baseType: !1723)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{!103, !1726, !628, !532}
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !571, line: 378, size: 192, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1739, !1740}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1728, file: !571, line: 380, baseType: !574, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1728, file: !571, line: 382, baseType: !13, size: 32, offset: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1728, file: !571, line: 384, baseType: !13, size: 32, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1728, file: !571, line: 386, baseType: !1734, size: 32, offset: 96)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 32)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !571, line: 351, size: 16, elements: !1736)
!1736 = !{!1737, !1738}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1735, file: !571, line: 359, baseType: !421, size: 8)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1735, file: !571, line: 364, baseType: !583, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1728, file: !571, line: 388, baseType: !102, size: 32, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1728, file: !571, line: 396, baseType: !586, size: 32, offset: 160)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1718, file: !1719, line: 53, baseType: !1742, size: 32, offset: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1719, line: 47, baseType: !1743)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!103, !1726, !628, !532, !415}
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1552, line: 468, baseType: !1748)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 445, size: 1120, elements: !1749)
!1749 = !{!1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1748, file: !1552, line: 447, baseType: !488, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1748, file: !1552, line: 448, baseType: !414, size: 32, offset: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1748, file: !1552, line: 449, baseType: !414, size: 32, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1748, file: !1552, line: 450, baseType: !414, size: 32, offset: 96)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1748, file: !1552, line: 451, baseType: !414, size: 32, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1748, file: !1552, line: 452, baseType: !414, size: 32, offset: 160)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1748, file: !1552, line: 453, baseType: !1603, size: 96, offset: 192)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1748, file: !1552, line: 454, baseType: !414, size: 32, offset: 288)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1748, file: !1552, line: 455, baseType: !414, size: 32, offset: 320)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1748, file: !1552, line: 456, baseType: !414, size: 32, offset: 352)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1748, file: !1552, line: 457, baseType: !414, size: 32, offset: 384)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1748, file: !1552, line: 458, baseType: !414, size: 32, offset: 416)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1748, file: !1552, line: 459, baseType: !414, size: 32, offset: 448)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1748, file: !1552, line: 460, baseType: !414, size: 32, offset: 480)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1748, file: !1552, line: 461, baseType: !1614, size: 64, offset: 512)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1748, file: !1552, line: 462, baseType: !488, size: 32, offset: 576)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1748, file: !1552, line: 463, baseType: !488, size: 32, offset: 608)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1748, file: !1552, line: 464, baseType: !1618, size: 128, offset: 640)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1748, file: !1552, line: 465, baseType: !1622, size: 160, offset: 768)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1748, file: !1552, line: 466, baseType: !1626, size: 160, offset: 928)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1748, file: !1552, line: 467, baseType: !414, size: 32, offset: 1088)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1552, line: 426, baseType: !1773)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 411, size: 28704, elements: !1774)
!1774 = !{!1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1773, file: !1552, line: 413, baseType: !1564, size: 256)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1773, file: !1552, line: 414, baseType: !1568, size: 768, offset: 256)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1773, file: !1552, line: 415, baseType: !1564, size: 256, offset: 1024)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1773, file: !1552, line: 416, baseType: !1568, size: 768, offset: 1280)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1773, file: !1552, line: 417, baseType: !1564, size: 256, offset: 2048)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1773, file: !1552, line: 418, baseType: !1568, size: 768, offset: 2304)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1773, file: !1552, line: 419, baseType: !1564, size: 256, offset: 3072)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1773, file: !1552, line: 420, baseType: !1568, size: 768, offset: 3328)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1773, file: !1552, line: 421, baseType: !1564, size: 256, offset: 4096)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1773, file: !1552, line: 422, baseType: !1579, size: 1792, offset: 4352)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1773, file: !1552, line: 423, baseType: !1583, size: 1920, offset: 6144)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1773, file: !1552, line: 424, baseType: !1588, size: 20608, offset: 8064)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1773, file: !1552, line: 425, baseType: !414, size: 32, offset: 28672)
!1788 = !{!1789, !1913, !1922, !1924, !1700, !1927, !1929, !1934}
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "_kernel", scope: !1702, file: !1706, line: 40, type: !1791, isLocal: false, isDefinition: true)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !674, line: 158, size: 288, elements: !1792)
!1792 = !{!1793, !1908}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1791, file: !674, line: 159, baseType: !1794, size: 192)
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1795, size: 192, elements: !1382)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !674, line: 100, size: 192, elements: !1796)
!1796 = !{!1797, !1798, !1799, !1902, !1903, !1904, !1905}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1795, file: !674, line: 102, baseType: !415, size: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1795, file: !674, line: 105, baseType: !869, size: 32, offset: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1795, file: !674, line: 108, baseType: !1800, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1802, line: 245, size: 896, elements: !1803)
!1802 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1803 = !{!1804, !1865, !1878, !1879, !1880, !1881, !1897}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1801, file: !1802, line: 247, baseType: !1805, size: 384)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1802, line: 57, size: 384, elements: !1806)
!1806 = !{!1807, !1832, !1839, !1840, !1841, !1852, !1853, !1854}
!1807 = !DIDerivedType(tag: DW_TAG_member, scope: !1805, file: !1802, line: 60, baseType: !1808, size: 64)
!1808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1805, file: !1802, line: 60, size: 64, elements: !1809)
!1809 = !{!1810, !1825}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1808, file: !1802, line: 61, baseType: !1811, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !679, line: 49, baseType: !1812)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !1813)
!1813 = !{!1814, !1820}
!1814 = !DIDerivedType(tag: DW_TAG_member, scope: !1812, file: !679, line: 38, baseType: !1815, size: 32)
!1815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1812, file: !679, line: 38, size: 32, elements: !1816)
!1816 = !{!1817, !1819}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1815, file: !679, line: 39, baseType: !1818, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1815, file: !679, line: 40, baseType: !1818, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, scope: !1812, file: !679, line: 42, baseType: !1821, size: 32, offset: 32)
!1821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1812, file: !679, line: 42, size: 32, elements: !1822)
!1822 = !{!1823, !1824}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1821, file: !679, line: 43, baseType: !1818, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1821, file: !679, line: 44, baseType: !1818, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1808, file: !1802, line: 62, baseType: !1826, size: 64)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1827, line: 49, size: 64, elements: !1828)
!1827 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1828 = !{!1829}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1826, file: !1827, line: 50, baseType: !1830, size: 64)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1831, size: 64, elements: !1387)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1805, file: !1802, line: 68, baseType: !1833, size: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !1836)
!1836 = !{!1837}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1835, file: !674, line: 232, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !1812)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1805, file: !1802, line: 71, baseType: !421, size: 8, offset: 96)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1805, file: !1802, line: 74, baseType: !421, size: 8, offset: 104)
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1805, file: !1802, line: 90, baseType: !1842, size: 16, offset: 112)
!1842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1805, file: !1802, line: 90, size: 16, elements: !1843)
!1843 = !{!1844, !1851}
!1844 = !DIDerivedType(tag: DW_TAG_member, scope: !1842, file: !1802, line: 91, baseType: !1845, size: 16)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1842, file: !1802, line: 91, size: 16, elements: !1846)
!1846 = !{!1847, !1850}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1845, file: !1802, line: 96, baseType: !1848, size: 8)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !1849)
!1849 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1845, file: !1802, line: 97, baseType: !421, size: 8, offset: 8)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1842, file: !1802, line: 100, baseType: !532, size: 16)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1805, file: !1802, line: 107, baseType: !415, size: 32, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1805, file: !1802, line: 127, baseType: !102, size: 32, offset: 160)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1805, file: !1802, line: 131, baseType: !1855, size: 192, offset: 192)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !674, line: 244, size: 192, elements: !1856)
!1856 = !{!1857, !1858, !1864}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1855, file: !674, line: 245, baseType: !1811, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1855, file: !674, line: 246, baseType: !1859, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !674, line: 242, baseType: !1860)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{null, !1863}
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1855, file: !674, line: 249, baseType: !1548, size: 64, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1801, file: !1802, line: 250, baseType: !1866, size: 288, offset: 384)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1867, line: 25, size: 288, elements: !1868)
!1867 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1868 = !{!1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1866, file: !1867, line: 26, baseType: !415, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1866, file: !1867, line: 27, baseType: !415, size: 32, offset: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1866, file: !1867, line: 28, baseType: !415, size: 32, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1866, file: !1867, line: 29, baseType: !415, size: 32, offset: 96)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1866, file: !1867, line: 30, baseType: !415, size: 32, offset: 128)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1866, file: !1867, line: 31, baseType: !415, size: 32, offset: 160)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1866, file: !1867, line: 32, baseType: !415, size: 32, offset: 192)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1866, file: !1867, line: 33, baseType: !415, size: 32, offset: 224)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1866, file: !1867, line: 34, baseType: !415, size: 32, offset: 256)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1801, file: !1802, line: 253, baseType: !102, size: 32, offset: 672)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1801, file: !1802, line: 256, baseType: !1834, size: 64, offset: 704)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1801, file: !1802, line: 294, baseType: !103, size: 32, offset: 768)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1801, file: !1802, line: 325, baseType: !1882, size: 32, offset: 800)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !670, line: 5073, size: 160, elements: !1884)
!1884 = !{!1885, !1894, !1895}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1883, file: !670, line: 5074, baseType: !1886, size: 96)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1887, line: 56, size: 96, elements: !1888)
!1887 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1888 = !{!1889, !1892, !1893}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1886, file: !1887, line: 57, baseType: !1890, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1891 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !1887, line: 57, flags: DIFlagFwdDecl)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1886, file: !1887, line: 58, baseType: !102, size: 32, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1886, file: !1887, line: 59, baseType: !1714, size: 32, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1883, file: !670, line: 5075, baseType: !1834, size: 64, offset: 96)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1883, file: !670, line: 5076, baseType: !1896, offset: 160)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1801, file: !1802, line: 343, baseType: !1898, size: 64, offset: 832)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1867, line: 60, size: 64, elements: !1899)
!1899 = !{!1900, !1901}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1898, file: !1867, line: 63, baseType: !415, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1898, file: !1867, line: 66, baseType: !415, size: 32, offset: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1795, file: !674, line: 111, baseType: !1800, size: 32, offset: 96)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1795, file: !674, line: 124, baseType: !103, size: 32, offset: 128)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1795, file: !674, line: 127, baseType: !421, size: 8, offset: 160)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1795, file: !674, line: 153, baseType: !1906, offset: 168)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1907, line: 33, elements: !842)
!1907 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1791, file: !674, line: 170, baseType: !1909, size: 96, offset: 192)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !674, line: 83, size: 96, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1909, file: !674, line: 86, baseType: !1800, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1909, file: !674, line: 90, baseType: !1838, size: 64, offset: 32)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1702, file: !1706, line: 43, type: !1915, isLocal: false, isDefinition: true, align: 64)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 8192, elements: !1920)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1917, line: 47, size: 8, elements: !1918)
!1917 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1918 = !{!1919}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1916, file: !1917, line: 48, baseType: !108, size: 8)
!1920 = !{!1921}
!1921 = !DISubrange(count: 1024)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1702, file: !1706, line: 44, type: !1801, isLocal: false, isDefinition: true)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1702, file: !1706, line: 48, type: !1926, isLocal: false, isDefinition: true)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1801, size: 896, elements: !1382)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1702, file: !1706, line: 217, type: !583, isLocal: false, isDefinition: true)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1702, file: !1706, line: 50, type: !1931, isLocal: true, isDefinition: true, align: 64)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 2560, elements: !1932)
!1932 = !{!1383, !1933}
!1933 = !DISubrange(count: 320)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "levels", scope: !1936, file: !1706, line: 232, type: !1956, isLocal: true, isDefinition: true)
!1936 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1706, file: !1706, line: 230, type: !1937, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !1939)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !1705}
!1939 = !{!1940, !1941, !1951, !1955}
!1940 = !DILocalVariable(name: "level", arg: 1, scope: !1936, file: !1706, line: 230, type: !1705)
!1941 = !DILocalVariable(name: "entry", scope: !1936, file: !1706, line: 244, type: !1942)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1944)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !544, line: 51, size: 64, elements: !1945)
!1945 = !{!1946, !1950}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1944, file: !544, line: 60, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!103, !1726}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1944, file: !544, line: 65, baseType: !1726, size: 32, offset: 32)
!1951 = !DILocalVariable(name: "dev", scope: !1952, file: !1706, line: 247, type: !1726)
!1952 = distinct !DILexicalBlock(scope: !1953, file: !1706, line: 246, column: 64)
!1953 = distinct !DILexicalBlock(scope: !1954, file: !1706, line: 246, column: 2)
!1954 = distinct !DILexicalBlock(scope: !1936, file: !1706, line: 246, column: 2)
!1955 = !DILocalVariable(name: "rc", scope: !1952, file: !1706, line: 248, type: !103)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 192, elements: !1356)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 16384, elements: !1958)
!1958 = !{!1383, !1959}
!1959 = !DISubrange(count: 2048)
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "states_str", scope: !1962, file: !1963, line: 276, type: !2081, isLocal: true, isDefinition: true)
!1962 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1963, file: !1963, line: 271, type: !1964, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !2072)
!1963 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1964 = !DISubroutineType(types: !1965)
!1965 = !{!574, !1966, !869, !1714}
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1802, line: 347, baseType: !1967)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 32)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1802, line: 245, size: 896, elements: !1969)
!1969 = !{!1970, !2028, !2040, !2041, !2042, !2043, !2056}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1968, file: !1802, line: 247, baseType: !1971, size: 384)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1802, line: 57, size: 384, elements: !1972)
!1972 = !{!1973, !1997, !2004, !2005, !2006, !2015, !2016, !2017}
!1973 = !DIDerivedType(tag: DW_TAG_member, scope: !1971, file: !1802, line: 60, baseType: !1974, size: 64)
!1974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1971, file: !1802, line: 60, size: 64, elements: !1975)
!1975 = !{!1976, !1991}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1974, file: !1802, line: 61, baseType: !1977, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !679, line: 49, baseType: !1978)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !1979)
!1979 = !{!1980, !1986}
!1980 = !DIDerivedType(tag: DW_TAG_member, scope: !1978, file: !679, line: 38, baseType: !1981, size: 32)
!1981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1978, file: !679, line: 38, size: 32, elements: !1982)
!1982 = !{!1983, !1985}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1981, file: !679, line: 39, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1981, file: !679, line: 40, baseType: !1984, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, scope: !1978, file: !679, line: 42, baseType: !1987, size: 32, offset: 32)
!1987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1978, file: !679, line: 42, size: 32, elements: !1988)
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1987, file: !679, line: 43, baseType: !1984, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1987, file: !679, line: 44, baseType: !1984, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1974, file: !1802, line: 62, baseType: !1992, size: 64)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1827, line: 49, size: 64, elements: !1993)
!1993 = !{!1994}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1992, file: !1827, line: 50, baseType: !1995, size: 64)
!1995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1996, size: 64, elements: !1387)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1971, file: !1802, line: 68, baseType: !1998, size: 32, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !2001)
!2001 = !{!2002}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2000, file: !674, line: 232, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !1978)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1971, file: !1802, line: 71, baseType: !421, size: 8, offset: 96)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1971, file: !1802, line: 74, baseType: !421, size: 8, offset: 104)
!2006 = !DIDerivedType(tag: DW_TAG_member, scope: !1971, file: !1802, line: 90, baseType: !2007, size: 16, offset: 112)
!2007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1971, file: !1802, line: 90, size: 16, elements: !2008)
!2008 = !{!2009, !2014}
!2009 = !DIDerivedType(tag: DW_TAG_member, scope: !2007, file: !1802, line: 91, baseType: !2010, size: 16)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2007, file: !1802, line: 91, size: 16, elements: !2011)
!2011 = !{!2012, !2013}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2010, file: !1802, line: 96, baseType: !1848, size: 8)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2010, file: !1802, line: 97, baseType: !421, size: 8, offset: 8)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2007, file: !1802, line: 100, baseType: !532, size: 16)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1971, file: !1802, line: 107, baseType: !415, size: 32, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1971, file: !1802, line: 127, baseType: !102, size: 32, offset: 160)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1971, file: !1802, line: 131, baseType: !2018, size: 192, offset: 192)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !674, line: 244, size: 192, elements: !2019)
!2019 = !{!2020, !2021, !2027}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2018, file: !674, line: 245, baseType: !1977, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2018, file: !674, line: 246, baseType: !2022, size: 32, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !674, line: 242, baseType: !2023)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = !DISubroutineType(types: !2025)
!2025 = !{null, !2026}
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2018, file: !674, line: 249, baseType: !1548, size: 64, offset: 128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1968, file: !1802, line: 250, baseType: !2029, size: 288, offset: 384)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1867, line: 25, size: 288, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2029, file: !1867, line: 26, baseType: !415, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2029, file: !1867, line: 27, baseType: !415, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2029, file: !1867, line: 28, baseType: !415, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2029, file: !1867, line: 29, baseType: !415, size: 32, offset: 96)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2029, file: !1867, line: 30, baseType: !415, size: 32, offset: 128)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2029, file: !1867, line: 31, baseType: !415, size: 32, offset: 160)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2029, file: !1867, line: 32, baseType: !415, size: 32, offset: 192)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2029, file: !1867, line: 33, baseType: !415, size: 32, offset: 224)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2029, file: !1867, line: 34, baseType: !415, size: 32, offset: 256)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1968, file: !1802, line: 253, baseType: !102, size: 32, offset: 672)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1968, file: !1802, line: 256, baseType: !1999, size: 64, offset: 704)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1968, file: !1802, line: 294, baseType: !103, size: 32, offset: 768)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1968, file: !1802, line: 325, baseType: !2044, size: 32, offset: 800)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !670, line: 5073, size: 160, elements: !2046)
!2046 = !{!2047, !2053, !2054}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2045, file: !670, line: 5074, baseType: !2048, size: 96)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1887, line: 56, size: 96, elements: !2049)
!2049 = !{!2050, !2051, !2052}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2048, file: !1887, line: 57, baseType: !1890, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2048, file: !1887, line: 58, baseType: !102, size: 32, offset: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2048, file: !1887, line: 59, baseType: !1714, size: 32, offset: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2045, file: !670, line: 5075, baseType: !1999, size: 64, offset: 96)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2045, file: !670, line: 5076, baseType: !2055, offset: 160)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1968, file: !1802, line: 343, baseType: !2057, size: 64, offset: 832)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1867, line: 60, size: 64, elements: !2058)
!2058 = !{!2059, !2060}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2057, file: !1867, line: 63, baseType: !415, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2057, file: !1867, line: 66, baseType: !415, size: 32, offset: 32)
!2061 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2062, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2063, globals: !2067, splitDebugInlining: false, nameTableKind: None)
!2062 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2063 = !{!102, !574, !1546, !421, !103, !2064, !24, !1714, !869, !415, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2066)
!2066 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2067 = !{!1960, !2068}
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "states_sz", scope: !1962, file: !1963, line: 279, type: !2070, isLocal: true, isDefinition: true)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2071, size: 256, elements: !1565)
!2071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1714)
!2072 = !{!2073, !2074, !2075, !2076, !2077, !2078, !2079}
!2073 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1962, file: !1963, line: 271, type: !1966)
!2074 = !DILocalVariable(name: "buf", arg: 2, scope: !1962, file: !1963, line: 271, type: !869)
!2075 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1962, file: !1963, line: 271, type: !1714)
!2076 = !DILocalVariable(name: "off", scope: !1962, file: !1963, line: 273, type: !1714)
!2077 = !DILocalVariable(name: "bit", scope: !1962, file: !1963, line: 274, type: !421)
!2078 = !DILocalVariable(name: "thread_state", scope: !1962, file: !1963, line: 275, type: !421)
!2079 = !DILocalVariable(name: "index", scope: !2080, file: !1963, line: 293, type: !421)
!2080 = distinct !DILexicalBlock(scope: !1962, file: !1963, line: 293, column: 2)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 256, elements: !1565)
!2082 = !DIGlobalVariableExpression(var: !2083, expr: !DIExpression())
!2083 = distinct !DIGlobalVariable(name: "lock", scope: !2084, file: !2103, line: 39, type: !2104, isLocal: true, isDefinition: true)
!2084 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2085, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2086, globals: !2102, splitDebugInlining: false, nameTableKind: None)
!2085 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2086 = !{!102, !583, !103, !2087}
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !679, line: 49, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !2090)
!2090 = !{!2091, !2097}
!2091 = !DIDerivedType(tag: DW_TAG_member, scope: !2089, file: !679, line: 38, baseType: !2092, size: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2089, file: !679, line: 38, size: 32, elements: !2093)
!2093 = !{!2094, !2096}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2092, file: !679, line: 39, baseType: !2095, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2092, file: !679, line: 40, baseType: !2095, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, scope: !2089, file: !679, line: 42, baseType: !2098, size: 32, offset: 32)
!2098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2089, file: !679, line: 42, size: 32, elements: !2099)
!2099 = !{!2100, !2101}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2098, file: !679, line: 43, baseType: !2095, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2098, file: !679, line: 44, baseType: !2095, size: 32)
!2102 = !{!2082}
!2103 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2107, file: !2209, line: 56, type: !2198, isLocal: false, isDefinition: true)
!2107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2108, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2109, globals: !2206, splitDebugInlining: false, nameTableKind: None)
!2108 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2109 = !{!2110, !869, !102, !2204, !628, !1546, !700, !103, !415, !2065, !2205}
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 32)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1802, line: 245, size: 896, elements: !2112)
!2112 = !{!2113, !2171, !2183, !2184, !2185, !2186, !2199}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2111, file: !1802, line: 247, baseType: !2114, size: 384)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1802, line: 57, size: 384, elements: !2115)
!2115 = !{!2116, !2140, !2147, !2148, !2149, !2158, !2159, !2160}
!2116 = !DIDerivedType(tag: DW_TAG_member, scope: !2114, file: !1802, line: 60, baseType: !2117, size: 64)
!2117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2114, file: !1802, line: 60, size: 64, elements: !2118)
!2118 = !{!2119, !2134}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2117, file: !1802, line: 61, baseType: !2120, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !679, line: 49, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !2122)
!2122 = !{!2123, !2129}
!2123 = !DIDerivedType(tag: DW_TAG_member, scope: !2121, file: !679, line: 38, baseType: !2124, size: 32)
!2124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2121, file: !679, line: 38, size: 32, elements: !2125)
!2125 = !{!2126, !2128}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2124, file: !679, line: 39, baseType: !2127, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2124, file: !679, line: 40, baseType: !2127, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, scope: !2121, file: !679, line: 42, baseType: !2130, size: 32, offset: 32)
!2130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2121, file: !679, line: 42, size: 32, elements: !2131)
!2131 = !{!2132, !2133}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2130, file: !679, line: 43, baseType: !2127, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2130, file: !679, line: 44, baseType: !2127, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2117, file: !1802, line: 62, baseType: !2135, size: 64)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1827, line: 49, size: 64, elements: !2136)
!2136 = !{!2137}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2135, file: !1827, line: 50, baseType: !2138, size: 64)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2139, size: 64, elements: !1387)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2114, file: !1802, line: 68, baseType: !2141, size: 32, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !2144)
!2144 = !{!2145}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2143, file: !674, line: 232, baseType: !2146, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !2121)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2114, file: !1802, line: 71, baseType: !421, size: 8, offset: 96)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2114, file: !1802, line: 74, baseType: !421, size: 8, offset: 104)
!2149 = !DIDerivedType(tag: DW_TAG_member, scope: !2114, file: !1802, line: 90, baseType: !2150, size: 16, offset: 112)
!2150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2114, file: !1802, line: 90, size: 16, elements: !2151)
!2151 = !{!2152, !2157}
!2152 = !DIDerivedType(tag: DW_TAG_member, scope: !2150, file: !1802, line: 91, baseType: !2153, size: 16)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2150, file: !1802, line: 91, size: 16, elements: !2154)
!2154 = !{!2155, !2156}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2153, file: !1802, line: 96, baseType: !1848, size: 8)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2153, file: !1802, line: 97, baseType: !421, size: 8, offset: 8)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2150, file: !1802, line: 100, baseType: !532, size: 16)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2114, file: !1802, line: 107, baseType: !415, size: 32, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2114, file: !1802, line: 127, baseType: !102, size: 32, offset: 160)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2114, file: !1802, line: 131, baseType: !2161, size: 192, offset: 192)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !674, line: 244, size: 192, elements: !2162)
!2162 = !{!2163, !2164, !2170}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2161, file: !674, line: 245, baseType: !2120, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2161, file: !674, line: 246, baseType: !2165, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !674, line: 242, baseType: !2166)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 32)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{null, !2169}
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2161, file: !674, line: 249, baseType: !1548, size: 64, offset: 128)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2111, file: !1802, line: 250, baseType: !2172, size: 288, offset: 384)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1867, line: 25, size: 288, elements: !2173)
!2173 = !{!2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2172, file: !1867, line: 26, baseType: !415, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2172, file: !1867, line: 27, baseType: !415, size: 32, offset: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2172, file: !1867, line: 28, baseType: !415, size: 32, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2172, file: !1867, line: 29, baseType: !415, size: 32, offset: 96)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2172, file: !1867, line: 30, baseType: !415, size: 32, offset: 128)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2172, file: !1867, line: 31, baseType: !415, size: 32, offset: 160)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2172, file: !1867, line: 32, baseType: !415, size: 32, offset: 192)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2172, file: !1867, line: 33, baseType: !415, size: 32, offset: 224)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2172, file: !1867, line: 34, baseType: !415, size: 32, offset: 256)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2111, file: !1802, line: 253, baseType: !102, size: 32, offset: 672)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2111, file: !1802, line: 256, baseType: !2142, size: 64, offset: 704)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2111, file: !1802, line: 294, baseType: !103, size: 32, offset: 768)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2111, file: !1802, line: 325, baseType: !2187, size: 32, offset: 800)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !670, line: 5073, size: 160, elements: !2189)
!2189 = !{!2190, !2196, !2197}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2188, file: !670, line: 5074, baseType: !2191, size: 96)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1887, line: 56, size: 96, elements: !2192)
!2192 = !{!2193, !2194, !2195}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2191, file: !1887, line: 57, baseType: !1890, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2191, file: !1887, line: 58, baseType: !102, size: 32, offset: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2191, file: !1887, line: 59, baseType: !1714, size: 32, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2188, file: !670, line: 5075, baseType: !2142, size: 64, offset: 96)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2188, file: !670, line: 5076, baseType: !2198, offset: 160)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2111, file: !1802, line: 343, baseType: !2200, size: 64, offset: 832)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1867, line: 60, size: 64, elements: !2201)
!2201 = !{!2202, !2203}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2200, file: !1867, line: 63, baseType: !415, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2200, file: !1867, line: 66, baseType: !415, size: 32, offset: 32)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!2206 = !{!2105, !2207, !2210, !2212}
!2207 = !DIGlobalVariableExpression(var: !2208, expr: !DIExpression())
!2208 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2107, file: !2209, line: 404, type: !103, isLocal: true, isDefinition: true)
!2209 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2107, file: !2209, line: 405, type: !103, isLocal: true, isDefinition: true)
!2212 = !DIGlobalVariableExpression(var: !2213, expr: !DIExpression())
!2213 = distinct !DIGlobalVariable(name: "pending_current", scope: !2107, file: !2209, line: 425, type: !2110, isLocal: true, isDefinition: true)
!2214 = !DIGlobalVariableExpression(var: !2215, expr: !DIExpression())
!2215 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2216, file: !2246, line: 15, type: !2065, isLocal: true, isDefinition: true)
!2216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2217, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2218, globals: !2243, splitDebugInlining: false, nameTableKind: None)
!2217 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2218 = !{!1546, !102, !700, !415, !2065, !103, !2219, !869, !1548}
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !674, line: 244, size: 192, elements: !2221)
!2221 = !{!2222, !2237, !2242}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2220, file: !674, line: 245, baseType: !2223, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !679, line: 49, baseType: !2224)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !2225)
!2225 = !{!2226, !2232}
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !679, line: 38, baseType: !2227, size: 32)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !679, line: 38, size: 32, elements: !2228)
!2228 = !{!2229, !2231}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2227, file: !679, line: 39, baseType: !2230, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2227, file: !679, line: 40, baseType: !2230, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !679, line: 42, baseType: !2233, size: 32, offset: 32)
!2233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !679, line: 42, size: 32, elements: !2234)
!2234 = !{!2235, !2236}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2233, file: !679, line: 43, baseType: !2230, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2233, file: !679, line: 44, baseType: !2230, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2220, file: !674, line: 246, baseType: !2238, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !674, line: 242, baseType: !2239)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{null, !2219}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2220, file: !674, line: 249, baseType: !1548, size: 64, offset: 128)
!2243 = !{!2214, !2244, !2248, !2250}
!2244 = !DIGlobalVariableExpression(var: !2245, expr: !DIExpression())
!2245 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2216, file: !2246, line: 19, type: !2247, isLocal: true, isDefinition: true)
!2246 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!2248 = !DIGlobalVariableExpression(var: !2249, expr: !DIExpression())
!2249 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2216, file: !2246, line: 25, type: !103, isLocal: true, isDefinition: true)
!2250 = !DIGlobalVariableExpression(var: !2251, expr: !DIExpression())
!2251 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2216, file: !2246, line: 17, type: !2252, isLocal: true, isDefinition: true)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !2224)
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2255, file: !2274, line: 55, type: !2275, isLocal: true, isDefinition: true, align: 32)
!2255 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2256, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2257, globals: !2273, splitDebugInlining: false, nameTableKind: None)
!2256 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2257 = !{!102, !1546, !103, !2258}
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !679, line: 49, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !2261)
!2261 = !{!2262, !2268}
!2262 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !679, line: 38, baseType: !2263, size: 32)
!2263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !679, line: 38, size: 32, elements: !2264)
!2264 = !{!2265, !2267}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2263, file: !679, line: 39, baseType: !2266, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2263, file: !679, line: 40, baseType: !2266, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !679, line: 42, baseType: !2269, size: 32, offset: 32)
!2269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !679, line: 42, size: 32, elements: !2270)
!2270 = !{!2271, !2272}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2269, file: !679, line: 43, baseType: !2266, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2269, file: !679, line: 44, baseType: !2266, size: 32)
!2273 = !{!2253}
!2274 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !544, line: 51, size: 64, elements: !2277)
!2277 = !{!2278, !2279}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2276, file: !544, line: 60, baseType: !547, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2276, file: !544, line: 65, baseType: !550, size: 32, offset: 32)
!2280 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2281, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2281 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2285, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2286, retainedTypes: !2294, splitDebugInlining: false, nameTableKind: None)
!2285 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2286 = !{!30, !2287}
!2287 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2288, line: 54, baseType: !32, size: 32, elements: !2289)
!2288 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2289 = !{!2290, !2291, !2292, !2293}
!2290 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2291 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2292 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2293 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2294 = !{!102, !1714, !628, !24, !2295, !22, !2301, !103, !1351, !2316}
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2288, line: 58, baseType: !2297)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2288, line: 58, size: 64, elements: !2298)
!2298 = !{!2299}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2297, file: !2288, line: 58, baseType: !2300, size: 64)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1565)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 32)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2288, line: 68, size: 128, elements: !2303)
!2303 = !{!2304, !2307, !2308, !2309}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2302, file: !2288, line: 69, baseType: !2305, size: 64)
!2305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2306, size: 64, elements: !1387)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2288, line: 61, baseType: !415)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2302, file: !2288, line: 70, baseType: !2306, size: 32, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2302, file: !2288, line: 71, baseType: !415, size: 32, offset: 96)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2302, file: !2288, line: 77, baseType: !2310, offset: 128)
!2310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2311, elements: !2314)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2288, line: 64, size: 32, elements: !2312)
!2312 = !{!2313}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2311, file: !2288, line: 65, baseType: !2306, size: 32)
!2314 = !{!2315}
!2315 = !DISubrange(count: 0)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!2317 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2318, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2319, retainedTypes: !2339, splitDebugInlining: false, nameTableKind: None)
!2318 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2319 = !{!2320, !2328}
!2320 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2321, line: 69, baseType: !32, size: 32, elements: !2322)
!2321 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2322 = !{!2323, !2324, !2325, !2326, !2327}
!2323 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2324 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2325 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2326 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2327 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2321, line: 56, baseType: !32, size: 32, elements: !2329)
!2329 = !{!2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338}
!2330 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2331 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2332 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2333 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2334 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2335 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2336 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2337 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2338 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2339 = !{!103, !2320, !2328, !2340, !1849, !590, !2342, !2343, !422, !533, !574, !1714, !102, !22, !32, !2345, !2346, !2347, !899, !2348, !1549, !2349, !2341, !2350, !2351, !2352, !2353}
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2321, line: 31, baseType: !2341)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !1549)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !1715, line: 329, baseType: !32)
!2343 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2321, line: 32, baseType: !2344)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2066)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1715, line: 145, baseType: !103)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 32)
!2354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2358, splitDebugInlining: false, nameTableKind: None)
!2357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2358 = !{!421, !102, !103, !2359, !1546, !415, !2065}
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2361)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !562, line: 336, size: 608, elements: !2362)
!2362 = !{!2363, !2382, !2386, !2390, !2403, !2408, !2412, !2416, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2361, file: !562, line: 365, baseType: !2364, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!103, !2367, !591}
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2369)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !571, line: 378, size: 192, elements: !2370)
!2370 = !{!2371, !2372, !2373, !2374, !2380, !2381}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2369, file: !571, line: 380, baseType: !574, size: 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2369, file: !571, line: 382, baseType: !13, size: 32, offset: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2369, file: !571, line: 384, baseType: !13, size: 32, offset: 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2369, file: !571, line: 386, baseType: !2375, size: 32, offset: 96)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !571, line: 351, size: 16, elements: !2377)
!2377 = !{!2378, !2379}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2376, file: !571, line: 359, baseType: !421, size: 8)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2376, file: !571, line: 364, baseType: !583, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2369, file: !571, line: 388, baseType: !102, size: 32, offset: 128)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2369, file: !571, line: 396, baseType: !586, size: 32, offset: 160)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2361, file: !562, line: 366, baseType: !2383, size: 32, offset: 32)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2384 = !DISubroutineType(types: !2385)
!2385 = !{null, !2367, !422}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2361, file: !562, line: 374, baseType: !2387, size: 32, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{!103, !2367}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2361, file: !562, line: 377, baseType: !2391, size: 32, offset: 96)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{!103, !2367, !2394}
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2396)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !562, line: 122, size: 64, elements: !2397)
!2397 = !{!2398, !2399, !2400, !2401, !2402}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2396, file: !562, line: 123, baseType: !415, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2396, file: !562, line: 124, baseType: !421, size: 8, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2396, file: !562, line: 125, baseType: !421, size: 8, offset: 40)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2396, file: !562, line: 126, baseType: !421, size: 8, offset: 48)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2396, file: !562, line: 127, baseType: !421, size: 8, offset: 56)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2361, file: !562, line: 379, baseType: !2404, size: 32, offset: 128)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 32)
!2405 = !DISubroutineType(types: !2406)
!2406 = !{!103, !2367, !2407}
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2361, file: !562, line: 384, baseType: !2409, size: 32, offset: 160)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{!103, !2367, !622, !103}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2361, file: !562, line: 393, baseType: !2413, size: 32, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 32)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!103, !2367, !628, !629}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2361, file: !562, line: 402, baseType: !2417, size: 32, offset: 224)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{null, !2367}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2361, file: !562, line: 405, baseType: !2417, size: 32, offset: 256)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2361, file: !562, line: 408, baseType: !2387, size: 32, offset: 288)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2361, file: !562, line: 411, baseType: !2417, size: 32, offset: 320)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2361, file: !562, line: 414, baseType: !2417, size: 32, offset: 352)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2361, file: !562, line: 417, baseType: !2387, size: 32, offset: 384)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2361, file: !562, line: 420, baseType: !2387, size: 32, offset: 416)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2361, file: !562, line: 423, baseType: !2417, size: 32, offset: 448)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2361, file: !562, line: 426, baseType: !2417, size: 32, offset: 480)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2361, file: !562, line: 429, baseType: !2387, size: 32, offset: 512)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2361, file: !562, line: 432, baseType: !2387, size: 32, offset: 544)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2361, file: !562, line: 435, baseType: !2431, size: 32, offset: 576)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 32)
!2432 = !DISubroutineType(types: !2433)
!2433 = !{null, !2367, !2434, !102}
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !562, line: 142, baseType: !2435)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{null, !2367, !102}
!2438 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2439, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2440, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2439 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2440 = !{!2441, !30}
!2441 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2442, line: 27, baseType: !32, size: 32, elements: !2443)
!2442 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2443 = !{!2444, !2445, !2446, !2447, !2448}
!2444 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2445 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2446 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2447 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2448 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2449 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2450, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2451, retainedTypes: !2452, splitDebugInlining: false, nameTableKind: None)
!2450 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2451 = !{!1405, !2441, !30}
!2452 = !{!2453, !2454, !102, !103, !700, !415, !421, !2471}
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !410, line: 249, baseType: !1405)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1552, line: 426, baseType: !2456)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 411, size: 28704, elements: !2457)
!2457 = !{!2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2456, file: !1552, line: 413, baseType: !1564, size: 256)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2456, file: !1552, line: 414, baseType: !1568, size: 768, offset: 256)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2456, file: !1552, line: 415, baseType: !1564, size: 256, offset: 1024)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2456, file: !1552, line: 416, baseType: !1568, size: 768, offset: 1280)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2456, file: !1552, line: 417, baseType: !1564, size: 256, offset: 2048)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2456, file: !1552, line: 418, baseType: !1568, size: 768, offset: 2304)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2456, file: !1552, line: 419, baseType: !1564, size: 256, offset: 3072)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2456, file: !1552, line: 420, baseType: !1568, size: 768, offset: 3328)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2456, file: !1552, line: 421, baseType: !1564, size: 256, offset: 4096)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2456, file: !1552, line: 422, baseType: !1579, size: 1792, offset: 4352)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2456, file: !1552, line: 423, baseType: !1583, size: 1920, offset: 6144)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2456, file: !1552, line: 424, baseType: !1588, size: 20608, offset: 8064)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2456, file: !1552, line: 425, baseType: !414, size: 32, offset: 28672)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1552, line: 468, baseType: !2473)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 445, size: 1120, elements: !2474)
!2474 = !{!2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2473, file: !1552, line: 447, baseType: !488, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2473, file: !1552, line: 448, baseType: !414, size: 32, offset: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2473, file: !1552, line: 449, baseType: !414, size: 32, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2473, file: !1552, line: 450, baseType: !414, size: 32, offset: 96)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2473, file: !1552, line: 451, baseType: !414, size: 32, offset: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2473, file: !1552, line: 452, baseType: !414, size: 32, offset: 160)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2473, file: !1552, line: 453, baseType: !1603, size: 96, offset: 192)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2473, file: !1552, line: 454, baseType: !414, size: 32, offset: 288)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2473, file: !1552, line: 455, baseType: !414, size: 32, offset: 320)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2473, file: !1552, line: 456, baseType: !414, size: 32, offset: 352)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2473, file: !1552, line: 457, baseType: !414, size: 32, offset: 384)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2473, file: !1552, line: 458, baseType: !414, size: 32, offset: 416)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2473, file: !1552, line: 459, baseType: !414, size: 32, offset: 448)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2473, file: !1552, line: 460, baseType: !414, size: 32, offset: 480)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2473, file: !1552, line: 461, baseType: !1614, size: 64, offset: 512)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2473, file: !1552, line: 462, baseType: !488, size: 32, offset: 576)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2473, file: !1552, line: 463, baseType: !488, size: 32, offset: 608)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2473, file: !1552, line: 464, baseType: !1618, size: 128, offset: 640)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2473, file: !1552, line: 465, baseType: !1622, size: 160, offset: 768)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2473, file: !1552, line: 466, baseType: !1626, size: 160, offset: 928)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2473, file: !1552, line: 467, baseType: !414, size: 32, offset: 1088)
!2496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2498 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2499, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2500, splitDebugInlining: false, nameTableKind: None)
!2499 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2500 = !{!102, !103, !22, !2501}
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1552, line: 468, baseType: !2503)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 445, size: 1120, elements: !2504)
!2504 = !{!2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2503, file: !1552, line: 447, baseType: !488, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2503, file: !1552, line: 448, baseType: !414, size: 32, offset: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2503, file: !1552, line: 449, baseType: !414, size: 32, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2503, file: !1552, line: 450, baseType: !414, size: 32, offset: 96)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2503, file: !1552, line: 451, baseType: !414, size: 32, offset: 128)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2503, file: !1552, line: 452, baseType: !414, size: 32, offset: 160)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2503, file: !1552, line: 453, baseType: !1603, size: 96, offset: 192)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2503, file: !1552, line: 454, baseType: !414, size: 32, offset: 288)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2503, file: !1552, line: 455, baseType: !414, size: 32, offset: 320)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2503, file: !1552, line: 456, baseType: !414, size: 32, offset: 352)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2503, file: !1552, line: 457, baseType: !414, size: 32, offset: 384)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2503, file: !1552, line: 458, baseType: !414, size: 32, offset: 416)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2503, file: !1552, line: 459, baseType: !414, size: 32, offset: 448)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2503, file: !1552, line: 460, baseType: !414, size: 32, offset: 480)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2503, file: !1552, line: 461, baseType: !1614, size: 64, offset: 512)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2503, file: !1552, line: 462, baseType: !488, size: 32, offset: 576)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2503, file: !1552, line: 463, baseType: !488, size: 32, offset: 608)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2503, file: !1552, line: 464, baseType: !1618, size: 128, offset: 640)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2503, file: !1552, line: 465, baseType: !1622, size: 160, offset: 768)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2503, file: !1552, line: 466, baseType: !1626, size: 160, offset: 928)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2503, file: !1552, line: 467, baseType: !414, size: 32, offset: 1088)
!2526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2528, splitDebugInlining: false, nameTableKind: None)
!2527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2528 = !{!2529, !102, !103}
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1552, line: 468, baseType: !2531)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 445, size: 1120, elements: !2532)
!2532 = !{!2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2531, file: !1552, line: 447, baseType: !488, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2531, file: !1552, line: 448, baseType: !414, size: 32, offset: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2531, file: !1552, line: 449, baseType: !414, size: 32, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2531, file: !1552, line: 450, baseType: !414, size: 32, offset: 96)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2531, file: !1552, line: 451, baseType: !414, size: 32, offset: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2531, file: !1552, line: 452, baseType: !414, size: 32, offset: 160)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2531, file: !1552, line: 453, baseType: !1603, size: 96, offset: 192)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2531, file: !1552, line: 454, baseType: !414, size: 32, offset: 288)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2531, file: !1552, line: 455, baseType: !414, size: 32, offset: 320)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2531, file: !1552, line: 456, baseType: !414, size: 32, offset: 352)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2531, file: !1552, line: 457, baseType: !414, size: 32, offset: 384)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2531, file: !1552, line: 458, baseType: !414, size: 32, offset: 416)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2531, file: !1552, line: 459, baseType: !414, size: 32, offset: 448)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2531, file: !1552, line: 460, baseType: !414, size: 32, offset: 480)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2531, file: !1552, line: 461, baseType: !1614, size: 64, offset: 512)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2531, file: !1552, line: 462, baseType: !488, size: 32, offset: 576)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2531, file: !1552, line: 463, baseType: !488, size: 32, offset: 608)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2531, file: !1552, line: 464, baseType: !1618, size: 128, offset: 640)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2531, file: !1552, line: 465, baseType: !1622, size: 160, offset: 768)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2531, file: !1552, line: 466, baseType: !1626, size: 160, offset: 928)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2531, file: !1552, line: 467, baseType: !414, size: 32, offset: 1088)
!2554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2555, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2556, splitDebugInlining: false, nameTableKind: None)
!2555 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2556 = !{!2557, !415, !102, !103}
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2559, line: 98, size: 256, elements: !2560)
!2559 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2560 = !{!2561, !2566, !2571, !2576, !2581, !2586, !2591, !2596}
!2561 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 99, baseType: !2562, size: 32)
!2562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 99, size: 32, elements: !2563)
!2563 = !{!2564, !2565}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2562, file: !2559, line: 99, baseType: !415, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2562, file: !2559, line: 99, baseType: !415, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 100, baseType: !2567, size: 32, offset: 32)
!2567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 100, size: 32, elements: !2568)
!2568 = !{!2569, !2570}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2567, file: !2559, line: 100, baseType: !415, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2567, file: !2559, line: 100, baseType: !415, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 101, baseType: !2572, size: 32, offset: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 101, size: 32, elements: !2573)
!2573 = !{!2574, !2575}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2572, file: !2559, line: 101, baseType: !415, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2572, file: !2559, line: 101, baseType: !415, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 102, baseType: !2577, size: 32, offset: 96)
!2577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 102, size: 32, elements: !2578)
!2578 = !{!2579, !2580}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2577, file: !2559, line: 102, baseType: !415, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2577, file: !2559, line: 102, baseType: !415, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 103, baseType: !2582, size: 32, offset: 128)
!2582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 103, size: 32, elements: !2583)
!2583 = !{!2584, !2585}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2582, file: !2559, line: 103, baseType: !415, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2582, file: !2559, line: 103, baseType: !415, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 104, baseType: !2587, size: 32, offset: 160)
!2587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 104, size: 32, elements: !2588)
!2588 = !{!2589, !2590}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2587, file: !2559, line: 104, baseType: !415, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2587, file: !2559, line: 104, baseType: !415, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 105, baseType: !2592, size: 32, offset: 192)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 105, size: 32, elements: !2593)
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2592, file: !2559, line: 105, baseType: !415, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2592, file: !2559, line: 105, baseType: !415, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2558, file: !2559, line: 106, baseType: !415, size: 32, offset: 224)
!2597 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2598, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2440, retainedTypes: !2599, splitDebugInlining: false, nameTableKind: None)
!2598 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2599 = !{!2600, !102, !103, !2625, !2316, !415}
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1552, line: 468, baseType: !2602)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 445, size: 1120, elements: !2603)
!2603 = !{!2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2602, file: !1552, line: 447, baseType: !488, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2602, file: !1552, line: 448, baseType: !414, size: 32, offset: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2602, file: !1552, line: 449, baseType: !414, size: 32, offset: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2602, file: !1552, line: 450, baseType: !414, size: 32, offset: 96)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2602, file: !1552, line: 451, baseType: !414, size: 32, offset: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2602, file: !1552, line: 452, baseType: !414, size: 32, offset: 160)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2602, file: !1552, line: 453, baseType: !1603, size: 96, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2602, file: !1552, line: 454, baseType: !414, size: 32, offset: 288)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2602, file: !1552, line: 455, baseType: !414, size: 32, offset: 320)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2602, file: !1552, line: 456, baseType: !414, size: 32, offset: 352)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2602, file: !1552, line: 457, baseType: !414, size: 32, offset: 384)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2602, file: !1552, line: 458, baseType: !414, size: 32, offset: 416)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2602, file: !1552, line: 459, baseType: !414, size: 32, offset: 448)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2602, file: !1552, line: 460, baseType: !414, size: 32, offset: 480)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2602, file: !1552, line: 461, baseType: !1614, size: 64, offset: 512)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2602, file: !1552, line: 462, baseType: !488, size: 32, offset: 576)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2602, file: !1552, line: 463, baseType: !488, size: 32, offset: 608)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2602, file: !1552, line: 464, baseType: !1618, size: 128, offset: 640)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2602, file: !1552, line: 465, baseType: !1622, size: 160, offset: 768)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2602, file: !1552, line: 466, baseType: !1626, size: 160, offset: 928)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2602, file: !1552, line: 467, baseType: !414, size: 32, offset: 1088)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2559, line: 141, baseType: !2627)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2559, line: 97, size: 256, elements: !2628)
!2628 = !{!2629}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2627, file: !2559, line: 107, baseType: !2630, size: 256)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2559, line: 98, size: 256, elements: !2631)
!2631 = !{!2632, !2637, !2642, !2647, !2652, !2657, !2662, !2667}
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 99, baseType: !2633, size: 32)
!2633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 99, size: 32, elements: !2634)
!2634 = !{!2635, !2636}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2633, file: !2559, line: 99, baseType: !415, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2633, file: !2559, line: 99, baseType: !415, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 100, baseType: !2638, size: 32, offset: 32)
!2638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 100, size: 32, elements: !2639)
!2639 = !{!2640, !2641}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2638, file: !2559, line: 100, baseType: !415, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2638, file: !2559, line: 100, baseType: !415, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 101, baseType: !2643, size: 32, offset: 64)
!2643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 101, size: 32, elements: !2644)
!2644 = !{!2645, !2646}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2643, file: !2559, line: 101, baseType: !415, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2643, file: !2559, line: 101, baseType: !415, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 102, baseType: !2648, size: 32, offset: 96)
!2648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 102, size: 32, elements: !2649)
!2649 = !{!2650, !2651}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2648, file: !2559, line: 102, baseType: !415, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2648, file: !2559, line: 102, baseType: !415, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 103, baseType: !2653, size: 32, offset: 128)
!2653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 103, size: 32, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2653, file: !2559, line: 103, baseType: !415, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2653, file: !2559, line: 103, baseType: !415, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 104, baseType: !2658, size: 32, offset: 160)
!2658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 104, size: 32, elements: !2659)
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2658, file: !2559, line: 104, baseType: !415, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2658, file: !2559, line: 104, baseType: !415, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 105, baseType: !2663, size: 32, offset: 192)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 105, size: 32, elements: !2664)
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2663, file: !2559, line: 105, baseType: !415, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2663, file: !2559, line: 105, baseType: !415, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2630, file: !2559, line: 106, baseType: !415, size: 32, offset: 224)
!2668 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2669, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1404, retainedTypes: !2670, splitDebugInlining: false, nameTableKind: None)
!2669 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2670 = !{!2453, !700, !421, !415, !2671, !2688}
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1552, line: 426, baseType: !2673)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 411, size: 28704, elements: !2674)
!2674 = !{!2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2673, file: !1552, line: 413, baseType: !1564, size: 256)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2673, file: !1552, line: 414, baseType: !1568, size: 768, offset: 256)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2673, file: !1552, line: 415, baseType: !1564, size: 256, offset: 1024)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2673, file: !1552, line: 416, baseType: !1568, size: 768, offset: 1280)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2673, file: !1552, line: 417, baseType: !1564, size: 256, offset: 2048)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2673, file: !1552, line: 418, baseType: !1568, size: 768, offset: 2304)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2673, file: !1552, line: 419, baseType: !1564, size: 256, offset: 3072)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2673, file: !1552, line: 420, baseType: !1568, size: 768, offset: 3328)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2673, file: !1552, line: 421, baseType: !1564, size: 256, offset: 4096)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2673, file: !1552, line: 422, baseType: !1579, size: 1792, offset: 4352)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2673, file: !1552, line: 423, baseType: !1583, size: 1920, offset: 6144)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2673, file: !1552, line: 424, baseType: !1588, size: 20608, offset: 8064)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2673, file: !1552, line: 425, baseType: !414, size: 32, offset: 28672)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1552, line: 468, baseType: !2690)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 445, size: 1120, elements: !2691)
!2691 = !{!2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2690, file: !1552, line: 447, baseType: !488, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2690, file: !1552, line: 448, baseType: !414, size: 32, offset: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2690, file: !1552, line: 449, baseType: !414, size: 32, offset: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2690, file: !1552, line: 450, baseType: !414, size: 32, offset: 96)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2690, file: !1552, line: 451, baseType: !414, size: 32, offset: 128)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2690, file: !1552, line: 452, baseType: !414, size: 32, offset: 160)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2690, file: !1552, line: 453, baseType: !1603, size: 96, offset: 192)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2690, file: !1552, line: 454, baseType: !414, size: 32, offset: 288)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2690, file: !1552, line: 455, baseType: !414, size: 32, offset: 320)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2690, file: !1552, line: 456, baseType: !414, size: 32, offset: 352)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2690, file: !1552, line: 457, baseType: !414, size: 32, offset: 384)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2690, file: !1552, line: 458, baseType: !414, size: 32, offset: 416)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2690, file: !1552, line: 459, baseType: !414, size: 32, offset: 448)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2690, file: !1552, line: 460, baseType: !414, size: 32, offset: 480)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2690, file: !1552, line: 461, baseType: !1614, size: 64, offset: 512)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2690, file: !1552, line: 462, baseType: !488, size: 32, offset: 576)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2690, file: !1552, line: 463, baseType: !488, size: 32, offset: 608)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2690, file: !1552, line: 464, baseType: !1618, size: 128, offset: 640)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2690, file: !1552, line: 465, baseType: !1622, size: 160, offset: 768)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2690, file: !1552, line: 466, baseType: !1626, size: 160, offset: 928)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2690, file: !1552, line: 467, baseType: !414, size: 32, offset: 1088)
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2715 = !{!2716, !102, !103}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1552, line: 468, baseType: !2718)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 445, size: 1120, elements: !2719)
!2719 = !{!2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2718, file: !1552, line: 447, baseType: !488, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2718, file: !1552, line: 448, baseType: !414, size: 32, offset: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2718, file: !1552, line: 449, baseType: !414, size: 32, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2718, file: !1552, line: 450, baseType: !414, size: 32, offset: 96)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2718, file: !1552, line: 451, baseType: !414, size: 32, offset: 128)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2718, file: !1552, line: 452, baseType: !414, size: 32, offset: 160)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2718, file: !1552, line: 453, baseType: !1603, size: 96, offset: 192)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2718, file: !1552, line: 454, baseType: !414, size: 32, offset: 288)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2718, file: !1552, line: 455, baseType: !414, size: 32, offset: 320)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2718, file: !1552, line: 456, baseType: !414, size: 32, offset: 352)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2718, file: !1552, line: 457, baseType: !414, size: 32, offset: 384)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2718, file: !1552, line: 458, baseType: !414, size: 32, offset: 416)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2718, file: !1552, line: 459, baseType: !414, size: 32, offset: 448)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2718, file: !1552, line: 460, baseType: !414, size: 32, offset: 480)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2718, file: !1552, line: 461, baseType: !1614, size: 64, offset: 512)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2718, file: !1552, line: 462, baseType: !488, size: 32, offset: 576)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2718, file: !1552, line: 463, baseType: !488, size: 32, offset: 608)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2718, file: !1552, line: 464, baseType: !1618, size: 128, offset: 640)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2718, file: !1552, line: 465, baseType: !1622, size: 160, offset: 768)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2718, file: !1552, line: 466, baseType: !1626, size: 160, offset: 928)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2718, file: !1552, line: 467, baseType: !414, size: 32, offset: 1088)
!2741 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2742, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2743, splitDebugInlining: false, nameTableKind: None)
!2742 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2743 = !{!108, !869, !1714, !591, !2744, !422, !102}
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!2746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2748 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2749, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2750, splitDebugInlining: false, nameTableKind: None)
!2749 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2750 = !{!539, !415}
!2751 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2752, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2753, retainedTypes: !2763, splitDebugInlining: false, nameTableKind: None)
!2752 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2753 = !{!2754}
!2754 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2755, line: 62, baseType: !32, size: 32, elements: !2756)
!2755 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2756 = !{!2757, !2758, !2759, !2760, !2761, !2762}
!2757 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2758 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2759 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2760 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2761 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2762 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2763 = !{!2764, !2827, !415, !583, !539}
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !410, line: 8619, baseType: !2766)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 8563, size: 3072, elements: !2767)
!2767 = !{!2768, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2766, file: !410, line: 8564, baseType: !2769, size: 768)
!2769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 768, elements: !2770)
!2770 = !{!2771}
!2771 = !DISubrange(count: 96)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2766, file: !410, line: 8565, baseType: !414, size: 32, offset: 768)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2766, file: !410, line: 8566, baseType: !414, size: 32, offset: 800)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2766, file: !410, line: 8567, baseType: !414, size: 32, offset: 832)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2766, file: !410, line: 8568, baseType: !414, size: 32, offset: 864)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2766, file: !410, line: 8569, baseType: !414, size: 32, offset: 896)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2766, file: !410, line: 8570, baseType: !414, size: 32, offset: 928)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2766, file: !410, line: 8571, baseType: !414, size: 32, offset: 960)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2766, file: !410, line: 8572, baseType: !414, size: 32, offset: 992)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2766, file: !410, line: 8573, baseType: !414, size: 32, offset: 1024)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2766, file: !410, line: 8574, baseType: !2782, size: 96, offset: 1056)
!2782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 96, elements: !1604)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2766, file: !410, line: 8575, baseType: !414, size: 32, offset: 1152)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2766, file: !410, line: 8576, baseType: !2782, size: 96, offset: 1184)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2766, file: !410, line: 8577, baseType: !414, size: 32, offset: 1280)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2766, file: !410, line: 8578, baseType: !2782, size: 96, offset: 1312)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2766, file: !410, line: 8579, baseType: !414, size: 32, offset: 1408)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2766, file: !410, line: 8580, baseType: !414, size: 32, offset: 1440)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2766, file: !410, line: 8581, baseType: !414, size: 32, offset: 1472)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2766, file: !410, line: 8582, baseType: !414, size: 32, offset: 1504)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2766, file: !410, line: 8583, baseType: !414, size: 32, offset: 1536)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2766, file: !410, line: 8584, baseType: !414, size: 32, offset: 1568)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2766, file: !410, line: 8585, baseType: !414, size: 32, offset: 1600)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2766, file: !410, line: 8586, baseType: !414, size: 32, offset: 1632)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2766, file: !410, line: 8587, baseType: !414, size: 32, offset: 1664)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2766, file: !410, line: 8588, baseType: !414, size: 32, offset: 1696)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2766, file: !410, line: 8589, baseType: !414, size: 32, offset: 1728)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2766, file: !410, line: 8590, baseType: !414, size: 32, offset: 1760)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2766, file: !410, line: 8591, baseType: !414, size: 32, offset: 1792)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2766, file: !410, line: 8592, baseType: !414, size: 32, offset: 1824)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2766, file: !410, line: 8593, baseType: !414, size: 32, offset: 1856)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2766, file: !410, line: 8594, baseType: !414, size: 32, offset: 1888)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2766, file: !410, line: 8595, baseType: !414, size: 32, offset: 1920)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2766, file: !410, line: 8596, baseType: !414, size: 32, offset: 1952)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2766, file: !410, line: 8597, baseType: !414, size: 32, offset: 1984)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2766, file: !410, line: 8598, baseType: !414, size: 32, offset: 2016)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2766, file: !410, line: 8599, baseType: !414, size: 32, offset: 2048)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2766, file: !410, line: 8600, baseType: !2782, size: 96, offset: 2080)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2766, file: !410, line: 8601, baseType: !414, size: 32, offset: 2176)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2766, file: !410, line: 8602, baseType: !2782, size: 96, offset: 2208)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2766, file: !410, line: 8603, baseType: !414, size: 32, offset: 2304)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2766, file: !410, line: 8604, baseType: !2782, size: 96, offset: 2336)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2766, file: !410, line: 8605, baseType: !414, size: 32, offset: 2432)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2766, file: !410, line: 8606, baseType: !414, size: 32, offset: 2464)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2766, file: !410, line: 8607, baseType: !414, size: 32, offset: 2496)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2766, file: !410, line: 8608, baseType: !414, size: 32, offset: 2528)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2766, file: !410, line: 8609, baseType: !414, size: 32, offset: 2560)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2766, file: !410, line: 8610, baseType: !2782, size: 96, offset: 2592)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2766, file: !410, line: 8611, baseType: !414, size: 32, offset: 2688)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2766, file: !410, line: 8612, baseType: !2782, size: 96, offset: 2720)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2766, file: !410, line: 8613, baseType: !414, size: 32, offset: 2816)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2766, file: !410, line: 8614, baseType: !2782, size: 96, offset: 2848)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2766, file: !410, line: 8615, baseType: !414, size: 32, offset: 2944)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2766, file: !410, line: 8616, baseType: !414, size: 32, offset: 2976)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2766, file: !410, line: 8617, baseType: !414, size: 32, offset: 3008)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2766, file: !410, line: 8618, baseType: !414, size: 32, offset: 3040)
!2827 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2830, splitDebugInlining: false, nameTableKind: None)
!2829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2830 = !{!2831, !2835, !937}
!2831 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !938, line: 49, baseType: !32, size: 32, elements: !2832)
!2832 = !{!2833, !2834}
!2833 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2834 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2835 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !938, line: 56, baseType: !32, size: 32, elements: !2836)
!2836 = !{!2837, !2838, !2839, !2840, !2841}
!2837 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2838 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2839 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2840 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2841 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2842 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2843, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2844, retainedTypes: !2853, splitDebugInlining: false, nameTableKind: None)
!2843 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2844 = !{!2845, !2849}
!2845 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1123, line: 179, baseType: !32, size: 32, elements: !2846)
!2846 = !{!2847, !2848}
!2847 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2848 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2849 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1123, line: 194, baseType: !32, size: 32, elements: !2850)
!2850 = !{!2851, !2852}
!2851 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2852 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2853 = !{!415, !1351}
!2854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2855, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2856, retainedTypes: !2867, splitDebugInlining: false, nameTableKind: None)
!2855 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2856 = !{!125, !2857}
!2857 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2755, line: 128, baseType: !32, size: 32, elements: !2858)
!2858 = !{!2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866}
!2859 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2860 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2861 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2862 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2863 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2864 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2865 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2866 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2867 = !{!415, !2868, !2920, !539}
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !410, line: 4575, baseType: !2870)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 4532, size: 390144, elements: !2871)
!2871 = !{!2872, !2873, !2874, !2875, !2876, !2877, !2885, !2886, !2894, !2895}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2870, file: !410, line: 4533, baseType: !414, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2870, file: !410, line: 4534, baseType: !414, size: 32, offset: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2870, file: !410, line: 4535, baseType: !414, size: 32, offset: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2870, file: !410, line: 4536, baseType: !414, size: 32, offset: 96)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2870, file: !410, line: 4537, baseType: !420, size: 16256, offset: 128)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2870, file: !410, line: 4543, baseType: !2878, size: 4224, offset: 16384)
!2878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2879, size: 4224, elements: !433)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2870, file: !410, line: 4538, size: 128, elements: !2880)
!2880 = !{!2881, !2882, !2883, !2884}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2879, file: !410, line: 4539, baseType: !414, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2879, file: !410, line: 4540, baseType: !414, size: 32, offset: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2879, file: !410, line: 4541, baseType: !414, size: 32, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2879, file: !410, line: 4542, baseType: !414, size: 32, offset: 96)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2870, file: !410, line: 4544, baseType: !436, size: 110464, offset: 20608)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2870, file: !410, line: 4550, baseType: !2887, size: 24448, offset: 131072)
!2887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2888, size: 24448, elements: !447)
!2888 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2870, file: !410, line: 4545, size: 128, elements: !2889)
!2889 = !{!2890, !2891, !2892, !2893}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2888, file: !410, line: 4546, baseType: !414, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !2888, file: !410, line: 4547, baseType: !414, size: 32, offset: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !2888, file: !410, line: 4548, baseType: !414, size: 32, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !2888, file: !410, line: 4549, baseType: !414, size: 32, offset: 96)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2870, file: !410, line: 4551, baseType: !450, size: 106624, offset: 155520)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2870, file: !410, line: 4574, baseType: !2896, size: 128000, offset: 262144)
!2896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2897, size: 128000, elements: !481)
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2870, file: !410, line: 4552, size: 1024, elements: !2898)
!2898 = !{!2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !2897, file: !410, line: 4553, baseType: !414, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !2897, file: !410, line: 4554, baseType: !414, size: 32, offset: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !2897, file: !410, line: 4555, baseType: !414, size: 32, offset: 64)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !2897, file: !410, line: 4556, baseType: !414, size: 32, offset: 96)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !2897, file: !410, line: 4557, baseType: !414, size: 32, offset: 128)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !2897, file: !410, line: 4558, baseType: !414, size: 32, offset: 160)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !2897, file: !410, line: 4559, baseType: !414, size: 32, offset: 192)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !2897, file: !410, line: 4560, baseType: !414, size: 32, offset: 224)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !2897, file: !410, line: 4561, baseType: !414, size: 32, offset: 256)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !2897, file: !410, line: 4562, baseType: !414, size: 32, offset: 288)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !2897, file: !410, line: 4563, baseType: !414, size: 32, offset: 320)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !2897, file: !410, line: 4564, baseType: !414, size: 32, offset: 352)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !2897, file: !410, line: 4565, baseType: !414, size: 32, offset: 384)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !2897, file: !410, line: 4566, baseType: !414, size: 32, offset: 416)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !2897, file: !410, line: 4567, baseType: !414, size: 32, offset: 448)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !2897, file: !410, line: 4568, baseType: !414, size: 32, offset: 480)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2897, file: !410, line: 4569, baseType: !474, size: 384, offset: 512)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !2897, file: !410, line: 4570, baseType: !414, size: 32, offset: 896)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !2897, file: !410, line: 4571, baseType: !414, size: 32, offset: 928)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !2897, file: !410, line: 4572, baseType: !414, size: 32, offset: 960)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2897, file: !410, line: 4573, baseType: !414, size: 32, offset: 992)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !410, line: 8619, baseType: !2922)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 8563, size: 3072, elements: !2923)
!2923 = !{!2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2922, file: !410, line: 8564, baseType: !2769, size: 768)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2922, file: !410, line: 8565, baseType: !414, size: 32, offset: 768)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2922, file: !410, line: 8566, baseType: !414, size: 32, offset: 800)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2922, file: !410, line: 8567, baseType: !414, size: 32, offset: 832)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2922, file: !410, line: 8568, baseType: !414, size: 32, offset: 864)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2922, file: !410, line: 8569, baseType: !414, size: 32, offset: 896)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2922, file: !410, line: 8570, baseType: !414, size: 32, offset: 928)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2922, file: !410, line: 8571, baseType: !414, size: 32, offset: 960)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2922, file: !410, line: 8572, baseType: !414, size: 32, offset: 992)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2922, file: !410, line: 8573, baseType: !414, size: 32, offset: 1024)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2922, file: !410, line: 8574, baseType: !2782, size: 96, offset: 1056)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2922, file: !410, line: 8575, baseType: !414, size: 32, offset: 1152)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2922, file: !410, line: 8576, baseType: !2782, size: 96, offset: 1184)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2922, file: !410, line: 8577, baseType: !414, size: 32, offset: 1280)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2922, file: !410, line: 8578, baseType: !2782, size: 96, offset: 1312)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2922, file: !410, line: 8579, baseType: !414, size: 32, offset: 1408)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2922, file: !410, line: 8580, baseType: !414, size: 32, offset: 1440)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2922, file: !410, line: 8581, baseType: !414, size: 32, offset: 1472)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2922, file: !410, line: 8582, baseType: !414, size: 32, offset: 1504)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2922, file: !410, line: 8583, baseType: !414, size: 32, offset: 1536)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2922, file: !410, line: 8584, baseType: !414, size: 32, offset: 1568)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2922, file: !410, line: 8585, baseType: !414, size: 32, offset: 1600)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2922, file: !410, line: 8586, baseType: !414, size: 32, offset: 1632)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2922, file: !410, line: 8587, baseType: !414, size: 32, offset: 1664)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2922, file: !410, line: 8588, baseType: !414, size: 32, offset: 1696)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2922, file: !410, line: 8589, baseType: !414, size: 32, offset: 1728)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2922, file: !410, line: 8590, baseType: !414, size: 32, offset: 1760)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2922, file: !410, line: 8591, baseType: !414, size: 32, offset: 1792)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2922, file: !410, line: 8592, baseType: !414, size: 32, offset: 1824)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2922, file: !410, line: 8593, baseType: !414, size: 32, offset: 1856)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2922, file: !410, line: 8594, baseType: !414, size: 32, offset: 1888)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2922, file: !410, line: 8595, baseType: !414, size: 32, offset: 1920)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2922, file: !410, line: 8596, baseType: !414, size: 32, offset: 1952)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2922, file: !410, line: 8597, baseType: !414, size: 32, offset: 1984)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2922, file: !410, line: 8598, baseType: !414, size: 32, offset: 2016)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2922, file: !410, line: 8599, baseType: !414, size: 32, offset: 2048)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2922, file: !410, line: 8600, baseType: !2782, size: 96, offset: 2080)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2922, file: !410, line: 8601, baseType: !414, size: 32, offset: 2176)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2922, file: !410, line: 8602, baseType: !2782, size: 96, offset: 2208)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2922, file: !410, line: 8603, baseType: !414, size: 32, offset: 2304)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2922, file: !410, line: 8604, baseType: !2782, size: 96, offset: 2336)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2922, file: !410, line: 8605, baseType: !414, size: 32, offset: 2432)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2922, file: !410, line: 8606, baseType: !414, size: 32, offset: 2464)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2922, file: !410, line: 8607, baseType: !414, size: 32, offset: 2496)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2922, file: !410, line: 8608, baseType: !414, size: 32, offset: 2528)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2922, file: !410, line: 8609, baseType: !414, size: 32, offset: 2560)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2922, file: !410, line: 8610, baseType: !2782, size: 96, offset: 2592)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2922, file: !410, line: 8611, baseType: !414, size: 32, offset: 2688)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2922, file: !410, line: 8612, baseType: !2782, size: 96, offset: 2720)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2922, file: !410, line: 8613, baseType: !414, size: 32, offset: 2816)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2922, file: !410, line: 8614, baseType: !2782, size: 96, offset: 2848)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2922, file: !410, line: 8615, baseType: !414, size: 32, offset: 2944)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2922, file: !410, line: 8616, baseType: !414, size: 32, offset: 2976)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2922, file: !410, line: 8617, baseType: !414, size: 32, offset: 3008)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2922, file: !410, line: 8618, baseType: !414, size: 32, offset: 3040)
!2979 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2980, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2981, splitDebugInlining: false, nameTableKind: None)
!2980 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2981 = !{!102, !1714}
!2982 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2983, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2984, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2983 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!2984 = !{!2985, !2992, !30}
!2985 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2986, line: 14, baseType: !32, size: 32, elements: !2987)
!2986 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2987 = !{!2988, !2989, !2990, !2991}
!2988 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2989 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2990 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2991 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2992 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2986, line: 42, baseType: !32, size: 32, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998, !2999}
!2994 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2995 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2996 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2997 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2998 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2999 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!3002 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3003, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3004, splitDebugInlining: false, nameTableKind: None)
!3003 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!3004 = !{!22, !102, !103}
!3005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3006, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3006 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!3007 = !{!"Ubuntu clang version 14.0.6"}
!3008 = !{i32 7, !"Dwarf Version", i32 4}
!3009 = !{i32 2, !"Debug Info Version", i32 3}
!3010 = !{i32 1, !"wchar_size", i32 4}
!3011 = !{i32 1, !"min_enum_size", i32 4}
!3012 = !{i32 1, !"branch-target-enforcement", i32 0}
!3013 = !{i32 1, !"sign-return-address", i32 0}
!3014 = !{i32 1, !"sign-return-address-all", i32 0}
!3015 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3016 = !{i32 7, !"frame-pointer", i32 2}
!3017 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3018, file: !3018, line: 26, type: !3019, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2280, retainedNodes: !842)
!3018 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3019 = !DISubroutineType(types: !3020)
!3020 = !{null}
!3021 = !DILocation(line: 28, column: 1, scope: !3017)
!3022 = !{i64 2155071611, i64 2155071631, i64 2155071694}
!3023 = !DILocation(line: 29, column: 1, scope: !3017)
!3024 = !{i64 2155072026, i64 2155072046, i64 2155072109}
!3025 = !DILocation(line: 30, column: 1, scope: !3017)
!3026 = !{i64 2155072445, i64 2155072465, i64 2155072528}
!3027 = !DILocation(line: 31, column: 1, scope: !3017)
!3028 = !{i64 2155072864, i64 2155072884, i64 2155072947}
!3029 = !DILocation(line: 33, column: 1, scope: !3017)
!3030 = !{i64 2155073156, i64 2155073176, i64 2155073239}
!3031 = !DILocation(line: 35, column: 1, scope: !3017)
!3032 = !{i64 2155073481, i64 2155073501, i64 2155073564}
!3033 = !DILocation(line: 50, column: 1, scope: !3017)
!3034 = !{i64 2155073908, i64 2155073928, i64 2155073991}
!3035 = !DILocation(line: 54, column: 1, scope: !3017)
!3036 = !{i64 2155074347, i64 2155074367, i64 2155074430}
!3037 = !DILocation(line: 61, column: 1, scope: !3017)
!3038 = !{i64 2155074664, i64 2155074684, i64 2155074747}
!3039 = !DILocation(line: 63, column: 1, scope: !3017)
!3040 = !{i64 2155075044, i64 2155075064, i64 2155075127}
!3041 = !DILocation(line: 64, column: 1, scope: !3017)
!3042 = !{i64 2155079627, i64 2155079647, i64 2155079710}
!3043 = !DILocation(line: 65, column: 1, scope: !3017)
!3044 = !{i64 2155080125, i64 2155080145, i64 2155080208}
!3045 = !DILocation(line: 66, column: 1, scope: !3017)
!3046 = !{i64 2155080607, i64 2155080627, i64 2155080690}
!3047 = !DILocation(line: 67, column: 1, scope: !3017)
!3048 = !{i64 2155081114, i64 2155081134, i64 2155081197}
!3049 = !DILocation(line: 68, column: 1, scope: !3017)
!3050 = !{i64 2155081602, i64 2155081622, i64 2155081685}
!3051 = !DILocation(line: 70, column: 1, scope: !3017)
!3052 = !{i64 2155082070, i64 2155082090, i64 2155082153}
!3053 = !DILocation(line: 71, column: 1, scope: !3017)
!3054 = !{i64 2155082512, i64 2155082532, i64 2155082595}
!3055 = !DILocation(line: 72, column: 1, scope: !3017)
!3056 = !{i64 2155082970, i64 2155082990, i64 2155083053}
!3057 = !DILocation(line: 97, column: 1, scope: !3017)
!3058 = !{i64 2155083277, i64 2155083297, i64 2155083360}
!3059 = !DILocation(line: 99, column: 1, scope: !3017)
!3060 = !{i64 2155083495, i64 2155083515, i64 2155083578}
!3061 = !DILocation(line: 102, column: 1, scope: !3017)
!3062 = !{i64 2155083752, i64 2155083772, i64 2155083835}
!3063 = !DILocation(line: 105, column: 1, scope: !3017)
!3064 = !{i64 2155083992, i64 2155084012, i64 2155084075}
!3065 = !DILocation(line: 115, column: 1, scope: !3017)
!3066 = !{i64 2155084331, i64 2155084351, i64 2155084414}
!3067 = !DILocation(line: 118, column: 1, scope: !3017)
!3068 = !{i64 2155084675, i64 2155084695, i64 2155084758}
!3069 = !DILocation(line: 32, column: 1, scope: !3070)
!3070 = !DILexicalBlockFile(scope: !3017, file: !3071, discriminator: 0)
!3071 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3072 = !{i64 2155085031, i64 2155085051, i64 2155085114}
!3073 = !DILocation(line: 33, column: 1, scope: !3070)
!3074 = !{i64 2155085543, i64 2155085563, i64 2155085626}
!3075 = !DILocation(line: 53, column: 1, scope: !3070)
!3076 = !{i64 2155086051, i64 2155086071, i64 2155086134}
!3077 = !DILocation(line: 54, column: 1, scope: !3070)
!3078 = !{i64 2155086469, i64 2155086489, i64 2155086552}
!3079 = !DILocation(line: 55, column: 1, scope: !3070)
!3080 = !{i64 2155086887, i64 2155086907, i64 2155086970}
!3081 = !DILocation(line: 56, column: 1, scope: !3070)
!3082 = !{i64 2155087305, i64 2155087325, i64 2155087388}
!3083 = !DILocation(line: 57, column: 1, scope: !3070)
!3084 = !{i64 2155087723, i64 2155087743, i64 2155087806}
!3085 = !DILocation(line: 58, column: 1, scope: !3070)
!3086 = !{i64 2155088141, i64 2155088161, i64 2155088224}
!3087 = !DILocation(line: 59, column: 1, scope: !3070)
!3088 = !{i64 2155088559, i64 2155088579, i64 2155088642}
!3089 = !DILocation(line: 60, column: 1, scope: !3070)
!3090 = !{i64 2155088983, i64 2155089003, i64 2155089066}
!3091 = !DILocation(line: 61, column: 1, scope: !3070)
!3092 = !{i64 2155093361, i64 2155093381, i64 2155093444}
!3093 = !DILocation(line: 70, column: 1, scope: !3070)
!3094 = !{i64 2155093590, i64 2155093610, i64 2155093673}
!3095 = !DILocation(line: 72, column: 1, scope: !3070)
!3096 = !{i64 2155093922, i64 2155093942, i64 2155094005}
!3097 = !DILocation(line: 73, column: 1, scope: !3070)
!3098 = !{i64 2155094372, i64 2155094392, i64 2155094455}
!3099 = !DILocation(line: 74, column: 1, scope: !3070)
!3100 = !{i64 2155094822, i64 2155094842, i64 2155094905}
!3101 = !DILocation(line: 75, column: 1, scope: !3070)
!3102 = !{i64 2155095272, i64 2155095292, i64 2155095355}
!3103 = !DILocation(line: 76, column: 1, scope: !3070)
!3104 = !{i64 2155095722, i64 2155095742, i64 2155095805}
!3105 = !DILocation(line: 77, column: 1, scope: !3070)
!3106 = !{i64 2155096172, i64 2155096192, i64 2155096255}
!3107 = !DILocation(line: 78, column: 1, scope: !3070)
!3108 = !{i64 2155096622, i64 2155096642, i64 2155096705}
!3109 = !DILocation(line: 79, column: 1, scope: !3070)
!3110 = !{i64 2155097072, i64 2155097092, i64 2155097155}
!3111 = !DILocation(line: 80, column: 1, scope: !3070)
!3112 = !{i64 2155097525, i64 2155097545, i64 2155097608}
!3113 = !DILocation(line: 84, column: 1, scope: !3070)
!3114 = !{i64 2155097857, i64 2155097877, i64 2155097940}
!3115 = !DILocation(line: 106, column: 1, scope: !3070)
!3116 = !{i64 2155098107, i64 2155098127, i64 2155098190}
!3117 = !DILocation(line: 11, column: 1, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !3017, file: !3119, discriminator: 0)
!3119 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3120 = distinct !DISubprogram(name: "main", scope: !105, file: !105, line: 11, type: !3019, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3121)
!3121 = !{!3122}
!3122 = !DILocalVariable(name: "c", scope: !3123, file: !105, line: 20, type: !421)
!3123 = distinct !DILexicalBlock(scope: !3120, file: !105, line: 19, column: 12)
!3124 = !DILocation(line: 13, column: 2, scope: !3120)
!3125 = !DILocation(line: 15, column: 2, scope: !3120)
!3126 = !DILocation(line: 16, column: 2, scope: !3120)
!3127 = !DILocation(line: 17, column: 2, scope: !3120)
!3128 = !DILocation(line: 19, column: 2, scope: !3120)
!3129 = !DILocation(line: 20, column: 15, scope: !3123)
!3130 = !DILocation(line: 0, scope: !3123)
!3131 = !DILocation(line: 22, column: 3, scope: !3123)
!3132 = !DILocation(line: 23, column: 7, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3123, file: !105, line: 23, column: 7)
!3134 = !DILocation(line: 23, column: 9, scope: !3133)
!3135 = !DILocation(line: 23, column: 7, scope: !3123)
!3136 = !DILocation(line: 24, column: 4, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3133, file: !105, line: 23, column: 18)
!3138 = !DILocation(line: 25, column: 3, scope: !3137)
!3139 = distinct !{!3139, !3128, !3140}
!3140 = !DILocation(line: 26, column: 2, scope: !3120)
!3141 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !116, file: !116, line: 45, type: !118, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3142)
!3142 = !{!3143}
!3143 = !DILocalVariable(name: "c", arg: 1, scope: !3141, file: !116, line: 45, type: !103)
!3144 = !DILocation(line: 0, scope: !3141)
!3145 = !DILocation(line: 50, column: 2, scope: !3141)
!3146 = distinct !DISubprogram(name: "__printk_hook_install", scope: !116, file: !116, line: 63, type: !3147, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3149)
!3147 = !DISubroutineType(types: !3148)
!3148 = !{null, !117}
!3149 = !{!3150}
!3150 = !DILocalVariable(name: "fn", arg: 1, scope: !3146, file: !116, line: 63, type: !117)
!3151 = !DILocation(line: 0, scope: !3146)
!3152 = !DILocation(line: 65, column: 12, scope: !3146)
!3153 = !DILocation(line: 66, column: 1, scope: !3146)
!3154 = distinct !DISubprogram(name: "__printk_get_hook", scope: !116, file: !116, line: 76, type: !3155, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !842)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{!102}
!3157 = !DILocation(line: 78, column: 9, scope: !3154)
!3158 = !DILocation(line: 78, column: 2, scope: !3154)
!3159 = distinct !DISubprogram(name: "vprintk", scope: !116, file: !116, line: 113, type: !3160, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3169)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{null, !574, !3162}
!3162 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3163, line: 99, baseType: !3164)
!3163 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3163, line: 40, baseType: !3165)
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !116, baseType: !3166)
!3166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3167)
!3167 = !{!3168}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3166, file: !116, line: 79, baseType: !102, size: 32)
!3169 = !{!3170, !3171, !3172}
!3170 = !DILocalVariable(name: "fmt", arg: 1, scope: !3159, file: !116, line: 113, type: !574)
!3171 = !DILocalVariable(name: "ap", arg: 2, scope: !3159, file: !116, line: 113, type: !3162)
!3172 = !DILocalVariable(name: "ctx", scope: !3173, file: !116, line: 121, type: !3175)
!3173 = distinct !DILexicalBlock(scope: !3174, file: !116, line: 120, column: 27)
!3174 = distinct !DILexicalBlock(scope: !3159, file: !116, line: 120, column: 6)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !116, line: 81, size: 32, elements: !3176)
!3176 = !{!3177, !3178}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3175, file: !116, line: 85, baseType: !32, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3175, file: !116, line: 86, baseType: !3179, offset: 32)
!3179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, elements: !2314)
!3180 = !DILocation(line: 0, scope: !3159)
!3181 = !DILocation(line: 148, column: 3, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3174, file: !116, line: 138, column: 9)
!3183 = !DILocation(line: 155, column: 1, scope: !3159)
!3184 = distinct !DISubprogram(name: "char_out", scope: !116, file: !116, line: 107, type: !3185, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!103, !103, !102}
!3187 = !{!3188, !3189}
!3188 = !DILocalVariable(name: "c", arg: 1, scope: !3184, file: !116, line: 107, type: !103)
!3189 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3184, file: !116, line: 107, type: !102)
!3190 = !DILocation(line: 0, scope: !3184)
!3191 = !DILocation(line: 110, column: 9, scope: !3184)
!3192 = !DILocation(line: 110, column: 2, scope: !3184)
!3193 = distinct !DISubprogram(name: "cbvprintf", scope: !3194, file: !3194, line: 739, type: !3195, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3201)
!3194 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!103, !3197, !102, !574, !3162}
!3197 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3194, line: 297, baseType: !3198)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 32)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!103, null}
!3201 = !{!3202, !3203, !3204, !3205}
!3202 = !DILocalVariable(name: "out", arg: 1, scope: !3193, file: !3194, line: 739, type: !3197)
!3203 = !DILocalVariable(name: "ctx", arg: 2, scope: !3193, file: !3194, line: 739, type: !102)
!3204 = !DILocalVariable(name: "format", arg: 3, scope: !3193, file: !3194, line: 739, type: !574)
!3205 = !DILocalVariable(name: "ap", arg: 4, scope: !3193, file: !3194, line: 739, type: !3162)
!3206 = !DILocation(line: 0, scope: !3193)
!3207 = !DILocation(line: 741, column: 9, scope: !3193)
!3208 = !DILocation(line: 741, column: 2, scope: !3193)
!3209 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !116, file: !116, line: 157, type: !3210, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3212)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{null, !869, !1714}
!3212 = !{!3213, !3214, !3215}
!3213 = !DILocalVariable(name: "c", arg: 1, scope: !3209, file: !116, line: 157, type: !869)
!3214 = !DILocalVariable(name: "n", arg: 2, scope: !3209, file: !116, line: 157, type: !1714)
!3215 = !DILocalVariable(name: "i", scope: !3209, file: !116, line: 159, type: !1714)
!3216 = !DILocation(line: 0, scope: !3209)
!3217 = !DILocation(line: 164, column: 16, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !116, line: 164, column: 2)
!3219 = distinct !DILexicalBlock(scope: !3209, file: !116, line: 164, column: 2)
!3220 = !DILocation(line: 164, column: 2, scope: !3219)
!3221 = !DILocation(line: 165, column: 3, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3218, file: !116, line: 164, column: 26)
!3223 = !DILocation(line: 165, column: 13, scope: !3222)
!3224 = !DILocation(line: 164, column: 22, scope: !3218)
!3225 = distinct !{!3225, !3220, !3226}
!3226 = !DILocation(line: 166, column: 2, scope: !3219)
!3227 = !DILocation(line: 171, column: 1, scope: !3209)
!3228 = distinct !DISubprogram(name: "printk", scope: !116, file: !116, line: 203, type: !3229, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3231)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{null, !574, null}
!3231 = !{!3232, !3233}
!3232 = !DILocalVariable(name: "fmt", arg: 1, scope: !3228, file: !116, line: 203, type: !574)
!3233 = !DILocalVariable(name: "ap", scope: !3228, file: !116, line: 205, type: !3162)
!3234 = !DILocation(line: 0, scope: !3228)
!3235 = !DILocation(line: 205, column: 2, scope: !3228)
!3236 = !DILocation(line: 205, column: 10, scope: !3228)
!3237 = !DILocation(line: 207, column: 2, scope: !3228)
!3238 = !DILocation(line: 209, column: 2, scope: !3228)
!3239 = !DILocation(line: 211, column: 2, scope: !3228)
!3240 = !DILocation(line: 212, column: 1, scope: !3228)
!3241 = distinct !DISubprogram(name: "snprintk", scope: !116, file: !116, line: 239, type: !3242, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3244)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!103, !869, !1714, !574, null}
!3244 = !{!3245, !3246, !3247, !3248, !3249}
!3245 = !DILocalVariable(name: "str", arg: 1, scope: !3241, file: !116, line: 239, type: !869)
!3246 = !DILocalVariable(name: "size", arg: 2, scope: !3241, file: !116, line: 239, type: !1714)
!3247 = !DILocalVariable(name: "fmt", arg: 3, scope: !3241, file: !116, line: 239, type: !574)
!3248 = !DILocalVariable(name: "ap", scope: !3241, file: !116, line: 241, type: !3162)
!3249 = !DILocalVariable(name: "ret", scope: !3241, file: !116, line: 242, type: !103)
!3250 = !DILocation(line: 0, scope: !3241)
!3251 = !DILocation(line: 241, column: 2, scope: !3241)
!3252 = !DILocation(line: 241, column: 10, scope: !3241)
!3253 = !DILocation(line: 244, column: 2, scope: !3241)
!3254 = !DILocation(line: 245, column: 8, scope: !3241)
!3255 = !DILocation(line: 246, column: 2, scope: !3241)
!3256 = !DILocation(line: 249, column: 1, scope: !3241)
!3257 = !DILocation(line: 248, column: 2, scope: !3241)
!3258 = distinct !DISubprogram(name: "vsnprintk", scope: !116, file: !116, line: 251, type: !3259, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3261)
!3259 = !DISubroutineType(types: !3260)
!3260 = !{!103, !869, !1714, !574, !3162}
!3261 = !{!3262, !3263, !3264, !3265, !3266}
!3262 = !DILocalVariable(name: "str", arg: 1, scope: !3258, file: !116, line: 251, type: !869)
!3263 = !DILocalVariable(name: "size", arg: 2, scope: !3258, file: !116, line: 251, type: !1714)
!3264 = !DILocalVariable(name: "fmt", arg: 3, scope: !3258, file: !116, line: 251, type: !574)
!3265 = !DILocalVariable(name: "ap", arg: 4, scope: !3258, file: !116, line: 251, type: !3162)
!3266 = !DILocalVariable(name: "ctx", scope: !3258, file: !116, line: 253, type: !3267)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !116, line: 217, size: 96, elements: !3268)
!3268 = !{!3269, !3270, !3271}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3267, file: !116, line: 218, baseType: !869, size: 32)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3267, file: !116, line: 219, baseType: !103, size: 32, offset: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3267, file: !116, line: 220, baseType: !103, size: 32, offset: 64)
!3272 = !DILocation(line: 0, scope: !3258)
!3273 = !DILocation(line: 253, column: 2, scope: !3258)
!3274 = !DILocation(line: 253, column: 21, scope: !3258)
!3275 = !DILocation(line: 253, column: 27, scope: !3258)
!3276 = !DILocation(line: 255, column: 2, scope: !3258)
!3277 = !DILocation(line: 257, column: 10, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3258, file: !116, line: 257, column: 6)
!3279 = !DILocation(line: 257, column: 22, scope: !3278)
!3280 = !DILocation(line: 257, column: 16, scope: !3278)
!3281 = !DILocation(line: 257, column: 6, scope: !3258)
!3282 = !DILocation(line: 258, column: 3, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3278, file: !116, line: 257, column: 27)
!3284 = !DILocation(line: 258, column: 18, scope: !3283)
!3285 = !DILocation(line: 259, column: 2, scope: !3283)
!3286 = !DILocation(line: 262, column: 1, scope: !3258)
!3287 = !DILocation(line: 261, column: 2, scope: !3258)
!3288 = distinct !DISubprogram(name: "str_out", scope: !116, file: !116, line: 223, type: !3289, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3292)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{!103, !103, !3291}
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 32)
!3292 = !{!3293, !3294}
!3293 = !DILocalVariable(name: "c", arg: 1, scope: !3288, file: !116, line: 223, type: !103)
!3294 = !DILocalVariable(name: "ctx", arg: 2, scope: !3288, file: !116, line: 223, type: !3291)
!3295 = !DILocation(line: 0, scope: !3288)
!3296 = !DILocation(line: 225, column: 11, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3288, file: !116, line: 225, column: 6)
!3298 = !DILocation(line: 225, column: 15, scope: !3297)
!3299 = !DILocation(line: 0, scope: !3297)
!3300 = !DILocation(line: 225, column: 23, scope: !3297)
!3301 = !DILocation(line: 225, column: 45, scope: !3297)
!3302 = !DILocation(line: 225, column: 37, scope: !3297)
!3303 = !DILocation(line: 225, column: 6, scope: !3288)
!3304 = !DILocation(line: 226, column: 8, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3297, file: !116, line: 225, column: 50)
!3306 = !DILocation(line: 226, column: 13, scope: !3305)
!3307 = !DILocation(line: 227, column: 3, scope: !3305)
!3308 = !DILocation(line: 230, column: 29, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3288, file: !116, line: 230, column: 6)
!3310 = !DILocation(line: 230, column: 17, scope: !3309)
!3311 = !DILocation(line: 230, column: 6, scope: !3288)
!3312 = !DILocation(line: 231, column: 22, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3309, file: !116, line: 230, column: 34)
!3314 = !DILocation(line: 231, column: 3, scope: !3313)
!3315 = !DILocation(line: 231, column: 26, scope: !3313)
!3316 = !DILocation(line: 232, column: 2, scope: !3313)
!3317 = !DILocation(line: 233, column: 28, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3309, file: !116, line: 232, column: 9)
!3319 = !DILocation(line: 233, column: 22, scope: !3318)
!3320 = !DILocation(line: 233, column: 3, scope: !3318)
!3321 = !DILocation(line: 233, column: 26, scope: !3318)
!3322 = !DILocation(line: 237, column: 1, scope: !3288)
!3323 = distinct !DISubprogram(name: "z_thread_entry", scope: !3324, file: !3324, line: 30, type: !3325, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !3332)
!3324 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3325 = !DISubroutineType(types: !3326)
!3326 = !{null, !3327, !102, !102, !102}
!3327 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3328, line: 46, baseType: !3329)
!3328 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 32)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{null, !102, !102, !102}
!3332 = !{!3333, !3334, !3335, !3336}
!3333 = !DILocalVariable(name: "entry", arg: 1, scope: !3323, file: !3324, line: 30, type: !3327)
!3334 = !DILocalVariable(name: "p1", arg: 2, scope: !3323, file: !3324, line: 31, type: !102)
!3335 = !DILocalVariable(name: "p2", arg: 3, scope: !3323, file: !3324, line: 31, type: !102)
!3336 = !DILocalVariable(name: "p3", arg: 4, scope: !3323, file: !3324, line: 31, type: !102)
!3337 = !DILocation(line: 0, scope: !3323)
!3338 = !DILocation(line: 36, column: 2, scope: !3323)
!3339 = !DILocation(line: 38, column: 17, scope: !3323)
!3340 = !DILocation(line: 38, column: 2, scope: !3323)
!3341 = !DILocation(line: 45, column: 2, scope: !3323)
!3342 = distinct !DISubprogram(name: "k_current_get", scope: !670, file: !670, line: 530, type: !3343, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !842)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{!3345}
!3345 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1802, line: 347, baseType: !3346)
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 32)
!3347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1802, line: 245, size: 896, elements: !3348)
!3348 = !{!3349, !3407, !3419, !3420, !3421, !3422, !3435}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3347, file: !1802, line: 247, baseType: !3350, size: 384)
!3350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1802, line: 57, size: 384, elements: !3351)
!3351 = !{!3352, !3376, !3383, !3384, !3385, !3394, !3395, !3396}
!3352 = !DIDerivedType(tag: DW_TAG_member, scope: !3350, file: !1802, line: 60, baseType: !3353, size: 64)
!3353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3350, file: !1802, line: 60, size: 64, elements: !3354)
!3354 = !{!3355, !3370}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3353, file: !1802, line: 61, baseType: !3356, size: 64)
!3356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !679, line: 49, baseType: !3357)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !3358)
!3358 = !{!3359, !3365}
!3359 = !DIDerivedType(tag: DW_TAG_member, scope: !3357, file: !679, line: 38, baseType: !3360, size: 32)
!3360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3357, file: !679, line: 38, size: 32, elements: !3361)
!3361 = !{!3362, !3364}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3360, file: !679, line: 39, baseType: !3363, size: 32)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3360, file: !679, line: 40, baseType: !3363, size: 32)
!3365 = !DIDerivedType(tag: DW_TAG_member, scope: !3357, file: !679, line: 42, baseType: !3366, size: 32, offset: 32)
!3366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3357, file: !679, line: 42, size: 32, elements: !3367)
!3367 = !{!3368, !3369}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3366, file: !679, line: 43, baseType: !3363, size: 32)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3366, file: !679, line: 44, baseType: !3363, size: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3353, file: !1802, line: 62, baseType: !3371, size: 64)
!3371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1827, line: 49, size: 64, elements: !3372)
!3372 = !{!3373}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3371, file: !1827, line: 50, baseType: !3374, size: 64)
!3374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3375, size: 64, elements: !1387)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3350, file: !1802, line: 68, baseType: !3377, size: 32, offset: 64)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 32)
!3378 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !3379)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !3380)
!3380 = !{!3381}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3379, file: !674, line: 232, baseType: !3382, size: 64)
!3382 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !3357)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3350, file: !1802, line: 71, baseType: !421, size: 8, offset: 96)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3350, file: !1802, line: 74, baseType: !421, size: 8, offset: 104)
!3385 = !DIDerivedType(tag: DW_TAG_member, scope: !3350, file: !1802, line: 90, baseType: !3386, size: 16, offset: 112)
!3386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3350, file: !1802, line: 90, size: 16, elements: !3387)
!3387 = !{!3388, !3393}
!3388 = !DIDerivedType(tag: DW_TAG_member, scope: !3386, file: !1802, line: 91, baseType: !3389, size: 16)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3386, file: !1802, line: 91, size: 16, elements: !3390)
!3390 = !{!3391, !3392}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3389, file: !1802, line: 96, baseType: !1848, size: 8)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3389, file: !1802, line: 97, baseType: !421, size: 8, offset: 8)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3386, file: !1802, line: 100, baseType: !532, size: 16)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3350, file: !1802, line: 107, baseType: !415, size: 32, offset: 128)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3350, file: !1802, line: 127, baseType: !102, size: 32, offset: 160)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3350, file: !1802, line: 131, baseType: !3397, size: 192, offset: 192)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !674, line: 244, size: 192, elements: !3398)
!3398 = !{!3399, !3400, !3406}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3397, file: !674, line: 245, baseType: !3356, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3397, file: !674, line: 246, baseType: !3401, size: 32, offset: 64)
!3401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !674, line: 242, baseType: !3402)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 32)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{null, !3405}
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 32)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3397, file: !674, line: 249, baseType: !1548, size: 64, offset: 128)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3347, file: !1802, line: 250, baseType: !3408, size: 288, offset: 384)
!3408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1867, line: 25, size: 288, elements: !3409)
!3409 = !{!3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3408, file: !1867, line: 26, baseType: !415, size: 32)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3408, file: !1867, line: 27, baseType: !415, size: 32, offset: 32)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3408, file: !1867, line: 28, baseType: !415, size: 32, offset: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3408, file: !1867, line: 29, baseType: !415, size: 32, offset: 96)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3408, file: !1867, line: 30, baseType: !415, size: 32, offset: 128)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3408, file: !1867, line: 31, baseType: !415, size: 32, offset: 160)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3408, file: !1867, line: 32, baseType: !415, size: 32, offset: 192)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3408, file: !1867, line: 33, baseType: !415, size: 32, offset: 224)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3408, file: !1867, line: 34, baseType: !415, size: 32, offset: 256)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3347, file: !1802, line: 253, baseType: !102, size: 32, offset: 672)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3347, file: !1802, line: 256, baseType: !3378, size: 64, offset: 704)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3347, file: !1802, line: 294, baseType: !103, size: 32, offset: 768)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3347, file: !1802, line: 325, baseType: !3423, size: 32, offset: 800)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 32)
!3424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !670, line: 5073, size: 160, elements: !3425)
!3425 = !{!3426, !3432, !3433}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3424, file: !670, line: 5074, baseType: !3427, size: 96)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1887, line: 56, size: 96, elements: !3428)
!3428 = !{!3429, !3430, !3431}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3427, file: !1887, line: 57, baseType: !1890, size: 32)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3427, file: !1887, line: 58, baseType: !102, size: 32, offset: 32)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3427, file: !1887, line: 59, baseType: !1714, size: 32, offset: 64)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3424, file: !670, line: 5075, baseType: !3378, size: 64, offset: 96)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3424, file: !670, line: 5076, baseType: !3434, offset: 160)
!3434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3347, file: !1802, line: 343, baseType: !3436, size: 64, offset: 832)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1867, line: 60, size: 64, elements: !3437)
!3437 = !{!3438, !3439}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3436, file: !1867, line: 63, baseType: !415, size: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3436, file: !1867, line: 66, baseType: !415, size: 32, offset: 32)
!3440 = !DILocation(line: 535, column: 9, scope: !3342)
!3441 = !DILocation(line: 535, column: 2, scope: !3342)
!3442 = distinct !DISubprogram(name: "k_thread_abort", scope: !3443, file: !3443, line: 188, type: !3444, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !3446)
!3443 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!3444 = !DISubroutineType(types: !3445)
!3445 = !{null, !3345}
!3446 = !{!3447}
!3447 = !DILocalVariable(name: "thread", arg: 1, scope: !3442, file: !3443, line: 188, type: !3345)
!3448 = !DILocation(line: 0, scope: !3442)
!3449 = !DILocation(line: 197, column: 2, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3442, file: !3443, line: 197, column: 2)
!3451 = !{i64 2151033700}
!3452 = !DILocation(line: 198, column: 2, scope: !3442)
!3453 = !DILocation(line: 199, column: 1, scope: !3442)
!3454 = distinct !DISubprogram(name: "z_current_get", scope: !3443, file: !3443, line: 173, type: !3343, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !842)
!3455 = !DILocation(line: 180, column: 2, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3454, file: !3443, line: 180, column: 2)
!3457 = !{i64 2151033632}
!3458 = !DILocation(line: 181, column: 9, scope: !3454)
!3459 = !DILocation(line: 181, column: 2, scope: !3454)
!3460 = distinct !DISubprogram(name: "sys_heap_free", scope: !3461, file: !3461, line: 163, type: !3462, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3470)
!3461 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3462 = !DISubroutineType(types: !3463)
!3463 = !{null, !3464, !102}
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 32)
!3465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1887, line: 56, size: 96, elements: !3466)
!3466 = !{!3467, !3468, !3469}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3465, file: !1887, line: 57, baseType: !2301, size: 32)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3465, file: !1887, line: 58, baseType: !102, size: 32, offset: 32)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3465, file: !1887, line: 59, baseType: !1714, size: 32, offset: 64)
!3470 = !{!3471, !3472, !3473, !3474}
!3471 = !DILocalVariable(name: "heap", arg: 1, scope: !3460, file: !3461, line: 163, type: !3464)
!3472 = !DILocalVariable(name: "mem", arg: 2, scope: !3460, file: !3461, line: 163, type: !102)
!3473 = !DILocalVariable(name: "h", scope: !3460, file: !3461, line: 168, type: !2301)
!3474 = !DILocalVariable(name: "c", scope: !3460, file: !3461, line: 169, type: !2306)
!3475 = !DILocation(line: 0, scope: !3460)
!3476 = !DILocation(line: 165, column: 10, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3460, file: !3461, line: 165, column: 6)
!3478 = !DILocation(line: 165, column: 6, scope: !3460)
!3479 = !DILocation(line: 168, column: 27, scope: !3460)
!3480 = !DILocation(line: 169, column: 16, scope: !3460)
!3481 = !{i32 0, i32 536870912}
!3482 = !DILocation(line: 187, column: 2, scope: !3460)
!3483 = !DILocation(line: 197, column: 2, scope: !3460)
!3484 = !DILocation(line: 198, column: 1, scope: !3460)
!3485 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3461, file: !3461, line: 157, type: !3486, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3488)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!2306, !2301, !102}
!3488 = !{!3489, !3490, !3491, !3492}
!3489 = !DILocalVariable(name: "h", arg: 1, scope: !3485, file: !3461, line: 157, type: !2301)
!3490 = !DILocalVariable(name: "p", arg: 2, scope: !3485, file: !3461, line: 157, type: !102)
!3491 = !DILocalVariable(name: "mem", scope: !3485, file: !3461, line: 159, type: !628)
!3492 = !DILocalVariable(name: "base", scope: !3485, file: !3461, line: 159, type: !628)
!3493 = !DILocation(line: 0, scope: !3485)
!3494 = !DILocation(line: 159, column: 39, scope: !3485)
!3495 = !DILocation(line: 160, column: 14, scope: !3485)
!3496 = !DILocation(line: 160, column: 38, scope: !3485)
!3497 = !DILocation(line: 160, column: 46, scope: !3485)
!3498 = !DILocation(line: 160, column: 2, scope: !3485)
!3499 = distinct !DISubprogram(name: "set_chunk_used", scope: !2288, file: !2288, line: 147, type: !3500, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3502)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{null, !2301, !2306, !583}
!3502 = !{!3503, !3504, !3505, !3506, !3507}
!3503 = !DILocalVariable(name: "h", arg: 1, scope: !3499, file: !2288, line: 147, type: !2301)
!3504 = !DILocalVariable(name: "c", arg: 2, scope: !3499, file: !2288, line: 147, type: !2306)
!3505 = !DILocalVariable(name: "used", arg: 3, scope: !3499, file: !2288, line: 147, type: !583)
!3506 = !DILocalVariable(name: "buf", scope: !3499, file: !2288, line: 149, type: !2295)
!3507 = !DILocalVariable(name: "cmem", scope: !3499, file: !2288, line: 150, type: !102)
!3508 = !DILocation(line: 0, scope: !3499)
!3509 = !DILocation(line: 149, column: 22, scope: !3499)
!3510 = !DILocation(line: 0, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !2288, line: 159, column: 7)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !2288, line: 158, column: 9)
!3513 = distinct !DILexicalBlock(scope: !3499, file: !2288, line: 152, column: 6)
!3514 = !DILocation(line: 159, column: 7, scope: !3512)
!3515 = !DILocation(line: 165, column: 1, scope: !3499)
!3516 = distinct !DISubprogram(name: "free_chunk", scope: !3461, file: !3461, line: 133, type: !3517, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3519)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{null, !2301, !2306}
!3519 = !{!3520, !3521}
!3520 = !DILocalVariable(name: "h", arg: 1, scope: !3516, file: !3461, line: 133, type: !2301)
!3521 = !DILocalVariable(name: "c", arg: 2, scope: !3516, file: !3461, line: 133, type: !2306)
!3522 = !DILocation(line: 0, scope: !3516)
!3523 = !DILocation(line: 136, column: 21, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3516, file: !3461, line: 136, column: 6)
!3525 = !DILocation(line: 136, column: 7, scope: !3524)
!3526 = !DILocation(line: 136, column: 6, scope: !3516)
!3527 = !DILocation(line: 137, column: 3, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3524, file: !3461, line: 136, column: 41)
!3529 = !DILocation(line: 138, column: 22, scope: !3528)
!3530 = !DILocation(line: 138, column: 3, scope: !3528)
!3531 = !DILocation(line: 139, column: 2, scope: !3528)
!3532 = !DILocation(line: 142, column: 21, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3516, file: !3461, line: 142, column: 6)
!3534 = !{i32 -65535, i32 536903678}
!3535 = !DILocation(line: 142, column: 7, scope: !3533)
!3536 = !DILocation(line: 142, column: 6, scope: !3516)
!3537 = !DILocation(line: 143, column: 3, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3533, file: !3461, line: 142, column: 40)
!3539 = !DILocation(line: 144, column: 19, scope: !3538)
!3540 = !DILocation(line: 144, column: 3, scope: !3538)
!3541 = !DILocation(line: 145, column: 7, scope: !3538)
!3542 = !DILocation(line: 146, column: 2, scope: !3538)
!3543 = !DILocation(line: 148, column: 2, scope: !3516)
!3544 = !DILocation(line: 149, column: 1, scope: !3516)
!3545 = distinct !DISubprogram(name: "right_chunk", scope: !2288, file: !2288, line: 204, type: !3546, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3548)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!2306, !2301, !2306}
!3548 = !{!3549, !3550}
!3549 = !DILocalVariable(name: "h", arg: 1, scope: !3545, file: !2288, line: 204, type: !2301)
!3550 = !DILocalVariable(name: "c", arg: 2, scope: !3545, file: !2288, line: 204, type: !2306)
!3551 = !DILocation(line: 0, scope: !3545)
!3552 = !DILocation(line: 206, column: 13, scope: !3545)
!3553 = !DILocation(line: 206, column: 11, scope: !3545)
!3554 = !DILocation(line: 206, column: 2, scope: !3545)
!3555 = distinct !DISubprogram(name: "chunk_used", scope: !2288, file: !2288, line: 137, type: !3556, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3558)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!583, !2301, !2306}
!3558 = !{!3559, !3560}
!3559 = !DILocalVariable(name: "h", arg: 1, scope: !3555, file: !2288, line: 137, type: !2301)
!3560 = !DILocalVariable(name: "c", arg: 2, scope: !3555, file: !2288, line: 137, type: !2306)
!3561 = !DILocation(line: 0, scope: !3555)
!3562 = !DILocation(line: 139, column: 9, scope: !3555)
!3563 = !DILocation(line: 139, column: 42, scope: !3555)
!3564 = !DILocation(line: 139, column: 2, scope: !3555)
!3565 = distinct !DISubprogram(name: "free_list_remove", scope: !3461, file: !3461, line: 60, type: !3517, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3566)
!3566 = !{!3567, !3568, !3569}
!3567 = !DILocalVariable(name: "h", arg: 1, scope: !3565, file: !3461, line: 60, type: !2301)
!3568 = !DILocalVariable(name: "c", arg: 2, scope: !3565, file: !3461, line: 60, type: !2306)
!3569 = !DILocalVariable(name: "bidx", scope: !3570, file: !3461, line: 63, type: !103)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !3461, line: 62, column: 31)
!3571 = distinct !DILexicalBlock(scope: !3565, file: !3461, line: 62, column: 6)
!3572 = !DILocation(line: 0, scope: !3565)
!3573 = !DILocation(line: 63, column: 28, scope: !3570)
!3574 = !{i32 0, i32 32768}
!3575 = !DILocation(line: 63, column: 14, scope: !3570)
!3576 = !DILocation(line: 0, scope: !3570)
!3577 = !DILocation(line: 64, column: 3, scope: !3570)
!3578 = !DILocation(line: 66, column: 1, scope: !3565)
!3579 = distinct !DISubprogram(name: "merge_chunks", scope: !3461, file: !3461, line: 125, type: !3580, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3582)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{null, !2301, !2306, !2306}
!3582 = !{!3583, !3584, !3585, !3586}
!3583 = !DILocalVariable(name: "h", arg: 1, scope: !3579, file: !3461, line: 125, type: !2301)
!3584 = !DILocalVariable(name: "lc", arg: 2, scope: !3579, file: !3461, line: 125, type: !2306)
!3585 = !DILocalVariable(name: "rc", arg: 3, scope: !3579, file: !3461, line: 125, type: !2306)
!3586 = !DILocalVariable(name: "newsz", scope: !3579, file: !3461, line: 127, type: !3587)
!3587 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2288, line: 62, baseType: !415)
!3588 = !DILocation(line: 0, scope: !3579)
!3589 = !DILocation(line: 127, column: 20, scope: !3579)
!3590 = !DILocation(line: 127, column: 40, scope: !3579)
!3591 = !DILocation(line: 127, column: 38, scope: !3579)
!3592 = !DILocation(line: 129, column: 2, scope: !3579)
!3593 = !DILocation(line: 130, column: 25, scope: !3579)
!3594 = !DILocation(line: 130, column: 2, scope: !3579)
!3595 = !DILocation(line: 131, column: 1, scope: !3579)
!3596 = distinct !DISubprogram(name: "left_chunk", scope: !2288, file: !2288, line: 199, type: !3546, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3597)
!3597 = !{!3598, !3599}
!3598 = !DILocalVariable(name: "h", arg: 1, scope: !3596, file: !2288, line: 199, type: !2301)
!3599 = !DILocalVariable(name: "c", arg: 2, scope: !3596, file: !2288, line: 199, type: !2306)
!3600 = !DILocation(line: 0, scope: !3596)
!3601 = !DILocation(line: 201, column: 13, scope: !3596)
!3602 = !DILocation(line: 201, column: 11, scope: !3596)
!3603 = !DILocation(line: 201, column: 2, scope: !3596)
!3604 = distinct !DISubprogram(name: "free_list_add", scope: !3461, file: !3461, line: 98, type: !3517, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3605)
!3605 = !{!3606, !3607, !3608}
!3606 = !DILocalVariable(name: "h", arg: 1, scope: !3604, file: !3461, line: 98, type: !2301)
!3607 = !DILocalVariable(name: "c", arg: 2, scope: !3604, file: !3461, line: 98, type: !2306)
!3608 = !DILocalVariable(name: "bidx", scope: !3609, file: !3461, line: 101, type: !103)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !3461, line: 100, column: 31)
!3610 = distinct !DILexicalBlock(scope: !3604, file: !3461, line: 100, column: 6)
!3611 = !DILocation(line: 0, scope: !3604)
!3612 = !DILocation(line: 101, column: 28, scope: !3609)
!3613 = !DILocation(line: 101, column: 14, scope: !3609)
!3614 = !DILocation(line: 0, scope: !3609)
!3615 = !DILocation(line: 102, column: 3, scope: !3609)
!3616 = !DILocation(line: 104, column: 1, scope: !3604)
!3617 = distinct !DISubprogram(name: "chunk_size", scope: !2288, file: !2288, line: 142, type: !3618, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3620)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!3587, !2301, !2306}
!3620 = !{!3621, !3622}
!3621 = !DILocalVariable(name: "h", arg: 1, scope: !3617, file: !2288, line: 142, type: !2301)
!3622 = !DILocalVariable(name: "c", arg: 2, scope: !3617, file: !2288, line: 142, type: !2306)
!3623 = !DILocation(line: 0, scope: !3617)
!3624 = !DILocation(line: 144, column: 9, scope: !3617)
!3625 = !DILocation(line: 144, column: 42, scope: !3617)
!3626 = !DILocation(line: 144, column: 2, scope: !3617)
!3627 = distinct !DISubprogram(name: "bucket_idx", scope: !2288, file: !2288, line: 250, type: !3628, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3630)
!3628 = !DISubroutineType(types: !3629)
!3629 = !{!103, !2301, !3587}
!3630 = !{!3631, !3632, !3633}
!3631 = !DILocalVariable(name: "h", arg: 1, scope: !3627, file: !2288, line: 250, type: !2301)
!3632 = !DILocalVariable(name: "sz", arg: 2, scope: !3627, file: !2288, line: 250, type: !3587)
!3633 = !DILocalVariable(name: "usable_sz", scope: !3627, file: !2288, line: 252, type: !32)
!3634 = !DILocation(line: 0, scope: !3627)
!3635 = !DILocation(line: 252, column: 32, scope: !3627)
!3636 = !DILocation(line: 252, column: 30, scope: !3627)
!3637 = !DILocation(line: 252, column: 50, scope: !3627)
!3638 = !DILocation(line: 253, column: 14, scope: !3627)
!3639 = !{i32 0, i32 33}
!3640 = !DILocation(line: 253, column: 12, scope: !3627)
!3641 = !DILocation(line: 253, column: 2, scope: !3627)
!3642 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3461, file: !3461, line: 68, type: !3643, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3645)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{null, !2301, !2306, !103}
!3645 = !{!3646, !3647, !3648, !3649, !3651, !3654}
!3646 = !DILocalVariable(name: "h", arg: 1, scope: !3642, file: !3461, line: 68, type: !2301)
!3647 = !DILocalVariable(name: "c", arg: 2, scope: !3642, file: !3461, line: 68, type: !2306)
!3648 = !DILocalVariable(name: "bidx", arg: 3, scope: !3642, file: !3461, line: 68, type: !103)
!3649 = !DILocalVariable(name: "b", scope: !3642, file: !3461, line: 70, type: !3650)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!3651 = !DILocalVariable(name: "second", scope: !3652, file: !3461, line: 84, type: !2306)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !3461, line: 80, column: 9)
!3653 = distinct !DILexicalBlock(scope: !3642, file: !3461, line: 72, column: 6)
!3654 = !DILocalVariable(name: "first", scope: !3652, file: !3461, line: 85, type: !2306)
!3655 = !DILocation(line: 0, scope: !3642)
!3656 = !DILocation(line: 72, column: 9, scope: !3653)
!3657 = !DILocation(line: 72, column: 14, scope: !3653)
!3658 = !DILocation(line: 72, column: 6, scope: !3642)
!3659 = !DILocation(line: 76, column: 23, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3653, file: !3461, line: 72, column: 21)
!3661 = !DILocation(line: 76, column: 6, scope: !3660)
!3662 = !DILocation(line: 76, column: 20, scope: !3660)
!3663 = !DILocation(line: 77, column: 11, scope: !3660)
!3664 = !DILocation(line: 78, column: 3, scope: !3660)
!3665 = !DILocation(line: 79, column: 3, scope: !3660)
!3666 = !DILocation(line: 80, column: 2, scope: !3660)
!3667 = !DILocation(line: 0, scope: !3652)
!3668 = !DILocation(line: 85, column: 21, scope: !3652)
!3669 = !{i32 0, i32 65536}
!3670 = !DILocation(line: 87, column: 3, scope: !3652)
!3671 = !DILocation(line: 88, column: 3, scope: !3652)
!3672 = !DILocation(line: 89, column: 3, scope: !3652)
!3673 = !DILocation(line: 90, column: 3, scope: !3652)
!3674 = !DILocation(line: 96, column: 1, scope: !3642)
!3675 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2288, file: !2288, line: 187, type: !3580, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3676)
!3676 = !{!3677, !3678, !3679}
!3677 = !DILocalVariable(name: "h", arg: 1, scope: !3675, file: !2288, line: 187, type: !2301)
!3678 = !DILocalVariable(name: "c", arg: 2, scope: !3675, file: !2288, line: 187, type: !2306)
!3679 = !DILocalVariable(name: "prev", arg: 3, scope: !3675, file: !2288, line: 188, type: !2306)
!3680 = !DILocation(line: 0, scope: !3675)
!3681 = !DILocation(line: 190, column: 2, scope: !3675)
!3682 = !DILocation(line: 191, column: 1, scope: !3675)
!3683 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2288, file: !2288, line: 193, type: !3580, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3684)
!3684 = !{!3685, !3686, !3687}
!3685 = !DILocalVariable(name: "h", arg: 1, scope: !3683, file: !2288, line: 193, type: !2301)
!3686 = !DILocalVariable(name: "c", arg: 2, scope: !3683, file: !2288, line: 193, type: !2306)
!3687 = !DILocalVariable(name: "next", arg: 3, scope: !3683, file: !2288, line: 194, type: !2306)
!3688 = !DILocation(line: 0, scope: !3683)
!3689 = !DILocation(line: 196, column: 2, scope: !3683)
!3690 = !DILocation(line: 197, column: 1, scope: !3683)
!3691 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2288, file: !2288, line: 177, type: !3546, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3692)
!3692 = !{!3693, !3694}
!3693 = !DILocalVariable(name: "h", arg: 1, scope: !3691, file: !2288, line: 177, type: !2301)
!3694 = !DILocalVariable(name: "c", arg: 2, scope: !3691, file: !2288, line: 177, type: !2306)
!3695 = !DILocation(line: 0, scope: !3691)
!3696 = !DILocation(line: 179, column: 9, scope: !3691)
!3697 = !DILocation(line: 179, column: 2, scope: !3691)
!3698 = distinct !DISubprogram(name: "chunk_field", scope: !2288, file: !2288, line: 107, type: !3699, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3701)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{!2306, !2301, !2306, !2287}
!3701 = !{!3702, !3703, !3704, !3705, !3706}
!3702 = !DILocalVariable(name: "h", arg: 1, scope: !3698, file: !2288, line: 107, type: !2301)
!3703 = !DILocalVariable(name: "c", arg: 2, scope: !3698, file: !2288, line: 107, type: !2306)
!3704 = !DILocalVariable(name: "f", arg: 3, scope: !3698, file: !2288, line: 108, type: !2287)
!3705 = !DILocalVariable(name: "buf", scope: !3698, file: !2288, line: 110, type: !2295)
!3706 = !DILocalVariable(name: "cmem", scope: !3698, file: !2288, line: 111, type: !102)
!3707 = !DILocation(line: 0, scope: !3698)
!3708 = !DILocation(line: 110, column: 22, scope: !3698)
!3709 = !DILocation(line: 111, column: 15, scope: !3698)
!3710 = !DILocation(line: 116, column: 11, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !2288, line: 115, column: 9)
!3712 = distinct !DILexicalBlock(scope: !3698, file: !2288, line: 113, column: 6)
!3713 = !DILocation(line: 116, column: 10, scope: !3711)
!3714 = !DILocation(line: 118, column: 1, scope: !3698)
!3715 = distinct !DISubprogram(name: "chunk_buf", scope: !2288, file: !2288, line: 101, type: !3716, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3718)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!2295, !2301}
!3718 = !{!3719}
!3719 = !DILocalVariable(name: "h", arg: 1, scope: !3715, file: !2288, line: 101, type: !2301)
!3720 = !DILocation(line: 0, scope: !3715)
!3721 = !DILocation(line: 104, column: 9, scope: !3715)
!3722 = !DILocation(line: 104, column: 2, scope: !3715)
!3723 = distinct !DISubprogram(name: "chunk_set", scope: !2288, file: !2288, line: 120, type: !3724, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3726)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{null, !2301, !2306, !2287, !2306}
!3726 = !{!3727, !3728, !3729, !3730, !3731, !3732}
!3727 = !DILocalVariable(name: "h", arg: 1, scope: !3723, file: !2288, line: 120, type: !2301)
!3728 = !DILocalVariable(name: "c", arg: 2, scope: !3723, file: !2288, line: 120, type: !2306)
!3729 = !DILocalVariable(name: "f", arg: 3, scope: !3723, file: !2288, line: 121, type: !2287)
!3730 = !DILocalVariable(name: "val", arg: 4, scope: !3723, file: !2288, line: 121, type: !2306)
!3731 = !DILocalVariable(name: "buf", scope: !3723, file: !2288, line: 125, type: !2295)
!3732 = !DILocalVariable(name: "cmem", scope: !3723, file: !2288, line: 126, type: !102)
!3733 = !DILocation(line: 0, scope: !3723)
!3734 = !DILocation(line: 125, column: 22, scope: !3723)
!3735 = !DILocation(line: 126, column: 15, scope: !3723)
!3736 = !DILocation(line: 133, column: 27, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !2288, line: 131, column: 9)
!3738 = distinct !DILexicalBlock(scope: !3723, file: !2288, line: 128, column: 6)
!3739 = !DILocation(line: 133, column: 4, scope: !3737)
!3740 = !DILocation(line: 133, column: 3, scope: !3737)
!3741 = !DILocation(line: 133, column: 25, scope: !3737)
!3742 = !DILocation(line: 135, column: 1, scope: !3723)
!3743 = distinct !DISubprogram(name: "min_chunk_size", scope: !2288, file: !2288, line: 240, type: !3744, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3746)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!3587, !2301}
!3746 = !{!3747}
!3747 = !DILocalVariable(name: "h", arg: 1, scope: !3743, file: !2288, line: 240, type: !2301)
!3748 = !DILocation(line: 0, scope: !3743)
!3749 = !DILocation(line: 242, column: 9, scope: !3743)
!3750 = !DILocation(line: 242, column: 2, scope: !3743)
!3751 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2288, file: !2288, line: 235, type: !3752, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3754)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!3587, !2301, !1714}
!3754 = !{!3755, !3756}
!3755 = !DILocalVariable(name: "h", arg: 1, scope: !3751, file: !2288, line: 235, type: !2301)
!3756 = !DILocalVariable(name: "bytes", arg: 2, scope: !3751, file: !2288, line: 235, type: !1714)
!3757 = !DILocation(line: 0, scope: !3751)
!3758 = !DILocation(line: 237, column: 39, scope: !3751)
!3759 = !DILocation(line: 237, column: 9, scope: !3751)
!3760 = !DILocation(line: 237, column: 2, scope: !3751)
!3761 = distinct !DISubprogram(name: "chunksz", scope: !2288, file: !2288, line: 230, type: !3762, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3764)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{!3587, !1714}
!3764 = !{!3765}
!3765 = !DILocalVariable(name: "bytes", arg: 1, scope: !3761, file: !2288, line: 230, type: !1714)
!3766 = !DILocation(line: 0, scope: !3761)
!3767 = !DILocation(line: 232, column: 29, scope: !3761)
!3768 = !DILocation(line: 232, column: 35, scope: !3761)
!3769 = !DILocation(line: 232, column: 2, scope: !3761)
!3770 = distinct !DISubprogram(name: "set_chunk_size", scope: !2288, file: !2288, line: 172, type: !3771, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3773)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{null, !2301, !2306, !3587}
!3773 = !{!3774, !3775, !3776}
!3774 = !DILocalVariable(name: "h", arg: 1, scope: !3770, file: !2288, line: 172, type: !2301)
!3775 = !DILocalVariable(name: "c", arg: 2, scope: !3770, file: !2288, line: 172, type: !2306)
!3776 = !DILocalVariable(name: "size", arg: 3, scope: !3770, file: !2288, line: 172, type: !3587)
!3777 = !DILocation(line: 0, scope: !3770)
!3778 = !DILocation(line: 174, column: 38, scope: !3770)
!3779 = !DILocation(line: 174, column: 2, scope: !3770)
!3780 = !DILocation(line: 175, column: 1, scope: !3770)
!3781 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2288, file: !2288, line: 209, type: !3771, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3782)
!3782 = !{!3783, !3784, !3785}
!3783 = !DILocalVariable(name: "h", arg: 1, scope: !3781, file: !2288, line: 209, type: !2301)
!3784 = !DILocalVariable(name: "c", arg: 2, scope: !3781, file: !2288, line: 209, type: !2306)
!3785 = !DILocalVariable(name: "size", arg: 3, scope: !3781, file: !2288, line: 210, type: !3587)
!3786 = !DILocation(line: 0, scope: !3781)
!3787 = !DILocation(line: 212, column: 2, scope: !3781)
!3788 = !DILocation(line: 213, column: 1, scope: !3781)
!3789 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3461, file: !3461, line: 34, type: !3643, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3790)
!3790 = !{!3791, !3792, !3793, !3794, !3795, !3798}
!3791 = !DILocalVariable(name: "h", arg: 1, scope: !3789, file: !3461, line: 34, type: !2301)
!3792 = !DILocalVariable(name: "c", arg: 2, scope: !3789, file: !3461, line: 34, type: !2306)
!3793 = !DILocalVariable(name: "bidx", arg: 3, scope: !3789, file: !3461, line: 34, type: !103)
!3794 = !DILocalVariable(name: "b", scope: !3789, file: !3461, line: 36, type: !3650)
!3795 = !DILocalVariable(name: "first", scope: !3796, file: !3461, line: 47, type: !2306)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !3461, line: 46, column: 9)
!3797 = distinct !DILexicalBlock(scope: !3789, file: !3461, line: 42, column: 6)
!3798 = !DILocalVariable(name: "second", scope: !3796, file: !3461, line: 48, type: !2306)
!3799 = !DILocation(line: 0, scope: !3789)
!3800 = !DILocation(line: 36, column: 29, scope: !3789)
!3801 = !DILocation(line: 42, column: 6, scope: !3797)
!3802 = !DILocation(line: 42, column: 28, scope: !3797)
!3803 = !DILocation(line: 42, column: 6, scope: !3789)
!3804 = !DILocation(line: 44, column: 24, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3797, file: !3461, line: 42, column: 34)
!3806 = !DILocation(line: 44, column: 23, scope: !3805)
!3807 = !DILocation(line: 44, column: 6, scope: !3805)
!3808 = !DILocation(line: 44, column: 20, scope: !3805)
!3809 = !DILocation(line: 45, column: 6, scope: !3805)
!3810 = !DILocation(line: 45, column: 11, scope: !3805)
!3811 = !DILocation(line: 46, column: 2, scope: !3805)
!3812 = !DILocation(line: 47, column: 21, scope: !3796)
!3813 = !DILocation(line: 0, scope: !3796)
!3814 = !DILocation(line: 50, column: 6, scope: !3796)
!3815 = !DILocation(line: 50, column: 11, scope: !3796)
!3816 = !DILocation(line: 51, column: 3, scope: !3796)
!3817 = !DILocation(line: 52, column: 3, scope: !3796)
!3818 = !DILocation(line: 58, column: 1, scope: !3789)
!3819 = distinct !DISubprogram(name: "next_free_chunk", scope: !2288, file: !2288, line: 182, type: !3546, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3820)
!3820 = !{!3821, !3822}
!3821 = !DILocalVariable(name: "h", arg: 1, scope: !3819, file: !2288, line: 182, type: !2301)
!3822 = !DILocalVariable(name: "c", arg: 2, scope: !3819, file: !2288, line: 182, type: !2306)
!3823 = !DILocation(line: 0, scope: !3819)
!3824 = !DILocation(line: 184, column: 9, scope: !3819)
!3825 = !DILocation(line: 184, column: 2, scope: !3819)
!3826 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3461, file: !3461, line: 200, type: !3827, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3829)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!1714, !3464, !102}
!3829 = !{!3830, !3831, !3832, !3833, !3834, !3835, !3836}
!3830 = !DILocalVariable(name: "heap", arg: 1, scope: !3826, file: !3461, line: 200, type: !3464)
!3831 = !DILocalVariable(name: "mem", arg: 2, scope: !3826, file: !3461, line: 200, type: !102)
!3832 = !DILocalVariable(name: "h", scope: !3826, file: !3461, line: 202, type: !2301)
!3833 = !DILocalVariable(name: "c", scope: !3826, file: !3461, line: 203, type: !2306)
!3834 = !DILocalVariable(name: "addr", scope: !3826, file: !3461, line: 204, type: !1714)
!3835 = !DILocalVariable(name: "chunk_base", scope: !3826, file: !3461, line: 205, type: !1714)
!3836 = !DILocalVariable(name: "chunk_sz", scope: !3826, file: !3461, line: 206, type: !1714)
!3837 = !DILocation(line: 0, scope: !3826)
!3838 = !DILocation(line: 202, column: 27, scope: !3826)
!3839 = !DILocation(line: 203, column: 16, scope: !3826)
!3840 = !DILocation(line: 204, column: 16, scope: !3826)
!3841 = !DILocation(line: 205, column: 31, scope: !3826)
!3842 = !DILocation(line: 205, column: 22, scope: !3826)
!3843 = !DILocation(line: 206, column: 20, scope: !3826)
!3844 = !DILocation(line: 206, column: 37, scope: !3826)
!3845 = !DILocation(line: 208, column: 26, scope: !3826)
!3846 = !DILocation(line: 208, column: 18, scope: !3826)
!3847 = !DILocation(line: 208, column: 2, scope: !3826)
!3848 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3461, file: !3461, line: 263, type: !3849, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3851)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!102, !3464, !1714}
!3851 = !{!3852, !3853, !3854, !3855, !3856, !3857}
!3852 = !DILocalVariable(name: "heap", arg: 1, scope: !3848, file: !3461, line: 263, type: !3464)
!3853 = !DILocalVariable(name: "bytes", arg: 2, scope: !3848, file: !3461, line: 263, type: !1714)
!3854 = !DILocalVariable(name: "h", scope: !3848, file: !3461, line: 265, type: !2301)
!3855 = !DILocalVariable(name: "mem", scope: !3848, file: !3461, line: 266, type: !102)
!3856 = !DILocalVariable(name: "chunk_sz", scope: !3848, file: !3461, line: 272, type: !3587)
!3857 = !DILocalVariable(name: "c", scope: !3848, file: !3461, line: 273, type: !2306)
!3858 = !DILocation(line: 0, scope: !3848)
!3859 = !DILocation(line: 265, column: 27, scope: !3848)
!3860 = !DILocation(line: 268, column: 12, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3848, file: !3461, line: 268, column: 6)
!3862 = !DILocation(line: 268, column: 18, scope: !3861)
!3863 = !DILocation(line: 268, column: 21, scope: !3861)
!3864 = !DILocation(line: 268, column: 6, scope: !3848)
!3865 = !DILocation(line: 272, column: 23, scope: !3848)
!3866 = !DILocation(line: 273, column: 16, scope: !3848)
!3867 = !DILocation(line: 274, column: 8, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3848, file: !3461, line: 274, column: 6)
!3869 = !DILocation(line: 274, column: 6, scope: !3848)
!3870 = !DILocation(line: 279, column: 6, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3848, file: !3461, line: 279, column: 6)
!3872 = !DILocation(line: 279, column: 23, scope: !3871)
!3873 = !DILocation(line: 279, column: 6, scope: !3848)
!3874 = !DILocation(line: 280, column: 24, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3871, file: !3461, line: 279, column: 35)
!3876 = !DILocation(line: 280, column: 3, scope: !3875)
!3877 = !DILocation(line: 281, column: 3, scope: !3875)
!3878 = !DILocation(line: 282, column: 2, scope: !3875)
!3879 = !DILocation(line: 284, column: 2, scope: !3848)
!3880 = !DILocation(line: 286, column: 8, scope: !3848)
!3881 = !DILocation(line: 298, column: 2, scope: !3848)
!3882 = !DILocation(line: 299, column: 1, scope: !3848)
!3883 = distinct !DISubprogram(name: "size_too_big", scope: !2288, file: !2288, line: 256, type: !3884, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3886)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!583, !2301, !1714}
!3886 = !{!3887, !3888}
!3887 = !DILocalVariable(name: "h", arg: 1, scope: !3883, file: !2288, line: 256, type: !2301)
!3888 = !DILocalVariable(name: "bytes", arg: 2, scope: !3883, file: !2288, line: 256, type: !1714)
!3889 = !DILocation(line: 0, scope: !3883)
!3890 = !DILocation(line: 262, column: 16, scope: !3883)
!3891 = !DILocation(line: 262, column: 36, scope: !3883)
!3892 = !DILocation(line: 262, column: 30, scope: !3883)
!3893 = !DILocation(line: 262, column: 2, scope: !3883)
!3894 = distinct !DISubprogram(name: "alloc_chunk", scope: !3461, file: !3461, line: 211, type: !3895, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3897)
!3895 = !DISubroutineType(types: !3896)
!3896 = !{!2306, !2301, !3587}
!3897 = !{!3898, !3899, !3900, !3901, !3902, !3905, !3906, !3908, !3909, !3912}
!3898 = !DILocalVariable(name: "h", arg: 1, scope: !3894, file: !3461, line: 211, type: !2301)
!3899 = !DILocalVariable(name: "sz", arg: 2, scope: !3894, file: !3461, line: 211, type: !3587)
!3900 = !DILocalVariable(name: "bi", scope: !3894, file: !3461, line: 213, type: !103)
!3901 = !DILocalVariable(name: "b", scope: !3894, file: !3461, line: 214, type: !3650)
!3902 = !DILocalVariable(name: "first", scope: !3903, file: !3461, line: 233, type: !2306)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !3461, line: 232, column: 15)
!3904 = distinct !DILexicalBlock(scope: !3894, file: !3461, line: 232, column: 6)
!3905 = !DILocalVariable(name: "i", scope: !3903, file: !3461, line: 234, type: !103)
!3906 = !DILocalVariable(name: "c", scope: !3907, file: !3461, line: 236, type: !2306)
!3907 = distinct !DILexicalBlock(scope: !3903, file: !3461, line: 235, column: 6)
!3908 = !DILocalVariable(name: "bmask", scope: !3894, file: !3461, line: 249, type: !415)
!3909 = !DILocalVariable(name: "minbucket", scope: !3910, file: !3461, line: 252, type: !103)
!3910 = distinct !DILexicalBlock(scope: !3911, file: !3461, line: 251, column: 19)
!3911 = distinct !DILexicalBlock(scope: !3894, file: !3461, line: 251, column: 6)
!3912 = !DILocalVariable(name: "c", scope: !3910, file: !3461, line: 253, type: !2306)
!3913 = !DILocation(line: 0, scope: !3894)
!3914 = !DILocation(line: 213, column: 11, scope: !3894)
!3915 = !DILocation(line: 232, column: 9, scope: !3904)
!3916 = !DILocation(line: 232, column: 6, scope: !3904)
!3917 = !DILocation(line: 232, column: 6, scope: !3894)
!3918 = !DILocation(line: 236, column: 21, scope: !3907)
!3919 = !DILocation(line: 0, scope: !3903)
!3920 = !DILocation(line: 0, scope: !3907)
!3921 = !DILocation(line: 237, column: 8, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3907, file: !3461, line: 237, column: 8)
!3923 = !DILocation(line: 237, column: 25, scope: !3922)
!3924 = !DILocation(line: 237, column: 8, scope: !3907)
!3925 = !DILocation(line: 238, column: 5, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3922, file: !3461, line: 237, column: 32)
!3927 = !DILocation(line: 241, column: 14, scope: !3907)
!3928 = !DILocation(line: 241, column: 12, scope: !3907)
!3929 = !DILocation(line: 243, column: 12, scope: !3903)
!3930 = !DILocation(line: 243, column: 16, scope: !3903)
!3931 = distinct !{!3931, !3932, !3933}
!3932 = !DILocation(line: 235, column: 3, scope: !3903)
!3933 = !DILocation(line: 243, column: 35, scope: !3903)
!3934 = !DILocation(line: 249, column: 22, scope: !3894)
!3935 = !DILocation(line: 249, column: 39, scope: !3894)
!3936 = !DILocation(line: 249, column: 36, scope: !3894)
!3937 = !DILocation(line: 251, column: 12, scope: !3911)
!3938 = !DILocation(line: 251, column: 6, scope: !3894)
!3939 = !DILocation(line: 252, column: 19, scope: !3910)
!3940 = !DILocation(line: 0, scope: !3910)
!3941 = !DILocation(line: 253, column: 39, scope: !3910)
!3942 = !DILocation(line: 255, column: 3, scope: !3910)
!3943 = !DILocation(line: 261, column: 1, scope: !3894)
!3944 = distinct !DISubprogram(name: "split_chunks", scope: !3461, file: !3461, line: 109, type: !3580, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3945)
!3945 = !{!3946, !3947, !3948, !3949, !3950, !3951}
!3946 = !DILocalVariable(name: "h", arg: 1, scope: !3944, file: !3461, line: 109, type: !2301)
!3947 = !DILocalVariable(name: "lc", arg: 2, scope: !3944, file: !3461, line: 109, type: !2306)
!3948 = !DILocalVariable(name: "rc", arg: 3, scope: !3944, file: !3461, line: 109, type: !2306)
!3949 = !DILocalVariable(name: "sz0", scope: !3944, file: !3461, line: 114, type: !3587)
!3950 = !DILocalVariable(name: "lsz", scope: !3944, file: !3461, line: 115, type: !3587)
!3951 = !DILocalVariable(name: "rsz", scope: !3944, file: !3461, line: 116, type: !3587)
!3952 = !DILocation(line: 0, scope: !3944)
!3953 = !DILocation(line: 114, column: 18, scope: !3944)
!3954 = !DILocation(line: 115, column: 21, scope: !3944)
!3955 = !DILocation(line: 116, column: 22, scope: !3944)
!3956 = !DILocation(line: 118, column: 2, scope: !3944)
!3957 = !DILocation(line: 119, column: 2, scope: !3944)
!3958 = !DILocation(line: 120, column: 2, scope: !3944)
!3959 = !DILocation(line: 121, column: 25, scope: !3944)
!3960 = !DILocation(line: 121, column: 2, scope: !3944)
!3961 = !DILocation(line: 122, column: 1, scope: !3944)
!3962 = distinct !DISubprogram(name: "chunk_mem", scope: !3461, file: !3461, line: 24, type: !3963, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3965)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!102, !2301, !2306}
!3965 = !{!3966, !3967, !3968, !3969}
!3966 = !DILocalVariable(name: "h", arg: 1, scope: !3962, file: !3461, line: 24, type: !2301)
!3967 = !DILocalVariable(name: "c", arg: 2, scope: !3962, file: !3461, line: 24, type: !2306)
!3968 = !DILocalVariable(name: "buf", scope: !3962, file: !3461, line: 26, type: !2295)
!3969 = !DILocalVariable(name: "ret", scope: !3962, file: !3461, line: 27, type: !628)
!3970 = !DILocation(line: 0, scope: !3962)
!3971 = !DILocation(line: 26, column: 22, scope: !3962)
!3972 = !DILocation(line: 27, column: 38, scope: !3962)
!3973 = !DILocation(line: 31, column: 2, scope: !3962)
!3974 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3461, file: !3461, line: 301, type: !3975, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3977)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!102, !3464, !1714, !1714}
!3977 = !{!3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989}
!3978 = !DILocalVariable(name: "heap", arg: 1, scope: !3974, file: !3461, line: 301, type: !3464)
!3979 = !DILocalVariable(name: "align", arg: 2, scope: !3974, file: !3461, line: 301, type: !1714)
!3980 = !DILocalVariable(name: "bytes", arg: 3, scope: !3974, file: !3461, line: 301, type: !1714)
!3981 = !DILocalVariable(name: "h", scope: !3974, file: !3461, line: 303, type: !2301)
!3982 = !DILocalVariable(name: "gap", scope: !3974, file: !3461, line: 304, type: !1714)
!3983 = !DILocalVariable(name: "rew", scope: !3974, file: !3461, line: 304, type: !1714)
!3984 = !DILocalVariable(name: "padded_sz", scope: !3974, file: !3461, line: 335, type: !3587)
!3985 = !DILocalVariable(name: "c0", scope: !3974, file: !3461, line: 336, type: !2306)
!3986 = !DILocalVariable(name: "mem", scope: !3974, file: !3461, line: 341, type: !628)
!3987 = !DILocalVariable(name: "end", scope: !3974, file: !3461, line: 345, type: !2295)
!3988 = !DILocalVariable(name: "c", scope: !3974, file: !3461, line: 348, type: !2306)
!3989 = !DILocalVariable(name: "c_end", scope: !3974, file: !3461, line: 349, type: !2306)
!3990 = !DILocation(line: 0, scope: !3974)
!3991 = !DILocation(line: 303, column: 27, scope: !3974)
!3992 = !DILocation(line: 313, column: 16, scope: !3974)
!3993 = !DILocation(line: 313, column: 14, scope: !3974)
!3994 = !DILocation(line: 314, column: 12, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3974, file: !3461, line: 314, column: 6)
!3996 = !DILocation(line: 314, column: 6, scope: !3974)
!3997 = !DILocation(line: 315, column: 9, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3995, file: !3461, line: 314, column: 20)
!3999 = !DILocation(line: 316, column: 9, scope: !3998)
!4000 = !DILocation(line: 318, column: 13, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !3461, line: 318, column: 7)
!4002 = distinct !DILexicalBlock(scope: !3995, file: !3461, line: 317, column: 9)
!4003 = !DILocation(line: 318, column: 7, scope: !4002)
!4004 = !DILocation(line: 319, column: 11, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4001, file: !3461, line: 318, column: 39)
!4006 = !DILocation(line: 319, column: 4, scope: !4005)
!4007 = !DILocation(line: 0, scope: !3995)
!4008 = !DILocation(line: 326, column: 12, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !3974, file: !3461, line: 326, column: 6)
!4010 = !DILocation(line: 326, column: 17, scope: !4009)
!4011 = !DILocation(line: 326, column: 20, scope: !4009)
!4012 = !DILocation(line: 326, column: 6, scope: !3974)
!4013 = !DILocation(line: 335, column: 50, scope: !3974)
!4014 = !DILocation(line: 335, column: 58, scope: !3974)
!4015 = !DILocation(line: 335, column: 24, scope: !3974)
!4016 = !DILocation(line: 336, column: 17, scope: !3974)
!4017 = !DILocation(line: 338, column: 9, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3974, file: !3461, line: 338, column: 6)
!4019 = !DILocation(line: 338, column: 6, scope: !3974)
!4020 = !DILocation(line: 341, column: 17, scope: !3974)
!4021 = !DILocation(line: 344, column: 20, scope: !3974)
!4022 = !DILocation(line: 344, column: 8, scope: !3974)
!4023 = !DILocation(line: 344, column: 47, scope: !3974)
!4024 = !DILocation(line: 345, column: 39, scope: !3974)
!4025 = !DILocation(line: 348, column: 16, scope: !3974)
!4026 = !DILocation(line: 349, column: 26, scope: !3974)
!4027 = !DILocation(line: 349, column: 24, scope: !3974)
!4028 = !DILocation(line: 353, column: 8, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !3974, file: !3461, line: 353, column: 6)
!4030 = !DILocation(line: 353, column: 6, scope: !3974)
!4031 = !DILocation(line: 354, column: 3, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4029, file: !3461, line: 353, column: 14)
!4033 = !DILocation(line: 355, column: 3, scope: !4032)
!4034 = !DILocation(line: 356, column: 2, scope: !4032)
!4035 = !DILocation(line: 359, column: 6, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !3974, file: !3461, line: 359, column: 6)
!4037 = !DILocation(line: 359, column: 24, scope: !4036)
!4038 = !DILocation(line: 359, column: 6, scope: !3974)
!4039 = !DILocation(line: 360, column: 3, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4036, file: !3461, line: 359, column: 33)
!4041 = !DILocation(line: 361, column: 3, scope: !4040)
!4042 = !DILocation(line: 362, column: 2, scope: !4040)
!4043 = !DILocation(line: 364, column: 2, scope: !3974)
!4044 = !DILocation(line: 377, column: 1, scope: !3974)
!4045 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3461, file: !3461, line: 379, type: !4046, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !4048)
!4046 = !DISubroutineType(types: !4047)
!4047 = !{!102, !3464, !102, !1714, !1714}
!4048 = !{!4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4064, !4065}
!4049 = !DILocalVariable(name: "heap", arg: 1, scope: !4045, file: !3461, line: 379, type: !3464)
!4050 = !DILocalVariable(name: "ptr", arg: 2, scope: !4045, file: !3461, line: 379, type: !102)
!4051 = !DILocalVariable(name: "align", arg: 3, scope: !4045, file: !3461, line: 380, type: !1714)
!4052 = !DILocalVariable(name: "bytes", arg: 4, scope: !4045, file: !3461, line: 380, type: !1714)
!4053 = !DILocalVariable(name: "h", scope: !4045, file: !3461, line: 382, type: !2301)
!4054 = !DILocalVariable(name: "c", scope: !4045, file: !3461, line: 399, type: !2306)
!4055 = !DILocalVariable(name: "rc", scope: !4045, file: !3461, line: 400, type: !2306)
!4056 = !DILocalVariable(name: "align_gap", scope: !4045, file: !3461, line: 401, type: !1714)
!4057 = !DILocalVariable(name: "chunks_need", scope: !4045, file: !3461, line: 402, type: !3587)
!4058 = !DILocalVariable(name: "split_size", scope: !4059, file: !3461, line: 435, type: !3587)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !3461, line: 433, column: 61)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !3461, line: 432, column: 13)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !3461, line: 409, column: 13)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !3461, line: 406, column: 13)
!4063 = distinct !DILexicalBlock(scope: !4045, file: !3461, line: 404, column: 6)
!4064 = !DILocalVariable(name: "ptr2", scope: !4045, file: !3461, line: 474, type: !102)
!4065 = !DILocalVariable(name: "prev_size", scope: !4066, file: !3461, line: 477, type: !1714)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !3461, line: 476, column: 20)
!4067 = distinct !DILexicalBlock(scope: !4045, file: !3461, line: 476, column: 6)
!4068 = !DILocation(line: 0, scope: !4045)
!4069 = !DILocation(line: 382, column: 27, scope: !4045)
!4070 = !DILocation(line: 385, column: 10, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4045, file: !3461, line: 385, column: 6)
!4072 = !DILocation(line: 385, column: 6, scope: !4045)
!4073 = !DILocation(line: 386, column: 10, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4071, file: !3461, line: 385, column: 19)
!4075 = !DILocation(line: 386, column: 3, scope: !4074)
!4076 = !DILocation(line: 388, column: 12, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4045, file: !3461, line: 388, column: 6)
!4078 = !DILocation(line: 388, column: 6, scope: !4045)
!4079 = !DILocation(line: 389, column: 3, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4077, file: !3461, line: 388, column: 18)
!4081 = !DILocation(line: 390, column: 3, scope: !4080)
!4082 = !DILocation(line: 395, column: 6, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4045, file: !3461, line: 395, column: 6)
!4084 = !DILocation(line: 395, column: 6, scope: !4045)
!4085 = !DILocation(line: 399, column: 16, scope: !4045)
!4086 = !DILocation(line: 400, column: 17, scope: !4045)
!4087 = !DILocation(line: 401, column: 49, scope: !4045)
!4088 = !DILocation(line: 401, column: 36, scope: !4045)
!4089 = !DILocation(line: 402, column: 52, scope: !4045)
!4090 = !DILocation(line: 402, column: 26, scope: !4045)
!4091 = !DILocation(line: 404, column: 6, scope: !4063)
!4092 = !DILocation(line: 404, column: 12, scope: !4063)
!4093 = !DILocation(line: 404, column: 40, scope: !4063)
!4094 = !DILocation(line: 404, column: 31, scope: !4063)
!4095 = !DILocation(line: 404, column: 6, scope: !4045)
!4096 = !DILocation(line: 406, column: 13, scope: !4062)
!4097 = !DILocation(line: 406, column: 30, scope: !4062)
!4098 = !DILocation(line: 406, column: 13, scope: !4063)
!4099 = !DILocation(line: 409, column: 30, scope: !4061)
!4100 = !DILocation(line: 409, column: 13, scope: !4062)
!4101 = !DILocation(line: 420, column: 24, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4061, file: !3461, line: 409, column: 45)
!4103 = !DILocation(line: 420, column: 3, scope: !4102)
!4104 = !DILocation(line: 421, column: 3, scope: !4102)
!4105 = !DILocation(line: 422, column: 3, scope: !4102)
!4106 = !DILocation(line: 431, column: 3, scope: !4102)
!4107 = !DILocation(line: 432, column: 14, scope: !4060)
!4108 = !DILocation(line: 432, column: 32, scope: !4060)
!4109 = !DILocation(line: 433, column: 26, scope: !4060)
!4110 = !DILocation(line: 433, column: 24, scope: !4060)
!4111 = !DILocation(line: 433, column: 44, scope: !4060)
!4112 = !DILocation(line: 432, column: 13, scope: !4061)
!4113 = !DILocation(line: 435, column: 38, scope: !4059)
!4114 = !DILocation(line: 0, scope: !4059)
!4115 = !DILocation(line: 445, column: 3, scope: !4059)
!4116 = !DILocation(line: 447, column: 20, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4059, file: !3461, line: 447, column: 7)
!4118 = !DILocation(line: 447, column: 18, scope: !4117)
!4119 = !DILocation(line: 447, column: 7, scope: !4059)
!4120 = !DILocation(line: 448, column: 27, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4117, file: !3461, line: 447, column: 39)
!4122 = !DILocation(line: 448, column: 4, scope: !4121)
!4123 = !DILocation(line: 449, column: 4, scope: !4121)
!4124 = !DILocation(line: 450, column: 3, scope: !4121)
!4125 = !DILocation(line: 452, column: 3, scope: !4059)
!4126 = !DILocation(line: 453, column: 3, scope: !4059)
!4127 = !DILocation(line: 474, column: 15, scope: !4045)
!4128 = !DILocation(line: 476, column: 11, scope: !4067)
!4129 = !DILocation(line: 476, column: 6, scope: !4045)
!4130 = !DILocation(line: 477, column: 42, scope: !4066)
!4131 = !DILocation(line: 477, column: 22, scope: !4066)
!4132 = !DILocation(line: 477, column: 60, scope: !4066)
!4133 = !DILocation(line: 0, scope: !4066)
!4134 = !DILocation(line: 479, column: 21, scope: !4066)
!4135 = !DILocation(line: 479, column: 3, scope: !4066)
!4136 = !DILocation(line: 480, column: 3, scope: !4066)
!4137 = !DILocation(line: 481, column: 2, scope: !4066)
!4138 = !DILocation(line: 483, column: 1, scope: !4045)
!4139 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2288, file: !2288, line: 245, type: !4140, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !4142)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!1714, !2301, !3587}
!4142 = !{!4143, !4144}
!4143 = !DILocalVariable(name: "h", arg: 1, scope: !4139, file: !2288, line: 245, type: !2301)
!4144 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4139, file: !2288, line: 245, type: !3587)
!4145 = !DILocation(line: 0, scope: !4139)
!4146 = !DILocation(line: 247, column: 20, scope: !4139)
!4147 = !DILocation(line: 247, column: 33, scope: !4139)
!4148 = !DILocation(line: 247, column: 2, scope: !4139)
!4149 = distinct !DISubprogram(name: "sys_heap_init", scope: !3461, file: !3461, line: 485, type: !4150, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !4152)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{null, !3464, !102, !1714}
!4152 = !{!4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162}
!4153 = !DILocalVariable(name: "heap", arg: 1, scope: !4149, file: !3461, line: 485, type: !3464)
!4154 = !DILocalVariable(name: "mem", arg: 2, scope: !4149, file: !3461, line: 485, type: !102)
!4155 = !DILocalVariable(name: "bytes", arg: 3, scope: !4149, file: !3461, line: 485, type: !1714)
!4156 = !DILocalVariable(name: "addr", scope: !4149, file: !3461, line: 502, type: !22)
!4157 = !DILocalVariable(name: "end", scope: !4149, file: !3461, line: 503, type: !22)
!4158 = !DILocalVariable(name: "heap_sz", scope: !4149, file: !3461, line: 504, type: !3587)
!4159 = !DILocalVariable(name: "h", scope: !4149, file: !3461, line: 509, type: !2301)
!4160 = !DILocalVariable(name: "nb_buckets", scope: !4149, file: !3461, line: 520, type: !103)
!4161 = !DILocalVariable(name: "chunk0_size", scope: !4149, file: !3461, line: 521, type: !3587)
!4162 = !DILocalVariable(name: "i", scope: !4163, file: !3461, line: 526, type: !103)
!4163 = distinct !DILexicalBlock(scope: !4149, file: !3461, line: 526, column: 2)
!4164 = !DILocation(line: 0, scope: !4149)
!4165 = !DILocation(line: 499, column: 8, scope: !4149)
!4166 = !DILocation(line: 502, column: 19, scope: !4149)
!4167 = !DILocation(line: 503, column: 18, scope: !4149)
!4168 = !DILocation(line: 504, column: 27, scope: !4149)
!4169 = !DILocation(line: 504, column: 35, scope: !4149)
!4170 = !DILocation(line: 509, column: 21, scope: !4149)
!4171 = !DILocation(line: 510, column: 8, scope: !4149)
!4172 = !DILocation(line: 510, column: 13, scope: !4149)
!4173 = !DILocation(line: 511, column: 5, scope: !4149)
!4174 = !DILocation(line: 511, column: 15, scope: !4149)
!4175 = !DILocation(line: 512, column: 5, scope: !4149)
!4176 = !DILocation(line: 512, column: 19, scope: !4149)
!4177 = !DILocation(line: 520, column: 19, scope: !4149)
!4178 = !DILocation(line: 522, column: 21, scope: !4149)
!4179 = !DILocation(line: 521, column: 56, scope: !4149)
!4180 = !DILocation(line: 521, column: 26, scope: !4149)
!4181 = !DILocation(line: 0, scope: !4163)
!4182 = !DILocation(line: 526, column: 20, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4163, file: !3461, line: 526, column: 2)
!4184 = !DILocation(line: 526, column: 2, scope: !4163)
!4185 = !DILocation(line: 531, column: 2, scope: !4149)
!4186 = !DILocation(line: 532, column: 2, scope: !4149)
!4187 = !DILocation(line: 533, column: 2, scope: !4149)
!4188 = !DILocation(line: 536, column: 41, scope: !4149)
!4189 = !DILocation(line: 536, column: 2, scope: !4149)
!4190 = !DILocation(line: 537, column: 2, scope: !4149)
!4191 = !DILocation(line: 540, column: 2, scope: !4149)
!4192 = !DILocation(line: 541, column: 2, scope: !4149)
!4193 = !DILocation(line: 542, column: 2, scope: !4149)
!4194 = !DILocation(line: 544, column: 2, scope: !4149)
!4195 = !DILocation(line: 545, column: 1, scope: !4149)
!4196 = !DILocation(line: 527, column: 17, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4183, file: !3461, line: 526, column: 39)
!4198 = !DILocation(line: 527, column: 22, scope: !4197)
!4199 = !DILocation(line: 526, column: 35, scope: !4183)
!4200 = distinct !{!4200, !4184, !4201}
!4201 = !DILocation(line: 528, column: 2, scope: !4163)
!4202 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2321, file: !2321, line: 1338, type: !4203, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4211)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{!103, !3197, !102, !574, !4205, !415}
!4205 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3163, line: 99, baseType: !4206)
!4206 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3163, line: 40, baseType: !4207)
!4207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2321, baseType: !4208)
!4208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4209)
!4209 = !{!4210}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4208, file: !2321, baseType: !102, size: 32)
!4211 = !{!4212, !4213, !4214, !4215, !4216, !4217, !4221, !4222, !4223, !4225, !4230, !4275, !4278, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4290, !4291, !4292, !4296, !4299, !4301, !4304, !4305, !4306, !4311, !4317, !4320, !4324, !4330, !4334, !4337, !4339, !4342}
!4212 = !DILocalVariable(name: "out", arg: 1, scope: !4202, file: !2321, line: 1338, type: !3197)
!4213 = !DILocalVariable(name: "ctx", arg: 2, scope: !4202, file: !2321, line: 1338, type: !102)
!4214 = !DILocalVariable(name: "fp", arg: 3, scope: !4202, file: !2321, line: 1338, type: !574)
!4215 = !DILocalVariable(name: "ap", arg: 4, scope: !4202, file: !2321, line: 1339, type: !4205)
!4216 = !DILocalVariable(name: "flags", arg: 5, scope: !4202, file: !2321, line: 1339, type: !415)
!4217 = !DILocalVariable(name: "buf", scope: !4202, file: !2321, line: 1341, type: !4218)
!4218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 176, elements: !4219)
!4219 = !{!4220}
!4220 = !DISubrange(count: 22)
!4221 = !DILocalVariable(name: "count", scope: !4202, file: !2321, line: 1342, type: !1714)
!4222 = !DILocalVariable(name: "sint", scope: !4202, file: !2321, line: 1343, type: !2340)
!4223 = !DILocalVariable(name: "tagged_ap", scope: !4202, file: !2321, line: 1345, type: !4224)
!4224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!4225 = !DILocalVariable(name: "rc", scope: !4226, file: !2321, line: 1377, type: !103)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !2321, line: 1377, column: 4)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !2321, line: 1376, column: 19)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1376, column: 7)
!4229 = distinct !DILexicalBlock(scope: !4202, file: !2321, line: 1375, column: 19)
!4230 = !DILocalVariable(name: "state", scope: !4229, file: !2321, line: 1395, type: !4231)
!4231 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4202, file: !2321, line: 1392, size: 192, elements: !4232)
!4232 = !{!4233, !4243}
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4231, file: !2321, line: 1393, baseType: !4234, size: 64)
!4234 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2321, line: 166, size: 64, elements: !4235)
!4235 = !{!4236, !4237, !4238, !4240, !4242}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4234, file: !2321, line: 168, baseType: !2340, size: 64)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4234, file: !2321, line: 171, baseType: !2343, size: 64)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4234, file: !2321, line: 174, baseType: !4239, size: 64)
!4239 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4234, file: !2321, line: 177, baseType: !4241, size: 64)
!4241 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4234, file: !2321, line: 180, baseType: !102, size: 32)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4231, file: !2321, line: 1394, baseType: !4244, size: 96, offset: 64)
!4244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2321, line: 189, size: 96, elements: !4245)
!4245 = !{!4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4270}
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4244, file: !2321, line: 191, baseType: !583, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4244, file: !2321, line: 194, baseType: !583, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4244, file: !2321, line: 197, baseType: !583, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4244, file: !2321, line: 200, baseType: !583, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4244, file: !2321, line: 203, baseType: !583, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4244, file: !2321, line: 206, baseType: !583, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4244, file: !2321, line: 209, baseType: !583, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4244, file: !2321, line: 212, baseType: !583, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4244, file: !2321, line: 219, baseType: !583, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4244, file: !2321, line: 222, baseType: !583, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4244, file: !2321, line: 229, baseType: !583, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4244, file: !2321, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4244, file: !2321, line: 238, baseType: !583, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4244, file: !2321, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4244, file: !2321, line: 244, baseType: !583, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4244, file: !2321, line: 247, baseType: !583, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4244, file: !2321, line: 252, baseType: !583, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4244, file: !2321, line: 257, baseType: !583, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4244, file: !2321, line: 260, baseType: !422, size: 8, offset: 24)
!4265 = !DIDerivedType(tag: DW_TAG_member, scope: !4244, file: !2321, line: 262, baseType: !4266, size: 32, offset: 32)
!4266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4244, file: !2321, line: 262, size: 32, elements: !4267)
!4267 = !{!4268, !4269}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4266, file: !2321, line: 267, baseType: !103, size: 32)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4266, file: !2321, line: 289, baseType: !103, size: 32)
!4270 = !DIDerivedType(tag: DW_TAG_member, scope: !4244, file: !2321, line: 292, baseType: !4271, size: 32, offset: 64)
!4271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4244, file: !2321, line: 292, size: 32, elements: !4272)
!4272 = !{!4273, !4274}
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4271, file: !2321, line: 297, baseType: !103, size: 32)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4271, file: !2321, line: 306, baseType: !103, size: 32)
!4275 = !DILocalVariable(name: "conv", scope: !4229, file: !2321, line: 1400, type: !4276)
!4276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4277)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 32)
!4278 = !DILocalVariable(name: "value", scope: !4229, file: !2321, line: 1401, type: !4279)
!4279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4280)
!4280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4234, size: 32)
!4281 = !DILocalVariable(name: "sp", scope: !4229, file: !2321, line: 1402, type: !574)
!4282 = !DILocalVariable(name: "width", scope: !4229, file: !2321, line: 1403, type: !103)
!4283 = !DILocalVariable(name: "precision", scope: !4229, file: !2321, line: 1404, type: !103)
!4284 = !DILocalVariable(name: "bps", scope: !4229, file: !2321, line: 1405, type: !574)
!4285 = !DILocalVariable(name: "bpe", scope: !4229, file: !2321, line: 1406, type: !574)
!4286 = !DILocalVariable(name: "sign", scope: !4229, file: !2321, line: 1407, type: !108)
!4287 = !DILocalVariable(name: "arg", scope: !4288, file: !2321, line: 1432, type: !103)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !2321, line: 1431, column: 24)
!4289 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1431, column: 7)
!4290 = !DILocalVariable(name: "specifier_cat", scope: !4229, file: !2321, line: 1468, type: !2320)
!4291 = !DILocalVariable(name: "length_mod", scope: !4229, file: !2321, line: 1470, type: !2328)
!4292 = !DILocalVariable(name: "rc", scope: !4293, file: !2321, line: 1575, type: !103)
!4293 = distinct !DILexicalBlock(scope: !4294, file: !2321, line: 1575, column: 4)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !2321, line: 1574, column: 43)
!4295 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1574, column: 7)
!4296 = !DILocalVariable(name: "rc", scope: !4297, file: !2321, line: 1584, type: !103)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !2321, line: 1584, column: 4)
!4298 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1582, column: 28)
!4299 = !DILocalVariable(name: "len", scope: !4300, file: !2321, line: 1589, type: !1714)
!4300 = distinct !DILexicalBlock(scope: !4298, file: !2321, line: 1586, column: 13)
!4301 = !DILocalVariable(name: "len", scope: !4302, file: !2321, line: 1641, type: !1714)
!4302 = distinct !DILexicalBlock(scope: !4303, file: !2321, line: 1640, column: 24)
!4303 = distinct !DILexicalBlock(scope: !4298, file: !2321, line: 1640, column: 8)
!4304 = !DILocalVariable(name: "nj_len", scope: !4229, file: !2321, line: 1722, type: !1714)
!4305 = !DILocalVariable(name: "pad_len", scope: !4229, file: !2321, line: 1723, type: !103)
!4306 = !DILocalVariable(name: "pad", scope: !4307, file: !2321, line: 1751, type: !108)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !2321, line: 1750, column: 26)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !2321, line: 1750, column: 8)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !2321, line: 1747, column: 18)
!4310 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1747, column: 7)
!4311 = !DILocalVariable(name: "rc", scope: !4312, file: !2321, line: 1758, type: !103)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !2321, line: 1758, column: 7)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !2321, line: 1757, column: 21)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !2321, line: 1757, column: 10)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !2321, line: 1756, column: 26)
!4316 = distinct !DILexicalBlock(scope: !4307, file: !2321, line: 1756, column: 9)
!4317 = !DILocalVariable(name: "rc", scope: !4318, file: !2321, line: 1765, type: !103)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !2321, line: 1765, column: 6)
!4319 = distinct !DILexicalBlock(scope: !4307, file: !2321, line: 1764, column: 25)
!4320 = !DILocalVariable(name: "rc", scope: !4321, file: !2321, line: 1774, type: !103)
!4321 = distinct !DILexicalBlock(scope: !4322, file: !2321, line: 1774, column: 4)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !2321, line: 1773, column: 18)
!4323 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1773, column: 7)
!4324 = !DILocalVariable(name: "rc", scope: !4325, file: !2321, line: 1819, type: !103)
!4325 = distinct !DILexicalBlock(scope: !4326, file: !2321, line: 1819, column: 5)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !2321, line: 1818, column: 44)
!4327 = distinct !DILexicalBlock(scope: !4328, file: !2321, line: 1818, column: 8)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !2321, line: 1817, column: 10)
!4329 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1777, column: 7)
!4330 = !DILocalVariable(name: "rc", scope: !4331, file: !2321, line: 1823, type: !103)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !2321, line: 1823, column: 5)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !2321, line: 1822, column: 26)
!4333 = distinct !DILexicalBlock(scope: !4328, file: !2321, line: 1822, column: 8)
!4334 = !DILocalVariable(name: "rc", scope: !4335, file: !2321, line: 1828, type: !103)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !2321, line: 1828, column: 5)
!4336 = distinct !DILexicalBlock(scope: !4328, file: !2321, line: 1827, column: 26)
!4337 = !DILocalVariable(name: "rc", scope: !4338, file: !2321, line: 1831, type: !103)
!4338 = distinct !DILexicalBlock(scope: !4328, file: !2321, line: 1831, column: 4)
!4339 = !DILocalVariable(name: "rc", scope: !4340, file: !2321, line: 1836, type: !103)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !2321, line: 1836, column: 4)
!4341 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1835, column: 21)
!4342 = !DILabel(scope: !4298, name: "prec_int_pad0", file: !2321, line: 1634)
!4343 = !DILocation(line: 0, scope: !4202)
!4344 = !DILocation(line: 1341, column: 2, scope: !4202)
!4345 = !DILocation(line: 1341, column: 7, scope: !4202)
!4346 = !DILocation(line: 1375, column: 2, scope: !4202)
!4347 = !DILocation(line: 1342, column: 9, scope: !4202)
!4348 = !DILocation(line: 1375, column: 9, scope: !4202)
!4349 = !DILocation(line: 1377, column: 4, scope: !4226)
!4350 = !DILocation(line: 0, scope: !4226)
!4351 = !DILocation(line: 1377, column: 4, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4226, file: !2321, line: 1377, column: 4)
!4353 = distinct !{!4353, !4346, !4354}
!4354 = !DILocation(line: 1839, column: 2, scope: !4202)
!4355 = !DILocation(line: 1392, column: 3, scope: !4229)
!4356 = !DILocation(line: 1395, column: 5, scope: !4229)
!4357 = !DILocation(line: 0, scope: !4229)
!4358 = !DILocation(line: 1409, column: 8, scope: !4229)
!4359 = !DILocation(line: 1414, column: 13, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1414, column: 7)
!4361 = !DILocation(line: 1414, column: 7, scope: !4229)
!4362 = !DILocation(line: 1415, column: 12, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4360, file: !2321, line: 1414, column: 25)
!4364 = !DILocation(line: 1417, column: 14, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4363, file: !2321, line: 1417, column: 8)
!4366 = !DILocation(line: 1417, column: 8, scope: !4363)
!4367 = !DILocation(line: 1418, column: 21, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4365, file: !2321, line: 1417, column: 19)
!4369 = !DILocation(line: 1419, column: 13, scope: !4368)
!4370 = !DILocation(line: 1420, column: 4, scope: !4368)
!4371 = !DILocation(line: 1421, column: 20, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4360, file: !2321, line: 1421, column: 14)
!4373 = !DILocation(line: 1421, column: 14, scope: !4360)
!4374 = !DILocation(line: 1431, column: 13, scope: !4289)
!4375 = !DILocation(line: 1431, column: 7, scope: !4229)
!4376 = !DILocation(line: 1432, column: 14, scope: !4288)
!4377 = !DILocation(line: 0, scope: !4288)
!4378 = !DILocation(line: 1434, column: 12, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4288, file: !2321, line: 1434, column: 8)
!4380 = !DILocation(line: 1434, column: 8, scope: !4288)
!4381 = !DILocation(line: 1435, column: 24, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4379, file: !2321, line: 1434, column: 17)
!4383 = !DILocation(line: 1436, column: 4, scope: !4382)
!4384 = !DILocation(line: 1439, column: 20, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4289, file: !2321, line: 1439, column: 14)
!4386 = !DILocation(line: 1439, column: 14, scope: !4289)
!4387 = !DILocation(line: 1469, column: 37, scope: !4229)
!4388 = !DILocation(line: 1448, column: 20, scope: !4229)
!4389 = !DILocation(line: 1449, column: 22, scope: !4229)
!4390 = !DILocation(line: 1471, column: 34, scope: !4229)
!4391 = !DILocation(line: 1478, column: 7, scope: !4229)
!4392 = !DILocation(line: 1479, column: 4, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !2321, line: 1478, column: 40)
!4394 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1478, column: 7)
!4395 = !DILocation(line: 1484, column: 19, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4393, file: !2321, line: 1479, column: 24)
!4397 = !DILocation(line: 1484, column: 17, scope: !4396)
!4398 = !DILocation(line: 1485, column: 5, scope: !4396)
!4399 = !DILocation(line: 1492, column: 20, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !2321, line: 1491, column: 12)
!4401 = distinct !DILexicalBlock(scope: !4396, file: !2321, line: 1487, column: 9)
!4402 = !DILocation(line: 1492, column: 18, scope: !4400)
!4403 = !DILocation(line: 1494, column: 5, scope: !4396)
!4404 = !DILocation(line: 1497, column: 23, scope: !4396)
!4405 = !DILocation(line: 1496, column: 17, scope: !4396)
!4406 = !DILocation(line: 1498, column: 5, scope: !4396)
!4407 = !DILocation(line: 1501, column: 23, scope: !4396)
!4408 = !DILocation(line: 1500, column: 17, scope: !4396)
!4409 = !DILocation(line: 1502, column: 5, scope: !4396)
!4410 = !DILocation(line: 1513, column: 23, scope: !4396)
!4411 = !DILocation(line: 1513, column: 6, scope: !4396)
!4412 = !DILocation(line: 1512, column: 17, scope: !4396)
!4413 = !DILocation(line: 1514, column: 5, scope: !4396)
!4414 = !DILocation(line: 0, scope: !4396)
!4415 = !DILocation(line: 1516, column: 8, scope: !4393)
!4416 = !DILocation(line: 1517, column: 19, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4418, file: !2321, line: 1516, column: 33)
!4418 = distinct !DILexicalBlock(scope: !4393, file: !2321, line: 1516, column: 8)
!4419 = !DILocation(line: 1517, column: 17, scope: !4417)
!4420 = !DILocation(line: 1518, column: 4, scope: !4417)
!4421 = !DILocation(line: 1519, column: 19, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4423, file: !2321, line: 1518, column: 39)
!4423 = distinct !DILexicalBlock(scope: !4418, file: !2321, line: 1518, column: 15)
!4424 = !DILocation(line: 1519, column: 17, scope: !4422)
!4425 = !DILocation(line: 1520, column: 4, scope: !4422)
!4426 = !DILocation(line: 1522, column: 4, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !2321, line: 1521, column: 47)
!4428 = distinct !DILexicalBlock(scope: !4394, file: !2321, line: 1521, column: 14)
!4429 = !DILocation(line: 1527, column: 19, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4427, file: !2321, line: 1522, column: 24)
!4431 = !DILocation(line: 1527, column: 17, scope: !4430)
!4432 = !DILocation(line: 1528, column: 5, scope: !4430)
!4433 = !DILocation(line: 0, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4430, file: !2321, line: 1530, column: 9)
!4435 = !DILocation(line: 1540, column: 23, scope: !4430)
!4436 = !DILocation(line: 1539, column: 17, scope: !4430)
!4437 = !DILocation(line: 1542, column: 5, scope: !4430)
!4438 = !DILocation(line: 1545, column: 23, scope: !4430)
!4439 = !DILocation(line: 1544, column: 17, scope: !4430)
!4440 = !DILocation(line: 1547, column: 5, scope: !4430)
!4441 = !DILocation(line: 1551, column: 23, scope: !4430)
!4442 = !DILocation(line: 1551, column: 6, scope: !4430)
!4443 = !DILocation(line: 1550, column: 17, scope: !4430)
!4444 = !DILocation(line: 1552, column: 5, scope: !4430)
!4445 = !DILocation(line: 0, scope: !4430)
!4446 = !DILocation(line: 1554, column: 8, scope: !4427)
!4447 = !DILocation(line: 1555, column: 19, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !2321, line: 1554, column: 33)
!4449 = distinct !DILexicalBlock(scope: !4427, file: !2321, line: 1554, column: 8)
!4450 = !DILocation(line: 1555, column: 17, scope: !4448)
!4451 = !DILocation(line: 1556, column: 4, scope: !4448)
!4452 = !DILocation(line: 1557, column: 19, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !2321, line: 1556, column: 39)
!4454 = distinct !DILexicalBlock(scope: !4449, file: !2321, line: 1556, column: 15)
!4455 = !DILocation(line: 1557, column: 17, scope: !4453)
!4456 = !DILocation(line: 1558, column: 4, scope: !4453)
!4457 = !DILocation(line: 0, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !2321, line: 1560, column: 8)
!4459 = distinct !DILexicalBlock(scope: !4460, file: !2321, line: 1559, column: 45)
!4460 = distinct !DILexicalBlock(scope: !4428, file: !2321, line: 1559, column: 14)
!4461 = !DILocation(line: 1566, column: 17, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !2321, line: 1565, column: 46)
!4463 = distinct !DILexicalBlock(scope: !4460, file: !2321, line: 1565, column: 14)
!4464 = !DILocation(line: 1566, column: 15, scope: !4462)
!4465 = !DILocation(line: 1567, column: 3, scope: !4462)
!4466 = !DILocation(line: 1574, column: 21, scope: !4295)
!4467 = !DILocation(line: 1575, column: 4, scope: !4293)
!4468 = !DILocation(line: 0, scope: !4293)
!4469 = !DILocation(line: 1575, column: 4, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4293, file: !2321, line: 1575, column: 4)
!4471 = !DILocation(line: 1582, column: 17, scope: !4229)
!4472 = !DILocation(line: 1582, column: 3, scope: !4229)
!4473 = !DILocation(line: 1584, column: 4, scope: !4297)
!4474 = !DILocation(line: 0, scope: !4297)
!4475 = !DILocation(line: 1584, column: 4, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4297, file: !2321, line: 1584, column: 4)
!4477 = !DILocation(line: 1587, column: 31, scope: !4300)
!4478 = !DILocation(line: 1591, column: 18, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4300, file: !2321, line: 1591, column: 8)
!4480 = !DILocation(line: 1591, column: 8, scope: !4300)
!4481 = !DILocation(line: 1592, column: 11, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4479, file: !2321, line: 1591, column: 24)
!4483 = !DILocation(line: 0, scope: !4300)
!4484 = !DILocation(line: 1593, column: 4, scope: !4482)
!4485 = !DILocation(line: 1594, column: 11, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4479, file: !2321, line: 1593, column: 11)
!4487 = !DILocation(line: 1604, column: 51, scope: !4298)
!4488 = !DILocation(line: 1604, column: 13, scope: !4298)
!4489 = !DILocation(line: 1604, column: 11, scope: !4298)
!4490 = !DILocation(line: 1606, column: 4, scope: !4298)
!4491 = !DILocation(line: 1609, column: 14, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4298, file: !2321, line: 1609, column: 8)
!4493 = !DILocation(line: 1609, column: 8, scope: !4298)
!4494 = !DILocation(line: 1619, column: 18, scope: !4298)
!4495 = !DILocation(line: 1620, column: 13, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4298, file: !2321, line: 1620, column: 8)
!4497 = !DILocation(line: 1620, column: 8, scope: !4298)
!4498 = !DILocation(line: 1622, column: 36, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4496, file: !2321, line: 1620, column: 18)
!4500 = !DILocation(line: 1622, column: 17, scope: !4499)
!4501 = !DILocation(line: 1623, column: 4, scope: !4499)
!4502 = !DILocation(line: 1632, column: 29, scope: !4298)
!4503 = !DILocation(line: 1632, column: 10, scope: !4298)
!4504 = !DILocation(line: 1632, column: 4, scope: !4298)
!4505 = !DILocation(line: 1407, column: 8, scope: !4229)
!4506 = !DILocation(line: 0, scope: !4298)
!4507 = !DILocation(line: 1634, column: 3, scope: !4298)
!4508 = !DILocation(line: 1640, column: 18, scope: !4303)
!4509 = !DILocation(line: 1640, column: 8, scope: !4298)
!4510 = !DILocation(line: 1729, column: 13, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1729, column: 7)
!4512 = !DILocation(line: 1641, column: 22, scope: !4302)
!4513 = !DILocation(line: 0, scope: !4302)
!4514 = !DILocation(line: 1646, column: 21, scope: !4302)
!4515 = !DILocation(line: 1649, column: 13, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4302, file: !2321, line: 1649, column: 9)
!4517 = !DILocation(line: 1649, column: 9, scope: !4302)
!4518 = !DILocation(line: 1650, column: 35, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4516, file: !2321, line: 1649, column: 34)
!4520 = !DILocation(line: 1650, column: 23, scope: !4519)
!4521 = !DILocation(line: 1651, column: 5, scope: !4519)
!4522 = !DILocation(line: 1660, column: 15, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4298, file: !2321, line: 1660, column: 8)
!4524 = !DILocation(line: 1660, column: 19, scope: !4523)
!4525 = !DILocation(line: 1660, column: 8, scope: !4298)
!4526 = !DILocation(line: 1661, column: 23, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4523, file: !2321, line: 1660, column: 28)
!4528 = !DILocation(line: 1661, column: 11, scope: !4527)
!4529 = !DILocation(line: 1665, column: 22, scope: !4527)
!4530 = !DILocation(line: 1666, column: 21, scope: !4527)
!4531 = !DILocation(line: 1668, column: 5, scope: !4527)
!4532 = !DILocation(line: 1677, column: 30, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !2321, line: 1676, column: 49)
!4534 = distinct !DILexicalBlock(scope: !4298, file: !2321, line: 1676, column: 8)
!4535 = !DILocation(line: 1677, column: 5, scope: !4533)
!4536 = !DILocation(line: 1680, column: 4, scope: !4298)
!4537 = !DILocation(line: 0, scope: !4479)
!4538 = !DILocation(line: 1597, column: 14, scope: !4300)
!4539 = !DILocation(line: 1699, column: 11, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1699, column: 7)
!4541 = !DILocation(line: 1699, column: 7, scope: !4229)
!4542 = !DILocation(line: 1725, column: 7, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1725, column: 7)
!4544 = !DILocation(line: 1725, column: 12, scope: !4543)
!4545 = !DILocation(line: 1747, column: 13, scope: !4310)
!4546 = !DILocation(line: 1747, column: 7, scope: !4229)
!4547 = !DILocation(line: 1722, column: 24, scope: !4229)
!4548 = !DILocation(line: 1725, column: 7, scope: !4229)
!4549 = !DILocation(line: 1729, column: 7, scope: !4229)
!4550 = !DILocation(line: 1736, column: 13, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4229, file: !2321, line: 1736, column: 7)
!4552 = !DILocation(line: 1735, column: 19, scope: !4229)
!4553 = !DILocation(line: 1736, column: 7, scope: !4229)
!4554 = !DILocation(line: 1748, column: 10, scope: !4309)
!4555 = !DILocation(line: 1750, column: 15, scope: !4308)
!4556 = !DILocation(line: 1750, column: 8, scope: !4309)
!4557 = !DILocation(line: 0, scope: !4307)
!4558 = !DILocation(line: 1756, column: 15, scope: !4316)
!4559 = !DILocation(line: 1756, column: 9, scope: !4307)
!4560 = !DILocation(line: 1758, column: 7, scope: !4312)
!4561 = !DILocation(line: 0, scope: !4312)
!4562 = !DILocation(line: 1758, column: 7, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4312, file: !2321, line: 1758, column: 7)
!4564 = !DILocation(line: 1764, column: 5, scope: !4307)
!4565 = !DILocation(line: 0, scope: !4309)
!4566 = !DILocation(line: 1764, column: 20, scope: !4307)
!4567 = !DILocation(line: 1764, column: 17, scope: !4307)
!4568 = !DILocation(line: 1765, column: 6, scope: !4318)
!4569 = !DILocation(line: 0, scope: !4318)
!4570 = !DILocation(line: 1765, column: 6, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4318, file: !2321, line: 1765, column: 6)
!4572 = distinct !{!4572, !4564, !4573}
!4573 = !DILocation(line: 1766, column: 5, scope: !4307)
!4574 = !DILocation(line: 1773, column: 12, scope: !4323)
!4575 = !DILocation(line: 1773, column: 7, scope: !4229)
!4576 = !DILocation(line: 1773, column: 7, scope: !4323)
!4577 = !DILocation(line: 1774, column: 4, scope: !4321)
!4578 = !DILocation(line: 0, scope: !4321)
!4579 = !DILocation(line: 1774, column: 4, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4321, file: !2321, line: 1774, column: 4)
!4581 = !DILocation(line: 1818, column: 8, scope: !4327)
!4582 = !DILocation(line: 1818, column: 27, scope: !4327)
!4583 = !DILocation(line: 1818, column: 25, scope: !4327)
!4584 = !DILocation(line: 1818, column: 8, scope: !4328)
!4585 = !DILocation(line: 1819, column: 5, scope: !4325)
!4586 = !DILocation(line: 0, scope: !4325)
!4587 = !DILocation(line: 1819, column: 5, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4325, file: !2321, line: 1819, column: 5)
!4589 = !DILocation(line: 1822, column: 14, scope: !4333)
!4590 = !DILocation(line: 1822, column: 8, scope: !4328)
!4591 = !DILocation(line: 1823, column: 5, scope: !4331)
!4592 = !DILocation(line: 0, scope: !4331)
!4593 = !DILocation(line: 1823, column: 5, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4331, file: !2321, line: 1823, column: 5)
!4595 = !DILocation(line: 1826, column: 20, scope: !4328)
!4596 = !DILocation(line: 1827, column: 4, scope: !4328)
!4597 = !DILocation(line: 0, scope: !4328)
!4598 = !DILocation(line: 1827, column: 21, scope: !4328)
!4599 = !DILocation(line: 1827, column: 18, scope: !4328)
!4600 = !DILocation(line: 1828, column: 5, scope: !4335)
!4601 = !DILocation(line: 0, scope: !4335)
!4602 = !DILocation(line: 1828, column: 5, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4335, file: !2321, line: 1828, column: 5)
!4604 = distinct !{!4604, !4596, !4605}
!4605 = !DILocation(line: 1829, column: 4, scope: !4328)
!4606 = !DILocation(line: 1831, column: 4, scope: !4338)
!4607 = !DILocation(line: 0, scope: !4338)
!4608 = !DILocation(line: 1831, column: 4, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4338, file: !2321, line: 1831, column: 4)
!4610 = !DILocation(line: 1835, column: 16, scope: !4229)
!4611 = !DILocation(line: 1835, column: 3, scope: !4229)
!4612 = !DILocation(line: 1836, column: 4, scope: !4340)
!4613 = !DILocation(line: 0, scope: !4340)
!4614 = !DILocation(line: 1836, column: 4, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4340, file: !2321, line: 1836, column: 4)
!4616 = !DILocation(line: 1837, column: 4, scope: !4341)
!4617 = distinct !{!4617, !4611, !4618}
!4618 = !DILocation(line: 1838, column: 3, scope: !4229)
!4619 = !DILocation(line: 1844, column: 1, scope: !4202)
!4620 = distinct !DISubprogram(name: "extract_conversion", scope: !2321, file: !2321, line: 642, type: !4621, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!574, !4277, !574}
!4623 = !{!4624, !4625}
!4624 = !DILocalVariable(name: "conv", arg: 1, scope: !4620, file: !2321, line: 642, type: !4277)
!4625 = !DILocalVariable(name: "sp", arg: 2, scope: !4620, file: !2321, line: 643, type: !574)
!4626 = !DILocation(line: 0, scope: !4620)
!4627 = !DILocation(line: 645, column: 10, scope: !4620)
!4628 = !DILocation(line: 653, column: 2, scope: !4620)
!4629 = !DILocation(line: 654, column: 6, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4620, file: !2321, line: 654, column: 6)
!4631 = !DILocation(line: 654, column: 10, scope: !4630)
!4632 = !DILocation(line: 654, column: 6, scope: !4620)
!4633 = !DILocation(line: 655, column: 24, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4630, file: !2321, line: 654, column: 18)
!4635 = !DILocation(line: 655, column: 19, scope: !4634)
!4636 = !DILocation(line: 656, column: 3, scope: !4634)
!4637 = !DILocation(line: 659, column: 7, scope: !4620)
!4638 = !DILocation(line: 660, column: 7, scope: !4620)
!4639 = !DILocation(line: 661, column: 7, scope: !4620)
!4640 = !DILocation(line: 662, column: 7, scope: !4620)
!4641 = !DILocation(line: 663, column: 7, scope: !4620)
!4642 = !DILocation(line: 665, column: 2, scope: !4620)
!4643 = !DILocation(line: 666, column: 1, scope: !4620)
!4644 = distinct !DISubprogram(name: "outs", scope: !2321, file: !2321, line: 1319, type: !4645, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4647)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!103, !3197, !102, !574, !574}
!4647 = !{!4648, !4649, !4650, !4651, !4652, !4653}
!4648 = !DILocalVariable(name: "out", arg: 1, scope: !4644, file: !2321, line: 1319, type: !3197)
!4649 = !DILocalVariable(name: "ctx", arg: 2, scope: !4644, file: !2321, line: 1320, type: !102)
!4650 = !DILocalVariable(name: "sp", arg: 3, scope: !4644, file: !2321, line: 1321, type: !574)
!4651 = !DILocalVariable(name: "ep", arg: 4, scope: !4644, file: !2321, line: 1322, type: !574)
!4652 = !DILocalVariable(name: "count", scope: !4644, file: !2321, line: 1324, type: !1714)
!4653 = !DILocalVariable(name: "rc", scope: !4654, file: !2321, line: 1327, type: !103)
!4654 = distinct !DILexicalBlock(scope: !4644, file: !2321, line: 1326, column: 45)
!4655 = !DILocation(line: 0, scope: !4644)
!4656 = !DILocation(line: 1326, column: 2, scope: !4644)
!4657 = !DILocation(line: 1324, column: 9, scope: !4644)
!4658 = !DILocation(line: 1326, column: 13, scope: !4644)
!4659 = !DILocation(line: 1326, column: 19, scope: !4644)
!4660 = !DILocation(line: 1327, column: 21, scope: !4654)
!4661 = !DILocation(line: 1326, column: 36, scope: !4644)
!4662 = !DILocation(line: 1326, column: 39, scope: !4644)
!4663 = !DILocation(line: 1327, column: 24, scope: !4654)
!4664 = !DILocation(line: 1327, column: 16, scope: !4654)
!4665 = !DILocation(line: 1327, column: 12, scope: !4654)
!4666 = !DILocation(line: 0, scope: !4654)
!4667 = !DILocation(line: 1329, column: 10, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4654, file: !2321, line: 1329, column: 7)
!4669 = !DILocation(line: 1329, column: 7, scope: !4654)
!4670 = distinct !{!4670, !4656, !4671}
!4671 = !DILocation(line: 1333, column: 2, scope: !4644)
!4672 = !DILocation(line: 1336, column: 1, scope: !4644)
!4673 = distinct !DISubprogram(name: "encode_uint", scope: !2321, file: !2321, line: 788, type: !4674, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4676)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{!869, !2343, !4277, !869, !574}
!4676 = !{!4677, !4678, !4679, !4680, !4681, !4682, !4684, !4685}
!4677 = !DILocalVariable(name: "value", arg: 1, scope: !4673, file: !2321, line: 788, type: !2343)
!4678 = !DILocalVariable(name: "conv", arg: 2, scope: !4673, file: !2321, line: 789, type: !4277)
!4679 = !DILocalVariable(name: "bps", arg: 3, scope: !4673, file: !2321, line: 790, type: !869)
!4680 = !DILocalVariable(name: "bpe", arg: 4, scope: !4673, file: !2321, line: 791, type: !574)
!4681 = !DILocalVariable(name: "upcase", scope: !4673, file: !2321, line: 793, type: !583)
!4682 = !DILocalVariable(name: "radix", scope: !4673, file: !2321, line: 794, type: !4683)
!4683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4684 = !DILocalVariable(name: "bp", scope: !4673, file: !2321, line: 795, type: !869)
!4685 = !DILocalVariable(name: "lsv", scope: !4686, file: !2321, line: 798, type: !32)
!4686 = distinct !DILexicalBlock(scope: !4673, file: !2321, line: 797, column: 5)
!4687 = !DILocation(line: 0, scope: !4673)
!4688 = !DILocation(line: 793, column: 35, scope: !4673)
!4689 = !DILocation(line: 793, column: 24, scope: !4673)
!4690 = !DILocation(line: 793, column: 16, scope: !4673)
!4691 = !DILocation(line: 794, column: 29, scope: !4673)
!4692 = !DILocation(line: 795, column: 24, scope: !4673)
!4693 = !DILocation(line: 795, column: 17, scope: !4673)
!4694 = !DILocation(line: 797, column: 2, scope: !4673)
!4695 = !DILocation(line: 802, column: 9, scope: !4686)
!4696 = !DILocation(line: 798, column: 22, scope: !4686)
!4697 = !DILocation(line: 0, scope: !4686)
!4698 = !DILocation(line: 800, column: 16, scope: !4686)
!4699 = !DILocation(line: 800, column: 11, scope: !4686)
!4700 = !DILocation(line: 800, column: 4, scope: !4686)
!4701 = !DILocation(line: 800, column: 9, scope: !4686)
!4702 = !DILocation(line: 803, column: 18, scope: !4673)
!4703 = !DILocation(line: 803, column: 24, scope: !4673)
!4704 = !DILocation(line: 803, column: 2, scope: !4686)
!4705 = distinct !{!4705, !4694, !4706}
!4706 = !DILocation(line: 803, column: 37, scope: !4673)
!4707 = !DILocation(line: 808, column: 12, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4673, file: !2321, line: 808, column: 6)
!4709 = !DILocation(line: 808, column: 6, scope: !4673)
!4710 = !DILocation(line: 809, column: 7, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4708, file: !2321, line: 808, column: 23)
!4712 = !DILocation(line: 813, column: 3, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2321, line: 811, column: 27)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2321, line: 811, column: 14)
!4715 = distinct !DILexicalBlock(scope: !4711, file: !2321, line: 809, column: 7)
!4716 = !DILocation(line: 0, scope: !4715)
!4717 = !DILocation(line: 818, column: 2, scope: !4673)
!4718 = distinct !DISubprogram(name: "store_count", scope: !2321, file: !2321, line: 1280, type: !4719, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4723)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{null, !4721, !102, !103}
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 32)
!4722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4244)
!4723 = !{!4724, !4725, !4726}
!4724 = !DILocalVariable(name: "conv", arg: 1, scope: !4718, file: !2321, line: 1280, type: !4721)
!4725 = !DILocalVariable(name: "dp", arg: 2, scope: !4718, file: !2321, line: 1281, type: !102)
!4726 = !DILocalVariable(name: "count", arg: 3, scope: !4718, file: !2321, line: 1282, type: !103)
!4727 = !DILocation(line: 0, scope: !4718)
!4728 = !DILocation(line: 1284, column: 38, scope: !4718)
!4729 = !DILocation(line: 1284, column: 2, scope: !4718)
!4730 = !DILocation(line: 1286, column: 4, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4718, file: !2321, line: 1284, column: 50)
!4732 = !DILocation(line: 1286, column: 14, scope: !4731)
!4733 = !DILocation(line: 1287, column: 3, scope: !4731)
!4734 = !DILocation(line: 1289, column: 24, scope: !4731)
!4735 = !DILocation(line: 1289, column: 22, scope: !4731)
!4736 = !DILocation(line: 1290, column: 3, scope: !4731)
!4737 = !DILocation(line: 1292, column: 18, scope: !4731)
!4738 = !DILocation(line: 1292, column: 4, scope: !4731)
!4739 = !DILocation(line: 1292, column: 16, scope: !4731)
!4740 = !DILocation(line: 1293, column: 3, scope: !4731)
!4741 = !DILocation(line: 1295, column: 4, scope: !4731)
!4742 = !DILocation(line: 1295, column: 15, scope: !4731)
!4743 = !DILocation(line: 1296, column: 3, scope: !4731)
!4744 = !DILocation(line: 1298, column: 22, scope: !4731)
!4745 = !DILocation(line: 1298, column: 4, scope: !4731)
!4746 = !DILocation(line: 1298, column: 20, scope: !4731)
!4747 = !DILocation(line: 1299, column: 3, scope: !4731)
!4748 = !DILocation(line: 1301, column: 21, scope: !4731)
!4749 = !DILocation(line: 1301, column: 4, scope: !4731)
!4750 = !DILocation(line: 1301, column: 19, scope: !4731)
!4751 = !DILocation(line: 1302, column: 3, scope: !4731)
!4752 = !DILocation(line: 1304, column: 4, scope: !4731)
!4753 = !DILocation(line: 1304, column: 17, scope: !4731)
!4754 = !DILocation(line: 1305, column: 3, scope: !4731)
!4755 = !DILocation(line: 1307, column: 4, scope: !4731)
!4756 = !DILocation(line: 1307, column: 20, scope: !4731)
!4757 = !DILocation(line: 1308, column: 3, scope: !4731)
!4758 = !DILocation(line: 1316, column: 1, scope: !4718)
!4759 = distinct !DISubprogram(name: "isupper", scope: !4760, file: !4760, line: 16, type: !118, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4761)
!4760 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4761 = !{!4762}
!4762 = !DILocalVariable(name: "a", arg: 1, scope: !4759, file: !4760, line: 16, type: !103)
!4763 = !DILocation(line: 0, scope: !4759)
!4764 = !DILocation(line: 18, column: 29, scope: !4759)
!4765 = !DILocation(line: 18, column: 45, scope: !4759)
!4766 = !DILocation(line: 18, column: 2, scope: !4759)
!4767 = distinct !DISubprogram(name: "conversion_radix", scope: !2321, file: !2321, line: 761, type: !4768, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4770)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{!1714, !108}
!4770 = !{!4771}
!4771 = !DILocalVariable(name: "specifier", arg: 1, scope: !4767, file: !2321, line: 761, type: !108)
!4772 = !DILocation(line: 0, scope: !4767)
!4773 = !DILocation(line: 763, column: 2, scope: !4767)
!4774 = !DILocation(line: 770, column: 3, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4767, file: !2321, line: 763, column: 21)
!4776 = !DILocation(line: 774, column: 3, scope: !4775)
!4777 = !DILocation(line: 0, scope: !4775)
!4778 = !DILocation(line: 776, column: 1, scope: !4767)
!4779 = distinct !DISubprogram(name: "extract_flags", scope: !2321, file: !2321, line: 339, type: !4621, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4780)
!4780 = !{!4781, !4782, !4783}
!4781 = !DILocalVariable(name: "conv", arg: 1, scope: !4779, file: !2321, line: 339, type: !4277)
!4782 = !DILocalVariable(name: "sp", arg: 2, scope: !4779, file: !2321, line: 340, type: !574)
!4783 = !DILocalVariable(name: "loop", scope: !4779, file: !2321, line: 342, type: !583)
!4784 = !DILocation(line: 0, scope: !4779)
!4785 = !DILocation(line: 344, column: 2, scope: !4779)
!4786 = !DILocation(line: 345, column: 11, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4779, file: !2321, line: 344, column: 5)
!4788 = !DILocation(line: 345, column: 3, scope: !4787)
!4789 = !DILocation(line: 351, column: 4, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4787, file: !2321, line: 345, column: 16)
!4791 = !DILocation(line: 354, column: 4, scope: !4790)
!4792 = !DILocation(line: 357, column: 4, scope: !4790)
!4793 = !DILocation(line: 360, column: 4, scope: !4790)
!4794 = !DILocation(line: 0, scope: !4790)
!4795 = !DILocation(line: 370, column: 12, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4779, file: !2321, line: 370, column: 6)
!4797 = !DILocation(line: 370, column: 22, scope: !4796)
!4798 = !DILocation(line: 371, column: 19, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4796, file: !2321, line: 370, column: 42)
!4800 = !DILocation(line: 372, column: 2, scope: !4799)
!4801 = !DILocation(line: 376, column: 2, scope: !4779)
!4802 = distinct !DISubprogram(name: "extract_width", scope: !2321, file: !2321, line: 388, type: !4621, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4803)
!4803 = !{!4804, !4805, !4806, !4807}
!4804 = !DILocalVariable(name: "conv", arg: 1, scope: !4802, file: !2321, line: 388, type: !4277)
!4805 = !DILocalVariable(name: "sp", arg: 2, scope: !4802, file: !2321, line: 389, type: !574)
!4806 = !DILocalVariable(name: "wp", scope: !4802, file: !2321, line: 398, type: !574)
!4807 = !DILocalVariable(name: "width", scope: !4802, file: !2321, line: 399, type: !1714)
!4808 = !DILocation(line: 0, scope: !4802)
!4809 = !DILocation(line: 391, column: 8, scope: !4802)
!4810 = !DILocation(line: 391, column: 22, scope: !4802)
!4811 = !DILocation(line: 393, column: 6, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4802, file: !2321, line: 393, column: 6)
!4813 = !DILocation(line: 393, column: 10, scope: !4812)
!4814 = !DILocation(line: 393, column: 6, scope: !4802)
!4815 = !DILocation(line: 394, column: 20, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4812, file: !2321, line: 393, column: 18)
!4817 = !DILocation(line: 395, column: 10, scope: !4816)
!4818 = !DILocation(line: 395, column: 3, scope: !4816)
!4819 = !DILocation(line: 399, column: 17, scope: !4802)
!4820 = !DILocation(line: 401, column: 6, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4802, file: !2321, line: 401, column: 6)
!4822 = !DILocation(line: 401, column: 9, scope: !4821)
!4823 = !DILocation(line: 401, column: 6, scope: !4802)
!4824 = !DILocation(line: 402, column: 23, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4821, file: !2321, line: 401, column: 16)
!4826 = !DILocation(line: 403, column: 9, scope: !4825)
!4827 = !DILocation(line: 403, column: 21, scope: !4825)
!4828 = !DILocation(line: 405, column: 11, scope: !4825)
!4829 = !DILocation(line: 404, column: 21, scope: !4825)
!4830 = !DILocation(line: 406, column: 2, scope: !4825)
!4831 = !DILocation(line: 409, column: 1, scope: !4802)
!4832 = distinct !DISubprogram(name: "extract_prec", scope: !2321, file: !2321, line: 420, type: !4621, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4833)
!4833 = !{!4834, !4835, !4836}
!4834 = !DILocalVariable(name: "conv", arg: 1, scope: !4832, file: !2321, line: 420, type: !4277)
!4835 = !DILocalVariable(name: "sp", arg: 2, scope: !4832, file: !2321, line: 421, type: !574)
!4836 = !DILocalVariable(name: "prec", scope: !4832, file: !2321, line: 435, type: !1714)
!4837 = !DILocation(line: 0, scope: !4832)
!4838 = !DILocation(line: 423, column: 24, scope: !4832)
!4839 = !DILocation(line: 423, column: 28, scope: !4832)
!4840 = !DILocation(line: 423, column: 8, scope: !4832)
!4841 = !DILocation(line: 423, column: 21, scope: !4832)
!4842 = !DILocation(line: 425, column: 6, scope: !4832)
!4843 = !DILocation(line: 428, column: 2, scope: !4832)
!4844 = !DILocation(line: 430, column: 6, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4832, file: !2321, line: 430, column: 6)
!4846 = !DILocation(line: 430, column: 10, scope: !4845)
!4847 = !DILocation(line: 430, column: 6, scope: !4832)
!4848 = !DILocation(line: 431, column: 19, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4845, file: !2321, line: 430, column: 18)
!4850 = !DILocation(line: 432, column: 10, scope: !4849)
!4851 = !DILocation(line: 432, column: 3, scope: !4849)
!4852 = !DILocation(line: 435, column: 16, scope: !4832)
!4853 = !DILocation(line: 437, column: 8, scope: !4832)
!4854 = !DILocation(line: 437, column: 19, scope: !4832)
!4855 = !DILocation(line: 439, column: 10, scope: !4832)
!4856 = !DILocation(line: 438, column: 20, scope: !4832)
!4857 = !DILocation(line: 441, column: 9, scope: !4832)
!4858 = !DILocation(line: 442, column: 1, scope: !4832)
!4859 = distinct !DISubprogram(name: "extract_length", scope: !2321, file: !2321, line: 453, type: !4621, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4860)
!4860 = !{!4861, !4862}
!4861 = !DILocalVariable(name: "conv", arg: 1, scope: !4859, file: !2321, line: 453, type: !4277)
!4862 = !DILocalVariable(name: "sp", arg: 2, scope: !4859, file: !2321, line: 454, type: !574)
!4863 = !DILocation(line: 0, scope: !4859)
!4864 = !DILocation(line: 456, column: 10, scope: !4859)
!4865 = !DILocation(line: 456, column: 2, scope: !4859)
!4866 = !DILocation(line: 458, column: 8, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !2321, line: 458, column: 7)
!4868 = distinct !DILexicalBlock(scope: !4859, file: !2321, line: 456, column: 15)
!4869 = !DILocation(line: 458, column: 7, scope: !4867)
!4870 = !DILocation(line: 458, column: 13, scope: !4867)
!4871 = !DILocation(line: 0, scope: !4867)
!4872 = !DILocation(line: 458, column: 7, scope: !4868)
!4873 = !DILocation(line: 459, column: 21, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4867, file: !2321, line: 458, column: 21)
!4875 = !DILocation(line: 460, column: 4, scope: !4874)
!4876 = !DILocation(line: 461, column: 3, scope: !4874)
!4877 = !DILocation(line: 462, column: 21, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4867, file: !2321, line: 461, column: 10)
!4879 = !DILocation(line: 466, column: 8, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4868, file: !2321, line: 466, column: 7)
!4881 = !DILocation(line: 466, column: 7, scope: !4880)
!4882 = !DILocation(line: 466, column: 13, scope: !4880)
!4883 = !DILocation(line: 0, scope: !4880)
!4884 = !DILocation(line: 466, column: 7, scope: !4868)
!4885 = !DILocation(line: 467, column: 21, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4880, file: !2321, line: 466, column: 21)
!4887 = !DILocation(line: 468, column: 4, scope: !4886)
!4888 = !DILocation(line: 469, column: 3, scope: !4886)
!4889 = !DILocation(line: 470, column: 21, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4880, file: !2321, line: 469, column: 10)
!4891 = !DILocation(line: 474, column: 9, scope: !4868)
!4892 = !DILocation(line: 474, column: 20, scope: !4868)
!4893 = !DILocation(line: 475, column: 3, scope: !4868)
!4894 = !DILocation(line: 476, column: 3, scope: !4868)
!4895 = !DILocation(line: 478, column: 9, scope: !4868)
!4896 = !DILocation(line: 478, column: 20, scope: !4868)
!4897 = !DILocation(line: 479, column: 3, scope: !4868)
!4898 = !DILocation(line: 480, column: 3, scope: !4868)
!4899 = !DILocation(line: 482, column: 9, scope: !4868)
!4900 = !DILocation(line: 482, column: 20, scope: !4868)
!4901 = !DILocation(line: 483, column: 3, scope: !4868)
!4902 = !DILocation(line: 484, column: 3, scope: !4868)
!4903 = !DILocation(line: 486, column: 9, scope: !4868)
!4904 = !DILocation(line: 486, column: 20, scope: !4868)
!4905 = !DILocation(line: 487, column: 3, scope: !4868)
!4906 = !DILocation(line: 492, column: 21, scope: !4868)
!4907 = !DILocation(line: 493, column: 3, scope: !4868)
!4908 = !DILocation(line: 495, column: 9, scope: !4868)
!4909 = !DILocation(line: 495, column: 20, scope: !4868)
!4910 = !DILocation(line: 496, column: 3, scope: !4868)
!4911 = !DILocation(line: 498, column: 2, scope: !4859)
!4912 = distinct !DISubprogram(name: "extract_specifier", scope: !2321, file: !2321, line: 513, type: !4621, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4913)
!4913 = !{!4914, !4915, !4916, !4917}
!4914 = !DILocalVariable(name: "conv", arg: 1, scope: !4912, file: !2321, line: 513, type: !4277)
!4915 = !DILocalVariable(name: "sp", arg: 2, scope: !4912, file: !2321, line: 514, type: !574)
!4916 = !DILocalVariable(name: "unsupported", scope: !4912, file: !2321, line: 516, type: !583)
!4917 = !DILabel(scope: !4918, name: "int_conv", file: !2321, line: 526)
!4918 = distinct !DILexicalBlock(scope: !4912, file: !2321, line: 520, column: 27)
!4919 = !DILocation(line: 0, scope: !4912)
!4920 = !DILocation(line: 518, column: 20, scope: !4912)
!4921 = !DILocation(line: 518, column: 8, scope: !4912)
!4922 = !DILocation(line: 518, column: 18, scope: !4912)
!4923 = !DILocation(line: 520, column: 2, scope: !4912)
!4924 = !DILocation(line: 525, column: 3, scope: !4918)
!4925 = !DILocation(line: 0, scope: !4918)
!4926 = !DILocation(line: 526, column: 1, scope: !4918)
!4927 = !DILocation(line: 528, column: 24, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4918, file: !2321, line: 528, column: 7)
!4929 = !DILocation(line: 528, column: 7, scope: !4918)
!4930 = !DILocation(line: 535, column: 23, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4918, file: !2321, line: 535, column: 7)
!4932 = !DILocation(line: 535, column: 7, scope: !4918)
!4933 = !DILocation(line: 536, column: 36, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4931, file: !2321, line: 535, column: 31)
!4935 = !DILocation(line: 537, column: 3, scope: !4934)
!4936 = !DILocation(line: 570, column: 9, scope: !4918)
!4937 = !DILocation(line: 570, column: 23, scope: !4918)
!4938 = !DILocation(line: 575, column: 4, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4940, file: !2321, line: 573, column: 48)
!4940 = distinct !DILexicalBlock(scope: !4918, file: !2321, line: 573, column: 7)
!4941 = !DILocation(line: 603, column: 9, scope: !4918)
!4942 = !DILocation(line: 603, column: 23, scope: !4918)
!4943 = !DILocation(line: 605, column: 24, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4918, file: !2321, line: 605, column: 7)
!4945 = !DILocation(line: 605, column: 7, scope: !4918)
!4946 = !DILocation(line: 612, column: 9, scope: !4918)
!4947 = !DILocation(line: 612, column: 23, scope: !4918)
!4948 = !DILocation(line: 619, column: 24, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4918, file: !2321, line: 619, column: 7)
!4950 = !DILocation(line: 619, column: 7, scope: !4918)
!4951 = !DILocation(line: 625, column: 9, scope: !4918)
!4952 = !DILocation(line: 625, column: 17, scope: !4918)
!4953 = !DILocation(line: 626, column: 3, scope: !4918)
!4954 = !DILocation(line: 629, column: 20, scope: !4912)
!4955 = !DILocation(line: 629, column: 8, scope: !4912)
!4956 = !DILocation(line: 518, column: 23, scope: !4912)
!4957 = !DILocation(line: 631, column: 2, scope: !4912)
!4958 = distinct !DISubprogram(name: "extract_decimal", scope: !2321, file: !2321, line: 318, type: !4959, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4962)
!4959 = !DISubroutineType(types: !4960)
!4960 = !{!1714, !4961}
!4961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!4962 = !{!4963, !4964, !4965}
!4963 = !DILocalVariable(name: "str", arg: 1, scope: !4958, file: !2321, line: 318, type: !4961)
!4964 = !DILocalVariable(name: "sp", scope: !4958, file: !2321, line: 320, type: !574)
!4965 = !DILocalVariable(name: "val", scope: !4958, file: !2321, line: 321, type: !1714)
!4966 = !DILocation(line: 0, scope: !4958)
!4967 = !DILocation(line: 320, column: 19, scope: !4958)
!4968 = !DILocation(line: 323, column: 37, scope: !4958)
!4969 = !DILocation(line: 323, column: 17, scope: !4958)
!4970 = !DILocation(line: 323, column: 9, scope: !4958)
!4971 = !DILocation(line: 323, column: 2, scope: !4958)
!4972 = !DILocation(line: 324, column: 13, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4958, file: !2321, line: 323, column: 43)
!4974 = !DILocation(line: 324, column: 24, scope: !4973)
!4975 = !DILocation(line: 324, column: 19, scope: !4973)
!4976 = !DILocation(line: 324, column: 27, scope: !4973)
!4977 = distinct !{!4977, !4971, !4978}
!4978 = !DILocation(line: 325, column: 2, scope: !4958)
!4979 = !DILocation(line: 326, column: 7, scope: !4958)
!4980 = !DILocation(line: 327, column: 2, scope: !4958)
!4981 = distinct !DISubprogram(name: "isdigit", scope: !4760, file: !4760, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4982)
!4982 = !{!4983}
!4983 = !DILocalVariable(name: "a", arg: 1, scope: !4981, file: !4760, line: 43, type: !103)
!4984 = !DILocation(line: 0, scope: !4981)
!4985 = !DILocation(line: 45, column: 29, scope: !4981)
!4986 = !DILocation(line: 45, column: 45, scope: !4981)
!4987 = !DILocation(line: 45, column: 2, scope: !4981)
!4988 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4989, file: !4989, line: 9, type: !3019, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2354, retainedNodes: !842)
!4989 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!4990 = !DILocation(line: 11, column: 1, scope: !4988)
!4991 = !{i64 2147556410, i64 2147556453, i64 2147556493}
!4992 = !DILocation(line: 12, column: 1, scope: !4988)
!4993 = !{i64 2147560637, i64 2147560680, i64 2147560720}
!4994 = !DILocation(line: 13, column: 1, scope: !4988)
!4995 = !{i64 2147560846, i64 2147560889, i64 2147560929}
!4996 = !DILocation(line: 14, column: 1, scope: !4988)
!4997 = !{i64 2147561063, i64 2147561106, i64 2147561146}
!4998 = !DILocation(line: 15, column: 1, scope: !4988)
!4999 = !{i64 2147561232, i64 2147561275, i64 2147561315}
!5000 = !DILocation(line: 16, column: 1, scope: !4988)
!5001 = !{i64 2147561417, i64 2147561460, i64 2147561500}
!5002 = !DILocation(line: 17, column: 1, scope: !4988)
!5003 = !{i64 2147561634, i64 2147561677, i64 2147561717}
!5004 = !DILocation(line: 18, column: 1, scope: !4988)
!5005 = !{i64 2147561797, i64 2147561840, i64 2147561880}
!5006 = !DILocation(line: 19, column: 1, scope: !4988)
!5007 = !{i64 2147561981, i64 2147562024, i64 2147562064}
!5008 = !DILocation(line: 20, column: 1, scope: !4988)
!5009 = !{i64 2147562161, i64 2147562204, i64 2147562244}
!5010 = !DILocation(line: 21, column: 1, scope: !4988)
!5011 = !{i64 2147562404, i64 2147562447, i64 2147562487}
!5012 = !DILocation(line: 22, column: 1, scope: !4988)
!5013 = !{i64 2147562640, i64 2147562683, i64 2147562723}
!5014 = !DILocation(line: 23, column: 1, scope: !4988)
!5015 = !{i64 2147562843, i64 2147562886, i64 2147562926}
!5016 = !DILocation(line: 24, column: 1, scope: !4988)
!5017 = !{i64 2147563046, i64 2147563089, i64 2147563129}
!5018 = !DILocation(line: 25, column: 1, scope: !4988)
!5019 = !{i64 2147563245, i64 2147563288, i64 2147563328}
!5020 = !DILocation(line: 26, column: 1, scope: !4988)
!5021 = !{i64 2147563420, i64 2147563463, i64 2147563503}
!5022 = !DILocation(line: 27, column: 1, scope: !4988)
!5023 = !{i64 2147563628, i64 2147563671, i64 2147563711}
!5024 = !DILocation(line: 28, column: 1, scope: !4988)
!5025 = !{i64 2147563832, i64 2147563875, i64 2147563915}
!5026 = !DILocation(line: 29, column: 1, scope: !4988)
!5027 = !{i64 2147564025, i64 2147564068, i64 2147564108}
!5028 = !DILocation(line: 30, column: 1, scope: !4988)
!5029 = !{i64 2147564227, i64 2147564270, i64 2147564310}
!5030 = !DILocation(line: 31, column: 1, scope: !4988)
!5031 = !{i64 2147564454, i64 2147564497, i64 2147564537}
!5032 = !DILocation(line: 32, column: 1, scope: !4988)
!5033 = !{i64 2147564669, i64 2147564712, i64 2147564752}
!5034 = !DILocation(line: 33, column: 1, scope: !4988)
!5035 = !{i64 2147564856, i64 2147564899, i64 2147564939}
!5036 = !DILocation(line: 34, column: 1, scope: !4988)
!5037 = !{i64 2147565028, i64 2147565071, i64 2147565111}
!5038 = !DILocation(line: 35, column: 1, scope: !4988)
!5039 = !{i64 2147565230, i64 2147565273, i64 2147565313}
!5040 = !DILocation(line: 36, column: 1, scope: !4988)
!5041 = !{i64 2147565429, i64 2147565472, i64 2147565512}
!5042 = !DILocation(line: 37, column: 1, scope: !4988)
!5043 = !{i64 2147565604, i64 2147565647, i64 2147565687}
!5044 = !DILocation(line: 38, column: 1, scope: !4988)
!5045 = !{i64 2147565857, i64 2147565900, i64 2147565940}
!5046 = !DILocation(line: 39, column: 1, scope: !4988)
!5047 = !{i64 2147566095, i64 2147566138, i64 2147566178}
!5048 = !DILocation(line: 40, column: 1, scope: !4988)
!5049 = !{i64 2147566330, i64 2147566373, i64 2147566413}
!5050 = !DILocation(line: 41, column: 1, scope: !4988)
!5051 = !{i64 2147566556, i64 2147566599, i64 2147566639}
!5052 = !DILocation(line: 42, column: 1, scope: !4988)
!5053 = !{i64 2147566791, i64 2147566834, i64 2147566874}
!5054 = !DILocation(line: 43, column: 1, scope: !4988)
!5055 = !{i64 2147567026, i64 2147567069, i64 2147567109}
!5056 = !DILocation(line: 44, column: 1, scope: !4988)
!5057 = !{i64 2147567267, i64 2147567310, i64 2147567350}
!5058 = !DILocation(line: 45, column: 1, scope: !4988)
!5059 = !{i64 2147567502, i64 2147567545, i64 2147567585}
!5060 = !DILocation(line: 46, column: 1, scope: !4988)
!5061 = !{i64 2147567731, i64 2147567774, i64 2147567814}
!5062 = !DILocation(line: 47, column: 1, scope: !4988)
!5063 = !{i64 2147567966, i64 2147568009, i64 2147568049}
!5064 = !DILocation(line: 48, column: 1, scope: !4988)
!5065 = !{i64 2147568216, i64 2147568259, i64 2147568299}
!5066 = !DILocation(line: 49, column: 1, scope: !4988)
!5067 = !{i64 2147568445, i64 2147568488, i64 2147568528}
!5068 = !DILocation(line: 50, column: 1, scope: !4988)
!5069 = !{i64 2147568653, i64 2147568696, i64 2147568736}
!5070 = !DILocation(line: 51, column: 1, scope: !4988)
!5071 = !{i64 2147568864, i64 2147568907, i64 2147568947}
!5072 = !DILocation(line: 52, column: 1, scope: !4988)
!5073 = !{i64 2147569099, i64 2147569142, i64 2147569182}
!5074 = !DILocation(line: 53, column: 1, scope: !4988)
!5075 = !{i64 2147569328, i64 2147569371, i64 2147569411}
!5076 = !DILocation(line: 54, column: 1, scope: !4988)
!5077 = !{i64 2147573627, i64 2147573670, i64 2147573710}
!5078 = !DILocation(line: 55, column: 1, scope: !4988)
!5079 = !{i64 2147573859, i64 2147573902, i64 2147573942}
!5080 = !DILocation(line: 56, column: 1, scope: !4988)
!5081 = !{i64 2147574085, i64 2147574128, i64 2147574168}
!5082 = !DILocation(line: 57, column: 1, scope: !4988)
!5083 = !{i64 2147574302, i64 2147574345, i64 2147574385}
!5084 = !DILocation(line: 58, column: 1, scope: !4988)
!5085 = !{i64 2147574534, i64 2147574577, i64 2147574617}
!5086 = !DILocation(line: 59, column: 1, scope: !4988)
!5087 = !{i64 2147574760, i64 2147574803, i64 2147574843}
!5088 = !DILocation(line: 60, column: 1, scope: !4988)
!5089 = !{i64 2147574974, i64 2147575017, i64 2147575057}
!5090 = !DILocation(line: 61, column: 1, scope: !4988)
!5091 = !{i64 2147575194, i64 2147575237, i64 2147575277}
!5092 = !DILocation(line: 62, column: 1, scope: !4988)
!5093 = !{i64 2147575426, i64 2147575469, i64 2147575509}
!5094 = !DILocation(line: 63, column: 1, scope: !4988)
!5095 = !{i64 2147575634, i64 2147575677, i64 2147575717}
!5096 = !DILocation(line: 64, column: 1, scope: !4988)
!5097 = !{i64 2147575839, i64 2147575882, i64 2147575922}
!5098 = !DILocation(line: 65, column: 1, scope: !4988)
!5099 = !{i64 2147576056, i64 2147576099, i64 2147576139}
!5100 = !DILocation(line: 66, column: 1, scope: !4988)
!5101 = !{i64 2147576270, i64 2147576313, i64 2147576353}
!5102 = !DILocation(line: 67, column: 1, scope: !4988)
!5103 = !{i64 2147576496, i64 2147576539, i64 2147576579}
!5104 = !DILocation(line: 68, column: 1, scope: !4988)
!5105 = !{i64 2147576716, i64 2147576759, i64 2147576799}
!5106 = !DILocation(line: 69, column: 1, scope: !4988)
!5107 = !{i64 2147576921, i64 2147576964, i64 2147577004}
!5108 = !DILocation(line: 70, column: 1, scope: !4988)
!5109 = !{i64 2147577153, i64 2147577196, i64 2147577236}
!5110 = !DILocation(line: 71, column: 1, scope: !4988)
!5111 = !{i64 2147577388, i64 2147577431, i64 2147577471}
!5112 = !DILocation(line: 72, column: 1, scope: !4988)
!5113 = !{i64 2147577638, i64 2147577681, i64 2147577721}
!5114 = !DILocation(line: 73, column: 1, scope: !4988)
!5115 = !{i64 2147577888, i64 2147577931, i64 2147577971}
!5116 = !DILocation(line: 74, column: 1, scope: !4988)
!5117 = !{i64 2147578126, i64 2147578169, i64 2147578209}
!5118 = !DILocation(line: 75, column: 1, scope: !4988)
!5119 = !{i64 2147578337, i64 2147578380, i64 2147578420}
!5120 = !DILocation(line: 76, column: 1, scope: !4988)
!5121 = !{i64 2147578554, i64 2147578597, i64 2147578637}
!5122 = !DILocation(line: 77, column: 1, scope: !4988)
!5123 = !{i64 2147578750, i64 2147578793, i64 2147578833}
!5124 = !DILocation(line: 78, column: 1, scope: !4988)
!5125 = !{i64 2147578952, i64 2147578995, i64 2147579035}
!5126 = !DILocation(line: 79, column: 1, scope: !4988)
!5127 = !{i64 2147579139, i64 2147579182, i64 2147579222}
!5128 = !DILocation(line: 80, column: 1, scope: !4988)
!5129 = !{i64 2147579329, i64 2147579372, i64 2147579412}
!5130 = !DILocation(line: 81, column: 1, scope: !4988)
!5131 = !{i64 2147579516, i64 2147579559, i64 2147579599}
!5132 = !DILocation(line: 82, column: 1, scope: !4988)
!5133 = !{i64 2147579712, i64 2147579755, i64 2147579795}
!5134 = !DILocation(line: 83, column: 1, scope: !4988)
!5135 = !{i64 2147579908, i64 2147579951, i64 2147579991}
!5136 = !DILocation(line: 84, column: 1, scope: !4988)
!5137 = !{i64 2147580119, i64 2147580162, i64 2147580202}
!5138 = !DILocation(line: 85, column: 1, scope: !4988)
!5139 = !{i64 2147580327, i64 2147580370, i64 2147580410}
!5140 = !DILocation(line: 86, column: 1, scope: !4988)
!5141 = !{i64 2147580511, i64 2147580554, i64 2147580594}
!5142 = !DILocation(line: 87, column: 1, scope: !4988)
!5143 = !{i64 2147580707, i64 2147580750, i64 2147580790}
!5144 = !DILocation(line: 88, column: 1, scope: !4988)
!5145 = !{i64 2147580900, i64 2147580943, i64 2147580983}
!5146 = !DILocation(line: 89, column: 1, scope: !4988)
!5147 = !{i64 2147581147, i64 2147581190, i64 2147581230}
!5148 = !DILocation(line: 90, column: 1, scope: !4988)
!5149 = !{i64 2147581370, i64 2147581413, i64 2147581453}
!5150 = !DILocation(line: 91, column: 1, scope: !4988)
!5151 = !{i64 2147581536, i64 2147581579, i64 2147581619}
!5152 = !DILocation(line: 92, column: 1, scope: !4988)
!5153 = !{i64 2147581720, i64 2147581763, i64 2147581803}
!5154 = !DILocation(line: 93, column: 1, scope: !4988)
!5155 = !{i64 2147581910, i64 2147581953, i64 2147581993}
!5156 = !DILocation(line: 94, column: 1, scope: !4988)
!5157 = !{i64 2147582094, i64 2147582137, i64 2147582177}
!5158 = !DILocation(line: 95, column: 1, scope: !4988)
!5159 = !{i64 2147582308, i64 2147582351, i64 2147582391}
!5160 = !DILocation(line: 96, column: 1, scope: !4988)
!5161 = !{i64 2147586580, i64 2147586623, i64 2147586663}
!5162 = !DILocation(line: 97, column: 1, scope: !4988)
!5163 = !{i64 2147586803, i64 2147586846, i64 2147586886}
!5164 = !DILocation(line: 98, column: 1, scope: !4988)
!5165 = !{i64 2147586987, i64 2147587030, i64 2147587070}
!5166 = !DILocation(line: 99, column: 1, scope: !4988)
!5167 = !{i64 2147587153, i64 2147587196, i64 2147587236}
!5168 = !DILocation(line: 100, column: 1, scope: !4988)
!5169 = !{i64 2147587334, i64 2147587377, i64 2147587417}
!5170 = !DILocation(line: 101, column: 1, scope: !4988)
!5171 = !{i64 2147587527, i64 2147587570, i64 2147587610}
!5172 = !DILocation(line: 102, column: 1, scope: !4988)
!5173 = !{i64 2147587753, i64 2147587796, i64 2147587836}
!5174 = !DILocation(line: 103, column: 1, scope: !4988)
!5175 = !{i64 2147587967, i64 2147588010, i64 2147588050}
!5176 = !DILocation(line: 104, column: 1, scope: !4988)
!5177 = !{i64 2147588193, i64 2147588236, i64 2147588276}
!5178 = !DILocation(line: 105, column: 1, scope: !4988)
!5179 = !{i64 2147588410, i64 2147588453, i64 2147588493}
!5180 = !DILocation(line: 106, column: 1, scope: !4988)
!5181 = !{i64 2147588687, i64 2147588730, i64 2147588770}
!5182 = !DILocation(line: 107, column: 1, scope: !4988)
!5183 = !{i64 2147588913, i64 2147588956, i64 2147588996}
!5184 = !DILocation(line: 108, column: 1, scope: !4988)
!5185 = !{i64 2147589121, i64 2147589164, i64 2147589204}
!5186 = !DILocation(line: 109, column: 1, scope: !4988)
!5187 = !{i64 2147589317, i64 2147589360, i64 2147589400}
!5188 = !DILocation(line: 110, column: 1, scope: !4988)
!5189 = !{i64 2147589582, i64 2147589625, i64 2147589665}
!5190 = !DILocation(line: 111, column: 1, scope: !4988)
!5191 = !{i64 2147589796, i64 2147589839, i64 2147589879}
!5192 = !DILocation(line: 112, column: 1, scope: !4988)
!5193 = !{i64 2147589959, i64 2147590002, i64 2147590042}
!5194 = !DILocation(line: 113, column: 1, scope: !4988)
!5195 = !{i64 2147590146, i64 2147590189, i64 2147590229}
!5196 = !DILocation(line: 114, column: 1, scope: !4988)
!5197 = !{i64 2147590339, i64 2147590382, i64 2147590422}
!5198 = !DILocation(line: 115, column: 1, scope: !4988)
!5199 = !{i64 2147590521, i64 2147590564, i64 2147590604}
!5200 = !DILocation(line: 116, column: 1, scope: !4988)
!5201 = !{i64 2147590735, i64 2147590778, i64 2147590818}
!5202 = !DILocation(line: 117, column: 1, scope: !4988)
!5203 = !{i64 2147590934, i64 2147590977, i64 2147591017}
!5204 = !DILocation(line: 118, column: 1, scope: !4988)
!5205 = !{i64 2147591169, i64 2147591212, i64 2147591252}
!5206 = !DILocation(line: 119, column: 1, scope: !4988)
!5207 = !{i64 2147591419, i64 2147591462, i64 2147591502}
!5208 = !DILocation(line: 120, column: 1, scope: !4988)
!5209 = !{i64 2147591621, i64 2147591664, i64 2147591704}
!5210 = !DILocation(line: 121, column: 1, scope: !4988)
!5211 = !{i64 2147591844, i64 2147591887, i64 2147591927}
!5212 = !DILocation(line: 122, column: 1, scope: !4988)
!5213 = !{i64 2147592058, i64 2147592101, i64 2147592141}
!5214 = !DILocation(line: 123, column: 1, scope: !4988)
!5215 = !{i64 2147592302, i64 2147592345, i64 2147592385}
!5216 = !DILocation(line: 124, column: 1, scope: !4988)
!5217 = !{i64 2147592531, i64 2147592574, i64 2147592614}
!5218 = !DILocation(line: 125, column: 1, scope: !4988)
!5219 = !{i64 2147592757, i64 2147592800, i64 2147592840}
!5220 = !DILocation(line: 126, column: 1, scope: !4988)
!5221 = !{i64 2147593016, i64 2147593059, i64 2147593099}
!5222 = !DILocation(line: 127, column: 1, scope: !4988)
!5223 = !{i64 2147593236, i64 2147593279, i64 2147593319}
!5224 = !DILocation(line: 128, column: 1, scope: !4988)
!5225 = !{i64 2147593468, i64 2147593511, i64 2147593551}
!5226 = !DILocation(line: 129, column: 1, scope: !4988)
!5227 = !{i64 2147593709, i64 2147593752, i64 2147593792}
!5228 = !DILocation(line: 130, column: 1, scope: !4988)
!5229 = !{i64 2147593950, i64 2147593993, i64 2147594033}
!5230 = !DILocation(line: 131, column: 1, scope: !4988)
!5231 = !{i64 2147594173, i64 2147594216, i64 2147594256}
!5232 = !DILocation(line: 132, column: 1, scope: !4988)
!5233 = !{i64 2147594390, i64 2147594433, i64 2147594473}
!5234 = !DILocation(line: 133, column: 1, scope: !4988)
!5235 = !{i64 2147594631, i64 2147594674, i64 2147594714}
!5236 = !DILocation(line: 134, column: 1, scope: !4988)
!5237 = !{i64 2147594818, i64 2147594861, i64 2147594901}
!5238 = !DILocation(line: 135, column: 1, scope: !4988)
!5239 = !{i64 2147595047, i64 2147595090, i64 2147595130}
!5240 = !DILocation(line: 136, column: 1, scope: !4988)
!5241 = !{i64 2147599304, i64 2147599347, i64 2147599387}
!5242 = !DILocation(line: 137, column: 1, scope: !4988)
!5243 = !{i64 2147599516, i64 2147599559, i64 2147599599}
!5244 = !DILocation(line: 138, column: 1, scope: !4988)
!5245 = !{i64 2147599737, i64 2147599780, i64 2147599820}
!5246 = !DILocation(line: 139, column: 1, scope: !4988)
!5247 = !{i64 2147599951, i64 2147599994, i64 2147600034}
!5248 = !DILocation(line: 140, column: 1, scope: !4988)
!5249 = !{i64 2147600141, i64 2147600184, i64 2147600224}
!5250 = !DILocation(line: 141, column: 1, scope: !4988)
!5251 = !{i64 2147600340, i64 2147600383, i64 2147600423}
!5252 = !DILocation(line: 142, column: 1, scope: !4988)
!5253 = !{i64 2147600545, i64 2147600588, i64 2147600628}
!5254 = !DILocation(line: 143, column: 1, scope: !4988)
!5255 = !{i64 2147600765, i64 2147600808, i64 2147600848}
!5256 = !DILocation(line: 144, column: 1, scope: !4988)
!5257 = !{i64 2147600966, i64 2147601009, i64 2147601049}
!5258 = !DILocation(line: 145, column: 1, scope: !4988)
!5259 = !{i64 2147601165, i64 2147601208, i64 2147601248}
!5260 = !DILocation(line: 146, column: 1, scope: !4988)
!5261 = !{i64 2147601334, i64 2147601377, i64 2147601417}
!5262 = !DILocation(line: 147, column: 1, scope: !4988)
!5263 = !{i64 2147601518, i64 2147601561, i64 2147601601}
!5264 = !DILocation(line: 148, column: 1, scope: !4988)
!5265 = !{i64 2147601702, i64 2147601745, i64 2147601785}
!5266 = !DILocation(line: 149, column: 1, scope: !4988)
!5267 = !{i64 2147601889, i64 2147601932, i64 2147601972}
!5268 = !DILocation(line: 150, column: 1, scope: !4988)
!5269 = !{i64 2147602073, i64 2147602116, i64 2147602156}
!5270 = !DILocation(line: 151, column: 1, scope: !4988)
!5271 = !{i64 2147602311, i64 2147602354, i64 2147602394}
!5272 = !DILocation(line: 152, column: 1, scope: !4988)
!5273 = !{i64 2147602541, i64 2147602584, i64 2147602624}
!5274 = !DILocation(line: 153, column: 1, scope: !4988)
!5275 = !{i64 2147602770, i64 2147602813, i64 2147602853}
!5276 = !DILocation(line: 154, column: 1, scope: !4988)
!5277 = !{i64 2147602957, i64 2147603000, i64 2147603040}
!5278 = !DILocation(line: 155, column: 1, scope: !4988)
!5279 = !{i64 2147603153, i64 2147603196, i64 2147603236}
!5280 = !DILocation(line: 156, column: 1, scope: !4988)
!5281 = !{i64 2147603361, i64 2147603404, i64 2147603444}
!5282 = !DILocation(line: 157, column: 1, scope: !4988)
!5283 = !{i64 2147603573, i64 2147603616, i64 2147603656}
!5284 = !DILocation(line: 158, column: 1, scope: !4988)
!5285 = !{i64 2147603772, i64 2147603815, i64 2147603855}
!5286 = !DILocation(line: 159, column: 1, scope: !4988)
!5287 = !{i64 2147604010, i64 2147604053, i64 2147604093}
!5288 = !DILocation(line: 160, column: 1, scope: !4988)
!5289 = !{i64 2147604206, i64 2147604249, i64 2147604289}
!5290 = !DILocation(line: 161, column: 1, scope: !4988)
!5291 = !{i64 2147604408, i64 2147604451, i64 2147604491}
!5292 = !DILocation(line: 162, column: 1, scope: !4988)
!5293 = !{i64 2147604601, i64 2147604644, i64 2147604684}
!5294 = !DILocation(line: 163, column: 1, scope: !4988)
!5295 = !{i64 2147604835, i64 2147604878, i64 2147604918}
!5296 = !DILocation(line: 164, column: 1, scope: !4988)
!5297 = !{i64 2147604998, i64 2147605041, i64 2147605081}
!5298 = !DILocation(line: 165, column: 1, scope: !4988)
!5299 = !{i64 2147605237, i64 2147605280, i64 2147605320}
!5300 = !DILocation(line: 166, column: 1, scope: !4988)
!5301 = !{i64 2147605476, i64 2147605519, i64 2147605559}
!5302 = !DILocation(line: 167, column: 1, scope: !4988)
!5303 = !{i64 2147605712, i64 2147605755, i64 2147605795}
!5304 = !DILocation(line: 168, column: 1, scope: !4988)
!5305 = !{i64 2147605942, i64 2147605985, i64 2147606025}
!5306 = !DILocation(line: 169, column: 1, scope: !4988)
!5307 = !{i64 2147606129, i64 2147606172, i64 2147606212}
!5308 = !DILocation(line: 170, column: 1, scope: !4988)
!5309 = !{i64 2147606328, i64 2147606371, i64 2147606411}
!5310 = !DILocation(line: 171, column: 1, scope: !4988)
!5311 = !{i64 2147606599, i64 2147606642, i64 2147606682}
!5312 = !DILocation(line: 172, column: 1, scope: !4988)
!5313 = !{i64 2147606774, i64 2147606817, i64 2147606857}
!5314 = !DILocation(line: 173, column: 1, scope: !4988)
!5315 = !{i64 2147607008, i64 2147607051, i64 2147607091}
!5316 = !DILocation(line: 174, column: 1, scope: !4988)
!5317 = !{i64 2147607216, i64 2147607259, i64 2147607299}
!5318 = !DILocation(line: 175, column: 1, scope: !4988)
!5319 = !{i64 2147607415, i64 2147607458, i64 2147607498}
!5320 = !DILocation(line: 176, column: 1, scope: !4988)
!5321 = !{i64 2147607633, i64 2147607676, i64 2147607716}
!5322 = !DILocation(line: 177, column: 1, scope: !4988)
!5323 = !{i64 2147607823, i64 2147607866, i64 2147607906}
!5324 = !DILocation(line: 178, column: 1, scope: !4988)
!5325 = !{i64 2147608070, i64 2147608113, i64 2147608153}
!5326 = !DILocation(line: 179, column: 1, scope: !4988)
!5327 = !{i64 2147608266, i64 2147608309, i64 2147608349}
!5328 = !DILocation(line: 180, column: 1, scope: !4988)
!5329 = !{i64 2147612533, i64 2147612576, i64 2147612616}
!5330 = !DILocation(line: 181, column: 1, scope: !4988)
!5331 = !{i64 2147612738, i64 2147612781, i64 2147612821}
!5332 = !DILocation(line: 182, column: 1, scope: !4988)
!5333 = !{i64 2147612964, i64 2147613007, i64 2147613047}
!5334 = !DILocation(line: 183, column: 1, scope: !4988)
!5335 = !{i64 2147613196, i64 2147613239, i64 2147613279}
!5336 = !DILocation(line: 184, column: 1, scope: !4988)
!5337 = !{i64 2147613374, i64 2147613417, i64 2147613457}
!5338 = !DILocation(line: 185, column: 1, scope: !4988)
!5339 = !{i64 2147613583, i64 2147613626, i64 2147613666}
!5340 = !DILocation(line: 186, column: 1, scope: !4988)
!5341 = !{i64 2147613815, i64 2147613858, i64 2147613898}
!5342 = !DILocation(line: 187, column: 1, scope: !4988)
!5343 = !{i64 2147614017, i64 2147614060, i64 2147614100}
!5344 = !DILocation(line: 188, column: 1, scope: !4988)
!5345 = !{i64 2147614267, i64 2147614310, i64 2147614350}
!5346 = !DILocation(line: 189, column: 1, scope: !4988)
!5347 = !{i64 2147614505, i64 2147614548, i64 2147614588}
!5348 = !DILocation(line: 190, column: 1, scope: !4988)
!5349 = !{i64 2147614683, i64 2147614726, i64 2147614766}
!5350 = !DILocation(line: 191, column: 1, scope: !4988)
!5351 = !{i64 2147614897, i64 2147614940, i64 2147614980}
!5352 = !DILocation(line: 192, column: 1, scope: !4988)
!5353 = !{i64 2147615105, i64 2147615148, i64 2147615188}
!5354 = !DILocation(line: 193, column: 1, scope: !4988)
!5355 = !{i64 2147615295, i64 2147615338, i64 2147615378}
!5356 = !DILocation(line: 194, column: 1, scope: !4988)
!5357 = !{i64 2147615509, i64 2147615552, i64 2147615592}
!5358 = !DILocation(line: 195, column: 1, scope: !4988)
!5359 = !{i64 2147615771, i64 2147615814, i64 2147615854}
!5360 = !DILocation(line: 196, column: 1, scope: !4988)
!5361 = !{i64 2147615982, i64 2147616025, i64 2147616065}
!5362 = !DILocation(line: 197, column: 1, scope: !4988)
!5363 = !{i64 2147616226, i64 2147616269, i64 2147616309}
!5364 = !DILocation(line: 198, column: 1, scope: !4988)
!5365 = !{i64 2147616437, i64 2147616480, i64 2147616520}
!5366 = !DILocation(line: 199, column: 1, scope: !4988)
!5367 = !{i64 2147616666, i64 2147616709, i64 2147616749}
!5368 = !DILocation(line: 200, column: 1, scope: !4988)
!5369 = !{i64 2147616931, i64 2147616974, i64 2147617014}
!5370 = !DILocation(line: 201, column: 1, scope: !4988)
!5371 = !{i64 2147617136, i64 2147617179, i64 2147617219}
!5372 = !DILocation(line: 202, column: 1, scope: !4988)
!5373 = !{i64 2147617332, i64 2147617375, i64 2147617415}
!5374 = !DILocation(line: 203, column: 1, scope: !4988)
!5375 = !{i64 2147617555, i64 2147617598, i64 2147617638}
!5376 = !DILocation(line: 204, column: 1, scope: !4988)
!5377 = !{i64 2147617718, i64 2147617761, i64 2147617801}
!5378 = !DILocation(line: 205, column: 1, scope: !4988)
!5379 = !{i64 2147617923, i64 2147617966, i64 2147618006}
!5380 = !DILocation(line: 206, column: 1, scope: !4988)
!5381 = !{i64 2147618143, i64 2147618186, i64 2147618226}
!5382 = !DILocation(line: 207, column: 1, scope: !4988)
!5383 = !{i64 2147618357, i64 2147618400, i64 2147618440}
!5384 = !DILocation(line: 208, column: 1, scope: !4988)
!5385 = !{i64 2147618571, i64 2147618614, i64 2147618654}
!5386 = !DILocation(line: 209, column: 1, scope: !4988)
!5387 = !{i64 2147618782, i64 2147618825, i64 2147618865}
!5388 = !DILocation(line: 210, column: 1, scope: !4988)
!5389 = !{i64 2147618975, i64 2147619018, i64 2147619058}
!5390 = !DILocation(line: 211, column: 1, scope: !4988)
!5391 = !{i64 2147619174, i64 2147619217, i64 2147619257}
!5392 = !DILocation(line: 212, column: 1, scope: !4988)
!5393 = !{i64 2147619370, i64 2147619413, i64 2147619453}
!5394 = !DILocation(line: 213, column: 1, scope: !4988)
!5395 = !{i64 2147619569, i64 2147619612, i64 2147619652}
!5396 = !DILocation(line: 214, column: 1, scope: !4988)
!5397 = !{i64 2147619793, i64 2147619836, i64 2147619876}
!5398 = !DILocation(line: 215, column: 1, scope: !4988)
!5399 = !{i64 2147620018, i64 2147620061, i64 2147620101}
!5400 = !DILocation(line: 216, column: 1, scope: !4988)
!5401 = !{i64 2147620190, i64 2147620233, i64 2147620273}
!5402 = !DILocation(line: 217, column: 1, scope: !4988)
!5403 = !{i64 2147620383, i64 2147620426, i64 2147620466}
!5404 = !DILocation(line: 218, column: 1, scope: !4988)
!5405 = !{i64 2147620579, i64 2147620622, i64 2147620662}
!5406 = !DILocation(line: 219, column: 1, scope: !4988)
!5407 = !{i64 2147620806, i64 2147620849, i64 2147620889}
!5408 = !DILocation(line: 220, column: 1, scope: !4988)
!5409 = !{i64 2147621023, i64 2147621066, i64 2147621106}
!5410 = !DILocation(line: 221, column: 1, scope: !4988)
!5411 = !{i64 2147621315, i64 2147621358, i64 2147621398}
!5412 = !DILocation(line: 222, column: 1, scope: !4988)
!5413 = !{i64 2147625608, i64 2147625651, i64 2147625691}
!5414 = !DILocation(line: 223, column: 1, scope: !4988)
!5415 = !{i64 2147625825, i64 2147625868, i64 2147625908}
!5416 = !DILocation(line: 224, column: 1, scope: !4988)
!5417 = !{i64 2147626032, i64 2147626075, i64 2147626115}
!5418 = !DILocation(line: 225, column: 1, scope: !4988)
!5419 = !{i64 2147626233, i64 2147626276, i64 2147626316}
!5420 = !DILocation(line: 226, column: 1, scope: !4988)
!5421 = !{i64 2147626465, i64 2147626508, i64 2147626548}
!5422 = !DILocation(line: 227, column: 1, scope: !4988)
!5423 = !{i64 2147626673, i64 2147626716, i64 2147626756}
!5424 = !DILocation(line: 228, column: 1, scope: !4988)
!5425 = !{i64 2147626863, i64 2147626906, i64 2147626946}
!5426 = !DILocation(line: 229, column: 1, scope: !4988)
!5427 = !{i64 2147627089, i64 2147627132, i64 2147627172}
!5428 = !DILocation(line: 230, column: 1, scope: !4988)
!5429 = !{i64 2147627278, i64 2147627321, i64 2147627361}
!5430 = !DILocation(line: 231, column: 1, scope: !4988)
!5431 = !{i64 2147627549, i64 2147627592, i64 2147627632}
!5432 = !DILocation(line: 232, column: 1, scope: !4988)
!5433 = !{i64 2147627769, i64 2147627812, i64 2147627852}
!5434 = !DILocation(line: 233, column: 1, scope: !4988)
!5435 = !{i64 2147628022, i64 2147628065, i64 2147628105}
!5436 = !DILocation(line: 234, column: 1, scope: !4988)
!5437 = !{i64 2147628230, i64 2147628273, i64 2147628313}
!5438 = !DILocation(line: 235, column: 1, scope: !4988)
!5439 = !{i64 2147628462, i64 2147628505, i64 2147628545}
!5440 = !DILocation(line: 236, column: 1, scope: !4988)
!5441 = !{i64 2147628673, i64 2147628716, i64 2147628756}
!5442 = !DILocation(line: 237, column: 1, scope: !4988)
!5443 = !{i64 2147628863, i64 2147628906, i64 2147628946}
!5444 = !DILocation(line: 238, column: 1, scope: !4988)
!5445 = !{i64 2147629077, i64 2147629120, i64 2147629160}
!5446 = !DILocation(line: 239, column: 1, scope: !4988)
!5447 = !{i64 2147629276, i64 2147629319, i64 2147629359}
!5448 = !DILocation(line: 240, column: 1, scope: !4988)
!5449 = !{i64 2147629463, i64 2147629506, i64 2147629546}
!5450 = !DILocation(line: 241, column: 1, scope: !4988)
!5451 = !{i64 2147629671, i64 2147629714, i64 2147629754}
!5452 = !DILocation(line: 242, column: 1, scope: !4988)
!5453 = !{i64 2147629900, i64 2147629943, i64 2147629983}
!5454 = !DILocation(line: 243, column: 1, scope: !4988)
!5455 = !{i64 2147630102, i64 2147630145, i64 2147630185}
!5456 = !DILocation(line: 244, column: 1, scope: !4988)
!5457 = !{i64 2147630301, i64 2147630344, i64 2147630384}
!5458 = !DILocation(line: 245, column: 1, scope: !4988)
!5459 = !{i64 2147630518, i64 2147630561, i64 2147630601}
!5460 = !DILocation(line: 247, column: 1, scope: !4988)
!5461 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !541, file: !541, line: 225, type: !548, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5462)
!5462 = !{!5463}
!5463 = !DILocalVariable(name: "arg", arg: 1, scope: !5461, file: !541, line: 225, type: !550)
!5464 = !DILocation(line: 0, scope: !5461)
!5465 = !DILocation(line: 230, column: 2, scope: !5461)
!5466 = !DILocation(line: 233, column: 2, scope: !5461)
!5467 = !DILocation(line: 236, column: 2, scope: !5461)
!5468 = !DILocation(line: 255, column: 2, scope: !5461)
!5469 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !541, file: !541, line: 50, type: !3019, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !842)
!5470 = !DILocation(line: 53, column: 2, scope: !5469)
!5471 = !DILocation(line: 54, column: 1, scope: !5469)
!5472 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !541, file: !541, line: 14, type: !3019, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !842)
!5473 = !DILocation(line: 23, column: 2, scope: !5472)
!5474 = !DILocation(line: 24, column: 2, scope: !5472)
!5475 = !DILocation(line: 25, column: 2, scope: !5472)
!5476 = !DILocation(line: 27, column: 2, scope: !5472)
!5477 = !DILocation(line: 31, column: 2, scope: !5472)
!5478 = !DILocation(line: 33, column: 2, scope: !5472)
!5479 = !DILocation(line: 36, column: 2, scope: !5472)
!5480 = !DILocation(line: 37, column: 2, scope: !5472)
!5481 = !DILocation(line: 40, column: 2, scope: !5472)
!5482 = !DILocation(line: 41, column: 2, scope: !5472)
!5483 = !DILocation(line: 42, column: 2, scope: !5472)
!5484 = !DILocation(line: 43, column: 2, scope: !5472)
!5485 = !DILocation(line: 44, column: 2, scope: !5472)
!5486 = !DILocation(line: 47, column: 2, scope: !5472)
!5487 = !DILocation(line: 48, column: 1, scope: !5472)
!5488 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !541, file: !541, line: 57, type: !3019, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !842)
!5489 = !DILocation(line: 61, column: 2, scope: !5488)
!5490 = !DILocation(line: 63, column: 2, scope: !5488)
!5491 = !DILocation(line: 80, column: 1, scope: !5488)
!5492 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !5493, file: !5493, line: 164, type: !5494, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5496)
!5493 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5494 = !DISubroutineType(types: !5495)
!5495 = !{null, !483, !415, !421, !583, !583}
!5496 = !{!5497, !5498, !5499, !5500, !5501}
!5497 = !DILocalVariable(name: "base", arg: 1, scope: !5492, file: !5493, line: 164, type: !483)
!5498 = !DILocalVariable(name: "pdap", arg: 2, scope: !5492, file: !5493, line: 164, type: !415)
!5499 = !DILocalVariable(name: "perm", arg: 3, scope: !5492, file: !5493, line: 164, type: !421)
!5500 = !DILocalVariable(name: "sreq", arg: 4, scope: !5492, file: !5493, line: 164, type: !583)
!5501 = !DILocalVariable(name: "lock", arg: 5, scope: !5492, file: !5493, line: 164, type: !583)
!5502 = !DILocation(line: 0, scope: !5492)
!5503 = !DILocation(line: 166, column: 24, scope: !5492)
!5504 = !DILocation(line: 166, column: 5, scope: !5492)
!5505 = !DILocation(line: 166, column: 22, scope: !5492)
!5506 = !DILocation(line: 167, column: 1, scope: !5492)
!5507 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !126, file: !126, line: 454, type: !5508, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5510)
!5508 = !DISubroutineType(types: !5509)
!5509 = !{null, !408, !415, !415}
!5510 = !{!5511, !5512, !5513}
!5511 = !DILocalVariable(name: "base", arg: 1, scope: !5507, file: !126, line: 454, type: !408)
!5512 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !5507, file: !126, line: 454, type: !415)
!5513 = !DILocalVariable(name: "control", arg: 3, scope: !5507, file: !126, line: 454, type: !415)
!5514 = !DILocation(line: 0, scope: !5507)
!5515 = !DILocation(line: 456, column: 5, scope: !5507)
!5516 = !DILocation(line: 456, column: 22, scope: !5507)
!5517 = !DILocation(line: 457, column: 1, scope: !5507)
!5518 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !126, file: !126, line: 379, type: !5519, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5521)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{null, !408, !415}
!5521 = !{!5522, !5523}
!5522 = !DILocalVariable(name: "base", arg: 1, scope: !5518, file: !126, line: 379, type: !408)
!5523 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !5518, file: !126, line: 379, type: !415)
!5524 = !DILocation(line: 0, scope: !5518)
!5525 = !DILocation(line: 381, column: 26, scope: !5518)
!5526 = !DILocation(line: 382, column: 1, scope: !5518)
!5527 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !5528, file: !5528, line: 136, type: !5529, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5531)
!5528 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5529 = !DISubroutineType(types: !5530)
!5530 = !{null, !526}
!5531 = !{!5532}
!5532 = !DILocalVariable(name: "base", arg: 1, scope: !5527, file: !5528, line: 136, type: !526)
!5533 = !DILocation(line: 0, scope: !5527)
!5534 = !DILocation(line: 138, column: 16, scope: !5527)
!5535 = !DILocation(line: 139, column: 1, scope: !5527)
!5536 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !5493, file: !5493, line: 136, type: !5537, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5539)
!5537 = !DISubroutineType(types: !5538)
!5538 = !{null, !483, !415, !415, !583}
!5539 = !{!5540, !5541, !5542, !5543}
!5540 = !DILocalVariable(name: "base", arg: 1, scope: !5536, file: !5493, line: 136, type: !483)
!5541 = !DILocalVariable(name: "mda", arg: 2, scope: !5536, file: !5493, line: 136, type: !415)
!5542 = !DILocalVariable(name: "domainId", arg: 3, scope: !5536, file: !5493, line: 136, type: !415)
!5543 = !DILocalVariable(name: "lock", arg: 4, scope: !5536, file: !5493, line: 136, type: !583)
!5544 = !DILocation(line: 0, scope: !5536)
!5545 = !DILocation(line: 140, column: 20, scope: !5536)
!5546 = !DILocation(line: 141, column: 1, scope: !5536)
!5547 = distinct !DISubprogram(name: "tty_write", scope: !5548, file: !5548, line: 100, type: !5549, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5592)
!5548 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5549 = !DISubroutineType(types: !5550)
!5550 = !{!5551, !5553, !13, !1714}
!5551 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5552, line: 28, baseType: !103)
!5552 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5554, size: 32)
!5554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !665, line: 18, size: 544, elements: !5555)
!5555 = !{!5556, !5557, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591}
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5554, file: !665, line: 19, baseType: !2367, size: 32)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5554, file: !665, line: 21, baseType: !5558, size: 128, offset: 32)
!5558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !670, line: 2909, size: 128, elements: !5559)
!5559 = !{!5560, !5579, !5580}
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5558, file: !670, line: 2910, baseType: !5561, size: 64)
!5561 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !5562)
!5562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !5563)
!5563 = !{!5564}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5562, file: !674, line: 232, baseType: !5565, size: 64)
!5565 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !5566)
!5566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !5567)
!5567 = !{!5568, !5574}
!5568 = !DIDerivedType(tag: DW_TAG_member, scope: !5566, file: !679, line: 38, baseType: !5569, size: 32)
!5569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5566, file: !679, line: 38, size: 32, elements: !5570)
!5570 = !{!5571, !5573}
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5569, file: !679, line: 39, baseType: !5572, size: 32)
!5572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 32)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5569, file: !679, line: 40, baseType: !5572, size: 32)
!5574 = !DIDerivedType(tag: DW_TAG_member, scope: !5566, file: !679, line: 42, baseType: !5575, size: 32, offset: 32)
!5575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5566, file: !679, line: 42, size: 32, elements: !5576)
!5576 = !{!5577, !5578}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5575, file: !679, line: 43, baseType: !5572, size: 32)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5575, file: !679, line: 44, baseType: !5572, size: 32)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5558, file: !670, line: 2911, baseType: !32, size: 32, offset: 64)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5558, file: !670, line: 2912, baseType: !32, size: 32, offset: 96)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5554, file: !665, line: 22, baseType: !628, size: 32, offset: 160)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5554, file: !665, line: 23, baseType: !415, size: 32, offset: 192)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5554, file: !665, line: 24, baseType: !532, size: 16, offset: 224)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5554, file: !665, line: 24, baseType: !532, size: 16, offset: 240)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5554, file: !665, line: 25, baseType: !700, size: 32, offset: 256)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5554, file: !665, line: 27, baseType: !5558, size: 128, offset: 288)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5554, file: !665, line: 28, baseType: !628, size: 32, offset: 416)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5554, file: !665, line: 29, baseType: !415, size: 32, offset: 448)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5554, file: !665, line: 30, baseType: !532, size: 16, offset: 480)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5554, file: !665, line: 30, baseType: !532, size: 16, offset: 496)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5554, file: !665, line: 31, baseType: !700, size: 32, offset: 512)
!5592 = !{!5593, !5594, !5595, !5596, !5597, !5598}
!5593 = !DILocalVariable(name: "tty", arg: 1, scope: !5547, file: !5548, line: 100, type: !5553)
!5594 = !DILocalVariable(name: "buf", arg: 2, scope: !5547, file: !5548, line: 100, type: !13)
!5595 = !DILocalVariable(name: "size", arg: 3, scope: !5547, file: !5548, line: 100, type: !1714)
!5596 = !DILocalVariable(name: "p", scope: !5547, file: !5548, line: 102, type: !622)
!5597 = !DILocalVariable(name: "out_size", scope: !5547, file: !5548, line: 103, type: !1714)
!5598 = !DILocalVariable(name: "res", scope: !5547, file: !5548, line: 104, type: !103)
!5599 = !DILocation(line: 0, scope: !5547)
!5600 = !DILocation(line: 106, column: 11, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5547, file: !5548, line: 106, column: 6)
!5602 = !DILocation(line: 106, column: 25, scope: !5601)
!5603 = !DILocation(line: 106, column: 6, scope: !5547)
!5604 = !DILocation(line: 117, column: 2, scope: !5547)
!5605 = !DILocation(line: 110, column: 3, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5601, file: !5548, line: 106, column: 32)
!5607 = !DILocation(line: 110, column: 14, scope: !5606)
!5608 = !DILocation(line: 111, column: 23, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5606, file: !5548, line: 110, column: 18)
!5610 = !DILocation(line: 111, column: 35, scope: !5609)
!5611 = !DILocation(line: 111, column: 33, scope: !5609)
!5612 = !DILocation(line: 111, column: 4, scope: !5609)
!5613 = distinct !{!5613, !5605, !5614}
!5614 = !DILocation(line: 112, column: 3, scope: !5606)
!5615 = !DILocation(line: 117, column: 13, scope: !5547)
!5616 = !DILocation(line: 118, column: 26, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5547, file: !5548, line: 117, column: 17)
!5618 = !DILocation(line: 118, column: 9, scope: !5617)
!5619 = !DILocation(line: 119, column: 11, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5617, file: !5548, line: 119, column: 7)
!5621 = !DILocation(line: 119, column: 7, scope: !5617)
!5622 = !DILocation(line: 121, column: 17, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !5548, line: 121, column: 8)
!5624 = distinct !DILexicalBlock(scope: !5620, file: !5548, line: 119, column: 16)
!5625 = !DILocation(line: 121, column: 8, scope: !5624)
!5626 = !DILocation(line: 122, column: 13, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5623, file: !5548, line: 121, column: 23)
!5628 = !DILocation(line: 122, column: 5, scope: !5627)
!5629 = !DILocation(line: 122, column: 11, scope: !5627)
!5630 = !DILocation(line: 123, column: 5, scope: !5627)
!5631 = !DILocation(line: 118, column: 28, scope: !5617)
!5632 = !DILocation(line: 135, column: 11, scope: !5617)
!5633 = distinct !{!5633, !5604, !5634}
!5634 = !DILocation(line: 136, column: 2, scope: !5547)
!5635 = !DILocation(line: 139, column: 1, scope: !5547)
!5636 = distinct !DISubprogram(name: "uart_poll_out", scope: !5637, file: !5637, line: 95, type: !2384, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5638)
!5637 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!5638 = !{!5639, !5640}
!5639 = !DILocalVariable(name: "dev", arg: 1, scope: !5636, file: !5637, line: 95, type: !2367)
!5640 = !DILocalVariable(name: "out_char", arg: 2, scope: !5636, file: !5637, line: 95, type: !422)
!5641 = !DILocation(line: 0, scope: !5636)
!5642 = !DILocation(line: 105, column: 2, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5636, file: !5637, line: 105, column: 2)
!5644 = !{i64 2151427900}
!5645 = !DILocation(line: 106, column: 2, scope: !5636)
!5646 = !DILocation(line: 107, column: 1, scope: !5636)
!5647 = distinct !DISubprogram(name: "tty_putchar", scope: !5548, file: !5548, line: 69, type: !5648, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5650)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{!103, !5553, !421}
!5650 = !{!5651, !5652, !5653, !5654, !5655}
!5651 = !DILocalVariable(name: "tty", arg: 1, scope: !5647, file: !5548, line: 69, type: !5553)
!5652 = !DILocalVariable(name: "c", arg: 2, scope: !5647, file: !5548, line: 69, type: !421)
!5653 = !DILocalVariable(name: "key", scope: !5647, file: !5548, line: 71, type: !32)
!5654 = !DILocalVariable(name: "tx_next", scope: !5647, file: !5548, line: 72, type: !103)
!5655 = !DILocalVariable(name: "res", scope: !5647, file: !5548, line: 73, type: !103)
!5656 = !DILocation(line: 0, scope: !5647)
!5657 = !DILocation(line: 75, column: 25, scope: !5647)
!5658 = !DILocation(line: 76, column: 5, scope: !5647)
!5659 = !DILocation(line: 77, column: 7, scope: !5647)
!5660 = !DILocation(line: 75, column: 8, scope: !5647)
!5661 = !DILocation(line: 78, column: 10, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5647, file: !5548, line: 78, column: 6)
!5663 = !DILocation(line: 78, column: 6, scope: !5647)
!5664 = !DILocation(line: 55, column: 2, scope: !5665, inlinedAt: !5672)
!5665 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5666, file: !5666, line: 42, type: !5667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5669)
!5666 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5667 = !DISubroutineType(types: !5668)
!5668 = !{!32}
!5669 = !{!5670, !5671}
!5670 = !DILocalVariable(name: "key", scope: !5665, file: !5666, line: 44, type: !32)
!5671 = !DILocalVariable(name: "tmp", scope: !5665, file: !5666, line: 53, type: !32)
!5672 = distinct !DILocation(line: 82, column: 8, scope: !5647)
!5673 = !{i64 2843688}
!5674 = !DILocation(line: 0, scope: !5665, inlinedAt: !5672)
!5675 = !DILocation(line: 83, column: 17, scope: !5647)
!5676 = !DILocation(line: 83, column: 12, scope: !5647)
!5677 = !DILocation(line: 83, column: 24, scope: !5647)
!5678 = !DILocation(line: 84, column: 22, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5647, file: !5548, line: 84, column: 6)
!5680 = !DILocation(line: 84, column: 14, scope: !5679)
!5681 = !DILocation(line: 84, column: 6, scope: !5647)
!5682 = !DILocation(line: 87, column: 22, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5647, file: !5548, line: 87, column: 6)
!5684 = !DILocation(line: 87, column: 17, scope: !5683)
!5685 = !DILocation(line: 87, column: 14, scope: !5683)
!5686 = !DILocation(line: 87, column: 6, scope: !5647)
!5687 = !DILocalVariable(name: "key", arg: 1, scope: !5688, file: !5666, line: 84, type: !32)
!5688 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5691)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{null, !32}
!5691 = !{!5687}
!5692 = !DILocation(line: 0, scope: !5688, inlinedAt: !5693)
!5693 = distinct !DILocation(line: 88, column: 3, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5683, file: !5548, line: 87, column: 30)
!5695 = !DILocation(line: 95, column: 2, scope: !5688, inlinedAt: !5693)
!5696 = !{i64 2844505}
!5697 = !DILocation(line: 89, column: 3, scope: !5694)
!5698 = !DILocation(line: 92, column: 7, scope: !5647)
!5699 = !DILocation(line: 92, column: 2, scope: !5647)
!5700 = !DILocation(line: 92, column: 31, scope: !5647)
!5701 = !DILocation(line: 93, column: 16, scope: !5647)
!5702 = !DILocation(line: 93, column: 14, scope: !5647)
!5703 = !DILocation(line: 0, scope: !5688, inlinedAt: !5704)
!5704 = distinct !DILocation(line: 95, column: 2, scope: !5647)
!5705 = !DILocation(line: 95, column: 2, scope: !5688, inlinedAt: !5704)
!5706 = !DILocation(line: 96, column: 26, scope: !5647)
!5707 = !DILocation(line: 96, column: 2, scope: !5647)
!5708 = !DILocation(line: 97, column: 2, scope: !5647)
!5709 = !DILocation(line: 98, column: 1, scope: !5647)
!5710 = distinct !DISubprogram(name: "z_errno", scope: !5711, file: !5711, line: 24, type: !5712, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !842)
!5711 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!5712 = !DISubroutineType(types: !5713)
!5713 = !{!2345}
!5714 = !DILocation(line: 31, column: 2, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5710, file: !5711, line: 31, column: 2)
!5716 = !{i64 2150562486}
!5717 = !DILocation(line: 32, column: 9, scope: !5710)
!5718 = !DILocation(line: 32, column: 2, scope: !5710)
!5719 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5720, file: !5720, line: 403, type: !5721, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5723)
!5720 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5721 = !DISubroutineType(types: !5722)
!5722 = !{!2065, !2065}
!5723 = !{!5724}
!5724 = !DILocalVariable(name: "t", arg: 1, scope: !5719, file: !5720, line: 403, type: !2065)
!5725 = !DILocation(line: 0, scope: !5719)
!5726 = !DILocalVariable(name: "t", arg: 1, scope: !5727, file: !5720, line: 102, type: !2065)
!5727 = distinct !DISubprogram(name: "z_tmcvt", scope: !5720, file: !5720, line: 102, type: !5728, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5730)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{!2065, !2065, !415, !415, !583, !583, !583, !583}
!5730 = !{!5726, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740}
!5731 = !DILocalVariable(name: "from_hz", arg: 2, scope: !5727, file: !5720, line: 102, type: !415)
!5732 = !DILocalVariable(name: "to_hz", arg: 3, scope: !5727, file: !5720, line: 103, type: !415)
!5733 = !DILocalVariable(name: "const_hz", arg: 4, scope: !5727, file: !5720, line: 103, type: !583)
!5734 = !DILocalVariable(name: "result32", arg: 5, scope: !5727, file: !5720, line: 104, type: !583)
!5735 = !DILocalVariable(name: "round_up", arg: 6, scope: !5727, file: !5720, line: 104, type: !583)
!5736 = !DILocalVariable(name: "round_off", arg: 7, scope: !5727, file: !5720, line: 105, type: !583)
!5737 = !DILocalVariable(name: "mul_ratio", scope: !5727, file: !5720, line: 107, type: !583)
!5738 = !DILocalVariable(name: "div_ratio", scope: !5727, file: !5720, line: 109, type: !583)
!5739 = !DILocalVariable(name: "off", scope: !5727, file: !5720, line: 116, type: !2065)
!5740 = !DILocalVariable(name: "rdivisor", scope: !5741, file: !5720, line: 119, type: !415)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !5720, line: 118, column: 18)
!5742 = distinct !DILexicalBlock(scope: !5727, file: !5720, line: 118, column: 6)
!5743 = !DILocation(line: 0, scope: !5727, inlinedAt: !5744)
!5744 = distinct !DILocation(line: 406, column: 9, scope: !5719)
!5745 = !DILocation(line: 145, column: 13, scope: !5746, inlinedAt: !5744)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !5720, line: 144, column: 10)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !5720, line: 142, column: 7)
!5748 = distinct !DILexicalBlock(scope: !5749, file: !5720, line: 141, column: 24)
!5749 = distinct !DILexicalBlock(scope: !5750, file: !5720, line: 141, column: 13)
!5750 = distinct !DILexicalBlock(scope: !5727, file: !5720, line: 134, column: 6)
!5751 = !DILocation(line: 406, column: 2, scope: !5719)
!5752 = distinct !DISubprogram(name: "k_sem_take", scope: !3443, file: !3443, line: 1044, type: !5753, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5760)
!5753 = !DISubroutineType(types: !5754)
!5754 = !{!103, !5755, !5756}
!5755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5558, size: 32)
!5756 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1547, line: 67, baseType: !5757)
!5757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1547, line: 65, size: 64, elements: !5758)
!5758 = !{!5759}
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5757, file: !1547, line: 66, baseType: !1546, size: 64)
!5760 = !{!5761, !5762}
!5761 = !DILocalVariable(name: "sem", arg: 1, scope: !5752, file: !3443, line: 1044, type: !5755)
!5762 = !DILocalVariable(name: "timeout", arg: 2, scope: !5752, file: !3443, line: 1044, type: !5756)
!5763 = !DILocation(line: 0, scope: !5752)
!5764 = !DILocation(line: 1053, column: 2, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5752, file: !3443, line: 1053, column: 2)
!5766 = !{i64 2151041674}
!5767 = !DILocation(line: 1054, column: 9, scope: !5752)
!5768 = !DILocation(line: 1054, column: 2, scope: !5752)
!5769 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !5637, file: !5637, line: 193, type: !2418, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5770)
!5770 = !{!5771}
!5771 = !DILocalVariable(name: "dev", arg: 1, scope: !5769, file: !5637, line: 193, type: !2367)
!5772 = !DILocation(line: 0, scope: !5769)
!5773 = !DILocation(line: 202, column: 2, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5769, file: !5637, line: 202, column: 2)
!5775 = !{i64 2151428172}
!5776 = !DILocation(line: 203, column: 2, scope: !5769)
!5777 = !DILocation(line: 204, column: 1, scope: !5769)
!5778 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !562, file: !562, line: 857, type: !2418, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5779)
!5779 = !{!5780, !5781}
!5780 = !DILocalVariable(name: "dev", arg: 1, scope: !5778, file: !562, line: 857, type: !2367)
!5781 = !DILocalVariable(name: "api", scope: !5778, file: !562, line: 860, type: !2359)
!5782 = !DILocation(line: 0, scope: !5778)
!5783 = !DILocation(line: 861, column: 40, scope: !5778)
!5784 = !DILocation(line: 863, column: 11, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5778, file: !562, line: 863, column: 6)
!5786 = !DILocation(line: 863, column: 25, scope: !5785)
!5787 = !DILocation(line: 863, column: 6, scope: !5778)
!5788 = !DILocation(line: 864, column: 3, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5785, file: !562, line: 863, column: 34)
!5790 = !DILocation(line: 865, column: 2, scope: !5789)
!5791 = !DILocation(line: 869, column: 1, scope: !5778)
!5792 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !562, file: !562, line: 574, type: !2384, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5793)
!5793 = !{!5794, !5795, !5796}
!5794 = !DILocalVariable(name: "dev", arg: 1, scope: !5792, file: !562, line: 574, type: !2367)
!5795 = !DILocalVariable(name: "out_char", arg: 2, scope: !5792, file: !562, line: 575, type: !422)
!5796 = !DILocalVariable(name: "api", scope: !5792, file: !562, line: 577, type: !2359)
!5797 = !DILocation(line: 0, scope: !5792)
!5798 = !DILocation(line: 578, column: 40, scope: !5792)
!5799 = !DILocation(line: 580, column: 7, scope: !5792)
!5800 = !DILocation(line: 580, column: 2, scope: !5792)
!5801 = !DILocation(line: 581, column: 1, scope: !5792)
!5802 = distinct !DISubprogram(name: "tty_read", scope: !5548, file: !5548, line: 206, type: !5803, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5805)
!5803 = !DISubroutineType(types: !5804)
!5804 = !{!5551, !5553, !102, !1714}
!5805 = !{!5806, !5807, !5808, !5809, !5810, !5811}
!5806 = !DILocalVariable(name: "tty", arg: 1, scope: !5802, file: !5548, line: 206, type: !5553)
!5807 = !DILocalVariable(name: "buf", arg: 2, scope: !5802, file: !5548, line: 206, type: !102)
!5808 = !DILocalVariable(name: "size", arg: 3, scope: !5802, file: !5548, line: 206, type: !1714)
!5809 = !DILocalVariable(name: "p", scope: !5802, file: !5548, line: 208, type: !628)
!5810 = !DILocalVariable(name: "out_size", scope: !5802, file: !5548, line: 209, type: !1714)
!5811 = !DILocalVariable(name: "res", scope: !5802, file: !5548, line: 210, type: !103)
!5812 = !DILocation(line: 0, scope: !5802)
!5813 = !DILocation(line: 212, column: 11, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5802, file: !5548, line: 212, column: 6)
!5815 = !DILocation(line: 212, column: 25, scope: !5814)
!5816 = !DILocation(line: 212, column: 6, scope: !5802)
!5817 = !DILocation(line: 216, column: 2, scope: !5802)
!5818 = !DILocation(line: 213, column: 10, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5814, file: !5548, line: 212, column: 32)
!5820 = !DILocation(line: 213, column: 3, scope: !5819)
!5821 = !DILocation(line: 216, column: 13, scope: !5802)
!5822 = !DILocation(line: 217, column: 9, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5802, file: !5548, line: 216, column: 17)
!5824 = !DILocation(line: 218, column: 11, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5823, file: !5548, line: 218, column: 7)
!5826 = !DILocation(line: 218, column: 7, scope: !5823)
!5827 = !DILocation(line: 220, column: 17, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !5548, line: 220, column: 8)
!5829 = distinct !DILexicalBlock(scope: !5825, file: !5548, line: 218, column: 16)
!5830 = !DILocation(line: 220, column: 8, scope: !5829)
!5831 = !DILocation(line: 221, column: 13, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5828, file: !5548, line: 220, column: 23)
!5833 = !DILocation(line: 221, column: 5, scope: !5832)
!5834 = !DILocation(line: 221, column: 11, scope: !5832)
!5835 = !DILocation(line: 222, column: 5, scope: !5832)
!5836 = !DILocation(line: 234, column: 10, scope: !5823)
!5837 = !DILocation(line: 234, column: 5, scope: !5823)
!5838 = !DILocation(line: 234, column: 8, scope: !5823)
!5839 = !DILocation(line: 235, column: 11, scope: !5823)
!5840 = distinct !{!5840, !5817, !5841}
!5841 = !DILocation(line: 236, column: 2, scope: !5802)
!5842 = !DILocation(line: 239, column: 1, scope: !5802)
!5843 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5548, file: !5548, line: 162, type: !5803, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5844)
!5844 = !{!5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852}
!5845 = !DILocalVariable(name: "tty", arg: 1, scope: !5843, file: !5548, line: 162, type: !5553)
!5846 = !DILocalVariable(name: "buf", arg: 2, scope: !5843, file: !5548, line: 162, type: !102)
!5847 = !DILocalVariable(name: "size", arg: 3, scope: !5843, file: !5548, line: 162, type: !1714)
!5848 = !DILocalVariable(name: "p", scope: !5843, file: !5548, line: 164, type: !628)
!5849 = !DILocalVariable(name: "out_size", scope: !5843, file: !5548, line: 165, type: !1714)
!5850 = !DILocalVariable(name: "res", scope: !5843, file: !5548, line: 166, type: !103)
!5851 = !DILocalVariable(name: "timeout", scope: !5843, file: !5548, line: 167, type: !415)
!5852 = !DILocalVariable(name: "c", scope: !5853, file: !5548, line: 170, type: !421)
!5853 = distinct !DILexicalBlock(scope: !5843, file: !5548, line: 169, column: 15)
!5854 = !DILocation(line: 0, scope: !5843)
!5855 = !DILocation(line: 169, column: 2, scope: !5843)
!5856 = !DILocation(line: 167, column: 26, scope: !5843)
!5857 = !DILocation(line: 170, column: 3, scope: !5853)
!5858 = !DILocation(line: 171, column: 27, scope: !5853)
!5859 = !DILocation(line: 0, scope: !5853)
!5860 = !DILocation(line: 171, column: 9, scope: !5853)
!5861 = !DILocation(line: 172, column: 11, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5853, file: !5548, line: 172, column: 7)
!5863 = !DILocation(line: 172, column: 7, scope: !5853)
!5864 = !DILocation(line: 177, column: 17, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !5548, line: 177, column: 8)
!5866 = distinct !DILexicalBlock(scope: !5862, file: !5548, line: 172, column: 18)
!5867 = !DILocation(line: 177, column: 8, scope: !5866)
!5868 = !DILocation(line: 178, column: 5, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !5548, line: 177, column: 23)
!5870 = !DILocation(line: 178, column: 11, scope: !5869)
!5871 = !DILocation(line: 201, column: 2, scope: !5843)
!5872 = !DILocation(line: 184, column: 11, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5853, file: !5548, line: 184, column: 7)
!5874 = !DILocation(line: 184, column: 7, scope: !5853)
!5875 = !DILocation(line: 185, column: 11, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5873, file: !5548, line: 184, column: 17)
!5877 = !DILocation(line: 185, column: 6, scope: !5876)
!5878 = !DILocation(line: 185, column: 9, scope: !5876)
!5879 = !DILocation(line: 186, column: 12, scope: !5876)
!5880 = !DILocation(line: 187, column: 8, scope: !5876)
!5881 = !DILocation(line: 190, column: 12, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5853, file: !5548, line: 190, column: 7)
!5883 = !DILocation(line: 190, column: 17, scope: !5882)
!5884 = !DILocation(line: 191, column: 17, scope: !5882)
!5885 = !DILocation(line: 191, column: 36, scope: !5882)
!5886 = !DILocation(line: 191, column: 46, scope: !5882)
!5887 = !DILocation(line: 191, column: 49, scope: !5882)
!5888 = !DILocation(line: 190, column: 7, scope: !5853)
!5889 = !DILocation(line: 198, column: 11, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5853, file: !5548, line: 198, column: 7)
!5891 = !DILocation(line: 198, column: 7, scope: !5853)
!5892 = !DILocation(line: 199, column: 12, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5890, file: !5548, line: 198, column: 18)
!5894 = !DILocation(line: 199, column: 4, scope: !5893)
!5895 = !DILocation(line: 200, column: 3, scope: !5893)
!5896 = !DILocation(line: 204, column: 1, scope: !5843)
!5897 = distinct !DISubprogram(name: "tty_getchar", scope: !5548, file: !5548, line: 141, type: !5898, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5900)
!5898 = !DISubroutineType(types: !5899)
!5899 = !{!103, !5553}
!5900 = !{!5901, !5902, !5903, !5904}
!5901 = !DILocalVariable(name: "tty", arg: 1, scope: !5897, file: !5548, line: 141, type: !5553)
!5902 = !DILocalVariable(name: "key", scope: !5897, file: !5548, line: 143, type: !32)
!5903 = !DILocalVariable(name: "c", scope: !5897, file: !5548, line: 144, type: !421)
!5904 = !DILocalVariable(name: "res", scope: !5897, file: !5548, line: 145, type: !103)
!5905 = !DILocation(line: 0, scope: !5897)
!5906 = !DILocation(line: 147, column: 25, scope: !5897)
!5907 = !DILocation(line: 147, column: 33, scope: !5897)
!5908 = !DILocation(line: 147, column: 8, scope: !5897)
!5909 = !DILocation(line: 148, column: 10, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5897, file: !5548, line: 148, column: 6)
!5911 = !DILocation(line: 148, column: 6, scope: !5897)
!5912 = !DILocation(line: 55, column: 2, scope: !5665, inlinedAt: !5913)
!5913 = distinct !DILocation(line: 152, column: 8, scope: !5897)
!5914 = !DILocation(line: 0, scope: !5665, inlinedAt: !5913)
!5915 = !DILocation(line: 153, column: 11, scope: !5897)
!5916 = !DILocation(line: 153, column: 27, scope: !5897)
!5917 = !DILocation(line: 153, column: 33, scope: !5897)
!5918 = !DILocation(line: 153, column: 6, scope: !5897)
!5919 = !DILocation(line: 154, column: 6, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5897, file: !5548, line: 154, column: 6)
!5921 = !DILocation(line: 154, column: 26, scope: !5920)
!5922 = !DILocation(line: 154, column: 18, scope: !5920)
!5923 = !DILocation(line: 154, column: 6, scope: !5897)
!5924 = !DILocation(line: 0, scope: !5688, inlinedAt: !5925)
!5925 = distinct !DILocation(line: 157, column: 2, scope: !5897)
!5926 = !DILocation(line: 95, column: 2, scope: !5688, inlinedAt: !5925)
!5927 = !DILocation(line: 159, column: 9, scope: !5897)
!5928 = !DILocation(line: 159, column: 2, scope: !5897)
!5929 = !DILocation(line: 160, column: 1, scope: !5897)
!5930 = distinct !DISubprogram(name: "uart_poll_in", scope: !5637, file: !5637, line: 47, type: !2365, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5931)
!5931 = !{!5932, !5933}
!5932 = !DILocalVariable(name: "dev", arg: 1, scope: !5930, file: !5637, line: 47, type: !2367)
!5933 = !DILocalVariable(name: "p_char", arg: 2, scope: !5930, file: !5637, line: 47, type: !591)
!5934 = !DILocation(line: 0, scope: !5930)
!5935 = !DILocation(line: 56, column: 2, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5930, file: !5637, line: 56, column: 2)
!5937 = !{i64 2151427764}
!5938 = !DILocation(line: 57, column: 9, scope: !5930)
!5939 = !DILocation(line: 57, column: 2, scope: !5930)
!5940 = distinct !DISubprogram(name: "k_sleep", scope: !3443, file: !3443, line: 91, type: !5941, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5943)
!5941 = !DISubroutineType(types: !5942)
!5942 = !{!700, !5756}
!5943 = !{!5944}
!5944 = !DILocalVariable(name: "timeout", arg: 1, scope: !5940, file: !3443, line: 91, type: !5756)
!5945 = !DILocation(line: 0, scope: !5940)
!5946 = !DILocation(line: 99, column: 2, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5940, file: !3443, line: 99, column: 2)
!5948 = !{i64 2151037830}
!5949 = !DILocation(line: 100, column: 9, scope: !5940)
!5950 = !DILocation(line: 100, column: 2, scope: !5940)
!5951 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !562, file: !562, line: 504, type: !2365, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5952)
!5952 = !{!5953, !5954, !5955}
!5953 = !DILocalVariable(name: "dev", arg: 1, scope: !5951, file: !562, line: 504, type: !2367)
!5954 = !DILocalVariable(name: "p_char", arg: 2, scope: !5951, file: !562, line: 505, type: !591)
!5955 = !DILocalVariable(name: "api", scope: !5951, file: !562, line: 507, type: !2359)
!5956 = !DILocation(line: 0, scope: !5951)
!5957 = !DILocation(line: 508, column: 40, scope: !5951)
!5958 = !DILocation(line: 510, column: 11, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5951, file: !562, line: 510, column: 6)
!5960 = !DILocation(line: 510, column: 19, scope: !5959)
!5961 = !DILocation(line: 510, column: 6, scope: !5951)
!5962 = !DILocation(line: 514, column: 9, scope: !5951)
!5963 = !DILocation(line: 514, column: 2, scope: !5951)
!5964 = !DILocation(line: 515, column: 1, scope: !5951)
!5965 = distinct !DISubprogram(name: "tty_init", scope: !5548, file: !5548, line: 241, type: !5966, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5968)
!5966 = !DISubroutineType(types: !5967)
!5967 = !{!103, !5553, !2367}
!5968 = !{!5969, !5970}
!5969 = !DILocalVariable(name: "tty", arg: 1, scope: !5965, file: !5548, line: 241, type: !5553)
!5970 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !5965, file: !5548, line: 241, type: !2367)
!5971 = !DILocation(line: 0, scope: !5965)
!5972 = !DILocation(line: 243, column: 7, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5965, file: !5548, line: 243, column: 6)
!5974 = !DILocation(line: 243, column: 6, scope: !5965)
!5975 = !DILocation(line: 247, column: 7, scope: !5965)
!5976 = !DILocation(line: 247, column: 16, scope: !5965)
!5977 = !DILocation(line: 250, column: 7, scope: !5965)
!5978 = !DILocation(line: 250, column: 18, scope: !5965)
!5979 = !DILocation(line: 251, column: 7, scope: !5965)
!5980 = !DILocation(line: 251, column: 21, scope: !5965)
!5981 = !DILocation(line: 252, column: 7, scope: !5965)
!5982 = !DILocation(line: 252, column: 18, scope: !5965)
!5983 = !DILocation(line: 253, column: 7, scope: !5965)
!5984 = !DILocation(line: 253, column: 21, scope: !5965)
!5985 = !DILocation(line: 255, column: 49, scope: !5965)
!5986 = !DILocation(line: 255, column: 56, scope: !5965)
!5987 = !DILocation(line: 255, column: 35, scope: !5965)
!5988 = !DILocation(line: 255, column: 42, scope: !5965)
!5989 = !DILocation(line: 255, column: 21, scope: !5965)
!5990 = !DILocation(line: 255, column: 28, scope: !5965)
!5991 = !DILocation(line: 255, column: 7, scope: !5965)
!5992 = !DILocation(line: 255, column: 14, scope: !5965)
!5993 = !DILocation(line: 257, column: 7, scope: !5965)
!5994 = !DILocation(line: 257, column: 18, scope: !5965)
!5995 = !DILocation(line: 258, column: 7, scope: !5965)
!5996 = !DILocation(line: 258, column: 18, scope: !5965)
!5997 = !DILocation(line: 260, column: 58, scope: !5965)
!5998 = !DILocation(line: 260, column: 2, scope: !5965)
!5999 = !DILocation(line: 262, column: 2, scope: !5965)
!6000 = !DILocation(line: 263, column: 1, scope: !5965)
!6001 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !562, file: !562, line: 1163, type: !2432, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6002)
!6002 = !{!6003, !6004, !6005, !6006}
!6003 = !DILocalVariable(name: "dev", arg: 1, scope: !6001, file: !562, line: 1163, type: !2367)
!6004 = !DILocalVariable(name: "cb", arg: 2, scope: !6001, file: !562, line: 1164, type: !2434)
!6005 = !DILocalVariable(name: "user_data", arg: 3, scope: !6001, file: !562, line: 1165, type: !102)
!6006 = !DILocalVariable(name: "api", scope: !6001, file: !562, line: 1168, type: !2359)
!6007 = !DILocation(line: 0, scope: !6001)
!6008 = !DILocation(line: 1169, column: 40, scope: !6001)
!6009 = !DILocation(line: 1171, column: 11, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6001, file: !562, line: 1171, column: 6)
!6011 = !DILocation(line: 1171, column: 20, scope: !6010)
!6012 = !DILocation(line: 1171, column: 29, scope: !6010)
!6013 = !DILocation(line: 1171, column: 46, scope: !6010)
!6014 = !DILocation(line: 1171, column: 6, scope: !6001)
!6015 = !DILocation(line: 1172, column: 3, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6010, file: !562, line: 1171, column: 56)
!6017 = !DILocation(line: 1173, column: 2, scope: !6016)
!6018 = !DILocation(line: 1179, column: 1, scope: !6001)
!6019 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5548, file: !5548, line: 15, type: !2436, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6020)
!6020 = !{!6021, !6022, !6023, !6024}
!6021 = !DILocalVariable(name: "dev", arg: 1, scope: !6019, file: !5548, line: 15, type: !2367)
!6022 = !DILocalVariable(name: "user_data", arg: 2, scope: !6019, file: !5548, line: 15, type: !102)
!6023 = !DILocalVariable(name: "tty", scope: !6019, file: !5548, line: 17, type: !5553)
!6024 = !DILocalVariable(name: "c", scope: !6025, file: !5548, line: 22, type: !421)
!6025 = distinct !DILexicalBlock(scope: !6026, file: !5548, line: 21, column: 30)
!6026 = distinct !DILexicalBlock(scope: !6019, file: !5548, line: 21, column: 6)
!6027 = !DILocation(line: 0, scope: !6019)
!6028 = !DILocation(line: 17, column: 27, scope: !6019)
!6029 = !DILocation(line: 19, column: 2, scope: !6019)
!6030 = !DILocation(line: 21, column: 6, scope: !6026)
!6031 = !DILocation(line: 21, column: 6, scope: !6019)
!6032 = !DILocation(line: 22, column: 3, scope: !6025)
!6033 = !DILocation(line: 0, scope: !6025)
!6034 = !DILocation(line: 25, column: 8, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6036, file: !5548, line: 25, column: 8)
!6036 = distinct !DILexicalBlock(scope: !6025, file: !5548, line: 24, column: 13)
!6037 = !DILocation(line: 25, column: 35, scope: !6035)
!6038 = !DILocation(line: 25, column: 8, scope: !6036)
!6039 = !DILocation(line: 28, column: 28, scope: !6036)
!6040 = !DILocation(line: 28, column: 4, scope: !6036)
!6041 = distinct !{!6041, !6042, !6043}
!6042 = !DILocation(line: 24, column: 3, scope: !6025)
!6043 = !DILocation(line: 29, column: 3, scope: !6025)
!6044 = !DILocation(line: 30, column: 2, scope: !6026)
!6045 = !DILocation(line: 30, column: 2, scope: !6025)
!6046 = !DILocation(line: 32, column: 6, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6019, file: !5548, line: 32, column: 6)
!6048 = !DILocation(line: 32, column: 6, scope: !6019)
!6049 = !DILocation(line: 33, column: 12, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6051, file: !5548, line: 33, column: 7)
!6051 = distinct !DILexicalBlock(scope: !6047, file: !5548, line: 32, column: 30)
!6052 = !DILocation(line: 33, column: 27, scope: !6050)
!6053 = !DILocation(line: 33, column: 19, scope: !6050)
!6054 = !DILocation(line: 33, column: 7, scope: !6051)
!6055 = !DILocation(line: 37, column: 4, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6050, file: !5548, line: 33, column: 35)
!6057 = !DILocation(line: 38, column: 3, scope: !6056)
!6058 = !DILocation(line: 33, column: 7, scope: !6050)
!6059 = !DILocation(line: 39, column: 30, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6050, file: !5548, line: 38, column: 10)
!6061 = !DILocation(line: 39, column: 52, scope: !6060)
!6062 = !DILocation(line: 39, column: 25, scope: !6060)
!6063 = !DILocation(line: 39, column: 4, scope: !6060)
!6064 = !DILocation(line: 40, column: 13, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6060, file: !5548, line: 40, column: 8)
!6066 = !DILocation(line: 40, column: 8, scope: !6065)
!6067 = !DILocation(line: 40, column: 28, scope: !6065)
!6068 = !DILocation(line: 40, column: 20, scope: !6065)
!6069 = !DILocation(line: 40, column: 8, scope: !6060)
!6070 = !DILocation(line: 41, column: 17, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6065, file: !5548, line: 40, column: 43)
!6072 = !DILocation(line: 42, column: 4, scope: !6071)
!6073 = !DILocation(line: 43, column: 21, scope: !6060)
!6074 = !DILocation(line: 43, column: 4, scope: !6060)
!6075 = !DILocation(line: 46, column: 1, scope: !6019)
!6076 = distinct !DISubprogram(name: "uart_irq_update", scope: !5637, file: !5637, line: 360, type: !2388, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6077)
!6077 = !{!6078}
!6078 = !DILocalVariable(name: "dev", arg: 1, scope: !6076, file: !5637, line: 360, type: !2367)
!6079 = !DILocation(line: 0, scope: !6076)
!6080 = !DILocation(line: 368, column: 2, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6076, file: !5637, line: 368, column: 2)
!6082 = !{i64 2151428648}
!6083 = !DILocation(line: 369, column: 9, scope: !6076)
!6084 = !DILocation(line: 369, column: 2, scope: !6076)
!6085 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !562, file: !562, line: 1024, type: !2388, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6086)
!6086 = !{!6087, !6088}
!6087 = !DILocalVariable(name: "dev", arg: 1, scope: !6085, file: !562, line: 1024, type: !2367)
!6088 = !DILocalVariable(name: "api", scope: !6085, file: !562, line: 1027, type: !2359)
!6089 = !DILocation(line: 0, scope: !6085)
!6090 = !DILocation(line: 1028, column: 40, scope: !6085)
!6091 = !DILocation(line: 1030, column: 11, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6085, file: !562, line: 1030, column: 6)
!6093 = !DILocation(line: 1030, column: 24, scope: !6092)
!6094 = !DILocation(line: 1030, column: 6, scope: !6085)
!6095 = !DILocation(line: 1033, column: 9, scope: !6085)
!6096 = !DILocation(line: 1033, column: 2, scope: !6085)
!6097 = !DILocation(line: 1038, column: 1, scope: !6085)
!6098 = distinct !DISubprogram(name: "uart_fifo_read", scope: !562, file: !562, line: 785, type: !2414, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6099)
!6099 = !{!6100, !6101, !6102, !6103}
!6100 = !DILocalVariable(name: "dev", arg: 1, scope: !6098, file: !562, line: 785, type: !2367)
!6101 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6098, file: !562, line: 785, type: !628)
!6102 = !DILocalVariable(name: "size", arg: 3, scope: !6098, file: !562, line: 786, type: !629)
!6103 = !DILocalVariable(name: "api", scope: !6098, file: !562, line: 789, type: !2359)
!6104 = !DILocation(line: 0, scope: !6098)
!6105 = !DILocation(line: 790, column: 40, scope: !6098)
!6106 = !DILocation(line: 792, column: 11, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6098, file: !562, line: 792, column: 6)
!6108 = !DILocation(line: 792, column: 21, scope: !6107)
!6109 = !DILocation(line: 792, column: 6, scope: !6098)
!6110 = !DILocation(line: 796, column: 9, scope: !6098)
!6111 = !DILocation(line: 796, column: 2, scope: !6098)
!6112 = !DILocation(line: 803, column: 1, scope: !6098)
!6113 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5548, file: !5548, line: 48, type: !5648, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6114)
!6114 = !{!6115, !6116, !6117}
!6115 = !DILocalVariable(name: "tty", arg: 1, scope: !6113, file: !5548, line: 48, type: !5553)
!6116 = !DILocalVariable(name: "c", arg: 2, scope: !6113, file: !5548, line: 48, type: !421)
!6117 = !DILocalVariable(name: "rx_next", scope: !6113, file: !5548, line: 50, type: !103)
!6118 = !DILocation(line: 0, scope: !6113)
!6119 = !DILocation(line: 50, column: 21, scope: !6113)
!6120 = !DILocation(line: 50, column: 16, scope: !6113)
!6121 = !DILocation(line: 50, column: 28, scope: !6113)
!6122 = !DILocation(line: 52, column: 22, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6113, file: !5548, line: 52, column: 6)
!6124 = !DILocation(line: 52, column: 14, scope: !6123)
!6125 = !DILocation(line: 52, column: 6, scope: !6113)
!6126 = !DILocation(line: 56, column: 22, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6113, file: !5548, line: 56, column: 6)
!6128 = !DILocation(line: 56, column: 17, scope: !6127)
!6129 = !DILocation(line: 56, column: 14, scope: !6127)
!6130 = !DILocation(line: 56, column: 6, scope: !6113)
!6131 = !DILocation(line: 58, column: 3, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6127, file: !5548, line: 56, column: 30)
!6133 = !DILocation(line: 59, column: 3, scope: !6132)
!6134 = !DILocation(line: 62, column: 7, scope: !6113)
!6135 = !DILocation(line: 62, column: 2, scope: !6113)
!6136 = !DILocation(line: 62, column: 31, scope: !6113)
!6137 = !DILocation(line: 63, column: 16, scope: !6113)
!6138 = !DILocation(line: 63, column: 14, scope: !6113)
!6139 = !DILocation(line: 64, column: 19, scope: !6113)
!6140 = !DILocation(line: 64, column: 2, scope: !6113)
!6141 = !DILocation(line: 66, column: 2, scope: !6113)
!6142 = !DILocation(line: 67, column: 1, scope: !6113)
!6143 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !562, file: !562, line: 910, type: !2388, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6144)
!6144 = !{!6145, !6146}
!6145 = !DILocalVariable(name: "dev", arg: 1, scope: !6143, file: !562, line: 910, type: !2367)
!6146 = !DILocalVariable(name: "api", scope: !6143, file: !562, line: 913, type: !2359)
!6147 = !DILocation(line: 0, scope: !6143)
!6148 = !DILocation(line: 914, column: 40, scope: !6143)
!6149 = !DILocation(line: 916, column: 11, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6143, file: !562, line: 916, column: 6)
!6151 = !DILocation(line: 916, column: 24, scope: !6150)
!6152 = !DILocation(line: 916, column: 6, scope: !6143)
!6153 = !DILocation(line: 920, column: 9, scope: !6143)
!6154 = !DILocation(line: 920, column: 2, scope: !6143)
!6155 = !DILocation(line: 925, column: 1, scope: !6143)
!6156 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5637, file: !5637, line: 217, type: !2418, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6157)
!6157 = !{!6158}
!6158 = !DILocalVariable(name: "dev", arg: 1, scope: !6156, file: !5637, line: 217, type: !2367)
!6159 = !DILocation(line: 0, scope: !6156)
!6160 = !DILocation(line: 226, column: 2, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6156, file: !5637, line: 226, column: 2)
!6162 = !{i64 2151428240}
!6163 = !DILocation(line: 227, column: 2, scope: !6156)
!6164 = !DILocation(line: 228, column: 1, scope: !6156)
!6165 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !562, file: !562, line: 699, type: !2410, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6166)
!6166 = !{!6167, !6168, !6169, !6170}
!6167 = !DILocalVariable(name: "dev", arg: 1, scope: !6165, file: !562, line: 699, type: !2367)
!6168 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6165, file: !562, line: 700, type: !622)
!6169 = !DILocalVariable(name: "size", arg: 3, scope: !6165, file: !562, line: 701, type: !103)
!6170 = !DILocalVariable(name: "api", scope: !6165, file: !562, line: 704, type: !2359)
!6171 = !DILocation(line: 0, scope: !6165)
!6172 = !DILocation(line: 705, column: 40, scope: !6165)
!6173 = !DILocation(line: 707, column: 11, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6165, file: !562, line: 707, column: 6)
!6175 = !DILocation(line: 707, column: 21, scope: !6174)
!6176 = !DILocation(line: 707, column: 6, scope: !6165)
!6177 = !DILocation(line: 711, column: 9, scope: !6165)
!6178 = !DILocation(line: 711, column: 2, scope: !6165)
!6179 = !DILocation(line: 718, column: 1, scope: !6165)
!6180 = distinct !DISubprogram(name: "k_sem_give", scope: !3443, file: !3443, line: 1061, type: !6181, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6183)
!6181 = !DISubroutineType(types: !6182)
!6182 = !{null, !5755}
!6183 = !{!6184}
!6184 = !DILocalVariable(name: "sem", arg: 1, scope: !6180, file: !3443, line: 1061, type: !5755)
!6185 = !DILocation(line: 0, scope: !6180)
!6186 = !DILocation(line: 1070, column: 2, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6180, file: !3443, line: 1070, column: 2)
!6188 = !{i64 2151041742}
!6189 = !DILocation(line: 1071, column: 2, scope: !6180)
!6190 = !DILocation(line: 1072, column: 1, scope: !6180)
!6191 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !562, file: !562, line: 878, type: !2418, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6192)
!6192 = !{!6193, !6194}
!6193 = !DILocalVariable(name: "dev", arg: 1, scope: !6191, file: !562, line: 878, type: !2367)
!6194 = !DILocalVariable(name: "api", scope: !6191, file: !562, line: 881, type: !2359)
!6195 = !DILocation(line: 0, scope: !6191)
!6196 = !DILocation(line: 882, column: 40, scope: !6191)
!6197 = !DILocation(line: 884, column: 11, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6191, file: !562, line: 884, column: 6)
!6199 = !DILocation(line: 884, column: 26, scope: !6198)
!6200 = !DILocation(line: 884, column: 6, scope: !6191)
!6201 = !DILocation(line: 885, column: 3, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6198, file: !562, line: 884, column: 35)
!6203 = !DILocation(line: 886, column: 2, scope: !6202)
!6204 = !DILocation(line: 890, column: 1, scope: !6191)
!6205 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !562, file: !562, line: 1136, type: !2388, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6206)
!6206 = !{!6207, !6208}
!6207 = !DILocalVariable(name: "dev", arg: 1, scope: !6205, file: !562, line: 1136, type: !2367)
!6208 = !DILocalVariable(name: "api", scope: !6205, file: !562, line: 1139, type: !2359)
!6209 = !DILocation(line: 0, scope: !6205)
!6210 = !DILocation(line: 1140, column: 40, scope: !6205)
!6211 = !DILocation(line: 1142, column: 11, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6205, file: !562, line: 1142, column: 6)
!6213 = !DILocation(line: 1142, column: 22, scope: !6212)
!6214 = !DILocation(line: 1142, column: 6, scope: !6205)
!6215 = !DILocation(line: 1145, column: 9, scope: !6205)
!6216 = !DILocation(line: 1145, column: 2, scope: !6205)
!6217 = !DILocation(line: 1150, column: 1, scope: !6205)
!6218 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5548, file: !5548, line: 265, type: !6219, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6221)
!6219 = !DISubroutineType(types: !6220)
!6220 = !{!103, !5553, !102, !1714}
!6221 = !{!6222, !6223, !6224}
!6222 = !DILocalVariable(name: "tty", arg: 1, scope: !6218, file: !5548, line: 265, type: !5553)
!6223 = !DILocalVariable(name: "buf", arg: 2, scope: !6218, file: !5548, line: 265, type: !102)
!6224 = !DILocalVariable(name: "size", arg: 3, scope: !6218, file: !5548, line: 265, type: !1714)
!6225 = !DILocation(line: 0, scope: !6218)
!6226 = !DILocation(line: 267, column: 27, scope: !6218)
!6227 = !DILocation(line: 267, column: 2, scope: !6218)
!6228 = !DILocation(line: 269, column: 7, scope: !6218)
!6229 = !DILocation(line: 269, column: 18, scope: !6218)
!6230 = !DILocation(line: 270, column: 7, scope: !6218)
!6231 = !DILocation(line: 270, column: 21, scope: !6218)
!6232 = !DILocation(line: 272, column: 11, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6218, file: !5548, line: 272, column: 6)
!6234 = !DILocation(line: 272, column: 6, scope: !6218)
!6235 = !DILocation(line: 273, column: 20, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6233, file: !5548, line: 272, column: 16)
!6237 = !DILocation(line: 273, column: 3, scope: !6236)
!6238 = !DILocation(line: 274, column: 27, scope: !6236)
!6239 = !DILocation(line: 274, column: 3, scope: !6236)
!6240 = !DILocation(line: 275, column: 2, scope: !6236)
!6241 = !DILocation(line: 277, column: 2, scope: !6218)
!6242 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5637, file: !5637, line: 265, type: !2418, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6243)
!6243 = !{!6244}
!6244 = !DILocalVariable(name: "dev", arg: 1, scope: !6242, file: !5637, line: 265, type: !2367)
!6245 = !DILocation(line: 0, scope: !6242)
!6246 = !DILocation(line: 274, column: 2, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6242, file: !5637, line: 274, column: 2)
!6248 = !{i64 2151428376}
!6249 = !DILocation(line: 275, column: 2, scope: !6242)
!6250 = !DILocation(line: 276, column: 1, scope: !6242)
!6251 = distinct !DISubprogram(name: "k_sem_init", scope: !3443, file: !3443, line: 1026, type: !6252, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6254)
!6252 = !DISubroutineType(types: !6253)
!6253 = !{!103, !5755, !32, !32}
!6254 = !{!6255, !6256, !6257}
!6255 = !DILocalVariable(name: "sem", arg: 1, scope: !6251, file: !3443, line: 1026, type: !5755)
!6256 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6251, file: !3443, line: 1026, type: !32)
!6257 = !DILocalVariable(name: "limit", arg: 3, scope: !6251, file: !3443, line: 1026, type: !32)
!6258 = !DILocation(line: 0, scope: !6251)
!6259 = !DILocation(line: 1036, column: 2, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6251, file: !3443, line: 1036, column: 2)
!6261 = !{i64 2151041606}
!6262 = !DILocation(line: 1037, column: 9, scope: !6251)
!6263 = !DILocation(line: 1037, column: 2, scope: !6251)
!6264 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5637, file: !5637, line: 241, type: !2418, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6265)
!6265 = !{!6266}
!6266 = !DILocalVariable(name: "dev", arg: 1, scope: !6264, file: !5637, line: 241, type: !2367)
!6267 = !DILocation(line: 0, scope: !6264)
!6268 = !DILocation(line: 250, column: 2, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6264, file: !5637, line: 250, column: 2)
!6270 = !{i64 2151428308}
!6271 = !DILocation(line: 251, column: 2, scope: !6264)
!6272 = !DILocation(line: 252, column: 1, scope: !6264)
!6273 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !562, file: !562, line: 934, type: !2418, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6274)
!6274 = !{!6275, !6276}
!6275 = !DILocalVariable(name: "dev", arg: 1, scope: !6273, file: !562, line: 934, type: !2367)
!6276 = !DILocalVariable(name: "api", scope: !6273, file: !562, line: 937, type: !2359)
!6277 = !DILocation(line: 0, scope: !6273)
!6278 = !DILocation(line: 938, column: 40, scope: !6273)
!6279 = !DILocation(line: 940, column: 11, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6273, file: !562, line: 940, column: 6)
!6281 = !DILocation(line: 940, column: 25, scope: !6280)
!6282 = !DILocation(line: 940, column: 6, scope: !6273)
!6283 = !DILocation(line: 941, column: 3, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6280, file: !562, line: 940, column: 34)
!6285 = !DILocation(line: 942, column: 2, scope: !6284)
!6286 = !DILocation(line: 946, column: 1, scope: !6273)
!6287 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !562, file: !562, line: 955, type: !2418, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6288)
!6288 = !{!6289, !6290}
!6289 = !DILocalVariable(name: "dev", arg: 1, scope: !6287, file: !562, line: 955, type: !2367)
!6290 = !DILocalVariable(name: "api", scope: !6287, file: !562, line: 958, type: !2359)
!6291 = !DILocation(line: 0, scope: !6287)
!6292 = !DILocation(line: 959, column: 40, scope: !6287)
!6293 = !DILocation(line: 961, column: 11, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6287, file: !562, line: 961, column: 6)
!6295 = !DILocation(line: 961, column: 26, scope: !6294)
!6296 = !DILocation(line: 961, column: 6, scope: !6287)
!6297 = !DILocation(line: 962, column: 3, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6294, file: !562, line: 961, column: 35)
!6299 = !DILocation(line: 963, column: 2, scope: !6298)
!6300 = !DILocation(line: 967, column: 1, scope: !6287)
!6301 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5548, file: !5548, line: 280, type: !6219, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !6302)
!6302 = !{!6303, !6304, !6305}
!6303 = !DILocalVariable(name: "tty", arg: 1, scope: !6301, file: !5548, line: 280, type: !5553)
!6304 = !DILocalVariable(name: "buf", arg: 2, scope: !6301, file: !5548, line: 280, type: !102)
!6305 = !DILocalVariable(name: "size", arg: 3, scope: !6301, file: !5548, line: 280, type: !1714)
!6306 = !DILocation(line: 0, scope: !6301)
!6307 = !DILocation(line: 282, column: 27, scope: !6301)
!6308 = !DILocation(line: 282, column: 2, scope: !6301)
!6309 = !DILocation(line: 284, column: 7, scope: !6301)
!6310 = !DILocation(line: 284, column: 18, scope: !6301)
!6311 = !DILocation(line: 285, column: 7, scope: !6301)
!6312 = !DILocation(line: 285, column: 21, scope: !6301)
!6313 = !DILocation(line: 287, column: 19, scope: !6301)
!6314 = !DILocation(line: 287, column: 32, scope: !6301)
!6315 = !DILocation(line: 287, column: 2, scope: !6301)
!6316 = !DILocation(line: 293, column: 2, scope: !6301)
!6317 = distinct !DISubprogram(name: "console_write", scope: !655, file: !655, line: 18, type: !6318, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !6320)
!6318 = !DISubroutineType(types: !6319)
!6319 = !{!5551, !102, !13, !1714}
!6320 = !{!6321, !6322, !6323}
!6321 = !DILocalVariable(name: "dummy", arg: 1, scope: !6317, file: !655, line: 18, type: !102)
!6322 = !DILocalVariable(name: "buf", arg: 2, scope: !6317, file: !655, line: 18, type: !13)
!6323 = !DILocalVariable(name: "size", arg: 3, scope: !6317, file: !655, line: 18, type: !1714)
!6324 = !DILocation(line: 0, scope: !6317)
!6325 = !DILocation(line: 22, column: 9, scope: !6317)
!6326 = !DILocation(line: 22, column: 2, scope: !6317)
!6327 = distinct !DISubprogram(name: "console_read", scope: !655, file: !655, line: 25, type: !6328, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !6330)
!6328 = !DISubroutineType(types: !6329)
!6329 = !{!5551, !102, !102, !1714}
!6330 = !{!6331, !6332, !6333}
!6331 = !DILocalVariable(name: "dummy", arg: 1, scope: !6327, file: !655, line: 25, type: !102)
!6332 = !DILocalVariable(name: "buf", arg: 2, scope: !6327, file: !655, line: 25, type: !102)
!6333 = !DILocalVariable(name: "size", arg: 3, scope: !6327, file: !655, line: 25, type: !1714)
!6334 = !DILocation(line: 0, scope: !6327)
!6335 = !DILocation(line: 29, column: 9, scope: !6327)
!6336 = !DILocation(line: 29, column: 2, scope: !6327)
!6337 = distinct !DISubprogram(name: "console_putchar", scope: !655, file: !655, line: 32, type: !875, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !6338)
!6338 = !{!6339}
!6339 = !DILocalVariable(name: "c", arg: 1, scope: !6337, file: !655, line: 32, type: !108)
!6340 = !DILocation(line: 0, scope: !6337)
!6341 = !DILocation(line: 34, column: 9, scope: !6337)
!6342 = !DILocation(line: 34, column: 2, scope: !6337)
!6343 = distinct !DISubprogram(name: "console_getchar", scope: !655, file: !655, line: 37, type: !6344, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !6346)
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!103}
!6346 = !{!6347, !6348}
!6347 = !DILocalVariable(name: "c", scope: !6343, file: !655, line: 39, type: !421)
!6348 = !DILocalVariable(name: "res", scope: !6343, file: !655, line: 40, type: !103)
!6349 = !DILocation(line: 39, column: 2, scope: !6343)
!6350 = !DILocation(line: 0, scope: !6343)
!6351 = !DILocation(line: 42, column: 8, scope: !6343)
!6352 = !DILocation(line: 43, column: 10, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6343, file: !655, line: 43, column: 6)
!6354 = !DILocation(line: 43, column: 6, scope: !6343)
!6355 = !DILocation(line: 48, column: 1, scope: !6343)
!6356 = distinct !DISubprogram(name: "console_init", scope: !655, file: !655, line: 50, type: !6344, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !6357)
!6357 = !{!6358, !6359, !6360}
!6358 = !DILocalVariable(name: "uart_dev", scope: !6356, file: !655, line: 52, type: !568)
!6359 = !DILocalVariable(name: "ret", scope: !6356, file: !655, line: 53, type: !103)
!6360 = !DILocalVariable(name: "api", scope: !6361, file: !655, line: 68, type: !559)
!6361 = distinct !DILexicalBlock(scope: !6362, file: !655, line: 67, column: 71)
!6362 = distinct !DILexicalBlock(scope: !6356, file: !655, line: 67, column: 6)
!6363 = !DILocation(line: 0, scope: !6356)
!6364 = !DILocation(line: 56, column: 7, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6356, file: !655, line: 56, column: 6)
!6366 = !DILocation(line: 56, column: 6, scope: !6356)
!6367 = !DILocation(line: 60, column: 8, scope: !6356)
!6368 = !DILocation(line: 62, column: 6, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6356, file: !655, line: 62, column: 6)
!6370 = !DILocation(line: 62, column: 6, scope: !6356)
!6371 = !DILocation(line: 69, column: 46, scope: !6361)
!6372 = !DILocation(line: 0, scope: !6361)
!6373 = !DILocation(line: 70, column: 13, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6361, file: !655, line: 70, column: 7)
!6375 = !DILocation(line: 70, column: 8, scope: !6374)
!6376 = !DILocation(line: 75, column: 2, scope: !6356)
!6377 = !DILocation(line: 76, column: 2, scope: !6356)
!6378 = !DILocation(line: 78, column: 2, scope: !6356)
!6379 = !DILocation(line: 79, column: 1, scope: !6356)
!6380 = distinct !DISubprogram(name: "device_is_ready", scope: !6381, file: !6381, line: 47, type: !6382, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !6384)
!6381 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!6382 = !DISubroutineType(types: !6383)
!6383 = !{!583, !568}
!6384 = !{!6385}
!6385 = !DILocalVariable(name: "dev", arg: 1, scope: !6380, file: !6381, line: 47, type: !568)
!6386 = !DILocation(line: 0, scope: !6380)
!6387 = !DILocation(line: 55, column: 2, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6380, file: !6381, line: 55, column: 2)
!6389 = !{i64 2151340589}
!6390 = !DILocation(line: 56, column: 9, scope: !6380)
!6391 = !DILocation(line: 56, column: 2, scope: !6380)
!6392 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !571, file: !571, line: 730, type: !6382, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !6393)
!6393 = !{!6394}
!6394 = !DILocalVariable(name: "dev", arg: 1, scope: !6392, file: !571, line: 730, type: !568)
!6395 = !DILocation(line: 0, scope: !6392)
!6396 = !DILocation(line: 732, column: 9, scope: !6392)
!6397 = !DILocation(line: 732, column: 2, scope: !6392)
!6398 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6399, file: !6399, line: 57, type: !6400, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !6446)
!6399 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6400 = !DISubroutineType(types: !6401)
!6401 = !{null, !32, !6402}
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 32)
!6403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6404)
!6404 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2559, line: 141, baseType: !6405)
!6405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2559, line: 97, size: 256, elements: !6406)
!6406 = !{!6407}
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6405, file: !2559, line: 107, baseType: !6408, size: 256)
!6408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2559, line: 98, size: 256, elements: !6409)
!6409 = !{!6410, !6415, !6420, !6425, !6430, !6435, !6440, !6445}
!6410 = !DIDerivedType(tag: DW_TAG_member, scope: !6408, file: !2559, line: 99, baseType: !6411, size: 32)
!6411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6408, file: !2559, line: 99, size: 32, elements: !6412)
!6412 = !{!6413, !6414}
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6411, file: !2559, line: 99, baseType: !415, size: 32)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6411, file: !2559, line: 99, baseType: !415, size: 32)
!6415 = !DIDerivedType(tag: DW_TAG_member, scope: !6408, file: !2559, line: 100, baseType: !6416, size: 32, offset: 32)
!6416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6408, file: !2559, line: 100, size: 32, elements: !6417)
!6417 = !{!6418, !6419}
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6416, file: !2559, line: 100, baseType: !415, size: 32)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6416, file: !2559, line: 100, baseType: !415, size: 32)
!6420 = !DIDerivedType(tag: DW_TAG_member, scope: !6408, file: !2559, line: 101, baseType: !6421, size: 32, offset: 64)
!6421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6408, file: !2559, line: 101, size: 32, elements: !6422)
!6422 = !{!6423, !6424}
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6421, file: !2559, line: 101, baseType: !415, size: 32)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6421, file: !2559, line: 101, baseType: !415, size: 32)
!6425 = !DIDerivedType(tag: DW_TAG_member, scope: !6408, file: !2559, line: 102, baseType: !6426, size: 32, offset: 96)
!6426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6408, file: !2559, line: 102, size: 32, elements: !6427)
!6427 = !{!6428, !6429}
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6426, file: !2559, line: 102, baseType: !415, size: 32)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6426, file: !2559, line: 102, baseType: !415, size: 32)
!6430 = !DIDerivedType(tag: DW_TAG_member, scope: !6408, file: !2559, line: 103, baseType: !6431, size: 32, offset: 128)
!6431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6408, file: !2559, line: 103, size: 32, elements: !6432)
!6432 = !{!6433, !6434}
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6431, file: !2559, line: 103, baseType: !415, size: 32)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6431, file: !2559, line: 103, baseType: !415, size: 32)
!6435 = !DIDerivedType(tag: DW_TAG_member, scope: !6408, file: !2559, line: 104, baseType: !6436, size: 32, offset: 160)
!6436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6408, file: !2559, line: 104, size: 32, elements: !6437)
!6437 = !{!6438, !6439}
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6436, file: !2559, line: 104, baseType: !415, size: 32)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6436, file: !2559, line: 104, baseType: !415, size: 32)
!6440 = !DIDerivedType(tag: DW_TAG_member, scope: !6408, file: !2559, line: 105, baseType: !6441, size: 32, offset: 192)
!6441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6408, file: !2559, line: 105, size: 32, elements: !6442)
!6442 = !{!6443, !6444}
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6441, file: !2559, line: 105, baseType: !415, size: 32)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6441, file: !2559, line: 105, baseType: !415, size: 32)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6408, file: !2559, line: 106, baseType: !415, size: 32, offset: 224)
!6446 = !{!6447, !6448}
!6447 = !DILocalVariable(name: "reason", arg: 1, scope: !6398, file: !6399, line: 57, type: !32)
!6448 = !DILocalVariable(name: "esf", arg: 2, scope: !6398, file: !6399, line: 57, type: !6402)
!6449 = !DILocation(line: 0, scope: !6398)
!6450 = !DILocation(line: 63, column: 2, scope: !6398)
!6451 = !DILocation(line: 64, column: 1, scope: !6398)
!6452 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6399, file: !6399, line: 82, type: !6453, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !6468)
!6453 = !DISubroutineType(types: !6454)
!6454 = !{null, !6402, !6455}
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6456, size: 32)
!6456 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !1867, line: 37, baseType: !6457)
!6457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1867, line: 25, size: 288, elements: !6458)
!6458 = !{!6459, !6460, !6461, !6462, !6463, !6464, !6465, !6466, !6467}
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6457, file: !1867, line: 26, baseType: !415, size: 32)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6457, file: !1867, line: 27, baseType: !415, size: 32, offset: 32)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6457, file: !1867, line: 28, baseType: !415, size: 32, offset: 64)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6457, file: !1867, line: 29, baseType: !415, size: 32, offset: 96)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6457, file: !1867, line: 30, baseType: !415, size: 32, offset: 128)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6457, file: !1867, line: 31, baseType: !415, size: 32, offset: 160)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6457, file: !1867, line: 32, baseType: !415, size: 32, offset: 192)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6457, file: !1867, line: 33, baseType: !415, size: 32, offset: 224)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6457, file: !1867, line: 34, baseType: !415, size: 32, offset: 256)
!6468 = !{!6469, !6470, !6471}
!6469 = !DILocalVariable(name: "esf", arg: 1, scope: !6452, file: !6399, line: 82, type: !6402)
!6470 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6452, file: !6399, line: 82, type: !6455)
!6471 = !DILocalVariable(name: "reason", scope: !6452, file: !6399, line: 88, type: !32)
!6472 = !DILocation(line: 0, scope: !6452)
!6473 = !DILocation(line: 88, column: 35, scope: !6452)
!6474 = !DILocation(line: 108, column: 2, scope: !6452)
!6475 = !DILocation(line: 131, column: 1, scope: !6452)
!6476 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6399, file: !6399, line: 133, type: !6477, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !6479)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{null, !102}
!6479 = !{!6480, !6481, !6482}
!6480 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6476, file: !6399, line: 133, type: !102)
!6481 = !DILocalVariable(name: "ssf_contents", scope: !6476, file: !6399, line: 135, type: !1351)
!6482 = !DILocalVariable(name: "oops_esf", scope: !6476, file: !6399, line: 136, type: !6404)
!6483 = !DILocation(line: 0, scope: !6476)
!6484 = !DILocation(line: 136, column: 2, scope: !6476)
!6485 = !DILocation(line: 136, column: 15, scope: !6476)
!6486 = !DILocation(line: 139, column: 22, scope: !6476)
!6487 = !DILocation(line: 139, column: 17, scope: !6476)
!6488 = !DILocation(line: 139, column: 20, scope: !6476)
!6489 = !DILocation(line: 141, column: 2, scope: !6476)
!6490 = !DILocation(line: 142, column: 2, scope: !6476)
!6491 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6492, file: !6492, line: 40, type: !5689, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !6493)
!6492 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6493 = !{!6494}
!6494 = !DILocalVariable(name: "irq", arg: 1, scope: !6491, file: !6492, line: 40, type: !32)
!6495 = !DILocation(line: 0, scope: !6491)
!6496 = !DILocation(line: 42, column: 2, scope: !6491)
!6497 = !DILocation(line: 43, column: 1, scope: !6491)
!6498 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1552, file: !1552, line: 1684, type: !6499, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !6501)
!6499 = !DISubroutineType(types: !6500)
!6500 = !{null, !2453}
!6501 = !{!6502}
!6502 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6498, file: !1552, line: 1684, type: !2453)
!6503 = !DILocation(line: 0, scope: !6498)
!6504 = !DILocation(line: 1686, column: 23, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6498, file: !1552, line: 1686, column: 7)
!6506 = !DILocation(line: 1686, column: 7, scope: !6498)
!6507 = !DILocation(line: 1688, column: 5, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6505, file: !1552, line: 1687, column: 3)
!6509 = !{i64 2154444035}
!6510 = !DILocation(line: 1689, column: 81, scope: !6508)
!6511 = !DILocation(line: 1689, column: 60, scope: !6508)
!6512 = !DILocation(line: 1689, column: 34, scope: !6508)
!6513 = !DILocation(line: 1689, column: 5, scope: !6508)
!6514 = !DILocation(line: 1689, column: 43, scope: !6508)
!6515 = !DILocation(line: 1690, column: 5, scope: !6508)
!6516 = !{i64 2154444149}
!6517 = !DILocation(line: 1691, column: 3, scope: !6508)
!6518 = !DILocation(line: 1692, column: 1, scope: !6498)
!6519 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6492, file: !6492, line: 45, type: !5689, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !6520)
!6520 = !{!6521}
!6521 = !DILocalVariable(name: "irq", arg: 1, scope: !6519, file: !6492, line: 45, type: !32)
!6522 = !DILocation(line: 0, scope: !6519)
!6523 = !DILocation(line: 47, column: 2, scope: !6519)
!6524 = !DILocation(line: 48, column: 1, scope: !6519)
!6525 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1552, file: !1552, line: 1722, type: !6499, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !6526)
!6526 = !{!6527}
!6527 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6525, file: !1552, line: 1722, type: !2453)
!6528 = !DILocation(line: 0, scope: !6525)
!6529 = !DILocation(line: 1724, column: 23, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6525, file: !1552, line: 1724, column: 7)
!6531 = !DILocation(line: 1724, column: 7, scope: !6525)
!6532 = !DILocation(line: 1726, column: 81, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6530, file: !1552, line: 1725, column: 3)
!6534 = !DILocation(line: 1726, column: 60, scope: !6533)
!6535 = !DILocation(line: 1726, column: 34, scope: !6533)
!6536 = !DILocation(line: 1726, column: 5, scope: !6533)
!6537 = !DILocation(line: 1726, column: 43, scope: !6533)
!6538 = !DILocation(line: 271, column: 3, scope: !6539, inlinedAt: !6541)
!6539 = distinct !DISubprogram(name: "__DSB", scope: !6540, file: !6540, line: 269, type: !3019, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !842)
!6540 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6541 = distinct !DILocation(line: 1727, column: 5, scope: !6533)
!6542 = !{i64 6898422}
!6543 = !DILocation(line: 260, column: 3, scope: !6544, inlinedAt: !6545)
!6544 = distinct !DISubprogram(name: "__ISB", scope: !6540, file: !6540, line: 258, type: !3019, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !842)
!6545 = distinct !DILocation(line: 1728, column: 5, scope: !6533)
!6546 = !{i64 6898139}
!6547 = !DILocation(line: 1729, column: 3, scope: !6533)
!6548 = !DILocation(line: 1730, column: 1, scope: !6525)
!6549 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6492, file: !6492, line: 50, type: !6550, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !6552)
!6550 = !DISubroutineType(types: !6551)
!6551 = !{!103, !32}
!6552 = !{!6553}
!6553 = !DILocalVariable(name: "irq", arg: 1, scope: !6549, file: !6492, line: 50, type: !32)
!6554 = !DILocation(line: 0, scope: !6549)
!6555 = !DILocation(line: 52, column: 20, scope: !6549)
!6556 = !DILocation(line: 52, column: 9, scope: !6549)
!6557 = !DILocation(line: 52, column: 41, scope: !6549)
!6558 = !DILocation(line: 52, column: 39, scope: !6549)
!6559 = !DILocation(line: 52, column: 2, scope: !6549)
!6560 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6492, file: !6492, line: 64, type: !6561, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !6563)
!6561 = !DISubroutineType(types: !6562)
!6562 = !{null, !32, !32, !415}
!6563 = !{!6564, !6565, !6566}
!6564 = !DILocalVariable(name: "irq", arg: 1, scope: !6560, file: !6492, line: 64, type: !32)
!6565 = !DILocalVariable(name: "prio", arg: 2, scope: !6560, file: !6492, line: 64, type: !32)
!6566 = !DILocalVariable(name: "flags", arg: 3, scope: !6560, file: !6492, line: 64, type: !415)
!6567 = !DILocation(line: 0, scope: !6560)
!6568 = !DILocation(line: 83, column: 8, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6570, file: !6492, line: 82, column: 9)
!6570 = distinct !DILexicalBlock(scope: !6560, file: !6492, line: 76, column: 6)
!6571 = !DILocation(line: 95, column: 2, scope: !6560)
!6572 = !DILocation(line: 96, column: 1, scope: !6560)
!6573 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1552, file: !1552, line: 1814, type: !6574, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !6576)
!6574 = !DISubroutineType(types: !6575)
!6575 = !{null, !2453, !415}
!6576 = !{!6577, !6578}
!6577 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6573, file: !1552, line: 1814, type: !2453)
!6578 = !DILocalVariable(name: "priority", arg: 2, scope: !6573, file: !1552, line: 1814, type: !415)
!6579 = !DILocation(line: 0, scope: !6573)
!6580 = !DILocation(line: 0, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6573, file: !1552, line: 1816, column: 7)
!6582 = !DILocation(line: 1816, column: 7, scope: !6573)
!6583 = !DILocation(line: 1824, column: 1, scope: !6573)
!6584 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6492, file: !6492, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !6585)
!6585 = !{!6586}
!6586 = !DILocalVariable(name: "unused", arg: 1, scope: !6584, file: !6492, line: 155, type: !13)
!6587 = !DILocation(line: 0, scope: !6584)
!6588 = !DILocation(line: 159, column: 2, scope: !6584)
!6589 = !DILocation(line: 160, column: 1, scope: !6584)
!6590 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6591, file: !6591, line: 87, type: !3019, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !842)
!6591 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6592 = !DILocation(line: 89, column: 2, scope: !6590)
!6593 = !DILocation(line: 90, column: 2, scope: !6590)
!6594 = !DILocation(line: 91, column: 1, scope: !6590)
!6595 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6591, file: !6591, line: 23, type: !3019, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !842)
!6596 = !DISubprogram(name: "z_arm_int_exit", scope: !6597, file: !6597, line: 153, type: !3019, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !842)
!6597 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6598 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6599, file: !6599, line: 256, type: !3019, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !842)
!6599 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6600 = !DILocation(line: 258, column: 2, scope: !6598)
!6601 = !DILocation(line: 260, column: 2, scope: !6598)
!6602 = !DILocation(line: 262, column: 2, scope: !6598)
!6603 = !DILocation(line: 263, column: 2, scope: !6598)
!6604 = !DILocation(line: 267, column: 2, scope: !6598)
!6605 = !DILocation(line: 268, column: 2, scope: !6598)
!6606 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6599, file: !6599, line: 53, type: !3019, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !842)
!6607 = !DILocation(line: 55, column: 12, scope: !6606)
!6608 = !DILocation(line: 271, column: 3, scope: !6609, inlinedAt: !6610)
!6609 = distinct !DISubprogram(name: "__DSB", scope: !6540, file: !6540, line: 269, type: !3019, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !842)
!6610 = distinct !DILocation(line: 56, column: 2, scope: !6606)
!6611 = !{i64 6934196}
!6612 = !DILocation(line: 260, column: 3, scope: !6613, inlinedAt: !6614)
!6613 = distinct !DISubprogram(name: "__ISB", scope: !6540, file: !6540, line: 258, type: !3019, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !842)
!6614 = distinct !DILocation(line: 57, column: 2, scope: !6606)
!6615 = !{i64 6933913}
!6616 = !DILocation(line: 58, column: 1, scope: !6606)
!6617 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6599, file: !6599, line: 96, type: !3019, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !842)
!6618 = !DILocation(line: 103, column: 13, scope: !6617)
!6619 = !DILocation(line: 975, column: 3, scope: !6620, inlinedAt: !6625)
!6620 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6540, file: !6540, line: 971, type: !6621, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !6623)
!6621 = !DISubroutineType(types: !6622)
!6622 = !{!415}
!6623 = !{!6624}
!6624 = !DILocalVariable(name: "result", scope: !6620, file: !6540, line: 973, type: !415)
!6625 = distinct !DILocation(line: 189, column: 16, scope: !6617)
!6626 = !{i64 6955026}
!6627 = !DILocation(line: 0, scope: !6620, inlinedAt: !6625)
!6628 = !DILocation(line: 189, column: 32, scope: !6617)
!6629 = !DILocalVariable(name: "control", arg: 1, scope: !6630, file: !6540, line: 1001, type: !415)
!6630 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6540, file: !6540, line: 1001, type: !6631, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !6633)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{null, !415}
!6633 = !{!6629}
!6634 = !DILocation(line: 0, scope: !6630, inlinedAt: !6635)
!6635 = distinct !DILocation(line: 189, column: 2, scope: !6617)
!6636 = !DILocation(line: 1003, column: 3, scope: !6630, inlinedAt: !6635)
!6637 = !{i64 6955746}
!6638 = !DILocation(line: 260, column: 3, scope: !6613, inlinedAt: !6639)
!6639 = distinct !DILocation(line: 1004, column: 3, scope: !6630, inlinedAt: !6635)
!6640 = !DILocation(line: 191, column: 1, scope: !6617)
!6641 = distinct !DISubprogram(name: "arch_swap", scope: !6642, file: !6642, line: 33, type: !6550, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !6643)
!6642 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6643 = !{!6644}
!6644 = !DILocalVariable(name: "key", arg: 1, scope: !6641, file: !6642, line: 33, type: !32)
!6645 = !DILocation(line: 0, scope: !6641)
!6646 = !DILocation(line: 36, column: 2, scope: !6641)
!6647 = !DILocation(line: 36, column: 17, scope: !6641)
!6648 = !DILocation(line: 36, column: 25, scope: !6641)
!6649 = !DILocation(line: 37, column: 37, scope: !6641)
!6650 = !DILocation(line: 37, column: 17, scope: !6641)
!6651 = !DILocation(line: 37, column: 35, scope: !6641)
!6652 = !DILocation(line: 41, column: 12, scope: !6641)
!6653 = !DILocalVariable(name: "key", arg: 1, scope: !6654, file: !5666, line: 84, type: !32)
!6654 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !6655)
!6655 = !{!6653}
!6656 = !DILocation(line: 0, scope: !6654, inlinedAt: !6657)
!6657 = distinct !DILocation(line: 44, column: 2, scope: !6641)
!6658 = !DILocation(line: 95, column: 2, scope: !6654, inlinedAt: !6657)
!6659 = !{i64 2840694}
!6660 = !DILocation(line: 53, column: 9, scope: !6641)
!6661 = !DILocation(line: 53, column: 24, scope: !6641)
!6662 = !DILocation(line: 53, column: 2, scope: !6641)
!6663 = distinct !DISubprogram(name: "arch_new_thread", scope: !6664, file: !6664, line: 56, type: !6665, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6766)
!6664 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6665 = !DISubroutineType(types: !6666)
!6666 = !{null, !6667, !6761, !869, !3327, !102, !102, !102}
!6667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6668, size: 32)
!6668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1802, line: 245, size: 896, elements: !6669)
!6669 = !{!6670, !6728, !6740, !6741, !6742, !6743, !6756}
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6668, file: !1802, line: 247, baseType: !6671, size: 384)
!6671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1802, line: 57, size: 384, elements: !6672)
!6672 = !{!6673, !6697, !6704, !6705, !6706, !6715, !6716, !6717}
!6673 = !DIDerivedType(tag: DW_TAG_member, scope: !6671, file: !1802, line: 60, baseType: !6674, size: 64)
!6674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6671, file: !1802, line: 60, size: 64, elements: !6675)
!6675 = !{!6676, !6691}
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6674, file: !1802, line: 61, baseType: !6677, size: 64)
!6677 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !679, line: 49, baseType: !6678)
!6678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !6679)
!6679 = !{!6680, !6686}
!6680 = !DIDerivedType(tag: DW_TAG_member, scope: !6678, file: !679, line: 38, baseType: !6681, size: 32)
!6681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6678, file: !679, line: 38, size: 32, elements: !6682)
!6682 = !{!6683, !6685}
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6681, file: !679, line: 39, baseType: !6684, size: 32)
!6684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6678, size: 32)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6681, file: !679, line: 40, baseType: !6684, size: 32)
!6686 = !DIDerivedType(tag: DW_TAG_member, scope: !6678, file: !679, line: 42, baseType: !6687, size: 32, offset: 32)
!6687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6678, file: !679, line: 42, size: 32, elements: !6688)
!6688 = !{!6689, !6690}
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6687, file: !679, line: 43, baseType: !6684, size: 32)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6687, file: !679, line: 44, baseType: !6684, size: 32)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6674, file: !1802, line: 62, baseType: !6692, size: 64)
!6692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1827, line: 49, size: 64, elements: !6693)
!6693 = !{!6694}
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6692, file: !1827, line: 50, baseType: !6695, size: 64)
!6695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6696, size: 64, elements: !1387)
!6696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6692, size: 32)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6671, file: !1802, line: 68, baseType: !6698, size: 32, offset: 64)
!6698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6699, size: 32)
!6699 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !6700)
!6700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !6701)
!6701 = !{!6702}
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6700, file: !674, line: 232, baseType: !6703, size: 64)
!6703 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !6678)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6671, file: !1802, line: 71, baseType: !421, size: 8, offset: 96)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6671, file: !1802, line: 74, baseType: !421, size: 8, offset: 104)
!6706 = !DIDerivedType(tag: DW_TAG_member, scope: !6671, file: !1802, line: 90, baseType: !6707, size: 16, offset: 112)
!6707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6671, file: !1802, line: 90, size: 16, elements: !6708)
!6708 = !{!6709, !6714}
!6709 = !DIDerivedType(tag: DW_TAG_member, scope: !6707, file: !1802, line: 91, baseType: !6710, size: 16)
!6710 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6707, file: !1802, line: 91, size: 16, elements: !6711)
!6711 = !{!6712, !6713}
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6710, file: !1802, line: 96, baseType: !1848, size: 8)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6710, file: !1802, line: 97, baseType: !421, size: 8, offset: 8)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6707, file: !1802, line: 100, baseType: !532, size: 16)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6671, file: !1802, line: 107, baseType: !415, size: 32, offset: 128)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6671, file: !1802, line: 127, baseType: !102, size: 32, offset: 160)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6671, file: !1802, line: 131, baseType: !6718, size: 192, offset: 192)
!6718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !674, line: 244, size: 192, elements: !6719)
!6719 = !{!6720, !6721, !6727}
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6718, file: !674, line: 245, baseType: !6677, size: 64)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6718, file: !674, line: 246, baseType: !6722, size: 32, offset: 64)
!6722 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !674, line: 242, baseType: !6723)
!6723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6724, size: 32)
!6724 = !DISubroutineType(types: !6725)
!6725 = !{null, !6726}
!6726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6718, size: 32)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6718, file: !674, line: 249, baseType: !1548, size: 64, offset: 128)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6668, file: !1802, line: 250, baseType: !6729, size: 288, offset: 384)
!6729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1867, line: 25, size: 288, elements: !6730)
!6730 = !{!6731, !6732, !6733, !6734, !6735, !6736, !6737, !6738, !6739}
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6729, file: !1867, line: 26, baseType: !415, size: 32)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6729, file: !1867, line: 27, baseType: !415, size: 32, offset: 32)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6729, file: !1867, line: 28, baseType: !415, size: 32, offset: 64)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6729, file: !1867, line: 29, baseType: !415, size: 32, offset: 96)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6729, file: !1867, line: 30, baseType: !415, size: 32, offset: 128)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6729, file: !1867, line: 31, baseType: !415, size: 32, offset: 160)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6729, file: !1867, line: 32, baseType: !415, size: 32, offset: 192)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6729, file: !1867, line: 33, baseType: !415, size: 32, offset: 224)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6729, file: !1867, line: 34, baseType: !415, size: 32, offset: 256)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6668, file: !1802, line: 253, baseType: !102, size: 32, offset: 672)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6668, file: !1802, line: 256, baseType: !6699, size: 64, offset: 704)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6668, file: !1802, line: 294, baseType: !103, size: 32, offset: 768)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6668, file: !1802, line: 325, baseType: !6744, size: 32, offset: 800)
!6744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6745, size: 32)
!6745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !670, line: 5073, size: 160, elements: !6746)
!6746 = !{!6747, !6753, !6754}
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6745, file: !670, line: 5074, baseType: !6748, size: 96)
!6748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1887, line: 56, size: 96, elements: !6749)
!6749 = !{!6750, !6751, !6752}
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6748, file: !1887, line: 57, baseType: !1890, size: 32)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6748, file: !1887, line: 58, baseType: !102, size: 32, offset: 32)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6748, file: !1887, line: 59, baseType: !1714, size: 32, offset: 64)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6745, file: !670, line: 5075, baseType: !6699, size: 64, offset: 96)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6745, file: !670, line: 5076, baseType: !6755, offset: 160)
!6755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6668, file: !1802, line: 343, baseType: !6757, size: 64, offset: 832)
!6757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1867, line: 60, size: 64, elements: !6758)
!6758 = !{!6759, !6760}
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6757, file: !1867, line: 63, baseType: !415, size: 32)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6757, file: !1867, line: 66, baseType: !415, size: 32, offset: 32)
!6761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6762, size: 32)
!6762 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3328, line: 44, baseType: !6763)
!6763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1917, line: 47, size: 8, elements: !6764)
!6764 = !{!6765}
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6763, file: !1917, line: 48, baseType: !108, size: 8)
!6766 = !{!6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774}
!6767 = !DILocalVariable(name: "thread", arg: 1, scope: !6663, file: !6664, line: 56, type: !6667)
!6768 = !DILocalVariable(name: "stack", arg: 2, scope: !6663, file: !6664, line: 56, type: !6761)
!6769 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6663, file: !6664, line: 57, type: !869)
!6770 = !DILocalVariable(name: "entry", arg: 4, scope: !6663, file: !6664, line: 57, type: !3327)
!6771 = !DILocalVariable(name: "p1", arg: 5, scope: !6663, file: !6664, line: 58, type: !102)
!6772 = !DILocalVariable(name: "p2", arg: 6, scope: !6663, file: !6664, line: 58, type: !102)
!6773 = !DILocalVariable(name: "p3", arg: 7, scope: !6663, file: !6664, line: 58, type: !102)
!6774 = !DILocalVariable(name: "iframe", scope: !6663, file: !6664, line: 60, type: !2557)
!6775 = !DILocation(line: 0, scope: !6663)
!6776 = !DILocation(line: 85, column: 11, scope: !6663)
!6777 = !DILocation(line: 93, column: 10, scope: !6663)
!6778 = !DILocation(line: 98, column: 13, scope: !6663)
!6779 = !DILocation(line: 100, column: 15, scope: !6663)
!6780 = !DILocation(line: 100, column: 10, scope: !6663)
!6781 = !DILocation(line: 100, column: 13, scope: !6663)
!6782 = !DILocation(line: 101, column: 15, scope: !6663)
!6783 = !DILocation(line: 101, column: 10, scope: !6663)
!6784 = !DILocation(line: 101, column: 13, scope: !6663)
!6785 = !DILocation(line: 102, column: 15, scope: !6663)
!6786 = !DILocation(line: 102, column: 10, scope: !6663)
!6787 = !DILocation(line: 102, column: 13, scope: !6663)
!6788 = !DILocation(line: 103, column: 15, scope: !6663)
!6789 = !DILocation(line: 103, column: 10, scope: !6663)
!6790 = !DILocation(line: 103, column: 13, scope: !6663)
!6791 = !DILocation(line: 106, column: 10, scope: !6663)
!6792 = !DILocation(line: 106, column: 15, scope: !6663)
!6793 = !DILocation(line: 122, column: 29, scope: !6663)
!6794 = !DILocation(line: 122, column: 23, scope: !6663)
!6795 = !DILocation(line: 122, column: 27, scope: !6663)
!6796 = !DILocation(line: 123, column: 15, scope: !6663)
!6797 = !DILocation(line: 123, column: 23, scope: !6663)
!6798 = !DILocation(line: 143, column: 1, scope: !6663)
!6799 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6664, file: !6664, line: 530, type: !6800, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6802)
!6800 = !DISubroutineType(types: !6801)
!6801 = !{null, !6667, !869, !3327}
!6802 = !{!6803, !6804, !6805}
!6803 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6799, file: !6664, line: 530, type: !6667)
!6804 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6799, file: !6664, line: 530, type: !869)
!6805 = !DILocalVariable(name: "_main", arg: 3, scope: !6799, file: !6664, line: 531, type: !3327)
!6806 = !DILocation(line: 0, scope: !6799)
!6807 = !DILocation(line: 535, column: 11, scope: !6799)
!6808 = !DILocation(line: 576, column: 2, scope: !6799)
!6809 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6810 = !DILocation(line: 603, column: 2, scope: !6799)
!6811 = distinct !DISubprogram(name: "z_arm_fault", scope: !6812, file: !6812, line: 1036, type: !6813, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6828)
!6812 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6813 = !DISubroutineType(types: !6814)
!6814 = !{null, !415, !415, !415, !6815}
!6815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6816, size: 32)
!6816 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !1867, line: 37, baseType: !6817)
!6817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1867, line: 25, size: 288, elements: !6818)
!6818 = !{!6819, !6820, !6821, !6822, !6823, !6824, !6825, !6826, !6827}
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6817, file: !1867, line: 26, baseType: !415, size: 32)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6817, file: !1867, line: 27, baseType: !415, size: 32, offset: 32)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6817, file: !1867, line: 28, baseType: !415, size: 32, offset: 64)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6817, file: !1867, line: 29, baseType: !415, size: 32, offset: 96)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6817, file: !1867, line: 30, baseType: !415, size: 32, offset: 128)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6817, file: !1867, line: 31, baseType: !415, size: 32, offset: 160)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6817, file: !1867, line: 32, baseType: !415, size: 32, offset: 192)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6817, file: !1867, line: 33, baseType: !415, size: 32, offset: 224)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6817, file: !1867, line: 34, baseType: !415, size: 32, offset: 256)
!6828 = !{!6829, !6830, !6831, !6832, !6833, !6834, !6835, !6836, !6837, !6838}
!6829 = !DILocalVariable(name: "msp", arg: 1, scope: !6811, file: !6812, line: 1036, type: !415)
!6830 = !DILocalVariable(name: "psp", arg: 2, scope: !6811, file: !6812, line: 1036, type: !415)
!6831 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6811, file: !6812, line: 1036, type: !415)
!6832 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6811, file: !6812, line: 1037, type: !6815)
!6833 = !DILocalVariable(name: "reason", scope: !6811, file: !6812, line: 1039, type: !415)
!6834 = !DILocalVariable(name: "fault", scope: !6811, file: !6812, line: 1040, type: !103)
!6835 = !DILocalVariable(name: "recoverable", scope: !6811, file: !6812, line: 1041, type: !583)
!6836 = !DILocalVariable(name: "nested_exc", scope: !6811, file: !6812, line: 1041, type: !583)
!6837 = !DILocalVariable(name: "esf", scope: !6811, file: !6812, line: 1042, type: !2625)
!6838 = !DILocalVariable(name: "esf_copy", scope: !6811, file: !6812, line: 1047, type: !2626)
!6839 = !DILocation(line: 0, scope: !6811)
!6840 = !DILocation(line: 1040, column: 19, scope: !6811)
!6841 = !DILocation(line: 1040, column: 24, scope: !6811)
!6842 = !DILocation(line: 1041, column: 2, scope: !6811)
!6843 = !DILocation(line: 1047, column: 2, scope: !6811)
!6844 = !DILocation(line: 1047, column: 15, scope: !6811)
!6845 = !DILocalVariable(name: "key", arg: 1, scope: !6846, file: !5666, line: 84, type: !32)
!6846 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6847)
!6847 = !{!6845}
!6848 = !DILocation(line: 0, scope: !6846, inlinedAt: !6849)
!6849 = distinct !DILocation(line: 1050, column: 2, scope: !6811)
!6850 = !DILocation(line: 95, column: 2, scope: !6846, inlinedAt: !6849)
!6851 = !{i64 2873938}
!6852 = !DILocation(line: 1055, column: 9, scope: !6811)
!6853 = !DILocation(line: 1063, column: 11, scope: !6811)
!6854 = !DILocation(line: 1064, column: 6, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6811, file: !6812, line: 1064, column: 6)
!6856 = !{i8 0, i8 2}
!6857 = !DILocation(line: 1064, column: 6, scope: !6811)
!6858 = !DILocation(line: 1070, column: 20, scope: !6811)
!6859 = !DILocation(line: 1070, column: 2, scope: !6811)
!6860 = !DILocation(line: 1089, column: 6, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6811, file: !6812, line: 1089, column: 6)
!6862 = !DILocation(line: 0, scope: !6861)
!6863 = !DILocation(line: 1089, column: 6, scope: !6811)
!6864 = !DILocation(line: 1090, column: 28, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !6812, line: 1090, column: 7)
!6866 = distinct !DILexicalBlock(scope: !6861, file: !6812, line: 1089, column: 18)
!6867 = !DILocation(line: 1090, column: 44, scope: !6865)
!6868 = !DILocation(line: 1090, column: 7, scope: !6866)
!6869 = !DILocation(line: 1091, column: 24, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6865, file: !6812, line: 1090, column: 50)
!6871 = !DILocation(line: 1092, column: 3, scope: !6870)
!6872 = !DILocation(line: 1094, column: 23, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6861, file: !6812, line: 1093, column: 9)
!6874 = !DILocation(line: 1097, column: 2, scope: !6811)
!6875 = !DILocation(line: 1098, column: 1, scope: !6811)
!6876 = distinct !DISubprogram(name: "get_esf", scope: !6812, file: !6812, line: 894, type: !6877, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6880)
!6877 = !DISubroutineType(types: !6878)
!6878 = !{!2625, !415, !415, !415, !6879}
!6879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 32)
!6880 = !{!6881, !6882, !6883, !6884, !6885, !6886}
!6881 = !DILocalVariable(name: "msp", arg: 1, scope: !6876, file: !6812, line: 894, type: !415)
!6882 = !DILocalVariable(name: "psp", arg: 2, scope: !6876, file: !6812, line: 894, type: !415)
!6883 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6876, file: !6812, line: 894, type: !415)
!6884 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6876, file: !6812, line: 895, type: !6879)
!6885 = !DILocalVariable(name: "alternative_state_exc", scope: !6876, file: !6812, line: 897, type: !583)
!6886 = !DILocalVariable(name: "ptr_esf", scope: !6876, file: !6812, line: 898, type: !2625)
!6887 = !DILocation(line: 0, scope: !6876)
!6888 = !DILocation(line: 900, column: 14, scope: !6876)
!6889 = !DILocation(line: 902, column: 49, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6876, file: !6812, line: 902, column: 6)
!6891 = !DILocation(line: 902, column: 6, scope: !6876)
!6892 = !DILocation(line: 983, column: 18, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6876, file: !6812, line: 983, column: 6)
!6894 = !DILocation(line: 991, column: 7, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !6812, line: 990, column: 30)
!6896 = distinct !DILexicalBlock(scope: !6876, file: !6812, line: 990, column: 6)
!6897 = !DILocation(line: 998, column: 16, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !6812, line: 995, column: 10)
!6899 = distinct !DILexicalBlock(scope: !6895, file: !6812, line: 991, column: 7)
!6900 = !DILocation(line: 1002, column: 2, scope: !6876)
!6901 = !DILocation(line: 1003, column: 1, scope: !6876)
!6902 = distinct !DISubprogram(name: "fault_handle", scope: !6812, file: !6812, line: 786, type: !6903, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6905)
!6903 = !DISubroutineType(types: !6904)
!6904 = !{!415, !2625, !103, !6879}
!6905 = !{!6906, !6907, !6908, !6909}
!6906 = !DILocalVariable(name: "esf", arg: 1, scope: !6902, file: !6812, line: 786, type: !2625)
!6907 = !DILocalVariable(name: "fault", arg: 2, scope: !6902, file: !6812, line: 786, type: !103)
!6908 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6902, file: !6812, line: 786, type: !6879)
!6909 = !DILocalVariable(name: "reason", scope: !6902, file: !6812, line: 788, type: !415)
!6910 = !DILocation(line: 0, scope: !6902)
!6911 = !DILocation(line: 790, column: 15, scope: !6902)
!6912 = !DILocation(line: 792, column: 2, scope: !6902)
!6913 = !DILocation(line: 794, column: 12, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6902, file: !6812, line: 792, column: 17)
!6915 = !DILocation(line: 795, column: 3, scope: !6914)
!6916 = !DILocation(line: 800, column: 12, scope: !6914)
!6917 = !DILocation(line: 801, column: 3, scope: !6914)
!6918 = !DILocation(line: 803, column: 12, scope: !6914)
!6919 = !DILocation(line: 804, column: 3, scope: !6914)
!6920 = !DILocation(line: 806, column: 12, scope: !6914)
!6921 = !DILocation(line: 807, column: 3, scope: !6914)
!6922 = !DILocation(line: 814, column: 3, scope: !6914)
!6923 = !DILocation(line: 815, column: 3, scope: !6914)
!6924 = !DILocation(line: 829, column: 2, scope: !6902)
!6925 = distinct !DISubprogram(name: "hard_fault", scope: !6812, file: !6812, line: 709, type: !6926, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6928)
!6926 = !DISubroutineType(types: !6927)
!6927 = !{!415, !2625, !6879}
!6928 = !{!6929, !6930, !6931}
!6929 = !DILocalVariable(name: "esf", arg: 1, scope: !6925, file: !6812, line: 709, type: !2625)
!6930 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6925, file: !6812, line: 709, type: !6879)
!6931 = !DILocalVariable(name: "reason", scope: !6925, file: !6812, line: 711, type: !415)
!6932 = !DILocation(line: 0, scope: !6925)
!6933 = !DILocation(line: 732, column: 15, scope: !6925)
!6934 = !DILocation(line: 734, column: 12, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6925, file: !6812, line: 734, column: 6)
!6936 = !DILocation(line: 734, column: 17, scope: !6935)
!6937 = !DILocation(line: 734, column: 41, scope: !6935)
!6938 = !DILocation(line: 734, column: 6, scope: !6925)
!6939 = !DILocation(line: 736, column: 19, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6935, file: !6812, line: 736, column: 13)
!6941 = !DILocation(line: 736, column: 49, scope: !6940)
!6942 = !DILocation(line: 736, column: 13, scope: !6935)
!6943 = !DILocation(line: 738, column: 19, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6940, file: !6812, line: 738, column: 13)
!6945 = !DILocation(line: 738, column: 24, scope: !6944)
!6946 = !DILocation(line: 738, column: 47, scope: !6944)
!6947 = !DILocation(line: 738, column: 13, scope: !6940)
!6948 = !DILocation(line: 740, column: 7, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6812, line: 740, column: 7)
!6950 = distinct !DILexicalBlock(scope: !6944, file: !6812, line: 738, column: 53)
!6951 = !DILocation(line: 740, column: 7, scope: !6950)
!6952 = !DILocation(line: 742, column: 24, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6949, file: !6812, line: 740, column: 38)
!6954 = !DILocation(line: 743, column: 3, scope: !6953)
!6955 = !DILocation(line: 743, column: 20, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6949, file: !6812, line: 743, column: 14)
!6957 = !DILocation(line: 743, column: 25, scope: !6956)
!6958 = !DILocation(line: 743, column: 52, scope: !6956)
!6959 = !DILocation(line: 743, column: 14, scope: !6949)
!6960 = !DILocation(line: 744, column: 13, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6956, file: !6812, line: 743, column: 58)
!6962 = !DILocation(line: 745, column: 3, scope: !6961)
!6963 = !DILocation(line: 745, column: 20, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6956, file: !6812, line: 745, column: 14)
!6965 = !DILocation(line: 745, column: 25, scope: !6964)
!6966 = !DILocation(line: 745, column: 52, scope: !6964)
!6967 = !DILocation(line: 745, column: 14, scope: !6956)
!6968 = !DILocation(line: 746, column: 13, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6964, file: !6812, line: 745, column: 58)
!6970 = !DILocation(line: 747, column: 3, scope: !6969)
!6971 = !DILocation(line: 747, column: 20, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6964, file: !6812, line: 747, column: 14)
!6973 = !DILocation(line: 747, column: 52, scope: !6972)
!6974 = !DILocation(line: 747, column: 14, scope: !6964)
!6975 = !DILocation(line: 748, column: 13, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6972, file: !6812, line: 747, column: 58)
!6977 = !DILocation(line: 753, column: 3, scope: !6976)
!6978 = !DILocation(line: 766, column: 2, scope: !6925)
!6979 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6812, file: !6812, line: 229, type: !6903, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6980)
!6980 = !{!6981, !6982, !6983, !6984, !6985, !6986}
!6981 = !DILocalVariable(name: "esf", arg: 1, scope: !6979, file: !6812, line: 229, type: !2625)
!6982 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6979, file: !6812, line: 229, type: !103)
!6983 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6979, file: !6812, line: 230, type: !6879)
!6984 = !DILocalVariable(name: "reason", scope: !6979, file: !6812, line: 232, type: !415)
!6985 = !DILocalVariable(name: "mmfar", scope: !6979, file: !6812, line: 233, type: !415)
!6986 = !DILocalVariable(name: "temp", scope: !6987, file: !6812, line: 254, type: !415)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !6812, line: 244, column: 48)
!6988 = distinct !DILexicalBlock(scope: !6979, file: !6812, line: 244, column: 6)
!6989 = !DILocation(line: 0, scope: !6979)
!6990 = !DILocation(line: 237, column: 12, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6979, file: !6812, line: 237, column: 6)
!6992 = !DILocation(line: 241, column: 12, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6979, file: !6812, line: 241, column: 6)
!6994 = !DILocation(line: 244, column: 12, scope: !6988)
!6995 = !DILocation(line: 244, column: 17, scope: !6988)
!6996 = !DILocation(line: 244, column: 42, scope: !6988)
!6997 = !DILocation(line: 244, column: 6, scope: !6979)
!6998 = !DILocation(line: 254, column: 24, scope: !6987)
!6999 = !DILocation(line: 0, scope: !6987)
!7000 = !DILocation(line: 256, column: 13, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6987, file: !6812, line: 256, column: 7)
!7002 = !DILocation(line: 256, column: 18, scope: !7001)
!7003 = !DILocation(line: 256, column: 44, scope: !7001)
!7004 = !DILocation(line: 256, column: 7, scope: !6987)
!7005 = !DILocation(line: 261, column: 15, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !6812, line: 259, column: 30)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !6812, line: 259, column: 8)
!7008 = distinct !DILexicalBlock(scope: !7001, file: !6812, line: 256, column: 50)
!7009 = !DILocation(line: 262, column: 4, scope: !7006)
!7010 = !DILocation(line: 265, column: 12, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6979, file: !6812, line: 265, column: 6)
!7012 = !DILocation(line: 269, column: 12, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6979, file: !6812, line: 269, column: 6)
!7014 = !DILocation(line: 288, column: 12, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6979, file: !6812, line: 288, column: 6)
!7016 = !DILocation(line: 288, column: 17, scope: !7015)
!7017 = !DILocation(line: 288, column: 41, scope: !7015)
!7018 = !DILocation(line: 289, column: 9, scope: !7015)
!7019 = !DILocation(line: 288, column: 6, scope: !6979)
!7020 = !DILocation(line: 360, column: 12, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !6979, file: !6812, line: 360, column: 6)
!7022 = !DILocation(line: 360, column: 17, scope: !7021)
!7023 = !DILocation(line: 360, column: 41, scope: !7021)
!7024 = !DILocation(line: 360, column: 6, scope: !6979)
!7025 = !DILocation(line: 361, column: 14, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7021, file: !6812, line: 360, column: 47)
!7027 = !DILocation(line: 362, column: 2, scope: !7026)
!7028 = !DILocation(line: 366, column: 12, scope: !6979)
!7029 = !DILocation(line: 369, column: 15, scope: !6979)
!7030 = !DILocation(line: 371, column: 2, scope: !6979)
!7031 = distinct !DISubprogram(name: "bus_fault", scope: !6812, file: !6812, line: 383, type: !7032, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !7034)
!7032 = !DISubroutineType(types: !7033)
!7033 = !{!103, !2625, !103, !6879}
!7034 = !{!7035, !7036, !7037, !7038, !7039}
!7035 = !DILocalVariable(name: "esf", arg: 1, scope: !7031, file: !6812, line: 383, type: !2625)
!7036 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7031, file: !6812, line: 383, type: !103)
!7037 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7031, file: !6812, line: 383, type: !6879)
!7038 = !DILocalVariable(name: "reason", scope: !7031, file: !6812, line: 385, type: !415)
!7039 = !DILocalVariable(name: "bfar", scope: !7040, file: !6812, line: 405, type: !415)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !6812, line: 395, column: 42)
!7041 = distinct !DILexicalBlock(scope: !7031, file: !6812, line: 395, column: 6)
!7042 = !DILocation(line: 0, scope: !7031)
!7043 = !DILocation(line: 389, column: 11, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7031, file: !6812, line: 389, column: 6)
!7045 = !DILocation(line: 392, column: 11, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7031, file: !6812, line: 392, column: 6)
!7047 = !DILocation(line: 395, column: 11, scope: !7041)
!7048 = !DILocation(line: 395, column: 16, scope: !7041)
!7049 = !DILocation(line: 395, column: 6, scope: !7031)
!7050 = !DILocation(line: 405, column: 3, scope: !7040)
!7051 = !DILocation(line: 0, scope: !7040)
!7052 = !DILocation(line: 407, column: 13, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7040, file: !6812, line: 407, column: 7)
!7054 = !DILocation(line: 407, column: 18, scope: !7053)
!7055 = !DILocation(line: 407, column: 44, scope: !7053)
!7056 = !DILocation(line: 407, column: 7, scope: !7040)
!7057 = !DILocation(line: 411, column: 15, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6812, line: 409, column: 30)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6812, line: 409, column: 8)
!7060 = distinct !DILexicalBlock(scope: !7053, file: !6812, line: 407, column: 50)
!7061 = !DILocation(line: 412, column: 4, scope: !7058)
!7062 = !DILocation(line: 415, column: 11, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7031, file: !6812, line: 415, column: 6)
!7064 = !DILocation(line: 418, column: 12, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7031, file: !6812, line: 418, column: 6)
!7066 = !DILocation(line: 418, column: 17, scope: !7065)
!7067 = !DILocation(line: 418, column: 41, scope: !7065)
!7068 = !DILocation(line: 418, column: 6, scope: !7031)
!7069 = !DILocation(line: 423, column: 18, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7065, file: !6812, line: 423, column: 13)
!7071 = !DILocation(line: 524, column: 12, scope: !7031)
!7072 = !DILocation(line: 526, column: 15, scope: !7031)
!7073 = !DILocation(line: 528, column: 2, scope: !7031)
!7074 = distinct !DISubprogram(name: "usage_fault", scope: !6812, file: !6812, line: 539, type: !7075, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !7079)
!7075 = !DISubroutineType(types: !7076)
!7076 = !{!415, !7077}
!7077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7078, size: 32)
!7078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2626)
!7079 = !{!7080, !7081}
!7080 = !DILocalVariable(name: "esf", arg: 1, scope: !7074, file: !6812, line: 539, type: !7077)
!7081 = !DILocalVariable(name: "reason", scope: !7074, file: !6812, line: 541, type: !415)
!7082 = !DILocation(line: 0, scope: !7074)
!7083 = !DILocation(line: 546, column: 12, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7074, file: !6812, line: 546, column: 6)
!7085 = !DILocation(line: 549, column: 12, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7074, file: !6812, line: 549, column: 6)
!7087 = !DILocation(line: 567, column: 12, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7074, file: !6812, line: 567, column: 6)
!7089 = !DILocation(line: 570, column: 12, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7074, file: !6812, line: 570, column: 6)
!7091 = !DILocation(line: 573, column: 12, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7074, file: !6812, line: 573, column: 6)
!7093 = !DILocation(line: 576, column: 12, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7074, file: !6812, line: 576, column: 6)
!7095 = !DILocation(line: 581, column: 12, scope: !7074)
!7096 = !DILocation(line: 583, column: 2, scope: !7074)
!7097 = distinct !DISubprogram(name: "debug_monitor", scope: !6812, file: !6812, line: 632, type: !7098, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !7100)
!7098 = !DISubroutineType(types: !7099)
!7099 = !{null, !2625, !6879}
!7100 = !{!7101, !7102}
!7101 = !DILocalVariable(name: "esf", arg: 1, scope: !7097, file: !6812, line: 632, type: !2625)
!7102 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7097, file: !6812, line: 632, type: !6879)
!7103 = !DILocation(line: 0, scope: !7097)
!7104 = !DILocation(line: 634, column: 15, scope: !7097)
!7105 = !DILocation(line: 652, column: 1, scope: !7097)
!7106 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6812, file: !6812, line: 658, type: !7107, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !7109)
!7107 = !DISubroutineType(types: !7108)
!7108 = !{!583, !2625}
!7109 = !{!7110, !7111, !7112}
!7110 = !DILocalVariable(name: "esf", arg: 1, scope: !7106, file: !6812, line: 658, type: !2625)
!7111 = !DILocalVariable(name: "ret_addr", scope: !7106, file: !6812, line: 660, type: !2316)
!7112 = !DILocalVariable(name: "fault_insn", scope: !7106, file: !6812, line: 686, type: !532)
!7113 = !DILocation(line: 0, scope: !7106)
!7114 = !DILocation(line: 660, column: 46, scope: !7106)
!7115 = !DILocation(line: 660, column: 23, scope: !7106)
!7116 = !DILocation(line: 682, column: 11, scope: !7106)
!7117 = !DILocation(line: 271, column: 3, scope: !7118, inlinedAt: !7119)
!7118 = distinct !DISubprogram(name: "__DSB", scope: !6540, file: !6540, line: 269, type: !3019, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !842)
!7119 = distinct !DILocation(line: 683, column: 2, scope: !7106)
!7120 = !{i64 6961300}
!7121 = !DILocation(line: 260, column: 3, scope: !7122, inlinedAt: !7123)
!7122 = distinct !DISubprogram(name: "__ISB", scope: !6540, file: !6540, line: 258, type: !3019, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !842)
!7123 = distinct !DILocation(line: 684, column: 2, scope: !7106)
!7124 = !{i64 6961017}
!7125 = !DILocation(line: 686, column: 35, scope: !7106)
!7126 = !DILocation(line: 686, column: 24, scope: !7106)
!7127 = !DILocation(line: 688, column: 11, scope: !7106)
!7128 = !DILocation(line: 271, column: 3, scope: !7118, inlinedAt: !7129)
!7129 = distinct !DILocation(line: 689, column: 2, scope: !7106)
!7130 = !DILocation(line: 260, column: 3, scope: !7122, inlinedAt: !7131)
!7131 = distinct !DILocation(line: 690, column: 2, scope: !7106)
!7132 = !DILocation(line: 693, column: 45, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7106, file: !6812, line: 693, column: 6)
!7134 = !DILocation(line: 699, column: 1, scope: !7106)
!7135 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6812, file: !6812, line: 1107, type: !3019, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !842)
!7136 = !DILocation(line: 1111, column: 11, scope: !7135)
!7137 = !DILocation(line: 1136, column: 1, scope: !7135)
!7138 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7139, file: !7139, line: 26, type: !3019, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2668, retainedNodes: !7140)
!7139 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7140 = !{!7141}
!7141 = !DILocalVariable(name: "irq", scope: !7138, file: !7139, line: 28, type: !103)
!7142 = !DILocation(line: 0, scope: !7138)
!7143 = !DILocation(line: 30, column: 2, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7138, file: !7139, line: 30, column: 2)
!7145 = !DILocation(line: 31, column: 3, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !7139, line: 30, column: 39)
!7147 = distinct !DILexicalBlock(scope: !7144, file: !7139, line: 30, column: 2)
!7148 = !DILocation(line: 30, column: 35, scope: !7147)
!7149 = !DILocation(line: 30, column: 13, scope: !7147)
!7150 = distinct !{!7150, !7143, !7151}
!7151 = !DILocation(line: 32, column: 2, scope: !7144)
!7152 = !DILocation(line: 33, column: 1, scope: !7138)
!7153 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1552, file: !1552, line: 1814, type: !6574, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2668, retainedNodes: !7154)
!7154 = !{!7155, !7156}
!7155 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7153, file: !1552, line: 1814, type: !2453)
!7156 = !DILocalVariable(name: "priority", arg: 2, scope: !7153, file: !1552, line: 1814, type: !415)
!7157 = !DILocation(line: 0, scope: !7153)
!7158 = !DILocation(line: 1816, column: 7, scope: !7153)
!7159 = !DILocation(line: 0, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7153, file: !1552, line: 1816, column: 7)
!7161 = !DILocation(line: 1824, column: 1, scope: !7153)
!7162 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7163, file: !7163, line: 27, type: !7164, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7261)
!7163 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7164 = !DISubroutineType(types: !7165)
!7165 = !{null, !7166}
!7166 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1802, line: 347, baseType: !7167)
!7167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7168, size: 32)
!7168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1802, line: 245, size: 896, elements: !7169)
!7169 = !{!7170, !7228, !7240, !7241, !7242, !7243, !7256}
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7168, file: !1802, line: 247, baseType: !7171, size: 384)
!7171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1802, line: 57, size: 384, elements: !7172)
!7172 = !{!7173, !7197, !7204, !7205, !7206, !7215, !7216, !7217}
!7173 = !DIDerivedType(tag: DW_TAG_member, scope: !7171, file: !1802, line: 60, baseType: !7174, size: 64)
!7174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7171, file: !1802, line: 60, size: 64, elements: !7175)
!7175 = !{!7176, !7191}
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7174, file: !1802, line: 61, baseType: !7177, size: 64)
!7177 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !679, line: 49, baseType: !7178)
!7178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !7179)
!7179 = !{!7180, !7186}
!7180 = !DIDerivedType(tag: DW_TAG_member, scope: !7178, file: !679, line: 38, baseType: !7181, size: 32)
!7181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7178, file: !679, line: 38, size: 32, elements: !7182)
!7182 = !{!7183, !7185}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7181, file: !679, line: 39, baseType: !7184, size: 32)
!7184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7178, size: 32)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7181, file: !679, line: 40, baseType: !7184, size: 32)
!7186 = !DIDerivedType(tag: DW_TAG_member, scope: !7178, file: !679, line: 42, baseType: !7187, size: 32, offset: 32)
!7187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7178, file: !679, line: 42, size: 32, elements: !7188)
!7188 = !{!7189, !7190}
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7187, file: !679, line: 43, baseType: !7184, size: 32)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7187, file: !679, line: 44, baseType: !7184, size: 32)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7174, file: !1802, line: 62, baseType: !7192, size: 64)
!7192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1827, line: 49, size: 64, elements: !7193)
!7193 = !{!7194}
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7192, file: !1827, line: 50, baseType: !7195, size: 64)
!7195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7196, size: 64, elements: !1387)
!7196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7192, size: 32)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7171, file: !1802, line: 68, baseType: !7198, size: 32, offset: 64)
!7198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7199, size: 32)
!7199 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !7200)
!7200 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !7201)
!7201 = !{!7202}
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7200, file: !674, line: 232, baseType: !7203, size: 64)
!7203 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !7178)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7171, file: !1802, line: 71, baseType: !421, size: 8, offset: 96)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7171, file: !1802, line: 74, baseType: !421, size: 8, offset: 104)
!7206 = !DIDerivedType(tag: DW_TAG_member, scope: !7171, file: !1802, line: 90, baseType: !7207, size: 16, offset: 112)
!7207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7171, file: !1802, line: 90, size: 16, elements: !7208)
!7208 = !{!7209, !7214}
!7209 = !DIDerivedType(tag: DW_TAG_member, scope: !7207, file: !1802, line: 91, baseType: !7210, size: 16)
!7210 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7207, file: !1802, line: 91, size: 16, elements: !7211)
!7211 = !{!7212, !7213}
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7210, file: !1802, line: 96, baseType: !1848, size: 8)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7210, file: !1802, line: 97, baseType: !421, size: 8, offset: 8)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7207, file: !1802, line: 100, baseType: !532, size: 16)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7171, file: !1802, line: 107, baseType: !415, size: 32, offset: 128)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7171, file: !1802, line: 127, baseType: !102, size: 32, offset: 160)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7171, file: !1802, line: 131, baseType: !7218, size: 192, offset: 192)
!7218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !674, line: 244, size: 192, elements: !7219)
!7219 = !{!7220, !7221, !7227}
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7218, file: !674, line: 245, baseType: !7177, size: 64)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7218, file: !674, line: 246, baseType: !7222, size: 32, offset: 64)
!7222 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !674, line: 242, baseType: !7223)
!7223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7224, size: 32)
!7224 = !DISubroutineType(types: !7225)
!7225 = !{null, !7226}
!7226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7218, size: 32)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7218, file: !674, line: 249, baseType: !1548, size: 64, offset: 128)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7168, file: !1802, line: 250, baseType: !7229, size: 288, offset: 384)
!7229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1867, line: 25, size: 288, elements: !7230)
!7230 = !{!7231, !7232, !7233, !7234, !7235, !7236, !7237, !7238, !7239}
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7229, file: !1867, line: 26, baseType: !415, size: 32)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7229, file: !1867, line: 27, baseType: !415, size: 32, offset: 32)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7229, file: !1867, line: 28, baseType: !415, size: 32, offset: 64)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7229, file: !1867, line: 29, baseType: !415, size: 32, offset: 96)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7229, file: !1867, line: 30, baseType: !415, size: 32, offset: 128)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7229, file: !1867, line: 31, baseType: !415, size: 32, offset: 160)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7229, file: !1867, line: 32, baseType: !415, size: 32, offset: 192)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7229, file: !1867, line: 33, baseType: !415, size: 32, offset: 224)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7229, file: !1867, line: 34, baseType: !415, size: 32, offset: 256)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7168, file: !1802, line: 253, baseType: !102, size: 32, offset: 672)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7168, file: !1802, line: 256, baseType: !7199, size: 64, offset: 704)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7168, file: !1802, line: 294, baseType: !103, size: 32, offset: 768)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7168, file: !1802, line: 325, baseType: !7244, size: 32, offset: 800)
!7244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7245, size: 32)
!7245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !670, line: 5073, size: 160, elements: !7246)
!7246 = !{!7247, !7253, !7254}
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7245, file: !670, line: 5074, baseType: !7248, size: 96)
!7248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1887, line: 56, size: 96, elements: !7249)
!7249 = !{!7250, !7251, !7252}
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7248, file: !1887, line: 57, baseType: !1890, size: 32)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7248, file: !1887, line: 58, baseType: !102, size: 32, offset: 32)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7248, file: !1887, line: 59, baseType: !1714, size: 32, offset: 64)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7245, file: !670, line: 5075, baseType: !7199, size: 64, offset: 96)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7245, file: !670, line: 5076, baseType: !7255, offset: 160)
!7255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7168, file: !1802, line: 343, baseType: !7257, size: 64, offset: 832)
!7257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1867, line: 60, size: 64, elements: !7258)
!7258 = !{!7259, !7260}
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7257, file: !1867, line: 63, baseType: !415, size: 32)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7257, file: !1867, line: 66, baseType: !415, size: 32, offset: 32)
!7261 = !{!7262}
!7262 = !DILocalVariable(name: "thread", arg: 1, scope: !7162, file: !7163, line: 27, type: !7166)
!7263 = !DILocation(line: 0, scope: !7162)
!7264 = !DILocation(line: 29, column: 6, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7162, file: !7163, line: 29, column: 6)
!7266 = !DILocation(line: 29, column: 15, scope: !7265)
!7267 = !DILocation(line: 29, column: 6, scope: !7162)
!7268 = !DILocation(line: 1031, column: 3, scope: !7269, inlinedAt: !7272)
!7269 = distinct !DISubprogram(name: "__get_IPSR", scope: !6540, file: !6540, line: 1027, type: !6621, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7270)
!7270 = !{!7271}
!7271 = !DILocalVariable(name: "result", scope: !7269, file: !6540, line: 1029, type: !415)
!7272 = distinct !DILocation(line: 48, column: 10, scope: !7273, inlinedAt: !7277)
!7273 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7274, file: !7274, line: 46, type: !7275, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !842)
!7274 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7275 = !DISubroutineType(types: !7276)
!7276 = !{!583}
!7277 = distinct !DILocation(line: 30, column: 7, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !7163, line: 30, column: 7)
!7279 = distinct !DILexicalBlock(scope: !7265, file: !7163, line: 29, column: 26)
!7280 = !{i64 6962524}
!7281 = !DILocation(line: 0, scope: !7269, inlinedAt: !7272)
!7282 = !DILocation(line: 48, column: 9, scope: !7273, inlinedAt: !7277)
!7283 = !DILocation(line: 30, column: 7, scope: !7279)
!7284 = !DILocation(line: 42, column: 14, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7278, file: !7163, line: 30, column: 25)
!7286 = !DILocation(line: 48, column: 15, scope: !7285)
!7287 = !DILocation(line: 49, column: 3, scope: !7285)
!7288 = !DILocation(line: 52, column: 2, scope: !7162)
!7289 = !DILocation(line: 53, column: 1, scope: !7162)
!7290 = distinct !DISubprogram(name: "strcpy", scope: !7291, file: !7291, line: 20, type: !7292, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7296)
!7291 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7292 = !DISubroutineType(types: !7293)
!7293 = !{!869, !7294, !7295}
!7294 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !869)
!7295 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !574)
!7296 = !{!7297, !7298, !7299}
!7297 = !DILocalVariable(name: "d", arg: 1, scope: !7290, file: !7291, line: 20, type: !7294)
!7298 = !DILocalVariable(name: "s", arg: 2, scope: !7290, file: !7291, line: 20, type: !7295)
!7299 = !DILocalVariable(name: "dest", scope: !7290, file: !7291, line: 22, type: !869)
!7300 = !DILocation(line: 0, scope: !7290)
!7301 = !DILocation(line: 24, column: 9, scope: !7290)
!7302 = !DILocation(line: 24, column: 12, scope: !7290)
!7303 = !DILocation(line: 24, column: 2, scope: !7290)
!7304 = !DILocation(line: 25, column: 6, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7290, file: !7291, line: 24, column: 21)
!7306 = !DILocation(line: 26, column: 4, scope: !7305)
!7307 = !DILocation(line: 27, column: 4, scope: !7305)
!7308 = distinct !{!7308, !7303, !7309}
!7309 = !DILocation(line: 28, column: 2, scope: !7290)
!7310 = !DILocation(line: 30, column: 5, scope: !7290)
!7311 = !DILocation(line: 32, column: 2, scope: !7290)
!7312 = distinct !DISubprogram(name: "strncpy", scope: !7291, file: !7291, line: 42, type: !7313, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7315)
!7313 = !DISubroutineType(types: !7314)
!7314 = !{!869, !7294, !7295, !1714}
!7315 = !{!7316, !7317, !7318, !7319}
!7316 = !DILocalVariable(name: "d", arg: 1, scope: !7312, file: !7291, line: 42, type: !7294)
!7317 = !DILocalVariable(name: "s", arg: 2, scope: !7312, file: !7291, line: 42, type: !7295)
!7318 = !DILocalVariable(name: "n", arg: 3, scope: !7312, file: !7291, line: 42, type: !1714)
!7319 = !DILocalVariable(name: "dest", scope: !7312, file: !7291, line: 44, type: !869)
!7320 = !DILocation(line: 0, scope: !7312)
!7321 = !DILocation(line: 46, column: 12, scope: !7312)
!7322 = !DILocation(line: 46, column: 17, scope: !7312)
!7323 = !DILocation(line: 46, column: 20, scope: !7312)
!7324 = !DILocation(line: 46, column: 23, scope: !7312)
!7325 = !DILocation(line: 46, column: 2, scope: !7312)
!7326 = !DILocation(line: 47, column: 6, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7312, file: !7291, line: 46, column: 32)
!7328 = !DILocation(line: 48, column: 4, scope: !7327)
!7329 = !DILocation(line: 49, column: 4, scope: !7327)
!7330 = !DILocation(line: 50, column: 4, scope: !7327)
!7331 = distinct !{!7331, !7325, !7332}
!7332 = !DILocation(line: 51, column: 2, scope: !7312)
!7333 = !DILocation(line: 54, column: 6, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7312, file: !7291, line: 53, column: 16)
!7335 = !DILocation(line: 55, column: 4, scope: !7334)
!7336 = !DILocation(line: 56, column: 4, scope: !7334)
!7337 = !DILocation(line: 53, column: 11, scope: !7312)
!7338 = !DILocation(line: 53, column: 2, scope: !7312)
!7339 = distinct !{!7339, !7338, !7340}
!7340 = !DILocation(line: 57, column: 2, scope: !7312)
!7341 = !DILocation(line: 59, column: 2, scope: !7312)
!7342 = distinct !DISubprogram(name: "strchr", scope: !7291, file: !7291, line: 69, type: !7343, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7345)
!7343 = !DISubroutineType(types: !7344)
!7344 = !{!869, !574, !103}
!7345 = !{!7346, !7347, !7348}
!7346 = !DILocalVariable(name: "s", arg: 1, scope: !7342, file: !7291, line: 69, type: !574)
!7347 = !DILocalVariable(name: "c", arg: 2, scope: !7342, file: !7291, line: 69, type: !103)
!7348 = !DILocalVariable(name: "tmp", scope: !7342, file: !7291, line: 71, type: !108)
!7349 = !DILocation(line: 0, scope: !7342)
!7350 = !DILocation(line: 73, column: 2, scope: !7342)
!7351 = !DILocation(line: 73, column: 10, scope: !7342)
!7352 = !DILocation(line: 73, column: 13, scope: !7342)
!7353 = !DILocation(line: 73, column: 21, scope: !7342)
!7354 = !DILocation(line: 74, column: 4, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7342, file: !7291, line: 73, column: 38)
!7356 = distinct !{!7356, !7350, !7357}
!7357 = !DILocation(line: 75, column: 2, scope: !7342)
!7358 = !DILocation(line: 77, column: 9, scope: !7342)
!7359 = !DILocation(line: 77, column: 2, scope: !7342)
!7360 = distinct !DISubprogram(name: "strrchr", scope: !7291, file: !7291, line: 87, type: !7343, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7361)
!7361 = !{!7362, !7363, !7364}
!7362 = !DILocalVariable(name: "s", arg: 1, scope: !7360, file: !7291, line: 87, type: !574)
!7363 = !DILocalVariable(name: "c", arg: 2, scope: !7360, file: !7291, line: 87, type: !103)
!7364 = !DILocalVariable(name: "match", scope: !7360, file: !7291, line: 89, type: !869)
!7365 = !DILocation(line: 0, scope: !7360)
!7366 = !DILocation(line: 91, column: 2, scope: !7360)
!7367 = !DILocation(line: 92, column: 7, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7369, file: !7291, line: 92, column: 7)
!7369 = distinct !DILexicalBlock(scope: !7360, file: !7291, line: 91, column: 5)
!7370 = !DILocation(line: 92, column: 10, scope: !7368)
!7371 = !DILocation(line: 92, column: 7, scope: !7369)
!7372 = !DILocation(line: 95, column: 13, scope: !7360)
!7373 = !DILocation(line: 95, column: 2, scope: !7369)
!7374 = distinct !{!7374, !7366, !7375}
!7375 = !DILocation(line: 95, column: 15, scope: !7360)
!7376 = !DILocation(line: 97, column: 2, scope: !7360)
!7377 = distinct !DISubprogram(name: "strlen", scope: !7291, file: !7291, line: 107, type: !7378, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7380)
!7378 = !DISubroutineType(types: !7379)
!7379 = !{!1714, !574}
!7380 = !{!7381, !7382}
!7381 = !DILocalVariable(name: "s", arg: 1, scope: !7377, file: !7291, line: 107, type: !574)
!7382 = !DILocalVariable(name: "n", scope: !7377, file: !7291, line: 109, type: !1714)
!7383 = !DILocation(line: 0, scope: !7377)
!7384 = !DILocation(line: 111, column: 9, scope: !7377)
!7385 = !DILocation(line: 111, column: 12, scope: !7377)
!7386 = !DILocation(line: 111, column: 2, scope: !7377)
!7387 = !DILocation(line: 112, column: 4, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7377, file: !7291, line: 111, column: 21)
!7389 = !DILocation(line: 113, column: 4, scope: !7388)
!7390 = distinct !{!7390, !7386, !7391}
!7391 = !DILocation(line: 114, column: 2, scope: !7377)
!7392 = !DILocation(line: 116, column: 2, scope: !7377)
!7393 = distinct !DISubprogram(name: "strnlen", scope: !7291, file: !7291, line: 126, type: !7394, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7396)
!7394 = !DISubroutineType(types: !7395)
!7395 = !{!1714, !574, !1714}
!7396 = !{!7397, !7398, !7399}
!7397 = !DILocalVariable(name: "s", arg: 1, scope: !7393, file: !7291, line: 126, type: !574)
!7398 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7393, file: !7291, line: 126, type: !1714)
!7399 = !DILocalVariable(name: "n", scope: !7393, file: !7291, line: 128, type: !1714)
!7400 = !DILocation(line: 0, scope: !7393)
!7401 = !DILocation(line: 130, column: 9, scope: !7393)
!7402 = !DILocation(line: 130, column: 12, scope: !7393)
!7403 = !DILocation(line: 130, column: 20, scope: !7393)
!7404 = !DILocation(line: 130, column: 2, scope: !7393)
!7405 = !DILocation(line: 131, column: 4, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7393, file: !7291, line: 130, column: 35)
!7407 = !DILocation(line: 132, column: 4, scope: !7406)
!7408 = distinct !{!7408, !7404, !7409}
!7409 = !DILocation(line: 133, column: 2, scope: !7393)
!7410 = !DILocation(line: 135, column: 2, scope: !7393)
!7411 = distinct !DISubprogram(name: "strcmp", scope: !7291, file: !7291, line: 145, type: !7412, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7414)
!7412 = !DISubroutineType(types: !7413)
!7413 = !{!103, !574, !574}
!7414 = !{!7415, !7416}
!7415 = !DILocalVariable(name: "s1", arg: 1, scope: !7411, file: !7291, line: 145, type: !574)
!7416 = !DILocalVariable(name: "s2", arg: 2, scope: !7411, file: !7291, line: 145, type: !574)
!7417 = !DILocation(line: 0, scope: !7411)
!7418 = !DILocation(line: 147, column: 10, scope: !7411)
!7419 = !DILocation(line: 147, column: 17, scope: !7411)
!7420 = !DILocation(line: 147, column: 14, scope: !7411)
!7421 = !DILocation(line: 147, column: 22, scope: !7411)
!7422 = !DILocation(line: 148, column: 5, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7411, file: !7291, line: 147, column: 40)
!7424 = !DILocation(line: 149, column: 5, scope: !7423)
!7425 = distinct !{!7425, !7426, !7427}
!7426 = !DILocation(line: 147, column: 2, scope: !7411)
!7427 = !DILocation(line: 150, column: 2, scope: !7411)
!7428 = !DILocation(line: 152, column: 9, scope: !7411)
!7429 = !DILocation(line: 152, column: 15, scope: !7411)
!7430 = !DILocation(line: 152, column: 13, scope: !7411)
!7431 = !DILocation(line: 152, column: 2, scope: !7411)
!7432 = distinct !DISubprogram(name: "strncmp", scope: !7291, file: !7291, line: 162, type: !7433, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7435)
!7433 = !DISubroutineType(types: !7434)
!7434 = !{!103, !574, !574, !1714}
!7435 = !{!7436, !7437, !7438}
!7436 = !DILocalVariable(name: "s1", arg: 1, scope: !7432, file: !7291, line: 162, type: !574)
!7437 = !DILocalVariable(name: "s2", arg: 2, scope: !7432, file: !7291, line: 162, type: !574)
!7438 = !DILocalVariable(name: "n", arg: 3, scope: !7432, file: !7291, line: 162, type: !1714)
!7439 = !DILocation(line: 0, scope: !7432)
!7440 = !DILocation(line: 164, column: 17, scope: !7432)
!7441 = !DILocation(line: 164, column: 21, scope: !7432)
!7442 = !DILocation(line: 164, column: 28, scope: !7432)
!7443 = !DILocation(line: 164, column: 25, scope: !7432)
!7444 = !DILocation(line: 164, column: 33, scope: !7432)
!7445 = !DILocation(line: 165, column: 5, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7432, file: !7291, line: 164, column: 51)
!7447 = !DILocation(line: 166, column: 5, scope: !7446)
!7448 = !DILocation(line: 167, column: 4, scope: !7446)
!7449 = distinct !{!7449, !7450, !7451}
!7450 = !DILocation(line: 164, column: 2, scope: !7432)
!7451 = !DILocation(line: 168, column: 2, scope: !7432)
!7452 = !DILocation(line: 170, column: 25, scope: !7432)
!7453 = !DILocation(line: 170, column: 31, scope: !7432)
!7454 = !DILocation(line: 170, column: 29, scope: !7432)
!7455 = !DILocation(line: 170, column: 9, scope: !7432)
!7456 = !DILocation(line: 170, column: 2, scope: !7432)
!7457 = distinct !DISubprogram(name: "strtok_r", scope: !7291, file: !7291, line: 180, type: !7458, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7461)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{!869, !869, !574, !7460}
!7460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!7461 = !{!7462, !7463, !7464, !7465, !7466}
!7462 = !DILocalVariable(name: "str", arg: 1, scope: !7457, file: !7291, line: 180, type: !869)
!7463 = !DILocalVariable(name: "sep", arg: 2, scope: !7457, file: !7291, line: 180, type: !574)
!7464 = !DILocalVariable(name: "state", arg: 3, scope: !7457, file: !7291, line: 180, type: !7460)
!7465 = !DILocalVariable(name: "start", scope: !7457, file: !7291, line: 182, type: !869)
!7466 = !DILocalVariable(name: "end", scope: !7457, file: !7291, line: 182, type: !869)
!7467 = !DILocation(line: 0, scope: !7457)
!7468 = !DILocation(line: 184, column: 10, scope: !7457)
!7469 = !DILocation(line: 184, column: 22, scope: !7457)
!7470 = !DILocation(line: 187, column: 9, scope: !7457)
!7471 = !DILocation(line: 187, column: 16, scope: !7457)
!7472 = !DILocation(line: 187, column: 19, scope: !7457)
!7473 = !DILocation(line: 187, column: 2, scope: !7457)
!7474 = !DILocation(line: 188, column: 8, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7457, file: !7291, line: 187, column: 40)
!7476 = distinct !{!7476, !7473, !7477}
!7477 = !DILocation(line: 189, column: 2, scope: !7457)
!7478 = !DILocation(line: 198, column: 9, scope: !7457)
!7479 = !DILocation(line: 198, column: 18, scope: !7457)
!7480 = !DILocation(line: 198, column: 17, scope: !7457)
!7481 = !DILocation(line: 198, column: 2, scope: !7457)
!7482 = !DILocation(line: 199, column: 6, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7457, file: !7291, line: 198, column: 37)
!7484 = !DILocation(line: 198, column: 14, scope: !7457)
!7485 = distinct !{!7485, !7481, !7486}
!7486 = !DILocation(line: 200, column: 2, scope: !7457)
!7487 = !DILocation(line: 203, column: 8, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7489, file: !7291, line: 202, column: 20)
!7489 = distinct !DILexicalBlock(scope: !7457, file: !7291, line: 202, column: 6)
!7490 = !DILocation(line: 204, column: 16, scope: !7488)
!7491 = !DILocation(line: 205, column: 2, scope: !7488)
!7492 = !DILocation(line: 210, column: 1, scope: !7457)
!7493 = distinct !DISubprogram(name: "strcat", scope: !7291, file: !7291, line: 212, type: !7292, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7494)
!7494 = !{!7495, !7496}
!7495 = !DILocalVariable(name: "dest", arg: 1, scope: !7493, file: !7291, line: 212, type: !7294)
!7496 = !DILocalVariable(name: "src", arg: 2, scope: !7493, file: !7291, line: 212, type: !7295)
!7497 = !DILocation(line: 0, scope: !7493)
!7498 = !DILocation(line: 214, column: 16, scope: !7493)
!7499 = !DILocation(line: 214, column: 14, scope: !7493)
!7500 = !DILocation(line: 214, column: 2, scope: !7493)
!7501 = !DILocation(line: 215, column: 2, scope: !7493)
!7502 = distinct !DISubprogram(name: "strncat", scope: !7291, file: !7291, line: 218, type: !7313, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7503)
!7503 = !{!7504, !7505, !7506, !7507, !7508}
!7504 = !DILocalVariable(name: "dest", arg: 1, scope: !7502, file: !7291, line: 218, type: !7294)
!7505 = !DILocalVariable(name: "src", arg: 2, scope: !7502, file: !7291, line: 218, type: !7295)
!7506 = !DILocalVariable(name: "n", arg: 3, scope: !7502, file: !7291, line: 219, type: !1714)
!7507 = !DILocalVariable(name: "orig_dest", scope: !7502, file: !7291, line: 221, type: !869)
!7508 = !DILocalVariable(name: "len", scope: !7502, file: !7291, line: 222, type: !1714)
!7509 = !DILocation(line: 0, scope: !7502)
!7510 = !DILocation(line: 222, column: 15, scope: !7502)
!7511 = !DILocation(line: 224, column: 7, scope: !7502)
!7512 = !DILocation(line: 225, column: 14, scope: !7502)
!7513 = !DILocation(line: 225, column: 19, scope: !7502)
!7514 = !DILocation(line: 225, column: 11, scope: !7502)
!7515 = !DILocation(line: 225, column: 23, scope: !7502)
!7516 = !DILocation(line: 225, column: 28, scope: !7502)
!7517 = !DILocation(line: 225, column: 2, scope: !7502)
!7518 = !DILocation(line: 226, column: 17, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7502, file: !7291, line: 225, column: 38)
!7520 = !DILocation(line: 226, column: 8, scope: !7519)
!7521 = !DILocation(line: 226, column: 11, scope: !7519)
!7522 = distinct !{!7522, !7517, !7523}
!7523 = !DILocation(line: 227, column: 2, scope: !7502)
!7524 = !DILocation(line: 228, column: 8, scope: !7502)
!7525 = !DILocation(line: 230, column: 2, scope: !7502)
!7526 = distinct !DISubprogram(name: "memcmp", scope: !7291, file: !7291, line: 239, type: !7527, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7529)
!7527 = !DISubroutineType(types: !7528)
!7528 = !{!103, !13, !13, !1714}
!7529 = !{!7530, !7531, !7532, !7533, !7534}
!7530 = !DILocalVariable(name: "m1", arg: 1, scope: !7526, file: !7291, line: 239, type: !13)
!7531 = !DILocalVariable(name: "m2", arg: 2, scope: !7526, file: !7291, line: 239, type: !13)
!7532 = !DILocalVariable(name: "n", arg: 3, scope: !7526, file: !7291, line: 239, type: !1714)
!7533 = !DILocalVariable(name: "c1", scope: !7526, file: !7291, line: 241, type: !574)
!7534 = !DILocalVariable(name: "c2", scope: !7526, file: !7291, line: 242, type: !574)
!7535 = !DILocation(line: 0, scope: !7526)
!7536 = !DILocation(line: 244, column: 7, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7526, file: !7291, line: 244, column: 6)
!7538 = !DILocation(line: 244, column: 6, scope: !7526)
!7539 = !DILocation(line: 248, column: 10, scope: !7526)
!7540 = !DILocation(line: 248, column: 14, scope: !7526)
!7541 = !DILocation(line: 248, column: 19, scope: !7526)
!7542 = !DILocation(line: 248, column: 2, scope: !7526)
!7543 = !DILocation(line: 248, column: 23, scope: !7526)
!7544 = !DILocation(line: 248, column: 30, scope: !7526)
!7545 = !DILocation(line: 248, column: 27, scope: !7526)
!7546 = !DILocation(line: 249, column: 5, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7526, file: !7291, line: 248, column: 36)
!7548 = !DILocation(line: 250, column: 5, scope: !7547)
!7549 = distinct !{!7549, !7542, !7550}
!7550 = !DILocation(line: 251, column: 2, scope: !7526)
!7551 = !DILocation(line: 253, column: 9, scope: !7526)
!7552 = !DILocation(line: 253, column: 15, scope: !7526)
!7553 = !DILocation(line: 253, column: 13, scope: !7526)
!7554 = !DILocation(line: 253, column: 2, scope: !7526)
!7555 = !DILocation(line: 254, column: 1, scope: !7526)
!7556 = distinct !DISubprogram(name: "memmove", scope: !7291, file: !7291, line: 263, type: !7557, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7559)
!7557 = !DISubroutineType(types: !7558)
!7558 = !{!102, !102, !13, !1714}
!7559 = !{!7560, !7561, !7562, !7563, !7564}
!7560 = !DILocalVariable(name: "d", arg: 1, scope: !7556, file: !7291, line: 263, type: !102)
!7561 = !DILocalVariable(name: "s", arg: 2, scope: !7556, file: !7291, line: 263, type: !13)
!7562 = !DILocalVariable(name: "n", arg: 3, scope: !7556, file: !7291, line: 263, type: !1714)
!7563 = !DILocalVariable(name: "dest", scope: !7556, file: !7291, line: 265, type: !869)
!7564 = !DILocalVariable(name: "src", scope: !7556, file: !7291, line: 266, type: !574)
!7565 = !DILocation(line: 0, scope: !7556)
!7566 = !DILocation(line: 268, column: 21, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7556, file: !7291, line: 268, column: 6)
!7568 = !DILocation(line: 268, column: 28, scope: !7567)
!7569 = !DILocation(line: 268, column: 6, scope: !7556)
!7570 = !DILocation(line: 280, column: 12, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7567, file: !7291, line: 278, column: 9)
!7572 = !DILocation(line: 280, column: 3, scope: !7571)
!7573 = !DILocation(line: 275, column: 5, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !7291, line: 274, column: 17)
!7575 = distinct !DILexicalBlock(scope: !7567, file: !7291, line: 268, column: 33)
!7576 = !DILocation(line: 276, column: 14, scope: !7574)
!7577 = !DILocation(line: 276, column: 4, scope: !7574)
!7578 = !DILocation(line: 276, column: 12, scope: !7574)
!7579 = !DILocation(line: 274, column: 12, scope: !7575)
!7580 = !DILocation(line: 274, column: 3, scope: !7575)
!7581 = distinct !{!7581, !7580, !7582}
!7582 = !DILocation(line: 277, column: 3, scope: !7575)
!7583 = !DILocation(line: 281, column: 12, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7571, file: !7291, line: 280, column: 17)
!7585 = !DILocation(line: 281, column: 10, scope: !7584)
!7586 = !DILocation(line: 282, column: 8, scope: !7584)
!7587 = !DILocation(line: 283, column: 7, scope: !7584)
!7588 = !DILocation(line: 284, column: 5, scope: !7584)
!7589 = distinct !{!7589, !7572, !7590}
!7590 = !DILocation(line: 285, column: 3, scope: !7571)
!7591 = !DILocation(line: 288, column: 2, scope: !7556)
!7592 = distinct !DISubprogram(name: "memcpy", scope: !7291, file: !7291, line: 298, type: !7593, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7597)
!7593 = !DISubroutineType(types: !7594)
!7594 = !{!102, !7595, !7596, !1714}
!7595 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7596 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7597 = !{!7598, !7599, !7600, !7601, !7602}
!7598 = !DILocalVariable(name: "d", arg: 1, scope: !7592, file: !7291, line: 298, type: !7595)
!7599 = !DILocalVariable(name: "s", arg: 2, scope: !7592, file: !7291, line: 298, type: !7596)
!7600 = !DILocalVariable(name: "n", arg: 3, scope: !7592, file: !7291, line: 298, type: !1714)
!7601 = !DILocalVariable(name: "d_byte", scope: !7592, file: !7291, line: 302, type: !591)
!7602 = !DILocalVariable(name: "s_byte", scope: !7592, file: !7291, line: 303, type: !2744)
!7603 = !DILocation(line: 0, scope: !7592)
!7604 = !DILocation(line: 337, column: 11, scope: !7592)
!7605 = !DILocation(line: 337, column: 2, scope: !7592)
!7606 = !DILocation(line: 338, column: 25, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7592, file: !7291, line: 337, column: 16)
!7608 = !DILocation(line: 338, column: 17, scope: !7607)
!7609 = !DILocation(line: 338, column: 11, scope: !7607)
!7610 = !DILocation(line: 338, column: 15, scope: !7607)
!7611 = !DILocation(line: 339, column: 4, scope: !7607)
!7612 = distinct !{!7612, !7605, !7613}
!7613 = !DILocation(line: 340, column: 2, scope: !7592)
!7614 = !DILocation(line: 342, column: 2, scope: !7592)
!7615 = distinct !DISubprogram(name: "memset", scope: !7291, file: !7291, line: 352, type: !7616, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7618)
!7616 = !DISubroutineType(types: !7617)
!7617 = !{!102, !102, !103, !1714}
!7618 = !{!7619, !7620, !7621, !7622, !7623}
!7619 = !DILocalVariable(name: "buf", arg: 1, scope: !7615, file: !7291, line: 352, type: !102)
!7620 = !DILocalVariable(name: "c", arg: 2, scope: !7615, file: !7291, line: 352, type: !103)
!7621 = !DILocalVariable(name: "n", arg: 3, scope: !7615, file: !7291, line: 352, type: !1714)
!7622 = !DILocalVariable(name: "d_byte", scope: !7615, file: !7291, line: 356, type: !591)
!7623 = !DILocalVariable(name: "c_byte", scope: !7615, file: !7291, line: 357, type: !422)
!7624 = !DILocation(line: 0, scope: !7615)
!7625 = !DILocation(line: 357, column: 25, scope: !7615)
!7626 = !DILocation(line: 389, column: 11, scope: !7615)
!7627 = !DILocation(line: 389, column: 2, scope: !7615)
!7628 = !DILocation(line: 390, column: 11, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7615, file: !7291, line: 389, column: 16)
!7630 = !DILocation(line: 390, column: 15, scope: !7629)
!7631 = !DILocation(line: 391, column: 4, scope: !7629)
!7632 = distinct !{!7632, !7627, !7633}
!7633 = !DILocation(line: 392, column: 2, scope: !7615)
!7634 = !DILocation(line: 394, column: 2, scope: !7615)
!7635 = distinct !DISubprogram(name: "memchr", scope: !7291, file: !7291, line: 404, type: !7636, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !7638)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{!102, !13, !103, !1714}
!7638 = !{!7639, !7640, !7641, !7642}
!7639 = !DILocalVariable(name: "s", arg: 1, scope: !7635, file: !7291, line: 404, type: !13)
!7640 = !DILocalVariable(name: "c", arg: 2, scope: !7635, file: !7291, line: 404, type: !103)
!7641 = !DILocalVariable(name: "n", arg: 3, scope: !7635, file: !7291, line: 404, type: !1714)
!7642 = !DILocalVariable(name: "p", scope: !7643, file: !7291, line: 407, type: !2744)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !7291, line: 406, column: 14)
!7644 = distinct !DILexicalBlock(scope: !7635, file: !7291, line: 406, column: 6)
!7645 = !DILocation(line: 0, scope: !7635)
!7646 = !DILocation(line: 406, column: 8, scope: !7644)
!7647 = !DILocation(line: 406, column: 6, scope: !7635)
!7648 = !DILocation(line: 409, column: 3, scope: !7643)
!7649 = !DILocation(line: 0, scope: !7643)
!7650 = !DILocation(line: 410, column: 8, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !7291, line: 410, column: 8)
!7652 = distinct !DILexicalBlock(scope: !7643, file: !7291, line: 409, column: 6)
!7653 = !DILocation(line: 410, column: 13, scope: !7651)
!7654 = !DILocation(line: 410, column: 8, scope: !7652)
!7655 = distinct !{!7655, !7648, !7656}
!7656 = !DILocation(line: 414, column: 20, scope: !7643)
!7657 = !DILocation(line: 417, column: 2, scope: !7635)
!7658 = !DILocation(line: 418, column: 1, scope: !7635)
!7659 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !716, file: !716, line: 23, type: !3147, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !709, retainedNodes: !7660)
!7660 = !{!7661}
!7661 = !DILocalVariable(name: "hook", arg: 1, scope: !7659, file: !716, line: 23, type: !117)
!7662 = !DILocation(line: 0, scope: !7659)
!7663 = !DILocation(line: 25, column: 15, scope: !7659)
!7664 = !DILocation(line: 26, column: 1, scope: !7659)
!7665 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !716, file: !716, line: 14, type: !118, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !709, retainedNodes: !7666)
!7666 = !{!7667}
!7667 = !DILocalVariable(name: "c", arg: 1, scope: !7665, file: !716, line: 14, type: !103)
!7668 = !DILocation(line: 0, scope: !7665)
!7669 = !DILocation(line: 18, column: 2, scope: !7665)
!7670 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !716, file: !716, line: 28, type: !7671, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !709, retainedNodes: !7673)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!103, !103, !712}
!7673 = !{!7674, !7675}
!7674 = !DILocalVariable(name: "c", arg: 1, scope: !7670, file: !716, line: 28, type: !103)
!7675 = !DILocalVariable(name: "stream", arg: 2, scope: !7670, file: !716, line: 28, type: !712)
!7676 = !DILocation(line: 0, scope: !7670)
!7677 = !DILocation(line: 30, column: 27, scope: !7670)
!7678 = !DILocation(line: 30, column: 50, scope: !7670)
!7679 = !DILocation(line: 30, column: 9, scope: !7670)
!7680 = !DILocation(line: 30, column: 2, scope: !7670)
!7681 = distinct !DISubprogram(name: "fputc", scope: !716, file: !716, line: 41, type: !7671, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !709, retainedNodes: !7682)
!7682 = !{!7683, !7684}
!7683 = !DILocalVariable(name: "c", arg: 1, scope: !7681, file: !716, line: 41, type: !103)
!7684 = !DILocalVariable(name: "stream", arg: 2, scope: !7681, file: !716, line: 41, type: !712)
!7685 = !DILocation(line: 0, scope: !7681)
!7686 = !DILocation(line: 43, column: 9, scope: !7681)
!7687 = !DILocation(line: 43, column: 2, scope: !7681)
!7688 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7689, file: !7689, line: 72, type: !7671, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !709, retainedNodes: !7690)
!7689 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/subsys/console/echo")
!7690 = !{!7691, !7692}
!7691 = !DILocalVariable(name: "c", arg: 1, scope: !7688, file: !7689, line: 72, type: !103)
!7692 = !DILocalVariable(name: "stream", arg: 2, scope: !7688, file: !7689, line: 72, type: !712)
!7693 = !DILocation(line: 0, scope: !7688)
!7694 = !DILocation(line: 81, column: 2, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7688, file: !7689, line: 81, column: 2)
!7696 = !{i64 2151099069}
!7697 = !DILocation(line: 82, column: 9, scope: !7688)
!7698 = !DILocation(line: 82, column: 2, scope: !7688)
!7699 = distinct !DISubprogram(name: "fputs", scope: !716, file: !716, line: 46, type: !7700, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !709, retainedNodes: !7703)
!7700 = !DISubroutineType(types: !7701)
!7701 = !{!103, !7295, !7702}
!7702 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !712)
!7703 = !{!7704, !7705, !7706, !7707}
!7704 = !DILocalVariable(name: "s", arg: 1, scope: !7699, file: !716, line: 46, type: !7295)
!7705 = !DILocalVariable(name: "stream", arg: 2, scope: !7699, file: !716, line: 46, type: !7702)
!7706 = !DILocalVariable(name: "len", scope: !7699, file: !716, line: 48, type: !103)
!7707 = !DILocalVariable(name: "ret", scope: !7699, file: !716, line: 49, type: !103)
!7708 = !DILocation(line: 0, scope: !7699)
!7709 = !DILocation(line: 48, column: 12, scope: !7699)
!7710 = !DILocation(line: 51, column: 8, scope: !7699)
!7711 = !DILocation(line: 53, column: 13, scope: !7699)
!7712 = !DILocation(line: 53, column: 9, scope: !7699)
!7713 = !DILocation(line: 53, column: 2, scope: !7699)
!7714 = distinct !DISubprogram(name: "fwrite", scope: !716, file: !716, line: 99, type: !7715, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !709, retainedNodes: !7717)
!7715 = !DISubroutineType(types: !7716)
!7716 = !{!1714, !7596, !1714, !1714, !7702}
!7717 = !{!7718, !7719, !7720, !7721}
!7718 = !DILocalVariable(name: "ptr", arg: 1, scope: !7714, file: !716, line: 99, type: !7596)
!7719 = !DILocalVariable(name: "size", arg: 2, scope: !7714, file: !716, line: 99, type: !1714)
!7720 = !DILocalVariable(name: "nitems", arg: 3, scope: !7714, file: !716, line: 99, type: !1714)
!7721 = !DILocalVariable(name: "stream", arg: 4, scope: !7714, file: !716, line: 100, type: !7702)
!7722 = !DILocation(line: 0, scope: !7714)
!7723 = !DILocation(line: 102, column: 9, scope: !7714)
!7724 = !DILocation(line: 102, column: 2, scope: !7714)
!7725 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7689, file: !7689, line: 96, type: !7715, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !709, retainedNodes: !7726)
!7726 = !{!7727, !7728, !7729, !7730}
!7727 = !DILocalVariable(name: "ptr", arg: 1, scope: !7725, file: !7689, line: 96, type: !7596)
!7728 = !DILocalVariable(name: "size", arg: 2, scope: !7725, file: !7689, line: 96, type: !1714)
!7729 = !DILocalVariable(name: "nitems", arg: 3, scope: !7725, file: !7689, line: 96, type: !1714)
!7730 = !DILocalVariable(name: "stream", arg: 4, scope: !7725, file: !7689, line: 96, type: !7702)
!7731 = !DILocation(line: 0, scope: !7725)
!7732 = !DILocation(line: 107, column: 2, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7725, file: !7689, line: 107, column: 2)
!7734 = !{i64 2151099173}
!7735 = !DILocation(line: 108, column: 9, scope: !7725)
!7736 = !DILocation(line: 108, column: 2, scope: !7725)
!7737 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !716, file: !716, line: 56, type: !7715, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !709, retainedNodes: !7738)
!7738 = !{!7739, !7740, !7741, !7742, !7743, !7744, !7745, !7746}
!7739 = !DILocalVariable(name: "ptr", arg: 1, scope: !7737, file: !716, line: 56, type: !7596)
!7740 = !DILocalVariable(name: "size", arg: 2, scope: !7737, file: !716, line: 56, type: !1714)
!7741 = !DILocalVariable(name: "nitems", arg: 3, scope: !7737, file: !716, line: 57, type: !1714)
!7742 = !DILocalVariable(name: "stream", arg: 4, scope: !7737, file: !716, line: 57, type: !7702)
!7743 = !DILocalVariable(name: "i", scope: !7737, file: !716, line: 59, type: !1714)
!7744 = !DILocalVariable(name: "j", scope: !7737, file: !716, line: 60, type: !1714)
!7745 = !DILocalVariable(name: "p", scope: !7737, file: !716, line: 61, type: !2744)
!7746 = !DILabel(scope: !7737, name: "done", file: !716, line: 82)
!7747 = !DILocation(line: 0, scope: !7737)
!7748 = !DILocation(line: 63, column: 14, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7737, file: !716, line: 63, column: 6)
!7750 = !DILocation(line: 63, column: 24, scope: !7749)
!7751 = !DILocation(line: 72, column: 3, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7737, file: !716, line: 70, column: 5)
!7753 = !DILocation(line: 0, scope: !7752)
!7754 = !DILocation(line: 73, column: 8, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !716, line: 73, column: 8)
!7756 = distinct !DILexicalBlock(scope: !7752, file: !716, line: 72, column: 6)
!7757 = !DILocation(line: 73, column: 29, scope: !7755)
!7758 = !DILocation(line: 73, column: 27, scope: !7755)
!7759 = !DILocation(line: 73, column: 21, scope: !7755)
!7760 = !DILocation(line: 73, column: 33, scope: !7755)
!7761 = !DILocation(line: 73, column: 8, scope: !7756)
!7762 = !DILocation(line: 76, column: 5, scope: !7756)
!7763 = !DILocation(line: 77, column: 14, scope: !7752)
!7764 = !DILocation(line: 77, column: 3, scope: !7756)
!7765 = distinct !{!7765, !7751, !7766}
!7766 = !DILocation(line: 77, column: 17, scope: !7752)
!7767 = !DILocation(line: 79, column: 4, scope: !7752)
!7768 = !DILocation(line: 80, column: 13, scope: !7737)
!7769 = !DILocation(line: 80, column: 2, scope: !7752)
!7770 = distinct !{!7770, !7771, !7772}
!7771 = !DILocation(line: 70, column: 2, scope: !7737)
!7772 = !DILocation(line: 80, column: 16, scope: !7737)
!7773 = !DILocation(line: 82, column: 1, scope: !7737)
!7774 = !DILocation(line: 83, column: 17, scope: !7737)
!7775 = !DILocation(line: 83, column: 2, scope: !7737)
!7776 = !DILocation(line: 84, column: 1, scope: !7737)
!7777 = distinct !DISubprogram(name: "puts", scope: !716, file: !716, line: 106, type: !7778, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !709, retainedNodes: !7780)
!7778 = !DISubroutineType(types: !7779)
!7779 = !{!103, !574}
!7780 = !{!7781}
!7781 = !DILocalVariable(name: "s", arg: 1, scope: !7777, file: !716, line: 106, type: !574)
!7782 = !DILocation(line: 0, scope: !7777)
!7783 = !DILocation(line: 108, column: 6, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7777, file: !716, line: 108, column: 6)
!7785 = !DILocation(line: 108, column: 23, scope: !7784)
!7786 = !DILocation(line: 108, column: 6, scope: !7777)
!7787 = !DILocation(line: 112, column: 9, scope: !7777)
!7788 = !DILocation(line: 112, column: 29, scope: !7777)
!7789 = !DILocation(line: 112, column: 2, scope: !7777)
!7790 = !DILocation(line: 113, column: 1, scope: !7777)
!7791 = distinct !DISubprogram(name: "uart_console_init", scope: !723, file: !723, line: 588, type: !760, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7792)
!7792 = !{!7793}
!7793 = !DILocalVariable(name: "arg", arg: 1, scope: !7791, file: !723, line: 588, type: !739)
!7794 = !DILocation(line: 0, scope: !7791)
!7795 = !DILocation(line: 593, column: 7, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7791, file: !723, line: 593, column: 6)
!7797 = !DILocation(line: 593, column: 6, scope: !7791)
!7798 = !DILocation(line: 597, column: 2, scope: !7791)
!7799 = !DILocation(line: 599, column: 2, scope: !7791)
!7800 = !DILocation(line: 600, column: 1, scope: !7791)
!7801 = distinct !DISubprogram(name: "device_is_ready", scope: !6381, file: !6381, line: 47, type: !7802, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7804)
!7802 = !DISubroutineType(types: !7803)
!7803 = !{!583, !739}
!7804 = !{!7805}
!7805 = !DILocalVariable(name: "dev", arg: 1, scope: !7801, file: !6381, line: 47, type: !739)
!7806 = !DILocation(line: 0, scope: !7801)
!7807 = !DILocation(line: 55, column: 2, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7801, file: !6381, line: 55, column: 2)
!7809 = !{i64 2151368743}
!7810 = !DILocation(line: 56, column: 9, scope: !7801)
!7811 = !DILocation(line: 56, column: 2, scope: !7801)
!7812 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !723, file: !723, line: 573, type: !3019, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !842)
!7813 = !DILocation(line: 576, column: 2, scope: !7812)
!7814 = !DILocation(line: 579, column: 2, scope: !7812)
!7815 = !DILocation(line: 581, column: 1, scope: !7812)
!7816 = distinct !DISubprogram(name: "console_out", scope: !723, file: !723, line: 77, type: !118, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7817)
!7817 = !{!7818, !7819}
!7818 = !DILocalVariable(name: "c", arg: 1, scope: !7816, file: !723, line: 77, type: !103)
!7819 = !DILocalVariable(name: "handled_by_debug_server", scope: !7816, file: !723, line: 81, type: !103)
!7820 = !DILocation(line: 0, scope: !7816)
!7821 = !DILocation(line: 81, column: 32, scope: !7816)
!7822 = !DILocation(line: 83, column: 6, scope: !7816)
!7823 = !DILocation(line: 89, column: 11, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7816, file: !723, line: 89, column: 6)
!7825 = !DILocation(line: 89, column: 6, scope: !7816)
!7826 = !DILocation(line: 90, column: 3, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7824, file: !723, line: 89, column: 17)
!7828 = !DILocation(line: 91, column: 2, scope: !7827)
!7829 = !DILocation(line: 92, column: 2, scope: !7816)
!7830 = !DILocation(line: 94, column: 2, scope: !7816)
!7831 = !DILocation(line: 95, column: 1, scope: !7816)
!7832 = distinct !DISubprogram(name: "uart_poll_out", scope: !5637, file: !5637, line: 95, type: !756, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7833)
!7833 = !{!7834, !7835}
!7834 = !DILocalVariable(name: "dev", arg: 1, scope: !7832, file: !5637, line: 95, type: !739)
!7835 = !DILocalVariable(name: "out_char", arg: 2, scope: !7832, file: !5637, line: 95, type: !422)
!7836 = !DILocation(line: 0, scope: !7832)
!7837 = !DILocation(line: 105, column: 2, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7832, file: !5637, line: 105, column: 2)
!7839 = !{i64 2151451988}
!7840 = !DILocation(line: 106, column: 2, scope: !7832)
!7841 = !DILocation(line: 107, column: 1, scope: !7832)
!7842 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !562, file: !562, line: 574, type: !756, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7843)
!7843 = !{!7844, !7845, !7846}
!7844 = !DILocalVariable(name: "dev", arg: 1, scope: !7842, file: !562, line: 574, type: !739)
!7845 = !DILocalVariable(name: "out_char", arg: 2, scope: !7842, file: !562, line: 575, type: !422)
!7846 = !DILocalVariable(name: "api", scope: !7842, file: !562, line: 577, type: !731)
!7847 = !DILocation(line: 0, scope: !7842)
!7848 = !DILocation(line: 578, column: 40, scope: !7842)
!7849 = !DILocation(line: 580, column: 7, scope: !7842)
!7850 = !DILocation(line: 580, column: 2, scope: !7842)
!7851 = !DILocation(line: 581, column: 1, scope: !7842)
!7852 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !723, file: !723, line: 49, type: !875, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7853)
!7853 = !{!7854}
!7854 = !DILocalVariable(name: "c", arg: 1, scope: !7852, file: !723, line: 49, type: !108)
!7855 = !DILocation(line: 0, scope: !7852)
!7856 = !DILocation(line: 51, column: 2, scope: !7852)
!7857 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !571, file: !571, line: 730, type: !7802, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7858)
!7858 = !{!7859}
!7859 = !DILocalVariable(name: "dev", arg: 1, scope: !7857, file: !571, line: 730, type: !739)
!7860 = !DILocation(line: 0, scope: !7857)
!7861 = !DILocation(line: 732, column: 9, scope: !7857)
!7862 = !DILocation(line: 732, column: 2, scope: !7857)
!7863 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !723, file: !723, line: 44, type: !7864, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7866)
!7864 = !DISubroutineType(types: !7865)
!7865 = !{null, !917}
!7866 = !{!7867}
!7867 = !DILocalVariable(name: "hook", arg: 1, scope: !7863, file: !723, line: 44, type: !917)
!7868 = !DILocation(line: 0, scope: !7863)
!7869 = !DILocation(line: 46, column: 16, scope: !7863)
!7870 = !DILocation(line: 47, column: 1, scope: !7863)
!7871 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !723, file: !723, line: 55, type: !7872, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7874)
!7872 = !DISubroutineType(types: !7873)
!7873 = !{null, !872}
!7874 = !{!7875}
!7875 = !DILocalVariable(name: "hook", arg: 1, scope: !7871, file: !723, line: 55, type: !872)
!7876 = !DILocation(line: 0, scope: !7871)
!7877 = !DILocation(line: 57, column: 17, scope: !7871)
!7878 = !DILocation(line: 58, column: 1, scope: !7871)
!7879 = distinct !DISubprogram(name: "uart_register_input", scope: !723, file: !723, line: 549, type: !7880, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7882)
!7880 = !DISubroutineType(types: !7881)
!7881 = !{null, !820, !820, !866}
!7882 = !{!7883, !7884, !7885}
!7883 = !DILocalVariable(name: "avail", arg: 1, scope: !7879, file: !723, line: 549, type: !820)
!7884 = !DILocalVariable(name: "lines", arg: 2, scope: !7879, file: !723, line: 549, type: !820)
!7885 = !DILocalVariable(name: "completion", arg: 3, scope: !7879, file: !723, line: 550, type: !866)
!7886 = !DILocation(line: 0, scope: !7879)
!7887 = !DILocation(line: 552, column: 14, scope: !7879)
!7888 = !DILocation(line: 553, column: 14, scope: !7879)
!7889 = !DILocation(line: 554, column: 16, scope: !7879)
!7890 = !DILocation(line: 556, column: 2, scope: !7879)
!7891 = !DILocation(line: 557, column: 1, scope: !7879)
!7892 = distinct !DISubprogram(name: "console_input_init", scope: !723, file: !723, line: 532, type: !3019, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7893)
!7893 = !{!7894}
!7894 = !DILocalVariable(name: "c", scope: !7892, file: !723, line: 534, type: !421)
!7895 = !DILocation(line: 534, column: 2, scope: !7892)
!7896 = !DILocation(line: 536, column: 2, scope: !7892)
!7897 = !DILocation(line: 537, column: 2, scope: !7892)
!7898 = !DILocation(line: 539, column: 2, scope: !7892)
!7899 = !DILocation(line: 542, column: 9, scope: !7892)
!7900 = !DILocation(line: 542, column: 2, scope: !7892)
!7901 = !DILocation(line: 0, scope: !7892)
!7902 = !DILocation(line: 543, column: 3, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7892, file: !723, line: 542, column: 46)
!7904 = distinct !{!7904, !7900, !7905}
!7905 = !DILocation(line: 544, column: 2, scope: !7892)
!7906 = !DILocation(line: 546, column: 2, scope: !7892)
!7907 = !DILocation(line: 547, column: 1, scope: !7892)
!7908 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5637, file: !5637, line: 265, type: !790, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7909)
!7909 = !{!7910}
!7910 = !DILocalVariable(name: "dev", arg: 1, scope: !7908, file: !5637, line: 265, type: !739)
!7911 = !DILocation(line: 0, scope: !7908)
!7912 = !DILocation(line: 274, column: 2, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7908, file: !5637, line: 274, column: 2)
!7914 = !{i64 2151452464}
!7915 = !DILocation(line: 275, column: 2, scope: !7908)
!7916 = !DILocation(line: 276, column: 1, scope: !7908)
!7917 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5637, file: !5637, line: 217, type: !790, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7918)
!7918 = !{!7919}
!7919 = !DILocalVariable(name: "dev", arg: 1, scope: !7917, file: !5637, line: 217, type: !739)
!7920 = !DILocation(line: 0, scope: !7917)
!7921 = !DILocation(line: 226, column: 2, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7917, file: !5637, line: 226, column: 2)
!7923 = !{i64 2151452328}
!7924 = !DILocation(line: 227, column: 2, scope: !7917)
!7925 = !DILocation(line: 228, column: 1, scope: !7917)
!7926 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !562, file: !562, line: 1190, type: !7927, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7929)
!7927 = !DISubroutineType(types: !7928)
!7928 = !{null, !739, !806}
!7929 = !{!7930, !7931}
!7930 = !DILocalVariable(name: "dev", arg: 1, scope: !7926, file: !562, line: 1190, type: !739)
!7931 = !DILocalVariable(name: "cb", arg: 2, scope: !7926, file: !562, line: 1191, type: !806)
!7932 = !DILocation(line: 0, scope: !7926)
!7933 = !DILocation(line: 1193, column: 2, scope: !7926)
!7934 = !DILocation(line: 1194, column: 1, scope: !7926)
!7935 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !562, file: !562, line: 1024, type: !760, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7936)
!7936 = !{!7937, !7938}
!7937 = !DILocalVariable(name: "dev", arg: 1, scope: !7935, file: !562, line: 1024, type: !739)
!7938 = !DILocalVariable(name: "api", scope: !7935, file: !562, line: 1027, type: !731)
!7939 = !DILocation(line: 0, scope: !7935)
!7940 = !DILocation(line: 1028, column: 40, scope: !7935)
!7941 = !DILocation(line: 1030, column: 11, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7935, file: !562, line: 1030, column: 6)
!7943 = !DILocation(line: 1030, column: 24, scope: !7942)
!7944 = !DILocation(line: 1030, column: 6, scope: !7935)
!7945 = !DILocation(line: 1033, column: 9, scope: !7935)
!7946 = !DILocation(line: 1033, column: 2, scope: !7935)
!7947 = !DILocation(line: 1038, column: 1, scope: !7935)
!7948 = distinct !DISubprogram(name: "uart_fifo_read", scope: !562, file: !562, line: 785, type: !786, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7949)
!7949 = !{!7950, !7951, !7952, !7953}
!7950 = !DILocalVariable(name: "dev", arg: 1, scope: !7948, file: !562, line: 785, type: !739)
!7951 = !DILocalVariable(name: "rx_data", arg: 2, scope: !7948, file: !562, line: 785, type: !628)
!7952 = !DILocalVariable(name: "size", arg: 3, scope: !7948, file: !562, line: 786, type: !629)
!7953 = !DILocalVariable(name: "api", scope: !7948, file: !562, line: 789, type: !731)
!7954 = !DILocation(line: 0, scope: !7948)
!7955 = !DILocation(line: 790, column: 40, scope: !7948)
!7956 = !DILocation(line: 792, column: 11, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7948, file: !562, line: 792, column: 6)
!7958 = !DILocation(line: 792, column: 21, scope: !7957)
!7959 = !DILocation(line: 792, column: 6, scope: !7948)
!7960 = !DILocation(line: 796, column: 9, scope: !7948)
!7961 = !DILocation(line: 796, column: 2, scope: !7948)
!7962 = !DILocation(line: 803, column: 1, scope: !7948)
!7963 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5637, file: !5637, line: 241, type: !790, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7964)
!7964 = !{!7965}
!7965 = !DILocalVariable(name: "dev", arg: 1, scope: !7963, file: !5637, line: 241, type: !739)
!7966 = !DILocation(line: 0, scope: !7963)
!7967 = !DILocation(line: 250, column: 2, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7963, file: !5637, line: 250, column: 2)
!7969 = !{i64 2151452396}
!7970 = !DILocation(line: 251, column: 2, scope: !7963)
!7971 = !DILocation(line: 252, column: 1, scope: !7963)
!7972 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !562, file: !562, line: 934, type: !790, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !7973)
!7973 = !{!7974, !7975}
!7974 = !DILocalVariable(name: "dev", arg: 1, scope: !7972, file: !562, line: 934, type: !739)
!7975 = !DILocalVariable(name: "api", scope: !7972, file: !562, line: 937, type: !731)
!7976 = !DILocation(line: 0, scope: !7972)
!7977 = !DILocation(line: 938, column: 40, scope: !7972)
!7978 = !DILocation(line: 940, column: 11, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7972, file: !562, line: 940, column: 6)
!7980 = !DILocation(line: 940, column: 25, scope: !7979)
!7981 = !DILocation(line: 940, column: 6, scope: !7972)
!7982 = !DILocation(line: 941, column: 3, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7979, file: !562, line: 940, column: 34)
!7984 = !DILocation(line: 942, column: 2, scope: !7983)
!7985 = !DILocation(line: 946, column: 1, scope: !7972)
!7986 = !DILocation(line: 0, scope: !882)
!7987 = !DILocation(line: 433, column: 9, scope: !882)
!7988 = !DILocation(line: 433, column: 43, scope: !882)
!7989 = !DILocation(line: 434, column: 9, scope: !882)
!7990 = !DILocation(line: 433, column: 2, scope: !882)
!7991 = !DILocation(line: 436, column: 3, scope: !887)
!7992 = !DILocation(line: 439, column: 8, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !887, file: !723, line: 439, column: 7)
!7994 = !DILocation(line: 439, column: 7, scope: !887)
!7995 = distinct !{!7995, !7990, !7996}
!7996 = !DILocation(line: 529, column: 2, scope: !882)
!7997 = !DILocation(line: 0, scope: !887)
!7998 = !DILocation(line: 445, column: 8, scope: !887)
!7999 = !DILocation(line: 446, column: 10, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !887, file: !723, line: 446, column: 7)
!8001 = !DILocation(line: 446, column: 7, scope: !887)
!8002 = !DILocation(line: 451, column: 7, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !887, file: !723, line: 451, column: 7)
!8004 = !DILocation(line: 451, column: 21, scope: !8003)
!8005 = !DILocation(line: 451, column: 29, scope: !8003)
!8006 = !DILocation(line: 451, column: 46, scope: !8003)
!8007 = !DILocation(line: 451, column: 32, scope: !8003)
!8008 = !DILocation(line: 451, column: 52, scope: !8003)
!8009 = !DILocation(line: 451, column: 7, scope: !887)
!8010 = !DILocation(line: 460, column: 8, scope: !892)
!8011 = !DILocation(line: 460, column: 7, scope: !887)
!8012 = !DILocation(line: 461, column: 10, scope: !890)
!8013 = !DILocation(line: 0, scope: !890)
!8014 = !DILocation(line: 461, column: 8, scope: !891)
!8015 = !DILocation(line: 462, column: 9, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !891, file: !723, line: 462, column: 8)
!8017 = !DILocation(line: 462, column: 8, scope: !891)
!8018 = !DILocation(line: 477, column: 7, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !887, file: !723, line: 477, column: 7)
!8020 = !DILocation(line: 477, column: 7, scope: !887)
!8021 = !DILocation(line: 478, column: 16, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8019, file: !723, line: 477, column: 46)
!8023 = !DILocation(line: 478, column: 22, scope: !8022)
!8024 = !DILocation(line: 478, column: 4, scope: !8022)
!8025 = !DILocation(line: 479, column: 4, scope: !8022)
!8026 = !DILocation(line: 483, column: 7, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !887, file: !723, line: 483, column: 7)
!8028 = !DILocation(line: 483, column: 7, scope: !887)
!8029 = !DILocation(line: 484, column: 13, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8031, file: !723, line: 484, column: 8)
!8031 = distinct !DILexicalBlock(scope: !8027, file: !723, line: 483, column: 55)
!8032 = !DILocation(line: 484, column: 8, scope: !8031)
!8033 = !DILocation(line: 485, column: 5, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8030, file: !723, line: 484, column: 26)
!8035 = !DILocation(line: 486, column: 5, scope: !8034)
!8036 = !DILocation(line: 487, column: 4, scope: !8034)
!8037 = !DILocation(line: 493, column: 16, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !887, file: !723, line: 493, column: 7)
!8039 = !DILocation(line: 493, column: 8, scope: !8038)
!8040 = !DILocation(line: 493, column: 7, scope: !887)
!8041 = !DILocation(line: 494, column: 4, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8038, file: !723, line: 493, column: 23)
!8043 = !DILocation(line: 497, column: 9, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !723, line: 497, column: 9)
!8045 = distinct !DILexicalBlock(scope: !8042, file: !723, line: 494, column: 18)
!8046 = !DILocation(line: 497, column: 13, scope: !8044)
!8047 = !DILocation(line: 497, column: 9, scope: !8045)
!8048 = !DILocation(line: 498, column: 16, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8044, file: !723, line: 497, column: 18)
!8050 = !DILocation(line: 498, column: 26, scope: !8049)
!8051 = !DILocation(line: 498, column: 34, scope: !8049)
!8052 = !DILocation(line: 498, column: 6, scope: !8049)
!8053 = !DILocation(line: 499, column: 5, scope: !8049)
!8054 = !DILocation(line: 502, column: 5, scope: !8045)
!8055 = !DILocation(line: 503, column: 5, scope: !8045)
!8056 = !DILocation(line: 505, column: 5, scope: !8045)
!8057 = !DILocation(line: 505, column: 15, scope: !8045)
!8058 = !DILocation(line: 505, column: 21, scope: !8045)
!8059 = !DILocation(line: 505, column: 19, scope: !8045)
!8060 = !DILocation(line: 505, column: 26, scope: !8045)
!8061 = !DILocation(line: 506, column: 5, scope: !8045)
!8062 = !DILocation(line: 507, column: 5, scope: !8045)
!8063 = !DILocation(line: 508, column: 9, scope: !8045)
!8064 = !DILocation(line: 509, column: 9, scope: !8045)
!8065 = !DILocation(line: 510, column: 5, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8045, file: !723, line: 510, column: 5)
!8067 = !DILocation(line: 511, column: 9, scope: !8045)
!8068 = !DILocation(line: 512, column: 5, scope: !8045)
!8069 = !DILocation(line: 514, column: 9, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8045, file: !723, line: 514, column: 9)
!8071 = !DILocation(line: 514, column: 23, scope: !8070)
!8072 = !DILocation(line: 515, column: 27, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8070, file: !723, line: 514, column: 32)
!8074 = !DILocation(line: 515, column: 38, scope: !8073)
!8075 = !DILocation(line: 515, column: 13, scope: !8073)
!8076 = !DILocation(line: 515, column: 10, scope: !8073)
!8077 = !DILocation(line: 516, column: 5, scope: !8073)
!8078 = !DILocation(line: 526, column: 7, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !887, file: !723, line: 526, column: 7)
!8080 = !DILocation(line: 526, column: 13, scope: !8079)
!8081 = !DILocation(line: 526, column: 11, scope: !8079)
!8082 = !DILocation(line: 526, column: 17, scope: !8079)
!8083 = !DILocation(line: 526, column: 7, scope: !887)
!8084 = !DILocation(line: 527, column: 17, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8079, file: !723, line: 526, column: 42)
!8086 = !DILocation(line: 527, column: 30, scope: !8085)
!8087 = !DILocation(line: 527, column: 4, scope: !8085)
!8088 = !DILocation(line: 528, column: 3, scope: !8085)
!8089 = !DILocation(line: 530, column: 1, scope: !882)
!8090 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !562, file: !562, line: 1163, type: !804, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8091)
!8091 = !{!8092, !8093, !8094, !8095}
!8092 = !DILocalVariable(name: "dev", arg: 1, scope: !8090, file: !562, line: 1163, type: !739)
!8093 = !DILocalVariable(name: "cb", arg: 2, scope: !8090, file: !562, line: 1164, type: !806)
!8094 = !DILocalVariable(name: "user_data", arg: 3, scope: !8090, file: !562, line: 1165, type: !102)
!8095 = !DILocalVariable(name: "api", scope: !8090, file: !562, line: 1168, type: !731)
!8096 = !DILocation(line: 0, scope: !8090)
!8097 = !DILocation(line: 1169, column: 40, scope: !8090)
!8098 = !DILocation(line: 1171, column: 11, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8090, file: !562, line: 1171, column: 6)
!8100 = !DILocation(line: 1171, column: 20, scope: !8099)
!8101 = !DILocation(line: 1171, column: 29, scope: !8099)
!8102 = !DILocation(line: 1171, column: 46, scope: !8099)
!8103 = !DILocation(line: 1171, column: 6, scope: !8090)
!8104 = !DILocation(line: 1172, column: 3, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8099, file: !562, line: 1171, column: 56)
!8106 = !DILocation(line: 1173, column: 2, scope: !8105)
!8107 = !DILocation(line: 1179, column: 1, scope: !8090)
!8108 = distinct !DISubprogram(name: "uart_irq_update", scope: !5637, file: !5637, line: 360, type: !760, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8109)
!8109 = !{!8110}
!8110 = !DILocalVariable(name: "dev", arg: 1, scope: !8108, file: !5637, line: 360, type: !739)
!8111 = !DILocation(line: 0, scope: !8108)
!8112 = !DILocation(line: 368, column: 2, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8108, file: !5637, line: 368, column: 2)
!8114 = !{i64 2151452736}
!8115 = !DILocation(line: 369, column: 9, scope: !8108)
!8116 = !DILocation(line: 369, column: 2, scope: !8108)
!8117 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !5637, file: !5637, line: 337, type: !760, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8118)
!8118 = !{!8119}
!8119 = !DILocalVariable(name: "dev", arg: 1, scope: !8117, file: !5637, line: 337, type: !739)
!8120 = !DILocation(line: 0, scope: !8117)
!8121 = !DILocation(line: 345, column: 2, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8117, file: !5637, line: 345, column: 2)
!8123 = !{i64 2151452668}
!8124 = !DILocation(line: 346, column: 9, scope: !8117)
!8125 = !DILocation(line: 346, column: 2, scope: !8117)
!8126 = distinct !DISubprogram(name: "read_uart", scope: !723, file: !723, line: 127, type: !8127, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8129)
!8127 = !DISubroutineType(types: !8128)
!8128 = !{!103, !739, !628, !32}
!8129 = !{!8130, !8131, !8132, !8133}
!8130 = !DILocalVariable(name: "uart", arg: 1, scope: !8126, file: !723, line: 127, type: !739)
!8131 = !DILocalVariable(name: "buf", arg: 2, scope: !8126, file: !723, line: 127, type: !628)
!8132 = !DILocalVariable(name: "size", arg: 3, scope: !8126, file: !723, line: 128, type: !32)
!8133 = !DILocalVariable(name: "rx", scope: !8126, file: !723, line: 130, type: !103)
!8134 = !DILocation(line: 0, scope: !8126)
!8135 = !DILocation(line: 132, column: 7, scope: !8126)
!8136 = !DILocation(line: 133, column: 9, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8126, file: !723, line: 133, column: 6)
!8138 = !DILocation(line: 133, column: 6, scope: !8126)
!8139 = !DILocation(line: 135, column: 3, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8137, file: !723, line: 133, column: 14)
!8141 = !DILocation(line: 137, column: 3, scope: !8140)
!8142 = !DILocation(line: 141, column: 1, scope: !8126)
!8143 = distinct !DISubprogram(name: "k_queue_get", scope: !3443, file: !3443, line: 649, type: !8144, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8151)
!8144 = !DISubroutineType(types: !8145)
!8145 = !{!102, !8146, !8147}
!8146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!8147 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1547, line: 67, baseType: !8148)
!8148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1547, line: 65, size: 64, elements: !8149)
!8149 = !{!8150}
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8148, file: !1547, line: 66, baseType: !1546, size: 64)
!8151 = !{!8152, !8153}
!8152 = !DILocalVariable(name: "queue", arg: 1, scope: !8143, file: !3443, line: 649, type: !8146)
!8153 = !DILocalVariable(name: "timeout", arg: 2, scope: !8143, file: !3443, line: 649, type: !8147)
!8154 = !DILocation(line: 0, scope: !8143)
!8155 = !DILocation(line: 658, column: 2, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8143, file: !3443, line: 658, column: 2)
!8157 = !{i64 2151047019}
!8158 = !DILocation(line: 659, column: 9, scope: !8143)
!8159 = !DILocation(line: 659, column: 2, scope: !8143)
!8160 = distinct !DISubprogram(name: "atomic_test_bit", scope: !908, file: !908, line: 131, type: !8161, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8165)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{!583, !8163, !103}
!8163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8164, size: 32)
!8164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!8165 = !{!8166, !8167, !8168}
!8166 = !DILocalVariable(name: "target", arg: 1, scope: !8160, file: !908, line: 131, type: !8163)
!8167 = !DILocalVariable(name: "bit", arg: 2, scope: !8160, file: !908, line: 131, type: !103)
!8168 = !DILocalVariable(name: "val", scope: !8160, file: !908, line: 133, type: !8169)
!8169 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !908, line: 23, baseType: !907)
!8170 = !DILocation(line: 0, scope: !8160)
!8171 = !DILocation(line: 133, column: 21, scope: !8160)
!8172 = !DILocation(line: 135, column: 27, scope: !8160)
!8173 = !DILocation(line: 135, column: 50, scope: !8160)
!8174 = !DILocation(line: 135, column: 2, scope: !8160)
!8175 = distinct !DISubprogram(name: "handle_ansi", scope: !723, file: !723, line: 232, type: !8176, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8178)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{null, !421, !869}
!8178 = !{!8179, !8180, !8181}
!8179 = !DILocalVariable(name: "byte", arg: 1, scope: !8175, file: !723, line: 232, type: !421)
!8180 = !DILocalVariable(name: "line", arg: 2, scope: !8175, file: !723, line: 232, type: !869)
!8181 = !DILabel(scope: !8175, name: "ansi_cmd", file: !723, line: 268)
!8182 = !DILocation(line: 0, scope: !8175)
!8183 = !DILocation(line: 234, column: 6, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8175, file: !723, line: 234, column: 6)
!8185 = !DILocation(line: 234, column: 6, scope: !8175)
!8186 = !DILocation(line: 235, column: 16, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !723, line: 235, column: 7)
!8188 = distinct !DILexicalBlock(scope: !8184, file: !723, line: 234, column: 61)
!8189 = !DILocation(line: 235, column: 8, scope: !8187)
!8190 = !DILocation(line: 235, column: 7, scope: !8188)
!8191 = !DILocation(line: 236, column: 13, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8187, file: !723, line: 235, column: 23)
!8193 = !DILocation(line: 237, column: 4, scope: !8192)
!8194 = !DILocation(line: 240, column: 3, scope: !8188)
!8195 = !DILocation(line: 241, column: 19, scope: !8188)
!8196 = !DILocation(line: 241, column: 12, scope: !8188)
!8197 = !DILocation(line: 242, column: 14, scope: !8188)
!8198 = !DILocation(line: 243, column: 3, scope: !8188)
!8199 = !DILocation(line: 246, column: 6, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8175, file: !723, line: 246, column: 6)
!8201 = !DILocation(line: 246, column: 6, scope: !8175)
!8202 = !DILocation(line: 247, column: 15, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !723, line: 247, column: 7)
!8204 = distinct !DILexicalBlock(scope: !8200, file: !723, line: 246, column: 49)
!8205 = !DILocation(line: 247, column: 7, scope: !8203)
!8206 = !DILocation(line: 247, column: 7, scope: !8204)
!8207 = !DILocation(line: 248, column: 8, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !723, line: 248, column: 8)
!8209 = distinct !DILexicalBlock(scope: !8203, file: !723, line: 247, column: 22)
!8210 = !DILocation(line: 248, column: 8, scope: !8209)
!8211 = !DILocation(line: 249, column: 16, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8208, file: !723, line: 248, column: 53)
!8213 = !DILocation(line: 250, column: 24, scope: !8212)
!8214 = !DILocation(line: 250, column: 16, scope: !8212)
!8215 = !DILocation(line: 251, column: 4, scope: !8212)
!8216 = !DILocation(line: 252, column: 14, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8208, file: !723, line: 251, column: 11)
!8218 = !DILocation(line: 253, column: 22, scope: !8217)
!8219 = !DILocation(line: 253, column: 14, scope: !8217)
!8220 = !DILocation(line: 259, column: 12, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8204, file: !723, line: 259, column: 7)
!8222 = !DILocation(line: 259, column: 19, scope: !8221)
!8223 = !DILocation(line: 260, column: 8, scope: !8221)
!8224 = !DILocation(line: 259, column: 7, scope: !8204)
!8225 = !DILocation(line: 264, column: 3, scope: !8204)
!8226 = !DILocation(line: 265, column: 3, scope: !8204)
!8227 = !DILocation(line: 266, column: 2, scope: !8204)
!8228 = !DILocation(line: 268, column: 1, scope: !8175)
!8229 = !DILocation(line: 269, column: 2, scope: !8175)
!8230 = !DILocation(line: 271, column: 7, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !723, line: 271, column: 7)
!8232 = distinct !DILexicalBlock(scope: !8175, file: !723, line: 269, column: 16)
!8233 = !DILocation(line: 271, column: 18, scope: !8231)
!8234 = !DILocation(line: 271, column: 16, scope: !8231)
!8235 = !DILocation(line: 271, column: 7, scope: !8232)
!8236 = !DILocation(line: 275, column: 7, scope: !8232)
!8237 = !DILocation(line: 276, column: 7, scope: !8232)
!8238 = !DILocation(line: 277, column: 3, scope: !8232)
!8239 = !DILocation(line: 278, column: 3, scope: !8232)
!8240 = !DILocation(line: 280, column: 7, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8232, file: !723, line: 280, column: 7)
!8242 = !DILocation(line: 280, column: 18, scope: !8241)
!8243 = !DILocation(line: 280, column: 16, scope: !8241)
!8244 = !DILocation(line: 280, column: 7, scope: !8232)
!8245 = !DILocation(line: 284, column: 7, scope: !8232)
!8246 = !DILocation(line: 285, column: 7, scope: !8232)
!8247 = !DILocation(line: 286, column: 3, scope: !8232)
!8248 = !DILocation(line: 287, column: 3, scope: !8232)
!8249 = !DILocation(line: 289, column: 8, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8232, file: !723, line: 289, column: 7)
!8251 = !DILocation(line: 289, column: 7, scope: !8232)
!8252 = !DILocation(line: 293, column: 19, scope: !8232)
!8253 = !DILocation(line: 293, column: 3, scope: !8232)
!8254 = !DILocation(line: 294, column: 10, scope: !8232)
!8255 = !DILocation(line: 294, column: 7, scope: !8232)
!8256 = !DILocation(line: 295, column: 7, scope: !8232)
!8257 = !DILocation(line: 296, column: 3, scope: !8232)
!8258 = !DILocation(line: 298, column: 8, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8232, file: !723, line: 298, column: 7)
!8260 = !DILocation(line: 298, column: 7, scope: !8232)
!8261 = !DILocation(line: 302, column: 18, scope: !8232)
!8262 = !DILocation(line: 302, column: 3, scope: !8232)
!8263 = !DILocation(line: 303, column: 10, scope: !8232)
!8264 = !DILocation(line: 303, column: 7, scope: !8232)
!8265 = !DILocation(line: 304, column: 7, scope: !8232)
!8266 = !DILocation(line: 305, column: 3, scope: !8232)
!8267 = !DILocation(line: 307, column: 8, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8232, file: !723, line: 307, column: 7)
!8269 = !DILocation(line: 307, column: 7, scope: !8232)
!8270 = !DILocation(line: 311, column: 3, scope: !8232)
!8271 = !DILocation(line: 312, column: 18, scope: !8232)
!8272 = !DILocation(line: 312, column: 13, scope: !8232)
!8273 = !DILocation(line: 312, column: 24, scope: !8232)
!8274 = !DILocation(line: 312, column: 3, scope: !8232)
!8275 = !DILocation(line: 313, column: 3, scope: !8232)
!8276 = !DILocation(line: 318, column: 2, scope: !8175)
!8277 = !DILocation(line: 319, column: 1, scope: !8175)
!8278 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !908, file: !908, line: 152, type: !8279, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8282)
!8279 = !DISubroutineType(types: !8280)
!8280 = !{!583, !8281, !103}
!8281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 32)
!8282 = !{!8283, !8284, !8285, !8286}
!8283 = !DILocalVariable(name: "target", arg: 1, scope: !8278, file: !908, line: 152, type: !8281)
!8284 = !DILocalVariable(name: "bit", arg: 2, scope: !8278, file: !908, line: 152, type: !103)
!8285 = !DILocalVariable(name: "mask", scope: !8278, file: !908, line: 154, type: !8169)
!8286 = !DILocalVariable(name: "old", scope: !8278, file: !908, line: 155, type: !8169)
!8287 = !DILocation(line: 0, scope: !8278)
!8288 = !DILocation(line: 154, column: 22, scope: !8278)
!8289 = !DILocation(line: 157, column: 45, scope: !8278)
!8290 = !DILocation(line: 157, column: 8, scope: !8278)
!8291 = !DILocation(line: 159, column: 14, scope: !8278)
!8292 = !DILocation(line: 159, column: 22, scope: !8278)
!8293 = !DILocation(line: 159, column: 2, scope: !8278)
!8294 = distinct !DISubprogram(name: "atomic_set_bit", scope: !908, file: !908, line: 217, type: !8295, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8297)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{null, !8281, !103}
!8297 = !{!8298, !8299, !8300}
!8298 = !DILocalVariable(name: "target", arg: 1, scope: !8294, file: !908, line: 217, type: !8281)
!8299 = !DILocalVariable(name: "bit", arg: 2, scope: !8294, file: !908, line: 217, type: !103)
!8300 = !DILocalVariable(name: "mask", scope: !8294, file: !908, line: 219, type: !8169)
!8301 = !DILocation(line: 0, scope: !8294)
!8302 = !DILocation(line: 219, column: 22, scope: !8294)
!8303 = !DILocation(line: 221, column: 8, scope: !8294)
!8304 = !DILocation(line: 222, column: 1, scope: !8294)
!8305 = distinct !DISubprogram(name: "isprint", scope: !4760, file: !4760, line: 37, type: !118, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8306)
!8306 = !{!8307}
!8307 = !DILocalVariable(name: "c", arg: 1, scope: !8305, file: !4760, line: 37, type: !103)
!8308 = !DILocation(line: 0, scope: !8305)
!8309 = !DILocation(line: 39, column: 38, scope: !8305)
!8310 = !DILocation(line: 39, column: 2, scope: !8305)
!8311 = distinct !DISubprogram(name: "del_char", scope: !723, file: !723, line: 191, type: !8312, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8314)
!8312 = !DISubroutineType(types: !8313)
!8313 = !{null, !869, !421}
!8314 = !{!8315, !8316}
!8315 = !DILocalVariable(name: "pos", arg: 1, scope: !8311, file: !723, line: 191, type: !869)
!8316 = !DILocalVariable(name: "end", arg: 2, scope: !8311, file: !723, line: 191, type: !421)
!8317 = !DILocation(line: 0, scope: !8311)
!8318 = !DILocation(line: 193, column: 2, scope: !8311)
!8319 = !DILocation(line: 195, column: 10, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8311, file: !723, line: 195, column: 6)
!8321 = !DILocation(line: 195, column: 6, scope: !8311)
!8322 = !DILocation(line: 196, column: 3, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8320, file: !723, line: 195, column: 17)
!8324 = !DILocation(line: 197, column: 3, scope: !8323)
!8325 = !DILocation(line: 198, column: 3, scope: !8323)
!8326 = !DILocation(line: 201, column: 2, scope: !8311)
!8327 = !DILocation(line: 203, column: 2, scope: !8311)
!8328 = !DILocation(line: 203, column: 12, scope: !8311)
!8329 = !DILocation(line: 204, column: 16, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8311, file: !723, line: 203, column: 20)
!8331 = !DILocation(line: 204, column: 10, scope: !8330)
!8332 = !DILocation(line: 204, column: 8, scope: !8330)
!8333 = !DILocation(line: 205, column: 3, scope: !8330)
!8334 = !DILocation(line: 203, column: 15, scope: !8311)
!8335 = distinct !{!8335, !8327, !8336}
!8336 = !DILocation(line: 206, column: 2, scope: !8311)
!8337 = !DILocation(line: 208, column: 2, scope: !8311)
!8338 = !DILocation(line: 211, column: 2, scope: !8311)
!8339 = !DILocation(line: 212, column: 1, scope: !8311)
!8340 = !DISubprogram(name: "k_queue_append", scope: !670, file: !670, line: 1775, type: !8341, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !842)
!8341 = !DISubroutineType(types: !8342)
!8342 = !{null, !8146, !102}
!8343 = distinct !DISubprogram(name: "insert_char", scope: !723, file: !723, line: 163, type: !8344, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8346)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{null, !869, !108, !421}
!8346 = !{!8347, !8348, !8349, !8350}
!8347 = !DILocalVariable(name: "pos", arg: 1, scope: !8343, file: !723, line: 163, type: !869)
!8348 = !DILocalVariable(name: "c", arg: 2, scope: !8343, file: !723, line: 163, type: !108)
!8349 = !DILocalVariable(name: "end", arg: 3, scope: !8343, file: !723, line: 163, type: !421)
!8350 = !DILocalVariable(name: "tmp", scope: !8343, file: !723, line: 165, type: !108)
!8351 = !DILocation(line: 0, scope: !8343)
!8352 = !DILocation(line: 168, column: 2, scope: !8343)
!8353 = !DILocation(line: 170, column: 10, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8343, file: !723, line: 170, column: 6)
!8355 = !DILocation(line: 170, column: 6, scope: !8343)
!8356 = !DILocation(line: 171, column: 8, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8354, file: !723, line: 170, column: 17)
!8358 = !DILocation(line: 172, column: 3, scope: !8357)
!8359 = !DILocation(line: 175, column: 8, scope: !8343)
!8360 = !DILocation(line: 176, column: 11, scope: !8343)
!8361 = !DILocation(line: 178, column: 2, scope: !8343)
!8362 = !DILocation(line: 180, column: 2, scope: !8343)
!8363 = !DILocation(line: 180, column: 12, scope: !8343)
!8364 = !DILocation(line: 181, column: 3, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8343, file: !723, line: 180, column: 20)
!8366 = !DILocation(line: 182, column: 7, scope: !8365)
!8367 = !DILocation(line: 183, column: 12, scope: !8365)
!8368 = !DILocation(line: 180, column: 15, scope: !8343)
!8369 = distinct !{!8369, !8362, !8370}
!8370 = !DILocation(line: 185, column: 2, scope: !8343)
!8371 = !DILocation(line: 188, column: 2, scope: !8343)
!8372 = !DILocation(line: 189, column: 1, scope: !8343)
!8373 = distinct !DISubprogram(name: "cursor_save", scope: !723, file: !723, line: 153, type: !3019, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !842)
!8374 = !DILocation(line: 155, column: 2, scope: !8373)
!8375 = !DILocation(line: 156, column: 1, scope: !8373)
!8376 = distinct !DISubprogram(name: "cursor_restore", scope: !723, file: !723, line: 158, type: !3019, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !842)
!8377 = !DILocation(line: 160, column: 2, scope: !8376)
!8378 = !DILocation(line: 161, column: 1, scope: !8376)
!8379 = distinct !DISubprogram(name: "atomic_or", scope: !8380, file: !8380, line: 279, type: !8381, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8383)
!8380 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8381 = !DISubroutineType(types: !8382)
!8382 = !{!8169, !8281, !8169}
!8383 = !{!8384, !8385}
!8384 = !DILocalVariable(name: "target", arg: 1, scope: !8379, file: !8380, line: 279, type: !8281)
!8385 = !DILocalVariable(name: "value", arg: 2, scope: !8379, file: !8380, line: 279, type: !8169)
!8386 = !DILocation(line: 0, scope: !8379)
!8387 = !DILocation(line: 281, column: 9, scope: !8379)
!8388 = !DILocation(line: 281, column: 2, scope: !8379)
!8389 = distinct !DISubprogram(name: "atomic_and", scope: !8380, file: !8380, line: 319, type: !8381, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8390)
!8390 = !{!8391, !8392}
!8391 = !DILocalVariable(name: "target", arg: 1, scope: !8389, file: !8380, line: 319, type: !8281)
!8392 = !DILocalVariable(name: "value", arg: 2, scope: !8389, file: !8380, line: 319, type: !8169)
!8393 = !DILocation(line: 0, scope: !8389)
!8394 = !DILocation(line: 321, column: 9, scope: !8389)
!8395 = !DILocation(line: 321, column: 2, scope: !8389)
!8396 = distinct !DISubprogram(name: "isdigit", scope: !4760, file: !4760, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8397)
!8397 = !{!8398}
!8398 = !DILocalVariable(name: "a", arg: 1, scope: !8396, file: !4760, line: 43, type: !103)
!8399 = !DILocation(line: 0, scope: !8396)
!8400 = !DILocation(line: 45, column: 29, scope: !8396)
!8401 = !DILocation(line: 45, column: 45, scope: !8396)
!8402 = !DILocation(line: 45, column: 2, scope: !8396)
!8403 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !908, file: !908, line: 176, type: !8279, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8404)
!8404 = !{!8405, !8406, !8407, !8408}
!8405 = !DILocalVariable(name: "target", arg: 1, scope: !8403, file: !908, line: 176, type: !8281)
!8406 = !DILocalVariable(name: "bit", arg: 2, scope: !8403, file: !908, line: 176, type: !103)
!8407 = !DILocalVariable(name: "mask", scope: !8403, file: !908, line: 178, type: !8169)
!8408 = !DILocalVariable(name: "old", scope: !8403, file: !908, line: 179, type: !8169)
!8409 = !DILocation(line: 0, scope: !8403)
!8410 = !DILocation(line: 181, column: 8, scope: !8403)
!8411 = !DILocation(line: 183, column: 14, scope: !8403)
!8412 = !DILocation(line: 183, column: 22, scope: !8403)
!8413 = !DILocation(line: 183, column: 2, scope: !8403)
!8414 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !908, file: !908, line: 198, type: !8295, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8415)
!8415 = !{!8416, !8417, !8418}
!8416 = !DILocalVariable(name: "target", arg: 1, scope: !8414, file: !908, line: 198, type: !8281)
!8417 = !DILocalVariable(name: "bit", arg: 2, scope: !8414, file: !908, line: 198, type: !103)
!8418 = !DILocalVariable(name: "mask", scope: !8414, file: !908, line: 200, type: !8169)
!8419 = !DILocation(line: 0, scope: !8414)
!8420 = !DILocation(line: 200, column: 22, scope: !8414)
!8421 = !DILocation(line: 202, column: 45, scope: !8414)
!8422 = !DILocation(line: 202, column: 8, scope: !8414)
!8423 = !DILocation(line: 203, column: 1, scope: !8414)
!8424 = distinct !DISubprogram(name: "cursor_backward", scope: !723, file: !723, line: 148, type: !5689, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8425)
!8425 = !{!8426}
!8426 = !DILocalVariable(name: "count", arg: 1, scope: !8424, file: !723, line: 148, type: !32)
!8427 = !DILocation(line: 0, scope: !8424)
!8428 = !DILocation(line: 150, column: 2, scope: !8424)
!8429 = !DILocation(line: 151, column: 1, scope: !8424)
!8430 = distinct !DISubprogram(name: "cursor_forward", scope: !723, file: !723, line: 143, type: !5689, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8431)
!8431 = !{!8432}
!8432 = !DILocalVariable(name: "count", arg: 1, scope: !8430, file: !723, line: 143, type: !32)
!8433 = !DILocation(line: 0, scope: !8430)
!8434 = !DILocation(line: 145, column: 2, scope: !8430)
!8435 = !DILocation(line: 146, column: 1, scope: !8430)
!8436 = distinct !DISubprogram(name: "atomic_get", scope: !8380, file: !8380, line: 159, type: !8437, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8439)
!8437 = !DISubroutineType(types: !8438)
!8438 = !{!8169, !8163}
!8439 = !{!8440}
!8440 = !DILocalVariable(name: "target", arg: 1, scope: !8436, file: !8380, line: 159, type: !8163)
!8441 = !DILocation(line: 0, scope: !8436)
!8442 = !DILocation(line: 161, column: 9, scope: !8436)
!8443 = !DILocation(line: 161, column: 2, scope: !8436)
!8444 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3443, file: !3443, line: 646, type: !8144, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !842)
!8445 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !562, file: !562, line: 1093, type: !760, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8446)
!8446 = !{!8447, !8448}
!8447 = !DILocalVariable(name: "dev", arg: 1, scope: !8445, file: !562, line: 1093, type: !739)
!8448 = !DILocalVariable(name: "api", scope: !8445, file: !562, line: 1096, type: !731)
!8449 = !DILocation(line: 0, scope: !8445)
!8450 = !DILocation(line: 1097, column: 40, scope: !8445)
!8451 = !DILocation(line: 1099, column: 11, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8445, file: !562, line: 1099, column: 6)
!8453 = !DILocation(line: 1099, column: 26, scope: !8452)
!8454 = !DILocation(line: 1099, column: 6, scope: !8445)
!8455 = !DILocation(line: 1102, column: 9, scope: !8445)
!8456 = !DILocation(line: 1102, column: 2, scope: !8445)
!8457 = !DILocation(line: 1107, column: 1, scope: !8445)
!8458 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !562, file: !562, line: 1136, type: !760, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8459)
!8459 = !{!8460, !8461}
!8460 = !DILocalVariable(name: "dev", arg: 1, scope: !8458, file: !562, line: 1136, type: !739)
!8461 = !DILocalVariable(name: "api", scope: !8458, file: !562, line: 1139, type: !731)
!8462 = !DILocation(line: 0, scope: !8458)
!8463 = !DILocation(line: 1140, column: 40, scope: !8458)
!8464 = !DILocation(line: 1142, column: 11, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8458, file: !562, line: 1142, column: 6)
!8466 = !DILocation(line: 1142, column: 22, scope: !8465)
!8467 = !DILocation(line: 1142, column: 6, scope: !8458)
!8468 = !DILocation(line: 1145, column: 9, scope: !8458)
!8469 = !DILocation(line: 1145, column: 2, scope: !8458)
!8470 = !DILocation(line: 1150, column: 1, scope: !8458)
!8471 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !562, file: !562, line: 878, type: !790, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8472)
!8472 = !{!8473, !8474}
!8473 = !DILocalVariable(name: "dev", arg: 1, scope: !8471, file: !562, line: 878, type: !739)
!8474 = !DILocalVariable(name: "api", scope: !8471, file: !562, line: 881, type: !731)
!8475 = !DILocation(line: 0, scope: !8471)
!8476 = !DILocation(line: 882, column: 40, scope: !8471)
!8477 = !DILocation(line: 884, column: 11, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8471, file: !562, line: 884, column: 6)
!8479 = !DILocation(line: 884, column: 26, scope: !8478)
!8480 = !DILocation(line: 884, column: 6, scope: !8471)
!8481 = !DILocation(line: 885, column: 3, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8478, file: !562, line: 884, column: 35)
!8483 = !DILocation(line: 886, column: 2, scope: !8482)
!8484 = !DILocation(line: 890, column: 1, scope: !8471)
!8485 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !562, file: !562, line: 955, type: !790, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !8486)
!8486 = !{!8487, !8488}
!8487 = !DILocalVariable(name: "dev", arg: 1, scope: !8485, file: !562, line: 955, type: !739)
!8488 = !DILocalVariable(name: "api", scope: !8485, file: !562, line: 958, type: !731)
!8489 = !DILocation(line: 0, scope: !8485)
!8490 = !DILocation(line: 959, column: 40, scope: !8485)
!8491 = !DILocation(line: 961, column: 11, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8485, file: !562, line: 961, column: 6)
!8493 = !DILocation(line: 961, column: 26, scope: !8492)
!8494 = !DILocation(line: 961, column: 6, scope: !8485)
!8495 = !DILocation(line: 962, column: 3, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8492, file: !562, line: 961, column: 35)
!8497 = !DILocation(line: 963, column: 2, scope: !8496)
!8498 = !DILocation(line: 967, column: 1, scope: !8485)
!8499 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1027, file: !1027, line: 40, type: !949, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8500)
!8500 = !{!8501, !8502, !8503, !8504, !8506, !8507, !8512, !8513}
!8501 = !DILocalVariable(name: "port", arg: 1, scope: !8499, file: !1027, line: 40, type: !951)
!8502 = !DILocalVariable(name: "pin", arg: 2, scope: !8499, file: !1027, line: 40, type: !966)
!8503 = !DILocalVariable(name: "flags", arg: 3, scope: !8499, file: !1027, line: 41, type: !967)
!8504 = !DILocalVariable(name: "config", scope: !8499, file: !1027, line: 43, type: !8505)
!8505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!8506 = !DILocalVariable(name: "base", scope: !8499, file: !1027, line: 44, type: !1064)
!8507 = !DILocalVariable(name: "pin_cfg", scope: !8499, file: !1027, line: 52, type: !8508)
!8508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1080, line: 59, size: 160, elements: !8509)
!8509 = !{!8510, !8511}
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8508, file: !1080, line: 60, baseType: !1079, size: 128)
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8508, file: !1080, line: 61, baseType: !415, size: 32, offset: 128)
!8512 = !DILocalVariable(name: "gpio_cfg_reg", scope: !8499, file: !1027, line: 54, type: !539)
!8513 = !DILocalVariable(name: "reg", scope: !8499, file: !1027, line: 56, type: !415)
!8514 = !DILocation(line: 0, scope: !8499)
!8515 = !DILocation(line: 43, column: 47, scope: !8499)
!8516 = !DILocation(line: 44, column: 28, scope: !8499)
!8517 = !DILocation(line: 46, column: 35, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8499, file: !1027, line: 46, column: 6)
!8519 = !DILocation(line: 52, column: 2, scope: !8499)
!8520 = !DILocation(line: 52, column: 25, scope: !8499)
!8521 = !DILocation(line: 55, column: 32, scope: !8499)
!8522 = !DILocation(line: 55, column: 24, scope: !8499)
!8523 = !DILocation(line: 55, column: 47, scope: !8499)
!8524 = !DILocation(line: 55, column: 3, scope: !8499)
!8525 = !DILocation(line: 56, column: 17, scope: !8499)
!8526 = !DILocation(line: 66, column: 13, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8499, file: !1027, line: 66, column: 6)
!8528 = !DILocation(line: 66, column: 34, scope: !8527)
!8529 = !DILocation(line: 66, column: 6, scope: !8499)
!8530 = !DILocation(line: 70, column: 36, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8499, file: !1027, line: 70, column: 6)
!8532 = !DILocation(line: 70, column: 14, scope: !8531)
!8533 = !DILocation(line: 70, column: 30, scope: !8531)
!8534 = !DILocation(line: 72, column: 7, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8531, file: !1027, line: 70, column: 72)
!8536 = !DILocation(line: 73, column: 8, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !1027, line: 72, column: 38)
!8538 = distinct !DILexicalBlock(scope: !8535, file: !1027, line: 72, column: 7)
!8539 = !DILocation(line: 74, column: 3, scope: !8537)
!8540 = !DILocation(line: 75, column: 8, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8538, file: !1027, line: 74, column: 10)
!8542 = !DILocation(line: 79, column: 7, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8531, file: !1027, line: 77, column: 9)
!8544 = !DILocation(line: 0, scope: !8531)
!8545 = !DILocation(line: 84, column: 27, scope: !8499)
!8546 = !DILocation(line: 84, column: 26, scope: !8499)
!8547 = !DILocation(line: 84, column: 2, scope: !8499)
!8548 = !DILocation(line: 86, column: 10, scope: !8499)
!8549 = !DILocation(line: 86, column: 25, scope: !8499)
!8550 = !DILocation(line: 87, column: 2, scope: !8499)
!8551 = !DILocation(line: 98, column: 2, scope: !8499)
!8552 = !DILocation(line: 99, column: 2, scope: !8499)
!8553 = !DILocation(line: 101, column: 6, scope: !8499)
!8554 = !DILocation(line: 103, column: 14, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !1027, line: 103, column: 7)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !1027, line: 101, column: 35)
!8557 = distinct !DILexicalBlock(scope: !8499, file: !1027, line: 101, column: 6)
!8558 = !DILocation(line: 103, column: 38, scope: !8555)
!8559 = !DILocation(line: 103, column: 7, scope: !8556)
!8560 = !DILocation(line: 105, column: 21, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8555, file: !1027, line: 105, column: 14)
!8562 = !DILocation(line: 105, column: 46, scope: !8561)
!8563 = !DILocation(line: 105, column: 14, scope: !8555)
!8564 = !DILocation(line: 0, scope: !8555)
!8565 = !DILocation(line: 110, column: 3, scope: !8556)
!8566 = !DILocation(line: 111, column: 2, scope: !8556)
!8567 = !DILocation(line: 113, column: 3, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8557, file: !1027, line: 111, column: 9)
!8569 = !DILocation(line: 117, column: 1, scope: !8499)
!8570 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1027, file: !1027, line: 119, type: !8571, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8573)
!8571 = !DISubroutineType(types: !8572)
!8572 = !{!103, !951, !1351}
!8573 = !{!8574, !8575, !8576, !8577}
!8574 = !DILocalVariable(name: "port", arg: 1, scope: !8570, file: !1027, line: 119, type: !951)
!8575 = !DILocalVariable(name: "value", arg: 2, scope: !8570, file: !1027, line: 119, type: !1351)
!8576 = !DILocalVariable(name: "config", scope: !8570, file: !1027, line: 121, type: !8505)
!8577 = !DILocalVariable(name: "base", scope: !8570, file: !1027, line: 122, type: !1064)
!8578 = !DILocation(line: 0, scope: !8570)
!8579 = !DILocation(line: 121, column: 47, scope: !8570)
!8580 = !DILocation(line: 122, column: 28, scope: !8570)
!8581 = !DILocation(line: 124, column: 11, scope: !8570)
!8582 = !DILocation(line: 124, column: 9, scope: !8570)
!8583 = !DILocation(line: 126, column: 2, scope: !8570)
!8584 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1027, file: !1027, line: 129, type: !976, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8585)
!8585 = !{!8586, !8587, !8588, !8589, !8590}
!8586 = !DILocalVariable(name: "port", arg: 1, scope: !8584, file: !1027, line: 129, type: !951)
!8587 = !DILocalVariable(name: "mask", arg: 2, scope: !8584, file: !1027, line: 130, type: !978)
!8588 = !DILocalVariable(name: "value", arg: 3, scope: !8584, file: !1027, line: 131, type: !973)
!8589 = !DILocalVariable(name: "config", scope: !8584, file: !1027, line: 133, type: !8505)
!8590 = !DILocalVariable(name: "base", scope: !8584, file: !1027, line: 134, type: !1064)
!8591 = !DILocation(line: 0, scope: !8584)
!8592 = !DILocation(line: 133, column: 47, scope: !8584)
!8593 = !DILocation(line: 134, column: 28, scope: !8584)
!8594 = !DILocation(line: 137, column: 5, scope: !8584)
!8595 = !DILocation(line: 137, column: 32, scope: !8584)
!8596 = !DILocation(line: 137, column: 30, scope: !8584)
!8597 = !DILocation(line: 137, column: 48, scope: !8584)
!8598 = !DILocation(line: 137, column: 39, scope: !8584)
!8599 = !DILocation(line: 136, column: 2, scope: !8584)
!8600 = !DILocation(line: 139, column: 2, scope: !8584)
!8601 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1027, file: !1027, line: 142, type: !981, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8602)
!8602 = !{!8603, !8604, !8605, !8606}
!8603 = !DILocalVariable(name: "port", arg: 1, scope: !8601, file: !1027, line: 142, type: !951)
!8604 = !DILocalVariable(name: "pins", arg: 2, scope: !8601, file: !1027, line: 143, type: !978)
!8605 = !DILocalVariable(name: "config", scope: !8601, file: !1027, line: 145, type: !8505)
!8606 = !DILocalVariable(name: "base", scope: !8601, file: !1027, line: 146, type: !1064)
!8607 = !DILocation(line: 0, scope: !8601)
!8608 = !DILocation(line: 145, column: 47, scope: !8601)
!8609 = !DILocation(line: 146, column: 28, scope: !8601)
!8610 = !DILocation(line: 148, column: 29, scope: !8601)
!8611 = !DILocation(line: 148, column: 54, scope: !8601)
!8612 = !DILocation(line: 148, column: 2, scope: !8601)
!8613 = !DILocation(line: 150, column: 2, scope: !8601)
!8614 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1027, file: !1027, line: 153, type: !981, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8615)
!8615 = !{!8616, !8617, !8618, !8619}
!8616 = !DILocalVariable(name: "port", arg: 1, scope: !8614, file: !1027, line: 153, type: !951)
!8617 = !DILocalVariable(name: "pins", arg: 2, scope: !8614, file: !1027, line: 154, type: !978)
!8618 = !DILocalVariable(name: "config", scope: !8614, file: !1027, line: 156, type: !8505)
!8619 = !DILocalVariable(name: "base", scope: !8614, file: !1027, line: 157, type: !1064)
!8620 = !DILocation(line: 0, scope: !8614)
!8621 = !DILocation(line: 156, column: 47, scope: !8614)
!8622 = !DILocation(line: 157, column: 28, scope: !8614)
!8623 = !DILocation(line: 159, column: 29, scope: !8614)
!8624 = !DILocation(line: 159, column: 56, scope: !8614)
!8625 = !DILocation(line: 159, column: 54, scope: !8614)
!8626 = !DILocation(line: 159, column: 2, scope: !8614)
!8627 = !DILocation(line: 161, column: 2, scope: !8614)
!8628 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1027, file: !1027, line: 164, type: !981, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8629)
!8629 = !{!8630, !8631, !8632, !8633}
!8630 = !DILocalVariable(name: "port", arg: 1, scope: !8628, file: !1027, line: 164, type: !951)
!8631 = !DILocalVariable(name: "pins", arg: 2, scope: !8628, file: !1027, line: 165, type: !978)
!8632 = !DILocalVariable(name: "config", scope: !8628, file: !1027, line: 167, type: !8505)
!8633 = !DILocalVariable(name: "base", scope: !8628, file: !1027, line: 168, type: !1064)
!8634 = !DILocation(line: 0, scope: !8628)
!8635 = !DILocation(line: 167, column: 47, scope: !8628)
!8636 = !DILocation(line: 168, column: 28, scope: !8628)
!8637 = !DILocation(line: 170, column: 29, scope: !8628)
!8638 = !DILocation(line: 170, column: 54, scope: !8628)
!8639 = !DILocation(line: 170, column: 2, scope: !8628)
!8640 = !DILocation(line: 172, column: 2, scope: !8628)
!8641 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1027, file: !1027, line: 175, type: !987, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8642)
!8642 = !{!8643, !8644, !8645, !8646, !8647, !8648, !8649, !8650, !8651, !8652}
!8643 = !DILocalVariable(name: "port", arg: 1, scope: !8641, file: !1027, line: 175, type: !951)
!8644 = !DILocalVariable(name: "pin", arg: 2, scope: !8641, file: !1027, line: 176, type: !966)
!8645 = !DILocalVariable(name: "mode", arg: 3, scope: !8641, file: !1027, line: 177, type: !926)
!8646 = !DILocalVariable(name: "trig", arg: 4, scope: !8641, file: !1027, line: 178, type: !932)
!8647 = !DILocalVariable(name: "config", scope: !8641, file: !1027, line: 180, type: !8505)
!8648 = !DILocalVariable(name: "base", scope: !8641, file: !1027, line: 181, type: !1064)
!8649 = !DILocalVariable(name: "icr_reg", scope: !8641, file: !1027, line: 182, type: !539)
!8650 = !DILocalVariable(name: "key", scope: !8641, file: !1027, line: 183, type: !32)
!8651 = !DILocalVariable(name: "icr_val", scope: !8641, file: !1027, line: 184, type: !415)
!8652 = !DILocalVariable(name: "shift", scope: !8641, file: !1027, line: 185, type: !421)
!8653 = !DILocation(line: 0, scope: !8641)
!8654 = !DILocation(line: 180, column: 47, scope: !8641)
!8655 = !DILocation(line: 181, column: 28, scope: !8641)
!8656 = !DILocation(line: 187, column: 14, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8641, file: !1027, line: 187, column: 6)
!8658 = !DILocation(line: 187, column: 21, scope: !8657)
!8659 = !DILocation(line: 187, column: 19, scope: !8657)
!8660 = !DILocation(line: 187, column: 31, scope: !8657)
!8661 = !DILocation(line: 188, column: 6, scope: !8657)
!8662 = !DILocation(line: 193, column: 12, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8641, file: !1027, line: 193, column: 6)
!8664 = !DILocation(line: 193, column: 35, scope: !8663)
!8665 = !DILocation(line: 195, column: 42, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8663, file: !1027, line: 195, column: 13)
!8667 = !DILocation(line: 198, column: 19, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8666, file: !1027, line: 198, column: 13)
!8669 = !DILocation(line: 198, column: 43, scope: !8668)
!8670 = !DILocation(line: 0, scope: !8663)
!8671 = !DILocation(line: 205, column: 10, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8641, file: !1027, line: 205, column: 6)
!8673 = !DILocation(line: 205, column: 6, scope: !8641)
!8674 = !DILocation(line: 206, column: 14, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8672, file: !1027, line: 205, column: 17)
!8676 = !DILocation(line: 207, column: 21, scope: !8675)
!8677 = !DILocation(line: 208, column: 2, scope: !8675)
!8678 = !DILocation(line: 208, column: 17, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8672, file: !1027, line: 208, column: 13)
!8680 = !DILocation(line: 208, column: 13, scope: !8672)
!8681 = !DILocation(line: 209, column: 14, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8679, file: !1027, line: 208, column: 24)
!8683 = !DILocation(line: 210, column: 21, scope: !8682)
!8684 = !DILocation(line: 0, scope: !8672)
!8685 = !DILocation(line: 55, column: 2, scope: !8686, inlinedAt: !8690)
!8686 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5666, file: !5666, line: 42, type: !5667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8687)
!8687 = !{!8688, !8689}
!8688 = !DILocalVariable(name: "key", scope: !8686, file: !5666, line: 44, type: !32)
!8689 = !DILocalVariable(name: "tmp", scope: !8686, file: !5666, line: 53, type: !32)
!8690 = distinct !DILocation(line: 215, column: 8, scope: !8641)
!8691 = !{i64 3015275}
!8692 = !DILocation(line: 0, scope: !8686, inlinedAt: !8690)
!8693 = !DILocation(line: 217, column: 14, scope: !8641)
!8694 = !DILocation(line: 217, column: 33, scope: !8641)
!8695 = !DILocation(line: 217, column: 30, scope: !8641)
!8696 = !DILocation(line: 217, column: 25, scope: !8641)
!8697 = !DILocation(line: 217, column: 23, scope: !8641)
!8698 = !DILocation(line: 217, column: 52, scope: !8641)
!8699 = !DILocation(line: 217, column: 41, scope: !8641)
!8700 = !DILocation(line: 217, column: 11, scope: !8641)
!8701 = !DILocation(line: 219, column: 2, scope: !8641)
!8702 = !DILocation(line: 220, column: 2, scope: !8641)
!8703 = !DILocation(line: 221, column: 2, scope: !8641)
!8704 = !DILocalVariable(name: "key", arg: 1, scope: !8705, file: !5666, line: 84, type: !32)
!8705 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8706)
!8706 = !{!8704}
!8707 = !DILocation(line: 0, scope: !8705, inlinedAt: !8708)
!8708 = distinct !DILocation(line: 223, column: 2, scope: !8641)
!8709 = !DILocation(line: 95, column: 2, scope: !8705, inlinedAt: !8708)
!8710 = !{i64 3016092}
!8711 = !DILocation(line: 225, column: 2, scope: !8641)
!8712 = !DILocation(line: 226, column: 1, scope: !8641)
!8713 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1027, file: !1027, line: 228, type: !991, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8714)
!8714 = !{!8715, !8716, !8717, !8718}
!8715 = !DILocalVariable(name: "port", arg: 1, scope: !8713, file: !1027, line: 228, type: !951)
!8716 = !DILocalVariable(name: "cb", arg: 2, scope: !8713, file: !1027, line: 229, type: !993)
!8717 = !DILocalVariable(name: "set", arg: 3, scope: !8713, file: !1027, line: 229, type: !583)
!8718 = !DILocalVariable(name: "data", scope: !8713, file: !1027, line: 231, type: !8719)
!8719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!8720 = !DILocation(line: 0, scope: !8713)
!8721 = !DILocation(line: 231, column: 37, scope: !8713)
!8722 = !DILocation(line: 233, column: 37, scope: !8713)
!8723 = !DILocation(line: 233, column: 9, scope: !8713)
!8724 = !DILocation(line: 233, column: 2, scope: !8713)
!8725 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8726, file: !8726, line: 38, type: !8727, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8730)
!8726 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8727 = !DISubroutineType(types: !8728)
!8728 = !{!103, !8729, !993, !583}
!8729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!8730 = !{!8731, !8732, !8733}
!8731 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8725, file: !8726, line: 38, type: !8729)
!8732 = !DILocalVariable(name: "callback", arg: 2, scope: !8725, file: !8726, line: 39, type: !993)
!8733 = !DILocalVariable(name: "set", arg: 3, scope: !8725, file: !8726, line: 40, type: !583)
!8734 = !DILocation(line: 0, scope: !8725)
!8735 = !DILocation(line: 45, column: 7, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8725, file: !8726, line: 45, column: 6)
!8737 = !DILocation(line: 45, column: 6, scope: !8725)
!8738 = !DILocation(line: 46, column: 56, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8740, file: !8726, line: 46, column: 7)
!8740 = distinct !DILexicalBlock(scope: !8736, file: !8726, line: 45, column: 38)
!8741 = !DILocation(line: 46, column: 8, scope: !8739)
!8742 = !DILocation(line: 46, column: 7, scope: !8740)
!8743 = !DILocation(line: 51, column: 13, scope: !8736)
!8744 = !DILocation(line: 56, column: 43, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8746, file: !8726, line: 55, column: 11)
!8746 = distinct !DILexicalBlock(scope: !8725, file: !8726, line: 55, column: 6)
!8747 = !DILocation(line: 56, column: 3, scope: !8745)
!8748 = !DILocation(line: 57, column: 2, scope: !8745)
!8749 = !DILocation(line: 60, column: 1, scope: !8725)
!8750 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !998, file: !998, line: 261, type: !8751, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8753)
!8751 = !DISubroutineType(types: !8752)
!8752 = !{!583, !8729}
!8753 = !{!8754}
!8754 = !DILocalVariable(name: "list", arg: 1, scope: !8750, file: !998, line: 261, type: !8729)
!8755 = !DILocation(line: 0, scope: !8750)
!8756 = !DILocation(line: 261, column: 1, scope: !8750)
!8757 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !998, file: !998, line: 417, type: !8758, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8760)
!8758 = !DISubroutineType(types: !8759)
!8759 = !{!583, !8729, !1053}
!8760 = !{!8761, !8762, !8763, !8764}
!8761 = !DILocalVariable(name: "list", arg: 1, scope: !8757, file: !998, line: 417, type: !8729)
!8762 = !DILocalVariable(name: "node", arg: 2, scope: !8757, file: !998, line: 417, type: !1053)
!8763 = !DILocalVariable(name: "prev", scope: !8757, file: !998, line: 417, type: !1053)
!8764 = !DILocalVariable(name: "test", scope: !8757, file: !998, line: 417, type: !1053)
!8765 = !DILocation(line: 0, scope: !8757)
!8766 = !DILocation(line: 417, column: 1, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8757, file: !998, line: 417, column: 1)
!8768 = !DILocation(line: 417, column: 1, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8767, file: !998, line: 417, column: 1)
!8770 = !DILocation(line: 417, column: 1, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8772, file: !998, line: 417, column: 1)
!8772 = distinct !DILexicalBlock(scope: !8769, file: !998, line: 417, column: 1)
!8773 = !DILocation(line: 417, column: 1, scope: !8772)
!8774 = distinct !{!8774, !8766, !8766}
!8775 = !DILocation(line: 417, column: 1, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8771, file: !998, line: 417, column: 1)
!8777 = !DILocation(line: 417, column: 1, scope: !8757)
!8778 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !998, file: !998, line: 298, type: !8779, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8781)
!8779 = !DISubroutineType(types: !8780)
!8780 = !{null, !8729, !1053}
!8781 = !{!8782, !8783}
!8782 = !DILocalVariable(name: "list", arg: 1, scope: !8778, file: !998, line: 298, type: !8729)
!8783 = !DILocalVariable(name: "node", arg: 2, scope: !8778, file: !998, line: 298, type: !1053)
!8784 = !DILocation(line: 0, scope: !8778)
!8785 = !DILocation(line: 298, column: 1, scope: !8778)
!8786 = !DILocation(line: 298, column: 1, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8778, file: !998, line: 298, column: 1)
!8788 = !DILocation(line: 298, column: 1, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8787, file: !998, line: 298, column: 1)
!8790 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !998, file: !998, line: 231, type: !8791, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8793)
!8791 = !DISubroutineType(types: !8792)
!8792 = !{!1053, !8729}
!8793 = !{!8794}
!8794 = !DILocalVariable(name: "list", arg: 1, scope: !8790, file: !998, line: 231, type: !8729)
!8795 = !DILocation(line: 0, scope: !8790)
!8796 = !DILocation(line: 233, column: 15, scope: !8790)
!8797 = !DILocation(line: 233, column: 2, scope: !8790)
!8798 = distinct !DISubprogram(name: "z_snode_next_set", scope: !998, file: !998, line: 209, type: !8799, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8801)
!8799 = !DISubroutineType(types: !8800)
!8800 = !{null, !1053, !1053}
!8801 = !{!8802, !8803}
!8802 = !DILocalVariable(name: "parent", arg: 1, scope: !8798, file: !998, line: 209, type: !1053)
!8803 = !DILocalVariable(name: "child", arg: 2, scope: !8798, file: !998, line: 209, type: !1053)
!8804 = !DILocation(line: 0, scope: !8798)
!8805 = !DILocation(line: 211, column: 10, scope: !8798)
!8806 = !DILocation(line: 211, column: 15, scope: !8798)
!8807 = !DILocation(line: 212, column: 1, scope: !8798)
!8808 = distinct !DISubprogram(name: "z_slist_head_set", scope: !998, file: !998, line: 214, type: !8779, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8809)
!8809 = !{!8810, !8811}
!8810 = !DILocalVariable(name: "list", arg: 1, scope: !8808, file: !998, line: 214, type: !8729)
!8811 = !DILocalVariable(name: "node", arg: 2, scope: !8808, file: !998, line: 214, type: !1053)
!8812 = !DILocation(line: 0, scope: !8808)
!8813 = !DILocation(line: 216, column: 8, scope: !8808)
!8814 = !DILocation(line: 216, column: 13, scope: !8808)
!8815 = !DILocation(line: 217, column: 1, scope: !8808)
!8816 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !998, file: !998, line: 243, type: !8791, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8817)
!8817 = !{!8818}
!8818 = !DILocalVariable(name: "list", arg: 1, scope: !8816, file: !998, line: 243, type: !8729)
!8819 = !DILocation(line: 0, scope: !8816)
!8820 = !DILocation(line: 245, column: 15, scope: !8816)
!8821 = !DILocation(line: 245, column: 2, scope: !8816)
!8822 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !998, file: !998, line: 219, type: !8779, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8823)
!8823 = !{!8824, !8825}
!8824 = !DILocalVariable(name: "list", arg: 1, scope: !8822, file: !998, line: 219, type: !8729)
!8825 = !DILocalVariable(name: "node", arg: 2, scope: !8822, file: !998, line: 219, type: !1053)
!8826 = !DILocation(line: 0, scope: !8822)
!8827 = !DILocation(line: 221, column: 8, scope: !8822)
!8828 = !DILocation(line: 221, column: 13, scope: !8822)
!8829 = !DILocation(line: 222, column: 1, scope: !8822)
!8830 = distinct !DISubprogram(name: "sys_slist_remove", scope: !998, file: !998, line: 401, type: !8831, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8833)
!8831 = !DISubroutineType(types: !8832)
!8832 = !{null, !8729, !1053, !1053}
!8833 = !{!8834, !8835, !8836}
!8834 = !DILocalVariable(name: "list", arg: 1, scope: !8830, file: !998, line: 401, type: !8729)
!8835 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8830, file: !998, line: 401, type: !1053)
!8836 = !DILocalVariable(name: "node", arg: 3, scope: !8830, file: !998, line: 401, type: !1053)
!8837 = !DILocation(line: 0, scope: !8830)
!8838 = !DILocation(line: 401, column: 1, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8830, file: !998, line: 401, column: 1)
!8840 = !DILocation(line: 0, scope: !8839)
!8841 = !DILocation(line: 401, column: 1, scope: !8830)
!8842 = !DILocation(line: 401, column: 1, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8839, file: !998, line: 401, column: 1)
!8844 = !DILocation(line: 401, column: 1, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8843, file: !998, line: 401, column: 1)
!8846 = !DILocation(line: 401, column: 1, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8845, file: !998, line: 401, column: 1)
!8848 = !DILocation(line: 401, column: 1, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8839, file: !998, line: 401, column: 1)
!8850 = !DILocation(line: 401, column: 1, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8849, file: !998, line: 401, column: 1)
!8852 = !DILocation(line: 401, column: 1, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8851, file: !998, line: 401, column: 1)
!8854 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !998, file: !998, line: 285, type: !8855, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8857)
!8855 = !DISubroutineType(types: !8856)
!8856 = !{!1053, !1053}
!8857 = !{!8858}
!8858 = !DILocalVariable(name: "node", arg: 1, scope: !8854, file: !998, line: 285, type: !1053)
!8859 = !DILocation(line: 0, scope: !8854)
!8860 = !DILocation(line: 285, column: 1, scope: !8854)
!8861 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !998, file: !998, line: 274, type: !8855, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8862)
!8862 = !{!8863}
!8863 = !DILocalVariable(name: "node", arg: 1, scope: !8861, file: !998, line: 274, type: !1053)
!8864 = !DILocation(line: 0, scope: !8861)
!8865 = !DILocation(line: 274, column: 1, scope: !8861)
!8866 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !998, file: !998, line: 204, type: !8855, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8867)
!8867 = !{!8868}
!8868 = !DILocalVariable(name: "node", arg: 1, scope: !8866, file: !998, line: 204, type: !1053)
!8869 = !DILocation(line: 0, scope: !8866)
!8870 = !DILocation(line: 206, column: 15, scope: !8866)
!8871 = !DILocation(line: 206, column: 2, scope: !8866)
!8872 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !938, file: !938, line: 131, type: !8873, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8875)
!8873 = !DISubroutineType(types: !8874)
!8874 = !{!415, !1064}
!8875 = !{!8876}
!8876 = !DILocalVariable(name: "base", arg: 1, scope: !8872, file: !938, line: 131, type: !1064)
!8877 = !DILocation(line: 0, scope: !8872)
!8878 = !DILocation(line: 133, column: 12, scope: !8872)
!8879 = !DILocation(line: 133, column: 5, scope: !8872)
!8880 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !938, file: !938, line: 178, type: !8881, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8883)
!8881 = !DISubroutineType(types: !8882)
!8882 = !{null, !1064, !415}
!8883 = !{!8884, !8885}
!8884 = !DILocalVariable(name: "base", arg: 1, scope: !8880, file: !938, line: 178, type: !1064)
!8885 = !DILocalVariable(name: "portVal", arg: 2, scope: !8880, file: !938, line: 178, type: !415)
!8886 = !DILocation(line: 0, scope: !8880)
!8887 = !DILocation(line: 180, column: 5, scope: !8880)
!8888 = !DILocation(line: 180, column: 23, scope: !8880)
!8889 = !DILocation(line: 181, column: 1, scope: !8880)
!8890 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1027, file: !1027, line: 236, type: !8891, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8893)
!8891 = !DISubroutineType(types: !8892)
!8892 = !{null, !951}
!8893 = !{!8894, !8895, !8896, !8897}
!8894 = !DILocalVariable(name: "port", arg: 1, scope: !8890, file: !1027, line: 236, type: !951)
!8895 = !DILocalVariable(name: "config", scope: !8890, file: !1027, line: 238, type: !8505)
!8896 = !DILocalVariable(name: "data", scope: !8890, file: !1027, line: 239, type: !8719)
!8897 = !DILocalVariable(name: "int_status", scope: !8890, file: !1027, line: 240, type: !415)
!8898 = !DILocation(line: 0, scope: !8890)
!8899 = !DILocation(line: 238, column: 47, scope: !8890)
!8900 = !DILocation(line: 239, column: 37, scope: !8890)
!8901 = !DILocation(line: 242, column: 23, scope: !8890)
!8902 = !DILocation(line: 242, column: 29, scope: !8890)
!8903 = !DILocation(line: 244, column: 20, scope: !8890)
!8904 = !DILocation(line: 246, column: 29, scope: !8890)
!8905 = !DILocation(line: 246, column: 2, scope: !8890)
!8906 = !DILocation(line: 247, column: 1, scope: !8890)
!8907 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8726, file: !8726, line: 69, type: !8908, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !8910)
!8908 = !DISubroutineType(types: !8909)
!8909 = !{null, !8729, !951, !415}
!8910 = !{!8911, !8912, !8913, !8914, !8915}
!8911 = !DILocalVariable(name: "list", arg: 1, scope: !8907, file: !8726, line: 69, type: !8729)
!8912 = !DILocalVariable(name: "port", arg: 2, scope: !8907, file: !8726, line: 70, type: !951)
!8913 = !DILocalVariable(name: "pins", arg: 3, scope: !8907, file: !8726, line: 71, type: !415)
!8914 = !DILocalVariable(name: "cb", scope: !8907, file: !8726, line: 73, type: !993)
!8915 = !DILocalVariable(name: "tmp", scope: !8907, file: !8726, line: 73, type: !993)
!8916 = !DILocation(line: 0, scope: !8907)
!8917 = !DILocation(line: 75, column: 2, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8907, file: !8726, line: 75, column: 2)
!8919 = !DILocation(line: 0, scope: !8918)
!8920 = !DILocation(line: 76, column: 11, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !8726, line: 76, column: 7)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !8726, line: 75, column: 57)
!8923 = distinct !DILexicalBlock(scope: !8918, file: !8726, line: 75, column: 2)
!8924 = !DILocation(line: 76, column: 20, scope: !8921)
!8925 = !DILocation(line: 76, column: 7, scope: !8922)
!8926 = !DILocation(line: 78, column: 8, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8921, file: !8726, line: 76, column: 28)
!8928 = !DILocation(line: 78, column: 4, scope: !8927)
!8929 = !DILocation(line: 79, column: 3, scope: !8927)
!8930 = !DILocation(line: 75, column: 2, scope: !8923)
!8931 = !DILocation(line: 81, column: 1, scope: !8907)
!8932 = !DILocation(line: 0, scope: !1092)
!8933 = !DILocation(line: 318, column: 1, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !1092, file: !1027, line: 318, column: 1)
!8935 = !DILocation(line: 318, column: 1, scope: !1092)
!8936 = !DILocation(line: 318, column: 1, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !1092, file: !1027, line: 318, column: 1)
!8938 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1316, file: !1316, line: 114, type: !1214, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !8939)
!8939 = !{!8940, !8941, !8942, !8943}
!8940 = !DILocalVariable(name: "dev", arg: 1, scope: !8938, file: !1316, line: 114, type: !1216)
!8941 = !DILocalVariable(name: "c", arg: 2, scope: !8938, file: !1316, line: 114, type: !591)
!8942 = !DILocalVariable(name: "uart", scope: !8938, file: !1316, line: 116, type: !1287)
!8943 = !DILocalVariable(name: "ret", scope: !8938, file: !1316, line: 117, type: !103)
!8944 = !DILocation(line: 0, scope: !8938)
!8945 = !DILocation(line: 116, column: 20, scope: !8938)
!8946 = !DILocation(line: 119, column: 6, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8938, file: !1316, line: 119, column: 6)
!8948 = !DILocation(line: 119, column: 6, scope: !8938)
!8949 = !DILocation(line: 120, column: 8, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8947, file: !1316, line: 119, column: 55)
!8951 = !DILocation(line: 120, column: 6, scope: !8950)
!8952 = !DILocation(line: 122, column: 7, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8950, file: !1316, line: 122, column: 7)
!8954 = !DILocation(line: 122, column: 7, scope: !8950)
!8955 = !DILocation(line: 123, column: 4, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8953, file: !1316, line: 122, column: 54)
!8957 = !DILocation(line: 124, column: 3, scope: !8956)
!8958 = !DILocation(line: 128, column: 2, scope: !8938)
!8959 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1316, file: !1316, line: 105, type: !1233, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !8960)
!8960 = !{!8961, !8962, !8963}
!8961 = !DILocalVariable(name: "dev", arg: 1, scope: !8959, file: !1316, line: 105, type: !1216)
!8962 = !DILocalVariable(name: "c", arg: 2, scope: !8959, file: !1316, line: 105, type: !422)
!8963 = !DILocalVariable(name: "uart", scope: !8959, file: !1316, line: 107, type: !1287)
!8964 = !DILocation(line: 0, scope: !8959)
!8965 = !DILocation(line: 107, column: 20, scope: !8959)
!8966 = !DILocation(line: 109, column: 2, scope: !8959)
!8967 = !DILocation(line: 109, column: 10, scope: !8959)
!8968 = distinct !{!8968, !8966, !8969}
!8969 = !DILocation(line: 110, column: 2, scope: !8959)
!8970 = !DILocation(line: 111, column: 2, scope: !8959)
!8971 = !DILocation(line: 112, column: 1, scope: !8959)
!8972 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1316, file: !1316, line: 133, type: !1259, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !8973)
!8973 = !{!8974, !8975, !8976, !8977, !8978}
!8974 = !DILocalVariable(name: "dev", arg: 1, scope: !8972, file: !1316, line: 133, type: !1216)
!8975 = !DILocalVariable(name: "tx_data", arg: 2, scope: !8972, file: !1316, line: 134, type: !622)
!8976 = !DILocalVariable(name: "size", arg: 3, scope: !8972, file: !1316, line: 135, type: !103)
!8977 = !DILocalVariable(name: "uart", scope: !8972, file: !1316, line: 137, type: !1287)
!8978 = !DILocalVariable(name: "num_tx", scope: !8972, file: !1316, line: 138, type: !32)
!8979 = !DILocation(line: 0, scope: !8972)
!8980 = !DILocation(line: 137, column: 20, scope: !8972)
!8981 = !DILocation(line: 140, column: 26, scope: !8972)
!8982 = !DILocation(line: 140, column: 31, scope: !8972)
!8983 = !DILocation(line: 141, column: 6, scope: !8972)
!8984 = !DILocation(line: 140, column: 2, scope: !8972)
!8985 = !DILocation(line: 143, column: 22, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8972, file: !1316, line: 141, column: 51)
!8987 = !DILocation(line: 143, column: 3, scope: !8986)
!8988 = !DILocation(line: 144, column: 9, scope: !8986)
!8989 = distinct !{!8989, !8984, !8990}
!8990 = !DILocation(line: 145, column: 2, scope: !8972)
!8991 = !DILocation(line: 147, column: 2, scope: !8972)
!8992 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1316, file: !1316, line: 150, type: !1263, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !8993)
!8993 = !{!8994, !8995, !8996, !8997, !8998}
!8994 = !DILocalVariable(name: "dev", arg: 1, scope: !8992, file: !1316, line: 150, type: !1216)
!8995 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8992, file: !1316, line: 150, type: !628)
!8996 = !DILocalVariable(name: "size", arg: 3, scope: !8992, file: !1316, line: 151, type: !629)
!8997 = !DILocalVariable(name: "uart", scope: !8992, file: !1316, line: 153, type: !1287)
!8998 = !DILocalVariable(name: "num_rx", scope: !8992, file: !1316, line: 154, type: !32)
!8999 = !DILocation(line: 0, scope: !8992)
!9000 = !DILocation(line: 153, column: 20, scope: !8992)
!9001 = !DILocation(line: 156, column: 26, scope: !8992)
!9002 = !DILocation(line: 156, column: 31, scope: !8992)
!9003 = !DILocation(line: 157, column: 6, scope: !8992)
!9004 = !DILocation(line: 156, column: 2, scope: !8992)
!9005 = !DILocation(line: 159, column: 23, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8992, file: !1316, line: 157, column: 51)
!9007 = !DILocation(line: 159, column: 17, scope: !9006)
!9008 = !DILocation(line: 159, column: 3, scope: !9006)
!9009 = !DILocation(line: 159, column: 21, scope: !9006)
!9010 = distinct !{!9010, !9004, !9011}
!9011 = !DILocation(line: 160, column: 2, scope: !8992)
!9012 = !DILocation(line: 162, column: 6, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8992, file: !1316, line: 162, column: 6)
!9014 = !DILocation(line: 162, column: 6, scope: !8992)
!9015 = !DILocation(line: 163, column: 3, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9013, file: !1316, line: 162, column: 53)
!9017 = !DILocation(line: 164, column: 2, scope: !9016)
!9018 = !DILocation(line: 166, column: 2, scope: !8992)
!9019 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1316, file: !1316, line: 169, type: !1267, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9020)
!9020 = !{!9021, !9022}
!9021 = !DILocalVariable(name: "dev", arg: 1, scope: !9019, file: !1316, line: 169, type: !1216)
!9022 = !DILocalVariable(name: "uart", scope: !9019, file: !1316, line: 171, type: !1287)
!9023 = !DILocation(line: 0, scope: !9019)
!9024 = !DILocation(line: 171, column: 20, scope: !9019)
!9025 = !DILocation(line: 173, column: 2, scope: !9019)
!9026 = !DILocation(line: 174, column: 1, scope: !9019)
!9027 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1316, file: !1316, line: 176, type: !1267, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9028)
!9028 = !{!9029, !9030}
!9029 = !DILocalVariable(name: "dev", arg: 1, scope: !9027, file: !1316, line: 176, type: !1216)
!9030 = !DILocalVariable(name: "uart", scope: !9027, file: !1316, line: 178, type: !1287)
!9031 = !DILocation(line: 0, scope: !9027)
!9032 = !DILocation(line: 178, column: 20, scope: !9027)
!9033 = !DILocation(line: 180, column: 2, scope: !9027)
!9034 = !DILocation(line: 181, column: 1, scope: !9027)
!9035 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1316, file: !1316, line: 183, type: !1237, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9036)
!9036 = !{!9037, !9038}
!9037 = !DILocalVariable(name: "dev", arg: 1, scope: !9035, file: !1316, line: 183, type: !1216)
!9038 = !DILocalVariable(name: "uart", scope: !9035, file: !1316, line: 185, type: !1287)
!9039 = !DILocation(line: 0, scope: !9035)
!9040 = !DILocation(line: 185, column: 20, scope: !9035)
!9041 = !DILocation(line: 187, column: 9, scope: !9035)
!9042 = !DILocation(line: 187, column: 2, scope: !9035)
!9043 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1316, file: !1316, line: 190, type: !1267, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9044)
!9044 = !{!9045, !9046}
!9045 = !DILocalVariable(name: "dev", arg: 1, scope: !9043, file: !1316, line: 190, type: !1216)
!9046 = !DILocalVariable(name: "uart", scope: !9043, file: !1316, line: 192, type: !1287)
!9047 = !DILocation(line: 0, scope: !9043)
!9048 = !DILocation(line: 192, column: 20, scope: !9043)
!9049 = !DILocation(line: 194, column: 2, scope: !9043)
!9050 = !DILocation(line: 195, column: 1, scope: !9043)
!9051 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1316, file: !1316, line: 197, type: !1267, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9052)
!9052 = !{!9053, !9054}
!9053 = !DILocalVariable(name: "dev", arg: 1, scope: !9051, file: !1316, line: 197, type: !1216)
!9054 = !DILocalVariable(name: "uart", scope: !9051, file: !1316, line: 199, type: !1287)
!9055 = !DILocation(line: 0, scope: !9051)
!9056 = !DILocation(line: 199, column: 20, scope: !9051)
!9057 = !DILocation(line: 201, column: 2, scope: !9051)
!9058 = !DILocation(line: 202, column: 1, scope: !9051)
!9059 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1316, file: !1316, line: 204, type: !1237, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9060)
!9060 = !{!9061, !9062}
!9061 = !DILocalVariable(name: "dev", arg: 1, scope: !9059, file: !1316, line: 204, type: !1216)
!9062 = !DILocalVariable(name: "uart", scope: !9059, file: !1316, line: 206, type: !1287)
!9063 = !DILocation(line: 0, scope: !9059)
!9064 = !DILocation(line: 206, column: 20, scope: !9059)
!9065 = !DILocation(line: 208, column: 9, scope: !9059)
!9066 = !DILocation(line: 208, column: 2, scope: !9059)
!9067 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1316, file: !1316, line: 211, type: !1267, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9068)
!9068 = !{!9069, !9070}
!9069 = !DILocalVariable(name: "dev", arg: 1, scope: !9067, file: !1316, line: 211, type: !1216)
!9070 = !DILocalVariable(name: "uart", scope: !9067, file: !1316, line: 213, type: !1287)
!9071 = !DILocation(line: 0, scope: !9067)
!9072 = !DILocation(line: 213, column: 20, scope: !9067)
!9073 = !DILocation(line: 215, column: 2, scope: !9067)
!9074 = !DILocation(line: 216, column: 2, scope: !9067)
!9075 = !DILocation(line: 217, column: 1, scope: !9067)
!9076 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1316, file: !1316, line: 219, type: !1267, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9077)
!9077 = !{!9078, !9079}
!9078 = !DILocalVariable(name: "dev", arg: 1, scope: !9076, file: !1316, line: 219, type: !1216)
!9079 = !DILocalVariable(name: "uart", scope: !9076, file: !1316, line: 221, type: !1287)
!9080 = !DILocation(line: 0, scope: !9076)
!9081 = !DILocation(line: 221, column: 20, scope: !9076)
!9082 = !DILocation(line: 223, column: 2, scope: !9076)
!9083 = !DILocation(line: 224, column: 2, scope: !9076)
!9084 = !DILocation(line: 225, column: 1, scope: !9076)
!9085 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1316, file: !1316, line: 227, type: !1237, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9086)
!9086 = !{!9087, !9088}
!9087 = !DILocalVariable(name: "dev", arg: 1, scope: !9085, file: !1316, line: 227, type: !1216)
!9088 = !DILocalVariable(name: "uart", scope: !9085, file: !1316, line: 229, type: !1287)
!9089 = !DILocation(line: 0, scope: !9085)
!9090 = !DILocation(line: 229, column: 20, scope: !9085)
!9091 = !DILocation(line: 231, column: 9, scope: !9085)
!9092 = !DILocation(line: 231, column: 53, scope: !9085)
!9093 = !DILocation(line: 232, column: 3, scope: !9085)
!9094 = !DILocation(line: 231, column: 2, scope: !9085)
!9095 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1316, file: !1316, line: 235, type: !1237, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9096)
!9096 = !{!9097}
!9097 = !DILocalVariable(name: "dev", arg: 1, scope: !9095, file: !1316, line: 235, type: !1216)
!9098 = !DILocation(line: 0, scope: !9095)
!9099 = !DILocation(line: 237, column: 2, scope: !9095)
!9100 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1316, file: !1316, line: 240, type: !1281, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9101)
!9101 = !{!9102, !9103, !9104, !9105}
!9102 = !DILocalVariable(name: "dev", arg: 1, scope: !9100, file: !1316, line: 240, type: !1216)
!9103 = !DILocalVariable(name: "cb", arg: 2, scope: !9100, file: !1316, line: 241, type: !1283)
!9104 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9100, file: !1316, line: 242, type: !102)
!9105 = !DILocalVariable(name: "data", scope: !9100, file: !1316, line: 244, type: !9106)
!9106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!9107 = !DILocation(line: 0, scope: !9100)
!9108 = !DILocation(line: 244, column: 36, scope: !9100)
!9109 = !DILocation(line: 246, column: 8, scope: !9100)
!9110 = !DILocation(line: 246, column: 17, scope: !9100)
!9111 = !DILocation(line: 247, column: 8, scope: !9100)
!9112 = !DILocation(line: 247, column: 16, scope: !9100)
!9113 = !DILocation(line: 248, column: 1, scope: !9100)
!9114 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1123, file: !1123, line: 392, type: !9115, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9117)
!9115 = !DISubroutineType(types: !9116)
!9116 = !{!583, !1287, !415}
!9117 = !{!9118, !9119, !9120}
!9118 = !DILocalVariable(name: "base", arg: 1, scope: !9114, file: !1123, line: 392, type: !1287)
!9119 = !DILocalVariable(name: "flag", arg: 2, scope: !9114, file: !1123, line: 392, type: !415)
!9120 = !DILocalVariable(name: "uart_reg", scope: !9114, file: !1123, line: 393, type: !539)
!9121 = !DILocation(line: 0, scope: !9114)
!9122 = !DILocation(line: 395, column: 29, scope: !9114)
!9123 = !DILocation(line: 395, column: 52, scope: !9114)
!9124 = !DILocation(line: 395, column: 44, scope: !9114)
!9125 = !DILocation(line: 395, column: 16, scope: !9114)
!9126 = !DILocation(line: 396, column: 20, scope: !9114)
!9127 = !DILocation(line: 396, column: 39, scope: !9114)
!9128 = !DILocation(line: 396, column: 12, scope: !9114)
!9129 = !DILocation(line: 396, column: 5, scope: !9114)
!9130 = distinct !DISubprogram(name: "UART_Getchar", scope: !1123, file: !1123, line: 358, type: !9131, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!421, !1287}
!9133 = !{!9134}
!9134 = !DILocalVariable(name: "base", arg: 1, scope: !9130, file: !1123, line: 358, type: !1287)
!9135 = !DILocation(line: 0, scope: !9130)
!9136 = !DILocation(line: 360, column: 22, scope: !9130)
!9137 = !DILocation(line: 360, column: 12, scope: !9130)
!9138 = !DILocation(line: 360, column: 5, scope: !9130)
!9139 = distinct !DISubprogram(name: "UART_Putchar", scope: !1123, file: !1123, line: 346, type: !9140, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9142)
!9140 = !DISubroutineType(types: !9141)
!9141 = !{null, !1287, !421}
!9142 = !{!9143, !9144}
!9143 = !DILocalVariable(name: "base", arg: 1, scope: !9139, file: !1123, line: 346, type: !1287)
!9144 = !DILocalVariable(name: "data", arg: 2, scope: !9139, file: !1123, line: 346, type: !421)
!9145 = !DILocation(line: 0, scope: !9139)
!9146 = !DILocation(line: 348, column: 28, scope: !9139)
!9147 = !DILocation(line: 348, column: 5, scope: !9139)
!9148 = !DILocation(line: 348, column: 25, scope: !9139)
!9149 = !DILocation(line: 349, column: 1, scope: !9139)
!9150 = !DILocation(line: 0, scope: !1391)
!9151 = !DILocation(line: 339, column: 1, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !1391, file: !1316, line: 339, column: 1)
!9153 = !DILocation(line: 339, column: 1, scope: !1391)
!9154 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1316, file: !1316, line: 260, type: !1267, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9155)
!9155 = !{!9156, !9157}
!9156 = !DILocalVariable(name: "dev", arg: 1, scope: !9154, file: !1316, line: 260, type: !1216)
!9157 = !DILocalVariable(name: "data", scope: !9154, file: !1316, line: 262, type: !9106)
!9158 = !DILocation(line: 0, scope: !9154)
!9159 = !DILocation(line: 262, column: 36, scope: !9154)
!9160 = !DILocation(line: 264, column: 12, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9154, file: !1316, line: 264, column: 6)
!9162 = !DILocation(line: 264, column: 6, scope: !9161)
!9163 = !DILocation(line: 264, column: 6, scope: !9154)
!9164 = !DILocation(line: 265, column: 29, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9161, file: !1316, line: 264, column: 22)
!9166 = !DILocation(line: 265, column: 3, scope: !9165)
!9167 = !DILocation(line: 266, column: 2, scope: !9165)
!9168 = !DILocation(line: 267, column: 1, scope: !9154)
!9169 = distinct !DISubprogram(name: "uart_imx_init", scope: !1316, file: !1316, line: 56, type: !1237, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9170)
!9170 = !{!9171, !9172, !9173, !9174, !9175, !9176}
!9171 = !DILocalVariable(name: "dev", arg: 1, scope: !9169, file: !1316, line: 56, type: !1216)
!9172 = !DILocalVariable(name: "uart", scope: !9169, file: !1316, line: 58, type: !1287)
!9173 = !DILocalVariable(name: "config", scope: !9169, file: !1316, line: 59, type: !1313)
!9174 = !DILocalVariable(name: "old_level", scope: !9169, file: !1316, line: 60, type: !32)
!9175 = !DILocalVariable(name: "err", scope: !9169, file: !1316, line: 61, type: !103)
!9176 = !DILocalVariable(name: "initConfig", scope: !9169, file: !1316, line: 67, type: !9177)
!9177 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1123, line: 57, baseType: !9178)
!9178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1123, line: 49, size: 192, elements: !9179)
!9179 = !{!9180, !9181, !9182, !9183, !9184, !9185}
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !9178, file: !1123, line: 51, baseType: !415, size: 32)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !9178, file: !1123, line: 52, baseType: !415, size: 32, offset: 32)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !9178, file: !1123, line: 53, baseType: !415, size: 32, offset: 64)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !9178, file: !1123, line: 54, baseType: !415, size: 32, offset: 96)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !9178, file: !1123, line: 55, baseType: !415, size: 32, offset: 128)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9178, file: !1123, line: 56, baseType: !415, size: 32, offset: 160)
!9186 = !DILocation(line: 0, scope: !9169)
!9187 = !DILocation(line: 58, column: 20, scope: !9169)
!9188 = !DILocation(line: 55, column: 2, scope: !9189, inlinedAt: !9193)
!9189 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5666, file: !5666, line: 42, type: !5667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9190)
!9190 = !{!9191, !9192}
!9191 = !DILocalVariable(name: "key", scope: !9189, file: !5666, line: 44, type: !32)
!9192 = !DILocalVariable(name: "tmp", scope: !9189, file: !5666, line: 53, type: !32)
!9193 = distinct !DILocation(line: 64, column: 14, scope: !9169)
!9194 = !{i64 2846304}
!9195 = !DILocation(line: 0, scope: !9189, inlinedAt: !9193)
!9196 = !DILocation(line: 67, column: 2, scope: !9169)
!9197 = !DILocation(line: 67, column: 21, scope: !9169)
!9198 = !DILocation(line: 67, column: 34, scope: !9169)
!9199 = !DILocation(line: 68, column: 23, scope: !9169)
!9200 = !DILocation(line: 75, column: 36, scope: !9169)
!9201 = !DILocation(line: 75, column: 8, scope: !9169)
!9202 = !DILocation(line: 76, column: 6, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9169, file: !1316, line: 76, column: 6)
!9204 = !DILocation(line: 76, column: 6, scope: !9169)
!9205 = !DILocation(line: 81, column: 26, scope: !9169)
!9206 = !DILocation(line: 81, column: 24, scope: !9169)
!9207 = !DILocation(line: 83, column: 2, scope: !9169)
!9208 = !DILocation(line: 86, column: 2, scope: !9169)
!9209 = !DILocation(line: 87, column: 2, scope: !9169)
!9210 = !DILocalVariable(name: "key", arg: 1, scope: !9211, file: !5666, line: 84, type: !32)
!9211 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9212)
!9212 = !{!9210}
!9213 = !DILocation(line: 0, scope: !9211, inlinedAt: !9214)
!9214 = distinct !DILocation(line: 90, column: 2, scope: !9169)
!9215 = !DILocation(line: 95, column: 2, scope: !9211, inlinedAt: !9214)
!9216 = !{i64 2847121}
!9217 = !DILocation(line: 93, column: 10, scope: !9169)
!9218 = !DILocation(line: 93, column: 2, scope: !9169)
!9219 = !DILocation(line: 97, column: 34, scope: !9169)
!9220 = !DILocation(line: 97, column: 26, scope: !9169)
!9221 = !DILocation(line: 97, column: 2, scope: !9169)
!9222 = !DILocation(line: 100, column: 2, scope: !9169)
!9223 = !DILocation(line: 102, column: 2, scope: !9169)
!9224 = !DILocation(line: 103, column: 1, scope: !9169)
!9225 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1325, file: !1325, line: 342, type: !9226, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9228)
!9226 = !DISubroutineType(types: !9227)
!9227 = !{!103, !1322, !421}
!9228 = !{!9229, !9230, !9231, !9232}
!9229 = !DILocalVariable(name: "config", arg: 1, scope: !9225, file: !1325, line: 342, type: !1322)
!9230 = !DILocalVariable(name: "id", arg: 2, scope: !9225, file: !1325, line: 343, type: !421)
!9231 = !DILocalVariable(name: "ret", scope: !9225, file: !1325, line: 345, type: !103)
!9232 = !DILocalVariable(name: "state", scope: !9225, file: !1325, line: 346, type: !1328)
!9233 = !DILocation(line: 0, scope: !9225)
!9234 = !DILocation(line: 346, column: 2, scope: !9225)
!9235 = !DILocation(line: 348, column: 8, scope: !9225)
!9236 = !DILocation(line: 349, column: 10, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9225, file: !1325, line: 349, column: 6)
!9238 = !DILocation(line: 349, column: 6, scope: !9225)
!9239 = !DILocation(line: 353, column: 44, scope: !9225)
!9240 = !DILocation(line: 353, column: 9, scope: !9225)
!9241 = !DILocation(line: 353, column: 2, scope: !9225)
!9242 = !DILocation(line: 354, column: 1, scope: !9225)
!9243 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1123, file: !1123, line: 444, type: !9140, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9244)
!9244 = !{!9245, !9246}
!9245 = !DILocalVariable(name: "base", arg: 1, scope: !9243, file: !1123, line: 444, type: !1287)
!9246 = !DILocalVariable(name: "watermark", arg: 2, scope: !9243, file: !1123, line: 444, type: !421)
!9247 = !DILocation(line: 0, scope: !9243)
!9248 = !DILocation(line: 447, column: 28, scope: !9243)
!9249 = !DILocation(line: 447, column: 48, scope: !9243)
!9250 = !DILocation(line: 447, column: 72, scope: !9243)
!9251 = !DILocation(line: 447, column: 25, scope: !9243)
!9252 = !DILocation(line: 448, column: 1, scope: !9243)
!9253 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1123, file: !1123, line: 458, type: !9140, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9254)
!9254 = !{!9255, !9256}
!9255 = !DILocalVariable(name: "base", arg: 1, scope: !9253, file: !1123, line: 458, type: !1287)
!9256 = !DILocalVariable(name: "watermark", arg: 2, scope: !9253, file: !1123, line: 458, type: !421)
!9257 = !DILocation(line: 0, scope: !9253)
!9258 = !DILocation(line: 461, column: 28, scope: !9253)
!9259 = !DILocation(line: 461, column: 48, scope: !9253)
!9260 = !DILocation(line: 461, column: 72, scope: !9253)
!9261 = !DILocation(line: 461, column: 25, scope: !9253)
!9262 = !DILocation(line: 462, column: 1, scope: !9253)
!9263 = distinct !DISubprogram(name: "UART_Enable", scope: !1123, file: !1123, line: 242, type: !9264, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9266)
!9264 = !DISubroutineType(types: !9265)
!9265 = !{null, !1287}
!9266 = !{!9267}
!9267 = !DILocalVariable(name: "base", arg: 1, scope: !9263, file: !1123, line: 242, type: !1287)
!9268 = !DILocation(line: 0, scope: !9263)
!9269 = !DILocation(line: 244, column: 5, scope: !9263)
!9270 = !DILocation(line: 244, column: 25, scope: !9263)
!9271 = !DILocation(line: 245, column: 1, scope: !9263)
!9272 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1325, file: !1325, line: 316, type: !9273, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !9275)
!9273 = !DISubroutineType(types: !9274)
!9274 = !{!103, !1322, !1328}
!9275 = !{!9276, !9277, !9278}
!9276 = !DILocalVariable(name: "config", arg: 1, scope: !9272, file: !1325, line: 317, type: !1322)
!9277 = !DILocalVariable(name: "state", arg: 2, scope: !9272, file: !1325, line: 318, type: !1328)
!9278 = !DILocalVariable(name: "reg", scope: !9272, file: !1325, line: 320, type: !22)
!9279 = !DILocation(line: 0, scope: !9272)
!9280 = !DILocation(line: 329, column: 39, scope: !9272)
!9281 = !DILocation(line: 329, column: 52, scope: !9272)
!9282 = !DILocation(line: 329, column: 9, scope: !9272)
!9283 = !DILocation(line: 329, column: 2, scope: !9272)
!9284 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1631, file: !1631, line: 270, type: !1637, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9285)
!9285 = !{!9286}
!9286 = !DILocalVariable(name: "dev", arg: 1, scope: !9284, file: !1631, line: 270, type: !1639)
!9287 = !DILocation(line: 0, scope: !9284)
!9288 = !DILocation(line: 274, column: 2, scope: !9284)
!9289 = !DILocation(line: 275, column: 12, scope: !9284)
!9290 = !DILocation(line: 276, column: 15, scope: !9284)
!9291 = !DILocation(line: 277, column: 16, scope: !9284)
!9292 = !DILocation(line: 278, column: 15, scope: !9284)
!9293 = !DILocation(line: 279, column: 16, scope: !9284)
!9294 = !DILocation(line: 282, column: 2, scope: !9284)
!9295 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1552, file: !1552, line: 1814, type: !6574, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9296)
!9296 = !{!9297, !9298}
!9297 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9295, file: !1552, line: 1814, type: !2453)
!9298 = !DILocalVariable(name: "priority", arg: 2, scope: !9295, file: !1552, line: 1814, type: !415)
!9299 = !DILocation(line: 0, scope: !9295)
!9300 = !DILocation(line: 1822, column: 46, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9302, file: !1552, line: 1821, column: 3)
!9302 = distinct !DILexicalBlock(scope: !9295, file: !1552, line: 1816, column: 7)
!9303 = !DILocation(line: 1824, column: 1, scope: !9295)
!9304 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1631, file: !1631, line: 118, type: !6477, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9305)
!9305 = !{!9306, !9307}
!9306 = !DILocalVariable(name: "arg", arg: 1, scope: !9304, file: !1631, line: 118, type: !102)
!9307 = !DILocalVariable(name: "dticks", scope: !9304, file: !1631, line: 121, type: !415)
!9308 = !DILocation(line: 0, scope: !9304)
!9309 = !DILocation(line: 124, column: 2, scope: !9304)
!9310 = !DILocation(line: 129, column: 17, scope: !9304)
!9311 = !DILocation(line: 129, column: 14, scope: !9304)
!9312 = !DILocation(line: 130, column: 15, scope: !9304)
!9313 = !DILocation(line: 145, column: 27, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9315, file: !1631, line: 132, column: 16)
!9315 = distinct !DILexicalBlock(scope: !9304, file: !1631, line: 132, column: 6)
!9316 = !DILocation(line: 145, column: 25, scope: !9314)
!9317 = !DILocation(line: 145, column: 45, scope: !9314)
!9318 = !DILocation(line: 146, column: 30, scope: !9314)
!9319 = !DILocation(line: 146, column: 20, scope: !9314)
!9320 = !DILocation(line: 147, column: 3, scope: !9314)
!9321 = !DILocation(line: 151, column: 2, scope: !9304)
!9322 = !DILocation(line: 152, column: 1, scope: !9304)
!9323 = distinct !DISubprogram(name: "elapsed", scope: !1631, file: !1631, line: 85, type: !6621, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9324)
!9324 = !{!9325, !9326, !9327}
!9325 = !DILocalVariable(name: "val1", scope: !9323, file: !1631, line: 87, type: !415)
!9326 = !DILocalVariable(name: "ctrl", scope: !9323, file: !1631, line: 88, type: !415)
!9327 = !DILocalVariable(name: "val2", scope: !9323, file: !1631, line: 89, type: !415)
!9328 = !DILocation(line: 87, column: 27, scope: !9323)
!9329 = !DILocation(line: 0, scope: !9323)
!9330 = !DILocation(line: 88, column: 27, scope: !9323)
!9331 = !DILocation(line: 89, column: 27, scope: !9323)
!9332 = !DILocation(line: 105, column: 12, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9323, file: !1631, line: 105, column: 6)
!9334 = !DILocation(line: 106, column: 6, scope: !9333)
!9335 = !DILocation(line: 107, column: 16, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9333, file: !1631, line: 106, column: 24)
!9337 = !DILocation(line: 111, column: 18, scope: !9336)
!9338 = !DILocation(line: 112, column: 2, scope: !9336)
!9339 = !DILocation(line: 114, column: 20, scope: !9323)
!9340 = !DILocation(line: 114, column: 30, scope: !9323)
!9341 = !DILocation(line: 114, column: 28, scope: !9323)
!9342 = !DILocation(line: 114, column: 2, scope: !9323)
!9343 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1631, file: !1631, line: 154, type: !9344, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9346)
!9344 = !DISubroutineType(types: !9345)
!9345 = !{null, !700, !583}
!9346 = !{!9347, !9348, !9349, !9350, !9351, !9352, !9353, !9358, !9359}
!9347 = !DILocalVariable(name: "ticks", arg: 1, scope: !9343, file: !1631, line: 154, type: !700)
!9348 = !DILocalVariable(name: "idle", arg: 2, scope: !9343, file: !1631, line: 154, type: !583)
!9349 = !DILocalVariable(name: "delay", scope: !9343, file: !1631, line: 169, type: !415)
!9350 = !DILocalVariable(name: "val1", scope: !9343, file: !1631, line: 170, type: !415)
!9351 = !DILocalVariable(name: "val2", scope: !9343, file: !1631, line: 170, type: !415)
!9352 = !DILocalVariable(name: "last_load_", scope: !9343, file: !1631, line: 171, type: !415)
!9353 = !DILocalVariable(name: "key", scope: !9343, file: !1631, line: 176, type: !9354)
!9354 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !841, line: 106, baseType: !9355)
!9355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !841, line: 32, size: 32, elements: !9356)
!9356 = !{!9357}
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9355, file: !841, line: 33, baseType: !103, size: 32)
!9358 = !DILocalVariable(name: "pending", scope: !9343, file: !1631, line: 178, type: !415)
!9359 = !DILocalVariable(name: "unannounced", scope: !9343, file: !1631, line: 185, type: !415)
!9360 = !DILocation(line: 0, scope: !9343)
!9361 = !DILocation(line: 162, column: 49, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9343, file: !1631, line: 162, column: 6)
!9363 = !DILocation(line: 163, column: 17, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9362, file: !1631, line: 162, column: 78)
!9365 = !DILocation(line: 164, column: 13, scope: !9364)
!9366 = !DILocation(line: 165, column: 3, scope: !9364)
!9367 = !DILocation(line: 171, column: 24, scope: !9343)
!9368 = !DILocation(line: 173, column: 10, scope: !9343)
!9369 = !DILocation(line: 174, column: 10, scope: !9343)
!9370 = !DILocalVariable(name: "l", arg: 1, scope: !9371, file: !841, line: 136, type: !9374)
!9371 = distinct !DISubprogram(name: "k_spin_lock", scope: !841, file: !841, line: 136, type: !9372, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9375)
!9372 = !DISubroutineType(types: !9373)
!9373 = !{!9354, !9374}
!9374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 32)
!9375 = !{!9370, !9376}
!9376 = !DILocalVariable(name: "k", scope: !9371, file: !841, line: 139, type: !9354)
!9377 = !DILocation(line: 0, scope: !9371, inlinedAt: !9378)
!9378 = distinct !DILocation(line: 176, column: 25, scope: !9343)
!9379 = !DILocation(line: 55, column: 2, scope: !9380, inlinedAt: !9384)
!9380 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5666, file: !5666, line: 42, type: !5667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9381)
!9381 = !{!9382, !9383}
!9382 = !DILocalVariable(name: "key", scope: !9380, file: !5666, line: 44, type: !32)
!9383 = !DILocalVariable(name: "tmp", scope: !9380, file: !5666, line: 53, type: !32)
!9384 = distinct !DILocation(line: 145, column: 10, scope: !9371, inlinedAt: !9378)
!9385 = !{i64 2948308}
!9386 = !DILocation(line: 0, scope: !9380, inlinedAt: !9384)
!9387 = !DILocation(line: 178, column: 21, scope: !9343)
!9388 = !DILocation(line: 180, column: 18, scope: !9343)
!9389 = !DILocation(line: 182, column: 14, scope: !9343)
!9390 = !DILocation(line: 183, column: 15, scope: !9343)
!9391 = !DILocation(line: 185, column: 39, scope: !9343)
!9392 = !DILocation(line: 185, column: 37, scope: !9343)
!9393 = !DILocation(line: 187, column: 27, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9343, file: !1631, line: 187, column: 6)
!9395 = !DILocation(line: 187, column: 6, scope: !9343)
!9396 = !DILocation(line: 202, column: 27, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9394, file: !1631, line: 195, column: 9)
!9398 = !DILocation(line: 202, column: 48, scope: !9397)
!9399 = !DILocation(line: 203, column: 9, scope: !9397)
!9400 = !DILocation(line: 204, column: 11, scope: !9397)
!9401 = !DILocation(line: 205, column: 13, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9397, file: !1631, line: 205, column: 7)
!9403 = !DILocation(line: 205, column: 7, scope: !9397)
!9404 = !DILocation(line: 0, scope: !9394)
!9405 = !DILocation(line: 212, column: 18, scope: !9343)
!9406 = !DILocation(line: 214, column: 28, scope: !9343)
!9407 = !DILocation(line: 214, column: 16, scope: !9343)
!9408 = !DILocation(line: 215, column: 15, scope: !9343)
!9409 = !DILocation(line: 227, column: 11, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9343, file: !1631, line: 227, column: 6)
!9411 = !DILocation(line: 227, column: 6, scope: !9343)
!9412 = !DILocation(line: 228, column: 15, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9410, file: !1631, line: 227, column: 19)
!9414 = !DILocation(line: 228, column: 38, scope: !9413)
!9415 = !DILocation(line: 228, column: 24, scope: !9413)
!9416 = !DILocation(line: 229, column: 2, scope: !9413)
!9417 = !DILocation(line: 230, column: 24, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9410, file: !1631, line: 229, column: 9)
!9419 = !DILocation(line: 230, column: 15, scope: !9418)
!9420 = !DILocation(line: 0, scope: !9410)
!9421 = !DILocalVariable(name: "key", arg: 2, scope: !9422, file: !841, line: 190, type: !9354)
!9422 = distinct !DISubprogram(name: "k_spin_unlock", scope: !841, file: !841, line: 189, type: !9423, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9425)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{null, !9374, !9354}
!9425 = !{!9426, !9421}
!9426 = !DILocalVariable(name: "l", arg: 1, scope: !9422, file: !841, line: 189, type: !9374)
!9427 = !DILocation(line: 0, scope: !9422, inlinedAt: !9428)
!9428 = distinct !DILocation(line: 232, column: 2, scope: !9343)
!9429 = !DILocalVariable(name: "key", arg: 1, scope: !9430, file: !5666, line: 84, type: !32)
!9430 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9431)
!9431 = !{!9429}
!9432 = !DILocation(line: 0, scope: !9430, inlinedAt: !9433)
!9433 = distinct !DILocation(line: 215, column: 2, scope: !9422, inlinedAt: !9428)
!9434 = !DILocation(line: 95, column: 2, scope: !9430, inlinedAt: !9433)
!9435 = !{i64 2949125}
!9436 = !DILocation(line: 234, column: 1, scope: !9343)
!9437 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1631, file: !1631, line: 236, type: !6621, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9438)
!9438 = !{!9439, !9440}
!9439 = !DILocalVariable(name: "key", scope: !9437, file: !1631, line: 242, type: !9354)
!9440 = !DILocalVariable(name: "cyc", scope: !9437, file: !1631, line: 243, type: !415)
!9441 = !DILocation(line: 0, scope: !9371, inlinedAt: !9442)
!9442 = distinct !DILocation(line: 242, column: 25, scope: !9437)
!9443 = !DILocation(line: 55, column: 2, scope: !9380, inlinedAt: !9444)
!9444 = distinct !DILocation(line: 145, column: 10, scope: !9371, inlinedAt: !9442)
!9445 = !DILocation(line: 0, scope: !9380, inlinedAt: !9444)
!9446 = !DILocation(line: 0, scope: !9437)
!9447 = !DILocation(line: 243, column: 17, scope: !9437)
!9448 = !DILocation(line: 243, column: 29, scope: !9437)
!9449 = !DILocation(line: 243, column: 27, scope: !9437)
!9450 = !DILocation(line: 243, column: 43, scope: !9437)
!9451 = !DILocation(line: 243, column: 41, scope: !9437)
!9452 = !DILocation(line: 0, scope: !9422, inlinedAt: !9453)
!9453 = distinct !DILocation(line: 245, column: 2, scope: !9437)
!9454 = !DILocation(line: 0, scope: !9430, inlinedAt: !9455)
!9455 = distinct !DILocation(line: 215, column: 2, scope: !9422, inlinedAt: !9453)
!9456 = !DILocation(line: 95, column: 2, scope: !9430, inlinedAt: !9455)
!9457 = !DILocation(line: 246, column: 13, scope: !9437)
!9458 = !DILocation(line: 246, column: 2, scope: !9437)
!9459 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1631, file: !1631, line: 249, type: !6621, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !9460)
!9460 = !{!9461, !9462}
!9461 = !DILocalVariable(name: "key", scope: !9459, file: !1631, line: 251, type: !9354)
!9462 = !DILocalVariable(name: "ret", scope: !9459, file: !1631, line: 252, type: !415)
!9463 = !DILocation(line: 0, scope: !9371, inlinedAt: !9464)
!9464 = distinct !DILocation(line: 251, column: 25, scope: !9459)
!9465 = !DILocation(line: 55, column: 2, scope: !9380, inlinedAt: !9466)
!9466 = distinct !DILocation(line: 145, column: 10, scope: !9371, inlinedAt: !9464)
!9467 = !DILocation(line: 0, scope: !9380, inlinedAt: !9466)
!9468 = !DILocation(line: 0, scope: !9459)
!9469 = !DILocation(line: 252, column: 17, scope: !9459)
!9470 = !DILocation(line: 252, column: 29, scope: !9459)
!9471 = !DILocation(line: 252, column: 27, scope: !9459)
!9472 = !DILocation(line: 0, scope: !9422, inlinedAt: !9473)
!9473 = distinct !DILocation(line: 254, column: 2, scope: !9459)
!9474 = !DILocation(line: 0, scope: !9430, inlinedAt: !9475)
!9475 = distinct !DILocation(line: 215, column: 2, scope: !9422, inlinedAt: !9473)
!9476 = !DILocation(line: 95, column: 2, scope: !9430, inlinedAt: !9475)
!9477 = !DILocation(line: 255, column: 2, scope: !9459)
!9478 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1631, file: !1631, line: 258, type: !3019, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !842)
!9479 = !DILocation(line: 260, column: 6, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9478, file: !1631, line: 260, column: 6)
!9481 = !DILocation(line: 260, column: 16, scope: !9480)
!9482 = !DILocation(line: 260, column: 6, scope: !9478)
!9483 = !DILocation(line: 261, column: 17, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9480, file: !1631, line: 260, column: 34)
!9485 = !DILocation(line: 262, column: 2, scope: !9484)
!9486 = !DILocation(line: 263, column: 1, scope: !9478)
!9487 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1631, file: !1631, line: 265, type: !3019, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !842)
!9488 = !DILocation(line: 267, column: 16, scope: !9487)
!9489 = !DILocation(line: 268, column: 1, scope: !9487)
!9490 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9491, file: !9491, line: 9, type: !9492, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !9522)
!9491 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9492 = !DISubroutineType(types: !9493)
!9493 = !{!103, !9494, !421, !9521}
!9494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9495, size: 32)
!9495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9496)
!9496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1325, line: 60, size: 64, elements: !9497)
!9497 = !{!9498, !9520}
!9498 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9496, file: !1325, line: 69, baseType: !9499, size: 32)
!9499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9500, size: 32)
!9500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9501)
!9501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1325, line: 50, size: 64, elements: !9502)
!9502 = !{!9503, !9518, !9519}
!9503 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9501, file: !1325, line: 52, baseType: !9504, size: 32)
!9504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9505, size: 32)
!9505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9506)
!9506 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1080, line: 64, baseType: !9507)
!9507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1080, line: 59, size: 160, elements: !9508)
!9508 = !{!9509, !9517}
!9509 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9507, file: !1080, line: 60, baseType: !9510, size: 128)
!9510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1080, line: 51, size: 128, elements: !9511)
!9511 = !{!9512, !9513, !9514, !9515, !9516}
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !9510, file: !1080, line: 52, baseType: !415, size: 32)
!9513 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !9510, file: !1080, line: 53, baseType: !415, size: 32, offset: 32)
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !9510, file: !1080, line: 54, baseType: !415, size: 32, offset: 64)
!9515 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !9510, file: !1080, line: 55, baseType: !421, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !9510, file: !1080, line: 56, baseType: !415, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9507, file: !1080, line: 61, baseType: !415, size: 32, offset: 128)
!9518 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9501, file: !1325, line: 54, baseType: !421, size: 8, offset: 32)
!9519 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9501, file: !1325, line: 56, baseType: !421, size: 8, offset: 40)
!9520 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9496, file: !1325, line: 71, baseType: !421, size: 8, offset: 32)
!9521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9499, size: 32)
!9522 = !{!9523, !9524, !9525}
!9523 = !DILocalVariable(name: "config", arg: 1, scope: !9490, file: !9491, line: 9, type: !9494)
!9524 = !DILocalVariable(name: "id", arg: 2, scope: !9490, file: !9491, line: 9, type: !421)
!9525 = !DILocalVariable(name: "state", arg: 3, scope: !9490, file: !9491, line: 10, type: !9521)
!9526 = !DILocation(line: 0, scope: !9490)
!9527 = !DILocation(line: 12, column: 20, scope: !9490)
!9528 = !DILocation(line: 13, column: 27, scope: !9490)
!9529 = !DILocation(line: 13, column: 42, scope: !9490)
!9530 = !DILocation(line: 13, column: 19, scope: !9490)
!9531 = !DILocation(line: 13, column: 16, scope: !9490)
!9532 = !DILocation(line: 13, column: 2, scope: !9490)
!9533 = distinct !{!9533, !9532, !9534}
!9534 = !DILocation(line: 19, column: 2, scope: !9490)
!9535 = !DILocation(line: 14, column: 23, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !9491, line: 14, column: 7)
!9537 = distinct !DILexicalBlock(scope: !9490, file: !9491, line: 13, column: 54)
!9538 = !DILocation(line: 14, column: 10, scope: !9536)
!9539 = !DILocation(line: 18, column: 11, scope: !9537)
!9540 = !DILocation(line: 14, column: 7, scope: !9537)
!9541 = !DILocation(line: 22, column: 1, scope: !9490)
!9542 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1670, file: !1670, line: 51, type: !1676, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !9543)
!9543 = !{!9544}
!9544 = !DILocalVariable(name: "dev", arg: 1, scope: !9542, file: !1670, line: 51, type: !1678)
!9545 = !DILocation(line: 0, scope: !9542)
!9546 = !DILocation(line: 66, column: 2, scope: !9542)
!9547 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1670, file: !1670, line: 10, type: !9548, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !9564)
!9548 = !DISubroutineType(types: !9549)
!9549 = !{!103, !9550, !421, !22}
!9550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9551, size: 32)
!9551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9552)
!9552 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1080, line: 64, baseType: !9553)
!9553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1080, line: 59, size: 160, elements: !9554)
!9554 = !{!9555, !9563}
!9555 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9553, file: !1080, line: 60, baseType: !9556, size: 128)
!9556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1080, line: 51, size: 128, elements: !9557)
!9557 = !{!9558, !9559, !9560, !9561, !9562}
!9558 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !9556, file: !1080, line: 52, baseType: !415, size: 32)
!9559 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !9556, file: !1080, line: 53, baseType: !415, size: 32, offset: 32)
!9560 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !9556, file: !1080, line: 54, baseType: !415, size: 32, offset: 64)
!9561 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !9556, file: !1080, line: 55, baseType: !421, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!9562 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !9556, file: !1080, line: 56, baseType: !415, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!9563 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9553, file: !1080, line: 61, baseType: !415, size: 32, offset: 128)
!9564 = !{!9565, !9566, !9567, !9568, !9570, !9573, !9574, !9575, !9576, !9577}
!9565 = !DILocalVariable(name: "pins", arg: 1, scope: !9547, file: !1670, line: 10, type: !9550)
!9566 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9547, file: !1670, line: 10, type: !421)
!9567 = !DILocalVariable(name: "reg", arg: 3, scope: !9547, file: !1670, line: 11, type: !22)
!9568 = !DILocalVariable(name: "i", scope: !9569, file: !1670, line: 14, type: !421)
!9569 = distinct !DILexicalBlock(scope: !9547, file: !1670, line: 14, column: 2)
!9570 = !DILocalVariable(name: "mux_register", scope: !9571, file: !1670, line: 15, type: !415)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !1670, line: 14, column: 41)
!9572 = distinct !DILexicalBlock(scope: !9569, file: !1670, line: 14, column: 2)
!9573 = !DILocalVariable(name: "mux_mode", scope: !9571, file: !1670, line: 16, type: !415)
!9574 = !DILocalVariable(name: "input_register", scope: !9571, file: !1670, line: 17, type: !415)
!9575 = !DILocalVariable(name: "input_daisy", scope: !9571, file: !1670, line: 18, type: !415)
!9576 = !DILocalVariable(name: "config_register", scope: !9571, file: !1670, line: 19, type: !415)
!9577 = !DILocalVariable(name: "pin_ctrl_flags", scope: !9571, file: !1670, line: 20, type: !415)
!9578 = !DILocation(line: 0, scope: !9547)
!9579 = !DILocation(line: 0, scope: !9569)
!9580 = !DILocation(line: 14, column: 25, scope: !9572)
!9581 = !DILocation(line: 14, column: 2, scope: !9569)
!9582 = !DILocation(line: 48, column: 2, scope: !9547)
!9583 = !DILocation(line: 15, column: 42, scope: !9571)
!9584 = !DILocation(line: 0, scope: !9571)
!9585 = !DILocation(line: 16, column: 38, scope: !9571)
!9586 = !DILocation(line: 17, column: 44, scope: !9571)
!9587 = !DILocation(line: 19, column: 45, scope: !9571)
!9588 = !DILocation(line: 20, column: 37, scope: !9571)
!9589 = !DILocation(line: 35, column: 4, scope: !9571)
!9590 = !DILocation(line: 36, column: 4, scope: !9571)
!9591 = !DILocation(line: 35, column: 45, scope: !9571)
!9592 = !DILocation(line: 34, column: 5, scope: !9571)
!9593 = !DILocation(line: 34, column: 53, scope: !9571)
!9594 = !DILocation(line: 37, column: 7, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9571, file: !1670, line: 37, column: 7)
!9596 = !DILocation(line: 37, column: 7, scope: !9571)
!9597 = !DILocation(line: 18, column: 41, scope: !9571)
!9598 = !DILocation(line: 39, column: 5, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9595, file: !1670, line: 37, column: 23)
!9600 = !DILocation(line: 38, column: 6, scope: !9599)
!9601 = !DILocation(line: 38, column: 56, scope: !9599)
!9602 = !DILocation(line: 40, column: 3, scope: !9599)
!9603 = !DILocation(line: 41, column: 7, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9571, file: !1670, line: 41, column: 7)
!9605 = !DILocation(line: 41, column: 7, scope: !9571)
!9606 = !DILocation(line: 43, column: 20, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9604, file: !1670, line: 41, column: 24)
!9608 = !DILocation(line: 42, column: 6, scope: !9607)
!9609 = !DILocation(line: 42, column: 57, scope: !9607)
!9610 = !DILocation(line: 44, column: 3, scope: !9607)
!9611 = !DILocation(line: 14, column: 37, scope: !9572)
!9612 = distinct !{!9612, !9581, !9613}
!9613 = !DILocation(line: 47, column: 2, scope: !9569)
!9614 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !9615, file: !9615, line: 43, type: !9616, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2748, retainedNodes: !9670)
!9615 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9616 = !DISubroutineType(types: !9617)
!9617 = !{null, !9618, !415, !415, !415}
!9618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9619, size: 32)
!9619 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !410, line: 4575, baseType: !9620)
!9620 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 4532, size: 390144, elements: !9621)
!9621 = !{!9622, !9623, !9624, !9625, !9626, !9627, !9635, !9636, !9644, !9645}
!9622 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !9620, file: !410, line: 4533, baseType: !414, size: 32)
!9623 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !9620, file: !410, line: 4534, baseType: !414, size: 32, offset: 32)
!9624 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !9620, file: !410, line: 4535, baseType: !414, size: 32, offset: 64)
!9625 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !9620, file: !410, line: 4536, baseType: !414, size: 32, offset: 96)
!9626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9620, file: !410, line: 4537, baseType: !420, size: 16256, offset: 128)
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !9620, file: !410, line: 4543, baseType: !9628, size: 4224, offset: 16384)
!9628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9629, size: 4224, elements: !433)
!9629 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9620, file: !410, line: 4538, size: 128, elements: !9630)
!9630 = !{!9631, !9632, !9633, !9634}
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !9629, file: !410, line: 4539, baseType: !414, size: 32)
!9632 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !9629, file: !410, line: 4540, baseType: !414, size: 32, offset: 32)
!9633 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !9629, file: !410, line: 4541, baseType: !414, size: 32, offset: 64)
!9634 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !9629, file: !410, line: 4542, baseType: !414, size: 32, offset: 96)
!9635 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9620, file: !410, line: 4544, baseType: !436, size: 110464, offset: 20608)
!9636 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !9620, file: !410, line: 4550, baseType: !9637, size: 24448, offset: 131072)
!9637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9638, size: 24448, elements: !447)
!9638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9620, file: !410, line: 4545, size: 128, elements: !9639)
!9639 = !{!9640, !9641, !9642, !9643}
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !9638, file: !410, line: 4546, baseType: !414, size: 32)
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !9638, file: !410, line: 4547, baseType: !414, size: 32, offset: 32)
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !9638, file: !410, line: 4548, baseType: !414, size: 32, offset: 64)
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !9638, file: !410, line: 4549, baseType: !414, size: 32, offset: 96)
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9620, file: !410, line: 4551, baseType: !450, size: 106624, offset: 155520)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !9620, file: !410, line: 4574, baseType: !9646, size: 128000, offset: 262144)
!9646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9647, size: 128000, elements: !481)
!9647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9620, file: !410, line: 4552, size: 1024, elements: !9648)
!9648 = !{!9649, !9650, !9651, !9652, !9653, !9654, !9655, !9656, !9657, !9658, !9659, !9660, !9661, !9662, !9663, !9664, !9665, !9666, !9667, !9668, !9669}
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !9647, file: !410, line: 4553, baseType: !414, size: 32)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !9647, file: !410, line: 4554, baseType: !414, size: 32, offset: 32)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !9647, file: !410, line: 4555, baseType: !414, size: 32, offset: 64)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !9647, file: !410, line: 4556, baseType: !414, size: 32, offset: 96)
!9653 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !9647, file: !410, line: 4557, baseType: !414, size: 32, offset: 128)
!9654 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !9647, file: !410, line: 4558, baseType: !414, size: 32, offset: 160)
!9655 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !9647, file: !410, line: 4559, baseType: !414, size: 32, offset: 192)
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !9647, file: !410, line: 4560, baseType: !414, size: 32, offset: 224)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !9647, file: !410, line: 4561, baseType: !414, size: 32, offset: 256)
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !9647, file: !410, line: 4562, baseType: !414, size: 32, offset: 288)
!9659 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !9647, file: !410, line: 4563, baseType: !414, size: 32, offset: 320)
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !9647, file: !410, line: 4564, baseType: !414, size: 32, offset: 352)
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !9647, file: !410, line: 4565, baseType: !414, size: 32, offset: 384)
!9662 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !9647, file: !410, line: 4566, baseType: !414, size: 32, offset: 416)
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !9647, file: !410, line: 4567, baseType: !414, size: 32, offset: 448)
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !9647, file: !410, line: 4568, baseType: !414, size: 32, offset: 480)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9647, file: !410, line: 4569, baseType: !474, size: 384, offset: 512)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !9647, file: !410, line: 4570, baseType: !414, size: 32, offset: 896)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !9647, file: !410, line: 4571, baseType: !414, size: 32, offset: 928)
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !9647, file: !410, line: 4572, baseType: !414, size: 32, offset: 960)
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !9647, file: !410, line: 4573, baseType: !414, size: 32, offset: 992)
!9670 = !{!9671, !9672, !9673, !9674}
!9671 = !DILocalVariable(name: "base", arg: 1, scope: !9614, file: !9615, line: 43, type: !9618)
!9672 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9614, file: !9615, line: 43, type: !415)
!9673 = !DILocalVariable(name: "pre", arg: 3, scope: !9614, file: !9615, line: 43, type: !415)
!9674 = !DILocalVariable(name: "post", arg: 4, scope: !9614, file: !9615, line: 43, type: !415)
!9675 = !DILocation(line: 0, scope: !9614)
!9676 = !DILocation(line: 48, column: 25, scope: !9614)
!9677 = !DILocation(line: 48, column: 42, scope: !9614)
!9678 = !DILocation(line: 50, column: 24, scope: !9614)
!9679 = !DILocation(line: 50, column: 56, scope: !9614)
!9680 = !DILocation(line: 49, column: 94, scope: !9614)
!9681 = !DILocation(line: 50, column: 54, scope: !9614)
!9682 = !DILocation(line: 48, column: 22, scope: !9614)
!9683 = !DILocation(line: 51, column: 1, scope: !9614)
!9684 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !9615, file: !9615, line: 59, type: !9685, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2748, retainedNodes: !9687)
!9685 = !DISubroutineType(types: !9686)
!9686 = !{null, !9618, !415, !1351, !1351}
!9687 = !{!9688, !9689, !9690, !9691}
!9688 = !DILocalVariable(name: "base", arg: 1, scope: !9684, file: !9615, line: 59, type: !9618)
!9689 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9684, file: !9615, line: 59, type: !415)
!9690 = !DILocalVariable(name: "pre", arg: 3, scope: !9684, file: !9615, line: 59, type: !1351)
!9691 = !DILocalVariable(name: "post", arg: 4, scope: !9684, file: !9615, line: 59, type: !1351)
!9692 = !DILocation(line: 0, scope: !9684)
!9693 = !DILocation(line: 63, column: 13, scope: !9684)
!9694 = !DILocation(line: 63, column: 63, scope: !9684)
!9695 = !DILocation(line: 63, column: 10, scope: !9684)
!9696 = !DILocation(line: 64, column: 14, scope: !9684)
!9697 = !DILocation(line: 64, column: 31, scope: !9684)
!9698 = !DILocation(line: 64, column: 11, scope: !9684)
!9699 = !DILocation(line: 65, column: 1, scope: !9684)
!9700 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !9615, file: !9615, line: 73, type: !9701, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2748, retainedNodes: !9703)
!9701 = !DISubroutineType(types: !9702)
!9702 = !{null, !9618, !415, !415, !415, !415}
!9703 = !{!9704, !9705, !9706, !9707, !9708}
!9704 = !DILocalVariable(name: "base", arg: 1, scope: !9700, file: !9615, line: 73, type: !9618)
!9705 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9700, file: !9615, line: 73, type: !415)
!9706 = !DILocalVariable(name: "mux", arg: 3, scope: !9700, file: !9615, line: 73, type: !415)
!9707 = !DILocalVariable(name: "pre", arg: 4, scope: !9700, file: !9615, line: 73, type: !415)
!9708 = !DILocalVariable(name: "post", arg: 5, scope: !9700, file: !9615, line: 73, type: !415)
!9709 = !DILocation(line: 0, scope: !9700)
!9710 = !DILocation(line: 78, column: 25, scope: !9700)
!9711 = !DILocation(line: 78, column: 42, scope: !9700)
!9712 = !DILocation(line: 80, column: 24, scope: !9700)
!9713 = !DILocation(line: 80, column: 51, scope: !9700)
!9714 = !DILocation(line: 80, column: 83, scope: !9700)
!9715 = !DILocation(line: 79, column: 121, scope: !9700)
!9716 = !DILocation(line: 80, column: 49, scope: !9700)
!9717 = !DILocation(line: 80, column: 81, scope: !9700)
!9718 = !DILocation(line: 78, column: 22, scope: !9700)
!9719 = !DILocation(line: 81, column: 1, scope: !9700)
!9720 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !9721, file: !9721, line: 43, type: !9722, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !9724)
!9721 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9722 = !DISubroutineType(types: !9723)
!9723 = !{!415, !2764}
!9724 = !{!9725}
!9725 = !DILocalVariable(name: "base", arg: 1, scope: !9720, file: !9721, line: 43, type: !2764)
!9726 = !DILocation(line: 0, scope: !9720)
!9727 = !DILocation(line: 45, column: 9, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9720, file: !9721, line: 45, column: 9)
!9729 = !DILocation(line: 45, column: 9, scope: !9720)
!9730 = !DILocation(line: 48, column: 26, scope: !9720)
!9731 = !DILocation(line: 48, column: 45, scope: !9720)
!9732 = !DILocation(line: 48, column: 23, scope: !9720)
!9733 = !DILocation(line: 48, column: 5, scope: !9720)
!9734 = !DILocation(line: 49, column: 1, scope: !9720)
!9735 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2755, file: !2755, line: 220, type: !9736, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !9738)
!9736 = !DISubroutineType(types: !9737)
!9737 = !{!583, !2764, !415}
!9738 = !{!9739, !9740}
!9739 = !DILocalVariable(name: "base", arg: 1, scope: !9735, file: !2755, line: 220, type: !2764)
!9740 = !DILocalVariable(name: "pllControl", arg: 2, scope: !9735, file: !2755, line: 220, type: !415)
!9741 = !DILocation(line: 0, scope: !9735)
!9742 = !DILocation(line: 222, column: 19, scope: !9735)
!9743 = !DILocation(line: 222, column: 58, scope: !9735)
!9744 = !DILocation(line: 222, column: 12, scope: !9735)
!9745 = !DILocation(line: 222, column: 5, scope: !9735)
!9746 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !9721, file: !9721, line: 57, type: !9722, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !9747)
!9747 = !{!9748}
!9748 = !DILocalVariable(name: "base", arg: 1, scope: !9746, file: !9721, line: 57, type: !2764)
!9749 = !DILocation(line: 0, scope: !9746)
!9750 = !DILocation(line: 59, column: 9, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9746, file: !9721, line: 59, column: 9)
!9752 = !DILocation(line: 59, column: 9, scope: !9746)
!9753 = !DILocation(line: 62, column: 9, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9746, file: !9721, line: 62, column: 9)
!9755 = !DILocation(line: 62, column: 28, scope: !9754)
!9756 = !DILocation(line: 0, scope: !9754)
!9757 = !DILocation(line: 66, column: 1, scope: !9746)
!9758 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !9721, file: !9721, line: 74, type: !9722, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !9759)
!9759 = !{!9760, !9761, !9762, !9763}
!9760 = !DILocalVariable(name: "base", arg: 1, scope: !9758, file: !9721, line: 74, type: !2764)
!9761 = !DILocalVariable(name: "divSelect", scope: !9758, file: !9721, line: 76, type: !421)
!9762 = !DILocalVariable(name: "divTestSelect", scope: !9758, file: !9721, line: 76, type: !421)
!9763 = !DILocalVariable(name: "factor", scope: !9758, file: !9721, line: 77, type: !2827)
!9764 = !DILocation(line: 0, scope: !9758)
!9765 = !DILocation(line: 79, column: 9, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9758, file: !9721, line: 79, column: 9)
!9767 = !DILocation(line: 79, column: 9, scope: !9758)
!9768 = !DILocation(line: 82, column: 17, scope: !9758)
!9769 = !DILocation(line: 83, column: 22, scope: !9758)
!9770 = !DILocation(line: 83, column: 100, scope: !9758)
!9771 = !DILocation(line: 83, column: 21, scope: !9758)
!9772 = !DILocation(line: 86, column: 5, scope: !9758)
!9773 = !DILocation(line: 100, column: 9, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9758, file: !9721, line: 100, column: 9)
!9775 = !DILocation(line: 100, column: 41, scope: !9774)
!9776 = !DILocation(line: 100, column: 9, scope: !9758)
!9777 = !DILocation(line: 102, column: 27, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9774, file: !9721, line: 101, column: 5)
!9779 = !DILocation(line: 102, column: 59, scope: !9778)
!9780 = !DILocation(line: 102, column: 19, scope: !9778)
!9781 = !DILocation(line: 103, column: 27, scope: !9778)
!9782 = !DILocation(line: 103, column: 62, scope: !9778)
!9783 = !DILocation(line: 103, column: 19, scope: !9778)
!9784 = !DILocation(line: 102, column: 95, scope: !9778)
!9785 = !DILocation(line: 104, column: 27, scope: !9778)
!9786 = !DILocation(line: 104, column: 60, scope: !9778)
!9787 = !DILocation(line: 104, column: 19, scope: !9778)
!9788 = !DILocation(line: 103, column: 98, scope: !9778)
!9789 = !DILocation(line: 105, column: 39, scope: !9778)
!9790 = !DILocation(line: 105, column: 27, scope: !9778)
!9791 = !DILocation(line: 105, column: 60, scope: !9778)
!9792 = !DILocation(line: 105, column: 70, scope: !9778)
!9793 = !DILocation(line: 105, column: 57, scope: !9778)
!9794 = !DILocation(line: 105, column: 16, scope: !9778)
!9795 = !DILocation(line: 105, column: 9, scope: !9778)
!9796 = !DILocation(line: 109, column: 28, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9774, file: !9721, line: 108, column: 5)
!9798 = !DILocation(line: 109, column: 48, scope: !9797)
!9799 = !DILocation(line: 109, column: 46, scope: !9797)
!9800 = !DILocation(line: 109, column: 9, scope: !9797)
!9801 = !DILocation(line: 111, column: 1, scope: !9758)
!9802 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !9721, file: !9721, line: 119, type: !9722, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !9803)
!9803 = !{!9804}
!9804 = !DILocalVariable(name: "base", arg: 1, scope: !9802, file: !9721, line: 119, type: !2764)
!9805 = !DILocation(line: 0, scope: !9802)
!9806 = !DILocation(line: 121, column: 9, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9802, file: !9721, line: 121, column: 9)
!9808 = !DILocation(line: 125, column: 1, scope: !9802)
!9809 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !9721, file: !9721, line: 133, type: !9722, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !9810)
!9810 = !{!9811, !9812, !9813, !9814, !9815}
!9811 = !DILocalVariable(name: "base", arg: 1, scope: !9809, file: !9721, line: 133, type: !2764)
!9812 = !DILocalVariable(name: "divSelect", scope: !9809, file: !9721, line: 135, type: !421)
!9813 = !DILocalVariable(name: "divPostSelect", scope: !9809, file: !9721, line: 135, type: !421)
!9814 = !DILocalVariable(name: "divTestSelect", scope: !9809, file: !9721, line: 135, type: !421)
!9815 = !DILocalVariable(name: "factor", scope: !9809, file: !9721, line: 136, type: !2827)
!9816 = !DILocation(line: 0, scope: !9809)
!9817 = !DILocation(line: 138, column: 9, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9809, file: !9721, line: 138, column: 9)
!9819 = !DILocation(line: 138, column: 9, scope: !9809)
!9820 = !DILocation(line: 141, column: 17, scope: !9809)
!9821 = !DILocation(line: 142, column: 22, scope: !9809)
!9822 = !DILocation(line: 142, column: 101, scope: !9809)
!9823 = !DILocation(line: 142, column: 21, scope: !9809)
!9824 = !DILocation(line: 144, column: 22, scope: !9809)
!9825 = !DILocation(line: 144, column: 104, scope: !9809)
!9826 = !DILocation(line: 144, column: 21, scope: !9809)
!9827 = !DILocation(line: 147, column: 5, scope: !9809)
!9828 = !DILocation(line: 161, column: 5, scope: !9809)
!9829 = !DILocation(line: 175, column: 9, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9809, file: !9721, line: 175, column: 9)
!9831 = !DILocation(line: 175, column: 43, scope: !9830)
!9832 = !DILocation(line: 175, column: 9, scope: !9809)
!9833 = !DILocation(line: 177, column: 27, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9830, file: !9721, line: 176, column: 5)
!9835 = !DILocation(line: 177, column: 61, scope: !9834)
!9836 = !DILocation(line: 177, column: 19, scope: !9834)
!9837 = !DILocation(line: 178, column: 27, scope: !9834)
!9838 = !DILocation(line: 178, column: 64, scope: !9834)
!9839 = !DILocation(line: 178, column: 19, scope: !9834)
!9840 = !DILocation(line: 177, column: 99, scope: !9834)
!9841 = !DILocation(line: 179, column: 27, scope: !9834)
!9842 = !DILocation(line: 179, column: 62, scope: !9834)
!9843 = !DILocation(line: 179, column: 19, scope: !9834)
!9844 = !DILocation(line: 178, column: 102, scope: !9834)
!9845 = !DILocation(line: 180, column: 40, scope: !9834)
!9846 = !DILocation(line: 180, column: 58, scope: !9834)
!9847 = !DILocation(line: 180, column: 27, scope: !9834)
!9848 = !DILocation(line: 180, column: 79, scope: !9834)
!9849 = !DILocation(line: 180, column: 89, scope: !9834)
!9850 = !DILocation(line: 180, column: 76, scope: !9834)
!9851 = !DILocation(line: 180, column: 16, scope: !9834)
!9852 = !DILocation(line: 180, column: 9, scope: !9834)
!9853 = !DILocation(line: 184, column: 29, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9830, file: !9721, line: 183, column: 5)
!9855 = !DILocation(line: 184, column: 47, scope: !9854)
!9856 = !DILocation(line: 184, column: 67, scope: !9854)
!9857 = !DILocation(line: 184, column: 65, scope: !9854)
!9858 = !DILocation(line: 184, column: 9, scope: !9854)
!9859 = !DILocation(line: 186, column: 1, scope: !9809)
!9860 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !9721, file: !9721, line: 194, type: !9722, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !9861)
!9861 = !{!9862, !9863, !9864, !9865, !9866}
!9862 = !DILocalVariable(name: "base", arg: 1, scope: !9860, file: !9721, line: 194, type: !2764)
!9863 = !DILocalVariable(name: "divSelect", scope: !9860, file: !9721, line: 196, type: !421)
!9864 = !DILocalVariable(name: "divPostSelect", scope: !9860, file: !9721, line: 196, type: !421)
!9865 = !DILocalVariable(name: "divTestSelect", scope: !9860, file: !9721, line: 196, type: !421)
!9866 = !DILocalVariable(name: "factor", scope: !9860, file: !9721, line: 197, type: !2827)
!9867 = !DILocation(line: 0, scope: !9860)
!9868 = !DILocation(line: 199, column: 9, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9860, file: !9721, line: 199, column: 9)
!9870 = !DILocation(line: 199, column: 9, scope: !9860)
!9871 = !DILocation(line: 202, column: 17, scope: !9860)
!9872 = !DILocation(line: 203, column: 22, scope: !9860)
!9873 = !DILocation(line: 203, column: 101, scope: !9860)
!9874 = !DILocation(line: 203, column: 21, scope: !9860)
!9875 = !DILocation(line: 205, column: 22, scope: !9860)
!9876 = !DILocation(line: 205, column: 104, scope: !9860)
!9877 = !DILocation(line: 205, column: 21, scope: !9860)
!9878 = !DILocation(line: 208, column: 5, scope: !9860)
!9879 = !DILocation(line: 222, column: 5, scope: !9860)
!9880 = !DILocation(line: 236, column: 9, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9860, file: !9721, line: 236, column: 9)
!9882 = !DILocation(line: 236, column: 43, scope: !9881)
!9883 = !DILocation(line: 236, column: 9, scope: !9860)
!9884 = !DILocation(line: 238, column: 27, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9881, file: !9721, line: 237, column: 5)
!9886 = !DILocation(line: 238, column: 61, scope: !9885)
!9887 = !DILocation(line: 238, column: 19, scope: !9885)
!9888 = !DILocation(line: 239, column: 27, scope: !9885)
!9889 = !DILocation(line: 239, column: 64, scope: !9885)
!9890 = !DILocation(line: 239, column: 19, scope: !9885)
!9891 = !DILocation(line: 238, column: 99, scope: !9885)
!9892 = !DILocation(line: 240, column: 27, scope: !9885)
!9893 = !DILocation(line: 240, column: 62, scope: !9885)
!9894 = !DILocation(line: 240, column: 19, scope: !9885)
!9895 = !DILocation(line: 239, column: 102, scope: !9885)
!9896 = !DILocation(line: 241, column: 40, scope: !9885)
!9897 = !DILocation(line: 241, column: 58, scope: !9885)
!9898 = !DILocation(line: 241, column: 27, scope: !9885)
!9899 = !DILocation(line: 241, column: 79, scope: !9885)
!9900 = !DILocation(line: 241, column: 89, scope: !9885)
!9901 = !DILocation(line: 241, column: 76, scope: !9885)
!9902 = !DILocation(line: 241, column: 16, scope: !9885)
!9903 = !DILocation(line: 241, column: 9, scope: !9885)
!9904 = !DILocation(line: 245, column: 29, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9881, file: !9721, line: 244, column: 5)
!9906 = !DILocation(line: 245, column: 47, scope: !9905)
!9907 = !DILocation(line: 245, column: 67, scope: !9905)
!9908 = !DILocation(line: 245, column: 65, scope: !9905)
!9909 = !DILocation(line: 245, column: 9, scope: !9905)
!9910 = !DILocation(line: 247, column: 1, scope: !9860)
!9911 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !9721, file: !9721, line: 255, type: !9912, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !9914)
!9912 = !DISubroutineType(types: !9913)
!9913 = !{!415, !2764, !415}
!9914 = !{!9915, !9916, !9917, !9918}
!9915 = !DILocalVariable(name: "base", arg: 1, scope: !9911, file: !9721, line: 255, type: !2764)
!9916 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !9911, file: !9721, line: 255, type: !415)
!9917 = !DILocalVariable(name: "main", scope: !9911, file: !9721, line: 257, type: !415)
!9918 = !DILocalVariable(name: "frac", scope: !9911, file: !9721, line: 257, type: !415)
!9919 = !DILocation(line: 0, scope: !9911)
!9920 = !DILocation(line: 262, column: 12, scope: !9911)
!9921 = !DILocation(line: 263, column: 12, scope: !9911)
!9922 = !DILocation(line: 265, column: 17, scope: !9911)
!9923 = !DILocation(line: 265, column: 24, scope: !9911)
!9924 = !DILocation(line: 265, column: 5, scope: !9911)
!9925 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2755, file: !2755, line: 373, type: !9912, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !9926)
!9926 = !{!9927, !9928}
!9927 = !DILocalVariable(name: "base", arg: 1, scope: !9925, file: !2755, line: 373, type: !2764)
!9928 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !9925, file: !2755, line: 373, type: !415)
!9929 = !DILocation(line: 0, scope: !9925)
!9930 = !DILocation(line: 375, column: 13, scope: !9925)
!9931 = !DILocation(line: 375, column: 52, scope: !9925)
!9932 = !DILocation(line: 375, column: 49, scope: !9925)
!9933 = !DILocation(line: 375, column: 85, scope: !9925)
!9934 = !DILocation(line: 375, column: 5, scope: !9925)
!9935 = distinct !DISubprogram(name: "GPIO_Init", scope: !9936, file: !9936, line: 47, type: !9937, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !9961)
!9936 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9937 = !DISubroutineType(types: !9938)
!9938 = !{null, !9939, !9951}
!9939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9940, size: 32)
!9940 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !410, line: 19729, baseType: !9941)
!9941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 19720, size: 256, elements: !9942)
!9942 = !{!9943, !9944, !9945, !9946, !9947, !9948, !9949, !9950}
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !9941, file: !410, line: 19721, baseType: !414, size: 32)
!9944 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !9941, file: !410, line: 19722, baseType: !414, size: 32, offset: 32)
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !9941, file: !410, line: 19723, baseType: !488, size: 32, offset: 64)
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !9941, file: !410, line: 19724, baseType: !414, size: 32, offset: 96)
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !9941, file: !410, line: 19725, baseType: !414, size: 32, offset: 128)
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !9941, file: !410, line: 19726, baseType: !414, size: 32, offset: 160)
!9949 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !9941, file: !410, line: 19727, baseType: !414, size: 32, offset: 192)
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !9941, file: !410, line: 19728, baseType: !414, size: 32, offset: 224)
!9951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9952, size: 32)
!9952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9953)
!9953 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !938, line: 78, baseType: !9954)
!9954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !938, line: 73, size: 96, elements: !9955)
!9955 = !{!9956, !9957, !9959}
!9956 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !9954, file: !938, line: 75, baseType: !415, size: 32)
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9954, file: !938, line: 76, baseType: !9958, size: 32, offset: 32)
!9958 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !938, line: 53, baseType: !2831)
!9959 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !9954, file: !938, line: 77, baseType: !9960, size: 32, offset: 64)
!9960 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !938, line: 63, baseType: !2835)
!9961 = !{!9962, !9963, !9964, !9965}
!9962 = !DILocalVariable(name: "base", arg: 1, scope: !9935, file: !9936, line: 47, type: !9939)
!9963 = !DILocalVariable(name: "initConfig", arg: 2, scope: !9935, file: !9936, line: 47, type: !9951)
!9964 = !DILocalVariable(name: "pin", scope: !9935, file: !9936, line: 49, type: !415)
!9965 = !DILocalVariable(name: "icr", scope: !9935, file: !9936, line: 50, type: !539)
!9966 = !DILocation(line: 0, scope: !9935)
!9967 = !DILocation(line: 53, column: 5, scope: !9935)
!9968 = !DILocation(line: 53, column: 24, scope: !9935)
!9969 = !DILocation(line: 54, column: 2, scope: !9935)
!9970 = !DILocation(line: 54, column: 26, scope: !9935)
!9971 = !DILocation(line: 57, column: 23, scope: !9935)
!9972 = !DILocation(line: 60, column: 21, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9935, file: !9936, line: 60, column: 9)
!9974 = !DILocation(line: 60, column: 31, scope: !9973)
!9975 = !DILocation(line: 0, scope: !9973)
!9976 = !DILocation(line: 60, column: 9, scope: !9935)
!9977 = !DILocation(line: 61, column: 9, scope: !9973)
!9978 = !DILocation(line: 61, column: 29, scope: !9973)
!9979 = !DILocation(line: 63, column: 32, scope: !9973)
!9980 = !DILocation(line: 63, column: 9, scope: !9973)
!9981 = !DILocation(line: 63, column: 29, scope: !9973)
!9982 = !DILocation(line: 66, column: 12, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9935, file: !9936, line: 66, column: 8)
!9984 = !DILocation(line: 66, column: 8, scope: !9935)
!9985 = !DILocation(line: 73, column: 24, scope: !9935)
!9986 = !DILocation(line: 73, column: 5, scope: !9935)
!9987 = !DILocation(line: 77, column: 30, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9989, file: !9936, line: 76, column: 9)
!9989 = distinct !DILexicalBlock(scope: !9935, file: !9936, line: 74, column: 5)
!9990 = !DILocation(line: 77, column: 26, scope: !9988)
!9991 = !DILocation(line: 77, column: 21, scope: !9988)
!9992 = !DILocation(line: 77, column: 18, scope: !9988)
!9993 = !DILocation(line: 78, column: 13, scope: !9988)
!9994 = !DILocation(line: 82, column: 21, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9989, file: !9936, line: 81, column: 9)
!9996 = !DILocation(line: 82, column: 38, scope: !9995)
!9997 = !DILocation(line: 82, column: 34, scope: !9995)
!9998 = !DILocation(line: 82, column: 29, scope: !9995)
!9999 = !DILocation(line: 82, column: 26, scope: !9995)
!10000 = !DILocation(line: 82, column: 53, scope: !9995)
!10001 = !DILocation(line: 82, column: 47, scope: !9995)
!10002 = !DILocation(line: 83, column: 13, scope: !9995)
!10003 = !DILocation(line: 87, column: 21, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9989, file: !9936, line: 86, column: 9)
!10005 = !DILocation(line: 87, column: 38, scope: !10004)
!10006 = !DILocation(line: 87, column: 34, scope: !10004)
!10007 = !DILocation(line: 87, column: 29, scope: !10004)
!10008 = !DILocation(line: 87, column: 26, scope: !10004)
!10009 = !DILocation(line: 87, column: 53, scope: !10004)
!10010 = !DILocation(line: 87, column: 47, scope: !10004)
!10011 = !DILocation(line: 88, column: 13, scope: !10004)
!10012 = !DILocation(line: 92, column: 29, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9989, file: !9936, line: 91, column: 9)
!10014 = !DILocation(line: 92, column: 25, scope: !10013)
!10015 = !DILocation(line: 92, column: 18, scope: !10013)
!10016 = !DILocation(line: 93, column: 13, scope: !10013)
!10017 = !DILocation(line: 0, scope: !9989)
!10018 = !DILocation(line: 100, column: 1, scope: !9935)
!10019 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !9936, file: !9936, line: 111, type: !10020, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !10023)
!10020 = !DISubroutineType(types: !10021)
!10021 = !{null, !9939, !415, !10022}
!10022 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !938, line: 70, baseType: !937)
!10023 = !{!10024, !10025, !10026}
!10024 = !DILocalVariable(name: "base", arg: 1, scope: !10019, file: !9936, line: 111, type: !9939)
!10025 = !DILocalVariable(name: "pin", arg: 2, scope: !10019, file: !9936, line: 111, type: !415)
!10026 = !DILocalVariable(name: "pinVal", arg: 3, scope: !10019, file: !9936, line: 111, type: !10022)
!10027 = !DILocation(line: 0, scope: !10019)
!10028 = !DILocation(line: 114, column: 16, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10019, file: !9936, line: 114, column: 9)
!10030 = !DILocation(line: 0, scope: !10029)
!10031 = !DILocation(line: 114, column: 9, scope: !10019)
!10032 = !DILocation(line: 116, column: 9, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10029, file: !9936, line: 115, column: 5)
!10034 = !DILocation(line: 116, column: 27, scope: !10033)
!10035 = !DILocation(line: 117, column: 5, scope: !10033)
!10036 = !DILocation(line: 120, column: 30, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10029, file: !9936, line: 119, column: 5)
!10038 = !DILocation(line: 120, column: 9, scope: !10037)
!10039 = !DILocation(line: 120, column: 27, scope: !10037)
!10040 = !DILocation(line: 122, column: 1, scope: !10019)
!10041 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !9936, file: !9936, line: 133, type: !10042, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !10044)
!10042 = !DISubroutineType(types: !10043)
!10043 = !{null, !9939, !415, !583}
!10044 = !{!10045, !10046, !10047}
!10045 = !DILocalVariable(name: "base", arg: 1, scope: !10041, file: !9936, line: 133, type: !9939)
!10046 = !DILocalVariable(name: "pin", arg: 2, scope: !10041, file: !9936, line: 133, type: !415)
!10047 = !DILocalVariable(name: "enable", arg: 3, scope: !10041, file: !9936, line: 133, type: !583)
!10048 = !DILocation(line: 0, scope: !10041)
!10049 = !DILocation(line: 0, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10041, file: !9936, line: 137, column: 8)
!10051 = !DILocation(line: 137, column: 8, scope: !10041)
!10052 = !DILocation(line: 138, column: 9, scope: !10050)
!10053 = !DILocation(line: 138, column: 28, scope: !10050)
!10054 = !DILocation(line: 140, column: 31, scope: !10050)
!10055 = !DILocation(line: 140, column: 9, scope: !10050)
!10056 = !DILocation(line: 140, column: 28, scope: !10050)
!10057 = !DILocation(line: 141, column: 1, scope: !10041)
!10058 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !9936, file: !9936, line: 150, type: !10042, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !10059)
!10059 = !{!10060, !10061, !10062}
!10060 = !DILocalVariable(name: "base", arg: 1, scope: !10058, file: !9936, line: 150, type: !9939)
!10061 = !DILocalVariable(name: "pin", arg: 2, scope: !10058, file: !9936, line: 150, type: !415)
!10062 = !DILocalVariable(name: "enable", arg: 3, scope: !10058, file: !9936, line: 150, type: !583)
!10063 = !DILocation(line: 0, scope: !10058)
!10064 = !DILocation(line: 0, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10058, file: !9936, line: 154, column: 8)
!10066 = !DILocation(line: 154, column: 8, scope: !10058)
!10067 = !DILocation(line: 155, column: 9, scope: !10065)
!10068 = !DILocation(line: 155, column: 33, scope: !10065)
!10069 = !DILocation(line: 157, column: 36, scope: !10065)
!10070 = !DILocation(line: 157, column: 9, scope: !10065)
!10071 = !DILocation(line: 157, column: 33, scope: !10065)
!10072 = !DILocation(line: 158, column: 1, scope: !10058)
!10073 = distinct !DISubprogram(name: "UART_Init", scope: !10074, file: !10074, line: 47, type: !10075, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10111)
!10074 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10075 = !DISubroutineType(types: !10076)
!10076 = !{null, !10077, !10100}
!10077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10078, size: 32)
!10078 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !410, line: 41342, baseType: !10079)
!10079 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 41322, size: 1504, elements: !10080)
!10080 = !{!10081, !10082, !10083, !10084, !10085, !10086, !10087, !10088, !10089, !10090, !10091, !10092, !10093, !10094, !10095, !10096, !10097, !10098, !10099}
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !10079, file: !410, line: 41323, baseType: !488, size: 32)
!10082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10079, file: !410, line: 41324, baseType: !1293, size: 480, offset: 32)
!10083 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !10079, file: !410, line: 41325, baseType: !414, size: 32, offset: 512)
!10084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10079, file: !410, line: 41326, baseType: !1293, size: 480, offset: 544)
!10085 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !10079, file: !410, line: 41327, baseType: !414, size: 32, offset: 1024)
!10086 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !10079, file: !410, line: 41328, baseType: !414, size: 32, offset: 1056)
!10087 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !10079, file: !410, line: 41329, baseType: !414, size: 32, offset: 1088)
!10088 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !10079, file: !410, line: 41330, baseType: !414, size: 32, offset: 1120)
!10089 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !10079, file: !410, line: 41331, baseType: !414, size: 32, offset: 1152)
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !10079, file: !410, line: 41332, baseType: !414, size: 32, offset: 1184)
!10091 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !10079, file: !410, line: 41333, baseType: !414, size: 32, offset: 1216)
!10092 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !10079, file: !410, line: 41334, baseType: !414, size: 32, offset: 1248)
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !10079, file: !410, line: 41335, baseType: !414, size: 32, offset: 1280)
!10094 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !10079, file: !410, line: 41336, baseType: !414, size: 32, offset: 1312)
!10095 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !10079, file: !410, line: 41337, baseType: !414, size: 32, offset: 1344)
!10096 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !10079, file: !410, line: 41338, baseType: !488, size: 32, offset: 1376)
!10097 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !10079, file: !410, line: 41339, baseType: !414, size: 32, offset: 1408)
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !10079, file: !410, line: 41340, baseType: !414, size: 32, offset: 1440)
!10099 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !10079, file: !410, line: 41341, baseType: !414, size: 32, offset: 1472)
!10100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10101, size: 32)
!10101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10102)
!10102 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1123, line: 57, baseType: !10103)
!10103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1123, line: 49, size: 192, elements: !10104)
!10104 = !{!10105, !10106, !10107, !10108, !10109, !10110}
!10105 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !10103, file: !1123, line: 51, baseType: !415, size: 32)
!10106 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !10103, file: !1123, line: 52, baseType: !415, size: 32, offset: 32)
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !10103, file: !1123, line: 53, baseType: !415, size: 32, offset: 64)
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !10103, file: !1123, line: 54, baseType: !415, size: 32, offset: 96)
!10109 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10103, file: !1123, line: 55, baseType: !415, size: 32, offset: 128)
!10110 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10103, file: !1123, line: 56, baseType: !415, size: 32, offset: 160)
!10111 = !{!10112, !10113}
!10112 = !DILocalVariable(name: "base", arg: 1, scope: !10073, file: !10074, line: 47, type: !10077)
!10113 = !DILocalVariable(name: "initConfig", arg: 2, scope: !10073, file: !10074, line: 47, type: !10100)
!10114 = !DILocation(line: 0, scope: !10073)
!10115 = !DILocation(line: 52, column: 5, scope: !10073)
!10116 = !DILocation(line: 52, column: 25, scope: !10073)
!10117 = !DILocation(line: 55, column: 5, scope: !10073)
!10118 = !DILocation(line: 60, column: 41, scope: !10073)
!10119 = !DILocation(line: 61, column: 41, scope: !10073)
!10120 = !DILocation(line: 62, column: 41, scope: !10073)
!10121 = !DILocation(line: 63, column: 41, scope: !10073)
!10122 = !DILocation(line: 60, column: 5, scope: !10073)
!10123 = !DILocation(line: 60, column: 25, scope: !10073)
!10124 = !DILocation(line: 61, column: 52, scope: !10073)
!10125 = !DILocation(line: 62, column: 52, scope: !10073)
!10126 = !DILocation(line: 63, column: 52, scope: !10073)
!10127 = !DILocation(line: 68, column: 5, scope: !10073)
!10128 = !DILocation(line: 68, column: 25, scope: !10073)
!10129 = !DILocation(line: 72, column: 40, scope: !10073)
!10130 = !DILocation(line: 72, column: 63, scope: !10073)
!10131 = !DILocation(line: 72, column: 5, scope: !10073)
!10132 = !DILocation(line: 73, column: 1, scope: !10073)
!10133 = distinct !DISubprogram(name: "UART_Deinit", scope: !10074, file: !10074, line: 82, type: !10134, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10136)
!10134 = !DISubroutineType(types: !10135)
!10135 = !{null, !10077}
!10136 = !{!10137}
!10137 = !DILocalVariable(name: "base", arg: 1, scope: !10133, file: !10074, line: 82, type: !10077)
!10138 = !DILocation(line: 0, scope: !10133)
!10139 = !DILocation(line: 85, column: 5, scope: !10133)
!10140 = !DILocation(line: 85, column: 25, scope: !10133)
!10141 = !DILocation(line: 88, column: 26, scope: !10133)
!10142 = !DILocation(line: 89, column: 5, scope: !10133)
!10143 = !DILocation(line: 89, column: 26, scope: !10133)
!10144 = !DILocation(line: 90, column: 5, scope: !10133)
!10145 = !DILocation(line: 90, column: 26, scope: !10133)
!10146 = !DILocation(line: 93, column: 5, scope: !10133)
!10147 = !DILocation(line: 93, column: 26, scope: !10133)
!10148 = !DILocation(line: 94, column: 5, scope: !10133)
!10149 = !DILocation(line: 94, column: 26, scope: !10133)
!10150 = !DILocation(line: 95, column: 5, scope: !10133)
!10151 = !DILocation(line: 95, column: 26, scope: !10133)
!10152 = !DILocation(line: 96, column: 5, scope: !10133)
!10153 = !DILocation(line: 96, column: 26, scope: !10133)
!10154 = !DILocation(line: 97, column: 5, scope: !10133)
!10155 = !DILocation(line: 97, column: 26, scope: !10133)
!10156 = !DILocation(line: 98, column: 5, scope: !10133)
!10157 = !DILocation(line: 98, column: 26, scope: !10133)
!10158 = !DILocation(line: 99, column: 5, scope: !10133)
!10159 = !DILocation(line: 99, column: 26, scope: !10133)
!10160 = !DILocation(line: 103, column: 25, scope: !10133)
!10161 = !DILocation(line: 104, column: 5, scope: !10133)
!10162 = !DILocation(line: 104, column: 14, scope: !10133)
!10163 = !DILocation(line: 104, column: 34, scope: !10133)
!10164 = !DILocation(line: 104, column: 12, scope: !10133)
!10165 = distinct !{!10165, !10161, !10166}
!10166 = !DILocation(line: 104, column: 57, scope: !10133)
!10167 = !DILocation(line: 105, column: 1, scope: !10133)
!10168 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !10074, file: !10074, line: 113, type: !10169, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{null, !10077, !415, !415}
!10171 = !{!10172, !10173, !10174, !10175, !10176, !10177, !10178, !10179, !10180, !10183, !10184}
!10172 = !DILocalVariable(name: "base", arg: 1, scope: !10168, file: !10074, line: 113, type: !10077)
!10173 = !DILocalVariable(name: "clockRate", arg: 2, scope: !10168, file: !10074, line: 113, type: !415)
!10174 = !DILocalVariable(name: "baudRate", arg: 3, scope: !10168, file: !10074, line: 113, type: !415)
!10175 = !DILocalVariable(name: "numerator", scope: !10168, file: !10074, line: 115, type: !415)
!10176 = !DILocalVariable(name: "denominator", scope: !10168, file: !10074, line: 116, type: !415)
!10177 = !DILocalVariable(name: "divisor", scope: !10168, file: !10074, line: 117, type: !415)
!10178 = !DILocalVariable(name: "refFreqDiv", scope: !10168, file: !10074, line: 118, type: !415)
!10179 = !DILocalVariable(name: "divider", scope: !10168, file: !10074, line: 119, type: !415)
!10180 = !DILocalVariable(name: "m", scope: !10181, file: !10074, line: 141, type: !415)
!10181 = distinct !DILexicalBlock(scope: !10182, file: !10074, line: 140, column: 5)
!10182 = distinct !DILexicalBlock(scope: !10168, file: !10074, line: 138, column: 9)
!10183 = !DILocalVariable(name: "n", scope: !10181, file: !10074, line: 142, type: !415)
!10184 = !DILocalVariable(name: "max", scope: !10181, file: !10074, line: 143, type: !415)
!10185 = !DILocation(line: 0, scope: !10168)
!10186 = !DILocation(line: 123, column: 28, scope: !10168)
!10187 = !DILocation(line: 126, column: 24, scope: !10168)
!10188 = !DILocation(line: 126, column: 5, scope: !10168)
!10189 = !DILocation(line: 129, column: 33, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10168, file: !10074, line: 127, column: 5)
!10191 = distinct !{!10191, !10188, !10192}
!10192 = !DILocation(line: 131, column: 5, scope: !10168)
!10193 = !DILocation(line: 133, column: 27, scope: !10168)
!10194 = !DILocation(line: 134, column: 35, scope: !10168)
!10195 = !DILocation(line: 138, column: 20, scope: !10182)
!10196 = !DILocation(line: 138, column: 48, scope: !10182)
!10197 = !DILocation(line: 141, column: 33, scope: !10181)
!10198 = !DILocation(line: 141, column: 38, scope: !10181)
!10199 = !DILocation(line: 141, column: 65, scope: !10181)
!10200 = !DILocation(line: 0, scope: !10181)
!10201 = !DILocation(line: 142, column: 35, scope: !10181)
!10202 = !DILocation(line: 142, column: 40, scope: !10181)
!10203 = !DILocation(line: 142, column: 61, scope: !10181)
!10204 = !DILocation(line: 143, column: 26, scope: !10181)
!10205 = !DILocation(line: 143, column: 24, scope: !10181)
!10206 = !DILocation(line: 144, column: 19, scope: !10181)
!10207 = !DILocation(line: 145, column: 21, scope: !10181)
!10208 = !DILocation(line: 146, column: 15, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10181, file: !10074, line: 146, column: 13)
!10210 = !DILocation(line: 146, column: 13, scope: !10181)
!10211 = !DILocation(line: 148, column: 15, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10181, file: !10074, line: 148, column: 13)
!10213 = !DILocation(line: 148, column: 13, scope: !10181)
!10214 = !DILocation(line: 150, column: 5, scope: !10181)
!10215 = !DILocation(line: 151, column: 26, scope: !10168)
!10216 = !DILocation(line: 151, column: 31, scope: !10168)
!10217 = !DILocation(line: 151, column: 52, scope: !10168)
!10218 = !DILocation(line: 153, column: 5, scope: !10168)
!10219 = !DILocation(line: 0, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10168, file: !10074, line: 154, column: 5)
!10221 = !DILocation(line: 180, column: 5, scope: !10168)
!10222 = !DILocation(line: 180, column: 25, scope: !10168)
!10223 = !DILocation(line: 181, column: 25, scope: !10168)
!10224 = !DILocation(line: 182, column: 27, scope: !10168)
!10225 = !DILocation(line: 182, column: 5, scope: !10168)
!10226 = !DILocation(line: 182, column: 25, scope: !10168)
!10227 = !DILocation(line: 183, column: 27, scope: !10168)
!10228 = !DILocation(line: 183, column: 5, scope: !10168)
!10229 = !DILocation(line: 183, column: 25, scope: !10168)
!10230 = !DILocation(line: 184, column: 28, scope: !10168)
!10231 = !DILocation(line: 184, column: 5, scope: !10168)
!10232 = !DILocation(line: 184, column: 26, scope: !10168)
!10233 = !DILocation(line: 185, column: 1, scope: !10168)
!10234 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !10074, file: !10074, line: 194, type: !10235, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10237)
!10235 = !DISubroutineType(types: !10236)
!10236 = !{null, !10077, !415, !583}
!10237 = !{!10238, !10239, !10240}
!10238 = !DILocalVariable(name: "base", arg: 1, scope: !10234, file: !10074, line: 194, type: !10077)
!10239 = !DILocalVariable(name: "direction", arg: 2, scope: !10234, file: !10074, line: 194, type: !415)
!10240 = !DILocalVariable(name: "invert", arg: 3, scope: !10234, file: !10074, line: 194, type: !583)
!10241 = !DILocation(line: 0, scope: !10234)
!10242 = !DILocation(line: 0, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10234, file: !10074, line: 198, column: 9)
!10244 = !DILocation(line: 198, column: 9, scope: !10234)
!10245 = !DILocation(line: 200, column: 13, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10243, file: !10074, line: 199, column: 5)
!10247 = !DILocation(line: 201, column: 13, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10246, file: !10074, line: 200, column: 13)
!10249 = !DILocation(line: 201, column: 33, scope: !10248)
!10250 = !DILocation(line: 202, column: 23, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10246, file: !10074, line: 202, column: 13)
!10252 = !DILocation(line: 202, column: 13, scope: !10246)
!10253 = !DILocation(line: 203, column: 13, scope: !10251)
!10254 = !DILocation(line: 203, column: 33, scope: !10251)
!10255 = !DILocation(line: 207, column: 13, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10243, file: !10074, line: 206, column: 5)
!10257 = !DILocation(line: 208, column: 13, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10256, file: !10074, line: 207, column: 13)
!10259 = !DILocation(line: 208, column: 33, scope: !10258)
!10260 = !DILocation(line: 209, column: 23, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10256, file: !10074, line: 209, column: 13)
!10262 = !DILocation(line: 209, column: 13, scope: !10256)
!10263 = !DILocation(line: 210, column: 13, scope: !10261)
!10264 = !DILocation(line: 210, column: 33, scope: !10261)
!10265 = !DILocation(line: 212, column: 1, scope: !10234)
!10266 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !10074, file: !10074, line: 224, type: !10267, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10269)
!10267 = !DISubroutineType(types: !10268)
!10268 = !{null, !10077, !583}
!10269 = !{!10270, !10271}
!10270 = !DILocalVariable(name: "base", arg: 1, scope: !10266, file: !10074, line: 224, type: !10077)
!10271 = !DILocalVariable(name: "enable", arg: 2, scope: !10266, file: !10074, line: 224, type: !583)
!10272 = !DILocation(line: 0, scope: !10266)
!10273 = !DILocation(line: 0, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10266, file: !10074, line: 226, column: 9)
!10275 = !DILocation(line: 226, column: 9, scope: !10266)
!10276 = !DILocation(line: 230, column: 1, scope: !10266)
!10277 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !10074, file: !10074, line: 239, type: !10267, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10278)
!10278 = !{!10279, !10280}
!10279 = !DILocalVariable(name: "base", arg: 1, scope: !10277, file: !10074, line: 239, type: !10077)
!10280 = !DILocalVariable(name: "enable", arg: 2, scope: !10277, file: !10074, line: 239, type: !583)
!10281 = !DILocation(line: 0, scope: !10277)
!10282 = !DILocation(line: 0, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10277, file: !10074, line: 241, column: 9)
!10284 = !DILocation(line: 241, column: 9, scope: !10277)
!10285 = !DILocation(line: 245, column: 1, scope: !10277)
!10286 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !10074, file: !10074, line: 258, type: !10235, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10287)
!10287 = !{!10288, !10289, !10290, !10291, !10292}
!10288 = !DILocalVariable(name: "base", arg: 1, scope: !10286, file: !10074, line: 258, type: !10077)
!10289 = !DILocalVariable(name: "intSource", arg: 2, scope: !10286, file: !10074, line: 258, type: !415)
!10290 = !DILocalVariable(name: "enable", arg: 3, scope: !10286, file: !10074, line: 258, type: !583)
!10291 = !DILocalVariable(name: "uart_reg", scope: !10286, file: !10074, line: 260, type: !539)
!10292 = !DILocalVariable(name: "uart_mask", scope: !10286, file: !10074, line: 261, type: !415)
!10293 = !DILocation(line: 0, scope: !10286)
!10294 = !DILocation(line: 263, column: 29, scope: !10286)
!10295 = !DILocation(line: 263, column: 57, scope: !10286)
!10296 = !DILocation(line: 263, column: 44, scope: !10286)
!10297 = !DILocation(line: 263, column: 16, scope: !10286)
!10298 = !DILocation(line: 264, column: 34, scope: !10286)
!10299 = !DILocation(line: 264, column: 20, scope: !10286)
!10300 = !DILocation(line: 266, column: 9, scope: !10286)
!10301 = !DILocation(line: 267, column: 19, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10286, file: !10074, line: 266, column: 9)
!10303 = !DILocation(line: 267, column: 9, scope: !10302)
!10304 = !DILocation(line: 269, column: 22, scope: !10302)
!10305 = !DILocation(line: 269, column: 19, scope: !10302)
!10306 = !DILocation(line: 0, scope: !10302)
!10307 = !DILocation(line: 270, column: 1, scope: !10286)
!10308 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !10074, file: !10074, line: 299, type: !10309, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10311)
!10309 = !DISubroutineType(types: !10310)
!10310 = !{null, !10077, !415}
!10311 = !{!10312, !10313, !10314, !10315}
!10312 = !DILocalVariable(name: "base", arg: 1, scope: !10308, file: !10074, line: 299, type: !10077)
!10313 = !DILocalVariable(name: "flag", arg: 2, scope: !10308, file: !10074, line: 299, type: !415)
!10314 = !DILocalVariable(name: "uart_reg", scope: !10308, file: !10074, line: 301, type: !539)
!10315 = !DILocalVariable(name: "uart_mask", scope: !10308, file: !10074, line: 302, type: !415)
!10316 = !DILocation(line: 0, scope: !10308)
!10317 = !DILocation(line: 304, column: 29, scope: !10308)
!10318 = !DILocation(line: 304, column: 52, scope: !10308)
!10319 = !DILocation(line: 304, column: 44, scope: !10308)
!10320 = !DILocation(line: 304, column: 16, scope: !10308)
!10321 = !DILocation(line: 305, column: 29, scope: !10308)
!10322 = !DILocation(line: 305, column: 20, scope: !10308)
!10323 = !DILocation(line: 308, column: 15, scope: !10308)
!10324 = !DILocation(line: 309, column: 1, scope: !10308)
!10325 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !10074, file: !10074, line: 322, type: !10235, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10326)
!10326 = !{!10327, !10328, !10329, !10330, !10331}
!10327 = !DILocalVariable(name: "base", arg: 1, scope: !10325, file: !10074, line: 322, type: !10077)
!10328 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !10325, file: !10074, line: 322, type: !415)
!10329 = !DILocalVariable(name: "enable", arg: 3, scope: !10325, file: !10074, line: 322, type: !583)
!10330 = !DILocalVariable(name: "uart_reg", scope: !10325, file: !10074, line: 324, type: !539)
!10331 = !DILocalVariable(name: "uart_mask", scope: !10325, file: !10074, line: 325, type: !415)
!10332 = !DILocation(line: 0, scope: !10325)
!10333 = !DILocation(line: 327, column: 29, scope: !10325)
!10334 = !DILocation(line: 327, column: 57, scope: !10325)
!10335 = !DILocation(line: 327, column: 44, scope: !10325)
!10336 = !DILocation(line: 327, column: 16, scope: !10325)
!10337 = !DILocation(line: 328, column: 34, scope: !10325)
!10338 = !DILocation(line: 328, column: 20, scope: !10325)
!10339 = !DILocation(line: 329, column: 9, scope: !10325)
!10340 = !DILocation(line: 330, column: 19, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10325, file: !10074, line: 329, column: 9)
!10342 = !DILocation(line: 330, column: 9, scope: !10341)
!10343 = !DILocation(line: 332, column: 22, scope: !10341)
!10344 = !DILocation(line: 332, column: 19, scope: !10341)
!10345 = !DILocation(line: 0, scope: !10341)
!10346 = !DILocation(line: 333, column: 1, scope: !10325)
!10347 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !10074, file: !10074, line: 345, type: !10267, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10348)
!10348 = !{!10349, !10350}
!10349 = !DILocalVariable(name: "base", arg: 1, scope: !10347, file: !10074, line: 345, type: !10077)
!10350 = !DILocalVariable(name: "enable", arg: 2, scope: !10347, file: !10074, line: 345, type: !583)
!10351 = !DILocation(line: 0, scope: !10347)
!10352 = !DILocation(line: 0, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10347, file: !10074, line: 347, column: 9)
!10354 = !DILocation(line: 347, column: 9, scope: !10347)
!10355 = !DILocation(line: 351, column: 1, scope: !10347)
!10356 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !10074, file: !10074, line: 362, type: !10267, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10357)
!10357 = !{!10358, !10359}
!10358 = !DILocalVariable(name: "base", arg: 1, scope: !10356, file: !10074, line: 362, type: !10077)
!10359 = !DILocalVariable(name: "enable", arg: 2, scope: !10356, file: !10074, line: 362, type: !583)
!10360 = !DILocation(line: 0, scope: !10356)
!10361 = !DILocation(line: 0, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10356, file: !10074, line: 364, column: 9)
!10363 = !DILocation(line: 364, column: 9, scope: !10356)
!10364 = !DILocation(line: 368, column: 1, scope: !10356)
!10365 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !10074, file: !10074, line: 379, type: !10267, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10366)
!10366 = !{!10367, !10368}
!10367 = !DILocalVariable(name: "base", arg: 1, scope: !10365, file: !10074, line: 379, type: !10077)
!10368 = !DILocalVariable(name: "active", arg: 2, scope: !10365, file: !10074, line: 379, type: !583)
!10369 = !DILocation(line: 0, scope: !10365)
!10370 = !DILocation(line: 0, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10365, file: !10074, line: 381, column: 9)
!10372 = !DILocation(line: 381, column: 9, scope: !10365)
!10373 = !DILocation(line: 385, column: 1, scope: !10365)
!10374 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !10074, file: !10074, line: 394, type: !10309, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10375)
!10375 = !{!10376, !10377}
!10376 = !DILocalVariable(name: "base", arg: 1, scope: !10374, file: !10074, line: 394, type: !10077)
!10377 = !DILocalVariable(name: "mode", arg: 2, scope: !10374, file: !10074, line: 394, type: !415)
!10378 = !DILocation(line: 0, scope: !10374)
!10379 = !DILocation(line: 398, column: 26, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10374, file: !10074, line: 398, column: 9)
!10381 = !DILocation(line: 0, scope: !10380)
!10382 = !DILocation(line: 398, column: 9, scope: !10374)
!10383 = !DILocation(line: 402, column: 1, scope: !10374)
!10384 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !10074, file: !10074, line: 412, type: !10267, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10385)
!10385 = !{!10386, !10387}
!10386 = !DILocalVariable(name: "base", arg: 1, scope: !10384, file: !10074, line: 412, type: !10077)
!10387 = !DILocalVariable(name: "active", arg: 2, scope: !10384, file: !10074, line: 412, type: !583)
!10388 = !DILocation(line: 0, scope: !10384)
!10389 = !DILocation(line: 0, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10384, file: !10074, line: 414, column: 9)
!10391 = !DILocation(line: 414, column: 9, scope: !10384)
!10392 = !DILocation(line: 418, column: 1, scope: !10384)
!10393 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !10074, file: !10074, line: 427, type: !10267, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10394)
!10394 = !{!10395, !10396}
!10395 = !DILocalVariable(name: "base", arg: 1, scope: !10393, file: !10074, line: 427, type: !10077)
!10396 = !DILocalVariable(name: "active", arg: 2, scope: !10393, file: !10074, line: 427, type: !583)
!10397 = !DILocation(line: 0, scope: !10393)
!10398 = !DILocation(line: 0, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10393, file: !10074, line: 429, column: 9)
!10400 = !DILocation(line: 429, column: 9, scope: !10393)
!10401 = !DILocation(line: 433, column: 1, scope: !10393)
!10402 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !10074, file: !10074, line: 442, type: !10267, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10403)
!10403 = !{!10404, !10405}
!10404 = !DILocalVariable(name: "base", arg: 1, scope: !10402, file: !10074, line: 442, type: !10077)
!10405 = !DILocalVariable(name: "active", arg: 2, scope: !10402, file: !10074, line: 442, type: !583)
!10406 = !DILocation(line: 0, scope: !10402)
!10407 = !DILocation(line: 0, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10402, file: !10074, line: 444, column: 9)
!10409 = !DILocation(line: 444, column: 9, scope: !10402)
!10410 = !DILocation(line: 448, column: 1, scope: !10402)
!10411 = distinct !DISubprogram(name: "UART_Putchar9", scope: !10074, file: !10074, line: 460, type: !10412, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10414)
!10412 = !DISubroutineType(types: !10413)
!10413 = !{null, !10077, !532}
!10414 = !{!10415, !10416}
!10415 = !DILocalVariable(name: "base", arg: 1, scope: !10411, file: !10074, line: 460, type: !10077)
!10416 = !DILocalVariable(name: "data", arg: 2, scope: !10411, file: !10074, line: 460, type: !532)
!10417 = !DILocation(line: 0, scope: !10411)
!10418 = !DILocation(line: 464, column: 9, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10411, file: !10074, line: 464, column: 9)
!10420 = !DILocation(line: 0, scope: !10419)
!10421 = !DILocation(line: 464, column: 9, scope: !10411)
!10422 = !DILocation(line: 468, column: 33, scope: !10411)
!10423 = !DILocation(line: 468, column: 5, scope: !10411)
!10424 = !DILocation(line: 468, column: 25, scope: !10411)
!10425 = !DILocation(line: 469, column: 1, scope: !10411)
!10426 = distinct !DISubprogram(name: "UART_Getchar9", scope: !10074, file: !10074, line: 478, type: !10427, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10429)
!10427 = !DISubroutineType(types: !10428)
!10428 = !{!532, !10077}
!10429 = !{!10430, !10431}
!10430 = !DILocalVariable(name: "base", arg: 1, scope: !10426, file: !10074, line: 478, type: !10077)
!10431 = !DILocalVariable(name: "rxData", scope: !10426, file: !10074, line: 480, type: !532)
!10432 = !DILocation(line: 0, scope: !10426)
!10433 = !DILocation(line: 480, column: 23, scope: !10426)
!10434 = !DILocation(line: 482, column: 9, scope: !10426)
!10435 = !DILocation(line: 491, column: 5, scope: !10426)
!10436 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !10074, file: !10074, line: 501, type: !10267, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10437)
!10437 = !{!10438, !10439}
!10438 = !DILocalVariable(name: "base", arg: 1, scope: !10436, file: !10074, line: 501, type: !10077)
!10439 = !DILocalVariable(name: "enable", arg: 2, scope: !10436, file: !10074, line: 501, type: !583)
!10440 = !DILocation(line: 0, scope: !10436)
!10441 = !DILocation(line: 0, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10436, file: !10074, line: 503, column: 9)
!10443 = !DILocation(line: 503, column: 9, scope: !10436)
!10444 = !DILocation(line: 507, column: 1, scope: !10436)
!10445 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !10074, file: !10074, line: 516, type: !10267, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10446)
!10446 = !{!10447, !10448}
!10447 = !DILocalVariable(name: "base", arg: 1, scope: !10445, file: !10074, line: 516, type: !10077)
!10448 = !DILocalVariable(name: "enable", arg: 2, scope: !10445, file: !10074, line: 516, type: !583)
!10449 = !DILocation(line: 0, scope: !10445)
!10450 = !DILocation(line: 0, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10445, file: !10074, line: 518, column: 9)
!10452 = !DILocation(line: 518, column: 9, scope: !10445)
!10453 = !DILocation(line: 522, column: 1, scope: !10445)
!10454 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !10074, file: !10074, line: 534, type: !10267, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10455)
!10455 = !{!10456, !10457}
!10456 = !DILocalVariable(name: "base", arg: 1, scope: !10454, file: !10074, line: 534, type: !10077)
!10457 = !DILocalVariable(name: "enable", arg: 2, scope: !10454, file: !10074, line: 534, type: !583)
!10458 = !DILocation(line: 0, scope: !10454)
!10459 = !DILocation(line: 0, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10454, file: !10074, line: 536, column: 9)
!10461 = !DILocation(line: 536, column: 9, scope: !10454)
!10462 = !DILocation(line: 540, column: 1, scope: !10454)
!10463 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !10074, file: !10074, line: 550, type: !10309, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10464)
!10464 = !{!10465, !10466}
!10465 = !DILocalVariable(name: "base", arg: 1, scope: !10463, file: !10074, line: 550, type: !10077)
!10466 = !DILocalVariable(name: "voteClock", arg: 2, scope: !10463, file: !10074, line: 550, type: !415)
!10467 = !DILocation(line: 0, scope: !10463)
!10468 = !DILocation(line: 555, column: 35, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10463, file: !10074, line: 555, column: 9)
!10470 = !DILocation(line: 0, scope: !10469)
!10471 = !DILocation(line: 555, column: 9, scope: !10463)
!10472 = !DILocation(line: 559, column: 1, scope: !10463)
!10473 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !10074, file: !10074, line: 571, type: !10267, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10474)
!10474 = !{!10475, !10476}
!10475 = !DILocalVariable(name: "base", arg: 1, scope: !10473, file: !10074, line: 571, type: !10077)
!10476 = !DILocalVariable(name: "enable", arg: 2, scope: !10473, file: !10074, line: 571, type: !583)
!10477 = !DILocation(line: 0, scope: !10473)
!10478 = !DILocation(line: 0, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10473, file: !10074, line: 573, column: 9)
!10480 = !DILocation(line: 573, column: 9, scope: !10473)
!10481 = !DILocation(line: 577, column: 1, scope: !10473)
!10482 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !10074, file: !10074, line: 587, type: !10267, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10483)
!10483 = !{!10484, !10485}
!10484 = !DILocalVariable(name: "base", arg: 1, scope: !10482, file: !10074, line: 587, type: !10077)
!10485 = !DILocalVariable(name: "active", arg: 2, scope: !10482, file: !10074, line: 587, type: !583)
!10486 = !DILocation(line: 0, scope: !10482)
!10487 = !DILocation(line: 0, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10482, file: !10074, line: 589, column: 9)
!10489 = !DILocation(line: 589, column: 9, scope: !10482)
!10490 = !DILocation(line: 593, column: 1, scope: !10482)
!10491 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !10074, file: !10074, line: 602, type: !10267, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !10492)
!10492 = !{!10493, !10494}
!10493 = !DILocalVariable(name: "base", arg: 1, scope: !10491, file: !10074, line: 602, type: !10077)
!10494 = !DILocalVariable(name: "enable", arg: 2, scope: !10491, file: !10074, line: 602, type: !583)
!10495 = !DILocation(line: 0, scope: !10491)
!10496 = !DILocation(line: 0, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10491, file: !10074, line: 604, column: 9)
!10498 = !DILocation(line: 604, column: 9, scope: !10491)
!10499 = !DILocation(line: 608, column: 1, scope: !10491)
!10500 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !10501, file: !10501, line: 42, type: !10502, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !10518)
!10501 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10502 = !DISubroutineType(types: !10503)
!10503 = !{!415, !10504}
!10504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10505, size: 32)
!10505 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !410, line: 20831, baseType: !10506)
!10506 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 20820, size: 320, elements: !10507)
!10507 = !{!10508, !10509, !10510, !10511, !10512, !10513, !10514, !10515, !10516, !10517}
!10508 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !10506, file: !410, line: 20821, baseType: !414, size: 32)
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !10506, file: !410, line: 20822, baseType: !414, size: 32, offset: 32)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !10506, file: !410, line: 20823, baseType: !414, size: 32, offset: 64)
!10511 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !10506, file: !410, line: 20824, baseType: !414, size: 32, offset: 96)
!10512 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !10506, file: !410, line: 20825, baseType: !414, size: 32, offset: 128)
!10513 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !10506, file: !410, line: 20826, baseType: !414, size: 32, offset: 160)
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !10506, file: !410, line: 20827, baseType: !414, size: 32, offset: 192)
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !10506, file: !410, line: 20828, baseType: !488, size: 32, offset: 224)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !10506, file: !410, line: 20829, baseType: !488, size: 32, offset: 256)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !10506, file: !410, line: 20830, baseType: !488, size: 32, offset: 288)
!10518 = !{!10519, !10520, !10521, !10522, !10523}
!10519 = !DILocalVariable(name: "base", arg: 1, scope: !10500, file: !10501, line: 42, type: !10504)
!10520 = !DILocalVariable(name: "root", scope: !10500, file: !10501, line: 44, type: !415)
!10521 = !DILocalVariable(name: "hz", scope: !10500, file: !10501, line: 45, type: !415)
!10522 = !DILocalVariable(name: "pre", scope: !10500, file: !10501, line: 46, type: !415)
!10523 = !DILocalVariable(name: "post", scope: !10500, file: !10501, line: 46, type: !415)
!10524 = !DILocation(line: 0, scope: !10500)
!10525 = !DILocation(line: 46, column: 2, scope: !10500)
!10526 = !DILocation(line: 48, column: 10, scope: !10500)
!10527 = !DILocation(line: 48, column: 2, scope: !10500)
!10528 = !DILocation(line: 56, column: 3, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10500, file: !10501, line: 48, column: 26)
!10530 = !DILocation(line: 0, scope: !10529)
!10531 = !DILocation(line: 61, column: 2, scope: !10500)
!10532 = !DILocation(line: 66, column: 8, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10500, file: !10501, line: 61, column: 16)
!10534 = !DILocation(line: 67, column: 3, scope: !10533)
!10535 = !DILocation(line: 0, scope: !10533)
!10536 = !DILocation(line: 72, column: 15, scope: !10500)
!10537 = !DILocation(line: 72, column: 19, scope: !10500)
!10538 = !DILocation(line: 72, column: 12, scope: !10500)
!10539 = !DILocation(line: 72, column: 27, scope: !10500)
!10540 = !DILocation(line: 72, column: 32, scope: !10500)
!10541 = !DILocation(line: 72, column: 24, scope: !10500)
!10542 = !DILocation(line: 72, column: 2, scope: !10500)
!10543 = !DILocation(line: 73, column: 1, scope: !10500)
!10544 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !126, file: !126, line: 368, type: !10545, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !10547)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{!415, !2868, !415}
!10547 = !{!10548, !10549}
!10548 = !DILocalVariable(name: "base", arg: 1, scope: !10544, file: !126, line: 368, type: !2868)
!10549 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10544, file: !126, line: 368, type: !415)
!10550 = !DILocation(line: 0, scope: !10544)
!10551 = !DILocation(line: 370, column: 13, scope: !10544)
!10552 = !DILocation(line: 370, column: 58, scope: !10544)
!10553 = !DILocation(line: 370, column: 5, scope: !10544)
!10554 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !10501, file: !10501, line: 81, type: !10555, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !10575)
!10555 = !DISubroutineType(types: !10556)
!10556 = !{!415, !10557}
!10557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10558, size: 32)
!10558 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !410, line: 12462, baseType: !10559)
!10559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 12450, size: 544, elements: !10560)
!10560 = !{!10561, !10562, !10563, !10564, !10565, !10566, !10567, !10568, !10569, !10570, !10574}
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !10559, file: !410, line: 12451, baseType: !488, size: 32)
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !10559, file: !410, line: 12452, baseType: !414, size: 32, offset: 32)
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !10559, file: !410, line: 12453, baseType: !414, size: 32, offset: 64)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !10559, file: !410, line: 12454, baseType: !414, size: 32, offset: 96)
!10565 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !10559, file: !410, line: 12455, baseType: !414, size: 32, offset: 128)
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !10559, file: !410, line: 12456, baseType: !414, size: 32, offset: 160)
!10567 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !10559, file: !410, line: 12457, baseType: !414, size: 32, offset: 192)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !10559, file: !410, line: 12458, baseType: !414, size: 32, offset: 224)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !10559, file: !410, line: 12459, baseType: !414, size: 32, offset: 256)
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10559, file: !410, line: 12460, baseType: !10571, size: 224, offset: 288)
!10571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 224, elements: !10572)
!10572 = !{!10573}
!10573 = !DISubrange(count: 28)
!10574 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !10559, file: !410, line: 12461, baseType: !414, size: 32, offset: 512)
!10575 = !{!10576, !10577, !10578, !10579, !10580}
!10576 = !DILocalVariable(name: "base", arg: 1, scope: !10554, file: !10501, line: 81, type: !10557)
!10577 = !DILocalVariable(name: "root", scope: !10554, file: !10501, line: 83, type: !415)
!10578 = !DILocalVariable(name: "hz", scope: !10554, file: !10501, line: 84, type: !415)
!10579 = !DILocalVariable(name: "pre", scope: !10554, file: !10501, line: 85, type: !415)
!10580 = !DILocalVariable(name: "post", scope: !10554, file: !10501, line: 85, type: !415)
!10581 = !DILocation(line: 0, scope: !10554)
!10582 = !DILocation(line: 85, column: 2, scope: !10554)
!10583 = !DILocation(line: 87, column: 10, scope: !10554)
!10584 = !DILocation(line: 87, column: 2, scope: !10554)
!10585 = !DILocation(line: 95, column: 3, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10554, file: !10501, line: 87, column: 26)
!10587 = !DILocation(line: 0, scope: !10586)
!10588 = !DILocation(line: 100, column: 2, scope: !10554)
!10589 = !DILocation(line: 105, column: 8, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10554, file: !10501, line: 100, column: 16)
!10591 = !DILocation(line: 106, column: 3, scope: !10590)
!10592 = !DILocation(line: 0, scope: !10590)
!10593 = !DILocation(line: 111, column: 15, scope: !10554)
!10594 = !DILocation(line: 111, column: 19, scope: !10554)
!10595 = !DILocation(line: 111, column: 12, scope: !10554)
!10596 = !DILocation(line: 111, column: 27, scope: !10554)
!10597 = !DILocation(line: 111, column: 32, scope: !10554)
!10598 = !DILocation(line: 111, column: 24, scope: !10554)
!10599 = !DILocation(line: 111, column: 2, scope: !10554)
!10600 = !DILocation(line: 112, column: 1, scope: !10554)
!10601 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !10501, file: !10501, line: 120, type: !10602, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !10644)
!10602 = !DISubroutineType(types: !10603)
!10603 = !{!415, !10604}
!10604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10605, size: 32)
!10605 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !410, line: 3477, baseType: !10606)
!10606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 3446, size: 20256, elements: !10607)
!10607 = !{!10608, !10609, !10610, !10611, !10613, !10614, !10615, !10616, !10617, !10618, !10619, !10620, !10621, !10622, !10623, !10624, !10626, !10627, !10628, !10629, !10630, !10638, !10640, !10642, !10643}
!10608 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !10606, file: !410, line: 3447, baseType: !414, size: 32)
!10609 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !10606, file: !410, line: 3448, baseType: !414, size: 32, offset: 32)
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !10606, file: !410, line: 3449, baseType: !414, size: 32, offset: 64)
!10611 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10606, file: !410, line: 3450, baseType: !10612, size: 32, offset: 96)
!10612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 32, elements: !1619)
!10613 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !10606, file: !410, line: 3451, baseType: !414, size: 32, offset: 128)
!10614 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !10606, file: !410, line: 3452, baseType: !414, size: 32, offset: 160)
!10615 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !10606, file: !410, line: 3453, baseType: !414, size: 32, offset: 192)
!10616 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !10606, file: !410, line: 3454, baseType: !414, size: 32, offset: 224)
!10617 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !10606, file: !410, line: 3455, baseType: !414, size: 32, offset: 256)
!10618 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !10606, file: !410, line: 3456, baseType: !414, size: 32, offset: 288)
!10619 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !10606, file: !410, line: 3457, baseType: !414, size: 32, offset: 320)
!10620 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !10606, file: !410, line: 3458, baseType: !414, size: 32, offset: 352)
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !10606, file: !410, line: 3459, baseType: !414, size: 32, offset: 384)
!10622 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !10606, file: !410, line: 3460, baseType: !414, size: 32, offset: 416)
!10623 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !10606, file: !410, line: 3461, baseType: !488, size: 32, offset: 448)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10606, file: !410, line: 3462, baseType: !10625, size: 64, offset: 480)
!10625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 64, elements: !1565)
!10626 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !10606, file: !410, line: 3463, baseType: !488, size: 32, offset: 544)
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !10606, file: !410, line: 3464, baseType: !414, size: 32, offset: 576)
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !10606, file: !410, line: 3465, baseType: !488, size: 32, offset: 608)
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10606, file: !410, line: 3466, baseType: !474, size: 384, offset: 640)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !10606, file: !410, line: 3472, baseType: !10631, size: 8192, offset: 1024)
!10631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10632, size: 8192, elements: !657)
!10632 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10606, file: !410, line: 3467, size: 128, elements: !10633)
!10633 = !{!10634, !10635, !10636, !10637}
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !10632, file: !410, line: 3468, baseType: !414, size: 32)
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !10632, file: !410, line: 3469, baseType: !414, size: 32, offset: 32)
!10636 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !10632, file: !410, line: 3470, baseType: !414, size: 32, offset: 64)
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !10632, file: !410, line: 3471, baseType: !414, size: 32, offset: 96)
!10638 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !10606, file: !410, line: 3473, baseType: !10639, size: 8192, offset: 9216)
!10639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 8192, elements: !1920)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !10606, file: !410, line: 3474, baseType: !10641, size: 2048, offset: 17408)
!10641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 2048, elements: !657)
!10642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !10606, file: !410, line: 3475, baseType: !2769, size: 768, offset: 19456)
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !10606, file: !410, line: 3476, baseType: !414, size: 32, offset: 20224)
!10644 = !{!10645, !10646, !10647, !10648, !10649}
!10645 = !DILocalVariable(name: "base", arg: 1, scope: !10601, file: !10501, line: 120, type: !10604)
!10646 = !DILocalVariable(name: "root", scope: !10601, file: !10501, line: 122, type: !415)
!10647 = !DILocalVariable(name: "hz", scope: !10601, file: !10501, line: 123, type: !415)
!10648 = !DILocalVariable(name: "pre", scope: !10601, file: !10501, line: 124, type: !415)
!10649 = !DILocalVariable(name: "post", scope: !10601, file: !10501, line: 124, type: !415)
!10650 = !DILocation(line: 0, scope: !10601)
!10651 = !DILocation(line: 124, column: 2, scope: !10601)
!10652 = !DILocation(line: 126, column: 10, scope: !10601)
!10653 = !DILocation(line: 126, column: 2, scope: !10601)
!10654 = !DILocation(line: 134, column: 3, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10601, file: !10501, line: 126, column: 26)
!10656 = !DILocation(line: 0, scope: !10655)
!10657 = !DILocation(line: 139, column: 2, scope: !10601)
!10658 = !DILocation(line: 144, column: 8, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10601, file: !10501, line: 139, column: 16)
!10660 = !DILocation(line: 144, column: 45, scope: !10659)
!10661 = !DILocation(line: 145, column: 3, scope: !10659)
!10662 = !DILocation(line: 147, column: 8, scope: !10659)
!10663 = !DILocation(line: 148, column: 3, scope: !10659)
!10664 = !DILocation(line: 0, scope: !10659)
!10665 = !DILocation(line: 153, column: 15, scope: !10601)
!10666 = !DILocation(line: 153, column: 19, scope: !10601)
!10667 = !DILocation(line: 153, column: 12, scope: !10601)
!10668 = !DILocation(line: 153, column: 27, scope: !10601)
!10669 = !DILocation(line: 153, column: 32, scope: !10601)
!10670 = !DILocation(line: 153, column: 24, scope: !10601)
!10671 = !DILocation(line: 153, column: 2, scope: !10601)
!10672 = !DILocation(line: 154, column: 1, scope: !10601)
!10673 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !10501, file: !10501, line: 162, type: !10674, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !10690)
!10674 = !DISubroutineType(types: !10675)
!10675 = !{!415, !10676}
!10676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10677, size: 32)
!10677 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !410, line: 21082, baseType: !10678)
!10678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 21072, size: 144, elements: !10679)
!10679 = !{!10680, !10681, !10683, !10684, !10685, !10686, !10687, !10688, !10689}
!10680 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !10678, file: !410, line: 21073, baseType: !531, size: 16)
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10678, file: !410, line: 21074, baseType: !10682, size: 16, offset: 16)
!10682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 16, elements: !1387)
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !10678, file: !410, line: 21075, baseType: !531, size: 16, offset: 32)
!10684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10678, file: !410, line: 21076, baseType: !10682, size: 16, offset: 48)
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !10678, file: !410, line: 21077, baseType: !531, size: 16, offset: 64)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10678, file: !410, line: 21078, baseType: !10682, size: 16, offset: 80)
!10687 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !10678, file: !410, line: 21079, baseType: !531, size: 16, offset: 96)
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !10678, file: !410, line: 21080, baseType: !10682, size: 16, offset: 112)
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !10678, file: !410, line: 21081, baseType: !531, size: 16, offset: 128)
!10690 = !{!10691, !10692, !10693, !10694, !10695}
!10691 = !DILocalVariable(name: "base", arg: 1, scope: !10673, file: !10501, line: 162, type: !10676)
!10692 = !DILocalVariable(name: "root", scope: !10673, file: !10501, line: 164, type: !415)
!10693 = !DILocalVariable(name: "hz", scope: !10673, file: !10501, line: 165, type: !415)
!10694 = !DILocalVariable(name: "pre", scope: !10673, file: !10501, line: 166, type: !415)
!10695 = !DILocalVariable(name: "post", scope: !10673, file: !10501, line: 166, type: !415)
!10696 = !DILocation(line: 0, scope: !10673)
!10697 = !DILocation(line: 166, column: 2, scope: !10673)
!10698 = !DILocation(line: 168, column: 10, scope: !10673)
!10699 = !DILocation(line: 168, column: 2, scope: !10673)
!10700 = !DILocation(line: 0, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10673, file: !10501, line: 168, column: 26)
!10702 = !DILocation(line: 189, column: 2, scope: !10673)
!10703 = !DILocation(line: 194, column: 8, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10673, file: !10501, line: 189, column: 16)
!10705 = !DILocation(line: 194, column: 45, scope: !10704)
!10706 = !DILocation(line: 195, column: 3, scope: !10704)
!10707 = !DILocation(line: 0, scope: !10704)
!10708 = !DILocation(line: 200, column: 15, scope: !10673)
!10709 = !DILocation(line: 200, column: 19, scope: !10673)
!10710 = !DILocation(line: 200, column: 12, scope: !10673)
!10711 = !DILocation(line: 200, column: 27, scope: !10673)
!10712 = !DILocation(line: 200, column: 32, scope: !10673)
!10713 = !DILocation(line: 200, column: 24, scope: !10673)
!10714 = !DILocation(line: 200, column: 2, scope: !10673)
!10715 = !DILocation(line: 201, column: 1, scope: !10673)
!10716 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !10501, file: !10501, line: 209, type: !10717, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !10742)
!10717 = !DISubroutineType(types: !10718)
!10718 = !{!415, !10719}
!10719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10720, size: 32)
!10720 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !410, line: 41342, baseType: !10721)
!10721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 41322, size: 1504, elements: !10722)
!10722 = !{!10723, !10724, !10725, !10726, !10727, !10728, !10729, !10730, !10731, !10732, !10733, !10734, !10735, !10736, !10737, !10738, !10739, !10740, !10741}
!10723 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !10721, file: !410, line: 41323, baseType: !488, size: 32)
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10721, file: !410, line: 41324, baseType: !1293, size: 480, offset: 32)
!10725 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !10721, file: !410, line: 41325, baseType: !414, size: 32, offset: 512)
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10721, file: !410, line: 41326, baseType: !1293, size: 480, offset: 544)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !10721, file: !410, line: 41327, baseType: !414, size: 32, offset: 1024)
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !10721, file: !410, line: 41328, baseType: !414, size: 32, offset: 1056)
!10729 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !10721, file: !410, line: 41329, baseType: !414, size: 32, offset: 1088)
!10730 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !10721, file: !410, line: 41330, baseType: !414, size: 32, offset: 1120)
!10731 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !10721, file: !410, line: 41331, baseType: !414, size: 32, offset: 1152)
!10732 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !10721, file: !410, line: 41332, baseType: !414, size: 32, offset: 1184)
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !10721, file: !410, line: 41333, baseType: !414, size: 32, offset: 1216)
!10734 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !10721, file: !410, line: 41334, baseType: !414, size: 32, offset: 1248)
!10735 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !10721, file: !410, line: 41335, baseType: !414, size: 32, offset: 1280)
!10736 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !10721, file: !410, line: 41336, baseType: !414, size: 32, offset: 1312)
!10737 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !10721, file: !410, line: 41337, baseType: !414, size: 32, offset: 1344)
!10738 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !10721, file: !410, line: 41338, baseType: !488, size: 32, offset: 1376)
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !10721, file: !410, line: 41339, baseType: !414, size: 32, offset: 1408)
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !10721, file: !410, line: 41340, baseType: !414, size: 32, offset: 1440)
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !10721, file: !410, line: 41341, baseType: !414, size: 32, offset: 1472)
!10742 = !{!10743, !10744, !10745, !10746, !10747}
!10743 = !DILocalVariable(name: "base", arg: 1, scope: !10716, file: !10501, line: 209, type: !10719)
!10744 = !DILocalVariable(name: "root", scope: !10716, file: !10501, line: 211, type: !415)
!10745 = !DILocalVariable(name: "hz", scope: !10716, file: !10501, line: 212, type: !415)
!10746 = !DILocalVariable(name: "pre", scope: !10716, file: !10501, line: 213, type: !415)
!10747 = !DILocalVariable(name: "post", scope: !10716, file: !10501, line: 213, type: !415)
!10748 = !DILocation(line: 0, scope: !10716)
!10749 = !DILocation(line: 213, column: 2, scope: !10716)
!10750 = !DILocation(line: 215, column: 10, scope: !10716)
!10751 = !DILocation(line: 215, column: 2, scope: !10716)
!10752 = !DILocation(line: 223, column: 3, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10716, file: !10501, line: 215, column: 26)
!10754 = !DILocation(line: 227, column: 3, scope: !10753)
!10755 = !DILocation(line: 231, column: 3, scope: !10753)
!10756 = !DILocation(line: 235, column: 3, scope: !10753)
!10757 = !DILocation(line: 239, column: 3, scope: !10753)
!10758 = !DILocation(line: 243, column: 3, scope: !10753)
!10759 = !DILocation(line: 0, scope: !10753)
!10760 = !DILocation(line: 248, column: 2, scope: !10716)
!10761 = !DILocation(line: 253, column: 8, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10716, file: !10501, line: 248, column: 16)
!10763 = !DILocation(line: 253, column: 45, scope: !10762)
!10764 = !DILocation(line: 254, column: 3, scope: !10762)
!10765 = !DILocation(line: 256, column: 8, scope: !10762)
!10766 = !DILocation(line: 257, column: 3, scope: !10762)
!10767 = !DILocation(line: 0, scope: !10762)
!10768 = !DILocation(line: 262, column: 15, scope: !10716)
!10769 = !DILocation(line: 262, column: 19, scope: !10716)
!10770 = !DILocation(line: 262, column: 12, scope: !10716)
!10771 = !DILocation(line: 262, column: 27, scope: !10716)
!10772 = !DILocation(line: 262, column: 32, scope: !10716)
!10773 = !DILocation(line: 262, column: 24, scope: !10716)
!10774 = !DILocation(line: 262, column: 2, scope: !10716)
!10775 = !DILocation(line: 263, column: 1, scope: !10716)
!10776 = distinct !DISubprogram(name: "z_device_state_init", scope: !10777, file: !10777, line: 23, type: !3019, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !10778)
!10777 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10778 = !{!10779}
!10779 = !DILocalVariable(name: "dev", scope: !10776, file: !10777, line: 25, type: !10780)
!10780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10781, size: 32)
!10781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10782)
!10782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !571, line: 378, size: 192, elements: !10783)
!10783 = !{!10784, !10785, !10786, !10787, !10793, !10794}
!10784 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10782, file: !571, line: 380, baseType: !574, size: 32)
!10785 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10782, file: !571, line: 382, baseType: !13, size: 32, offset: 32)
!10786 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10782, file: !571, line: 384, baseType: !13, size: 32, offset: 64)
!10787 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10782, file: !571, line: 386, baseType: !10788, size: 32, offset: 96)
!10788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10789, size: 32)
!10789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !571, line: 351, size: 16, elements: !10790)
!10790 = !{!10791, !10792}
!10791 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10789, file: !571, line: 359, baseType: !421, size: 8)
!10792 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10789, file: !571, line: 364, baseType: !583, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10793 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10782, file: !571, line: 388, baseType: !102, size: 32, offset: 128)
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10782, file: !571, line: 396, baseType: !586, size: 32, offset: 160)
!10795 = !DILocation(line: 0, scope: !10776)
!10796 = !DILocation(line: 31, column: 1, scope: !10776)
!10797 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10777, file: !10777, line: 33, type: !10798, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !10800)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{!10780, !574}
!10800 = !{!10801, !10802}
!10801 = !DILocalVariable(name: "name", arg: 1, scope: !10797, file: !10777, line: 33, type: !574)
!10802 = !DILocalVariable(name: "dev", scope: !10797, file: !10777, line: 35, type: !10780)
!10803 = !DILocation(line: 0, scope: !10797)
!10804 = !DILocation(line: 40, column: 12, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10797, file: !10777, line: 40, column: 6)
!10806 = !DILocation(line: 40, column: 21, scope: !10805)
!10807 = !DILocation(line: 40, column: 25, scope: !10805)
!10808 = !DILocation(line: 40, column: 33, scope: !10805)
!10809 = !DILocation(line: 40, column: 6, scope: !10797)
!10810 = !DILocation(line: 55, column: 2, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10797, file: !10777, line: 55, column: 2)
!10812 = !DILocation(line: 50, column: 7, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !10777, line: 50, column: 7)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !10777, line: 49, column: 57)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !10777, line: 49, column: 2)
!10816 = distinct !DILexicalBlock(scope: !10797, file: !10777, line: 49, column: 2)
!10817 = !DILocation(line: 50, column: 30, scope: !10813)
!10818 = !DILocation(line: 50, column: 39, scope: !10813)
!10819 = !DILocation(line: 50, column: 44, scope: !10813)
!10820 = !DILocation(line: 50, column: 7, scope: !10814)
!10821 = !DILocation(line: 49, column: 53, scope: !10815)
!10822 = !DILocation(line: 49, column: 33, scope: !10815)
!10823 = !DILocation(line: 49, column: 2, scope: !10816)
!10824 = distinct !{!10824, !10823, !10825}
!10825 = !DILocation(line: 53, column: 2, scope: !10816)
!10826 = !DILocation(line: 56, column: 7, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !10777, line: 56, column: 7)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !10777, line: 55, column: 57)
!10829 = distinct !DILexicalBlock(scope: !10811, file: !10777, line: 55, column: 2)
!10830 = !DILocation(line: 56, column: 30, scope: !10827)
!10831 = !DILocation(line: 56, column: 52, scope: !10827)
!10832 = !DILocation(line: 56, column: 34, scope: !10827)
!10833 = !DILocation(line: 56, column: 58, scope: !10827)
!10834 = !DILocation(line: 56, column: 7, scope: !10828)
!10835 = !DILocation(line: 55, column: 53, scope: !10829)
!10836 = !DILocation(line: 55, column: 33, scope: !10829)
!10837 = distinct !{!10837, !10810, !10838}
!10838 = !DILocation(line: 59, column: 2, scope: !10811)
!10839 = !DILocation(line: 62, column: 1, scope: !10797)
!10840 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10777, file: !10777, line: 93, type: !10841, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !10843)
!10841 = !DISubroutineType(types: !10842)
!10842 = !{!583, !10780}
!10843 = !{!10844}
!10844 = !DILocalVariable(name: "dev", arg: 1, scope: !10840, file: !10777, line: 93, type: !10780)
!10845 = !DILocation(line: 0, scope: !10840)
!10846 = !DILocation(line: 99, column: 10, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10840, file: !10777, line: 99, column: 6)
!10848 = !DILocation(line: 99, column: 6, scope: !10840)
!10849 = !DILocation(line: 103, column: 14, scope: !10840)
!10850 = !DILocation(line: 103, column: 21, scope: !10840)
!10851 = !DILocation(line: 103, column: 33, scope: !10840)
!10852 = !DILocation(line: 103, column: 49, scope: !10840)
!10853 = !DILocation(line: 103, column: 58, scope: !10840)
!10854 = !DILocation(line: 104, column: 1, scope: !10840)
!10855 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10777, file: !10777, line: 87, type: !10856, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !10859)
!10856 = !DISubroutineType(types: !10857)
!10857 = !{!1714, !10858}
!10858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10780, size: 32)
!10859 = !{!10860}
!10860 = !DILocalVariable(name: "devices", arg: 1, scope: !10855, file: !10777, line: 87, type: !10858)
!10861 = !DILocation(line: 0, scope: !10855)
!10862 = !DILocation(line: 89, column: 11, scope: !10855)
!10863 = !DILocation(line: 90, column: 2, scope: !10855)
!10864 = distinct !DISubprogram(name: "device_required_foreach", scope: !10777, file: !10777, line: 125, type: !10865, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !10871)
!10865 = !DISubroutineType(types: !10866)
!10866 = !{!103, !10780, !10867, !102}
!10867 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !571, line: 471, baseType: !10868)
!10868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10869, size: 32)
!10869 = !DISubroutineType(types: !10870)
!10870 = !{!103, !10780, !102}
!10871 = !{!10872, !10873, !10874, !10875, !10876}
!10872 = !DILocalVariable(name: "dev", arg: 1, scope: !10864, file: !10777, line: 125, type: !10780)
!10873 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10864, file: !10777, line: 126, type: !10867)
!10874 = !DILocalVariable(name: "context", arg: 3, scope: !10864, file: !10777, line: 127, type: !102)
!10875 = !DILocalVariable(name: "handle_count", scope: !10864, file: !10777, line: 129, type: !1714)
!10876 = !DILocalVariable(name: "handles", scope: !10864, file: !10777, line: 130, type: !586)
!10877 = !DILocation(line: 0, scope: !10864)
!10878 = !DILocation(line: 129, column: 2, scope: !10864)
!10879 = !DILocation(line: 129, column: 9, scope: !10864)
!10880 = !DILocation(line: 130, column: 35, scope: !10864)
!10881 = !DILocation(line: 132, column: 33, scope: !10864)
!10882 = !DILocation(line: 132, column: 9, scope: !10864)
!10883 = !DILocation(line: 133, column: 1, scope: !10864)
!10884 = !DILocation(line: 132, column: 2, scope: !10864)
!10885 = distinct !DISubprogram(name: "device_required_handles_get", scope: !571, file: !571, line: 493, type: !10886, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !10888)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{!586, !10780, !2351}
!10888 = !{!10889, !10890, !10891, !10892}
!10889 = !DILocalVariable(name: "dev", arg: 1, scope: !10885, file: !571, line: 493, type: !10780)
!10890 = !DILocalVariable(name: "count", arg: 2, scope: !10885, file: !571, line: 493, type: !2351)
!10891 = !DILocalVariable(name: "rv", scope: !10885, file: !571, line: 495, type: !586)
!10892 = !DILocalVariable(name: "i", scope: !10893, file: !571, line: 498, type: !1714)
!10893 = distinct !DILexicalBlock(scope: !10894, file: !571, line: 497, column: 18)
!10894 = distinct !DILexicalBlock(scope: !10885, file: !571, line: 497, column: 6)
!10895 = !DILocation(line: 0, scope: !10885)
!10896 = !DILocation(line: 495, column: 35, scope: !10885)
!10897 = !DILocation(line: 497, column: 9, scope: !10894)
!10898 = !DILocation(line: 497, column: 6, scope: !10885)
!10899 = !DILocation(line: 0, scope: !10893)
!10900 = !DILocation(line: 500, column: 11, scope: !10893)
!10901 = !DILocation(line: 500, column: 40, scope: !10893)
!10902 = !DILocation(line: 502, column: 4, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10893, file: !571, line: 501, column: 40)
!10904 = distinct !{!10904, !10905, !10906}
!10905 = !DILocation(line: 500, column: 3, scope: !10893)
!10906 = !DILocation(line: 503, column: 3, scope: !10893)
!10907 = !DILocation(line: 504, column: 10, scope: !10893)
!10908 = !DILocation(line: 505, column: 2, scope: !10893)
!10909 = !DILocation(line: 507, column: 2, scope: !10885)
!10910 = distinct !DISubprogram(name: "device_visitor", scope: !10777, file: !10777, line: 106, type: !10911, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !10913)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{!103, !586, !1714, !10867, !102}
!10913 = !{!10914, !10915, !10916, !10917, !10918, !10920, !10923, !10924}
!10914 = !DILocalVariable(name: "handles", arg: 1, scope: !10910, file: !10777, line: 106, type: !586)
!10915 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10910, file: !10777, line: 107, type: !1714)
!10916 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10910, file: !10777, line: 108, type: !10867)
!10917 = !DILocalVariable(name: "context", arg: 4, scope: !10910, file: !10777, line: 109, type: !102)
!10918 = !DILocalVariable(name: "i", scope: !10919, file: !10777, line: 112, type: !1714)
!10919 = distinct !DILexicalBlock(scope: !10910, file: !10777, line: 112, column: 2)
!10920 = !DILocalVariable(name: "dh", scope: !10921, file: !10777, line: 113, type: !588)
!10921 = distinct !DILexicalBlock(scope: !10922, file: !10777, line: 112, column: 44)
!10922 = distinct !DILexicalBlock(scope: !10919, file: !10777, line: 112, column: 2)
!10923 = !DILocalVariable(name: "rdev", scope: !10921, file: !10777, line: 114, type: !10780)
!10924 = !DILocalVariable(name: "rc", scope: !10921, file: !10777, line: 115, type: !103)
!10925 = !DILocation(line: 0, scope: !10910)
!10926 = !DILocation(line: 0, scope: !10919)
!10927 = !DILocation(line: 112, column: 23, scope: !10922)
!10928 = !DILocation(line: 112, column: 2, scope: !10919)
!10929 = distinct !{!10929, !10928, !10930}
!10930 = !DILocation(line: 120, column: 2, scope: !10919)
!10931 = !DILocation(line: 113, column: 24, scope: !10921)
!10932 = !DILocation(line: 0, scope: !10921)
!10933 = !DILocation(line: 114, column: 31, scope: !10921)
!10934 = !DILocation(line: 115, column: 12, scope: !10921)
!10935 = !DILocation(line: 117, column: 10, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10921, file: !10777, line: 117, column: 7)
!10937 = !DILocation(line: 112, column: 39, scope: !10922)
!10938 = !DILocation(line: 123, column: 1, scope: !10910)
!10939 = distinct !DISubprogram(name: "device_from_handle", scope: !571, file: !571, line: 439, type: !10940, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !10942)
!10940 = !DISubroutineType(types: !10941)
!10941 = !{!10780, !588}
!10942 = !{!10943, !10944, !10945}
!10943 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10939, file: !571, line: 439, type: !588)
!10944 = !DILocalVariable(name: "dev", scope: !10939, file: !571, line: 443, type: !10780)
!10945 = !DILocalVariable(name: "numdev", scope: !10939, file: !571, line: 444, type: !1714)
!10946 = !DILocation(line: 0, scope: !10939)
!10947 = !DILocation(line: 446, column: 7, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10939, file: !571, line: 446, column: 6)
!10949 = !DILocation(line: 446, column: 18, scope: !10948)
!10950 = !DILocation(line: 446, column: 23, scope: !10948)
!10951 = !DILocation(line: 450, column: 2, scope: !10939)
!10952 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10777, file: !10777, line: 135, type: !10865, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !10953)
!10953 = !{!10954, !10955, !10956, !10957, !10958}
!10954 = !DILocalVariable(name: "dev", arg: 1, scope: !10952, file: !10777, line: 135, type: !10780)
!10955 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10952, file: !10777, line: 136, type: !10867)
!10956 = !DILocalVariable(name: "context", arg: 3, scope: !10952, file: !10777, line: 137, type: !102)
!10957 = !DILocalVariable(name: "handle_count", scope: !10952, file: !10777, line: 139, type: !1714)
!10958 = !DILocalVariable(name: "handles", scope: !10952, file: !10777, line: 140, type: !586)
!10959 = !DILocation(line: 0, scope: !10952)
!10960 = !DILocation(line: 139, column: 2, scope: !10952)
!10961 = !DILocation(line: 139, column: 9, scope: !10952)
!10962 = !DILocation(line: 140, column: 35, scope: !10952)
!10963 = !DILocation(line: 142, column: 33, scope: !10952)
!10964 = !DILocation(line: 142, column: 9, scope: !10952)
!10965 = !DILocation(line: 143, column: 1, scope: !10952)
!10966 = !DILocation(line: 142, column: 2, scope: !10952)
!10967 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !571, file: !571, line: 573, type: !10886, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !10968)
!10968 = !{!10969, !10970, !10971, !10972, !10973}
!10969 = !DILocalVariable(name: "dev", arg: 1, scope: !10967, file: !571, line: 573, type: !10780)
!10970 = !DILocalVariable(name: "count", arg: 2, scope: !10967, file: !571, line: 573, type: !2351)
!10971 = !DILocalVariable(name: "rv", scope: !10967, file: !571, line: 575, type: !586)
!10972 = !DILocalVariable(name: "region", scope: !10967, file: !571, line: 576, type: !1714)
!10973 = !DILocalVariable(name: "i", scope: !10967, file: !571, line: 577, type: !1714)
!10974 = !DILocation(line: 0, scope: !10967)
!10975 = !DILocation(line: 575, column: 35, scope: !10967)
!10976 = !DILocation(line: 579, column: 9, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10967, file: !571, line: 579, column: 6)
!10978 = !DILocation(line: 579, column: 6, scope: !10967)
!10979 = !DILocation(line: 582, column: 8, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !571, line: 582, column: 8)
!10981 = distinct !DILexicalBlock(scope: !10982, file: !571, line: 581, column: 23)
!10982 = distinct !DILexicalBlock(scope: !10977, file: !571, line: 579, column: 18)
!10983 = !DILocation(line: 582, column: 12, scope: !10980)
!10984 = !DILocation(line: 585, column: 6, scope: !10981)
!10985 = !DILocation(line: 0, scope: !10982)
!10986 = !DILocation(line: 581, column: 17, scope: !10982)
!10987 = !DILocation(line: 581, column: 3, scope: !10982)
!10988 = !DILocation(line: 588, column: 10, scope: !10982)
!10989 = !DILocation(line: 588, column: 16, scope: !10982)
!10990 = !DILocation(line: 589, column: 4, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10982, file: !571, line: 588, column: 39)
!10992 = !DILocation(line: 588, column: 3, scope: !10982)
!10993 = distinct !{!10993, !10992, !10994}
!10994 = !DILocation(line: 590, column: 3, scope: !10982)
!10995 = !DILocation(line: 591, column: 10, scope: !10982)
!10996 = !DILocation(line: 592, column: 2, scope: !10982)
!10997 = !DILocation(line: 575, column: 25, scope: !10967)
!10998 = !DILocation(line: 594, column: 2, scope: !10967)
!10999 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1699, file: !1699, line: 49, type: !5712, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !842)
!11000 = !DILocation(line: 51, column: 10, scope: !10999)
!11001 = !DILocation(line: 51, column: 20, scope: !10999)
!11002 = !DILocation(line: 51, column: 2, scope: !10999)
!11003 = distinct !DISubprogram(name: "coredump", scope: !2986, file: !2986, line: 209, type: !11004, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11144)
!11004 = !DISubroutineType(types: !11005)
!11005 = !{null, !32, !11006, !11050}
!11006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11007, size: 32)
!11007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11008)
!11008 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2559, line: 141, baseType: !11009)
!11009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2559, line: 97, size: 256, elements: !11010)
!11010 = !{!11011}
!11011 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11009, file: !2559, line: 107, baseType: !11012, size: 256)
!11012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2559, line: 98, size: 256, elements: !11013)
!11013 = !{!11014, !11019, !11024, !11029, !11034, !11039, !11044, !11049}
!11014 = !DIDerivedType(tag: DW_TAG_member, scope: !11012, file: !2559, line: 99, baseType: !11015, size: 32)
!11015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11012, file: !2559, line: 99, size: 32, elements: !11016)
!11016 = !{!11017, !11018}
!11017 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11015, file: !2559, line: 99, baseType: !415, size: 32)
!11018 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11015, file: !2559, line: 99, baseType: !415, size: 32)
!11019 = !DIDerivedType(tag: DW_TAG_member, scope: !11012, file: !2559, line: 100, baseType: !11020, size: 32, offset: 32)
!11020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11012, file: !2559, line: 100, size: 32, elements: !11021)
!11021 = !{!11022, !11023}
!11022 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11020, file: !2559, line: 100, baseType: !415, size: 32)
!11023 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11020, file: !2559, line: 100, baseType: !415, size: 32)
!11024 = !DIDerivedType(tag: DW_TAG_member, scope: !11012, file: !2559, line: 101, baseType: !11025, size: 32, offset: 64)
!11025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11012, file: !2559, line: 101, size: 32, elements: !11026)
!11026 = !{!11027, !11028}
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11025, file: !2559, line: 101, baseType: !415, size: 32)
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11025, file: !2559, line: 101, baseType: !415, size: 32)
!11029 = !DIDerivedType(tag: DW_TAG_member, scope: !11012, file: !2559, line: 102, baseType: !11030, size: 32, offset: 96)
!11030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11012, file: !2559, line: 102, size: 32, elements: !11031)
!11031 = !{!11032, !11033}
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11030, file: !2559, line: 102, baseType: !415, size: 32)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11030, file: !2559, line: 102, baseType: !415, size: 32)
!11034 = !DIDerivedType(tag: DW_TAG_member, scope: !11012, file: !2559, line: 103, baseType: !11035, size: 32, offset: 128)
!11035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11012, file: !2559, line: 103, size: 32, elements: !11036)
!11036 = !{!11037, !11038}
!11037 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11035, file: !2559, line: 103, baseType: !415, size: 32)
!11038 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11035, file: !2559, line: 103, baseType: !415, size: 32)
!11039 = !DIDerivedType(tag: DW_TAG_member, scope: !11012, file: !2559, line: 104, baseType: !11040, size: 32, offset: 160)
!11040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11012, file: !2559, line: 104, size: 32, elements: !11041)
!11041 = !{!11042, !11043}
!11042 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11040, file: !2559, line: 104, baseType: !415, size: 32)
!11043 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11040, file: !2559, line: 104, baseType: !415, size: 32)
!11044 = !DIDerivedType(tag: DW_TAG_member, scope: !11012, file: !2559, line: 105, baseType: !11045, size: 32, offset: 192)
!11045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11012, file: !2559, line: 105, size: 32, elements: !11046)
!11046 = !{!11047, !11048}
!11047 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11045, file: !2559, line: 105, baseType: !415, size: 32)
!11048 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11045, file: !2559, line: 105, baseType: !415, size: 32)
!11049 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11012, file: !2559, line: 106, baseType: !415, size: 32, offset: 224)
!11050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11051, size: 32)
!11051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1802, line: 245, size: 896, elements: !11052)
!11052 = !{!11053, !11111, !11123, !11124, !11125, !11126, !11139}
!11053 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11051, file: !1802, line: 247, baseType: !11054, size: 384)
!11054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1802, line: 57, size: 384, elements: !11055)
!11055 = !{!11056, !11080, !11087, !11088, !11089, !11098, !11099, !11100}
!11056 = !DIDerivedType(tag: DW_TAG_member, scope: !11054, file: !1802, line: 60, baseType: !11057, size: 64)
!11057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11054, file: !1802, line: 60, size: 64, elements: !11058)
!11058 = !{!11059, !11074}
!11059 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11057, file: !1802, line: 61, baseType: !11060, size: 64)
!11060 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !679, line: 49, baseType: !11061)
!11061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !679, line: 37, size: 64, elements: !11062)
!11062 = !{!11063, !11069}
!11063 = !DIDerivedType(tag: DW_TAG_member, scope: !11061, file: !679, line: 38, baseType: !11064, size: 32)
!11064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11061, file: !679, line: 38, size: 32, elements: !11065)
!11065 = !{!11066, !11068}
!11066 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11064, file: !679, line: 39, baseType: !11067, size: 32)
!11067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11061, size: 32)
!11068 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11064, file: !679, line: 40, baseType: !11067, size: 32)
!11069 = !DIDerivedType(tag: DW_TAG_member, scope: !11061, file: !679, line: 42, baseType: !11070, size: 32, offset: 32)
!11070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11061, file: !679, line: 42, size: 32, elements: !11071)
!11071 = !{!11072, !11073}
!11072 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11070, file: !679, line: 43, baseType: !11067, size: 32)
!11073 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11070, file: !679, line: 44, baseType: !11067, size: 32)
!11074 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11057, file: !1802, line: 62, baseType: !11075, size: 64)
!11075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1827, line: 49, size: 64, elements: !11076)
!11076 = !{!11077}
!11077 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11075, file: !1827, line: 50, baseType: !11078, size: 64)
!11078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11079, size: 64, elements: !1387)
!11079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11075, size: 32)
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11054, file: !1802, line: 68, baseType: !11081, size: 32, offset: 64)
!11081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11082, size: 32)
!11082 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !11083)
!11083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !11084)
!11084 = !{!11085}
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11083, file: !674, line: 232, baseType: !11086, size: 64)
!11086 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !11061)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11054, file: !1802, line: 71, baseType: !421, size: 8, offset: 96)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11054, file: !1802, line: 74, baseType: !421, size: 8, offset: 104)
!11089 = !DIDerivedType(tag: DW_TAG_member, scope: !11054, file: !1802, line: 90, baseType: !11090, size: 16, offset: 112)
!11090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11054, file: !1802, line: 90, size: 16, elements: !11091)
!11091 = !{!11092, !11097}
!11092 = !DIDerivedType(tag: DW_TAG_member, scope: !11090, file: !1802, line: 91, baseType: !11093, size: 16)
!11093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11090, file: !1802, line: 91, size: 16, elements: !11094)
!11094 = !{!11095, !11096}
!11095 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11093, file: !1802, line: 96, baseType: !1848, size: 8)
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11093, file: !1802, line: 97, baseType: !421, size: 8, offset: 8)
!11097 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11090, file: !1802, line: 100, baseType: !532, size: 16)
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11054, file: !1802, line: 107, baseType: !415, size: 32, offset: 128)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11054, file: !1802, line: 127, baseType: !102, size: 32, offset: 160)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11054, file: !1802, line: 131, baseType: !11101, size: 192, offset: 192)
!11101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !674, line: 244, size: 192, elements: !11102)
!11102 = !{!11103, !11104, !11110}
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11101, file: !674, line: 245, baseType: !11060, size: 64)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11101, file: !674, line: 246, baseType: !11105, size: 32, offset: 64)
!11105 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !674, line: 242, baseType: !11106)
!11106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11107, size: 32)
!11107 = !DISubroutineType(types: !11108)
!11108 = !{null, !11109}
!11109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11101, size: 32)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11101, file: !674, line: 249, baseType: !1548, size: 64, offset: 128)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11051, file: !1802, line: 250, baseType: !11112, size: 288, offset: 384)
!11112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1867, line: 25, size: 288, elements: !11113)
!11113 = !{!11114, !11115, !11116, !11117, !11118, !11119, !11120, !11121, !11122}
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11112, file: !1867, line: 26, baseType: !415, size: 32)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11112, file: !1867, line: 27, baseType: !415, size: 32, offset: 32)
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11112, file: !1867, line: 28, baseType: !415, size: 32, offset: 64)
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11112, file: !1867, line: 29, baseType: !415, size: 32, offset: 96)
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11112, file: !1867, line: 30, baseType: !415, size: 32, offset: 128)
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11112, file: !1867, line: 31, baseType: !415, size: 32, offset: 160)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11112, file: !1867, line: 32, baseType: !415, size: 32, offset: 192)
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11112, file: !1867, line: 33, baseType: !415, size: 32, offset: 224)
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11112, file: !1867, line: 34, baseType: !415, size: 32, offset: 256)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11051, file: !1802, line: 253, baseType: !102, size: 32, offset: 672)
!11124 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11051, file: !1802, line: 256, baseType: !11082, size: 64, offset: 704)
!11125 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11051, file: !1802, line: 294, baseType: !103, size: 32, offset: 768)
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11051, file: !1802, line: 325, baseType: !11127, size: 32, offset: 800)
!11127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11128, size: 32)
!11128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !670, line: 5073, size: 160, elements: !11129)
!11129 = !{!11130, !11136, !11137}
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11128, file: !670, line: 5074, baseType: !11131, size: 96)
!11131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1887, line: 56, size: 96, elements: !11132)
!11132 = !{!11133, !11134, !11135}
!11133 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11131, file: !1887, line: 57, baseType: !1890, size: 32)
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11131, file: !1887, line: 58, baseType: !102, size: 32, offset: 32)
!11135 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11131, file: !1887, line: 59, baseType: !1714, size: 32, offset: 64)
!11136 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11128, file: !670, line: 5075, baseType: !11082, size: 64, offset: 96)
!11137 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11128, file: !670, line: 5076, baseType: !11138, offset: 160)
!11138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11051, file: !1802, line: 343, baseType: !11140, size: 64, offset: 832)
!11140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1867, line: 60, size: 64, elements: !11141)
!11141 = !{!11142, !11143}
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11140, file: !1867, line: 63, baseType: !415, size: 32)
!11143 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11140, file: !1867, line: 66, baseType: !415, size: 32, offset: 32)
!11144 = !{!11145, !11146, !11147}
!11145 = !DILocalVariable(name: "reason", arg: 1, scope: !11003, file: !2986, line: 209, type: !32)
!11146 = !DILocalVariable(name: "esf", arg: 2, scope: !11003, file: !2986, line: 209, type: !11006)
!11147 = !DILocalVariable(name: "thread", arg: 3, scope: !11003, file: !2986, line: 210, type: !11050)
!11148 = !DILocation(line: 0, scope: !11003)
!11149 = !DILocation(line: 212, column: 1, scope: !11003)
!11150 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2986, file: !2986, line: 214, type: !11151, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11153)
!11151 = !DISubroutineType(types: !11152)
!11152 = !{null, !22, !22}
!11153 = !{!11154, !11155}
!11154 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11150, file: !2986, line: 214, type: !22)
!11155 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11150, file: !2986, line: 214, type: !22)
!11156 = !DILocation(line: 0, scope: !11150)
!11157 = !DILocation(line: 216, column: 1, scope: !11150)
!11158 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2986, file: !2986, line: 218, type: !11159, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11161)
!11159 = !DISubroutineType(types: !11160)
!11160 = !{null, !628, !1714}
!11161 = !{!11162, !11163}
!11162 = !DILocalVariable(name: "buf", arg: 1, scope: !11158, file: !2986, line: 218, type: !628)
!11163 = !DILocalVariable(name: "buflen", arg: 2, scope: !11158, file: !2986, line: 218, type: !1714)
!11164 = !DILocation(line: 0, scope: !11158)
!11165 = !DILocation(line: 220, column: 1, scope: !11158)
!11166 = distinct !DISubprogram(name: "coredump_query", scope: !2986, file: !2986, line: 222, type: !11167, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11169)
!11167 = !DISubroutineType(types: !11168)
!11168 = !{!103, !2985, !102}
!11169 = !{!11170, !11171}
!11170 = !DILocalVariable(name: "query_id", arg: 1, scope: !11166, file: !2986, line: 222, type: !2985)
!11171 = !DILocalVariable(name: "arg", arg: 2, scope: !11166, file: !2986, line: 222, type: !102)
!11172 = !DILocation(line: 0, scope: !11166)
!11173 = !DILocation(line: 224, column: 2, scope: !11166)
!11174 = distinct !DISubprogram(name: "coredump_cmd", scope: !2986, file: !2986, line: 227, type: !11175, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11177)
!11175 = !DISubroutineType(types: !11176)
!11176 = !{!103, !2992, !102}
!11177 = !{!11178, !11179}
!11178 = !DILocalVariable(name: "query_id", arg: 1, scope: !11174, file: !2986, line: 227, type: !2992)
!11179 = !DILocalVariable(name: "arg", arg: 2, scope: !11174, file: !2986, line: 227, type: !102)
!11180 = !DILocation(line: 0, scope: !11174)
!11181 = !DILocation(line: 229, column: 2, scope: !11174)
!11182 = distinct !DISubprogram(name: "arch_system_halt", scope: !11183, file: !11183, line: 23, type: !5689, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11184)
!11183 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11184 = !{!11185}
!11185 = !DILocalVariable(name: "reason", arg: 1, scope: !11182, file: !11183, line: 23, type: !32)
!11186 = !DILocation(line: 0, scope: !11182)
!11187 = !DILocation(line: 55, column: 2, scope: !11188, inlinedAt: !11192)
!11188 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5666, file: !5666, line: 42, type: !5667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11189)
!11189 = !{!11190, !11191}
!11190 = !DILocalVariable(name: "key", scope: !11188, file: !5666, line: 44, type: !32)
!11191 = !DILocalVariable(name: "tmp", scope: !11188, file: !5666, line: 53, type: !32)
!11192 = distinct !DILocation(line: 31, column: 8, scope: !11182)
!11193 = !{i64 2842855}
!11194 = !DILocation(line: 0, scope: !11188, inlinedAt: !11192)
!11195 = !DILocation(line: 32, column: 2, scope: !11182)
!11196 = !DILocation(line: 32, column: 2, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11198, file: !11183, line: 32, column: 2)
!11198 = distinct !DILexicalBlock(scope: !11182, file: !11183, line: 32, column: 2)
!11199 = distinct !{!11199, !11200, !11201}
!11200 = !DILocation(line: 32, column: 2, scope: !11198)
!11201 = !DILocation(line: 34, column: 2, scope: !11198)
!11202 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11183, file: !11183, line: 39, type: !11203, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11205)
!11203 = !DISubroutineType(types: !11204)
!11204 = !{null, !32, !11006}
!11205 = !{!11206, !11207}
!11206 = !DILocalVariable(name: "reason", arg: 1, scope: !11202, file: !11183, line: 39, type: !32)
!11207 = !DILocalVariable(name: "esf", arg: 2, scope: !11202, file: !11183, line: 40, type: !11006)
!11208 = !DILocation(line: 0, scope: !11202)
!11209 = !DILocation(line: 46, column: 2, scope: !11202)
!11210 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11183, file: !11183, line: 81, type: !5689, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11211)
!11211 = !{!11212}
!11212 = !DILocalVariable(name: "reason", arg: 1, scope: !11210, file: !11183, line: 81, type: !32)
!11213 = !DILocation(line: 0, scope: !11210)
!11214 = !DILocation(line: 83, column: 2, scope: !11210)
!11215 = distinct !DISubprogram(name: "z_fatal_error", scope: !11183, file: !11183, line: 96, type: !11203, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11216)
!11216 = !{!11217, !11218, !11219, !11220}
!11217 = !DILocalVariable(name: "reason", arg: 1, scope: !11215, file: !11183, line: 96, type: !32)
!11218 = !DILocalVariable(name: "esf", arg: 2, scope: !11215, file: !11183, line: 96, type: !11006)
!11219 = !DILocalVariable(name: "key", scope: !11215, file: !11183, line: 102, type: !32)
!11220 = !DILocalVariable(name: "thread", scope: !11215, file: !11183, line: 103, type: !11050)
!11221 = !DILocation(line: 0, scope: !11215)
!11222 = !DILocation(line: 55, column: 2, scope: !11188, inlinedAt: !11223)
!11223 = distinct !DILocation(line: 102, column: 21, scope: !11215)
!11224 = !DILocation(line: 0, scope: !11188, inlinedAt: !11223)
!11225 = !DILocation(line: 119, column: 11, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11215, file: !11183, line: 119, column: 6)
!11227 = !DILocation(line: 119, column: 20, scope: !11226)
!11228 = !DILocation(line: 131, column: 2, scope: !11215)
!11229 = !DILocation(line: 151, column: 7, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !11183, line: 146, column: 32)
!11231 = distinct !DILexicalBlock(scope: !11215, file: !11183, line: 146, column: 6)
!11232 = !DILocation(line: 151, column: 21, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11230, file: !11183, line: 151, column: 7)
!11234 = !DILocation(line: 104, column: 4, scope: !11215)
!11235 = !DILocalVariable(name: "key", arg: 1, scope: !11236, file: !5666, line: 84, type: !32)
!11236 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11237)
!11237 = !{!11235}
!11238 = !DILocation(line: 0, scope: !11236, inlinedAt: !11239)
!11239 = distinct !DILocation(line: 186, column: 2, scope: !11215)
!11240 = !DILocation(line: 95, column: 2, scope: !11236, inlinedAt: !11239)
!11241 = !{i64 2843672}
!11242 = !DILocation(line: 189, column: 3, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !11183, line: 188, column: 41)
!11244 = distinct !DILexicalBlock(scope: !11215, file: !11183, line: 188, column: 6)
!11245 = !DILocation(line: 191, column: 1, scope: !11215)
!11246 = distinct !DISubprogram(name: "k_current_get", scope: !670, file: !670, line: 530, type: !11247, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !842)
!11247 = !DISubroutineType(types: !11248)
!11248 = !{!11249}
!11249 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1802, line: 347, baseType: !11050)
!11250 = !DILocation(line: 535, column: 9, scope: !11246)
!11251 = !DILocation(line: 535, column: 2, scope: !11246)
!11252 = distinct !DISubprogram(name: "k_thread_abort", scope: !3443, file: !3443, line: 188, type: !11253, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !11255)
!11253 = !DISubroutineType(types: !11254)
!11254 = !{null, !11249}
!11255 = !{!11256}
!11256 = !DILocalVariable(name: "thread", arg: 1, scope: !11252, file: !3443, line: 188, type: !11249)
!11257 = !DILocation(line: 0, scope: !11252)
!11258 = !DILocation(line: 197, column: 2, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11252, file: !3443, line: 197, column: 2)
!11260 = !{i64 2151037405}
!11261 = !DILocation(line: 198, column: 2, scope: !11252)
!11262 = !DILocation(line: 199, column: 1, scope: !11252)
!11263 = distinct !DISubprogram(name: "z_current_get", scope: !3443, file: !3443, line: 173, type: !11247, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !842)
!11264 = !DILocation(line: 180, column: 2, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11263, file: !3443, line: 180, column: 2)
!11266 = !{i64 2151037337}
!11267 = !DILocation(line: 181, column: 9, scope: !11263)
!11268 = !DILocation(line: 181, column: 2, scope: !11263)
!11269 = distinct !DISubprogram(name: "z_early_memset", scope: !1706, file: !1706, line: 108, type: !11270, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11272)
!11270 = !DISubroutineType(types: !11271)
!11271 = !{null, !102, !103, !1714}
!11272 = !{!11273, !11274, !11275}
!11273 = !DILocalVariable(name: "dst", arg: 1, scope: !11269, file: !1706, line: 108, type: !102)
!11274 = !DILocalVariable(name: "c", arg: 2, scope: !11269, file: !1706, line: 108, type: !103)
!11275 = !DILocalVariable(name: "n", arg: 3, scope: !11269, file: !1706, line: 108, type: !1714)
!11276 = !DILocation(line: 0, scope: !11269)
!11277 = !DILocation(line: 110, column: 9, scope: !11269)
!11278 = !DILocation(line: 111, column: 1, scope: !11269)
!11279 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1706, file: !1706, line: 121, type: !11280, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11282)
!11280 = !DISubroutineType(types: !11281)
!11281 = !{null, !102, !13, !1714}
!11282 = !{!11283, !11284, !11285}
!11283 = !DILocalVariable(name: "dst", arg: 1, scope: !11279, file: !1706, line: 121, type: !102)
!11284 = !DILocalVariable(name: "src", arg: 2, scope: !11279, file: !1706, line: 121, type: !13)
!11285 = !DILocalVariable(name: "n", arg: 3, scope: !11279, file: !1706, line: 121, type: !1714)
!11286 = !DILocation(line: 0, scope: !11279)
!11287 = !DILocation(line: 123, column: 9, scope: !11279)
!11288 = !DILocation(line: 124, column: 1, scope: !11279)
!11289 = distinct !DISubprogram(name: "z_bss_zero", scope: !1706, file: !1706, line: 132, type: !3019, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !842)
!11290 = !DILocation(line: 143, column: 2, scope: !11289)
!11291 = !DILocation(line: 168, column: 1, scope: !11289)
!11292 = distinct !DISubprogram(name: "z_init_cpu", scope: !1706, file: !1706, line: 372, type: !11293, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11295)
!11293 = !DISubroutineType(types: !11294)
!11294 = !{null, !103}
!11295 = !{!11296}
!11296 = !DILocalVariable(name: "id", arg: 1, scope: !11292, file: !1706, line: 372, type: !103)
!11297 = !DILocation(line: 0, scope: !11292)
!11298 = !DILocation(line: 374, column: 2, scope: !11292)
!11299 = !DILocation(line: 375, column: 34, scope: !11292)
!11300 = !DILocation(line: 375, column: 19, scope: !11292)
!11301 = !DILocation(line: 375, column: 31, scope: !11292)
!11302 = !DILocation(line: 376, column: 24, scope: !11292)
!11303 = !DILocation(line: 376, column: 19, scope: !11292)
!11304 = !DILocation(line: 376, column: 22, scope: !11292)
!11305 = !DILocation(line: 378, column: 26, scope: !11292)
!11306 = !DILocation(line: 378, column: 4, scope: !11292)
!11307 = !DILocation(line: 378, column: 50, scope: !11292)
!11308 = !DILocation(line: 377, column: 19, scope: !11292)
!11309 = !DILocation(line: 377, column: 29, scope: !11292)
!11310 = !DILocation(line: 384, column: 1, scope: !11292)
!11311 = distinct !DISubprogram(name: "init_idle_thread", scope: !1706, file: !1706, line: 343, type: !11293, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11312)
!11312 = !{!11313, !11314, !11315, !11318}
!11313 = !DILocalVariable(name: "i", arg: 1, scope: !11311, file: !1706, line: 343, type: !103)
!11314 = !DILocalVariable(name: "thread", scope: !11311, file: !1706, line: 345, type: !1800)
!11315 = !DILocalVariable(name: "stack", scope: !11311, file: !1706, line: 346, type: !11316)
!11316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11317, size: 32)
!11317 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3328, line: 44, baseType: !1916)
!11318 = !DILocalVariable(name: "tname", scope: !11311, file: !1706, line: 358, type: !869)
!11319 = !DILocation(line: 0, scope: !11311)
!11320 = !DILocation(line: 345, column: 29, scope: !11311)
!11321 = !DILocation(line: 346, column: 28, scope: !11311)
!11322 = !DILocation(line: 362, column: 37, scope: !11311)
!11323 = !DILocation(line: 362, column: 36, scope: !11311)
!11324 = !DILocation(line: 361, column: 2, scope: !11311)
!11325 = !DILocation(line: 365, column: 2, scope: !11311)
!11326 = !DILocation(line: 370, column: 1, scope: !11311)
!11327 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1917, file: !1917, line: 331, type: !11328, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11330)
!11328 = !DISubroutineType(types: !11329)
!11329 = !{!869, !11316}
!11330 = !{!11331}
!11331 = !DILocalVariable(name: "sym", arg: 1, scope: !11327, file: !1917, line: 331, type: !11316)
!11332 = !DILocation(line: 0, scope: !11327)
!11333 = !DILocation(line: 333, column: 9, scope: !11327)
!11334 = !DILocation(line: 333, column: 2, scope: !11327)
!11335 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11336, file: !11336, line: 155, type: !11337, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11339)
!11336 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11337 = !DISubroutineType(types: !11338)
!11338 = !{null, !1800}
!11339 = !{!11340}
!11340 = !DILocalVariable(name: "thread", arg: 1, scope: !11335, file: !11336, line: 155, type: !1800)
!11341 = !DILocation(line: 0, scope: !11335)
!11342 = !DILocation(line: 157, column: 15, scope: !11335)
!11343 = !DILocation(line: 157, column: 28, scope: !11335)
!11344 = !DILocation(line: 158, column: 1, scope: !11335)
!11345 = distinct !DISubprogram(name: "z_cstart", scope: !1706, file: !1706, line: 501, type: !3019, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11346)
!11346 = !{!11347}
!11347 = !DILocalVariable(name: "dummy_thread", scope: !11345, file: !1706, line: 518, type: !1801)
!11348 = !DILocation(line: 507, column: 2, scope: !11345)
!11349 = !DILocation(line: 43, column: 14, scope: !11350, inlinedAt: !11354)
!11350 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11351, file: !11351, line: 40, type: !3019, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11352)
!11351 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11352 = !{!11353}
!11353 = !DILocalVariable(name: "msp", scope: !11350, file: !11351, line: 42, type: !415)
!11354 = distinct !DILocation(line: 44, column: 2, scope: !11355, inlinedAt: !11357)
!11355 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11356, file: !11356, line: 42, type: !3019, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !842)
!11356 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11357 = distinct !DILocation(line: 510, column: 2, scope: !11345)
!11358 = !DILocation(line: 43, column: 3, scope: !11350, inlinedAt: !11354)
!11359 = !DILocation(line: 43, column: 60, scope: !11350, inlinedAt: !11354)
!11360 = !DILocation(line: 0, scope: !11350, inlinedAt: !11354)
!11361 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11362, file: !6540, line: 1153, type: !415)
!11362 = distinct !DISubprogram(name: "__set_MSP", scope: !6540, file: !6540, line: 1153, type: !6631, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11363)
!11363 = !{!11361}
!11364 = !DILocation(line: 0, scope: !11362, inlinedAt: !11365)
!11365 = distinct !DILocation(line: 46, column: 2, scope: !11350, inlinedAt: !11354)
!11366 = !DILocation(line: 1155, column: 3, scope: !11362, inlinedAt: !11365)
!11367 = !{i64 7498045}
!11368 = !DILocation(line: 62, column: 11, scope: !11350, inlinedAt: !11354)
!11369 = !DILocation(line: 102, column: 2, scope: !11370, inlinedAt: !11371)
!11370 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7274, file: !7274, line: 97, type: !3019, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !842)
!11371 = distinct !DILocation(line: 45, column: 2, scope: !11355, inlinedAt: !11357)
!11372 = !DILocation(line: 108, column: 2, scope: !11370, inlinedAt: !11371)
!11373 = !DILocation(line: 112, column: 2, scope: !11370, inlinedAt: !11371)
!11374 = !DILocation(line: 113, column: 2, scope: !11370, inlinedAt: !11371)
!11375 = !DILocation(line: 114, column: 2, scope: !11370, inlinedAt: !11371)
!11376 = !DILocation(line: 116, column: 2, scope: !11370, inlinedAt: !11371)
!11377 = !DILocation(line: 123, column: 13, scope: !11370, inlinedAt: !11371)
!11378 = !DILocation(line: 46, column: 2, scope: !11355, inlinedAt: !11357)
!11379 = !DILocation(line: 47, column: 2, scope: !11355, inlinedAt: !11357)
!11380 = !DILocation(line: 174, column: 12, scope: !11381, inlinedAt: !11382)
!11381 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7274, file: !7274, line: 169, type: !3019, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !842)
!11382 = distinct !DILocation(line: 48, column: 2, scope: !11355, inlinedAt: !11357)
!11383 = !DILocation(line: 179, column: 12, scope: !11381, inlinedAt: !11382)
!11384 = !DILocation(line: 518, column: 2, scope: !11345)
!11385 = !DILocation(line: 518, column: 18, scope: !11345)
!11386 = !DILocation(line: 520, column: 2, scope: !11345)
!11387 = !DILocation(line: 523, column: 2, scope: !11345)
!11388 = !DILocation(line: 526, column: 2, scope: !11345)
!11389 = !DILocation(line: 527, column: 2, scope: !11345)
!11390 = !DILocation(line: 543, column: 24, scope: !11345)
!11391 = !DILocation(line: 543, column: 2, scope: !11345)
!11392 = !DILocation(line: 0, scope: !1936)
!11393 = !DILocation(line: 246, column: 15, scope: !1954)
!11394 = !DILocation(line: 246, column: 36, scope: !1953)
!11395 = !DILocation(line: 246, column: 2, scope: !1954)
!11396 = !DILocation(line: 247, column: 37, scope: !1952)
!11397 = !DILocation(line: 0, scope: !1952)
!11398 = !DILocation(line: 248, column: 19, scope: !1952)
!11399 = !DILocation(line: 248, column: 12, scope: !1952)
!11400 = !DILocation(line: 250, column: 11, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !1952, file: !1706, line: 250, column: 7)
!11402 = !DILocation(line: 250, column: 7, scope: !1952)
!11403 = !DILocation(line: 254, column: 11, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11405, file: !1706, line: 254, column: 8)
!11405 = distinct !DILexicalBlock(scope: !11401, file: !1706, line: 250, column: 20)
!11406 = !DILocation(line: 254, column: 8, scope: !11405)
!11407 = !DILocation(line: 255, column: 9, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11404, file: !1706, line: 254, column: 17)
!11409 = !DILocation(line: 258, column: 9, scope: !11408)
!11410 = !DILocation(line: 261, column: 28, scope: !11408)
!11411 = !DILocation(line: 261, column: 10, scope: !11408)
!11412 = !DILocation(line: 261, column: 17, scope: !11408)
!11413 = !DILocation(line: 261, column: 26, scope: !11408)
!11414 = !DILocation(line: 262, column: 4, scope: !11408)
!11415 = !DILocation(line: 263, column: 9, scope: !11405)
!11416 = !DILocation(line: 263, column: 16, scope: !11405)
!11417 = !DILocation(line: 263, column: 28, scope: !11405)
!11418 = !DILocation(line: 264, column: 3, scope: !11405)
!11419 = !DILocation(line: 246, column: 60, scope: !1953)
!11420 = distinct !{!11420, !11395, !11421}
!11421 = !DILocation(line: 265, column: 2, scope: !1954)
!11422 = !DILocation(line: 266, column: 1, scope: !1936)
!11423 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1552, file: !1552, line: 1814, type: !6574, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11424)
!11424 = !{!11425, !11426}
!11425 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11423, file: !1552, line: 1814, type: !2453)
!11426 = !DILocalVariable(name: "priority", arg: 2, scope: !11423, file: !1552, line: 1814, type: !415)
!11427 = !DILocation(line: 0, scope: !11423)
!11428 = !DILocation(line: 1822, column: 48, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11430, file: !1552, line: 1821, column: 3)
!11430 = distinct !DILexicalBlock(scope: !11423, file: !1552, line: 1816, column: 7)
!11431 = !DILocation(line: 1822, column: 32, scope: !11429)
!11432 = !DILocation(line: 1822, column: 40, scope: !11429)
!11433 = !DILocation(line: 1822, column: 5, scope: !11429)
!11434 = !DILocation(line: 1822, column: 46, scope: !11429)
!11435 = !DILocation(line: 1824, column: 1, scope: !11423)
!11436 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11356, file: !11356, line: 32, type: !3019, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !842)
!11437 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11438, file: !11438, line: 215, type: !11337, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11439)
!11438 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11439 = !{!11440}
!11440 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11437, file: !11438, line: 215, type: !1800)
!11441 = !DILocation(line: 0, scope: !11437)
!11442 = !DILocation(line: 217, column: 21, scope: !11437)
!11443 = !DILocation(line: 217, column: 34, scope: !11437)
!11444 = !DILocation(line: 221, column: 21, scope: !11437)
!11445 = !DILocation(line: 221, column: 34, scope: !11437)
!11446 = !DILocation(line: 232, column: 16, scope: !11437)
!11447 = !DILocation(line: 232, column: 30, scope: !11437)
!11448 = !DILocation(line: 239, column: 24, scope: !11437)
!11449 = !DILocation(line: 240, column: 1, scope: !11437)
!11450 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1706, file: !1706, line: 399, type: !11451, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11453)
!11451 = !DISubroutineType(types: !11452)
!11452 = !{!869}
!11453 = !{!11454}
!11454 = !DILocalVariable(name: "stack_ptr", scope: !11450, file: !1706, line: 401, type: !869)
!11455 = !DILocation(line: 404, column: 2, scope: !11450)
!11456 = !DILocation(line: 416, column: 24, scope: !11450)
!11457 = !DILocation(line: 418, column: 14, scope: !11450)
!11458 = !DILocation(line: 0, scope: !11450)
!11459 = !DILocation(line: 423, column: 2, scope: !11450)
!11460 = !DILocation(line: 424, column: 2, scope: !11450)
!11461 = !DILocation(line: 426, column: 2, scope: !11450)
!11462 = !DILocation(line: 428, column: 2, scope: !11450)
!11463 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1706, file: !1706, line: 432, type: !11464, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11466)
!11464 = !DISubroutineType(types: !11465)
!11465 = !{null, !869}
!11466 = !{!11467}
!11467 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11463, file: !1706, line: 432, type: !869)
!11468 = !DILocation(line: 0, scope: !11463)
!11469 = !DILocation(line: 435, column: 2, scope: !11463)
!11470 = !DILocation(line: 445, column: 2, scope: !11463)
!11471 = distinct !DISubprogram(name: "bg_thread_main", scope: !1706, file: !1706, line: 277, type: !3330, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !11472)
!11472 = !{!11473, !11474, !11475}
!11473 = !DILocalVariable(name: "unused1", arg: 1, scope: !11471, file: !1706, line: 277, type: !102)
!11474 = !DILocalVariable(name: "unused2", arg: 2, scope: !11471, file: !1706, line: 277, type: !102)
!11475 = !DILocalVariable(name: "unused3", arg: 3, scope: !11471, file: !1706, line: 277, type: !102)
!11476 = !DILocation(line: 0, scope: !11471)
!11477 = !DILocation(line: 291, column: 20, scope: !11471)
!11478 = !DILocation(line: 293, column: 2, scope: !11471)
!11479 = !DILocation(line: 297, column: 2, scope: !11471)
!11480 = !DILocation(line: 305, column: 2, scope: !11471)
!11481 = !DILocation(line: 307, column: 2, scope: !11471)
!11482 = !DILocation(line: 330, column: 8, scope: !11471)
!11483 = !DILocation(line: 333, column: 34, scope: !11471)
!11484 = !DILocation(line: 339, column: 1, scope: !11471)
!11485 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1963, file: !1963, line: 45, type: !11486, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11494)
!11486 = !DISubroutineType(types: !11487)
!11487 = !{null, !11488, !102}
!11488 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !670, line: 103, baseType: !11489)
!11489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11490, size: 32)
!11490 = !DISubroutineType(types: !11491)
!11491 = !{null, !11492, !102}
!11492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11493, size: 32)
!11493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1968)
!11494 = !{!11495, !11496}
!11495 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11485, file: !1963, line: 45, type: !11488)
!11496 = !DILocalVariable(name: "user_data", arg: 2, scope: !11485, file: !1963, line: 45, type: !102)
!11497 = !DILocation(line: 0, scope: !11485)
!11498 = !DILocation(line: 71, column: 1, scope: !11485)
!11499 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1963, file: !1963, line: 73, type: !11486, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11500)
!11500 = !{!11501, !11502}
!11501 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11499, file: !1963, line: 73, type: !11488)
!11502 = !DILocalVariable(name: "user_data", arg: 2, scope: !11499, file: !1963, line: 73, type: !102)
!11503 = !DILocation(line: 0, scope: !11499)
!11504 = !DILocation(line: 95, column: 1, scope: !11499)
!11505 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1963, file: !1963, line: 97, type: !7275, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !842)
!11506 = !DILocation(line: 1031, column: 3, scope: !11507, inlinedAt: !11510)
!11507 = distinct !DISubprogram(name: "__get_IPSR", scope: !6540, file: !6540, line: 1027, type: !6621, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11508)
!11508 = !{!11509}
!11509 = !DILocalVariable(name: "result", scope: !11507, file: !6540, line: 1029, type: !415)
!11510 = distinct !DILocation(line: 48, column: 10, scope: !11511, inlinedAt: !11512)
!11511 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7274, file: !7274, line: 46, type: !7275, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !842)
!11512 = distinct !DILocation(line: 99, column: 9, scope: !11505)
!11513 = !{i64 7012865}
!11514 = !DILocation(line: 0, scope: !11507, inlinedAt: !11510)
!11515 = !DILocation(line: 48, column: 9, scope: !11511, inlinedAt: !11512)
!11516 = !DILocation(line: 99, column: 2, scope: !11505)
!11517 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1963, file: !1963, line: 106, type: !3019, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !842)
!11518 = !DILocation(line: 108, column: 2, scope: !11517)
!11519 = !DILocation(line: 108, column: 17, scope: !11517)
!11520 = !DILocation(line: 108, column: 30, scope: !11517)
!11521 = !DILocation(line: 109, column: 1, scope: !11517)
!11522 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1963, file: !1963, line: 116, type: !3019, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !842)
!11523 = !DILocation(line: 118, column: 2, scope: !11522)
!11524 = !DILocation(line: 118, column: 17, scope: !11522)
!11525 = !DILocation(line: 118, column: 30, scope: !11522)
!11526 = !DILocation(line: 119, column: 1, scope: !11522)
!11527 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1963, file: !1963, line: 126, type: !7275, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !842)
!11528 = !DILocation(line: 128, column: 10, scope: !11527)
!11529 = !DILocation(line: 128, column: 25, scope: !11527)
!11530 = !DILocation(line: 128, column: 38, scope: !11527)
!11531 = !DILocation(line: 128, column: 53, scope: !11527)
!11532 = !DILocation(line: 128, column: 2, scope: !11527)
!11533 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1963, file: !1963, line: 187, type: !11534, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11536)
!11534 = !DISubroutineType(types: !11535)
!11535 = !{!103, !1967, !574}
!11536 = !{!11537, !11538}
!11537 = !DILocalVariable(name: "thread", arg: 1, scope: !11533, file: !1963, line: 187, type: !1967)
!11538 = !DILocalVariable(name: "value", arg: 2, scope: !11533, file: !1963, line: 187, type: !574)
!11539 = !DILocation(line: 0, scope: !11533)
!11540 = !DILocation(line: 206, column: 2, scope: !11533)
!11541 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1963, file: !1963, line: 238, type: !11542, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11544)
!11542 = !DISubroutineType(types: !11543)
!11543 = !{!574, !1967}
!11544 = !{!11545}
!11545 = !DILocalVariable(name: "thread", arg: 1, scope: !11541, file: !1963, line: 238, type: !1967)
!11546 = !DILocation(line: 0, scope: !11541)
!11547 = !DILocation(line: 244, column: 2, scope: !11541)
!11548 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1963, file: !1963, line: 248, type: !11549, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11551)
!11549 = !DISubroutineType(types: !11550)
!11550 = !{!103, !1966, !869, !1714}
!11551 = !{!11552, !11553, !11554}
!11552 = !DILocalVariable(name: "thread", arg: 1, scope: !11548, file: !1963, line: 248, type: !1966)
!11553 = !DILocalVariable(name: "buf", arg: 2, scope: !11548, file: !1963, line: 248, type: !869)
!11554 = !DILocalVariable(name: "size", arg: 3, scope: !11548, file: !1963, line: 248, type: !1714)
!11555 = !DILocation(line: 0, scope: !11548)
!11556 = !DILocation(line: 257, column: 2, scope: !11548)
!11557 = !DILocation(line: 0, scope: !1962)
!11558 = !DILocation(line: 281, column: 11, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !1962, file: !1963, line: 281, column: 6)
!11560 = !DILocation(line: 281, column: 20, scope: !11559)
!11561 = !DILocation(line: 275, column: 45, scope: !1962)
!11562 = !DILocation(line: 285, column: 10, scope: !1962)
!11563 = !DILocation(line: 0, scope: !2080)
!11564 = !DILocation(line: 293, column: 39, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !2080, file: !1963, line: 293, column: 2)
!11566 = !DILocation(line: 293, column: 2, scope: !2080)
!11567 = !DILocation(line: 273, column: 14, scope: !1962)
!11568 = !DILocation(line: 309, column: 2, scope: !1962)
!11569 = !DILocation(line: 309, column: 11, scope: !1962)
!11570 = !DILocation(line: 311, column: 2, scope: !1962)
!11571 = !DILocation(line: 293, column: 26, scope: !11565)
!11572 = !DILocation(line: 294, column: 9, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11565, file: !1963, line: 293, column: 54)
!11574 = !DILocation(line: 295, column: 21, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11573, file: !1963, line: 295, column: 7)
!11576 = !DILocation(line: 295, column: 28, scope: !11575)
!11577 = !DILocation(line: 295, column: 7, scope: !11573)
!11578 = !DILocation(line: 299, column: 25, scope: !11573)
!11579 = !DILocation(line: 299, column: 41, scope: !11573)
!11580 = !DILocation(line: 300, column: 7, scope: !11573)
!11581 = !DILocation(line: 300, column: 26, scope: !11573)
!11582 = !DILocation(line: 299, column: 10, scope: !11573)
!11583 = !DILocation(line: 299, column: 7, scope: !11573)
!11584 = !DILocation(line: 302, column: 16, scope: !11573)
!11585 = !DILocation(line: 304, column: 20, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11573, file: !1963, line: 304, column: 7)
!11587 = !DILocation(line: 304, column: 7, scope: !11573)
!11588 = !DILocation(line: 305, column: 26, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11586, file: !1963, line: 304, column: 26)
!11590 = !DILocation(line: 305, column: 42, scope: !11589)
!11591 = !DILocation(line: 305, column: 11, scope: !11589)
!11592 = !DILocation(line: 305, column: 8, scope: !11589)
!11593 = !DILocation(line: 306, column: 3, scope: !11589)
!11594 = !DILocation(line: 293, column: 50, scope: !11565)
!11595 = !DILocation(line: 312, column: 1, scope: !1962)
!11596 = distinct !DISubprogram(name: "copy_bytes", scope: !1963, file: !1963, line: 261, type: !11597, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11599)
!11597 = !DISubroutineType(types: !11598)
!11598 = !{!1714, !869, !1714, !574, !1714}
!11599 = !{!11600, !11601, !11602, !11603, !11604}
!11600 = !DILocalVariable(name: "dest", arg: 1, scope: !11596, file: !1963, line: 261, type: !869)
!11601 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11596, file: !1963, line: 261, type: !1714)
!11602 = !DILocalVariable(name: "src", arg: 3, scope: !11596, file: !1963, line: 261, type: !574)
!11603 = !DILocalVariable(name: "src_size", arg: 4, scope: !11596, file: !1963, line: 261, type: !1714)
!11604 = !DILocalVariable(name: "bytes_to_copy", scope: !11596, file: !1963, line: 263, type: !1714)
!11605 = !DILocation(line: 0, scope: !11596)
!11606 = !DILocation(line: 265, column: 18, scope: !11596)
!11607 = !DILocation(line: 266, column: 2, scope: !11596)
!11608 = !DILocation(line: 268, column: 2, scope: !11596)
!11609 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1963, file: !1963, line: 383, type: !11610, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11612)
!11610 = !DISubroutineType(types: !11611)
!11611 = !{null, !1967}
!11612 = !{!11613}
!11613 = !DILocalVariable(name: "thread", arg: 1, scope: !11609, file: !1963, line: 383, type: !1967)
!11614 = !DILocation(line: 0, scope: !11609)
!11615 = !DILocation(line: 387, column: 2, scope: !11609)
!11616 = !DILocation(line: 388, column: 1, scope: !11609)
!11617 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1963, file: !1963, line: 528, type: !11618, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11625)
!11618 = !DISubroutineType(types: !11619)
!11619 = !{!869, !1967, !11620, !1714, !3327, !102, !102, !102, !103, !415, !574}
!11620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11621, size: 32)
!11621 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3328, line: 44, baseType: !11622)
!11622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1917, line: 47, size: 8, elements: !11623)
!11623 = !{!11624}
!11624 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11622, file: !1917, line: 48, baseType: !108, size: 8)
!11625 = !{!11626, !11627, !11628, !11629, !11630, !11631, !11632, !11633, !11634, !11635, !11636}
!11626 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11617, file: !1963, line: 528, type: !1967)
!11627 = !DILocalVariable(name: "stack", arg: 2, scope: !11617, file: !1963, line: 529, type: !11620)
!11628 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11617, file: !1963, line: 529, type: !1714)
!11629 = !DILocalVariable(name: "entry", arg: 4, scope: !11617, file: !1963, line: 530, type: !3327)
!11630 = !DILocalVariable(name: "p1", arg: 5, scope: !11617, file: !1963, line: 531, type: !102)
!11631 = !DILocalVariable(name: "p2", arg: 6, scope: !11617, file: !1963, line: 531, type: !102)
!11632 = !DILocalVariable(name: "p3", arg: 7, scope: !11617, file: !1963, line: 531, type: !102)
!11633 = !DILocalVariable(name: "prio", arg: 8, scope: !11617, file: !1963, line: 532, type: !103)
!11634 = !DILocalVariable(name: "options", arg: 9, scope: !11617, file: !1963, line: 532, type: !415)
!11635 = !DILocalVariable(name: "name", arg: 10, scope: !11617, file: !1963, line: 532, type: !574)
!11636 = !DILocalVariable(name: "stack_ptr", scope: !11617, file: !1963, line: 534, type: !869)
!11637 = !DILocation(line: 0, scope: !11617)
!11638 = !DILocation(line: 550, column: 28, scope: !11617)
!11639 = !DILocation(line: 550, column: 2, scope: !11617)
!11640 = !DILocation(line: 553, column: 34, scope: !11617)
!11641 = !DILocation(line: 553, column: 2, scope: !11617)
!11642 = !DILocation(line: 554, column: 14, scope: !11617)
!11643 = !DILocation(line: 564, column: 2, scope: !11617)
!11644 = !DILocation(line: 567, column: 14, scope: !11617)
!11645 = !DILocation(line: 567, column: 24, scope: !11617)
!11646 = !DILocation(line: 612, column: 7, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11617, file: !1963, line: 612, column: 6)
!11648 = !DILocation(line: 612, column: 6, scope: !11617)
!11649 = !DILocation(line: 627, column: 40, scope: !11617)
!11650 = !DILocation(line: 637, column: 2, scope: !11617)
!11651 = !DILocation(line: 613, column: 15, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11647, file: !1963, line: 612, column: 17)
!11653 = !DILocation(line: 613, column: 29, scope: !11652)
!11654 = !DILocation(line: 638, column: 1, scope: !11617)
!11655 = distinct !DISubprogram(name: "z_waitq_init", scope: !11656, file: !11656, line: 47, type: !11657, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11659)
!11656 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11657 = !DISubroutineType(types: !11658)
!11658 = !{null, !1998}
!11659 = !{!11660}
!11660 = !DILocalVariable(name: "w", arg: 1, scope: !11655, file: !11656, line: 47, type: !1998)
!11661 = !DILocation(line: 0, scope: !11655)
!11662 = !DILocation(line: 49, column: 21, scope: !11655)
!11663 = !DILocation(line: 49, column: 2, scope: !11655)
!11664 = !DILocation(line: 50, column: 1, scope: !11655)
!11665 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1963, file: !1963, line: 791, type: !11666, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11669)
!11666 = !DISubroutineType(types: !11667)
!11667 = !{null, !11668, !103, !415, !32}
!11668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!11669 = !{!11670, !11671, !11672, !11673}
!11670 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11665, file: !1963, line: 791, type: !11668)
!11671 = !DILocalVariable(name: "priority", arg: 2, scope: !11665, file: !1963, line: 791, type: !103)
!11672 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11665, file: !1963, line: 792, type: !415)
!11673 = !DILocalVariable(name: "options", arg: 4, scope: !11665, file: !1963, line: 792, type: !32)
!11674 = !DILocation(line: 0, scope: !11665)
!11675 = !DILocation(line: 795, column: 15, scope: !11665)
!11676 = !DILocation(line: 795, column: 25, scope: !11665)
!11677 = !DILocation(line: 796, column: 30, scope: !11665)
!11678 = !DILocation(line: 796, column: 15, scope: !11665)
!11679 = !DILocation(line: 796, column: 28, scope: !11665)
!11680 = !DILocation(line: 797, column: 30, scope: !11665)
!11681 = !DILocation(line: 797, column: 15, scope: !11665)
!11682 = !DILocation(line: 797, column: 28, scope: !11665)
!11683 = !DILocation(line: 799, column: 22, scope: !11665)
!11684 = !DILocation(line: 799, column: 15, scope: !11665)
!11685 = !DILocation(line: 799, column: 20, scope: !11665)
!11686 = !DILocation(line: 801, column: 15, scope: !11665)
!11687 = !DILocation(line: 801, column: 28, scope: !11665)
!11688 = !DILocation(line: 814, column: 2, scope: !11665)
!11689 = !DILocation(line: 815, column: 1, scope: !11665)
!11690 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1963, file: !1963, line: 449, type: !11691, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11693)
!11691 = !DISubroutineType(types: !11692)
!11692 = !{!869, !1967, !11620, !1714}
!11693 = !{!11694, !11695, !11696, !11697, !11698, !11699, !11700, !11701}
!11694 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11690, file: !1963, line: 449, type: !1967)
!11695 = !DILocalVariable(name: "stack", arg: 2, scope: !11690, file: !1963, line: 450, type: !11620)
!11696 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11690, file: !1963, line: 450, type: !1714)
!11697 = !DILocalVariable(name: "stack_obj_size", scope: !11690, file: !1963, line: 452, type: !1714)
!11698 = !DILocalVariable(name: "stack_buf_size", scope: !11690, file: !1963, line: 452, type: !1714)
!11699 = !DILocalVariable(name: "stack_ptr", scope: !11690, file: !1963, line: 453, type: !869)
!11700 = !DILocalVariable(name: "stack_buf_start", scope: !11690, file: !1963, line: 453, type: !869)
!11701 = !DILocalVariable(name: "delta", scope: !11690, file: !1963, line: 454, type: !1714)
!11702 = !DILocation(line: 0, scope: !11690)
!11703 = !DILocation(line: 465, column: 20, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11690, file: !1963, line: 463, column: 2)
!11705 = !DILocation(line: 473, column: 28, scope: !11690)
!11706 = !DILocation(line: 520, column: 2, scope: !11690)
!11707 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11708, file: !11708, line: 40, type: !11709, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11711)
!11708 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11709 = !DISubroutineType(types: !11710)
!11710 = !{null, !11668}
!11711 = !{!11712}
!11712 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11707, file: !11708, line: 40, type: !11668)
!11713 = !DILocation(line: 0, scope: !11707)
!11714 = !DILocation(line: 42, column: 31, scope: !11707)
!11715 = !DILocation(line: 42, column: 2, scope: !11707)
!11716 = !DILocation(line: 43, column: 1, scope: !11707)
!11717 = distinct !DISubprogram(name: "z_init_timeout", scope: !11708, file: !11708, line: 25, type: !2024, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11718)
!11718 = !{!11719}
!11719 = !DILocalVariable(name: "to", arg: 1, scope: !11717, file: !11708, line: 25, type: !2026)
!11720 = !DILocation(line: 0, scope: !11717)
!11721 = !DILocation(line: 27, column: 22, scope: !11717)
!11722 = !DILocation(line: 27, column: 2, scope: !11717)
!11723 = !DILocation(line: 28, column: 1, scope: !11717)
!11724 = distinct !DISubprogram(name: "sys_dnode_init", scope: !679, file: !679, line: 211, type: !11725, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11727)
!11725 = !DISubroutineType(types: !11726)
!11726 = !{null, !2064}
!11727 = !{!11728}
!11728 = !DILocalVariable(name: "node", arg: 1, scope: !11724, file: !679, line: 211, type: !2064)
!11729 = !DILocation(line: 0, scope: !11724)
!11730 = !DILocation(line: 213, column: 8, scope: !11724)
!11731 = !DILocation(line: 213, column: 13, scope: !11724)
!11732 = !DILocation(line: 214, column: 8, scope: !11724)
!11733 = !DILocation(line: 214, column: 13, scope: !11724)
!11734 = !DILocation(line: 215, column: 1, scope: !11724)
!11735 = distinct !DISubprogram(name: "sys_dlist_init", scope: !679, file: !679, line: 197, type: !11736, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11739)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{null, !11738}
!11738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!11739 = !{!11740}
!11740 = !DILocalVariable(name: "list", arg: 1, scope: !11735, file: !679, line: 197, type: !11738)
!11741 = !DILocation(line: 0, scope: !11735)
!11742 = !DILocation(line: 199, column: 8, scope: !11735)
!11743 = !DILocation(line: 199, column: 13, scope: !11735)
!11744 = !DILocation(line: 200, column: 8, scope: !11735)
!11745 = !DILocation(line: 200, column: 13, scope: !11735)
!11746 = !DILocation(line: 201, column: 1, scope: !11735)
!11747 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1963, file: !1963, line: 641, type: !11748, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11754)
!11748 = !DISubroutineType(types: !11749)
!11749 = !{!1966, !1967, !11620, !1714, !3327, !102, !102, !102, !103, !415, !11750}
!11750 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1547, line: 67, baseType: !11751)
!11751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1547, line: 65, size: 64, elements: !11752)
!11752 = !{!11753}
!11753 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11751, file: !1547, line: 66, baseType: !1546, size: 64)
!11754 = !{!11755, !11756, !11757, !11758, !11759, !11760, !11761, !11762, !11763, !11764}
!11755 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11747, file: !1963, line: 641, type: !1967)
!11756 = !DILocalVariable(name: "stack", arg: 2, scope: !11747, file: !1963, line: 642, type: !11620)
!11757 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11747, file: !1963, line: 643, type: !1714)
!11758 = !DILocalVariable(name: "entry", arg: 4, scope: !11747, file: !1963, line: 643, type: !3327)
!11759 = !DILocalVariable(name: "p1", arg: 5, scope: !11747, file: !1963, line: 644, type: !102)
!11760 = !DILocalVariable(name: "p2", arg: 6, scope: !11747, file: !1963, line: 644, type: !102)
!11761 = !DILocalVariable(name: "p3", arg: 7, scope: !11747, file: !1963, line: 644, type: !102)
!11762 = !DILocalVariable(name: "prio", arg: 8, scope: !11747, file: !1963, line: 645, type: !103)
!11763 = !DILocalVariable(name: "options", arg: 9, scope: !11747, file: !1963, line: 645, type: !415)
!11764 = !DILocalVariable(name: "delay", arg: 10, scope: !11747, file: !1963, line: 645, type: !11750)
!11765 = !DILocation(line: 0, scope: !11747)
!11766 = !DILocation(line: 649, column: 2, scope: !11747)
!11767 = !DILocation(line: 652, column: 7, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11747, file: !1963, line: 652, column: 6)
!11769 = !DILocation(line: 652, column: 6, scope: !11747)
!11770 = !DILocation(line: 653, column: 3, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11768, file: !1963, line: 652, column: 39)
!11772 = !DILocation(line: 654, column: 2, scope: !11771)
!11773 = !DILocation(line: 656, column: 2, scope: !11747)
!11774 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1963, file: !1963, line: 401, type: !11775, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11777)
!11775 = !DISubroutineType(types: !11776)
!11776 = !{null, !1967, !11750}
!11777 = !{!11778, !11779}
!11778 = !DILocalVariable(name: "thread", arg: 1, scope: !11774, file: !1963, line: 401, type: !1967)
!11779 = !DILocalVariable(name: "delay", arg: 2, scope: !11774, file: !1963, line: 401, type: !11750)
!11780 = !DILocation(line: 0, scope: !11774)
!11781 = !DILocation(line: 404, column: 6, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11774, file: !1963, line: 404, column: 6)
!11783 = !DILocation(line: 404, column: 6, scope: !11774)
!11784 = !DILocation(line: 405, column: 3, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11782, file: !1963, line: 404, column: 38)
!11786 = !DILocation(line: 406, column: 2, scope: !11785)
!11787 = !DILocation(line: 407, column: 3, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11782, file: !1963, line: 406, column: 9)
!11789 = !DILocation(line: 413, column: 1, scope: !11774)
!11790 = distinct !DISubprogram(name: "k_thread_start", scope: !3443, file: !3443, line: 205, type: !11791, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11793)
!11791 = !DISubroutineType(types: !11792)
!11792 = !{null, !1966}
!11793 = !{!11794}
!11794 = !DILocalVariable(name: "thread", arg: 1, scope: !11790, file: !3443, line: 205, type: !1966)
!11795 = !DILocation(line: 0, scope: !11790)
!11796 = !DILocation(line: 214, column: 2, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11790, file: !3443, line: 214, column: 2)
!11798 = !{i64 2151062629}
!11799 = !DILocation(line: 215, column: 2, scope: !11790)
!11800 = !DILocation(line: 216, column: 1, scope: !11790)
!11801 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11708, file: !11708, line: 47, type: !11775, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11802)
!11802 = !{!11803, !11804}
!11803 = !DILocalVariable(name: "thread", arg: 1, scope: !11801, file: !11708, line: 47, type: !1967)
!11804 = !DILocalVariable(name: "ticks", arg: 2, scope: !11801, file: !11708, line: 47, type: !11750)
!11805 = !DILocation(line: 0, scope: !11801)
!11806 = !DILocation(line: 49, column: 30, scope: !11801)
!11807 = !DILocation(line: 49, column: 2, scope: !11801)
!11808 = !DILocation(line: 50, column: 1, scope: !11801)
!11809 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1963, file: !1963, line: 748, type: !3019, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11810)
!11810 = !{!11811, !11829}
!11811 = !DILocalVariable(name: "thread_data", scope: !11812, file: !1963, line: 750, type: !11813)
!11812 = distinct !DILexicalBlock(scope: !11809, file: !1963, line: 750, column: 2)
!11813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11814, size: 32)
!11814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !670, line: 620, size: 384, elements: !11815)
!11815 = !{!11816, !11817, !11818, !11819, !11820, !11821, !11822, !11823, !11824, !11825, !11826, !11828}
!11816 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11814, file: !670, line: 621, baseType: !1967, size: 32)
!11817 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11814, file: !670, line: 622, baseType: !11620, size: 32, offset: 32)
!11818 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11814, file: !670, line: 623, baseType: !32, size: 32, offset: 64)
!11819 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11814, file: !670, line: 624, baseType: !3327, size: 32, offset: 96)
!11820 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11814, file: !670, line: 625, baseType: !102, size: 32, offset: 128)
!11821 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11814, file: !670, line: 626, baseType: !102, size: 32, offset: 160)
!11822 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11814, file: !670, line: 627, baseType: !102, size: 32, offset: 192)
!11823 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11814, file: !670, line: 628, baseType: !103, size: 32, offset: 224)
!11824 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11814, file: !670, line: 629, baseType: !415, size: 32, offset: 256)
!11825 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11814, file: !670, line: 630, baseType: !700, size: 32, offset: 288)
!11826 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11814, file: !670, line: 631, baseType: !11827, size: 32, offset: 320)
!11827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!11828 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11814, file: !670, line: 632, baseType: !574, size: 32, offset: 352)
!11829 = !DILocalVariable(name: "thread_data", scope: !11830, file: !1963, line: 781, type: !11813)
!11830 = distinct !DILexicalBlock(scope: !11809, file: !1963, line: 781, column: 2)
!11831 = !DILocation(line: 0, scope: !11812)
!11832 = !DILocation(line: 750, column: 2, scope: !11812)
!11833 = !DILocation(line: 780, column: 2, scope: !11809)
!11834 = !DILocation(line: 0, scope: !11830)
!11835 = !DILocation(line: 781, column: 2, scope: !11830)
!11836 = !DILocation(line: 752, column: 17, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11838, file: !1963, line: 750, column: 38)
!11838 = distinct !DILexicalBlock(scope: !11812, file: !1963, line: 750, column: 2)
!11839 = !DILocation(line: 753, column: 17, scope: !11837)
!11840 = !DILocation(line: 754, column: 17, scope: !11837)
!11841 = !DILocation(line: 755, column: 17, scope: !11837)
!11842 = !DILocation(line: 756, column: 17, scope: !11837)
!11843 = !DILocation(line: 757, column: 17, scope: !11837)
!11844 = !DILocation(line: 758, column: 17, scope: !11837)
!11845 = !DILocation(line: 759, column: 17, scope: !11837)
!11846 = !DILocation(line: 760, column: 17, scope: !11837)
!11847 = !DILocation(line: 751, column: 3, scope: !11837)
!11848 = !DILocation(line: 763, column: 16, scope: !11837)
!11849 = !DILocation(line: 763, column: 29, scope: !11837)
!11850 = !DILocation(line: 763, column: 39, scope: !11837)
!11851 = !DILocation(line: 750, column: 2, scope: !11838)
!11852 = !DILocation(line: 750, column: 2, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11838, file: !1963, line: 750, column: 2)
!11854 = distinct !{!11854, !11832, !11855}
!11855 = !DILocation(line: 764, column: 2, scope: !11812)
!11856 = !DILocation(line: 787, column: 2, scope: !11809)
!11857 = !DILocation(line: 788, column: 1, scope: !11809)
!11858 = !DILocation(line: 782, column: 20, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11860, file: !1963, line: 782, column: 7)
!11860 = distinct !DILexicalBlock(scope: !11861, file: !1963, line: 781, column: 38)
!11861 = distinct !DILexicalBlock(scope: !11830, file: !1963, line: 781, column: 2)
!11862 = !DILocation(line: 782, column: 31, scope: !11859)
!11863 = !DILocation(line: 782, column: 7, scope: !11860)
!11864 = !DILocation(line: 783, column: 37, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11859, file: !1963, line: 782, column: 51)
!11866 = !DILocation(line: 784, column: 10, scope: !11865)
!11867 = !DILocation(line: 783, column: 4, scope: !11865)
!11868 = !DILocation(line: 785, column: 3, scope: !11865)
!11869 = !DILocation(line: 781, column: 2, scope: !11861)
!11870 = !DILocation(line: 781, column: 2, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11861, file: !1963, line: 781, column: 2)
!11872 = distinct !{!11872, !11835, !11873}
!11873 = !DILocation(line: 786, column: 2, scope: !11830)
!11874 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5720, file: !5720, line: 403, type: !5721, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11875)
!11875 = !{!11876}
!11876 = !DILocalVariable(name: "t", arg: 1, scope: !11874, file: !5720, line: 403, type: !2065)
!11877 = !DILocation(line: 0, scope: !11874)
!11878 = !DILocalVariable(name: "t", arg: 1, scope: !11879, file: !5720, line: 102, type: !2065)
!11879 = distinct !DISubprogram(name: "z_tmcvt", scope: !5720, file: !5720, line: 102, type: !5728, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11880)
!11880 = !{!11878, !11881, !11882, !11883, !11884, !11885, !11886, !11887, !11888, !11889, !11890}
!11881 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11879, file: !5720, line: 102, type: !415)
!11882 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11879, file: !5720, line: 103, type: !415)
!11883 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11879, file: !5720, line: 103, type: !583)
!11884 = !DILocalVariable(name: "result32", arg: 5, scope: !11879, file: !5720, line: 104, type: !583)
!11885 = !DILocalVariable(name: "round_up", arg: 6, scope: !11879, file: !5720, line: 104, type: !583)
!11886 = !DILocalVariable(name: "round_off", arg: 7, scope: !11879, file: !5720, line: 105, type: !583)
!11887 = !DILocalVariable(name: "mul_ratio", scope: !11879, file: !5720, line: 107, type: !583)
!11888 = !DILocalVariable(name: "div_ratio", scope: !11879, file: !5720, line: 109, type: !583)
!11889 = !DILocalVariable(name: "off", scope: !11879, file: !5720, line: 116, type: !2065)
!11890 = !DILocalVariable(name: "rdivisor", scope: !11891, file: !5720, line: 119, type: !415)
!11891 = distinct !DILexicalBlock(scope: !11892, file: !5720, line: 118, column: 18)
!11892 = distinct !DILexicalBlock(scope: !11879, file: !5720, line: 118, column: 6)
!11893 = !DILocation(line: 0, scope: !11879, inlinedAt: !11894)
!11894 = distinct !DILocation(line: 406, column: 9, scope: !11874)
!11895 = !DILocation(line: 145, column: 13, scope: !11896, inlinedAt: !11894)
!11896 = distinct !DILexicalBlock(scope: !11897, file: !5720, line: 144, column: 10)
!11897 = distinct !DILexicalBlock(scope: !11898, file: !5720, line: 142, column: 7)
!11898 = distinct !DILexicalBlock(scope: !11899, file: !5720, line: 141, column: 24)
!11899 = distinct !DILexicalBlock(scope: !11900, file: !5720, line: 141, column: 13)
!11900 = distinct !DILexicalBlock(scope: !11879, file: !5720, line: 134, column: 6)
!11901 = !DILocation(line: 406, column: 2, scope: !11874)
!11902 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1963, file: !1963, line: 817, type: !3325, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11903)
!11903 = !{!11904, !11905, !11906, !11907}
!11904 = !DILocalVariable(name: "entry", arg: 1, scope: !11902, file: !1963, line: 817, type: !3327)
!11905 = !DILocalVariable(name: "p1", arg: 2, scope: !11902, file: !1963, line: 818, type: !102)
!11906 = !DILocalVariable(name: "p2", arg: 3, scope: !11902, file: !1963, line: 818, type: !102)
!11907 = !DILocalVariable(name: "p3", arg: 4, scope: !11902, file: !1963, line: 818, type: !102)
!11908 = !DILocation(line: 0, scope: !11902)
!11909 = !DILocation(line: 822, column: 2, scope: !11902)
!11910 = !DILocation(line: 822, column: 17, scope: !11902)
!11911 = !DILocation(line: 822, column: 30, scope: !11902)
!11912 = !DILocation(line: 823, column: 2, scope: !11902)
!11913 = !DILocation(line: 845, column: 2, scope: !11902)
!11914 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1963, file: !1963, line: 888, type: !11915, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11917)
!11915 = !DISubroutineType(types: !11916)
!11916 = !{!103, !1967}
!11917 = !{!11918}
!11918 = !DILocalVariable(name: "thread", arg: 1, scope: !11914, file: !1963, line: 888, type: !1967)
!11919 = !DILocation(line: 0, scope: !11914)
!11920 = !DILocation(line: 893, column: 2, scope: !11914)
!11921 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1963, file: !1963, line: 897, type: !11922, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11924)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{!103, !1967, !32}
!11924 = !{!11925, !11926}
!11925 = !DILocalVariable(name: "thread", arg: 1, scope: !11921, file: !1963, line: 897, type: !1967)
!11926 = !DILocalVariable(name: "options", arg: 2, scope: !11921, file: !1963, line: 897, type: !32)
!11927 = !DILocation(line: 0, scope: !11921)
!11928 = !DILocation(line: 902, column: 2, scope: !11921)
!11929 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1963, file: !1963, line: 1072, type: !11930, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11935)
!11930 = !DISubroutineType(types: !11931)
!11931 = !{!103, !1966, !11932}
!11932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11933, size: 32)
!11933 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !1802, line: 234, baseType: !11934)
!11934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !1802, line: 192, elements: !842)
!11935 = !{!11936, !11937}
!11936 = !DILocalVariable(name: "thread", arg: 1, scope: !11929, file: !1963, line: 1072, type: !1966)
!11937 = !DILocalVariable(name: "stats", arg: 2, scope: !11929, file: !1963, line: 1073, type: !11932)
!11938 = !DILocation(line: 0, scope: !11929)
!11939 = !DILocation(line: 1075, column: 14, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11929, file: !1963, line: 1075, column: 6)
!11941 = !DILocation(line: 1075, column: 23, scope: !11940)
!11942 = !DILocation(line: 1086, column: 1, scope: !11929)
!11943 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1963, file: !1963, line: 1088, type: !11944, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !11946)
!11944 = !DISubroutineType(types: !11945)
!11945 = !{!103, !11932}
!11946 = !{!11947}
!11947 = !DILocalVariable(name: "stats", arg: 1, scope: !11943, file: !1963, line: 1088, type: !11932)
!11948 = !DILocation(line: 0, scope: !11943)
!11949 = !DILocation(line: 1094, column: 12, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11943, file: !1963, line: 1094, column: 6)
!11951 = !DILocation(line: 1120, column: 1, scope: !11943)
!11952 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11953, file: !11953, line: 20, type: !3019, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !842)
!11953 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11954 = !DILocation(line: 30, column: 2, scope: !11952)
!11955 = !DILocation(line: 31, column: 1, scope: !11952)
!11956 = distinct !DISubprogram(name: "idle", scope: !11953, file: !11953, line: 33, type: !3330, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !11957)
!11957 = !{!11958, !11959, !11960}
!11958 = !DILocalVariable(name: "unused1", arg: 1, scope: !11956, file: !11953, line: 33, type: !102)
!11959 = !DILocalVariable(name: "unused2", arg: 2, scope: !11956, file: !11953, line: 33, type: !102)
!11960 = !DILocalVariable(name: "unused3", arg: 3, scope: !11956, file: !11953, line: 33, type: !102)
!11961 = !DILocation(line: 0, scope: !11956)
!11962 = !DILocation(line: 41, column: 2, scope: !11956)
!11963 = !DILocation(line: 55, column: 2, scope: !11964, inlinedAt: !11968)
!11964 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5666, file: !5666, line: 42, type: !5667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !11965)
!11965 = !{!11966, !11967}
!11966 = !DILocalVariable(name: "key", scope: !11964, file: !5666, line: 44, type: !32)
!11967 = !DILocalVariable(name: "tmp", scope: !11964, file: !5666, line: 53, type: !32)
!11968 = distinct !DILocation(line: 62, column: 10, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11956, file: !11953, line: 41, column: 15)
!11970 = !{i64 2841197}
!11971 = !DILocation(line: 0, scope: !11964, inlinedAt: !11968)
!11972 = !DILocation(line: 86, column: 3, scope: !11969)
!11973 = distinct !{!11973, !11962, !11974}
!11974 = !DILocation(line: 105, column: 2, scope: !11956)
!11975 = distinct !DISubprogram(name: "k_cpu_idle", scope: !670, file: !670, line: 5627, type: !3019, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !842)
!11976 = !DILocation(line: 5629, column: 2, scope: !11975)
!11977 = !DILocation(line: 5630, column: 1, scope: !11975)
!11978 = !DISubprogram(name: "arch_cpu_idle", scope: !3328, file: !3328, line: 167, type: !3019, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !842)
!11979 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2103, file: !2103, line: 41, type: !11980, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !11993)
!11980 = !DISubroutineType(types: !11981)
!11981 = !{!103, !11982, !32, !32}
!11982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11983, size: 32)
!11983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !670, line: 2909, size: 128, elements: !11984)
!11984 = !{!11985, !11991, !11992}
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11983, file: !670, line: 2910, baseType: !11986, size: 64)
!11986 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !11987)
!11987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !11988)
!11988 = !{!11989}
!11989 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11987, file: !674, line: 232, baseType: !11990, size: 64)
!11990 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !2089)
!11991 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !11983, file: !670, line: 2911, baseType: !32, size: 32, offset: 64)
!11992 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !11983, file: !670, line: 2912, baseType: !32, size: 32, offset: 96)
!11993 = !{!11994, !11995, !11996}
!11994 = !DILocalVariable(name: "sem", arg: 1, scope: !11979, file: !2103, line: 41, type: !11982)
!11995 = !DILocalVariable(name: "initial_count", arg: 2, scope: !11979, file: !2103, line: 41, type: !32)
!11996 = !DILocalVariable(name: "limit", arg: 3, scope: !11979, file: !2103, line: 42, type: !32)
!11997 = !DILocation(line: 0, scope: !11979)
!11998 = !DILocation(line: 47, column: 2, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11979, file: !2103, line: 47, column: 2)
!12000 = !DILocation(line: 53, column: 7, scope: !11979)
!12001 = !DILocation(line: 53, column: 13, scope: !11979)
!12002 = !DILocation(line: 54, column: 7, scope: !11979)
!12003 = !DILocation(line: 54, column: 13, scope: !11979)
!12004 = !DILocation(line: 58, column: 21, scope: !11979)
!12005 = !DILocation(line: 58, column: 2, scope: !11979)
!12006 = !DILocation(line: 64, column: 2, scope: !11979)
!12007 = !DILocation(line: 65, column: 1, scope: !11979)
!12008 = distinct !DISubprogram(name: "z_waitq_init", scope: !11656, file: !11656, line: 47, type: !12009, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !12012)
!12009 = !DISubroutineType(types: !12010)
!12010 = !{null, !12011}
!12011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11986, size: 32)
!12012 = !{!12013}
!12013 = !DILocalVariable(name: "w", arg: 1, scope: !12008, file: !11656, line: 47, type: !12011)
!12014 = !DILocation(line: 0, scope: !12008)
!12015 = !DILocation(line: 49, column: 21, scope: !12008)
!12016 = !DILocation(line: 49, column: 2, scope: !12008)
!12017 = !DILocation(line: 50, column: 1, scope: !12008)
!12018 = distinct !DISubprogram(name: "sys_dlist_init", scope: !679, file: !679, line: 197, type: !12019, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !12022)
!12019 = !DISubroutineType(types: !12020)
!12020 = !{null, !12021}
!12021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11990, size: 32)
!12022 = !{!12023}
!12023 = !DILocalVariable(name: "list", arg: 1, scope: !12018, file: !679, line: 197, type: !12021)
!12024 = !DILocation(line: 0, scope: !12018)
!12025 = !DILocation(line: 199, column: 8, scope: !12018)
!12026 = !DILocation(line: 199, column: 13, scope: !12018)
!12027 = !DILocation(line: 200, column: 8, scope: !12018)
!12028 = !DILocation(line: 200, column: 13, scope: !12018)
!12029 = !DILocation(line: 201, column: 1, scope: !12018)
!12030 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2103, file: !2103, line: 86, type: !12031, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !12033)
!12031 = !DISubroutineType(types: !12032)
!12032 = !{null, !11982}
!12033 = !{!12034, !12035, !12040}
!12034 = !DILocalVariable(name: "sem", arg: 1, scope: !12030, file: !2103, line: 86, type: !11982)
!12035 = !DILocalVariable(name: "key", scope: !12030, file: !2103, line: 88, type: !12036)
!12036 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !841, line: 106, baseType: !12037)
!12037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !841, line: 32, size: 32, elements: !12038)
!12038 = !{!12039}
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12037, file: !841, line: 33, baseType: !103, size: 32)
!12040 = !DILocalVariable(name: "thread", scope: !12030, file: !2103, line: 89, type: !12041)
!12041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12042, size: 32)
!12042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1802, line: 245, size: 896, elements: !12043)
!12043 = !{!12044, !12082, !12094, !12095, !12096, !12097, !12109}
!12044 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12042, file: !1802, line: 247, baseType: !12045, size: 384)
!12045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1802, line: 57, size: 384, elements: !12046)
!12046 = !{!12047, !12057, !12058, !12059, !12060, !12069, !12070, !12071}
!12047 = !DIDerivedType(tag: DW_TAG_member, scope: !12045, file: !1802, line: 60, baseType: !12048, size: 64)
!12048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12045, file: !1802, line: 60, size: 64, elements: !12049)
!12049 = !{!12050, !12051}
!12050 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12048, file: !1802, line: 61, baseType: !2088, size: 64)
!12051 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12048, file: !1802, line: 62, baseType: !12052, size: 64)
!12052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1827, line: 49, size: 64, elements: !12053)
!12053 = !{!12054}
!12054 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12052, file: !1827, line: 50, baseType: !12055, size: 64)
!12055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12056, size: 64, elements: !1387)
!12056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12052, size: 32)
!12057 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12045, file: !1802, line: 68, baseType: !12011, size: 32, offset: 64)
!12058 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12045, file: !1802, line: 71, baseType: !421, size: 8, offset: 96)
!12059 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12045, file: !1802, line: 74, baseType: !421, size: 8, offset: 104)
!12060 = !DIDerivedType(tag: DW_TAG_member, scope: !12045, file: !1802, line: 90, baseType: !12061, size: 16, offset: 112)
!12061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12045, file: !1802, line: 90, size: 16, elements: !12062)
!12062 = !{!12063, !12068}
!12063 = !DIDerivedType(tag: DW_TAG_member, scope: !12061, file: !1802, line: 91, baseType: !12064, size: 16)
!12064 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12061, file: !1802, line: 91, size: 16, elements: !12065)
!12065 = !{!12066, !12067}
!12066 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12064, file: !1802, line: 96, baseType: !1848, size: 8)
!12067 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12064, file: !1802, line: 97, baseType: !421, size: 8, offset: 8)
!12068 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12061, file: !1802, line: 100, baseType: !532, size: 16)
!12069 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12045, file: !1802, line: 107, baseType: !415, size: 32, offset: 128)
!12070 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12045, file: !1802, line: 127, baseType: !102, size: 32, offset: 160)
!12071 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12045, file: !1802, line: 131, baseType: !12072, size: 192, offset: 192)
!12072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !674, line: 244, size: 192, elements: !12073)
!12073 = !{!12074, !12075, !12081}
!12074 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12072, file: !674, line: 245, baseType: !2088, size: 64)
!12075 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12072, file: !674, line: 246, baseType: !12076, size: 32, offset: 64)
!12076 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !674, line: 242, baseType: !12077)
!12077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12078, size: 32)
!12078 = !DISubroutineType(types: !12079)
!12079 = !{null, !12080}
!12080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12072, size: 32)
!12081 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12072, file: !674, line: 249, baseType: !1548, size: 64, offset: 128)
!12082 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12042, file: !1802, line: 250, baseType: !12083, size: 288, offset: 384)
!12083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1867, line: 25, size: 288, elements: !12084)
!12084 = !{!12085, !12086, !12087, !12088, !12089, !12090, !12091, !12092, !12093}
!12085 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12083, file: !1867, line: 26, baseType: !415, size: 32)
!12086 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12083, file: !1867, line: 27, baseType: !415, size: 32, offset: 32)
!12087 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12083, file: !1867, line: 28, baseType: !415, size: 32, offset: 64)
!12088 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12083, file: !1867, line: 29, baseType: !415, size: 32, offset: 96)
!12089 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12083, file: !1867, line: 30, baseType: !415, size: 32, offset: 128)
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12083, file: !1867, line: 31, baseType: !415, size: 32, offset: 160)
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12083, file: !1867, line: 32, baseType: !415, size: 32, offset: 192)
!12092 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12083, file: !1867, line: 33, baseType: !415, size: 32, offset: 224)
!12093 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12083, file: !1867, line: 34, baseType: !415, size: 32, offset: 256)
!12094 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12042, file: !1802, line: 253, baseType: !102, size: 32, offset: 672)
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12042, file: !1802, line: 256, baseType: !11986, size: 64, offset: 704)
!12096 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12042, file: !1802, line: 294, baseType: !103, size: 32, offset: 768)
!12097 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12042, file: !1802, line: 325, baseType: !12098, size: 32, offset: 800)
!12098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12099, size: 32)
!12099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !670, line: 5073, size: 160, elements: !12100)
!12100 = !{!12101, !12107, !12108}
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12099, file: !670, line: 5074, baseType: !12102, size: 96)
!12102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1887, line: 56, size: 96, elements: !12103)
!12103 = !{!12104, !12105, !12106}
!12104 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12102, file: !1887, line: 57, baseType: !1890, size: 32)
!12105 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12102, file: !1887, line: 58, baseType: !102, size: 32, offset: 32)
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12102, file: !1887, line: 59, baseType: !1714, size: 32, offset: 64)
!12107 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12099, file: !670, line: 5075, baseType: !11986, size: 64, offset: 96)
!12108 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12099, file: !670, line: 5076, baseType: !2104, offset: 160)
!12109 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12042, file: !1802, line: 343, baseType: !12110, size: 64, offset: 832)
!12110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1867, line: 60, size: 64, elements: !12111)
!12111 = !{!12112, !12113}
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12110, file: !1867, line: 63, baseType: !415, size: 32)
!12113 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12110, file: !1867, line: 66, baseType: !415, size: 32, offset: 32)
!12114 = !DILocation(line: 0, scope: !12030)
!12115 = !DILocalVariable(name: "l", arg: 1, scope: !12116, file: !841, line: 136, type: !12119)
!12116 = distinct !DISubprogram(name: "k_spin_lock", scope: !841, file: !841, line: 136, type: !12117, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !12120)
!12117 = !DISubroutineType(types: !12118)
!12118 = !{!12036, !12119}
!12119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!12120 = !{!12115, !12121}
!12121 = !DILocalVariable(name: "k", scope: !12116, file: !841, line: 139, type: !12036)
!12122 = !DILocation(line: 0, scope: !12116, inlinedAt: !12123)
!12123 = distinct !DILocation(line: 88, column: 25, scope: !12030)
!12124 = !DILocation(line: 55, column: 2, scope: !12125, inlinedAt: !12129)
!12125 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5666, file: !5666, line: 42, type: !5667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !12126)
!12126 = !{!12127, !12128}
!12127 = !DILocalVariable(name: "key", scope: !12125, file: !5666, line: 44, type: !32)
!12128 = !DILocalVariable(name: "tmp", scope: !12125, file: !5666, line: 53, type: !32)
!12129 = distinct !DILocation(line: 145, column: 10, scope: !12116, inlinedAt: !12123)
!12130 = !{i64 2842759}
!12131 = !DILocation(line: 0, scope: !12125, inlinedAt: !12129)
!12132 = !DILocation(line: 93, column: 39, scope: !12030)
!12133 = !DILocation(line: 93, column: 11, scope: !12030)
!12134 = !DILocation(line: 95, column: 13, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12030, file: !2103, line: 95, column: 6)
!12136 = !DILocation(line: 95, column: 6, scope: !12030)
!12137 = !DILocalVariable(name: "thread", arg: 1, scope: !12138, file: !11356, line: 65, type: !12041)
!12138 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11356, file: !11356, line: 65, type: !12139, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !12141)
!12139 = !DISubroutineType(types: !12140)
!12140 = !{null, !12041, !32}
!12141 = !{!12137, !12142}
!12142 = !DILocalVariable(name: "value", arg: 2, scope: !12138, file: !11356, line: 65, type: !32)
!12143 = !DILocation(line: 0, scope: !12138, inlinedAt: !12144)
!12144 = distinct !DILocation(line: 96, column: 3, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12135, file: !2103, line: 95, column: 22)
!12146 = !DILocation(line: 67, column: 15, scope: !12138, inlinedAt: !12144)
!12147 = !DILocation(line: 67, column: 33, scope: !12138, inlinedAt: !12144)
!12148 = !DILocation(line: 97, column: 3, scope: !12145)
!12149 = !DILocation(line: 98, column: 2, scope: !12145)
!12150 = !DILocation(line: 99, column: 23, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12135, file: !2103, line: 98, column: 9)
!12152 = !DILocation(line: 99, column: 37, scope: !12151)
!12153 = !DILocation(line: 99, column: 29, scope: !12151)
!12154 = !DILocation(line: 99, column: 17, scope: !12151)
!12155 = !DILocation(line: 99, column: 14, scope: !12151)
!12156 = !DILocation(line: 103, column: 2, scope: !12030)
!12157 = !DILocation(line: 106, column: 1, scope: !12030)
!12158 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2103, file: !2103, line: 117, type: !12159, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !12165)
!12159 = !DISubroutineType(types: !12160)
!12160 = !{!103, !11982, !12161}
!12161 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1547, line: 67, baseType: !12162)
!12162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1547, line: 65, size: 64, elements: !12163)
!12163 = !{!12164}
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12162, file: !1547, line: 66, baseType: !1546, size: 64)
!12165 = !{!12166, !12167, !12168, !12169, !12170}
!12166 = !DILocalVariable(name: "sem", arg: 1, scope: !12158, file: !2103, line: 117, type: !11982)
!12167 = !DILocalVariable(name: "timeout", arg: 2, scope: !12158, file: !2103, line: 117, type: !12161)
!12168 = !DILocalVariable(name: "ret", scope: !12158, file: !2103, line: 119, type: !103)
!12169 = !DILocalVariable(name: "key", scope: !12158, file: !2103, line: 124, type: !12036)
!12170 = !DILabel(scope: !12158, name: "out", file: !2103, line: 145)
!12171 = !DILocation(line: 0, scope: !12158)
!12172 = !DILocation(line: 0, scope: !12116, inlinedAt: !12173)
!12173 = distinct !DILocation(line: 124, column: 25, scope: !12158)
!12174 = !DILocation(line: 55, column: 2, scope: !12125, inlinedAt: !12175)
!12175 = distinct !DILocation(line: 145, column: 10, scope: !12116, inlinedAt: !12173)
!12176 = !DILocation(line: 0, scope: !12125, inlinedAt: !12175)
!12177 = !DILocation(line: 128, column: 6, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12158, file: !2103, line: 128, column: 6)
!12179 = !DILocation(line: 128, column: 6, scope: !12158)
!12180 = !{!"branch_weights", i32 1, i32 2000}
!12181 = !DILocation(line: 129, column: 13, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12178, file: !2103, line: 128, column: 31)
!12183 = !DILocalVariable(name: "key", arg: 2, scope: !12184, file: !841, line: 190, type: !12036)
!12184 = distinct !DISubprogram(name: "k_spin_unlock", scope: !841, file: !841, line: 189, type: !12185, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !12187)
!12185 = !DISubroutineType(types: !12186)
!12186 = !{null, !12119, !12036}
!12187 = !{!12188, !12183}
!12188 = !DILocalVariable(name: "l", arg: 1, scope: !12184, file: !841, line: 189, type: !12119)
!12189 = !DILocation(line: 0, scope: !12184, inlinedAt: !12190)
!12190 = distinct !DILocation(line: 130, column: 3, scope: !12182)
!12191 = !DILocalVariable(name: "key", arg: 1, scope: !12192, file: !5666, line: 84, type: !32)
!12192 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !12193)
!12193 = !{!12191}
!12194 = !DILocation(line: 0, scope: !12192, inlinedAt: !12195)
!12195 = distinct !DILocation(line: 215, column: 2, scope: !12184, inlinedAt: !12190)
!12196 = !DILocation(line: 95, column: 2, scope: !12192, inlinedAt: !12195)
!12197 = !{i64 2843576}
!12198 = !DILocation(line: 132, column: 3, scope: !12182)
!12199 = !DILocation(line: 135, column: 6, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12158, file: !2103, line: 135, column: 6)
!12201 = !DILocation(line: 135, column: 6, scope: !12158)
!12202 = !DILocation(line: 0, scope: !12184, inlinedAt: !12203)
!12203 = distinct !DILocation(line: 136, column: 3, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12200, file: !2103, line: 135, column: 40)
!12205 = !DILocation(line: 0, scope: !12192, inlinedAt: !12206)
!12206 = distinct !DILocation(line: 215, column: 2, scope: !12184, inlinedAt: !12203)
!12207 = !DILocation(line: 95, column: 2, scope: !12192, inlinedAt: !12206)
!12208 = !DILocation(line: 138, column: 3, scope: !12204)
!12209 = !DILocation(line: 143, column: 38, scope: !12158)
!12210 = !DILocation(line: 143, column: 8, scope: !12158)
!12211 = !DILocation(line: 143, column: 2, scope: !12158)
!12212 = !DILocation(line: 145, column: 1, scope: !12158)
!12213 = !DILocation(line: 148, column: 2, scope: !12158)
!12214 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2103, file: !2103, line: 151, type: !12031, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !12215)
!12215 = !{!12216, !12217, !12218}
!12216 = !DILocalVariable(name: "sem", arg: 1, scope: !12214, file: !2103, line: 151, type: !11982)
!12217 = !DILocalVariable(name: "thread", scope: !12214, file: !2103, line: 153, type: !12041)
!12218 = !DILocalVariable(name: "key", scope: !12214, file: !2103, line: 154, type: !12036)
!12219 = !DILocation(line: 0, scope: !12214)
!12220 = !DILocation(line: 0, scope: !12116, inlinedAt: !12221)
!12221 = distinct !DILocation(line: 154, column: 25, scope: !12214)
!12222 = !DILocation(line: 55, column: 2, scope: !12125, inlinedAt: !12223)
!12223 = distinct !DILocation(line: 145, column: 10, scope: !12116, inlinedAt: !12221)
!12224 = !DILocation(line: 0, scope: !12125, inlinedAt: !12223)
!12225 = !DILocation(line: 157, column: 12, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12214, file: !2103, line: 156, column: 15)
!12227 = !DILocation(line: 158, column: 14, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12226, file: !2103, line: 158, column: 7)
!12229 = !DILocation(line: 158, column: 7, scope: !12226)
!12230 = !DILocation(line: 0, scope: !12138, inlinedAt: !12231)
!12231 = distinct !DILocation(line: 161, column: 3, scope: !12226)
!12232 = !DILocation(line: 67, column: 15, scope: !12138, inlinedAt: !12231)
!12233 = !DILocation(line: 67, column: 33, scope: !12138, inlinedAt: !12231)
!12234 = !DILocation(line: 162, column: 3, scope: !12226)
!12235 = distinct !{!12235, !12236, !12237}
!12236 = !DILocation(line: 156, column: 2, scope: !12214)
!12237 = !DILocation(line: 163, column: 2, scope: !12214)
!12238 = !DILocation(line: 164, column: 7, scope: !12214)
!12239 = !DILocation(line: 164, column: 13, scope: !12214)
!12240 = !DILocation(line: 170, column: 2, scope: !12214)
!12241 = !DILocation(line: 171, column: 1, scope: !12214)
!12242 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2209, file: !2209, line: 93, type: !12243, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12245)
!12243 = !DISubroutineType(types: !12244)
!12244 = !{!700, !2110, !2110}
!12245 = !{!12246, !12247, !12248, !12249}
!12246 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12242, file: !2209, line: 93, type: !2110)
!12247 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12242, file: !2209, line: 94, type: !2110)
!12248 = !DILocalVariable(name: "b1", scope: !12242, file: !2209, line: 97, type: !700)
!12249 = !DILocalVariable(name: "b2", scope: !12242, file: !2209, line: 98, type: !700)
!12250 = !DILocation(line: 0, scope: !12242)
!12251 = !DILocation(line: 97, column: 30, scope: !12242)
!12252 = !DILocation(line: 98, column: 30, scope: !12242)
!12253 = !DILocation(line: 100, column: 9, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12242, file: !2209, line: 100, column: 6)
!12255 = !DILocation(line: 100, column: 6, scope: !12242)
!12256 = !DILocation(line: 125, column: 1, scope: !12242)
!12257 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2209, file: !2209, line: 428, type: !12258, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12260)
!12258 = !DISubroutineType(types: !12259)
!12259 = !{null, !2110}
!12260 = !{!12261}
!12261 = !DILocalVariable(name: "curr", arg: 1, scope: !12257, file: !2209, line: 428, type: !2110)
!12262 = !DILocation(line: 0, scope: !12257)
!12263 = !DILocation(line: 434, column: 6, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12257, file: !2209, line: 434, column: 6)
!12265 = !DILocation(line: 434, column: 23, scope: !12264)
!12266 = !DILocation(line: 434, column: 6, scope: !12257)
!12267 = !DILocation(line: 435, column: 50, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12264, file: !2209, line: 434, column: 29)
!12269 = !DILocation(line: 435, column: 48, scope: !12268)
!12270 = !DILocation(line: 435, column: 29, scope: !12268)
!12271 = !DILocation(line: 436, column: 24, scope: !12268)
!12272 = !DILocation(line: 436, column: 3, scope: !12268)
!12273 = !DILocation(line: 437, column: 2, scope: !12268)
!12274 = !DILocation(line: 438, column: 1, scope: !12257)
!12275 = distinct !DISubprogram(name: "slice_time", scope: !2209, file: !2209, line: 407, type: !12276, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12278)
!12276 = !DISubroutineType(types: !12277)
!12277 = !{!103, !2110}
!12278 = !{!12279, !12280}
!12279 = !DILocalVariable(name: "curr", arg: 1, scope: !12275, file: !2209, line: 407, type: !2110)
!12280 = !DILocalVariable(name: "ret", scope: !12275, file: !2209, line: 409, type: !103)
!12281 = !DILocation(line: 0, scope: !12275)
!12282 = !DILocation(line: 409, column: 12, scope: !12275)
!12283 = !DILocation(line: 416, column: 2, scope: !12275)
!12284 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2209, file: !2209, line: 440, type: !12285, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12287)
!12285 = !DISubroutineType(types: !12286)
!12286 = !{null, !700, !103}
!12287 = !{!12288, !12289, !12290, !12296}
!12288 = !DILocalVariable(name: "slice", arg: 1, scope: !12284, file: !2209, line: 440, type: !700)
!12289 = !DILocalVariable(name: "prio", arg: 2, scope: !12284, file: !2209, line: 440, type: !103)
!12290 = !DILocalVariable(name: "__i", scope: !12291, file: !2209, line: 442, type: !12292)
!12291 = distinct !DILexicalBlock(scope: !12284, file: !2209, line: 442, column: 2)
!12292 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !841, line: 106, baseType: !12293)
!12293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !841, line: 32, size: 32, elements: !12294)
!12294 = !{!12295}
!12295 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12293, file: !841, line: 33, baseType: !103, size: 32)
!12296 = !DILocalVariable(name: "__key", scope: !12291, file: !2209, line: 442, type: !12292)
!12297 = !DILocation(line: 0, scope: !12284)
!12298 = !DILocation(line: 0, scope: !12291)
!12299 = !DILocalVariable(name: "l", arg: 1, scope: !12300, file: !841, line: 136, type: !12303)
!12300 = distinct !DISubprogram(name: "k_spin_lock", scope: !841, file: !841, line: 136, type: !12301, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12304)
!12301 = !DISubroutineType(types: !12302)
!12302 = !{!12292, !12303}
!12303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!12304 = !{!12299, !12305}
!12305 = !DILocalVariable(name: "k", scope: !12300, file: !841, line: 139, type: !12292)
!12306 = !DILocation(line: 0, scope: !12300, inlinedAt: !12307)
!12307 = distinct !DILocation(line: 442, column: 2, scope: !12291)
!12308 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !12313)
!12309 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5666, file: !5666, line: 42, type: !5667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12310)
!12310 = !{!12311, !12312}
!12311 = !DILocalVariable(name: "key", scope: !12309, file: !5666, line: 44, type: !32)
!12312 = !DILocalVariable(name: "tmp", scope: !12309, file: !5666, line: 53, type: !32)
!12313 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !12307)
!12314 = !{i64 2885168}
!12315 = !DILocation(line: 0, scope: !12309, inlinedAt: !12313)
!12316 = !DILocation(line: 443, column: 29, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12318, file: !2209, line: 442, column: 26)
!12318 = distinct !DILexicalBlock(scope: !12291, file: !2209, line: 442, column: 2)
!12319 = !DILocation(line: 444, column: 17, scope: !12317)
!12320 = !DILocation(line: 445, column: 51, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12317, file: !2209, line: 445, column: 7)
!12322 = !DILocation(line: 445, column: 7, scope: !12317)
!12323 = !DILocation(line: 0, scope: !12317)
!12324 = !DILocation(line: 451, column: 18, scope: !12317)
!12325 = !DILocation(line: 452, column: 3, scope: !12317)
!12326 = !DILocalVariable(name: "key", arg: 2, scope: !12327, file: !841, line: 190, type: !12292)
!12327 = distinct !DISubprogram(name: "k_spin_unlock", scope: !841, file: !841, line: 189, type: !12328, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12330)
!12328 = !DISubroutineType(types: !12329)
!12329 = !{null, !12303, !12292}
!12330 = !{!12331, !12326}
!12331 = !DILocalVariable(name: "l", arg: 1, scope: !12327, file: !841, line: 189, type: !12303)
!12332 = !DILocation(line: 0, scope: !12327, inlinedAt: !12333)
!12333 = distinct !DILocation(line: 442, column: 2, scope: !12318)
!12334 = !DILocalVariable(name: "key", arg: 1, scope: !12335, file: !5666, line: 84, type: !32)
!12335 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12336)
!12336 = !{!12334}
!12337 = !DILocation(line: 0, scope: !12335, inlinedAt: !12338)
!12338 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !12333)
!12339 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !12338)
!12340 = !{i64 2885985}
!12341 = !DILocation(line: 454, column: 1, scope: !12284)
!12342 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !5720, file: !5720, line: 389, type: !12343, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12345)
!12343 = !DISubroutineType(types: !12344)
!12344 = !{!415, !415}
!12345 = !{!12346}
!12346 = !DILocalVariable(name: "t", arg: 1, scope: !12342, file: !5720, line: 389, type: !415)
!12347 = !DILocation(line: 0, scope: !12342)
!12348 = !DILocalVariable(name: "t", arg: 1, scope: !12349, file: !5720, line: 102, type: !2065)
!12349 = distinct !DISubprogram(name: "z_tmcvt", scope: !5720, file: !5720, line: 102, type: !5728, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12350)
!12350 = !{!12348, !12351, !12352, !12353, !12354, !12355, !12356, !12357, !12358, !12359, !12360}
!12351 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12349, file: !5720, line: 102, type: !415)
!12352 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12349, file: !5720, line: 103, type: !415)
!12353 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12349, file: !5720, line: 103, type: !583)
!12354 = !DILocalVariable(name: "result32", arg: 5, scope: !12349, file: !5720, line: 104, type: !583)
!12355 = !DILocalVariable(name: "round_up", arg: 6, scope: !12349, file: !5720, line: 104, type: !583)
!12356 = !DILocalVariable(name: "round_off", arg: 7, scope: !12349, file: !5720, line: 105, type: !583)
!12357 = !DILocalVariable(name: "mul_ratio", scope: !12349, file: !5720, line: 107, type: !583)
!12358 = !DILocalVariable(name: "div_ratio", scope: !12349, file: !5720, line: 109, type: !583)
!12359 = !DILocalVariable(name: "off", scope: !12349, file: !5720, line: 116, type: !2065)
!12360 = !DILocalVariable(name: "rdivisor", scope: !12361, file: !5720, line: 119, type: !415)
!12361 = distinct !DILexicalBlock(scope: !12362, file: !5720, line: 118, column: 18)
!12362 = distinct !DILexicalBlock(scope: !12349, file: !5720, line: 118, column: 6)
!12363 = !DILocation(line: 0, scope: !12349, inlinedAt: !12364)
!12364 = distinct !DILocation(line: 392, column: 9, scope: !12342)
!12365 = !DILocation(line: 143, column: 25, scope: !12366, inlinedAt: !12364)
!12366 = distinct !DILexicalBlock(scope: !12367, file: !5720, line: 142, column: 17)
!12367 = distinct !DILexicalBlock(scope: !12368, file: !5720, line: 142, column: 7)
!12368 = distinct !DILexicalBlock(scope: !12369, file: !5720, line: 141, column: 24)
!12369 = distinct !DILexicalBlock(scope: !12370, file: !5720, line: 141, column: 13)
!12370 = distinct !DILexicalBlock(scope: !12349, file: !5720, line: 134, column: 6)
!12371 = !DILocation(line: 392, column: 2, scope: !12342)
!12372 = distinct !DISubprogram(name: "z_time_slice", scope: !2209, file: !2209, line: 502, type: !11293, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12373)
!12373 = !{!12374, !12375}
!12374 = !DILocalVariable(name: "ticks", arg: 1, scope: !12372, file: !2209, line: 502, type: !103)
!12375 = !DILocalVariable(name: "key", scope: !12372, file: !2209, line: 511, type: !12292)
!12376 = !DILocation(line: 0, scope: !12372)
!12377 = !DILocation(line: 0, scope: !12300, inlinedAt: !12378)
!12378 = distinct !DILocation(line: 511, column: 25, scope: !12372)
!12379 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !12380)
!12380 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !12378)
!12381 = !DILocation(line: 0, scope: !12309, inlinedAt: !12380)
!12382 = !DILocation(line: 514, column: 6, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12372, file: !2209, line: 514, column: 6)
!12384 = !DILocation(line: 514, column: 25, scope: !12383)
!12385 = !DILocation(line: 514, column: 22, scope: !12383)
!12386 = !DILocation(line: 514, column: 6, scope: !12372)
!12387 = !DILocation(line: 515, column: 3, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12383, file: !2209, line: 514, column: 35)
!12389 = !DILocation(line: 0, scope: !12327, inlinedAt: !12390)
!12390 = distinct !DILocation(line: 516, column: 3, scope: !12388)
!12391 = !DILocation(line: 0, scope: !12335, inlinedAt: !12392)
!12392 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !12390)
!12393 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !12392)
!12394 = !DILocation(line: 517, column: 3, scope: !12388)
!12395 = !DILocation(line: 519, column: 18, scope: !12372)
!12396 = !DILocation(line: 522, column: 6, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12372, file: !2209, line: 522, column: 6)
!12398 = !DILocation(line: 522, column: 27, scope: !12397)
!12399 = !DILocation(line: 522, column: 30, scope: !12397)
!12400 = !DILocation(line: 522, column: 6, scope: !12372)
!12401 = !DILocation(line: 523, column: 30, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12403, file: !2209, line: 523, column: 7)
!12403 = distinct !DILexicalBlock(scope: !12397, file: !2209, line: 522, column: 51)
!12404 = !DILocation(line: 523, column: 13, scope: !12402)
!12405 = !DILocation(line: 523, column: 7, scope: !12403)
!12406 = !DILocation(line: 530, column: 10, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12402, file: !2209, line: 523, column: 43)
!12408 = !DILocation(line: 531, column: 3, scope: !12407)
!12409 = !DILocation(line: 532, column: 30, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12402, file: !2209, line: 531, column: 10)
!12411 = !DILocation(line: 535, column: 29, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12397, file: !2209, line: 534, column: 9)
!12413 = !DILocation(line: 0, scope: !12327, inlinedAt: !12414)
!12414 = distinct !DILocation(line: 537, column: 2, scope: !12372)
!12415 = !DILocation(line: 0, scope: !12335, inlinedAt: !12416)
!12416 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !12414)
!12417 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !12416)
!12418 = !DILocation(line: 538, column: 1, scope: !12372)
!12419 = distinct !DISubprogram(name: "sliceable", scope: !2209, file: !2209, line: 468, type: !12420, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12422)
!12420 = !DISubroutineType(types: !12421)
!12421 = !{!583, !2110}
!12422 = !{!12423, !12424}
!12423 = !DILocalVariable(name: "thread", arg: 1, scope: !12419, file: !2209, line: 468, type: !2110)
!12424 = !DILocalVariable(name: "ret", scope: !12419, file: !2209, line: 470, type: !583)
!12425 = !DILocation(line: 0, scope: !12419)
!12426 = !DILocation(line: 470, column: 13, scope: !12419)
!12427 = !DILocation(line: 471, column: 3, scope: !12419)
!12428 = !DILocation(line: 471, column: 7, scope: !12419)
!12429 = !DILocation(line: 472, column: 3, scope: !12419)
!12430 = !DILocation(line: 472, column: 37, scope: !12419)
!12431 = !DILocation(line: 472, column: 24, scope: !12419)
!12432 = !DILocation(line: 472, column: 43, scope: !12419)
!12433 = !DILocation(line: 472, column: 7, scope: !12419)
!12434 = !DILocation(line: 473, column: 3, scope: !12419)
!12435 = !DILocation(line: 473, column: 7, scope: !12419)
!12436 = !DILocation(line: 473, column: 6, scope: !12419)
!12437 = !DILocation(line: 479, column: 2, scope: !12419)
!12438 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2209, file: !2209, line: 482, type: !12439, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12441)
!12439 = !DISubroutineType(types: !12440)
!12440 = !{!12292, !12292}
!12441 = !{!12442, !12443}
!12442 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12438, file: !2209, line: 482, type: !12292)
!12443 = !DILocalVariable(name: "curr", scope: !12438, file: !2209, line: 484, type: !2110)
!12444 = !DILocation(line: 0, scope: !12438)
!12445 = !DILocation(line: 484, column: 26, scope: !12438)
!12446 = !DILocation(line: 493, column: 7, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12438, file: !2209, line: 493, column: 6)
!12448 = !DILocation(line: 493, column: 6, scope: !12438)
!12449 = !DILocation(line: 494, column: 3, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12447, file: !2209, line: 493, column: 49)
!12451 = !DILocation(line: 495, column: 2, scope: !12450)
!12452 = !DILocation(line: 496, column: 2, scope: !12438)
!12453 = !DILocation(line: 499, column: 1, scope: !12438)
!12454 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11336, file: !11336, line: 106, type: !12420, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12455)
!12455 = !{!12456, !12457}
!12456 = !DILocalVariable(name: "thread", arg: 1, scope: !12454, file: !11336, line: 106, type: !2110)
!12457 = !DILocalVariable(name: "state", scope: !12454, file: !11336, line: 108, type: !421)
!12458 = !DILocation(line: 0, scope: !12454)
!12459 = !DILocation(line: 108, column: 31, scope: !12454)
!12460 = !DILocation(line: 110, column: 16, scope: !12454)
!12461 = !DILocation(line: 111, column: 41, scope: !12454)
!12462 = !DILocation(line: 110, column: 2, scope: !12454)
!12463 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2209, file: !2209, line: 393, type: !12258, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12464)
!12464 = !{!12465}
!12465 = !DILocalVariable(name: "thread", arg: 1, scope: !12463, file: !2209, line: 393, type: !2110)
!12466 = !DILocation(line: 0, scope: !12463)
!12467 = !DILocation(line: 395, column: 6, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12463, file: !2209, line: 395, column: 6)
!12469 = !DILocation(line: 395, column: 6, scope: !12463)
!12470 = !DILocalVariable(name: "thread", arg: 1, scope: !12471, file: !2209, line: 264, type: !2110)
!12471 = distinct !DISubprogram(name: "dequeue_thread", scope: !2209, file: !2209, line: 264, type: !12258, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12472)
!12472 = !{!12470}
!12473 = !DILocation(line: 0, scope: !12471, inlinedAt: !12474)
!12474 = distinct !DILocation(line: 396, column: 3, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12468, file: !2209, line: 395, column: 34)
!12476 = !DILocation(line: 266, column: 15, scope: !12471, inlinedAt: !12474)
!12477 = !DILocation(line: 266, column: 28, scope: !12471, inlinedAt: !12474)
!12478 = !DILocalVariable(name: "thread", arg: 1, scope: !12479, file: !2209, line: 232, type: !2110)
!12479 = distinct !DISubprogram(name: "runq_remove", scope: !2209, file: !2209, line: 232, type: !12258, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12480)
!12480 = !{!12478}
!12481 = !DILocation(line: 0, scope: !12479, inlinedAt: !12482)
!12482 = distinct !DILocation(line: 268, column: 3, scope: !12483, inlinedAt: !12474)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !2209, line: 267, column: 35)
!12484 = distinct !DILexicalBlock(scope: !12471, file: !2209, line: 267, column: 6)
!12485 = !DILocation(line: 234, column: 2, scope: !12479, inlinedAt: !12482)
!12486 = !DILocation(line: 397, column: 2, scope: !12475)
!12487 = !DILocalVariable(name: "thread", arg: 1, scope: !12488, file: !2209, line: 250, type: !2110)
!12488 = distinct !DISubprogram(name: "queue_thread", scope: !2209, file: !2209, line: 250, type: !12258, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12489)
!12489 = !{!12487}
!12490 = !DILocation(line: 0, scope: !12488, inlinedAt: !12491)
!12491 = distinct !DILocation(line: 398, column: 2, scope: !12463)
!12492 = !DILocation(line: 252, column: 15, scope: !12488, inlinedAt: !12491)
!12493 = !DILocation(line: 252, column: 28, scope: !12488, inlinedAt: !12491)
!12494 = !DILocalVariable(name: "thread", arg: 1, scope: !12495, file: !2209, line: 227, type: !2110)
!12495 = distinct !DISubprogram(name: "runq_add", scope: !2209, file: !2209, line: 227, type: !12258, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12496)
!12496 = !{!12494}
!12497 = !DILocation(line: 0, scope: !12495, inlinedAt: !12498)
!12498 = distinct !DILocation(line: 254, column: 3, scope: !12499, inlinedAt: !12491)
!12499 = distinct !DILexicalBlock(scope: !12500, file: !2209, line: 253, column: 35)
!12500 = distinct !DILexicalBlock(scope: !12488, file: !2209, line: 253, column: 6)
!12501 = !DILocalVariable(name: "pq", arg: 1, scope: !12502, file: !2209, line: 181, type: !12505)
!12502 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2209, file: !2209, line: 181, type: !12503, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12506)
!12503 = !DISubroutineType(types: !12504)
!12504 = !{null, !12505, !2110}
!12505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!12506 = !{!12501, !12507, !12508}
!12507 = !DILocalVariable(name: "thread", arg: 2, scope: !12502, file: !2209, line: 182, type: !2110)
!12508 = !DILocalVariable(name: "t", scope: !12502, file: !2209, line: 184, type: !2110)
!12509 = !DILocation(line: 0, scope: !12502, inlinedAt: !12510)
!12510 = distinct !DILocation(line: 229, column: 2, scope: !12495, inlinedAt: !12498)
!12511 = !DILocation(line: 188, column: 2, scope: !12512, inlinedAt: !12510)
!12512 = distinct !DILexicalBlock(scope: !12502, file: !2209, line: 188, column: 2)
!12513 = !DILocation(line: 188, column: 2, scope: !12514, inlinedAt: !12510)
!12514 = distinct !DILexicalBlock(scope: !12512, file: !2209, line: 188, column: 2)
!12515 = !DILocation(line: 0, scope: !12512, inlinedAt: !12510)
!12516 = !DILocation(line: 189, column: 7, scope: !12517, inlinedAt: !12510)
!12517 = distinct !DILexicalBlock(scope: !12518, file: !2209, line: 189, column: 7)
!12518 = distinct !DILexicalBlock(scope: !12514, file: !2209, line: 188, column: 56)
!12519 = !DILocation(line: 189, column: 35, scope: !12517, inlinedAt: !12510)
!12520 = !DILocation(line: 189, column: 7, scope: !12518, inlinedAt: !12510)
!12521 = !DILocation(line: 191, column: 21, scope: !12522, inlinedAt: !12510)
!12522 = distinct !DILexicalBlock(scope: !12517, file: !2209, line: 189, column: 40)
!12523 = !DILocation(line: 190, column: 4, scope: !12522, inlinedAt: !12510)
!12524 = !DILocation(line: 192, column: 4, scope: !12522, inlinedAt: !12510)
!12525 = distinct !{!12525, !12511, !12526}
!12526 = !DILocation(line: 194, column: 2, scope: !12512, inlinedAt: !12510)
!12527 = !DILocation(line: 196, column: 37, scope: !12502, inlinedAt: !12510)
!12528 = !DILocation(line: 196, column: 2, scope: !12502, inlinedAt: !12510)
!12529 = !DILocation(line: 197, column: 1, scope: !12502, inlinedAt: !12510)
!12530 = !DILocation(line: 399, column: 25, scope: !12463)
!12531 = !DILocation(line: 399, column: 22, scope: !12463)
!12532 = !DILocation(line: 399, column: 2, scope: !12463)
!12533 = !DILocation(line: 400, column: 1, scope: !12463)
!12534 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11336, file: !11336, line: 136, type: !12420, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12535)
!12535 = !{!12536}
!12536 = !DILocalVariable(name: "thread", arg: 1, scope: !12534, file: !11336, line: 136, type: !2110)
!12537 = !DILocation(line: 0, scope: !12534)
!12538 = !DILocation(line: 138, column: 9, scope: !12534)
!12539 = !DILocation(line: 138, column: 2, scope: !12534)
!12540 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2209, file: !2209, line: 1137, type: !12503, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12541)
!12541 = !{!12542, !12543}
!12542 = !DILocalVariable(name: "pq", arg: 1, scope: !12540, file: !2209, line: 1137, type: !12505)
!12543 = !DILocalVariable(name: "thread", arg: 2, scope: !12540, file: !2209, line: 1137, type: !2110)
!12544 = !DILocation(line: 0, scope: !12540)
!12545 = !DILocation(line: 1141, column: 33, scope: !12540)
!12546 = !DILocation(line: 1141, column: 2, scope: !12540)
!12547 = !DILocation(line: 1142, column: 1, scope: !12540)
!12548 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !679, file: !679, line: 294, type: !12549, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12551)
!12549 = !DISubroutineType(types: !12550)
!12550 = !{!2205, !12505}
!12551 = !{!12552}
!12552 = !DILocalVariable(name: "list", arg: 1, scope: !12548, file: !679, line: 294, type: !12505)
!12553 = !DILocation(line: 0, scope: !12548)
!12554 = !DILocation(line: 296, column: 9, scope: !12548)
!12555 = !DILocation(line: 296, column: 49, scope: !12548)
!12556 = !DILocation(line: 296, column: 2, scope: !12548)
!12557 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !679, file: !679, line: 443, type: !12558, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12560)
!12558 = !DISubroutineType(types: !12559)
!12559 = !{null, !2205, !2205}
!12560 = !{!12561, !12562, !12563}
!12561 = !DILocalVariable(name: "successor", arg: 1, scope: !12557, file: !679, line: 443, type: !2205)
!12562 = !DILocalVariable(name: "node", arg: 2, scope: !12557, file: !679, line: 443, type: !2205)
!12563 = !DILocalVariable(name: "prev", scope: !12557, file: !679, line: 445, type: !12564)
!12564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2205)
!12565 = !DILocation(line: 0, scope: !12557)
!12566 = !DILocation(line: 445, column: 39, scope: !12557)
!12567 = !DILocation(line: 447, column: 8, scope: !12557)
!12568 = !DILocation(line: 447, column: 13, scope: !12557)
!12569 = !DILocation(line: 448, column: 8, scope: !12557)
!12570 = !DILocation(line: 448, column: 13, scope: !12557)
!12571 = !DILocation(line: 449, column: 8, scope: !12557)
!12572 = !DILocation(line: 449, column: 13, scope: !12557)
!12573 = !DILocation(line: 450, column: 18, scope: !12557)
!12574 = !DILocation(line: 451, column: 1, scope: !12557)
!12575 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !679, file: !679, line: 341, type: !12576, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12578)
!12576 = !DISubroutineType(types: !12577)
!12577 = !{!2205, !12505, !2205}
!12578 = !{!12579, !12580}
!12579 = !DILocalVariable(name: "list", arg: 1, scope: !12575, file: !679, line: 341, type: !12505)
!12580 = !DILocalVariable(name: "node", arg: 2, scope: !12575, file: !679, line: 342, type: !2205)
!12581 = !DILocation(line: 0, scope: !12575)
!12582 = !DILocation(line: 344, column: 15, scope: !12575)
!12583 = !DILocation(line: 344, column: 9, scope: !12575)
!12584 = !DILocation(line: 344, column: 26, scope: !12575)
!12585 = !DILocation(line: 344, column: 2, scope: !12575)
!12586 = distinct !DISubprogram(name: "sys_dlist_append", scope: !679, file: !679, line: 404, type: !12587, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12589)
!12587 = !DISubroutineType(types: !12588)
!12588 = !{null, !12505, !2205}
!12589 = !{!12590, !12591, !12592}
!12590 = !DILocalVariable(name: "list", arg: 1, scope: !12586, file: !679, line: 404, type: !12505)
!12591 = !DILocalVariable(name: "node", arg: 2, scope: !12586, file: !679, line: 404, type: !2205)
!12592 = !DILocalVariable(name: "tail", scope: !12586, file: !679, line: 406, type: !12564)
!12593 = !DILocation(line: 0, scope: !12586)
!12594 = !DILocation(line: 406, column: 34, scope: !12586)
!12595 = !DILocation(line: 408, column: 8, scope: !12586)
!12596 = !DILocation(line: 408, column: 13, scope: !12586)
!12597 = !DILocation(line: 409, column: 8, scope: !12586)
!12598 = !DILocation(line: 409, column: 13, scope: !12586)
!12599 = !DILocation(line: 411, column: 8, scope: !12586)
!12600 = !DILocation(line: 411, column: 13, scope: !12586)
!12601 = !DILocation(line: 412, column: 13, scope: !12586)
!12602 = !DILocation(line: 413, column: 1, scope: !12586)
!12603 = distinct !DISubprogram(name: "update_cache", scope: !2209, file: !2209, line: 559, type: !11293, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12604)
!12604 = !{!12605, !12606}
!12605 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12603, file: !2209, line: 559, type: !103)
!12606 = !DILocalVariable(name: "thread", scope: !12603, file: !2209, line: 562, type: !2110)
!12607 = !DILocation(line: 0, scope: !12603)
!12608 = !DILocation(line: 239, column: 9, scope: !12609, inlinedAt: !12612)
!12609 = distinct !DISubprogram(name: "runq_best", scope: !2209, file: !2209, line: 237, type: !12610, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !842)
!12610 = !DISubroutineType(types: !12611)
!12611 = !{!2110}
!12612 = distinct !DILocation(line: 314, column: 28, scope: !12613, inlinedAt: !12616)
!12613 = distinct !DISubprogram(name: "next_up", scope: !2209, file: !2209, line: 312, type: !12610, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12614)
!12614 = !{!12615}
!12615 = !DILocalVariable(name: "thread", scope: !12613, file: !2209, line: 314, type: !2110)
!12616 = distinct !DILocation(line: 562, column: 28, scope: !12603)
!12617 = !DILocation(line: 0, scope: !12613, inlinedAt: !12616)
!12618 = !DILocation(line: 340, column: 17, scope: !12613, inlinedAt: !12616)
!12619 = !DILocation(line: 340, column: 9, scope: !12613, inlinedAt: !12616)
!12620 = !DILocalVariable(name: "thread", arg: 1, scope: !12621, file: !2209, line: 127, type: !2110)
!12621 = distinct !DISubprogram(name: "should_preempt", scope: !2209, file: !2209, line: 127, type: !12622, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12624)
!12622 = !DISubroutineType(types: !12623)
!12623 = !{!583, !2110, !103}
!12624 = !{!12620, !12625}
!12625 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12621, file: !2209, line: 128, type: !103)
!12626 = !DILocation(line: 0, scope: !12621, inlinedAt: !12627)
!12627 = distinct !DILocation(line: 564, column: 6, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12603, file: !2209, line: 564, column: 6)
!12629 = !DILocation(line: 133, column: 17, scope: !12630, inlinedAt: !12627)
!12630 = distinct !DILexicalBlock(scope: !12621, file: !2209, line: 133, column: 6)
!12631 = !DILocation(line: 0, scope: !12628)
!12632 = !DILocation(line: 133, column: 6, scope: !12621, inlinedAt: !12627)
!12633 = !DILocation(line: 140, column: 6, scope: !12634, inlinedAt: !12627)
!12634 = distinct !DILexicalBlock(scope: !12621, file: !2209, line: 140, column: 6)
!12635 = !DILocation(line: 140, column: 6, scope: !12621, inlinedAt: !12627)
!12636 = !DILocation(line: 150, column: 9, scope: !12637, inlinedAt: !12627)
!12637 = distinct !DILexicalBlock(scope: !12621, file: !2209, line: 149, column: 6)
!12638 = !DILocation(line: 149, column: 6, scope: !12621, inlinedAt: !12627)
!12639 = !DILocation(line: 157, column: 6, scope: !12640, inlinedAt: !12627)
!12640 = distinct !DILexicalBlock(scope: !12621, file: !2209, line: 157, column: 6)
!12641 = !DILocation(line: 564, column: 6, scope: !12603)
!12642 = !DILocation(line: 566, column: 14, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12644, file: !2209, line: 566, column: 7)
!12644 = distinct !DILexicalBlock(scope: !12628, file: !2209, line: 564, column: 42)
!12645 = !DILocation(line: 566, column: 7, scope: !12644)
!12646 = !DILocation(line: 567, column: 4, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12643, file: !2209, line: 566, column: 27)
!12648 = !DILocation(line: 568, column: 3, scope: !12647)
!12649 = !DILocation(line: 585, column: 1, scope: !12603)
!12650 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2209, file: !2209, line: 1144, type: !12651, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12653)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{!2110, !12505}
!12653 = !{!12654, !12655, !12656}
!12654 = !DILocalVariable(name: "pq", arg: 1, scope: !12650, file: !2209, line: 1144, type: !12505)
!12655 = !DILocalVariable(name: "thread", scope: !12650, file: !2209, line: 1146, type: !2110)
!12656 = !DILocalVariable(name: "n", scope: !12650, file: !2209, line: 1147, type: !2205)
!12657 = !DILocation(line: 0, scope: !12650)
!12658 = !DILocation(line: 1147, column: 19, scope: !12650)
!12659 = !DILocation(line: 1152, column: 2, scope: !12650)
!12660 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11336, file: !11336, line: 115, type: !12420, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12661)
!12661 = !{!12662}
!12662 = !DILocalVariable(name: "thread", arg: 1, scope: !12660, file: !11336, line: 115, type: !2110)
!12663 = !DILocation(line: 0, scope: !12660)
!12664 = !DILocation(line: 117, column: 46, scope: !12660)
!12665 = !DILocation(line: 117, column: 10, scope: !12660)
!12666 = !DILocation(line: 117, column: 9, scope: !12660)
!12667 = !DILocation(line: 117, column: 2, scope: !12660)
!12668 = distinct !DISubprogram(name: "is_preempt", scope: !2209, file: !2209, line: 62, type: !12276, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12669)
!12669 = !{!12670}
!12670 = !DILocalVariable(name: "thread", arg: 1, scope: !12668, file: !2209, line: 62, type: !2110)
!12671 = !DILocation(line: 0, scope: !12668)
!12672 = !DILocation(line: 65, column: 22, scope: !12668)
!12673 = !DILocation(line: 65, column: 30, scope: !12668)
!12674 = !DILocation(line: 65, column: 2, scope: !12668)
!12675 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11708, file: !11708, line: 35, type: !12676, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12680)
!12676 = !DISubroutineType(types: !12677)
!12677 = !{!583, !12678}
!12678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12679, size: 32)
!12679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2161)
!12680 = !{!12681}
!12681 = !DILocalVariable(name: "to", arg: 1, scope: !12675, file: !11708, line: 35, type: !12678)
!12682 = !DILocation(line: 0, scope: !12675)
!12683 = !DILocation(line: 37, column: 35, scope: !12675)
!12684 = !DILocation(line: 37, column: 10, scope: !12675)
!12685 = !DILocation(line: 37, column: 9, scope: !12675)
!12686 = !DILocation(line: 37, column: 2, scope: !12675)
!12687 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !679, file: !679, line: 225, type: !12688, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12692)
!12688 = !DISubroutineType(types: !12689)
!12689 = !{!583, !12690}
!12690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12691, size: 32)
!12691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2120)
!12692 = !{!12693}
!12693 = !DILocalVariable(name: "node", arg: 1, scope: !12687, file: !679, line: 225, type: !12690)
!12694 = !DILocation(line: 0, scope: !12687)
!12695 = !DILocation(line: 227, column: 15, scope: !12687)
!12696 = !DILocation(line: 227, column: 20, scope: !12687)
!12697 = !DILocation(line: 227, column: 2, scope: !12687)
!12698 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !679, file: !679, line: 325, type: !12576, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12699)
!12699 = !{!12700, !12701}
!12700 = !DILocalVariable(name: "list", arg: 1, scope: !12698, file: !679, line: 325, type: !12505)
!12701 = !DILocalVariable(name: "node", arg: 2, scope: !12698, file: !679, line: 326, type: !2205)
!12702 = !DILocation(line: 0, scope: !12698)
!12703 = !DILocation(line: 328, column: 24, scope: !12698)
!12704 = !DILocation(line: 328, column: 15, scope: !12698)
!12705 = !DILocation(line: 328, column: 9, scope: !12698)
!12706 = !DILocation(line: 328, column: 45, scope: !12698)
!12707 = !DILocation(line: 328, column: 2, scope: !12698)
!12708 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !679, file: !679, line: 266, type: !12709, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12711)
!12709 = !DISubroutineType(types: !12710)
!12710 = !{!583, !12505}
!12711 = !{!12712}
!12712 = !DILocalVariable(name: "list", arg: 1, scope: !12708, file: !679, line: 266, type: !12505)
!12713 = !DILocation(line: 0, scope: !12708)
!12714 = !DILocation(line: 268, column: 15, scope: !12708)
!12715 = !DILocation(line: 268, column: 20, scope: !12708)
!12716 = !DILocation(line: 268, column: 2, scope: !12708)
!12717 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !679, file: !679, line: 496, type: !12718, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12720)
!12718 = !DISubroutineType(types: !12719)
!12719 = !{null, !2205}
!12720 = !{!12721, !12722, !12723}
!12721 = !DILocalVariable(name: "node", arg: 1, scope: !12717, file: !679, line: 496, type: !2205)
!12722 = !DILocalVariable(name: "prev", scope: !12717, file: !679, line: 498, type: !12564)
!12723 = !DILocalVariable(name: "next", scope: !12717, file: !679, line: 499, type: !12564)
!12724 = !DILocation(line: 0, scope: !12717)
!12725 = !DILocation(line: 498, column: 34, scope: !12717)
!12726 = !DILocation(line: 499, column: 34, scope: !12717)
!12727 = !DILocation(line: 501, column: 8, scope: !12717)
!12728 = !DILocation(line: 501, column: 13, scope: !12717)
!12729 = !DILocation(line: 502, column: 8, scope: !12717)
!12730 = !DILocation(line: 502, column: 13, scope: !12717)
!12731 = !DILocation(line: 503, column: 2, scope: !12717)
!12732 = !DILocation(line: 504, column: 1, scope: !12717)
!12733 = distinct !DISubprogram(name: "sys_dnode_init", scope: !679, file: !679, line: 211, type: !12718, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12734)
!12734 = !{!12735}
!12735 = !DILocalVariable(name: "node", arg: 1, scope: !12733, file: !679, line: 211, type: !2205)
!12736 = !DILocation(line: 0, scope: !12733)
!12737 = !DILocation(line: 213, column: 8, scope: !12733)
!12738 = !DILocation(line: 213, column: 13, scope: !12733)
!12739 = !DILocation(line: 214, column: 8, scope: !12733)
!12740 = !DILocation(line: 214, column: 13, scope: !12733)
!12741 = !DILocation(line: 215, column: 1, scope: !12733)
!12742 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11336, file: !11336, line: 131, type: !12743, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12745)
!12743 = !DISubroutineType(types: !12744)
!12744 = !{!583, !2110, !415}
!12745 = !{!12746, !12747}
!12746 = !DILocalVariable(name: "thread", arg: 1, scope: !12742, file: !11336, line: 131, type: !2110)
!12747 = !DILocalVariable(name: "state", arg: 2, scope: !12742, file: !11336, line: 131, type: !415)
!12748 = !DILocation(line: 0, scope: !12742)
!12749 = !DILocation(line: 133, column: 23, scope: !12742)
!12750 = !DILocation(line: 133, column: 45, scope: !12742)
!12751 = !DILocation(line: 133, column: 2, scope: !12742)
!12752 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11336, file: !11336, line: 211, type: !12753, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12755)
!12753 = !DISubroutineType(types: !12754)
!12754 = !{!583, !103, !103}
!12755 = !{!12756, !12757}
!12756 = !DILocalVariable(name: "prio", arg: 1, scope: !12752, file: !11336, line: 211, type: !103)
!12757 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12752, file: !11336, line: 211, type: !103)
!12758 = !DILocation(line: 0, scope: !12752)
!12759 = !DILocation(line: 213, column: 9, scope: !12752)
!12760 = !DILocation(line: 213, column: 2, scope: !12752)
!12761 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11336, file: !11336, line: 83, type: !12420, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12762)
!12762 = !{!12763}
!12763 = !DILocalVariable(name: "thread", arg: 1, scope: !12761, file: !11336, line: 83, type: !2110)
!12764 = !DILocation(line: 0, scope: !12761)
!12765 = !DILocation(line: 89, column: 16, scope: !12761)
!12766 = !DILocation(line: 89, column: 2, scope: !12761)
!12767 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11336, file: !11336, line: 206, type: !12753, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12768)
!12768 = !{!12769, !12770}
!12769 = !DILocalVariable(name: "prio1", arg: 1, scope: !12767, file: !11336, line: 206, type: !103)
!12770 = !DILocalVariable(name: "prio2", arg: 2, scope: !12767, file: !11336, line: 206, type: !103)
!12771 = !DILocation(line: 0, scope: !12767)
!12772 = !DILocation(line: 208, column: 15, scope: !12767)
!12773 = !DILocation(line: 208, column: 2, scope: !12767)
!12774 = distinct !DISubprogram(name: "z_ready_thread", scope: !2209, file: !2209, line: 635, type: !12258, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12775)
!12775 = !{!12776, !12777, !12779}
!12776 = !DILocalVariable(name: "thread", arg: 1, scope: !12774, file: !2209, line: 635, type: !2110)
!12777 = !DILocalVariable(name: "__i", scope: !12778, file: !2209, line: 637, type: !12292)
!12778 = distinct !DILexicalBlock(scope: !12774, file: !2209, line: 637, column: 2)
!12779 = !DILocalVariable(name: "__key", scope: !12778, file: !2209, line: 637, type: !12292)
!12780 = !DILocation(line: 0, scope: !12774)
!12781 = !DILocation(line: 0, scope: !12778)
!12782 = !DILocation(line: 0, scope: !12300, inlinedAt: !12783)
!12783 = distinct !DILocation(line: 637, column: 2, scope: !12778)
!12784 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !12785)
!12785 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !12783)
!12786 = !DILocation(line: 0, scope: !12309, inlinedAt: !12785)
!12787 = !DILocation(line: 639, column: 4, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12789, file: !2209, line: 638, column: 41)
!12789 = distinct !DILexicalBlock(scope: !12790, file: !2209, line: 638, column: 7)
!12790 = distinct !DILexicalBlock(scope: !12791, file: !2209, line: 637, column: 26)
!12791 = distinct !DILexicalBlock(scope: !12778, file: !2209, line: 637, column: 2)
!12792 = !DILocation(line: 0, scope: !12327, inlinedAt: !12793)
!12793 = distinct !DILocation(line: 637, column: 2, scope: !12791)
!12794 = !DILocation(line: 0, scope: !12335, inlinedAt: !12795)
!12795 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !12793)
!12796 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !12795)
!12797 = !DILocation(line: 642, column: 1, scope: !12774)
!12798 = distinct !DISubprogram(name: "ready_thread", scope: !2209, file: !2209, line: 617, type: !12258, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12799)
!12799 = !{!12800}
!12800 = !DILocalVariable(name: "thread", arg: 1, scope: !12798, file: !2209, line: 617, type: !2110)
!12801 = !DILocation(line: 0, scope: !12798)
!12802 = !DILocation(line: 626, column: 7, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12798, file: !2209, line: 626, column: 6)
!12804 = !DILocation(line: 626, column: 34, scope: !12803)
!12805 = !DILocation(line: 626, column: 37, scope: !12803)
!12806 = !DILocation(line: 626, column: 6, scope: !12798)
!12807 = !DILocation(line: 0, scope: !12488, inlinedAt: !12808)
!12808 = distinct !DILocation(line: 629, column: 3, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12803, file: !2209, line: 626, column: 64)
!12810 = !DILocation(line: 252, column: 15, scope: !12488, inlinedAt: !12808)
!12811 = !DILocation(line: 252, column: 28, scope: !12488, inlinedAt: !12808)
!12812 = !DILocation(line: 0, scope: !12495, inlinedAt: !12813)
!12813 = distinct !DILocation(line: 254, column: 3, scope: !12499, inlinedAt: !12808)
!12814 = !DILocation(line: 0, scope: !12502, inlinedAt: !12815)
!12815 = distinct !DILocation(line: 229, column: 2, scope: !12495, inlinedAt: !12813)
!12816 = !DILocation(line: 188, column: 2, scope: !12512, inlinedAt: !12815)
!12817 = !DILocation(line: 188, column: 2, scope: !12514, inlinedAt: !12815)
!12818 = !DILocation(line: 0, scope: !12512, inlinedAt: !12815)
!12819 = !DILocation(line: 189, column: 7, scope: !12517, inlinedAt: !12815)
!12820 = !DILocation(line: 189, column: 35, scope: !12517, inlinedAt: !12815)
!12821 = !DILocation(line: 189, column: 7, scope: !12518, inlinedAt: !12815)
!12822 = !DILocation(line: 191, column: 21, scope: !12522, inlinedAt: !12815)
!12823 = !DILocation(line: 190, column: 4, scope: !12522, inlinedAt: !12815)
!12824 = !DILocation(line: 192, column: 4, scope: !12522, inlinedAt: !12815)
!12825 = distinct !{!12825, !12816, !12826}
!12826 = !DILocation(line: 194, column: 2, scope: !12512, inlinedAt: !12815)
!12827 = !DILocation(line: 196, column: 37, scope: !12502, inlinedAt: !12815)
!12828 = !DILocation(line: 196, column: 2, scope: !12502, inlinedAt: !12815)
!12829 = !DILocation(line: 197, column: 1, scope: !12502, inlinedAt: !12815)
!12830 = !DILocation(line: 630, column: 3, scope: !12809)
!12831 = !DILocation(line: 632, column: 2, scope: !12809)
!12832 = !DILocation(line: 633, column: 1, scope: !12798)
!12833 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11336, file: !11336, line: 120, type: !12420, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12834)
!12834 = !{!12835}
!12835 = !DILocalVariable(name: "thread", arg: 1, scope: !12833, file: !11336, line: 120, type: !2110)
!12836 = !DILocation(line: 0, scope: !12833)
!12837 = !DILocation(line: 122, column: 12, scope: !12833)
!12838 = !DILocation(line: 122, column: 62, scope: !12833)
!12839 = !DILocation(line: 123, column: 4, scope: !12833)
!12840 = !DILocation(line: 122, column: 2, scope: !12833)
!12841 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2209, file: !2209, line: 644, type: !12258, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12842)
!12842 = !{!12843, !12844, !12846}
!12843 = !DILocalVariable(name: "thread", arg: 1, scope: !12841, file: !2209, line: 644, type: !2110)
!12844 = !DILocalVariable(name: "__i", scope: !12845, file: !2209, line: 646, type: !12292)
!12845 = distinct !DILexicalBlock(scope: !12841, file: !2209, line: 646, column: 2)
!12846 = !DILocalVariable(name: "__key", scope: !12845, file: !2209, line: 646, type: !12292)
!12847 = !DILocation(line: 0, scope: !12841)
!12848 = !DILocation(line: 0, scope: !12845)
!12849 = !DILocation(line: 0, scope: !12300, inlinedAt: !12850)
!12850 = distinct !DILocation(line: 646, column: 2, scope: !12845)
!12851 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !12852)
!12852 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !12850)
!12853 = !DILocation(line: 0, scope: !12309, inlinedAt: !12852)
!12854 = !DILocation(line: 647, column: 3, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !2209, line: 646, column: 26)
!12856 = distinct !DILexicalBlock(scope: !12845, file: !2209, line: 646, column: 2)
!12857 = !DILocation(line: 0, scope: !12327, inlinedAt: !12858)
!12858 = distinct !DILocation(line: 646, column: 2, scope: !12856)
!12859 = !DILocation(line: 0, scope: !12335, inlinedAt: !12860)
!12860 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !12858)
!12861 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !12860)
!12862 = !DILocation(line: 649, column: 1, scope: !12841)
!12863 = distinct !DISubprogram(name: "z_sched_start", scope: !2209, file: !2209, line: 651, type: !12258, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12864)
!12864 = !{!12865, !12866}
!12865 = !DILocalVariable(name: "thread", arg: 1, scope: !12863, file: !2209, line: 651, type: !2110)
!12866 = !DILocalVariable(name: "key", scope: !12863, file: !2209, line: 653, type: !12292)
!12867 = !DILocation(line: 0, scope: !12863)
!12868 = !DILocation(line: 0, scope: !12300, inlinedAt: !12869)
!12869 = distinct !DILocation(line: 653, column: 25, scope: !12863)
!12870 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !12871)
!12871 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !12869)
!12872 = !DILocation(line: 0, scope: !12309, inlinedAt: !12871)
!12873 = !DILocation(line: 655, column: 6, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12863, file: !2209, line: 655, column: 6)
!12875 = !DILocation(line: 655, column: 6, scope: !12863)
!12876 = !DILocation(line: 0, scope: !12327, inlinedAt: !12877)
!12877 = distinct !DILocation(line: 656, column: 3, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12874, file: !2209, line: 655, column: 36)
!12879 = !DILocation(line: 0, scope: !12335, inlinedAt: !12880)
!12880 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !12877)
!12881 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !12880)
!12882 = !DILocation(line: 657, column: 3, scope: !12878)
!12883 = !DILocation(line: 660, column: 2, scope: !12863)
!12884 = !DILocation(line: 661, column: 2, scope: !12863)
!12885 = !DILocation(line: 662, column: 2, scope: !12863)
!12886 = !DILocation(line: 663, column: 1, scope: !12863)
!12887 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11336, file: !11336, line: 126, type: !12420, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12888)
!12888 = !{!12889}
!12889 = !DILocalVariable(name: "thread", arg: 1, scope: !12887, file: !11336, line: 126, type: !2110)
!12890 = !DILocation(line: 0, scope: !12887)
!12891 = !DILocation(line: 128, column: 23, scope: !12887)
!12892 = !DILocation(line: 128, column: 36, scope: !12887)
!12893 = !DILocation(line: 128, column: 56, scope: !12887)
!12894 = !DILocation(line: 128, column: 2, scope: !12887)
!12895 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11336, file: !11336, line: 155, type: !12258, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12896)
!12896 = !{!12897}
!12897 = !DILocalVariable(name: "thread", arg: 1, scope: !12895, file: !11336, line: 155, type: !2110)
!12898 = !DILocation(line: 0, scope: !12895)
!12899 = !DILocation(line: 157, column: 15, scope: !12895)
!12900 = !DILocation(line: 157, column: 28, scope: !12895)
!12901 = !DILocation(line: 158, column: 1, scope: !12895)
!12902 = distinct !DISubprogram(name: "z_reschedule", scope: !2209, file: !2209, line: 967, type: !12328, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12903)
!12903 = !{!12904, !12905}
!12904 = !DILocalVariable(name: "lock", arg: 1, scope: !12902, file: !2209, line: 967, type: !12303)
!12905 = !DILocalVariable(name: "key", arg: 2, scope: !12902, file: !2209, line: 967, type: !12292)
!12906 = !DILocation(line: 0, scope: !12902)
!12907 = !DILocation(line: 969, column: 6, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12902, file: !2209, line: 969, column: 6)
!12909 = !DILocation(line: 969, column: 23, scope: !12908)
!12910 = !DILocation(line: 969, column: 26, scope: !12908)
!12911 = !DILocation(line: 969, column: 6, scope: !12902)
!12912 = !DILocalVariable(name: "key", arg: 2, scope: !12913, file: !11438, line: 193, type: !12292)
!12913 = distinct !DISubprogram(name: "z_swap", scope: !11438, file: !11438, line: 193, type: !12914, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12916)
!12914 = !DISubroutineType(types: !12915)
!12915 = !{!103, !12303, !12292}
!12916 = !{!12917, !12912}
!12917 = !DILocalVariable(name: "lock", arg: 1, scope: !12913, file: !11438, line: 193, type: !12303)
!12918 = !DILocation(line: 0, scope: !12913, inlinedAt: !12919)
!12919 = distinct !DILocation(line: 970, column: 3, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12908, file: !2209, line: 969, column: 39)
!12921 = !DILocation(line: 196, column: 9, scope: !12913, inlinedAt: !12919)
!12922 = !DILocation(line: 971, column: 2, scope: !12920)
!12923 = !DILocation(line: 0, scope: !12327, inlinedAt: !12924)
!12924 = distinct !DILocation(line: 972, column: 3, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12908, file: !2209, line: 971, column: 9)
!12926 = !DILocation(line: 0, scope: !12335, inlinedAt: !12927)
!12927 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !12924)
!12928 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !12927)
!12929 = !DILocation(line: 975, column: 1, scope: !12902)
!12930 = distinct !DISubprogram(name: "resched", scope: !2209, file: !2209, line: 940, type: !12931, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12933)
!12931 = !DISubroutineType(types: !12932)
!12932 = !{!583, !415}
!12933 = !{!12934}
!12934 = !DILocalVariable(name: "key", arg: 1, scope: !12930, file: !2209, line: 940, type: !415)
!12935 = !DILocation(line: 0, scope: !12930)
!12936 = !DILocalVariable(name: "key", arg: 1, scope: !12937, file: !5666, line: 112, type: !32)
!12937 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5666, file: !5666, line: 112, type: !12938, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12940)
!12938 = !DISubroutineType(types: !12939)
!12939 = !{!583, !32}
!12940 = !{!12936}
!12941 = !DILocation(line: 0, scope: !12937, inlinedAt: !12942)
!12942 = distinct !DILocation(line: 946, column: 9, scope: !12930)
!12943 = !DILocation(line: 115, column: 13, scope: !12937, inlinedAt: !12942)
!12944 = !DILocation(line: 946, column: 32, scope: !12930)
!12945 = !DILocation(line: 1031, column: 3, scope: !12946, inlinedAt: !12949)
!12946 = distinct !DISubprogram(name: "__get_IPSR", scope: !6540, file: !6540, line: 1027, type: !6621, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12947)
!12947 = !{!12948}
!12948 = !DILocalVariable(name: "result", scope: !12946, file: !6540, line: 1029, type: !415)
!12949 = distinct !DILocation(line: 48, column: 10, scope: !12950, inlinedAt: !12951)
!12950 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7274, file: !7274, line: 46, type: !7275, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !842)
!12951 = distinct !DILocation(line: 946, column: 36, scope: !12930)
!12952 = !{i64 7007981}
!12953 = !DILocation(line: 0, scope: !12946, inlinedAt: !12949)
!12954 = !DILocation(line: 48, column: 9, scope: !12950, inlinedAt: !12951)
!12955 = !DILocation(line: 946, column: 2, scope: !12930)
!12956 = distinct !DISubprogram(name: "need_swap", scope: !2209, file: !2209, line: 953, type: !7275, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12957)
!12957 = !{!12958}
!12958 = !DILocalVariable(name: "new_thread", scope: !12956, file: !2209, line: 959, type: !2110)
!12959 = !DILocation(line: 962, column: 31, scope: !12956)
!12960 = !DILocation(line: 0, scope: !12956)
!12961 = !DILocation(line: 963, column: 23, scope: !12956)
!12962 = !DILocation(line: 963, column: 20, scope: !12956)
!12963 = !DILocation(line: 963, column: 2, scope: !12956)
!12964 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11438, file: !11438, line: 181, type: !6550, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12965)
!12965 = !{!12966, !12967}
!12966 = !DILocalVariable(name: "key", arg: 1, scope: !12964, file: !11438, line: 181, type: !32)
!12967 = !DILocalVariable(name: "ret", scope: !12964, file: !11438, line: 183, type: !103)
!12968 = !DILocation(line: 0, scope: !12964)
!12969 = !DILocation(line: 185, column: 8, scope: !12964)
!12970 = !DILocation(line: 186, column: 2, scope: !12964)
!12971 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2209, file: !2209, line: 665, type: !12258, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12972)
!12972 = !{!12973, !12974, !12976}
!12973 = !DILocalVariable(name: "thread", arg: 1, scope: !12971, file: !2209, line: 665, type: !2110)
!12974 = !DILocalVariable(name: "__i", scope: !12975, file: !2209, line: 671, type: !12292)
!12975 = distinct !DILexicalBlock(scope: !12971, file: !2209, line: 671, column: 2)
!12976 = !DILocalVariable(name: "__key", scope: !12975, file: !2209, line: 671, type: !12292)
!12977 = !DILocation(line: 0, scope: !12971)
!12978 = !DILocation(line: 669, column: 8, scope: !12971)
!12979 = !DILocation(line: 0, scope: !12975)
!12980 = !DILocation(line: 0, scope: !12300, inlinedAt: !12981)
!12981 = distinct !DILocation(line: 671, column: 2, scope: !12975)
!12982 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !12983)
!12983 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !12981)
!12984 = !DILocation(line: 0, scope: !12309, inlinedAt: !12983)
!12985 = !DILocation(line: 672, column: 7, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12987, file: !2209, line: 672, column: 7)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !2209, line: 671, column: 26)
!12988 = distinct !DILexicalBlock(scope: !12975, file: !2209, line: 671, column: 2)
!12989 = !DILocation(line: 672, column: 7, scope: !12987)
!12990 = !DILocation(line: 0, scope: !12471, inlinedAt: !12991)
!12991 = distinct !DILocation(line: 673, column: 4, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12986, file: !2209, line: 672, column: 35)
!12993 = !DILocation(line: 266, column: 15, scope: !12471, inlinedAt: !12991)
!12994 = !DILocation(line: 266, column: 28, scope: !12471, inlinedAt: !12991)
!12995 = !DILocation(line: 0, scope: !12479, inlinedAt: !12996)
!12996 = distinct !DILocation(line: 268, column: 3, scope: !12483, inlinedAt: !12991)
!12997 = !DILocation(line: 234, column: 2, scope: !12479, inlinedAt: !12996)
!12998 = !DILocation(line: 674, column: 3, scope: !12992)
!12999 = !DILocation(line: 675, column: 3, scope: !12987)
!13000 = !DILocation(line: 676, column: 26, scope: !12987)
!13001 = !DILocation(line: 676, column: 23, scope: !12987)
!13002 = !DILocation(line: 676, column: 3, scope: !12987)
!13003 = !DILocation(line: 0, scope: !12327, inlinedAt: !13004)
!13004 = distinct !DILocation(line: 671, column: 2, scope: !12988)
!13005 = !DILocation(line: 0, scope: !12335, inlinedAt: !13006)
!13006 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13004)
!13007 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13006)
!13008 = !DILocation(line: 679, column: 16, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !12971, file: !2209, line: 679, column: 6)
!13010 = !DILocation(line: 679, column: 13, scope: !13009)
!13011 = !DILocation(line: 679, column: 6, scope: !12971)
!13012 = !DILocation(line: 680, column: 3, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13009, file: !2209, line: 679, column: 26)
!13014 = !DILocation(line: 681, column: 2, scope: !13013)
!13015 = !DILocation(line: 684, column: 1, scope: !12971)
!13016 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11708, file: !11708, line: 52, type: !12276, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13017)
!13017 = !{!13018}
!13018 = !DILocalVariable(name: "thread", arg: 1, scope: !13016, file: !11708, line: 52, type: !2110)
!13019 = !DILocation(line: 0, scope: !13016)
!13020 = !DILocation(line: 54, column: 39, scope: !13016)
!13021 = !DILocation(line: 54, column: 9, scope: !13016)
!13022 = !DILocation(line: 54, column: 2, scope: !13016)
!13023 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11336, file: !11336, line: 141, type: !12258, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13024)
!13024 = !{!13025}
!13025 = !DILocalVariable(name: "thread", arg: 1, scope: !13023, file: !11336, line: 141, type: !2110)
!13026 = !DILocation(line: 0, scope: !13023)
!13027 = !DILocation(line: 143, column: 15, scope: !13023)
!13028 = !DILocation(line: 143, column: 28, scope: !13023)
!13029 = !DILocation(line: 146, column: 1, scope: !13023)
!13030 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11336, file: !11336, line: 73, type: !3019, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !842)
!13031 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13032)
!13032 = distinct !DILocation(line: 75, column: 30, scope: !13030)
!13033 = !DILocation(line: 0, scope: !12309, inlinedAt: !13032)
!13034 = !DILocation(line: 75, column: 9, scope: !13030)
!13035 = !DILocation(line: 76, column: 1, scope: !13030)
!13036 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2209, file: !2209, line: 977, type: !6631, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13037)
!13037 = !{!13038}
!13038 = !DILocalVariable(name: "key", arg: 1, scope: !13036, file: !2209, line: 977, type: !415)
!13039 = !DILocation(line: 0, scope: !13036)
!13040 = !DILocation(line: 979, column: 6, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13036, file: !2209, line: 979, column: 6)
!13042 = !DILocation(line: 979, column: 6, scope: !13036)
!13043 = !DILocation(line: 980, column: 3, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13041, file: !2209, line: 979, column: 20)
!13045 = !DILocation(line: 981, column: 2, scope: !13044)
!13046 = !DILocation(line: 0, scope: !12335, inlinedAt: !13047)
!13047 = distinct !DILocation(line: 982, column: 3, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13041, file: !2209, line: 981, column: 9)
!13049 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13047)
!13050 = !DILocation(line: 985, column: 1, scope: !13036)
!13051 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2209, file: !2209, line: 695, type: !12258, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13052)
!13052 = !{!13053, !13054}
!13053 = !DILocalVariable(name: "thread", arg: 1, scope: !13051, file: !2209, line: 695, type: !2110)
!13054 = !DILocalVariable(name: "key", scope: !13051, file: !2209, line: 699, type: !12292)
!13055 = !DILocation(line: 0, scope: !13051)
!13056 = !DILocation(line: 0, scope: !12300, inlinedAt: !13057)
!13057 = distinct !DILocation(line: 699, column: 25, scope: !13051)
!13058 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13059)
!13059 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13057)
!13060 = !DILocation(line: 0, scope: !12309, inlinedAt: !13059)
!13061 = !DILocation(line: 702, column: 7, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13051, file: !2209, line: 702, column: 6)
!13063 = !DILocation(line: 702, column: 6, scope: !13051)
!13064 = !DILocation(line: 0, scope: !12327, inlinedAt: !13065)
!13065 = distinct !DILocation(line: 703, column: 3, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13062, file: !2209, line: 702, column: 38)
!13067 = !DILocation(line: 0, scope: !12335, inlinedAt: !13068)
!13068 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13065)
!13069 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13068)
!13070 = !DILocation(line: 704, column: 3, scope: !13066)
!13071 = !DILocation(line: 707, column: 2, scope: !13051)
!13072 = !DILocation(line: 708, column: 2, scope: !13051)
!13073 = !DILocation(line: 710, column: 2, scope: !13051)
!13074 = !DILocation(line: 713, column: 1, scope: !13051)
!13075 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11336, file: !11336, line: 96, type: !12420, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13076)
!13076 = !{!13077}
!13077 = !DILocalVariable(name: "thread", arg: 1, scope: !13075, file: !11336, line: 96, type: !2110)
!13078 = !DILocation(line: 0, scope: !13075)
!13079 = !DILocation(line: 98, column: 23, scope: !13075)
!13080 = !DILocation(line: 98, column: 36, scope: !13075)
!13081 = !DILocation(line: 98, column: 57, scope: !13075)
!13082 = !DILocation(line: 98, column: 2, scope: !13075)
!13083 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11336, file: !11336, line: 148, type: !12258, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13084)
!13084 = !{!13085}
!13085 = !DILocalVariable(name: "thread", arg: 1, scope: !13083, file: !11336, line: 148, type: !2110)
!13086 = !DILocation(line: 0, scope: !13083)
!13087 = !DILocation(line: 150, column: 15, scope: !13083)
!13088 = !DILocation(line: 150, column: 28, scope: !13083)
!13089 = !DILocation(line: 153, column: 1, scope: !13083)
!13090 = distinct !DISubprogram(name: "z_pend_thread", scope: !2209, file: !2209, line: 770, type: !13091, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13097)
!13091 = !DISubroutineType(types: !13092)
!13092 = !{null, !2110, !2141, !13093}
!13093 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1547, line: 67, baseType: !13094)
!13094 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1547, line: 65, size: 64, elements: !13095)
!13095 = !{!13096}
!13096 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13094, file: !1547, line: 66, baseType: !1546, size: 64)
!13097 = !{!13098, !13099, !13100, !13101, !13103}
!13098 = !DILocalVariable(name: "thread", arg: 1, scope: !13090, file: !2209, line: 770, type: !2110)
!13099 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13090, file: !2209, line: 770, type: !2141)
!13100 = !DILocalVariable(name: "timeout", arg: 3, scope: !13090, file: !2209, line: 771, type: !13093)
!13101 = !DILocalVariable(name: "__i", scope: !13102, file: !2209, line: 774, type: !12292)
!13102 = distinct !DILexicalBlock(scope: !13090, file: !2209, line: 774, column: 2)
!13103 = !DILocalVariable(name: "__key", scope: !13102, file: !2209, line: 774, type: !12292)
!13104 = !DILocation(line: 0, scope: !13090)
!13105 = !DILocation(line: 0, scope: !13102)
!13106 = !DILocation(line: 0, scope: !12300, inlinedAt: !13107)
!13107 = distinct !DILocation(line: 774, column: 2, scope: !13102)
!13108 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13109)
!13109 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13107)
!13110 = !DILocation(line: 0, scope: !12309, inlinedAt: !13109)
!13111 = !DILocation(line: 775, column: 3, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13113, file: !2209, line: 774, column: 26)
!13113 = distinct !DILexicalBlock(scope: !13102, file: !2209, line: 774, column: 2)
!13114 = !DILocation(line: 0, scope: !12327, inlinedAt: !13115)
!13115 = distinct !DILocation(line: 774, column: 2, scope: !13113)
!13116 = !DILocation(line: 0, scope: !12335, inlinedAt: !13117)
!13117 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13115)
!13118 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13117)
!13119 = !DILocation(line: 777, column: 1, scope: !13090)
!13120 = distinct !DISubprogram(name: "pend_locked", scope: !2209, file: !2209, line: 760, type: !13091, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13121)
!13121 = !{!13122, !13123, !13124}
!13122 = !DILocalVariable(name: "thread", arg: 1, scope: !13120, file: !2209, line: 760, type: !2110)
!13123 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13120, file: !2209, line: 760, type: !2141)
!13124 = !DILocalVariable(name: "timeout", arg: 3, scope: !13120, file: !2209, line: 761, type: !13093)
!13125 = !DILocation(line: 0, scope: !13120)
!13126 = !DILocation(line: 766, column: 2, scope: !13120)
!13127 = !DILocation(line: 767, column: 2, scope: !13120)
!13128 = !DILocation(line: 768, column: 1, scope: !13120)
!13129 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2209, file: !2209, line: 740, type: !13130, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13132)
!13130 = !DISubroutineType(types: !13131)
!13131 = !{null, !2110, !2141}
!13132 = !{!13133, !13134}
!13133 = !DILocalVariable(name: "thread", arg: 1, scope: !13129, file: !2209, line: 740, type: !2110)
!13134 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13129, file: !2209, line: 740, type: !2141)
!13135 = !DILocation(line: 0, scope: !13129)
!13136 = !DILocation(line: 742, column: 2, scope: !13129)
!13137 = !DILocation(line: 743, column: 2, scope: !13129)
!13138 = !DILocation(line: 747, column: 13, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13129, file: !2209, line: 747, column: 6)
!13140 = !DILocation(line: 747, column: 6, scope: !13129)
!13141 = !DILocation(line: 748, column: 16, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13139, file: !2209, line: 747, column: 22)
!13143 = !DILocation(line: 748, column: 26, scope: !13142)
!13144 = !DILocation(line: 749, column: 28, scope: !13142)
!13145 = !DILocation(line: 0, scope: !12502, inlinedAt: !13146)
!13146 = distinct !DILocation(line: 749, column: 3, scope: !13142)
!13147 = !DILocation(line: 188, column: 2, scope: !12512, inlinedAt: !13146)
!13148 = !DILocation(line: 188, column: 2, scope: !12514, inlinedAt: !13146)
!13149 = !DILocation(line: 0, scope: !12512, inlinedAt: !13146)
!13150 = !DILocation(line: 189, column: 7, scope: !12517, inlinedAt: !13146)
!13151 = !DILocation(line: 189, column: 35, scope: !12517, inlinedAt: !13146)
!13152 = !DILocation(line: 189, column: 7, scope: !12518, inlinedAt: !13146)
!13153 = !DILocation(line: 191, column: 21, scope: !12522, inlinedAt: !13146)
!13154 = !DILocation(line: 190, column: 4, scope: !12522, inlinedAt: !13146)
!13155 = !DILocation(line: 192, column: 4, scope: !12522, inlinedAt: !13146)
!13156 = distinct !{!13156, !13147, !13157}
!13157 = !DILocation(line: 194, column: 2, scope: !12512, inlinedAt: !13146)
!13158 = !DILocation(line: 196, column: 37, scope: !12502, inlinedAt: !13146)
!13159 = !DILocation(line: 196, column: 2, scope: !12502, inlinedAt: !13146)
!13160 = !DILocation(line: 197, column: 1, scope: !12502, inlinedAt: !13146)
!13161 = !DILocation(line: 751, column: 1, scope: !13129)
!13162 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2209, file: !2209, line: 753, type: !13163, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13165)
!13163 = !DISubroutineType(types: !13164)
!13164 = !{null, !2110, !13093}
!13165 = !{!13166, !13167}
!13166 = !DILocalVariable(name: "thread", arg: 1, scope: !13162, file: !2209, line: 753, type: !2110)
!13167 = !DILocalVariable(name: "timeout", arg: 2, scope: !13162, file: !2209, line: 753, type: !13093)
!13168 = !DILocation(line: 0, scope: !13162)
!13169 = !DILocation(line: 755, column: 7, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13162, file: !2209, line: 755, column: 6)
!13171 = !DILocation(line: 755, column: 6, scope: !13162)
!13172 = !DILocation(line: 756, column: 3, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13170, file: !2209, line: 755, column: 41)
!13174 = !DILocation(line: 757, column: 2, scope: !13173)
!13175 = !DILocation(line: 758, column: 1, scope: !13162)
!13176 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11708, file: !11708, line: 47, type: !13163, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13177)
!13177 = !{!13178, !13179}
!13178 = !DILocalVariable(name: "thread", arg: 1, scope: !13176, file: !11708, line: 47, type: !2110)
!13179 = !DILocalVariable(name: "ticks", arg: 2, scope: !13176, file: !11708, line: 47, type: !13093)
!13180 = !DILocation(line: 0, scope: !13176)
!13181 = !DILocation(line: 49, column: 30, scope: !13176)
!13182 = !DILocation(line: 49, column: 2, scope: !13176)
!13183 = !DILocation(line: 50, column: 1, scope: !13176)
!13184 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2209, file: !2209, line: 795, type: !2167, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13185)
!13185 = !{!13186, !13187, !13188, !13190, !13191}
!13186 = !DILocalVariable(name: "timeout", arg: 1, scope: !13184, file: !2209, line: 795, type: !2169)
!13187 = !DILocalVariable(name: "thread", scope: !13184, file: !2209, line: 797, type: !2110)
!13188 = !DILocalVariable(name: "__i", scope: !13189, file: !2209, line: 800, type: !12292)
!13189 = distinct !DILexicalBlock(scope: !13184, file: !2209, line: 800, column: 2)
!13190 = !DILocalVariable(name: "__key", scope: !13189, file: !2209, line: 800, type: !12292)
!13191 = !DILocalVariable(name: "killed", scope: !13192, file: !2209, line: 801, type: !583)
!13192 = distinct !DILexicalBlock(scope: !13193, file: !2209, line: 800, column: 26)
!13193 = distinct !DILexicalBlock(scope: !13189, file: !2209, line: 800, column: 2)
!13194 = !DILocation(line: 0, scope: !13184)
!13195 = !DILocation(line: 797, column: 28, scope: !13184)
!13196 = !DILocation(line: 0, scope: !13189)
!13197 = !DILocation(line: 0, scope: !12300, inlinedAt: !13198)
!13198 = distinct !DILocation(line: 800, column: 2, scope: !13189)
!13199 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13200)
!13200 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13198)
!13201 = !DILocation(line: 0, scope: !12309, inlinedAt: !13200)
!13202 = !DILocation(line: 801, column: 27, scope: !13192)
!13203 = !DILocation(line: 801, column: 32, scope: !13192)
!13204 = !DILocation(line: 801, column: 61, scope: !13192)
!13205 = !DILocation(line: 0, scope: !13192)
!13206 = !DILocation(line: 804, column: 7, scope: !13192)
!13207 = !DILocation(line: 805, column: 21, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13209, file: !2209, line: 805, column: 8)
!13209 = distinct !DILexicalBlock(scope: !13210, file: !2209, line: 804, column: 16)
!13210 = distinct !DILexicalBlock(scope: !13192, file: !2209, line: 804, column: 7)
!13211 = !DILocation(line: 805, column: 31, scope: !13208)
!13212 = !DILocation(line: 805, column: 8, scope: !13209)
!13213 = !DILocation(line: 806, column: 5, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13208, file: !2209, line: 805, column: 40)
!13215 = !DILocation(line: 807, column: 4, scope: !13214)
!13216 = !DILocation(line: 808, column: 4, scope: !13209)
!13217 = !DILocation(line: 809, column: 4, scope: !13209)
!13218 = !DILocation(line: 810, column: 4, scope: !13209)
!13219 = !DILocation(line: 811, column: 3, scope: !13209)
!13220 = !DILocation(line: 0, scope: !12327, inlinedAt: !13221)
!13221 = distinct !DILocation(line: 800, column: 2, scope: !13193)
!13222 = !DILocation(line: 0, scope: !12335, inlinedAt: !13223)
!13223 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13221)
!13224 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13223)
!13225 = !DILocation(line: 813, column: 1, scope: !13184)
!13226 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2209, file: !2209, line: 779, type: !12258, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13227)
!13227 = !{!13228}
!13228 = !DILocalVariable(name: "thread", arg: 1, scope: !13226, file: !2209, line: 779, type: !2110)
!13229 = !DILocation(line: 0, scope: !13226)
!13230 = !DILocation(line: 781, column: 2, scope: !13226)
!13231 = !DILocation(line: 782, column: 2, scope: !13226)
!13232 = !DILocation(line: 783, column: 15, scope: !13226)
!13233 = !DILocation(line: 783, column: 25, scope: !13226)
!13234 = !DILocation(line: 784, column: 1, scope: !13226)
!13235 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11336, file: !11336, line: 165, type: !12258, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13236)
!13236 = !{!13237}
!13237 = !DILocalVariable(name: "thread", arg: 1, scope: !13235, file: !11336, line: 165, type: !2110)
!13238 = !DILocation(line: 0, scope: !13235)
!13239 = !DILocation(line: 167, column: 15, scope: !13235)
!13240 = !DILocation(line: 167, column: 28, scope: !13235)
!13241 = !DILocation(line: 168, column: 1, scope: !13235)
!13242 = distinct !DISubprogram(name: "unready_thread", scope: !2209, file: !2209, line: 731, type: !12258, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13243)
!13243 = !{!13244}
!13244 = !DILocalVariable(name: "thread", arg: 1, scope: !13242, file: !2209, line: 731, type: !2110)
!13245 = !DILocation(line: 0, scope: !13242)
!13246 = !DILocation(line: 733, column: 6, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13242, file: !2209, line: 733, column: 6)
!13248 = !DILocation(line: 733, column: 6, scope: !13242)
!13249 = !DILocation(line: 0, scope: !12471, inlinedAt: !13250)
!13250 = distinct !DILocation(line: 734, column: 3, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13247, file: !2209, line: 733, column: 34)
!13252 = !DILocation(line: 266, column: 15, scope: !12471, inlinedAt: !13250)
!13253 = !DILocation(line: 266, column: 28, scope: !12471, inlinedAt: !13250)
!13254 = !DILocation(line: 0, scope: !12479, inlinedAt: !13255)
!13255 = distinct !DILocation(line: 268, column: 3, scope: !12483, inlinedAt: !13250)
!13256 = !DILocation(line: 234, column: 2, scope: !12479, inlinedAt: !13255)
!13257 = !DILocation(line: 735, column: 2, scope: !13251)
!13258 = !DILocation(line: 736, column: 25, scope: !13242)
!13259 = !DILocation(line: 736, column: 22, scope: !13242)
!13260 = !DILocation(line: 736, column: 2, scope: !13242)
!13261 = !DILocation(line: 737, column: 1, scope: !13242)
!13262 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11336, file: !11336, line: 160, type: !12258, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13263)
!13263 = !{!13264}
!13264 = !DILocalVariable(name: "thread", arg: 1, scope: !13262, file: !11336, line: 160, type: !2110)
!13265 = !DILocation(line: 0, scope: !13262)
!13266 = !DILocation(line: 162, column: 15, scope: !13262)
!13267 = !DILocation(line: 162, column: 28, scope: !13262)
!13268 = !DILocation(line: 163, column: 1, scope: !13262)
!13269 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2209, file: !2209, line: 786, type: !12258, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13270)
!13270 = !{!13271, !13272, !13274}
!13271 = !DILocalVariable(name: "thread", arg: 1, scope: !13269, file: !2209, line: 786, type: !2110)
!13272 = !DILocalVariable(name: "__i", scope: !13273, file: !2209, line: 788, type: !12292)
!13273 = distinct !DILexicalBlock(scope: !13269, file: !2209, line: 788, column: 2)
!13274 = !DILocalVariable(name: "__key", scope: !13273, file: !2209, line: 788, type: !12292)
!13275 = !DILocation(line: 0, scope: !13269)
!13276 = !DILocation(line: 0, scope: !13273)
!13277 = !DILocation(line: 0, scope: !12300, inlinedAt: !13278)
!13278 = distinct !DILocation(line: 788, column: 2, scope: !13273)
!13279 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13280)
!13280 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13278)
!13281 = !DILocation(line: 0, scope: !12309, inlinedAt: !13280)
!13282 = !DILocation(line: 789, column: 3, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13284, file: !2209, line: 788, column: 26)
!13284 = distinct !DILexicalBlock(scope: !13273, file: !2209, line: 788, column: 2)
!13285 = !DILocation(line: 0, scope: !12327, inlinedAt: !13286)
!13286 = distinct !DILocation(line: 788, column: 2, scope: !13284)
!13287 = !DILocation(line: 0, scope: !12335, inlinedAt: !13288)
!13288 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13286)
!13289 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13288)
!13290 = !DILocation(line: 791, column: 1, scope: !13269)
!13291 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2209, file: !2209, line: 816, type: !13292, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13294)
!13292 = !DISubroutineType(types: !13293)
!13293 = !{!103, !415, !2141, !13093}
!13294 = !{!13295, !13296, !13297, !13298, !13299, !13301}
!13295 = !DILocalVariable(name: "key", arg: 1, scope: !13291, file: !2209, line: 816, type: !415)
!13296 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13291, file: !2209, line: 816, type: !2141)
!13297 = !DILocalVariable(name: "timeout", arg: 3, scope: !13291, file: !2209, line: 816, type: !13093)
!13298 = !DILocalVariable(name: "ret", scope: !13291, file: !2209, line: 828, type: !103)
!13299 = !DILocalVariable(name: "__i", scope: !13300, file: !2209, line: 829, type: !12292)
!13300 = distinct !DILexicalBlock(scope: !13291, file: !2209, line: 829, column: 2)
!13301 = !DILocalVariable(name: "__key", scope: !13300, file: !2209, line: 829, type: !12292)
!13302 = !DILocation(line: 0, scope: !13291)
!13303 = !DILocation(line: 823, column: 14, scope: !13291)
!13304 = !DILocation(line: 823, column: 2, scope: !13291)
!13305 = !DILocation(line: 826, column: 20, scope: !13291)
!13306 = !DILocation(line: 826, column: 18, scope: !13291)
!13307 = !DILocation(line: 828, column: 12, scope: !13291)
!13308 = !DILocation(line: 0, scope: !13300)
!13309 = !DILocation(line: 0, scope: !12300, inlinedAt: !13310)
!13310 = distinct !DILocation(line: 829, column: 2, scope: !13300)
!13311 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13312)
!13312 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13310)
!13313 = !DILocation(line: 0, scope: !12309, inlinedAt: !13312)
!13314 = !DILocation(line: 830, column: 7, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13316, file: !2209, line: 830, column: 7)
!13316 = distinct !DILexicalBlock(scope: !13317, file: !2209, line: 829, column: 26)
!13317 = distinct !DILexicalBlock(scope: !13300, file: !2209, line: 829, column: 2)
!13318 = !DILocation(line: 830, column: 26, scope: !13315)
!13319 = !DILocation(line: 830, column: 23, scope: !13315)
!13320 = !DILocation(line: 830, column: 7, scope: !13316)
!13321 = !DILocation(line: 831, column: 20, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13315, file: !2209, line: 830, column: 36)
!13323 = !DILocation(line: 832, column: 3, scope: !13322)
!13324 = !DILocation(line: 0, scope: !12327, inlinedAt: !13325)
!13325 = distinct !DILocation(line: 829, column: 2, scope: !13317)
!13326 = !DILocation(line: 0, scope: !12335, inlinedAt: !13327)
!13327 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13325)
!13328 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13327)
!13329 = !DILocation(line: 834, column: 2, scope: !13291)
!13330 = distinct !DISubprogram(name: "z_pend_curr", scope: !2209, file: !2209, line: 840, type: !13331, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13333)
!13331 = !DISubroutineType(types: !13332)
!13332 = !{!103, !12303, !12292, !2141, !13093}
!13333 = !{!13334, !13335, !13336, !13337}
!13334 = !DILocalVariable(name: "lock", arg: 1, scope: !13330, file: !2209, line: 840, type: !12303)
!13335 = !DILocalVariable(name: "key", arg: 2, scope: !13330, file: !2209, line: 840, type: !12292)
!13336 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13330, file: !2209, line: 841, type: !2141)
!13337 = !DILocalVariable(name: "timeout", arg: 4, scope: !13330, file: !2209, line: 841, type: !13093)
!13338 = !DILocation(line: 0, scope: !13330)
!13339 = !DILocation(line: 844, column: 20, scope: !13330)
!13340 = !DILocation(line: 844, column: 18, scope: !13330)
!13341 = !DILocation(line: 0, scope: !12300, inlinedAt: !13342)
!13342 = distinct !DILocation(line: 856, column: 9, scope: !13330)
!13343 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13344)
!13344 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13342)
!13345 = !DILocation(line: 0, scope: !12309, inlinedAt: !13344)
!13346 = !DILocation(line: 857, column: 14, scope: !13330)
!13347 = !DILocation(line: 857, column: 2, scope: !13330)
!13348 = !DILocation(line: 0, scope: !12913, inlinedAt: !13349)
!13349 = distinct !DILocation(line: 859, column: 9, scope: !13330)
!13350 = !DILocation(line: 196, column: 9, scope: !12913, inlinedAt: !13349)
!13351 = !DILocation(line: 859, column: 2, scope: !13330)
!13352 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2209, file: !2209, line: 862, type: !13353, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13355)
!13353 = !DISubroutineType(types: !13354)
!13354 = !{!2110, !2141}
!13355 = !{!13356, !13357, !13358, !13360}
!13356 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13352, file: !2209, line: 862, type: !2141)
!13357 = !DILocalVariable(name: "thread", scope: !13352, file: !2209, line: 864, type: !2110)
!13358 = !DILocalVariable(name: "__i", scope: !13359, file: !2209, line: 866, type: !12292)
!13359 = distinct !DILexicalBlock(scope: !13352, file: !2209, line: 866, column: 2)
!13360 = !DILocalVariable(name: "__key", scope: !13359, file: !2209, line: 866, type: !12292)
!13361 = !DILocation(line: 0, scope: !13352)
!13362 = !DILocation(line: 0, scope: !13359)
!13363 = !DILocation(line: 0, scope: !12300, inlinedAt: !13364)
!13364 = distinct !DILocation(line: 866, column: 2, scope: !13359)
!13365 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13366)
!13366 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13364)
!13367 = !DILocation(line: 0, scope: !12309, inlinedAt: !13366)
!13368 = !DILocation(line: 867, column: 12, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13370, file: !2209, line: 866, column: 26)
!13370 = distinct !DILexicalBlock(scope: !13359, file: !2209, line: 866, column: 2)
!13371 = !DILocation(line: 869, column: 14, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13369, file: !2209, line: 869, column: 7)
!13373 = !DILocation(line: 869, column: 7, scope: !13369)
!13374 = !DILocation(line: 870, column: 4, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13372, file: !2209, line: 869, column: 23)
!13376 = !DILocation(line: 871, column: 3, scope: !13375)
!13377 = !DILocation(line: 0, scope: !12327, inlinedAt: !13378)
!13378 = distinct !DILocation(line: 866, column: 2, scope: !13370)
!13379 = !DILocation(line: 0, scope: !12335, inlinedAt: !13380)
!13380 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13378)
!13381 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13380)
!13382 = !DILocation(line: 874, column: 2, scope: !13352)
!13383 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2209, file: !2209, line: 877, type: !13353, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13384)
!13384 = !{!13385, !13386, !13387, !13389}
!13385 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13383, file: !2209, line: 877, type: !2141)
!13386 = !DILocalVariable(name: "thread", scope: !13383, file: !2209, line: 879, type: !2110)
!13387 = !DILocalVariable(name: "__i", scope: !13388, file: !2209, line: 881, type: !12292)
!13388 = distinct !DILexicalBlock(scope: !13383, file: !2209, line: 881, column: 2)
!13389 = !DILocalVariable(name: "__key", scope: !13388, file: !2209, line: 881, type: !12292)
!13390 = !DILocation(line: 0, scope: !13383)
!13391 = !DILocation(line: 0, scope: !13388)
!13392 = !DILocation(line: 0, scope: !12300, inlinedAt: !13393)
!13393 = distinct !DILocation(line: 881, column: 2, scope: !13388)
!13394 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13395)
!13395 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13393)
!13396 = !DILocation(line: 0, scope: !12309, inlinedAt: !13395)
!13397 = !DILocation(line: 882, column: 12, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13399, file: !2209, line: 881, column: 26)
!13399 = distinct !DILexicalBlock(scope: !13388, file: !2209, line: 881, column: 2)
!13400 = !DILocation(line: 884, column: 14, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13398, file: !2209, line: 884, column: 7)
!13402 = !DILocation(line: 884, column: 7, scope: !13398)
!13403 = !DILocation(line: 885, column: 4, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13401, file: !2209, line: 884, column: 23)
!13405 = !DILocation(line: 886, column: 10, scope: !13404)
!13406 = !DILocation(line: 887, column: 3, scope: !13404)
!13407 = !DILocation(line: 0, scope: !12327, inlinedAt: !13408)
!13408 = distinct !DILocation(line: 881, column: 2, scope: !13399)
!13409 = !DILocation(line: 0, scope: !12335, inlinedAt: !13410)
!13410 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13408)
!13411 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13410)
!13412 = !DILocation(line: 890, column: 2, scope: !13383)
!13413 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2209, file: !2209, line: 893, type: !12258, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13414)
!13414 = !{!13415}
!13415 = !DILocalVariable(name: "thread", arg: 1, scope: !13413, file: !2209, line: 893, type: !2110)
!13416 = !DILocation(line: 0, scope: !13413)
!13417 = !DILocation(line: 0, scope: !13269, inlinedAt: !13418)
!13418 = distinct !DILocation(line: 895, column: 2, scope: !13413)
!13419 = !DILocation(line: 0, scope: !13273, inlinedAt: !13418)
!13420 = !DILocation(line: 0, scope: !12300, inlinedAt: !13421)
!13421 = distinct !DILocation(line: 788, column: 2, scope: !13273, inlinedAt: !13418)
!13422 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13423)
!13423 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13421)
!13424 = !DILocation(line: 0, scope: !12309, inlinedAt: !13423)
!13425 = !DILocation(line: 789, column: 3, scope: !13283, inlinedAt: !13418)
!13426 = !DILocation(line: 0, scope: !12327, inlinedAt: !13427)
!13427 = distinct !DILocation(line: 788, column: 2, scope: !13284, inlinedAt: !13418)
!13428 = !DILocation(line: 0, scope: !12335, inlinedAt: !13429)
!13429 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13427)
!13430 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13429)
!13431 = !DILocation(line: 896, column: 8, scope: !13413)
!13432 = !DILocation(line: 897, column: 1, scope: !13413)
!13433 = distinct !DISubprogram(name: "z_set_prio", scope: !2209, file: !2209, line: 902, type: !12622, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13434)
!13434 = !{!13435, !13436, !13437, !13438, !13440}
!13435 = !DILocalVariable(name: "thread", arg: 1, scope: !13433, file: !2209, line: 902, type: !2110)
!13436 = !DILocalVariable(name: "prio", arg: 2, scope: !13433, file: !2209, line: 902, type: !103)
!13437 = !DILocalVariable(name: "need_sched", scope: !13433, file: !2209, line: 904, type: !583)
!13438 = !DILocalVariable(name: "__i", scope: !13439, file: !2209, line: 906, type: !12292)
!13439 = distinct !DILexicalBlock(scope: !13433, file: !2209, line: 906, column: 2)
!13440 = !DILocalVariable(name: "__key", scope: !13439, file: !2209, line: 906, type: !12292)
!13441 = !DILocation(line: 0, scope: !13433)
!13442 = !DILocation(line: 0, scope: !13439)
!13443 = !DILocation(line: 0, scope: !12300, inlinedAt: !13444)
!13444 = distinct !DILocation(line: 906, column: 2, scope: !13439)
!13445 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13446)
!13446 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13444)
!13447 = !DILocation(line: 0, scope: !12309, inlinedAt: !13446)
!13448 = !DILocation(line: 907, column: 16, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13450, file: !2209, line: 906, column: 26)
!13450 = distinct !DILexicalBlock(scope: !13439, file: !2209, line: 906, column: 2)
!13451 = !DILocation(line: 909, column: 7, scope: !13449)
!13452 = !DILocation(line: 0, scope: !12471, inlinedAt: !13453)
!13453 = distinct !DILocation(line: 912, column: 5, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !2209, line: 911, column: 63)
!13455 = distinct !DILexicalBlock(scope: !13456, file: !2209, line: 911, column: 8)
!13456 = distinct !DILexicalBlock(scope: !13457, file: !2209, line: 909, column: 19)
!13457 = distinct !DILexicalBlock(scope: !13449, file: !2209, line: 909, column: 7)
!13458 = !DILocation(line: 266, column: 28, scope: !12471, inlinedAt: !13453)
!13459 = !DILocation(line: 0, scope: !12479, inlinedAt: !13460)
!13460 = distinct !DILocation(line: 268, column: 3, scope: !12483, inlinedAt: !13453)
!13461 = !DILocation(line: 234, column: 2, scope: !12479, inlinedAt: !13460)
!13462 = !DILocation(line: 913, column: 23, scope: !13454)
!13463 = !DILocation(line: 0, scope: !12488, inlinedAt: !13464)
!13464 = distinct !DILocation(line: 914, column: 5, scope: !13454)
!13465 = !DILocation(line: 252, column: 28, scope: !12488, inlinedAt: !13464)
!13466 = !DILocation(line: 0, scope: !12495, inlinedAt: !13467)
!13467 = distinct !DILocation(line: 254, column: 3, scope: !12499, inlinedAt: !13464)
!13468 = !DILocation(line: 0, scope: !12502, inlinedAt: !13469)
!13469 = distinct !DILocation(line: 229, column: 2, scope: !12495, inlinedAt: !13467)
!13470 = !DILocation(line: 188, column: 2, scope: !12512, inlinedAt: !13469)
!13471 = !DILocation(line: 188, column: 2, scope: !12514, inlinedAt: !13469)
!13472 = !DILocation(line: 0, scope: !12512, inlinedAt: !13469)
!13473 = !DILocation(line: 189, column: 7, scope: !12517, inlinedAt: !13469)
!13474 = !DILocation(line: 189, column: 35, scope: !12517, inlinedAt: !13469)
!13475 = !DILocation(line: 189, column: 7, scope: !12518, inlinedAt: !13469)
!13476 = !DILocation(line: 190, column: 4, scope: !12522, inlinedAt: !13469)
!13477 = !DILocation(line: 192, column: 4, scope: !12522, inlinedAt: !13469)
!13478 = distinct !{!13478, !13470, !13479}
!13479 = !DILocation(line: 194, column: 2, scope: !12512, inlinedAt: !13469)
!13480 = !DILocation(line: 196, column: 2, scope: !12502, inlinedAt: !13469)
!13481 = !DILocation(line: 197, column: 1, scope: !12502, inlinedAt: !13469)
!13482 = !DILocation(line: 918, column: 4, scope: !13456)
!13483 = !DILocation(line: 919, column: 3, scope: !13456)
!13484 = !DILocation(line: 920, column: 22, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13457, file: !2209, line: 919, column: 10)
!13486 = !DILocation(line: 0, scope: !12327, inlinedAt: !13487)
!13487 = distinct !DILocation(line: 906, column: 2, scope: !13450)
!13488 = !DILocation(line: 0, scope: !12335, inlinedAt: !13489)
!13489 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13487)
!13490 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13489)
!13491 = !DILocation(line: 926, column: 2, scope: !13433)
!13492 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2209, file: !2209, line: 929, type: !13493, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13495)
!13493 = !DISubroutineType(types: !13494)
!13494 = !{null, !2110, !103}
!13495 = !{!13496, !13497, !13498}
!13496 = !DILocalVariable(name: "thread", arg: 1, scope: !13492, file: !2209, line: 929, type: !2110)
!13497 = !DILocalVariable(name: "prio", arg: 2, scope: !13492, file: !2209, line: 929, type: !103)
!13498 = !DILocalVariable(name: "need_sched", scope: !13492, file: !2209, line: 931, type: !583)
!13499 = !DILocation(line: 0, scope: !13492)
!13500 = !DILocation(line: 931, column: 20, scope: !13492)
!13501 = !DILocation(line: 935, column: 17, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13492, file: !2209, line: 935, column: 6)
!13503 = !DILocation(line: 935, column: 20, scope: !13502)
!13504 = !DILocation(line: 935, column: 35, scope: !13502)
!13505 = !DILocation(line: 935, column: 48, scope: !13502)
!13506 = !DILocation(line: 935, column: 6, scope: !13492)
!13507 = !DILocation(line: 936, column: 3, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13502, file: !2209, line: 935, column: 55)
!13509 = !DILocation(line: 937, column: 2, scope: !13508)
!13510 = !DILocation(line: 938, column: 1, scope: !13492)
!13511 = distinct !DISubprogram(name: "k_sched_lock", scope: !2209, file: !2209, line: 987, type: !3019, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13512)
!13512 = !{!13513, !13515}
!13513 = !DILocalVariable(name: "__i", scope: !13514, file: !2209, line: 989, type: !12292)
!13514 = distinct !DILexicalBlock(scope: !13511, file: !2209, line: 989, column: 2)
!13515 = !DILocalVariable(name: "__key", scope: !13514, file: !2209, line: 989, type: !12292)
!13516 = !DILocation(line: 0, scope: !13514)
!13517 = !DILocation(line: 0, scope: !12300, inlinedAt: !13518)
!13518 = distinct !DILocation(line: 989, column: 2, scope: !13514)
!13519 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13520)
!13520 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13518)
!13521 = !DILocation(line: 0, scope: !12309, inlinedAt: !13520)
!13522 = !DILocation(line: 992, column: 3, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13524, file: !2209, line: 989, column: 26)
!13524 = distinct !DILexicalBlock(scope: !13514, file: !2209, line: 989, column: 2)
!13525 = !DILocation(line: 0, scope: !12327, inlinedAt: !13526)
!13526 = distinct !DILocation(line: 989, column: 2, scope: !13524)
!13527 = !DILocation(line: 0, scope: !12335, inlinedAt: !13528)
!13528 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13526)
!13529 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13528)
!13530 = !DILocation(line: 994, column: 1, scope: !13511)
!13531 = distinct !DISubprogram(name: "z_sched_lock", scope: !11336, file: !11336, line: 251, type: !3019, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !842)
!13532 = !DILocation(line: 256, column: 4, scope: !13531)
!13533 = !DILocation(line: 256, column: 19, scope: !13531)
!13534 = !DILocation(line: 256, column: 2, scope: !13531)
!13535 = !DILocation(line: 258, column: 2, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13531, file: !11336, line: 258, column: 2)
!13537 = !{i64 2154790580}
!13538 = !DILocation(line: 259, column: 1, scope: !13531)
!13539 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2209, file: !2209, line: 996, type: !3019, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13540)
!13540 = !{!13541, !13543}
!13541 = !DILocalVariable(name: "__i", scope: !13542, file: !2209, line: 998, type: !12292)
!13542 = distinct !DILexicalBlock(scope: !13539, file: !2209, line: 998, column: 2)
!13543 = !DILocalVariable(name: "__key", scope: !13542, file: !2209, line: 998, type: !12292)
!13544 = !DILocation(line: 0, scope: !13542)
!13545 = !DILocation(line: 0, scope: !12300, inlinedAt: !13546)
!13546 = distinct !DILocation(line: 998, column: 2, scope: !13542)
!13547 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13548)
!13548 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13546)
!13549 = !DILocation(line: 0, scope: !12309, inlinedAt: !13548)
!13550 = !DILocation(line: 1002, column: 5, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13552, file: !2209, line: 998, column: 26)
!13552 = distinct !DILexicalBlock(scope: !13542, file: !2209, line: 998, column: 2)
!13553 = !DILocation(line: 1002, column: 20, scope: !13551)
!13554 = !DILocation(line: 1002, column: 3, scope: !13551)
!13555 = !DILocation(line: 1003, column: 3, scope: !13551)
!13556 = !DILocation(line: 0, scope: !12327, inlinedAt: !13557)
!13557 = distinct !DILocation(line: 998, column: 2, scope: !13552)
!13558 = !DILocation(line: 0, scope: !12335, inlinedAt: !13559)
!13559 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !13557)
!13560 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !13559)
!13561 = !DILocation(line: 1011, column: 2, scope: !13539)
!13562 = !DILocation(line: 1012, column: 1, scope: !13539)
!13563 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2209, file: !2209, line: 1014, type: !12610, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !842)
!13564 = !DILocation(line: 1028, column: 25, scope: !13563)
!13565 = !DILocation(line: 1028, column: 2, scope: !13563)
!13566 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2209, file: !2209, line: 1155, type: !13567, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13569)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{!583, !2139, !2139}
!13569 = !{!13570, !13571, !13572, !13573, !13574}
!13570 = !DILocalVariable(name: "a", arg: 1, scope: !13566, file: !2209, line: 1155, type: !2139)
!13571 = !DILocalVariable(name: "b", arg: 2, scope: !13566, file: !2209, line: 1155, type: !2139)
!13572 = !DILocalVariable(name: "thread_a", scope: !13566, file: !2209, line: 1157, type: !2110)
!13573 = !DILocalVariable(name: "thread_b", scope: !13566, file: !2209, line: 1157, type: !2110)
!13574 = !DILocalVariable(name: "cmp", scope: !13566, file: !2209, line: 1158, type: !700)
!13575 = !DILocation(line: 0, scope: !13566)
!13576 = !DILocation(line: 1160, column: 13, scope: !13566)
!13577 = !DILocation(line: 1161, column: 13, scope: !13566)
!13578 = !DILocation(line: 1163, column: 8, scope: !13566)
!13579 = !DILocation(line: 1165, column: 10, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13566, file: !2209, line: 1165, column: 6)
!13581 = !DILocation(line: 1165, column: 6, scope: !13566)
!13582 = !DILocation(line: 1167, column: 17, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13580, file: !2209, line: 1167, column: 13)
!13584 = !DILocation(line: 1167, column: 13, scope: !13580)
!13585 = !DILocation(line: 1170, column: 25, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13583, file: !2209, line: 1169, column: 9)
!13587 = !DILocation(line: 1170, column: 52, scope: !13586)
!13588 = !DILocation(line: 1170, column: 35, scope: !13586)
!13589 = !DILocation(line: 1170, column: 3, scope: !13586)
!13590 = !DILocation(line: 0, scope: !13580)
!13591 = !DILocation(line: 1173, column: 1, scope: !13566)
!13592 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2209, file: !2209, line: 1175, type: !13593, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13608)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{null, !13595, !2110}
!13595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13596, size: 32)
!13596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13597, line: 37, size: 128, elements: !13598)
!13597 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13598 = !{!13599, !13607}
!13599 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13596, file: !13597, line: 38, baseType: !13600, size: 96)
!13600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !1827, line: 83, size: 96, elements: !13601)
!13601 = !{!13602, !13603, !13606}
!13602 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13600, file: !1827, line: 84, baseType: !2139, size: 32)
!13603 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13600, file: !1827, line: 85, baseType: !13604, size: 32, offset: 32)
!13604 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !1827, line: 81, baseType: !13605)
!13605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13567, size: 32)
!13606 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13600, file: !1827, line: 86, baseType: !103, size: 32, offset: 64)
!13607 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13596, file: !13597, line: 39, baseType: !103, size: 32, offset: 96)
!13608 = !{!13609, !13610, !13611, !13612, !13621}
!13609 = !DILocalVariable(name: "pq", arg: 1, scope: !13592, file: !2209, line: 1175, type: !13595)
!13610 = !DILocalVariable(name: "thread", arg: 2, scope: !13592, file: !2209, line: 1175, type: !2110)
!13611 = !DILocalVariable(name: "t", scope: !13592, file: !2209, line: 1177, type: !2110)
!13612 = !DILocalVariable(name: "__f", scope: !13613, file: !2209, line: 1190, type: !13616)
!13613 = distinct !DILexicalBlock(scope: !13614, file: !2209, line: 1190, column: 3)
!13614 = distinct !DILexicalBlock(scope: !13615, file: !2209, line: 1189, column: 27)
!13615 = distinct !DILexicalBlock(scope: !13592, file: !2209, line: 1189, column: 6)
!13616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !1827, line: 155, size: 96, elements: !13617)
!13617 = !{!13618, !13619, !13620}
!13618 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13616, file: !1827, line: 156, baseType: !2204, size: 32)
!13619 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13616, file: !1827, line: 157, baseType: !628, size: 32, offset: 32)
!13620 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13616, file: !1827, line: 158, baseType: !700, size: 32, offset: 64)
!13621 = !DILocalVariable(name: "n", scope: !13622, file: !2209, line: 1190, type: !2139)
!13622 = distinct !DILexicalBlock(scope: !13623, file: !2209, line: 1190, column: 3)
!13623 = distinct !DILexicalBlock(scope: !13613, file: !2209, line: 1190, column: 3)
!13624 = !DILocation(line: 0, scope: !13592)
!13625 = !DILocation(line: 1181, column: 31, scope: !13592)
!13626 = !DILocation(line: 1181, column: 45, scope: !13592)
!13627 = !DILocation(line: 1181, column: 15, scope: !13592)
!13628 = !DILocation(line: 1181, column: 25, scope: !13592)
!13629 = !DILocation(line: 1189, column: 11, scope: !13615)
!13630 = !DILocation(line: 1189, column: 7, scope: !13615)
!13631 = !DILocation(line: 1189, column: 6, scope: !13592)
!13632 = !DILocation(line: 1190, column: 3, scope: !13613)
!13633 = !DILocation(line: 1190, column: 3, scope: !13622)
!13634 = !DILocation(line: 0, scope: !13622)
!13635 = !DILocation(line: 1190, column: 3, scope: !13623)
!13636 = !DILocation(line: 1193, column: 2, scope: !13614)
!13637 = !DILocation(line: 1191, column: 42, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13623, file: !2209, line: 1190, column: 54)
!13639 = !DILocation(line: 1191, column: 12, scope: !13638)
!13640 = !DILocation(line: 1191, column: 22, scope: !13638)
!13641 = distinct !{!13641, !13632, !13642}
!13642 = !DILocation(line: 1192, column: 3, scope: !13613)
!13643 = !DILocation(line: 1195, column: 17, scope: !13592)
!13644 = !DILocation(line: 1195, column: 37, scope: !13592)
!13645 = !DILocation(line: 1195, column: 2, scope: !13592)
!13646 = !DILocation(line: 1196, column: 1, scope: !13592)
!13647 = !DISubprogram(name: "z_rb_foreach_next", scope: !1827, file: !1827, line: 176, type: !13648, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !842)
!13648 = !DISubroutineType(types: !13649)
!13649 = !{!2139, !13650, !13651}
!13650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13600, size: 32)
!13651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13616, size: 32)
!13652 = !DISubprogram(name: "rb_insert", scope: !1827, file: !1827, line: 105, type: !13653, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !842)
!13653 = !DISubroutineType(types: !13654)
!13654 = !{null, !13650, !2139}
!13655 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2209, file: !2209, line: 1198, type: !13593, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13656)
!13656 = !{!13657, !13658}
!13657 = !DILocalVariable(name: "pq", arg: 1, scope: !13655, file: !2209, line: 1198, type: !13595)
!13658 = !DILocalVariable(name: "thread", arg: 2, scope: !13655, file: !2209, line: 1198, type: !2110)
!13659 = !DILocation(line: 0, scope: !13655)
!13660 = !DILocation(line: 1202, column: 17, scope: !13655)
!13661 = !DILocation(line: 1202, column: 37, scope: !13655)
!13662 = !DILocation(line: 1202, column: 2, scope: !13655)
!13663 = !DILocation(line: 1204, column: 16, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13655, file: !2209, line: 1204, column: 6)
!13665 = !DILocation(line: 1204, column: 7, scope: !13664)
!13666 = !DILocation(line: 1204, column: 6, scope: !13655)
!13667 = !DILocation(line: 1205, column: 7, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13664, file: !2209, line: 1204, column: 22)
!13669 = !DILocation(line: 1205, column: 22, scope: !13668)
!13670 = !DILocation(line: 1206, column: 2, scope: !13668)
!13671 = !DILocation(line: 1207, column: 1, scope: !13655)
!13672 = !DISubprogram(name: "rb_remove", scope: !1827, file: !1827, line: 110, type: !13653, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !842)
!13673 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2209, file: !2209, line: 1209, type: !13674, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13676)
!13674 = !DISubroutineType(types: !13675)
!13675 = !{!2110, !13595}
!13676 = !{!13677, !13678, !13679}
!13677 = !DILocalVariable(name: "pq", arg: 1, scope: !13673, file: !2209, line: 1209, type: !13595)
!13678 = !DILocalVariable(name: "thread", scope: !13673, file: !2209, line: 1211, type: !2110)
!13679 = !DILocalVariable(name: "n", scope: !13673, file: !2209, line: 1212, type: !2139)
!13680 = !DILocation(line: 0, scope: !13673)
!13681 = !DILocation(line: 1212, column: 37, scope: !13673)
!13682 = !DILocation(line: 1212, column: 21, scope: !13673)
!13683 = !DILocation(line: 1217, column: 2, scope: !13673)
!13684 = distinct !DISubprogram(name: "rb_get_min", scope: !1827, file: !1827, line: 115, type: !13685, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13687)
!13685 = !DISubroutineType(types: !13686)
!13686 = !{!2139, !13650}
!13687 = !{!13688}
!13688 = !DILocalVariable(name: "tree", arg: 1, scope: !13684, file: !1827, line: 115, type: !13650)
!13689 = !DILocation(line: 0, scope: !13684)
!13690 = !DILocation(line: 117, column: 9, scope: !13684)
!13691 = !DILocation(line: 117, column: 2, scope: !13684)
!13692 = !DISubprogram(name: "z_rb_get_minmax", scope: !1827, file: !1827, line: 100, type: !13693, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !842)
!13693 = !DISubroutineType(types: !13694)
!13694 = !{!2139, !13650, !421}
!13695 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2209, file: !2209, line: 1246, type: !13696, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13704)
!13696 = !DISubroutineType(types: !13697)
!13697 = !{!2110, !13698}
!13698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13699, size: 32)
!13699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13597, line: 53, size: 2080, elements: !13700)
!13700 = !{!13701, !13703}
!13701 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13699, file: !13597, line: 54, baseType: !13702, size: 2048)
!13702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2146, size: 2048, elements: !491)
!13703 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13699, file: !13597, line: 55, baseType: !32, size: 32, offset: 2048)
!13704 = !{!13705, !13706, !13707, !13708}
!13705 = !DILocalVariable(name: "pq", arg: 1, scope: !13695, file: !2209, line: 1246, type: !13698)
!13706 = !DILocalVariable(name: "thread", scope: !13695, file: !2209, line: 1252, type: !2110)
!13707 = !DILocalVariable(name: "l", scope: !13695, file: !2209, line: 1253, type: !12505)
!13708 = !DILocalVariable(name: "n", scope: !13695, file: !2209, line: 1254, type: !2205)
!13709 = !DILocation(line: 0, scope: !13695)
!13710 = !DILocation(line: 1248, column: 11, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13695, file: !2209, line: 1248, column: 6)
!13712 = !DILocation(line: 1248, column: 7, scope: !13711)
!13713 = !DILocation(line: 1248, column: 6, scope: !13695)
!13714 = !DILocation(line: 1253, column: 31, scope: !13695)
!13715 = !DILocation(line: 1253, column: 20, scope: !13695)
!13716 = !DILocation(line: 1254, column: 19, scope: !13695)
!13717 = !DILocation(line: 1260, column: 1, scope: !13695)
!13718 = distinct !DISubprogram(name: "z_unpend_all", scope: !2209, file: !2209, line: 1262, type: !13719, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13721)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{!103, !2141}
!13721 = !{!13722, !13723, !13724}
!13722 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13718, file: !2209, line: 1262, type: !2141)
!13723 = !DILocalVariable(name: "need_sched", scope: !13718, file: !2209, line: 1264, type: !103)
!13724 = !DILocalVariable(name: "thread", scope: !13718, file: !2209, line: 1265, type: !2110)
!13725 = !DILocation(line: 0, scope: !13718)
!13726 = !DILocation(line: 1267, column: 19, scope: !13718)
!13727 = !DILocation(line: 1267, column: 41, scope: !13718)
!13728 = !DILocation(line: 1267, column: 2, scope: !13718)
!13729 = !DILocation(line: 1268, column: 3, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13718, file: !2209, line: 1267, column: 50)
!13731 = !DILocation(line: 1269, column: 3, scope: !13730)
!13732 = distinct !{!13732, !13728, !13733}
!13733 = !DILocation(line: 1271, column: 2, scope: !13718)
!13734 = !DILocation(line: 1273, column: 2, scope: !13718)
!13735 = distinct !DISubprogram(name: "z_waitq_head", scope: !11656, file: !11656, line: 52, type: !13353, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13736)
!13736 = !{!13737}
!13737 = !DILocalVariable(name: "w", arg: 1, scope: !13735, file: !11656, line: 52, type: !2141)
!13738 = !DILocation(line: 0, scope: !13735)
!13739 = !DILocation(line: 54, column: 52, scope: !13735)
!13740 = !DILocation(line: 54, column: 28, scope: !13735)
!13741 = !DILocation(line: 54, column: 9, scope: !13735)
!13742 = !DILocation(line: 54, column: 2, scope: !13735)
!13743 = distinct !DISubprogram(name: "init_ready_q", scope: !2209, file: !2209, line: 1276, type: !13744, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13751)
!13744 = !DISubroutineType(types: !13745)
!13745 = !{null, !13746}
!13746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13747, size: 32)
!13747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !674, line: 83, size: 96, elements: !13748)
!13748 = !{!13749, !13750}
!13749 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13747, file: !674, line: 86, baseType: !2110, size: 32)
!13750 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13747, file: !674, line: 90, baseType: !2146, size: 64, offset: 32)
!13751 = !{!13752}
!13752 = !DILocalVariable(name: "rq", arg: 1, scope: !13743, file: !2209, line: 1276, type: !13746)
!13753 = !DILocation(line: 0, scope: !13743)
!13754 = !DILocation(line: 1289, column: 22, scope: !13743)
!13755 = !DILocation(line: 1289, column: 2, scope: !13743)
!13756 = !DILocation(line: 1291, column: 1, scope: !13743)
!13757 = distinct !DISubprogram(name: "sys_dlist_init", scope: !679, file: !679, line: 197, type: !13758, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13760)
!13758 = !DISubroutineType(types: !13759)
!13759 = !{null, !12505}
!13760 = !{!13761}
!13761 = !DILocalVariable(name: "list", arg: 1, scope: !13757, file: !679, line: 197, type: !12505)
!13762 = !DILocation(line: 0, scope: !13757)
!13763 = !DILocation(line: 199, column: 8, scope: !13757)
!13764 = !DILocation(line: 199, column: 13, scope: !13757)
!13765 = !DILocation(line: 200, column: 8, scope: !13757)
!13766 = !DILocation(line: 200, column: 13, scope: !13757)
!13767 = !DILocation(line: 201, column: 1, scope: !13757)
!13768 = distinct !DISubprogram(name: "z_sched_init", scope: !2209, file: !2209, line: 1293, type: !3019, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !842)
!13769 = !DILocation(line: 1302, column: 2, scope: !13768)
!13770 = !DILocation(line: 1306, column: 2, scope: !13768)
!13771 = !DILocation(line: 1309, column: 1, scope: !13768)
!13772 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2209, file: !2209, line: 1311, type: !13773, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13776)
!13773 = !DISubroutineType(types: !13774)
!13774 = !{!103, !13775}
!13775 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1802, line: 347, baseType: !2110)
!13776 = !{!13777}
!13777 = !DILocalVariable(name: "thread", arg: 1, scope: !13772, file: !2209, line: 1311, type: !13775)
!13778 = !DILocation(line: 0, scope: !13772)
!13779 = !DILocation(line: 1313, column: 22, scope: !13772)
!13780 = !DILocation(line: 1313, column: 9, scope: !13772)
!13781 = !DILocation(line: 1313, column: 2, scope: !13772)
!13782 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2209, file: !2209, line: 1325, type: !13783, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13785)
!13783 = !DISubroutineType(types: !13784)
!13784 = !{null, !13775, !103}
!13785 = !{!13786, !13787, !13788}
!13786 = !DILocalVariable(name: "thread", arg: 1, scope: !13782, file: !2209, line: 1325, type: !13775)
!13787 = !DILocalVariable(name: "prio", arg: 2, scope: !13782, file: !2209, line: 1325, type: !103)
!13788 = !DILocalVariable(name: "th", scope: !13782, file: !2209, line: 1334, type: !2110)
!13789 = !DILocation(line: 0, scope: !13782)
!13790 = !DILocation(line: 1336, column: 2, scope: !13782)
!13791 = !DILocation(line: 1337, column: 1, scope: !13782)
!13792 = distinct !DISubprogram(name: "k_can_yield", scope: !2209, file: !2209, line: 1384, type: !7275, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !842)
!13793 = !DILocation(line: 1386, column: 11, scope: !13792)
!13794 = !DILocation(line: 1386, column: 29, scope: !13792)
!13795 = !DILocation(line: 1386, column: 32, scope: !13792)
!13796 = !DILocation(line: 1386, column: 46, scope: !13792)
!13797 = !DILocation(line: 1387, column: 28, scope: !13792)
!13798 = !DILocation(line: 1387, column: 4, scope: !13792)
!13799 = !DILocation(line: 1386, column: 2, scope: !13792)
!13800 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !670, file: !670, line: 989, type: !7275, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !842)
!13801 = !DILocation(line: 993, column: 10, scope: !13800)
!13802 = !DILocation(line: 993, column: 2, scope: !13800)
!13803 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2209, file: !2209, line: 1390, type: !3019, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13804)
!13804 = !{!13805}
!13805 = !DILocalVariable(name: "key", scope: !13803, file: !2209, line: 1396, type: !12292)
!13806 = !DILocation(line: 0, scope: !12300, inlinedAt: !13807)
!13807 = distinct !DILocation(line: 1396, column: 25, scope: !13803)
!13808 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13809)
!13809 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13807)
!13810 = !DILocation(line: 0, scope: !12309, inlinedAt: !13809)
!13811 = !DILocation(line: 0, scope: !13803)
!13812 = !DILocation(line: 1400, column: 18, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13814, file: !2209, line: 1399, column: 36)
!13814 = distinct !DILexicalBlock(scope: !13803, file: !2209, line: 1398, column: 6)
!13815 = !DILocation(line: 0, scope: !12471, inlinedAt: !13816)
!13816 = distinct !DILocation(line: 1400, column: 3, scope: !13813)
!13817 = !DILocation(line: 266, column: 15, scope: !12471, inlinedAt: !13816)
!13818 = !DILocation(line: 266, column: 28, scope: !12471, inlinedAt: !13816)
!13819 = !DILocation(line: 0, scope: !12479, inlinedAt: !13820)
!13820 = distinct !DILocation(line: 268, column: 3, scope: !12483, inlinedAt: !13816)
!13821 = !DILocation(line: 234, column: 2, scope: !12479, inlinedAt: !13820)
!13822 = !DILocation(line: 1402, column: 15, scope: !13803)
!13823 = !DILocation(line: 0, scope: !12488, inlinedAt: !13824)
!13824 = distinct !DILocation(line: 1402, column: 2, scope: !13803)
!13825 = !DILocation(line: 252, column: 15, scope: !12488, inlinedAt: !13824)
!13826 = !DILocation(line: 252, column: 28, scope: !12488, inlinedAt: !13824)
!13827 = !DILocation(line: 0, scope: !12495, inlinedAt: !13828)
!13828 = distinct !DILocation(line: 254, column: 3, scope: !12499, inlinedAt: !13824)
!13829 = !DILocation(line: 0, scope: !12502, inlinedAt: !13830)
!13830 = distinct !DILocation(line: 229, column: 2, scope: !12495, inlinedAt: !13828)
!13831 = !DILocation(line: 188, column: 2, scope: !12512, inlinedAt: !13830)
!13832 = !DILocation(line: 188, column: 2, scope: !12514, inlinedAt: !13830)
!13833 = !DILocation(line: 0, scope: !12512, inlinedAt: !13830)
!13834 = !DILocation(line: 189, column: 7, scope: !12517, inlinedAt: !13830)
!13835 = !DILocation(line: 189, column: 35, scope: !12517, inlinedAt: !13830)
!13836 = !DILocation(line: 189, column: 7, scope: !12518, inlinedAt: !13830)
!13837 = !DILocation(line: 191, column: 21, scope: !12522, inlinedAt: !13830)
!13838 = !DILocation(line: 190, column: 4, scope: !12522, inlinedAt: !13830)
!13839 = !DILocation(line: 192, column: 4, scope: !12522, inlinedAt: !13830)
!13840 = distinct !{!13840, !13831, !13841}
!13841 = !DILocation(line: 194, column: 2, scope: !12512, inlinedAt: !13830)
!13842 = !DILocation(line: 196, column: 37, scope: !12502, inlinedAt: !13830)
!13843 = !DILocation(line: 196, column: 2, scope: !12502, inlinedAt: !13830)
!13844 = !DILocation(line: 197, column: 1, scope: !12502, inlinedAt: !13830)
!13845 = !DILocation(line: 1403, column: 2, scope: !13803)
!13846 = !DILocation(line: 0, scope: !12913, inlinedAt: !13847)
!13847 = distinct !DILocation(line: 1404, column: 2, scope: !13803)
!13848 = !DILocation(line: 196, column: 9, scope: !12913, inlinedAt: !13847)
!13849 = !DILocation(line: 1405, column: 1, scope: !13803)
!13850 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2209, file: !2209, line: 1459, type: !13851, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13853)
!13851 = !DISubroutineType(types: !13852)
!13852 = !{!700, !13093}
!13853 = !{!13854, !13855, !13856}
!13854 = !DILocalVariable(name: "timeout", arg: 1, scope: !13850, file: !2209, line: 1459, type: !13093)
!13855 = !DILocalVariable(name: "ticks", scope: !13850, file: !2209, line: 1461, type: !1546)
!13856 = !DILocalVariable(name: "ret", scope: !13850, file: !2209, line: 1480, type: !700)
!13857 = !DILocation(line: 0, scope: !13850)
!13858 = !DILocation(line: 1468, column: 6, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13850, file: !2209, line: 1468, column: 6)
!13860 = !DILocation(line: 1468, column: 6, scope: !13850)
!13861 = !DILocation(line: 1469, column: 20, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13859, file: !2209, line: 1468, column: 40)
!13863 = !DILocation(line: 1469, column: 3, scope: !13862)
!13864 = !DILocation(line: 1473, column: 3, scope: !13862)
!13865 = !DILocation(line: 1478, column: 10, scope: !13850)
!13866 = !DILocation(line: 1480, column: 16, scope: !13850)
!13867 = !DILocation(line: 1485, column: 1, scope: !13850)
!13868 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3443, file: !3443, line: 310, type: !13869, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13871)
!13869 = !DISubroutineType(types: !13870)
!13870 = !{null, !13775}
!13871 = !{!13872}
!13872 = !DILocalVariable(name: "thread", arg: 1, scope: !13868, file: !3443, line: 310, type: !13775)
!13873 = !DILocation(line: 0, scope: !13868)
!13874 = !DILocation(line: 319, column: 2, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13868, file: !3443, line: 319, column: 2)
!13876 = !{i64 2151080194}
!13877 = !DILocation(line: 320, column: 2, scope: !13868)
!13878 = !DILocation(line: 321, column: 1, scope: !13868)
!13879 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2209, file: !2209, line: 1415, type: !13880, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13882)
!13880 = !DISubroutineType(types: !13881)
!13881 = !{!700, !1546}
!13882 = !{!13883, !13884, !13885, !13886}
!13883 = !DILocalVariable(name: "ticks", arg: 1, scope: !13879, file: !2209, line: 1415, type: !1546)
!13884 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13879, file: !2209, line: 1418, type: !415)
!13885 = !DILocalVariable(name: "timeout", scope: !13879, file: !2209, line: 1430, type: !13093)
!13886 = !DILocalVariable(name: "key", scope: !13879, file: !2209, line: 1437, type: !12292)
!13887 = !DILocation(line: 0, scope: !13879)
!13888 = !DILocation(line: 1425, column: 12, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13879, file: !2209, line: 1425, column: 6)
!13890 = !DILocation(line: 1425, column: 6, scope: !13879)
!13891 = !DILocation(line: 1426, column: 3, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13889, file: !2209, line: 1425, column: 18)
!13893 = !DILocation(line: 1427, column: 3, scope: !13892)
!13894 = !DILocation(line: 1431, column: 24, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13879, file: !2209, line: 1431, column: 6)
!13896 = !DILocation(line: 1431, column: 6, scope: !13879)
!13897 = !DILocation(line: 1432, column: 35, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13895, file: !2209, line: 1431, column: 30)
!13899 = !DILocation(line: 1432, column: 27, scope: !13898)
!13900 = !DILocation(line: 1433, column: 2, scope: !13898)
!13901 = !DILocation(line: 1434, column: 27, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13895, file: !2209, line: 1433, column: 9)
!13903 = !DILocation(line: 0, scope: !13895)
!13904 = !DILocation(line: 0, scope: !12300, inlinedAt: !13905)
!13905 = distinct !DILocation(line: 1437, column: 25, scope: !13879)
!13906 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !13907)
!13907 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !13905)
!13908 = !DILocation(line: 0, scope: !12309, inlinedAt: !13907)
!13909 = !DILocation(line: 1440, column: 20, scope: !13879)
!13910 = !DILocation(line: 1440, column: 18, scope: !13879)
!13911 = !DILocation(line: 1442, column: 2, scope: !13879)
!13912 = !DILocation(line: 1443, column: 23, scope: !13879)
!13913 = !DILocation(line: 1443, column: 2, scope: !13879)
!13914 = !DILocation(line: 1444, column: 29, scope: !13879)
!13915 = !DILocation(line: 1444, column: 2, scope: !13879)
!13916 = !DILocation(line: 0, scope: !12913, inlinedAt: !13917)
!13917 = distinct !DILocation(line: 1446, column: 8, scope: !13879)
!13918 = !DILocation(line: 196, column: 9, scope: !12913, inlinedAt: !13917)
!13919 = !DILocation(line: 1450, column: 10, scope: !13879)
!13920 = !DILocation(line: 1450, column: 45, scope: !13879)
!13921 = !DILocation(line: 1450, column: 43, scope: !13879)
!13922 = !DILocation(line: 1451, column: 6, scope: !13879)
!13923 = !DILocation(line: 1457, column: 1, scope: !13879)
!13924 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !5720, file: !5720, line: 1103, type: !5721, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13925)
!13925 = !{!13926}
!13926 = !DILocalVariable(name: "t", arg: 1, scope: !13924, file: !5720, line: 1103, type: !2065)
!13927 = !DILocation(line: 0, scope: !13924)
!13928 = !DILocation(line: 0, scope: !12349, inlinedAt: !13929)
!13929 = distinct !DILocation(line: 1106, column: 9, scope: !13924)
!13930 = !DILocation(line: 139, column: 13, scope: !13931, inlinedAt: !13929)
!13931 = distinct !DILexicalBlock(scope: !13932, file: !5720, line: 138, column: 10)
!13932 = distinct !DILexicalBlock(scope: !13933, file: !5720, line: 136, column: 7)
!13933 = distinct !DILexicalBlock(scope: !12370, file: !5720, line: 134, column: 17)
!13934 = !DILocation(line: 1106, column: 2, scope: !13924)
!13935 = distinct !DISubprogram(name: "k_yield", scope: !3443, file: !3443, line: 140, type: !3019, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !842)
!13936 = !DILocation(line: 148, column: 2, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13935, file: !3443, line: 148, column: 2)
!13938 = !{i64 2151079514}
!13939 = !DILocation(line: 149, column: 2, scope: !13935)
!13940 = !DILocation(line: 150, column: 1, scope: !13935)
!13941 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2209, file: !2209, line: 1495, type: !13942, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13944)
!13942 = !DISubroutineType(types: !13943)
!13943 = !{!700, !103}
!13944 = !{!13945, !13946}
!13945 = !DILocalVariable(name: "us", arg: 1, scope: !13941, file: !2209, line: 1495, type: !103)
!13946 = !DILocalVariable(name: "ticks", scope: !13941, file: !2209, line: 1497, type: !700)
!13947 = !DILocation(line: 0, scope: !13941)
!13948 = !DILocation(line: 1501, column: 31, scope: !13941)
!13949 = !DILocation(line: 1501, column: 10, scope: !13941)
!13950 = !DILocation(line: 1502, column: 23, scope: !13941)
!13951 = !DILocation(line: 1502, column: 10, scope: !13941)
!13952 = !DILocation(line: 1506, column: 31, scope: !13941)
!13953 = !DILocation(line: 1506, column: 9, scope: !13941)
!13954 = !DILocation(line: 1506, column: 2, scope: !13941)
!13955 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !5720, file: !5720, line: 571, type: !5721, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13956)
!13956 = !{!13957}
!13957 = !DILocalVariable(name: "t", arg: 1, scope: !13955, file: !5720, line: 571, type: !2065)
!13958 = !DILocation(line: 0, scope: !13955)
!13959 = !DILocation(line: 0, scope: !12349, inlinedAt: !13960)
!13960 = distinct !DILocation(line: 574, column: 9, scope: !13955)
!13961 = !DILocation(line: 135, column: 5, scope: !13933, inlinedAt: !13960)
!13962 = !DILocation(line: 139, column: 13, scope: !13931, inlinedAt: !13960)
!13963 = !DILocation(line: 574, column: 2, scope: !13955)
!13964 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !5720, file: !5720, line: 1187, type: !5721, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13965)
!13965 = !{!13966}
!13966 = !DILocalVariable(name: "t", arg: 1, scope: !13964, file: !5720, line: 1187, type: !2065)
!13967 = !DILocation(line: 0, scope: !13964)
!13968 = !DILocation(line: 0, scope: !12349, inlinedAt: !13969)
!13969 = distinct !DILocation(line: 1190, column: 9, scope: !13964)
!13970 = !DILocation(line: 145, column: 13, scope: !13971, inlinedAt: !13969)
!13971 = distinct !DILexicalBlock(scope: !12367, file: !5720, line: 144, column: 10)
!13972 = !DILocation(line: 1190, column: 2, scope: !13964)
!13973 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2209, file: !2209, line: 1517, type: !13869, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13974)
!13974 = !{!13975}
!13975 = !DILocalVariable(name: "thread", arg: 1, scope: !13973, file: !2209, line: 1517, type: !13775)
!13976 = !DILocation(line: 0, scope: !13973)
!13977 = !DILocation(line: 1521, column: 6, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13973, file: !2209, line: 1521, column: 6)
!13979 = !DILocation(line: 1521, column: 6, scope: !13973)
!13980 = !DILocation(line: 1525, column: 6, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13973, file: !2209, line: 1525, column: 6)
!13982 = !DILocation(line: 1525, column: 37, scope: !13981)
!13983 = !DILocation(line: 1525, column: 6, scope: !13973)
!13984 = !DILocation(line: 1527, column: 20, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13986, file: !2209, line: 1527, column: 7)
!13986 = distinct !DILexicalBlock(scope: !13981, file: !2209, line: 1525, column: 42)
!13987 = !DILocation(line: 1527, column: 33, scope: !13985)
!13988 = !DILocation(line: 1527, column: 7, scope: !13986)
!13989 = !DILocation(line: 1532, column: 2, scope: !13973)
!13990 = !DILocation(line: 1533, column: 2, scope: !13973)
!13991 = !DILocation(line: 1031, column: 3, scope: !12946, inlinedAt: !13992)
!13992 = distinct !DILocation(line: 48, column: 10, scope: !12950, inlinedAt: !13993)
!13993 = distinct !DILocation(line: 1537, column: 7, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13973, file: !2209, line: 1537, column: 6)
!13995 = !DILocation(line: 0, scope: !12946, inlinedAt: !13992)
!13996 = !DILocation(line: 48, column: 9, scope: !12950, inlinedAt: !13993)
!13997 = !DILocation(line: 1537, column: 6, scope: !13973)
!13998 = !DILocation(line: 1538, column: 3, scope: !13999)
!13999 = distinct !DILexicalBlock(scope: !13994, file: !2209, line: 1537, column: 25)
!14000 = !DILocation(line: 1539, column: 2, scope: !13999)
!14001 = !DILocation(line: 1540, column: 1, scope: !13973)
!14002 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11336, file: !11336, line: 101, type: !12420, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14003)
!14003 = !{!14004}
!14004 = !DILocalVariable(name: "thread", arg: 1, scope: !14002, file: !11336, line: 101, type: !2110)
!14005 = !DILocation(line: 0, scope: !14002)
!14006 = !DILocation(line: 103, column: 23, scope: !14002)
!14007 = !DILocation(line: 103, column: 36, scope: !14002)
!14008 = !DILocation(line: 103, column: 55, scope: !14002)
!14009 = !DILocation(line: 103, column: 2, scope: !14002)
!14010 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2209, file: !2209, line: 1567, type: !14011, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14013)
!14011 = !DISubroutineType(types: !14012)
!14012 = !{!13775}
!14013 = !{!14014}
!14014 = !DILocalVariable(name: "ret", scope: !14010, file: !2209, line: 1577, type: !13775)
!14015 = !DILocation(line: 1577, column: 30, scope: !14010)
!14016 = !DILocation(line: 0, scope: !14010)
!14017 = !DILocation(line: 1582, column: 2, scope: !14010)
!14018 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2209, file: !2209, line: 1593, type: !6344, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !842)
!14019 = !DILocation(line: 1031, column: 3, scope: !12946, inlinedAt: !14020)
!14020 = distinct !DILocation(line: 48, column: 10, scope: !12950, inlinedAt: !14021)
!14021 = distinct !DILocation(line: 1595, column: 10, scope: !14018)
!14022 = !DILocation(line: 0, scope: !12946, inlinedAt: !14020)
!14023 = !DILocation(line: 48, column: 9, scope: !12950, inlinedAt: !14021)
!14024 = !DILocation(line: 1595, column: 27, scope: !14018)
!14025 = !DILocation(line: 1595, column: 41, scope: !14018)
!14026 = !DILocation(line: 1595, column: 30, scope: !14018)
!14027 = !DILocation(line: 1595, column: 2, scope: !14018)
!14028 = distinct !DISubprogram(name: "z_thread_abort", scope: !2209, file: !2209, line: 1725, type: !12258, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14029)
!14029 = !{!14030, !14031}
!14030 = !DILocalVariable(name: "thread", arg: 1, scope: !14028, file: !2209, line: 1725, type: !2110)
!14031 = !DILocalVariable(name: "key", scope: !14028, file: !2209, line: 1727, type: !12292)
!14032 = !DILocation(line: 0, scope: !14028)
!14033 = !DILocation(line: 0, scope: !12300, inlinedAt: !14034)
!14034 = distinct !DILocation(line: 1727, column: 25, scope: !14028)
!14035 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !14036)
!14036 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !14034)
!14037 = !DILocation(line: 0, scope: !12309, inlinedAt: !14036)
!14038 = !DILocation(line: 1729, column: 20, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14028, file: !2209, line: 1729, column: 6)
!14040 = !DILocation(line: 1729, column: 33, scope: !14039)
!14041 = !DILocation(line: 1729, column: 48, scope: !14039)
!14042 = !DILocation(line: 1729, column: 6, scope: !14028)
!14043 = !DILocation(line: 0, scope: !12327, inlinedAt: !14044)
!14044 = distinct !DILocation(line: 1730, column: 3, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !14039, file: !2209, line: 1729, column: 54)
!14046 = !DILocation(line: 0, scope: !12335, inlinedAt: !14047)
!14047 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !14044)
!14048 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !14047)
!14049 = !DILocation(line: 1732, column: 3, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14045, file: !2209, line: 1732, column: 3)
!14051 = !{i64 2155445699, i64 2155445715, i64 2155445741, i64 2155445769, i64 2155445789}
!14052 = !DILocation(line: 1733, column: 3, scope: !14045)
!14053 = !DILocation(line: 1736, column: 20, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14028, file: !2209, line: 1736, column: 6)
!14055 = !DILocation(line: 1736, column: 33, scope: !14054)
!14056 = !DILocation(line: 1736, column: 49, scope: !14054)
!14057 = !DILocation(line: 1736, column: 6, scope: !14028)
!14058 = !DILocation(line: 0, scope: !12327, inlinedAt: !14059)
!14059 = distinct !DILocation(line: 1737, column: 3, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14054, file: !2209, line: 1736, column: 56)
!14061 = !DILocation(line: 0, scope: !12335, inlinedAt: !14062)
!14062 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !14059)
!14063 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !14062)
!14064 = !DILocation(line: 1738, column: 3, scope: !14060)
!14065 = !DILocation(line: 1775, column: 2, scope: !14028)
!14066 = !DILocation(line: 1776, column: 16, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14028, file: !2209, line: 1776, column: 6)
!14068 = !DILocation(line: 1776, column: 13, scope: !14067)
!14069 = !DILocation(line: 1776, column: 25, scope: !14067)
!14070 = !DILocation(line: 1031, column: 3, scope: !12946, inlinedAt: !14071)
!14071 = distinct !DILocation(line: 48, column: 10, scope: !12950, inlinedAt: !14072)
!14072 = distinct !DILocation(line: 1776, column: 29, scope: !14067)
!14073 = !DILocation(line: 0, scope: !12946, inlinedAt: !14071)
!14074 = !DILocation(line: 48, column: 9, scope: !12950, inlinedAt: !14072)
!14075 = !DILocation(line: 1776, column: 6, scope: !14028)
!14076 = !DILocation(line: 0, scope: !12913, inlinedAt: !14077)
!14077 = distinct !DILocation(line: 1777, column: 3, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14067, file: !2209, line: 1776, column: 47)
!14079 = !DILocation(line: 196, column: 9, scope: !12913, inlinedAt: !14077)
!14080 = !DILocation(line: 1779, column: 2, scope: !14078)
!14081 = !DILocation(line: 0, scope: !12327, inlinedAt: !14082)
!14082 = distinct !DILocation(line: 1780, column: 2, scope: !14028)
!14083 = !DILocation(line: 0, scope: !12335, inlinedAt: !14084)
!14084 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !14082)
!14085 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !14084)
!14086 = !DILocation(line: 1781, column: 1, scope: !14028)
!14087 = distinct !DISubprogram(name: "end_thread", scope: !2209, file: !2209, line: 1690, type: !12258, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14088)
!14088 = !{!14089}
!14089 = !DILocalVariable(name: "thread", arg: 1, scope: !14087, file: !2209, line: 1690, type: !2110)
!14090 = !DILocation(line: 0, scope: !14087)
!14091 = !DILocation(line: 1695, column: 20, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14087, file: !2209, line: 1695, column: 6)
!14093 = !DILocation(line: 1695, column: 33, scope: !14092)
!14094 = !DILocation(line: 1695, column: 49, scope: !14092)
!14095 = !DILocation(line: 1695, column: 6, scope: !14087)
!14096 = !DILocation(line: 1697, column: 29, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14092, file: !2209, line: 1695, column: 56)
!14098 = !DILocation(line: 1698, column: 7, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14097, file: !2209, line: 1698, column: 7)
!14100 = !DILocation(line: 1698, column: 7, scope: !14097)
!14101 = !DILocation(line: 0, scope: !12471, inlinedAt: !14102)
!14102 = distinct !DILocation(line: 1699, column: 4, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14099, file: !2209, line: 1698, column: 35)
!14104 = !DILocation(line: 266, column: 28, scope: !12471, inlinedAt: !14102)
!14105 = !DILocation(line: 0, scope: !12479, inlinedAt: !14106)
!14106 = distinct !DILocation(line: 268, column: 3, scope: !12483, inlinedAt: !14102)
!14107 = !DILocation(line: 234, column: 2, scope: !12479, inlinedAt: !14106)
!14108 = !DILocation(line: 1700, column: 3, scope: !14103)
!14109 = !DILocation(line: 1701, column: 20, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14097, file: !2209, line: 1701, column: 7)
!14111 = !DILocation(line: 1701, column: 30, scope: !14110)
!14112 = !DILocation(line: 1701, column: 7, scope: !14097)
!14113 = !DILocation(line: 1702, column: 4, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14110, file: !2209, line: 1701, column: 39)
!14115 = !DILocation(line: 1703, column: 3, scope: !14114)
!14116 = !DILocation(line: 1704, column: 9, scope: !14097)
!14117 = !DILocation(line: 1705, column: 23, scope: !14097)
!14118 = !DILocation(line: 1705, column: 3, scope: !14097)
!14119 = !DILocation(line: 1706, column: 3, scope: !14097)
!14120 = !DILocation(line: 1722, column: 2, scope: !14097)
!14121 = !DILocation(line: 1723, column: 1, scope: !14087)
!14122 = distinct !DISubprogram(name: "unpend_all", scope: !2209, file: !2209, line: 1674, type: !14123, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14125)
!14123 = !DISubroutineType(types: !14124)
!14124 = !{null, !2141}
!14125 = !{!14126, !14127}
!14126 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14122, file: !2209, line: 1674, type: !2141)
!14127 = !DILocalVariable(name: "thread", scope: !14122, file: !2209, line: 1676, type: !2110)
!14128 = !DILocation(line: 0, scope: !14122)
!14129 = !DILocation(line: 1678, column: 19, scope: !14122)
!14130 = !DILocation(line: 1678, column: 41, scope: !14122)
!14131 = !DILocation(line: 1678, column: 2, scope: !14122)
!14132 = !DILocation(line: 1679, column: 3, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14122, file: !2209, line: 1678, column: 50)
!14134 = !DILocation(line: 1680, column: 9, scope: !14133)
!14135 = !DILocalVariable(name: "thread", arg: 1, scope: !14136, file: !11356, line: 65, type: !2110)
!14136 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11356, file: !11356, line: 65, type: !14137, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14139)
!14137 = !DISubroutineType(types: !14138)
!14138 = !{null, !2110, !32}
!14139 = !{!14135, !14140}
!14140 = !DILocalVariable(name: "value", arg: 2, scope: !14136, file: !11356, line: 65, type: !32)
!14141 = !DILocation(line: 0, scope: !14136, inlinedAt: !14142)
!14142 = distinct !DILocation(line: 1681, column: 3, scope: !14133)
!14143 = !DILocation(line: 67, column: 15, scope: !14136, inlinedAt: !14142)
!14144 = !DILocation(line: 67, column: 33, scope: !14136, inlinedAt: !14142)
!14145 = !DILocation(line: 1682, column: 3, scope: !14133)
!14146 = distinct !{!14146, !14131, !14147}
!14147 = !DILocation(line: 1683, column: 2, scope: !14122)
!14148 = !DILocation(line: 1684, column: 1, scope: !14122)
!14149 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2209, file: !2209, line: 1794, type: !14150, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14152)
!14150 = !DISubroutineType(types: !14151)
!14151 = !{!103, !2110, !13093}
!14152 = !{!14153, !14154, !14155, !14156}
!14153 = !DILocalVariable(name: "thread", arg: 1, scope: !14149, file: !2209, line: 1794, type: !2110)
!14154 = !DILocalVariable(name: "timeout", arg: 2, scope: !14149, file: !2209, line: 1794, type: !13093)
!14155 = !DILocalVariable(name: "key", scope: !14149, file: !2209, line: 1796, type: !12292)
!14156 = !DILocalVariable(name: "ret", scope: !14149, file: !2209, line: 1797, type: !103)
!14157 = !DILocation(line: 0, scope: !14149)
!14158 = !DILocation(line: 0, scope: !12300, inlinedAt: !14159)
!14159 = distinct !DILocation(line: 1796, column: 25, scope: !14149)
!14160 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !14161)
!14161 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !14159)
!14162 = !DILocation(line: 0, scope: !12309, inlinedAt: !14161)
!14163 = !DILocation(line: 1801, column: 20, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14149, file: !2209, line: 1801, column: 6)
!14165 = !DILocation(line: 1801, column: 33, scope: !14164)
!14166 = !DILocation(line: 1801, column: 49, scope: !14164)
!14167 = !DILocation(line: 1801, column: 6, scope: !14149)
!14168 = !DILocation(line: 1803, column: 13, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14164, file: !2209, line: 1803, column: 13)
!14170 = !DILocation(line: 1803, column: 13, scope: !14164)
!14171 = !DILocation(line: 1805, column: 24, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14169, file: !2209, line: 1805, column: 13)
!14173 = !DILocation(line: 1805, column: 21, scope: !14172)
!14174 = !DILocation(line: 1805, column: 34, scope: !14172)
!14175 = !DILocation(line: 1806, column: 20, scope: !14172)
!14176 = !DILocation(line: 1806, column: 44, scope: !14172)
!14177 = !DILocation(line: 1806, column: 30, scope: !14172)
!14178 = !DILocation(line: 1805, column: 13, scope: !14169)
!14179 = !DILocation(line: 1810, column: 42, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14172, file: !2209, line: 1808, column: 9)
!14181 = !DILocation(line: 1810, column: 3, scope: !14180)
!14182 = !DILocation(line: 1811, column: 22, scope: !14180)
!14183 = !DILocation(line: 1811, column: 3, scope: !14180)
!14184 = !DILocation(line: 0, scope: !12913, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 1814, column: 9, scope: !14180)
!14186 = !DILocation(line: 196, column: 9, scope: !12913, inlinedAt: !14185)
!14187 = !DILocation(line: 1817, column: 3, scope: !14180)
!14188 = !DILocation(line: 0, scope: !14164)
!14189 = !DILocation(line: 0, scope: !12327, inlinedAt: !14190)
!14190 = distinct !DILocation(line: 1822, column: 2, scope: !14149)
!14191 = !DILocation(line: 0, scope: !12335, inlinedAt: !14192)
!14192 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !14190)
!14193 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !14192)
!14194 = !DILocation(line: 1823, column: 2, scope: !14149)
!14195 = !DILocation(line: 1824, column: 1, scope: !14149)
!14196 = distinct !DISubprogram(name: "z_sched_wake", scope: !2209, file: !2209, line: 1882, type: !14197, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14199)
!14197 = !DISubroutineType(types: !14198)
!14198 = !{!583, !2141, !103, !102}
!14199 = !{!14200, !14201, !14202, !14203, !14204, !14205, !14207}
!14200 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14196, file: !2209, line: 1882, type: !2141)
!14201 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14196, file: !2209, line: 1882, type: !103)
!14202 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14196, file: !2209, line: 1882, type: !102)
!14203 = !DILocalVariable(name: "thread", scope: !14196, file: !2209, line: 1884, type: !2110)
!14204 = !DILocalVariable(name: "ret", scope: !14196, file: !2209, line: 1885, type: !583)
!14205 = !DILocalVariable(name: "__i", scope: !14206, file: !2209, line: 1887, type: !12292)
!14206 = distinct !DILexicalBlock(scope: !14196, file: !2209, line: 1887, column: 2)
!14207 = !DILocalVariable(name: "__key", scope: !14206, file: !2209, line: 1887, type: !12292)
!14208 = !DILocation(line: 0, scope: !14196)
!14209 = !DILocation(line: 0, scope: !14206)
!14210 = !DILocation(line: 0, scope: !12300, inlinedAt: !14211)
!14211 = distinct !DILocation(line: 1887, column: 2, scope: !14206)
!14212 = !DILocation(line: 55, column: 2, scope: !12309, inlinedAt: !14213)
!14213 = distinct !DILocation(line: 145, column: 10, scope: !12300, inlinedAt: !14211)
!14214 = !DILocation(line: 0, scope: !12309, inlinedAt: !14213)
!14215 = !DILocation(line: 1888, column: 12, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14217, file: !2209, line: 1887, column: 26)
!14217 = distinct !DILexicalBlock(scope: !14206, file: !2209, line: 1887, column: 2)
!14218 = !DILocation(line: 1890, column: 14, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14216, file: !2209, line: 1890, column: 7)
!14220 = !DILocation(line: 1890, column: 7, scope: !14216)
!14221 = !DILocalVariable(name: "thread", arg: 1, scope: !14222, file: !14223, line: 134, type: !2110)
!14222 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14223, file: !14223, line: 134, type: !14224, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14226)
!14223 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14224 = !DISubroutineType(types: !14225)
!14225 = !{null, !2110, !32, !102}
!14226 = !{!14221, !14227, !14228}
!14227 = !DILocalVariable(name: "value", arg: 2, scope: !14222, file: !14223, line: 135, type: !32)
!14228 = !DILocalVariable(name: "data", arg: 3, scope: !14222, file: !14223, line: 136, type: !102)
!14229 = !DILocation(line: 0, scope: !14222, inlinedAt: !14230)
!14230 = distinct !DILocation(line: 1891, column: 4, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14219, file: !2209, line: 1890, column: 23)
!14232 = !DILocation(line: 0, scope: !14136, inlinedAt: !14233)
!14233 = distinct !DILocation(line: 138, column: 2, scope: !14222, inlinedAt: !14230)
!14234 = !DILocation(line: 67, column: 15, scope: !14136, inlinedAt: !14233)
!14235 = !DILocation(line: 67, column: 33, scope: !14136, inlinedAt: !14233)
!14236 = !DILocation(line: 139, column: 15, scope: !14222, inlinedAt: !14230)
!14237 = !DILocation(line: 139, column: 25, scope: !14222, inlinedAt: !14230)
!14238 = !DILocation(line: 1894, column: 4, scope: !14231)
!14239 = !DILocation(line: 1895, column: 10, scope: !14231)
!14240 = !DILocation(line: 1896, column: 4, scope: !14231)
!14241 = !DILocation(line: 1898, column: 3, scope: !14231)
!14242 = !DILocation(line: 0, scope: !12327, inlinedAt: !14243)
!14243 = distinct !DILocation(line: 1887, column: 2, scope: !14217)
!14244 = !DILocation(line: 0, scope: !12335, inlinedAt: !14245)
!14245 = distinct !DILocation(line: 215, column: 2, scope: !12327, inlinedAt: !14243)
!14246 = !DILocation(line: 95, column: 2, scope: !12335, inlinedAt: !14245)
!14247 = !DILocation(line: 1901, column: 2, scope: !14196)
!14248 = distinct !DISubprogram(name: "z_sched_wait", scope: !2209, file: !2209, line: 1904, type: !14249, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14252)
!14249 = !DISubroutineType(types: !14250)
!14250 = !{!103, !12303, !12292, !2141, !13093, !14251}
!14251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14252 = !{!14253, !14254, !14255, !14256, !14257, !14258}
!14253 = !DILocalVariable(name: "lock", arg: 1, scope: !14248, file: !2209, line: 1904, type: !12303)
!14254 = !DILocalVariable(name: "key", arg: 2, scope: !14248, file: !2209, line: 1904, type: !12292)
!14255 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14248, file: !2209, line: 1905, type: !2141)
!14256 = !DILocalVariable(name: "timeout", arg: 4, scope: !14248, file: !2209, line: 1905, type: !13093)
!14257 = !DILocalVariable(name: "data", arg: 5, scope: !14248, file: !2209, line: 1905, type: !14251)
!14258 = !DILocalVariable(name: "ret", scope: !14248, file: !2209, line: 1907, type: !103)
!14259 = !DILocation(line: 0, scope: !14248)
!14260 = !DILocation(line: 1907, column: 12, scope: !14248)
!14261 = !DILocation(line: 1909, column: 11, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14248, file: !2209, line: 1909, column: 6)
!14263 = !DILocation(line: 1909, column: 6, scope: !14248)
!14264 = !DILocation(line: 1910, column: 11, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14262, file: !2209, line: 1909, column: 20)
!14266 = !DILocation(line: 1910, column: 26, scope: !14265)
!14267 = !DILocation(line: 1910, column: 9, scope: !14265)
!14268 = !DILocation(line: 1911, column: 2, scope: !14265)
!14269 = !DILocation(line: 1912, column: 2, scope: !14248)
!14270 = distinct !DISubprogram(name: "z_data_copy", scope: !14271, file: !14271, line: 22, type: !3019, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3002, retainedNodes: !842)
!14271 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14272 = !DILocation(line: 24, column: 2, scope: !14270)
!14273 = !DILocation(line: 27, column: 2, scope: !14270)
!14274 = !DILocation(line: 71, column: 1, scope: !14270)
!14275 = distinct !DISubprogram(name: "z_add_timeout", scope: !2246, file: !2246, line: 88, type: !14276, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14282)
!14276 = !DISubroutineType(types: !14277)
!14277 = !{null, !2219, !2238, !14278}
!14278 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1547, line: 67, baseType: !14279)
!14279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1547, line: 65, size: 64, elements: !14280)
!14280 = !{!14281}
!14281 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14279, file: !1547, line: 66, baseType: !1546, size: 64)
!14282 = !{!14283, !14284, !14285, !14286, !14292, !14293, !14296, !14299}
!14283 = !DILocalVariable(name: "to", arg: 1, scope: !14275, file: !2246, line: 88, type: !2219)
!14284 = !DILocalVariable(name: "fn", arg: 2, scope: !14275, file: !2246, line: 88, type: !2238)
!14285 = !DILocalVariable(name: "timeout", arg: 3, scope: !14275, file: !2246, line: 89, type: !14278)
!14286 = !DILocalVariable(name: "__i", scope: !14287, file: !2246, line: 102, type: !14288)
!14287 = distinct !DILexicalBlock(scope: !14275, file: !2246, line: 102, column: 2)
!14288 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !841, line: 106, baseType: !14289)
!14289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !841, line: 32, size: 32, elements: !14290)
!14290 = !{!14291}
!14291 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14289, file: !841, line: 33, baseType: !103, size: 32)
!14292 = !DILocalVariable(name: "__key", scope: !14287, file: !2246, line: 102, type: !14288)
!14293 = !DILocalVariable(name: "t", scope: !14294, file: !2246, line: 103, type: !2219)
!14294 = distinct !DILexicalBlock(scope: !14295, file: !2246, line: 102, column: 24)
!14295 = distinct !DILexicalBlock(scope: !14287, file: !2246, line: 102, column: 2)
!14296 = !DILocalVariable(name: "ticks", scope: !14297, file: !2246, line: 107, type: !1546)
!14297 = distinct !DILexicalBlock(scope: !14298, file: !2246, line: 106, column: 39)
!14298 = distinct !DILexicalBlock(scope: !14294, file: !2246, line: 105, column: 7)
!14299 = !DILocalVariable(name: "next_time", scope: !14300, file: !2246, line: 137, type: !700)
!14300 = distinct !DILexicalBlock(scope: !14301, file: !2246, line: 127, column: 22)
!14301 = distinct !DILexicalBlock(scope: !14294, file: !2246, line: 127, column: 7)
!14302 = !DILocation(line: 0, scope: !14275)
!14303 = !DILocation(line: 91, column: 6, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14275, file: !2246, line: 91, column: 6)
!14305 = !DILocation(line: 91, column: 6, scope: !14275)
!14306 = !DILocation(line: 100, column: 6, scope: !14275)
!14307 = !DILocation(line: 100, column: 9, scope: !14275)
!14308 = !DILocation(line: 0, scope: !14287)
!14309 = !DILocalVariable(name: "l", arg: 1, scope: !14310, file: !841, line: 136, type: !14313)
!14310 = distinct !DISubprogram(name: "k_spin_lock", scope: !841, file: !841, line: 136, type: !14311, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14314)
!14311 = !DISubroutineType(types: !14312)
!14312 = !{!14288, !14313}
!14313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!14314 = !{!14309, !14315}
!14315 = !DILocalVariable(name: "k", scope: !14310, file: !841, line: 139, type: !14288)
!14316 = !DILocation(line: 0, scope: !14310, inlinedAt: !14317)
!14317 = distinct !DILocation(line: 102, column: 2, scope: !14287)
!14318 = !DILocation(line: 55, column: 2, scope: !14319, inlinedAt: !14323)
!14319 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5666, file: !5666, line: 42, type: !5667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14320)
!14320 = !{!14321, !14322}
!14321 = !DILocalVariable(name: "key", scope: !14319, file: !5666, line: 44, type: !32)
!14322 = !DILocalVariable(name: "tmp", scope: !14319, file: !5666, line: 53, type: !32)
!14323 = distinct !DILocation(line: 145, column: 10, scope: !14310, inlinedAt: !14317)
!14324 = !{i64 2846710}
!14325 = !DILocation(line: 0, scope: !14319, inlinedAt: !14323)
!14326 = !DILocation(line: 106, column: 33, scope: !14298)
!14327 = !DILocation(line: 105, column: 7, scope: !14294)
!14328 = !DILocation(line: 107, column: 50, scope: !14297)
!14329 = !DILocation(line: 107, column: 48, scope: !14297)
!14330 = !DILocation(line: 0, scope: !14297)
!14331 = !DILocation(line: 109, column: 17, scope: !14297)
!14332 = !DILocation(line: 110, column: 3, scope: !14297)
!14333 = !DILocation(line: 111, column: 31, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14298, file: !2246, line: 110, column: 10)
!14335 = !DILocation(line: 111, column: 37, scope: !14334)
!14336 = !DILocation(line: 111, column: 35, scope: !14334)
!14337 = !DILocation(line: 0, scope: !14298)
!14338 = !DILocation(line: 109, column: 8, scope: !14297)
!14339 = !DILocation(line: 109, column: 15, scope: !14297)
!14340 = !DILocation(line: 114, column: 12, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14294, file: !2246, line: 114, column: 3)
!14342 = !DILocation(line: 0, scope: !14294)
!14343 = !DILocation(line: 114, column: 3, scope: !14341)
!14344 = !DILocation(line: 115, column: 24, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14346, file: !2246, line: 115, column: 8)
!14346 = distinct !DILexicalBlock(scope: !14347, file: !2246, line: 114, column: 45)
!14347 = distinct !DILexicalBlock(scope: !14341, file: !2246, line: 114, column: 3)
!14348 = !DILocation(line: 115, column: 11, scope: !14345)
!14349 = !DILocation(line: 115, column: 18, scope: !14345)
!14350 = !DILocation(line: 115, column: 8, scope: !14346)
!14351 = !DILocation(line: 116, column: 15, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14345, file: !2246, line: 115, column: 32)
!14353 = !DILocation(line: 117, column: 26, scope: !14352)
!14354 = !DILocation(line: 117, column: 37, scope: !14352)
!14355 = !DILocation(line: 117, column: 5, scope: !14352)
!14356 = !DILocation(line: 123, column: 7, scope: !14294)
!14357 = !DILocation(line: 120, column: 15, scope: !14346)
!14358 = !DILocation(line: 114, column: 36, scope: !14347)
!14359 = distinct !{!14359, !14343, !14360}
!14360 = !DILocation(line: 121, column: 3, scope: !14341)
!14361 = !DILocation(line: 124, column: 41, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14363, file: !2246, line: 123, column: 18)
!14363 = distinct !DILexicalBlock(scope: !14294, file: !2246, line: 123, column: 7)
!14364 = !DILocation(line: 124, column: 4, scope: !14362)
!14365 = !DILocation(line: 125, column: 3, scope: !14362)
!14366 = !DILocation(line: 127, column: 13, scope: !14301)
!14367 = !DILocation(line: 127, column: 10, scope: !14301)
!14368 = !DILocation(line: 127, column: 7, scope: !14294)
!14369 = !DILocation(line: 137, column: 24, scope: !14300)
!14370 = !DILocation(line: 0, scope: !14300)
!14371 = !DILocation(line: 139, column: 18, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14300, file: !2246, line: 139, column: 8)
!14373 = !DILocation(line: 139, column: 23, scope: !14372)
!14374 = !DILocation(line: 141, column: 5, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14372, file: !2246, line: 140, column: 48)
!14376 = !DILocation(line: 142, column: 4, scope: !14375)
!14377 = !DILocalVariable(name: "key", arg: 2, scope: !14378, file: !841, line: 190, type: !14288)
!14378 = distinct !DISubprogram(name: "k_spin_unlock", scope: !841, file: !841, line: 189, type: !14379, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14381)
!14379 = !DISubroutineType(types: !14380)
!14380 = !{null, !14313, !14288}
!14381 = !{!14382, !14377}
!14382 = !DILocalVariable(name: "l", arg: 1, scope: !14378, file: !841, line: 189, type: !14313)
!14383 = !DILocation(line: 0, scope: !14378, inlinedAt: !14384)
!14384 = distinct !DILocation(line: 102, column: 2, scope: !14295)
!14385 = !DILocalVariable(name: "key", arg: 1, scope: !14386, file: !5666, line: 84, type: !32)
!14386 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14387)
!14387 = !{!14385}
!14388 = !DILocation(line: 0, scope: !14386, inlinedAt: !14389)
!14389 = distinct !DILocation(line: 215, column: 2, scope: !14378, inlinedAt: !14384)
!14390 = !DILocation(line: 95, column: 2, scope: !14386, inlinedAt: !14389)
!14391 = !{i64 2847527}
!14392 = !DILocation(line: 148, column: 1, scope: !14275)
!14393 = distinct !DISubprogram(name: "elapsed", scope: !2246, file: !2246, line: 62, type: !14394, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !842)
!14394 = !DISubroutineType(types: !14395)
!14395 = !{!700}
!14396 = !DILocation(line: 64, column: 9, scope: !14393)
!14397 = !DILocation(line: 64, column: 28, scope: !14393)
!14398 = !DILocation(line: 64, column: 35, scope: !14393)
!14399 = !DILocation(line: 64, column: 2, scope: !14393)
!14400 = distinct !DISubprogram(name: "first", scope: !2246, file: !2246, line: 39, type: !14401, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14403)
!14401 = !DISubroutineType(types: !14402)
!14402 = !{!2219}
!14403 = !{!14404}
!14404 = !DILocalVariable(name: "t", scope: !14400, file: !2246, line: 41, type: !14405)
!14405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!14406 = !DILocation(line: 41, column: 19, scope: !14400)
!14407 = !DILocation(line: 0, scope: !14400)
!14408 = !DILocation(line: 43, column: 9, scope: !14400)
!14409 = !DILocation(line: 43, column: 2, scope: !14400)
!14410 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !679, file: !679, line: 443, type: !14411, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14413)
!14411 = !DISubroutineType(types: !14412)
!14412 = !{null, !14405, !14405}
!14413 = !{!14414, !14415, !14416}
!14414 = !DILocalVariable(name: "successor", arg: 1, scope: !14410, file: !679, line: 443, type: !14405)
!14415 = !DILocalVariable(name: "node", arg: 2, scope: !14410, file: !679, line: 443, type: !14405)
!14416 = !DILocalVariable(name: "prev", scope: !14410, file: !679, line: 445, type: !14417)
!14417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14405)
!14418 = !DILocation(line: 0, scope: !14410)
!14419 = !DILocation(line: 445, column: 39, scope: !14410)
!14420 = !DILocation(line: 447, column: 8, scope: !14410)
!14421 = !DILocation(line: 447, column: 13, scope: !14410)
!14422 = !DILocation(line: 448, column: 8, scope: !14410)
!14423 = !DILocation(line: 448, column: 13, scope: !14410)
!14424 = !DILocation(line: 449, column: 8, scope: !14410)
!14425 = !DILocation(line: 449, column: 13, scope: !14410)
!14426 = !DILocation(line: 450, column: 18, scope: !14410)
!14427 = !DILocation(line: 451, column: 1, scope: !14410)
!14428 = distinct !DISubprogram(name: "next", scope: !2246, file: !2246, line: 46, type: !14429, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14431)
!14429 = !DISubroutineType(types: !14430)
!14430 = !{!2219, !2219}
!14431 = !{!14432, !14433}
!14432 = !DILocalVariable(name: "t", arg: 1, scope: !14428, file: !2246, line: 46, type: !2219)
!14433 = !DILocalVariable(name: "n", scope: !14428, file: !2246, line: 48, type: !14405)
!14434 = !DILocation(line: 0, scope: !14428)
!14435 = !DILocation(line: 48, column: 58, scope: !14428)
!14436 = !DILocation(line: 48, column: 19, scope: !14428)
!14437 = !DILocation(line: 50, column: 9, scope: !14428)
!14438 = !DILocation(line: 50, column: 2, scope: !14428)
!14439 = distinct !DISubprogram(name: "sys_dlist_append", scope: !679, file: !679, line: 404, type: !14440, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14443)
!14440 = !DISubroutineType(types: !14441)
!14441 = !{null, !14442, !14405}
!14442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!14443 = !{!14444, !14445, !14446}
!14444 = !DILocalVariable(name: "list", arg: 1, scope: !14439, file: !679, line: 404, type: !14442)
!14445 = !DILocalVariable(name: "node", arg: 2, scope: !14439, file: !679, line: 404, type: !14405)
!14446 = !DILocalVariable(name: "tail", scope: !14439, file: !679, line: 406, type: !14417)
!14447 = !DILocation(line: 0, scope: !14439)
!14448 = !DILocation(line: 406, column: 34, scope: !14439)
!14449 = !DILocation(line: 408, column: 8, scope: !14439)
!14450 = !DILocation(line: 408, column: 13, scope: !14439)
!14451 = !DILocation(line: 409, column: 8, scope: !14439)
!14452 = !DILocation(line: 409, column: 13, scope: !14439)
!14453 = !DILocation(line: 411, column: 8, scope: !14439)
!14454 = !DILocation(line: 411, column: 13, scope: !14439)
!14455 = !DILocation(line: 412, column: 13, scope: !14439)
!14456 = !DILocation(line: 413, column: 1, scope: !14439)
!14457 = distinct !DISubprogram(name: "next_timeout", scope: !2246, file: !2246, line: 67, type: !14394, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14458)
!14458 = !{!14459, !14460, !14461}
!14459 = !DILocalVariable(name: "to", scope: !14457, file: !2246, line: 69, type: !2219)
!14460 = !DILocalVariable(name: "ticks_elapsed", scope: !14457, file: !2246, line: 70, type: !700)
!14461 = !DILocalVariable(name: "ret", scope: !14457, file: !2246, line: 71, type: !700)
!14462 = !DILocation(line: 69, column: 24, scope: !14457)
!14463 = !DILocation(line: 0, scope: !14457)
!14464 = !DILocation(line: 70, column: 26, scope: !14457)
!14465 = !DILocation(line: 73, column: 10, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14457, file: !2246, line: 73, column: 6)
!14467 = !DILocation(line: 73, column: 19, scope: !14466)
!14468 = !DILocation(line: 74, column: 21, scope: !14466)
!14469 = !DILocation(line: 74, column: 30, scope: !14466)
!14470 = !DILocation(line: 74, column: 28, scope: !14466)
!14471 = !DILocation(line: 74, column: 45, scope: !14466)
!14472 = !DILocation(line: 73, column: 6, scope: !14457)
!14473 = !DILocation(line: 77, column: 9, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14466, file: !2246, line: 76, column: 9)
!14475 = !DILocation(line: 0, scope: !14466)
!14476 = !DILocation(line: 81, column: 20, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14457, file: !2246, line: 81, column: 6)
!14478 = !DILocation(line: 81, column: 6, scope: !14477)
!14479 = !DILocation(line: 81, column: 32, scope: !14477)
!14480 = !DILocation(line: 85, column: 2, scope: !14457)
!14481 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !679, file: !679, line: 341, type: !14482, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14484)
!14482 = !DISubroutineType(types: !14483)
!14483 = !{!14405, !14442, !14405}
!14484 = !{!14485, !14486}
!14485 = !DILocalVariable(name: "list", arg: 1, scope: !14481, file: !679, line: 341, type: !14442)
!14486 = !DILocalVariable(name: "node", arg: 2, scope: !14481, file: !679, line: 342, type: !14405)
!14487 = !DILocation(line: 0, scope: !14481)
!14488 = !DILocation(line: 344, column: 15, scope: !14481)
!14489 = !DILocation(line: 344, column: 9, scope: !14481)
!14490 = !DILocation(line: 344, column: 26, scope: !14481)
!14491 = !DILocation(line: 344, column: 2, scope: !14481)
!14492 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !679, file: !679, line: 325, type: !14482, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14493)
!14493 = !{!14494, !14495}
!14494 = !DILocalVariable(name: "list", arg: 1, scope: !14492, file: !679, line: 325, type: !14442)
!14495 = !DILocalVariable(name: "node", arg: 2, scope: !14492, file: !679, line: 326, type: !14405)
!14496 = !DILocation(line: 0, scope: !14492)
!14497 = !DILocation(line: 328, column: 24, scope: !14492)
!14498 = !DILocation(line: 328, column: 15, scope: !14492)
!14499 = !DILocation(line: 328, column: 9, scope: !14492)
!14500 = !DILocation(line: 328, column: 45, scope: !14492)
!14501 = !DILocation(line: 328, column: 2, scope: !14492)
!14502 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !679, file: !679, line: 294, type: !14503, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14505)
!14503 = !DISubroutineType(types: !14504)
!14504 = !{!14405, !14442}
!14505 = !{!14506}
!14506 = !DILocalVariable(name: "list", arg: 1, scope: !14502, file: !679, line: 294, type: !14442)
!14507 = !DILocation(line: 0, scope: !14502)
!14508 = !DILocation(line: 296, column: 9, scope: !14502)
!14509 = !DILocation(line: 296, column: 2, scope: !14502)
!14510 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !679, file: !679, line: 266, type: !14511, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14513)
!14511 = !DISubroutineType(types: !14512)
!14512 = !{!583, !14442}
!14513 = !{!14514}
!14514 = !DILocalVariable(name: "list", arg: 1, scope: !14510, file: !679, line: 266, type: !14442)
!14515 = !DILocation(line: 0, scope: !14510)
!14516 = !DILocation(line: 268, column: 15, scope: !14510)
!14517 = !DILocation(line: 268, column: 20, scope: !14510)
!14518 = !DILocation(line: 268, column: 2, scope: !14510)
!14519 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2246, file: !2246, line: 150, type: !14520, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14522)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{!103, !2219}
!14522 = !{!14523, !14524, !14525, !14527}
!14523 = !DILocalVariable(name: "to", arg: 1, scope: !14519, file: !2246, line: 150, type: !2219)
!14524 = !DILocalVariable(name: "ret", scope: !14519, file: !2246, line: 152, type: !103)
!14525 = !DILocalVariable(name: "__i", scope: !14526, file: !2246, line: 154, type: !14288)
!14526 = distinct !DILexicalBlock(scope: !14519, file: !2246, line: 154, column: 2)
!14527 = !DILocalVariable(name: "__key", scope: !14526, file: !2246, line: 154, type: !14288)
!14528 = !DILocation(line: 0, scope: !14519)
!14529 = !DILocation(line: 0, scope: !14526)
!14530 = !DILocation(line: 0, scope: !14310, inlinedAt: !14531)
!14531 = distinct !DILocation(line: 154, column: 2, scope: !14526)
!14532 = !DILocation(line: 55, column: 2, scope: !14319, inlinedAt: !14533)
!14533 = distinct !DILocation(line: 145, column: 10, scope: !14310, inlinedAt: !14531)
!14534 = !DILocation(line: 0, scope: !14319, inlinedAt: !14533)
!14535 = !DILocation(line: 155, column: 7, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14537, file: !2246, line: 155, column: 7)
!14537 = distinct !DILexicalBlock(scope: !14538, file: !2246, line: 154, column: 24)
!14538 = distinct !DILexicalBlock(scope: !14526, file: !2246, line: 154, column: 2)
!14539 = !DILocation(line: 155, column: 7, scope: !14537)
!14540 = !DILocation(line: 156, column: 4, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14536, file: !2246, line: 155, column: 39)
!14542 = !DILocation(line: 158, column: 3, scope: !14541)
!14543 = !DILocation(line: 0, scope: !14378, inlinedAt: !14544)
!14544 = distinct !DILocation(line: 154, column: 2, scope: !14538)
!14545 = !DILocation(line: 0, scope: !14386, inlinedAt: !14546)
!14546 = distinct !DILocation(line: 215, column: 2, scope: !14378, inlinedAt: !14544)
!14547 = !DILocation(line: 95, column: 2, scope: !14386, inlinedAt: !14546)
!14548 = !DILocation(line: 161, column: 2, scope: !14519)
!14549 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !679, file: !679, line: 225, type: !14550, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14554)
!14550 = !DISubroutineType(types: !14551)
!14551 = !{!583, !14552}
!14552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14553, size: 32)
!14553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2223)
!14554 = !{!14555}
!14555 = !DILocalVariable(name: "node", arg: 1, scope: !14549, file: !679, line: 225, type: !14552)
!14556 = !DILocation(line: 0, scope: !14549)
!14557 = !DILocation(line: 227, column: 15, scope: !14549)
!14558 = !DILocation(line: 227, column: 20, scope: !14549)
!14559 = !DILocation(line: 227, column: 2, scope: !14549)
!14560 = distinct !DISubprogram(name: "remove_timeout", scope: !2246, file: !2246, line: 53, type: !2240, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14561)
!14561 = !{!14562}
!14562 = !DILocalVariable(name: "t", arg: 1, scope: !14560, file: !2246, line: 53, type: !2219)
!14563 = !DILocation(line: 0, scope: !14560)
!14564 = !DILocation(line: 55, column: 6, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14560, file: !2246, line: 55, column: 6)
!14566 = !DILocation(line: 55, column: 14, scope: !14565)
!14567 = !DILocation(line: 55, column: 6, scope: !14560)
!14568 = !DILocation(line: 56, column: 25, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14565, file: !2246, line: 55, column: 23)
!14570 = !DILocation(line: 56, column: 12, scope: !14569)
!14571 = !DILocation(line: 56, column: 19, scope: !14569)
!14572 = !DILocation(line: 57, column: 2, scope: !14569)
!14573 = !DILocation(line: 59, column: 23, scope: !14560)
!14574 = !DILocation(line: 59, column: 2, scope: !14560)
!14575 = !DILocation(line: 60, column: 1, scope: !14560)
!14576 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !679, file: !679, line: 496, type: !14577, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14579)
!14577 = !DISubroutineType(types: !14578)
!14578 = !{null, !14405}
!14579 = !{!14580, !14581, !14582}
!14580 = !DILocalVariable(name: "node", arg: 1, scope: !14576, file: !679, line: 496, type: !14405)
!14581 = !DILocalVariable(name: "prev", scope: !14576, file: !679, line: 498, type: !14417)
!14582 = !DILocalVariable(name: "next", scope: !14576, file: !679, line: 499, type: !14417)
!14583 = !DILocation(line: 0, scope: !14576)
!14584 = !DILocation(line: 498, column: 34, scope: !14576)
!14585 = !DILocation(line: 499, column: 34, scope: !14576)
!14586 = !DILocation(line: 501, column: 8, scope: !14576)
!14587 = !DILocation(line: 501, column: 13, scope: !14576)
!14588 = !DILocation(line: 502, column: 8, scope: !14576)
!14589 = !DILocation(line: 502, column: 13, scope: !14576)
!14590 = !DILocation(line: 503, column: 2, scope: !14576)
!14591 = !DILocation(line: 504, column: 1, scope: !14576)
!14592 = distinct !DISubprogram(name: "sys_dnode_init", scope: !679, file: !679, line: 211, type: !14577, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14593)
!14593 = !{!14594}
!14594 = !DILocalVariable(name: "node", arg: 1, scope: !14592, file: !679, line: 211, type: !14405)
!14595 = !DILocation(line: 0, scope: !14592)
!14596 = !DILocation(line: 213, column: 8, scope: !14592)
!14597 = !DILocation(line: 213, column: 13, scope: !14592)
!14598 = !DILocation(line: 214, column: 8, scope: !14592)
!14599 = !DILocation(line: 214, column: 13, scope: !14592)
!14600 = !DILocation(line: 215, column: 1, scope: !14592)
!14601 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2246, file: !2246, line: 183, type: !14602, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14606)
!14602 = !DISubroutineType(types: !14603)
!14603 = !{!1546, !14604}
!14604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14605, size: 32)
!14605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2220)
!14606 = !{!14607, !14608, !14609, !14611}
!14607 = !DILocalVariable(name: "timeout", arg: 1, scope: !14601, file: !2246, line: 183, type: !14604)
!14608 = !DILocalVariable(name: "ticks", scope: !14601, file: !2246, line: 185, type: !1546)
!14609 = !DILocalVariable(name: "__i", scope: !14610, file: !2246, line: 187, type: !14288)
!14610 = distinct !DILexicalBlock(scope: !14601, file: !2246, line: 187, column: 2)
!14611 = !DILocalVariable(name: "__key", scope: !14610, file: !2246, line: 187, type: !14288)
!14612 = !DILocation(line: 0, scope: !14601)
!14613 = !DILocation(line: 0, scope: !14610)
!14614 = !DILocation(line: 0, scope: !14310, inlinedAt: !14615)
!14615 = distinct !DILocation(line: 187, column: 2, scope: !14610)
!14616 = !DILocation(line: 55, column: 2, scope: !14319, inlinedAt: !14617)
!14617 = distinct !DILocation(line: 145, column: 10, scope: !14310, inlinedAt: !14615)
!14618 = !DILocation(line: 0, scope: !14319, inlinedAt: !14617)
!14619 = !DILocation(line: 188, column: 11, scope: !14620)
!14620 = distinct !DILexicalBlock(scope: !14621, file: !2246, line: 187, column: 24)
!14621 = distinct !DILexicalBlock(scope: !14610, file: !2246, line: 187, column: 2)
!14622 = !DILocation(line: 0, scope: !14378, inlinedAt: !14623)
!14623 = distinct !DILocation(line: 187, column: 2, scope: !14621)
!14624 = !DILocation(line: 0, scope: !14386, inlinedAt: !14625)
!14625 = distinct !DILocation(line: 215, column: 2, scope: !14378, inlinedAt: !14623)
!14626 = !DILocation(line: 95, column: 2, scope: !14386, inlinedAt: !14625)
!14627 = !DILocation(line: 191, column: 2, scope: !14601)
!14628 = distinct !DISubprogram(name: "timeout_rem", scope: !2246, file: !2246, line: 165, type: !14602, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14629)
!14629 = !{!14630, !14631, !14632}
!14630 = !DILocalVariable(name: "timeout", arg: 1, scope: !14628, file: !2246, line: 165, type: !14604)
!14631 = !DILocalVariable(name: "ticks", scope: !14628, file: !2246, line: 167, type: !1546)
!14632 = !DILocalVariable(name: "t", scope: !14633, file: !2246, line: 173, type: !2219)
!14633 = distinct !DILexicalBlock(scope: !14628, file: !2246, line: 173, column: 2)
!14634 = !DILocation(line: 0, scope: !14628)
!14635 = !DILocation(line: 169, column: 6, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14628, file: !2246, line: 169, column: 6)
!14637 = !DILocation(line: 169, column: 6, scope: !14628)
!14638 = !DILocation(line: 173, column: 28, scope: !14633)
!14639 = !DILocation(line: 0, scope: !14633)
!14640 = !DILocation(line: 173, column: 39, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14633, file: !2246, line: 173, column: 2)
!14642 = !DILocation(line: 173, column: 2, scope: !14633)
!14643 = !DILocation(line: 174, column: 15, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14641, file: !2246, line: 173, column: 61)
!14645 = !DILocation(line: 174, column: 9, scope: !14644)
!14646 = !DILocation(line: 175, column: 15, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14644, file: !2246, line: 175, column: 7)
!14648 = !DILocation(line: 175, column: 7, scope: !14644)
!14649 = !DILocation(line: 173, column: 52, scope: !14641)
!14650 = distinct !{!14650, !14642, !14651}
!14651 = !DILocation(line: 178, column: 2, scope: !14633)
!14652 = !DILocation(line: 180, column: 17, scope: !14628)
!14653 = !DILocation(line: 180, column: 15, scope: !14628)
!14654 = !DILocation(line: 180, column: 2, scope: !14628)
!14655 = !DILocation(line: 181, column: 1, scope: !14628)
!14656 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11708, file: !11708, line: 35, type: !14657, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14659)
!14657 = !DISubroutineType(types: !14658)
!14658 = !{!583, !14604}
!14659 = !{!14660}
!14660 = !DILocalVariable(name: "to", arg: 1, scope: !14656, file: !11708, line: 35, type: !14604)
!14661 = !DILocation(line: 0, scope: !14656)
!14662 = !DILocation(line: 37, column: 35, scope: !14656)
!14663 = !DILocation(line: 37, column: 10, scope: !14656)
!14664 = !DILocation(line: 37, column: 9, scope: !14656)
!14665 = !DILocation(line: 37, column: 2, scope: !14656)
!14666 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2246, file: !2246, line: 194, type: !14602, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14667)
!14667 = !{!14668, !14669, !14670, !14672}
!14668 = !DILocalVariable(name: "timeout", arg: 1, scope: !14666, file: !2246, line: 194, type: !14604)
!14669 = !DILocalVariable(name: "ticks", scope: !14666, file: !2246, line: 196, type: !1546)
!14670 = !DILocalVariable(name: "__i", scope: !14671, file: !2246, line: 198, type: !14288)
!14671 = distinct !DILexicalBlock(scope: !14666, file: !2246, line: 198, column: 2)
!14672 = !DILocalVariable(name: "__key", scope: !14671, file: !2246, line: 198, type: !14288)
!14673 = !DILocation(line: 0, scope: !14666)
!14674 = !DILocation(line: 0, scope: !14671)
!14675 = !DILocation(line: 0, scope: !14310, inlinedAt: !14676)
!14676 = distinct !DILocation(line: 198, column: 2, scope: !14671)
!14677 = !DILocation(line: 55, column: 2, scope: !14319, inlinedAt: !14678)
!14678 = distinct !DILocation(line: 145, column: 10, scope: !14310, inlinedAt: !14676)
!14679 = !DILocation(line: 0, scope: !14319, inlinedAt: !14678)
!14680 = !DILocation(line: 199, column: 11, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14682, file: !2246, line: 198, column: 24)
!14682 = distinct !DILexicalBlock(scope: !14671, file: !2246, line: 198, column: 2)
!14683 = !DILocation(line: 199, column: 23, scope: !14681)
!14684 = !DILocation(line: 0, scope: !14378, inlinedAt: !14685)
!14685 = distinct !DILocation(line: 198, column: 2, scope: !14682)
!14686 = !DILocation(line: 0, scope: !14386, inlinedAt: !14687)
!14687 = distinct !DILocation(line: 215, column: 2, scope: !14378, inlinedAt: !14685)
!14688 = !DILocation(line: 95, column: 2, scope: !14386, inlinedAt: !14687)
!14689 = !DILocation(line: 199, column: 21, scope: !14681)
!14690 = !DILocation(line: 202, column: 2, scope: !14666)
!14691 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2246, file: !2246, line: 205, type: !14394, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14692)
!14692 = !{!14693, !14694, !14696}
!14693 = !DILocalVariable(name: "ret", scope: !14691, file: !2246, line: 207, type: !700)
!14694 = !DILocalVariable(name: "__i", scope: !14695, file: !2246, line: 209, type: !14288)
!14695 = distinct !DILexicalBlock(scope: !14691, file: !2246, line: 209, column: 2)
!14696 = !DILocalVariable(name: "__key", scope: !14695, file: !2246, line: 209, type: !14288)
!14697 = !DILocation(line: 0, scope: !14691)
!14698 = !DILocation(line: 0, scope: !14695)
!14699 = !DILocation(line: 0, scope: !14310, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 209, column: 2, scope: !14695)
!14701 = !DILocation(line: 55, column: 2, scope: !14319, inlinedAt: !14702)
!14702 = distinct !DILocation(line: 145, column: 10, scope: !14310, inlinedAt: !14700)
!14703 = !DILocation(line: 0, scope: !14319, inlinedAt: !14702)
!14704 = !DILocation(line: 210, column: 9, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14706, file: !2246, line: 209, column: 24)
!14706 = distinct !DILexicalBlock(scope: !14695, file: !2246, line: 209, column: 2)
!14707 = !DILocation(line: 0, scope: !14378, inlinedAt: !14708)
!14708 = distinct !DILocation(line: 209, column: 2, scope: !14706)
!14709 = !DILocation(line: 0, scope: !14386, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 215, column: 2, scope: !14378, inlinedAt: !14708)
!14711 = !DILocation(line: 95, column: 2, scope: !14386, inlinedAt: !14710)
!14712 = !DILocation(line: 212, column: 2, scope: !14691)
!14713 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2246, file: !2246, line: 215, type: !9344, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14714)
!14714 = !{!14715, !14716, !14717, !14719, !14720, !14723, !14724}
!14715 = !DILocalVariable(name: "ticks", arg: 1, scope: !14713, file: !2246, line: 215, type: !700)
!14716 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14713, file: !2246, line: 215, type: !583)
!14717 = !DILocalVariable(name: "__i", scope: !14718, file: !2246, line: 217, type: !14288)
!14718 = distinct !DILexicalBlock(scope: !14713, file: !2246, line: 217, column: 2)
!14719 = !DILocalVariable(name: "__key", scope: !14718, file: !2246, line: 217, type: !14288)
!14720 = !DILocalVariable(name: "next_to", scope: !14721, file: !2246, line: 218, type: !103)
!14721 = distinct !DILexicalBlock(scope: !14722, file: !2246, line: 217, column: 24)
!14722 = distinct !DILexicalBlock(scope: !14718, file: !2246, line: 217, column: 2)
!14723 = !DILocalVariable(name: "sooner", scope: !14721, file: !2246, line: 219, type: !583)
!14724 = !DILocalVariable(name: "imminent", scope: !14721, file: !2246, line: 221, type: !583)
!14725 = !DILocation(line: 0, scope: !14713)
!14726 = !DILocation(line: 0, scope: !14718)
!14727 = !DILocation(line: 0, scope: !14310, inlinedAt: !14728)
!14728 = distinct !DILocation(line: 217, column: 2, scope: !14718)
!14729 = !DILocation(line: 55, column: 2, scope: !14319, inlinedAt: !14730)
!14730 = distinct !DILocation(line: 145, column: 10, scope: !14310, inlinedAt: !14728)
!14731 = !DILocation(line: 0, scope: !14319, inlinedAt: !14730)
!14732 = !DILocation(line: 218, column: 17, scope: !14721)
!14733 = !DILocation(line: 0, scope: !14721)
!14734 = !DILocation(line: 221, column: 27, scope: !14721)
!14735 = !DILocation(line: 233, column: 17, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14721, file: !2246, line: 233, column: 7)
!14737 = !DILocation(line: 234, column: 26, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14736, file: !2246, line: 233, column: 56)
!14739 = !DILocation(line: 234, column: 4, scope: !14738)
!14740 = !DILocation(line: 235, column: 3, scope: !14738)
!14741 = !DILocation(line: 0, scope: !14378, inlinedAt: !14742)
!14742 = distinct !DILocation(line: 217, column: 2, scope: !14722)
!14743 = !DILocation(line: 0, scope: !14386, inlinedAt: !14744)
!14744 = distinct !DILocation(line: 215, column: 2, scope: !14378, inlinedAt: !14742)
!14745 = !DILocation(line: 95, column: 2, scope: !14386, inlinedAt: !14744)
!14746 = !DILocation(line: 237, column: 1, scope: !14713)
!14747 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2246, file: !2246, line: 239, type: !14748, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14750)
!14748 = !DISubroutineType(types: !14749)
!14749 = !{null, !700}
!14750 = !{!14751, !14752, !14753, !14755}
!14751 = !DILocalVariable(name: "ticks", arg: 1, scope: !14747, file: !2246, line: 239, type: !700)
!14752 = !DILocalVariable(name: "key", scope: !14747, file: !2246, line: 245, type: !14288)
!14753 = !DILocalVariable(name: "t", scope: !14754, file: !2246, line: 262, type: !2219)
!14754 = distinct !DILexicalBlock(scope: !14747, file: !2246, line: 261, column: 67)
!14755 = !DILocalVariable(name: "dt", scope: !14754, file: !2246, line: 263, type: !103)
!14756 = !DILocation(line: 0, scope: !14747)
!14757 = !DILocation(line: 242, column: 2, scope: !14747)
!14758 = !DILocation(line: 0, scope: !14310, inlinedAt: !14759)
!14759 = distinct !DILocation(line: 245, column: 25, scope: !14747)
!14760 = !DILocation(line: 55, column: 2, scope: !14319, inlinedAt: !14761)
!14761 = distinct !DILocation(line: 145, column: 10, scope: !14310, inlinedAt: !14759)
!14762 = !DILocation(line: 0, scope: !14319, inlinedAt: !14761)
!14763 = !DILocation(line: 261, column: 9, scope: !14747)
!14764 = !DILocation(line: 261, column: 17, scope: !14747)
!14765 = !DILocation(line: 261, column: 25, scope: !14747)
!14766 = !DILocation(line: 261, column: 37, scope: !14747)
!14767 = !DILocation(line: 261, column: 47, scope: !14747)
!14768 = !DILocation(line: 261, column: 44, scope: !14747)
!14769 = !DILocation(line: 261, column: 2, scope: !14747)
!14770 = !DILocation(line: 0, scope: !14754)
!14771 = !DILocation(line: 263, column: 12, scope: !14754)
!14772 = !DILocation(line: 265, column: 16, scope: !14754)
!14773 = !DILocation(line: 265, column: 13, scope: !14754)
!14774 = !DILocation(line: 266, column: 13, scope: !14754)
!14775 = !DILocation(line: 267, column: 3, scope: !14754)
!14776 = !DILocation(line: 0, scope: !14378, inlinedAt: !14777)
!14777 = distinct !DILocation(line: 269, column: 3, scope: !14754)
!14778 = !DILocation(line: 0, scope: !14386, inlinedAt: !14779)
!14779 = distinct !DILocation(line: 215, column: 2, scope: !14378, inlinedAt: !14777)
!14780 = !DILocation(line: 95, column: 2, scope: !14386, inlinedAt: !14779)
!14781 = !DILocation(line: 270, column: 6, scope: !14754)
!14782 = !DILocation(line: 270, column: 3, scope: !14754)
!14783 = !DILocation(line: 0, scope: !14310, inlinedAt: !14784)
!14784 = distinct !DILocation(line: 271, column: 9, scope: !14754)
!14785 = !DILocation(line: 55, column: 2, scope: !14319, inlinedAt: !14786)
!14786 = distinct !DILocation(line: 145, column: 10, scope: !14310, inlinedAt: !14784)
!14787 = !DILocation(line: 0, scope: !14319, inlinedAt: !14786)
!14788 = !DILocation(line: 272, column: 22, scope: !14754)
!14789 = distinct !{!14789, !14769, !14790}
!14790 = !DILocation(line: 273, column: 2, scope: !14747)
!14791 = !DILocation(line: 276, column: 19, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14793, file: !2246, line: 275, column: 23)
!14793 = distinct !DILexicalBlock(scope: !14747, file: !2246, line: 275, column: 6)
!14794 = !DILocation(line: 277, column: 2, scope: !14792)
!14795 = !DILocation(line: 279, column: 15, scope: !14747)
!14796 = !DILocation(line: 279, column: 12, scope: !14747)
!14797 = !DILocation(line: 280, column: 21, scope: !14747)
!14798 = !DILocation(line: 282, column: 24, scope: !14747)
!14799 = !DILocation(line: 282, column: 2, scope: !14747)
!14800 = !DILocation(line: 0, scope: !14378, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 284, column: 2, scope: !14747)
!14802 = !DILocation(line: 0, scope: !14386, inlinedAt: !14803)
!14803 = distinct !DILocation(line: 215, column: 2, scope: !14378, inlinedAt: !14801)
!14804 = !DILocation(line: 95, column: 2, scope: !14386, inlinedAt: !14803)
!14805 = !DILocation(line: 285, column: 1, scope: !14747)
!14806 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2246, file: !2246, line: 287, type: !14807, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14809)
!14807 = !DISubroutineType(types: !14808)
!14808 = !{!1548}
!14809 = !{!14810, !14811, !14813}
!14810 = !DILocalVariable(name: "t", scope: !14806, file: !2246, line: 289, type: !2065)
!14811 = !DILocalVariable(name: "__i", scope: !14812, file: !2246, line: 291, type: !14288)
!14812 = distinct !DILexicalBlock(scope: !14806, file: !2246, line: 291, column: 2)
!14813 = !DILocalVariable(name: "__key", scope: !14812, file: !2246, line: 291, type: !14288)
!14814 = !DILocation(line: 0, scope: !14806)
!14815 = !DILocation(line: 0, scope: !14812)
!14816 = !DILocation(line: 0, scope: !14310, inlinedAt: !14817)
!14817 = distinct !DILocation(line: 291, column: 2, scope: !14812)
!14818 = !DILocation(line: 55, column: 2, scope: !14319, inlinedAt: !14819)
!14819 = distinct !DILocation(line: 145, column: 10, scope: !14310, inlinedAt: !14817)
!14820 = !DILocation(line: 0, scope: !14319, inlinedAt: !14819)
!14821 = !DILocation(line: 292, column: 7, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14823, file: !2246, line: 291, column: 24)
!14823 = distinct !DILexicalBlock(scope: !14812, file: !2246, line: 291, column: 2)
!14824 = !DILocation(line: 292, column: 19, scope: !14822)
!14825 = !DILocation(line: 0, scope: !14378, inlinedAt: !14826)
!14826 = distinct !DILocation(line: 291, column: 2, scope: !14823)
!14827 = !DILocation(line: 0, scope: !14386, inlinedAt: !14828)
!14828 = distinct !DILocation(line: 215, column: 2, scope: !14378, inlinedAt: !14826)
!14829 = !DILocation(line: 95, column: 2, scope: !14386, inlinedAt: !14828)
!14830 = !DILocation(line: 292, column: 17, scope: !14822)
!14831 = !DILocation(line: 294, column: 2, scope: !14806)
!14832 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2246, file: !2246, line: 297, type: !6621, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !842)
!14833 = !DILocation(line: 300, column: 19, scope: !14832)
!14834 = !DILocation(line: 300, column: 9, scope: !14832)
!14835 = !DILocation(line: 300, column: 2, scope: !14832)
!14836 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2246, file: !2246, line: 306, type: !14807, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !842)
!14837 = !DILocation(line: 308, column: 9, scope: !14836)
!14838 = !DILocation(line: 308, column: 2, scope: !14836)
!14839 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2246, file: !2246, line: 319, type: !6631, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14840)
!14840 = !{!14841, !14842, !14843, !14844}
!14841 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14839, file: !2246, line: 319, type: !415)
!14842 = !DILocalVariable(name: "start_cycles", scope: !14839, file: !2246, line: 328, type: !415)
!14843 = !DILocalVariable(name: "cycles_to_wait", scope: !14839, file: !2246, line: 331, type: !415)
!14844 = !DILocalVariable(name: "current_cycles", scope: !14845, file: !2246, line: 338, type: !415)
!14845 = distinct !DILexicalBlock(scope: !14846, file: !2246, line: 337, column: 11)
!14846 = distinct !DILexicalBlock(scope: !14847, file: !2246, line: 337, column: 2)
!14847 = distinct !DILexicalBlock(scope: !14839, file: !2246, line: 337, column: 2)
!14848 = !DILocation(line: 0, scope: !14839)
!14849 = !DILocation(line: 322, column: 19, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14839, file: !2246, line: 322, column: 6)
!14851 = !DILocation(line: 322, column: 6, scope: !14839)
!14852 = !DILocation(line: 328, column: 26, scope: !14839)
!14853 = !DILocation(line: 333, column: 43, scope: !14839)
!14854 = !DILocation(line: 337, column: 2, scope: !14839)
!14855 = !DILocation(line: 338, column: 29, scope: !14845)
!14856 = !DILocation(line: 0, scope: !14845)
!14857 = !DILocation(line: 341, column: 23, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14845, file: !2246, line: 341, column: 7)
!14859 = !DILocation(line: 341, column: 39, scope: !14858)
!14860 = !DILocation(line: 349, column: 1, scope: !14839)
!14861 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !670, file: !670, line: 1675, type: !6621, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !842)
!14862 = !DILocation(line: 1677, column: 9, scope: !14861)
!14863 = !DILocation(line: 1677, column: 2, scope: !14861)
!14864 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14865, file: !14865, line: 24, type: !6621, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !842)
!14865 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14866 = !DILocation(line: 26, column: 9, scope: !14864)
!14867 = !DILocation(line: 26, column: 2, scope: !14864)
!14868 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2246, file: !2246, line: 364, type: !14869, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !14871)
!14869 = !DISubroutineType(types: !14870)
!14870 = !{!2065, !14278}
!14871 = !{!14872, !14873}
!14872 = !DILocalVariable(name: "timeout", arg: 1, scope: !14868, file: !2246, line: 364, type: !14278)
!14873 = !DILocalVariable(name: "dt", scope: !14868, file: !2246, line: 366, type: !1546)
!14874 = !DILocation(line: 0, scope: !14868)
!14875 = !DILocation(line: 368, column: 6, scope: !14868)
!14876 = !DILocation(line: 371, column: 10, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14878, file: !2246, line: 370, column: 47)
!14878 = distinct !DILexicalBlock(scope: !14879, file: !2246, line: 370, column: 13)
!14879 = distinct !DILexicalBlock(scope: !14868, file: !2246, line: 368, column: 6)
!14880 = !DILocation(line: 371, column: 3, scope: !14877)
!14881 = !DILocation(line: 376, column: 58, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14883, file: !2246, line: 376, column: 7)
!14883 = distinct !DILexicalBlock(scope: !14878, file: !2246, line: 372, column: 9)
!14884 = !DILocation(line: 376, column: 7, scope: !14883)
!14885 = !DILocation(line: 376, column: 43, scope: !14882)
!14886 = !DILocation(line: 377, column: 4, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14882, file: !2246, line: 376, column: 64)
!14888 = !DILocation(line: 379, column: 10, scope: !14883)
!14889 = !DILocation(line: 379, column: 33, scope: !14883)
!14890 = !DILocation(line: 379, column: 31, scope: !14883)
!14891 = !DILocation(line: 379, column: 3, scope: !14883)
!14892 = !DILocation(line: 0, scope: !14879)
!14893 = !DILocation(line: 381, column: 1, scope: !14868)
!14894 = distinct !DISubprogram(name: "boot_banner", scope: !14895, file: !14895, line: 26, type: !3019, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3005, retainedNodes: !842)
!14895 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14896 = !DILocation(line: 34, column: 2, scope: !14894)
!14897 = !DILocation(line: 36, column: 1, scope: !14894)
!14898 = distinct !DISubprogram(name: "statics_init", scope: !2274, file: !2274, line: 21, type: !548, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !14899)
!14899 = !{!14900, !14901}
!14900 = !DILocalVariable(name: "unused", arg: 1, scope: !14898, file: !2274, line: 21, type: !550)
!14901 = !DILocalVariable(name: "h", scope: !14902, file: !2274, line: 24, type: !14903)
!14902 = distinct !DILexicalBlock(scope: !14898, file: !2274, line: 24, column: 2)
!14903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14904, size: 32)
!14904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !670, line: 5073, size: 160, elements: !14905)
!14905 = !{!14906, !14912, !14918}
!14906 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14904, file: !670, line: 5074, baseType: !14907, size: 96)
!14907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1887, line: 56, size: 96, elements: !14908)
!14908 = !{!14909, !14910, !14911}
!14909 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14907, file: !1887, line: 57, baseType: !1890, size: 32)
!14910 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14907, file: !1887, line: 58, baseType: !102, size: 32, offset: 32)
!14911 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14907, file: !1887, line: 59, baseType: !1714, size: 32, offset: 64)
!14912 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14904, file: !670, line: 5075, baseType: !14913, size: 64, offset: 96)
!14913 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !674, line: 233, baseType: !14914)
!14914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 231, size: 64, elements: !14915)
!14915 = !{!14916}
!14916 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14914, file: !674, line: 232, baseType: !14917, size: 64)
!14917 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !679, line: 48, baseType: !2260)
!14918 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14904, file: !670, line: 5076, baseType: !14919, offset: 160)
!14919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !841, line: 43, elements: !842)
!14920 = !DILocation(line: 0, scope: !14898)
!14921 = !DILocation(line: 0, scope: !14902)
!14922 = !DILocation(line: 24, column: 2, scope: !14902)
!14923 = !DILocation(line: 52, column: 2, scope: !14898)
!14924 = !DILocation(line: 49, column: 27, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14926, file: !2274, line: 48, column: 3)
!14926 = distinct !DILexicalBlock(scope: !14927, file: !2274, line: 24, column: 36)
!14927 = distinct !DILexicalBlock(scope: !14902, file: !2274, line: 24, column: 2)
!14928 = !DILocation(line: 49, column: 45, scope: !14925)
!14929 = !DILocation(line: 49, column: 4, scope: !14925)
!14930 = !DILocation(line: 24, column: 2, scope: !14927)
!14931 = !DILocation(line: 24, column: 2, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14927, file: !2274, line: 24, column: 2)
!14933 = distinct !{!14933, !14922, !14934}
!14934 = !DILocation(line: 51, column: 2, scope: !14902)
!14935 = distinct !DISubprogram(name: "k_heap_init", scope: !2274, file: !2274, line: 13, type: !14936, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !14938)
!14936 = !DISubroutineType(types: !14937)
!14937 = !{null, !14903, !102, !1714}
!14938 = !{!14939, !14940, !14941}
!14939 = !DILocalVariable(name: "h", arg: 1, scope: !14935, file: !2274, line: 13, type: !14903)
!14940 = !DILocalVariable(name: "mem", arg: 2, scope: !14935, file: !2274, line: 13, type: !102)
!14941 = !DILocalVariable(name: "bytes", arg: 3, scope: !14935, file: !2274, line: 13, type: !1714)
!14942 = !DILocation(line: 0, scope: !14935)
!14943 = !DILocation(line: 15, column: 19, scope: !14935)
!14944 = !DILocation(line: 15, column: 2, scope: !14935)
!14945 = !DILocation(line: 16, column: 20, scope: !14935)
!14946 = !DILocation(line: 16, column: 2, scope: !14935)
!14947 = !DILocation(line: 19, column: 1, scope: !14935)
!14948 = distinct !DISubprogram(name: "z_waitq_init", scope: !11656, file: !11656, line: 47, type: !14949, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !14952)
!14949 = !DISubroutineType(types: !14950)
!14950 = !{null, !14951}
!14951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14913, size: 32)
!14952 = !{!14953}
!14953 = !DILocalVariable(name: "w", arg: 1, scope: !14948, file: !11656, line: 47, type: !14951)
!14954 = !DILocation(line: 0, scope: !14948)
!14955 = !DILocation(line: 49, column: 21, scope: !14948)
!14956 = !DILocation(line: 49, column: 2, scope: !14948)
!14957 = !DILocation(line: 50, column: 1, scope: !14948)
!14958 = distinct !DISubprogram(name: "sys_dlist_init", scope: !679, file: !679, line: 197, type: !14959, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !14962)
!14959 = !DISubroutineType(types: !14960)
!14960 = !{null, !14961}
!14961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14917, size: 32)
!14962 = !{!14963}
!14963 = !DILocalVariable(name: "list", arg: 1, scope: !14958, file: !679, line: 197, type: !14961)
!14964 = !DILocation(line: 0, scope: !14958)
!14965 = !DILocation(line: 199, column: 8, scope: !14958)
!14966 = !DILocation(line: 199, column: 13, scope: !14958)
!14967 = !DILocation(line: 200, column: 8, scope: !14958)
!14968 = !DILocation(line: 200, column: 13, scope: !14958)
!14969 = !DILocation(line: 201, column: 1, scope: !14958)
!14970 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2274, file: !2274, line: 64, type: !14971, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !14977)
!14971 = !DISubroutineType(types: !14972)
!14972 = !{!102, !14903, !1714, !1714, !14973}
!14973 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1547, line: 67, baseType: !14974)
!14974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1547, line: 65, size: 64, elements: !14975)
!14975 = !{!14976}
!14976 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14974, file: !1547, line: 66, baseType: !1546, size: 64)
!14977 = !{!14978, !14979, !14980, !14981, !14982, !14983, !14984, !14985, !14990}
!14978 = !DILocalVariable(name: "h", arg: 1, scope: !14970, file: !2274, line: 64, type: !14903)
!14979 = !DILocalVariable(name: "align", arg: 2, scope: !14970, file: !2274, line: 64, type: !1714)
!14980 = !DILocalVariable(name: "bytes", arg: 3, scope: !14970, file: !2274, line: 64, type: !1714)
!14981 = !DILocalVariable(name: "timeout", arg: 4, scope: !14970, file: !2274, line: 65, type: !14973)
!14982 = !DILocalVariable(name: "now", scope: !14970, file: !2274, line: 67, type: !1548)
!14983 = !DILocalVariable(name: "end", scope: !14970, file: !2274, line: 67, type: !1548)
!14984 = !DILocalVariable(name: "ret", scope: !14970, file: !2274, line: 68, type: !102)
!14985 = !DILocalVariable(name: "key", scope: !14970, file: !2274, line: 72, type: !14986)
!14986 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !841, line: 106, baseType: !14987)
!14987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !841, line: 32, size: 32, elements: !14988)
!14988 = !{!14989}
!14989 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14987, file: !841, line: 33, baseType: !103, size: 32)
!14990 = !DILocalVariable(name: "blocked_alloc", scope: !14970, file: !2274, line: 78, type: !583)
!14991 = !DILocation(line: 0, scope: !14970)
!14992 = !DILocation(line: 67, column: 21, scope: !14970)
!14993 = !DILocation(line: 70, column: 8, scope: !14970)
!14994 = !DILocation(line: 72, column: 41, scope: !14970)
!14995 = !DILocalVariable(name: "l", arg: 1, scope: !14996, file: !841, line: 136, type: !14999)
!14996 = distinct !DISubprogram(name: "k_spin_lock", scope: !841, file: !841, line: 136, type: !14997, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !15000)
!14997 = !DISubroutineType(types: !14998)
!14998 = !{!14986, !14999}
!14999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14919, size: 32)
!15000 = !{!14995, !15001}
!15001 = !DILocalVariable(name: "k", scope: !14996, file: !841, line: 139, type: !14986)
!15002 = !DILocation(line: 0, scope: !14996, inlinedAt: !15003)
!15003 = distinct !DILocation(line: 72, column: 25, scope: !14970)
!15004 = !DILocation(line: 55, column: 2, scope: !15005, inlinedAt: !15009)
!15005 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5666, file: !5666, line: 42, type: !5667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !15006)
!15006 = !{!15007, !15008}
!15007 = !DILocalVariable(name: "key", scope: !15005, file: !5666, line: 44, type: !32)
!15008 = !DILocalVariable(name: "tmp", scope: !15005, file: !5666, line: 53, type: !32)
!15009 = distinct !DILocation(line: 145, column: 10, scope: !14996, inlinedAt: !15003)
!15010 = !{i64 2841764}
!15011 = !DILocation(line: 0, scope: !15005, inlinedAt: !15009)
!15012 = !DILocation(line: 81, column: 9, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !14970, file: !2274, line: 80, column: 22)
!15014 = !DILocation(line: 83, column: 9, scope: !15013)
!15015 = !DILocation(line: 85, column: 12, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !15013, file: !2274, line: 84, column: 7)
!15017 = !DILocation(line: 85, column: 21, scope: !15016)
!15018 = !DILocation(line: 85, column: 30, scope: !15016)
!15019 = !DILocation(line: 85, column: 37, scope: !15016)
!15020 = !DILocation(line: 84, column: 7, scope: !15013)
!15021 = !DILocation(line: 99, column: 10, scope: !15013)
!15022 = !DILocation(line: 0, scope: !14996, inlinedAt: !15023)
!15023 = distinct !DILocation(line: 101, column: 9, scope: !15013)
!15024 = !DILocation(line: 55, column: 2, scope: !15005, inlinedAt: !15025)
!15025 = distinct !DILocation(line: 145, column: 10, scope: !14996, inlinedAt: !15023)
!15026 = !DILocation(line: 0, scope: !15005, inlinedAt: !15025)
!15027 = distinct !{!15027, !15028, !15029}
!15028 = !DILocation(line: 80, column: 2, scope: !14970)
!15029 = !DILocation(line: 102, column: 2, scope: !14970)
!15030 = !DILocalVariable(name: "key", arg: 2, scope: !15031, file: !841, line: 190, type: !14986)
!15031 = distinct !DISubprogram(name: "k_spin_unlock", scope: !841, file: !841, line: 189, type: !15032, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !15034)
!15032 = !DISubroutineType(types: !15033)
!15033 = !{null, !14999, !14986}
!15034 = !{!15035, !15030}
!15035 = !DILocalVariable(name: "l", arg: 1, scope: !15031, file: !841, line: 189, type: !14999)
!15036 = !DILocation(line: 0, scope: !15031, inlinedAt: !15037)
!15037 = distinct !DILocation(line: 106, column: 2, scope: !14970)
!15038 = !DILocalVariable(name: "key", arg: 1, scope: !15039, file: !5666, line: 84, type: !32)
!15039 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5666, file: !5666, line: 84, type: !5689, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !15040)
!15040 = !{!15038}
!15041 = !DILocation(line: 0, scope: !15039, inlinedAt: !15042)
!15042 = distinct !DILocation(line: 215, column: 2, scope: !15031, inlinedAt: !15037)
!15043 = !DILocation(line: 95, column: 2, scope: !15039, inlinedAt: !15042)
!15044 = !{i64 2842581}
!15045 = !DILocation(line: 107, column: 2, scope: !14970)
!15046 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2274, file: !2274, line: 110, type: !15047, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !15049)
!15047 = !DISubroutineType(types: !15048)
!15048 = !{!102, !14903, !1714, !14973}
!15049 = !{!15050, !15051, !15052, !15053}
!15050 = !DILocalVariable(name: "h", arg: 1, scope: !15046, file: !2274, line: 110, type: !14903)
!15051 = !DILocalVariable(name: "bytes", arg: 2, scope: !15046, file: !2274, line: 110, type: !1714)
!15052 = !DILocalVariable(name: "timeout", arg: 3, scope: !15046, file: !2274, line: 110, type: !14973)
!15053 = !DILocalVariable(name: "ret", scope: !15046, file: !2274, line: 114, type: !102)
!15054 = !DILocation(line: 0, scope: !15046)
!15055 = !DILocation(line: 114, column: 14, scope: !15046)
!15056 = !DILocation(line: 118, column: 2, scope: !15046)
!15057 = distinct !DISubprogram(name: "k_heap_free", scope: !2274, file: !2274, line: 121, type: !15058, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !15060)
!15058 = !DISubroutineType(types: !15059)
!15059 = !{null, !14903, !102}
!15060 = !{!15061, !15062, !15063}
!15061 = !DILocalVariable(name: "h", arg: 1, scope: !15057, file: !2274, line: 121, type: !14903)
!15062 = !DILocalVariable(name: "mem", arg: 2, scope: !15057, file: !2274, line: 121, type: !102)
!15063 = !DILocalVariable(name: "key", scope: !15057, file: !2274, line: 123, type: !14986)
!15064 = !DILocation(line: 0, scope: !15057)
!15065 = !DILocation(line: 0, scope: !14996, inlinedAt: !15066)
!15066 = distinct !DILocation(line: 123, column: 25, scope: !15057)
!15067 = !DILocation(line: 55, column: 2, scope: !15005, inlinedAt: !15068)
!15068 = distinct !DILocation(line: 145, column: 10, scope: !14996, inlinedAt: !15066)
!15069 = !DILocation(line: 0, scope: !15005, inlinedAt: !15068)
!15070 = !DILocation(line: 125, column: 20, scope: !15057)
!15071 = !DILocation(line: 125, column: 2, scope: !15057)
!15072 = !DILocation(line: 128, column: 60, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15057, file: !2274, line: 128, column: 6)
!15074 = !DILocation(line: 128, column: 43, scope: !15073)
!15075 = !DILocation(line: 128, column: 68, scope: !15073)
!15076 = !DILocation(line: 128, column: 6, scope: !15057)
!15077 = !DILocation(line: 123, column: 41, scope: !15057)
!15078 = !DILocation(line: 129, column: 3, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !15073, file: !2274, line: 128, column: 74)
!15080 = !DILocation(line: 130, column: 2, scope: !15079)
!15081 = !DILocation(line: 0, scope: !15031, inlinedAt: !15082)
!15082 = distinct !DILocation(line: 131, column: 3, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15073, file: !2274, line: 130, column: 9)
!15084 = !DILocation(line: 0, scope: !15039, inlinedAt: !15085)
!15085 = distinct !DILocation(line: 215, column: 2, scope: !15031, inlinedAt: !15082)
!15086 = !DILocation(line: 95, column: 2, scope: !15039, inlinedAt: !15085)
!15087 = !DILocation(line: 133, column: 1, scope: !15057)
