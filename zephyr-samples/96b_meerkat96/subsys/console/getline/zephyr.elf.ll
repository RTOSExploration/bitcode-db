; ModuleID = 'build/96b_meerkat96/getline/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.z_heap_bucket, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.z_heap_bucket, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._thread_arch = type { i32, i32 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.5], [13808 x i8], [191 x %struct.anon.5], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.5 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.5] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct._gpio_init_config = type { i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.5], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536851980 to i8*), void (i8*)* inttoptr (i32 536850085 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536851956 to i8*), void (i8*)* inttoptr (i32 536849925 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536851956 to i8*), void (i8*)* inttoptr (i32 536849925 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [14 x i8] c"Enter a line\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"line: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"last char was: 0x%x\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [14 x i8*] [i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.k_fifo* @free_queue to i8*), i8* bitcast (%struct.k_fifo* @used_queue to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@free_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.free_queue", align 4, !dbg !543
@used_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.used_queue", align 4, !dbg !650
@console_getline.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !697
@line_bufs = internal global [2 x %struct.console_input] zeroinitializer, align 4, !dbg !718
@_vector_start = external dso_local global [0 x i8], align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !723
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !733
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !834
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !874
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !827
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !882
@esc_state = internal global i32 0, align 4, !dbg !901
@cur = internal unnamed_addr global i8 0, align 1, !dbg !909
@end = internal unnamed_addr global i8 0, align 1, !dbg !911
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !905
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !907
@.str.31 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.30 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2.28 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !913
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1099
@.str.32 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.z_heap_bucket { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1049
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1080
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1047
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1035
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1023
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1025
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1082
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1094
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1104
@.str.36 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1110
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1368
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1366
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1360
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1351
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1353
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1370
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1372
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1377
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1380
@overflow_cyc = internal global i32 0, align 4, !dbg !1391
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1647
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1649
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1645
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1616
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1651
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.2 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1681
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1687
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !1898
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1907
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !1914
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1919
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.79 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.81, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.82, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.83, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.84, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !1945
@.str.80 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.81 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.82 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.83 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.84 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2053
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2067
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2169
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2172
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2174
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1912
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1909
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2176
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2212
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2210
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1774
@.str.154 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2215
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2942 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2946, !srcloc !2947
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2948, !srcloc !2949
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2950, !srcloc !2951
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2952, !srcloc !2953
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2954, !srcloc !2955
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2956, !srcloc !2957
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2958, !srcloc !2959
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2960, !srcloc !2961
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2962, !srcloc !2963
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2964, !srcloc !2965
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2966, !srcloc !2967
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2968, !srcloc !2969
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2970, !srcloc !2971
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2972, !srcloc !2973
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2974, !srcloc !2975
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2976, !srcloc !2977
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2978, !srcloc !2979
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #23, !dbg !2980, !srcloc !2981
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #23, !dbg !2982, !srcloc !2983
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #23, !dbg !2984, !srcloc !2985
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2986, !srcloc !2987
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2988, !srcloc !2989
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2990, !srcloc !2991
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2992, !srcloc !2993
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2994, !srcloc !2997
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2998, !srcloc !2999
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3000, !srcloc !3001
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3002, !srcloc !3003
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3004, !srcloc !3005
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3006, !srcloc !3007
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3008, !srcloc !3009
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3010, !srcloc !3011
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3012, !srcloc !3013
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3014, !srcloc !3015
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3016, !srcloc !3017
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3018, !srcloc !3019
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3020, !srcloc !3021
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3022, !srcloc !3023
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3024, !srcloc !3025
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3026, !srcloc !3027
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3028, !srcloc !3029
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3030, !srcloc !3031
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3032, !srcloc !3033
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3034, !srcloc !3035
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3036, !srcloc !3037
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3038, !srcloc !3039
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #23, !dbg !3040, !srcloc !3041
  ret void, !dbg !3042
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3045 {
  tail call void @console_getline_init() #24, !dbg !3050
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #24, !dbg !3051
  br label %1, !dbg !3052

1:                                                ; preds = %0, %1
  %2 = tail call i8* @console_getline() #24, !dbg !3053
  call void @llvm.dbg.value(metadata i8* %2, metadata !3048, metadata !DIExpression()), !dbg !3054
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* noundef %2) #24, !dbg !3055
  %3 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !3056
  %4 = add i32 %3, -1, !dbg !3057
  %5 = getelementptr inbounds i8, i8* %2, i32 %4, !dbg !3058
  %6 = load i8, i8* %5, align 1, !dbg !3058
  %7 = zext i8 %6 to i32, !dbg !3058
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 noundef %7) #24, !dbg !3059
  br label %1, !dbg !3052, !llvm.loop !3060
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3064, metadata !DIExpression()), !dbg !3065
  ret i32 0, !dbg !3066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3067 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3071, metadata !DIExpression()), !dbg !3072
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3073
  ret void, !dbg !3074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3075 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3078
  ret i8* %1, !dbg !3079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3080 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3092, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.value(metadata i8* %0, metadata !3091, metadata !DIExpression()), !dbg !3101
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !3102
  ret void, !dbg !3104
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3109, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.value(metadata i8* %1, metadata !3110, metadata !DIExpression()), !dbg !3111
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3112
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !3112
  ret i32 %4, !dbg !3113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3114 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3126, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3123, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.value(metadata i8* %1, metadata !3124, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.value(metadata i8* %2, metadata !3125, metadata !DIExpression()), !dbg !3127
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !3128
  ret void, !dbg !3129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3130 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3134, metadata !DIExpression()), !dbg !3137
  call void @llvm.dbg.value(metadata i32 %1, metadata !3135, metadata !DIExpression()), !dbg !3137
  call void @llvm.dbg.value(metadata i32 0, metadata !3136, metadata !DIExpression()), !dbg !3137
  %3 = icmp eq i32 %1, 0, !dbg !3138
  br i1 %3, label %13, label %4, !dbg !3141

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3136, metadata !DIExpression()), !dbg !3137
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3142
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3144
  %8 = load i8, i8* %7, align 1, !dbg !3144
  %9 = zext i8 %8 to i32, !dbg !3144
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !3142
  %11 = add nuw i32 %5, 1, !dbg !3145
  call void @llvm.dbg.value(metadata i32 %11, metadata !3136, metadata !DIExpression()), !dbg !3137
  %12 = icmp eq i32 %11, %1, !dbg !3138
  br i1 %12, label %13, label %4, !dbg !3141, !llvm.loop !3146

13:                                               ; preds = %4, %2
  ret void, !dbg !3148
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3149 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3153, metadata !DIExpression()), !dbg !3155
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3156
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3156
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3154, metadata !DIExpression()), !dbg !3157
  call void @llvm.va_start(i8* nonnull %3), !dbg !3158
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3159
  %5 = load i32, i32* %4, align 4, !dbg !3159
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3159
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !3159
  call void @llvm.va_end(i8* nonnull %3), !dbg !3160
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3161
  ret void, !dbg !3161
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3162 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3166, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.value(metadata i32 %1, metadata !3167, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.value(metadata i8* %2, metadata !3168, metadata !DIExpression()), !dbg !3171
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3172
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3172
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3169, metadata !DIExpression()), !dbg !3173
  call void @llvm.va_start(i8* nonnull %5), !dbg !3174
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3175
  %7 = load i32, i32* %6, align 4, !dbg !3175
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3175
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !3175
  call void @llvm.dbg.value(metadata i32 %9, metadata !3170, metadata !DIExpression()), !dbg !3171
  call void @llvm.va_end(i8* nonnull %5), !dbg !3176
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3177
  ret i32 %9, !dbg !3178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3179 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3186, metadata !DIExpression()), !dbg !3193
  call void @llvm.dbg.value(metadata i8* %0, metadata !3183, metadata !DIExpression()), !dbg !3193
  call void @llvm.dbg.value(metadata i32 %1, metadata !3184, metadata !DIExpression()), !dbg !3193
  call void @llvm.dbg.value(metadata i8* %2, metadata !3185, metadata !DIExpression()), !dbg !3193
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3194
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3194
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3187, metadata !DIExpression()), !dbg !3195
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3196
  store i8* %0, i8** %7, align 4, !dbg !3196
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3196
  store i32 %1, i32* %8, align 4, !dbg !3196
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3196
  store i32 0, i32* %9, align 4, !dbg !3196
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !3197
  %10 = load i32, i32* %9, align 4, !dbg !3198
  %11 = load i32, i32* %8, align 4, !dbg !3200
  %12 = icmp slt i32 %10, %11, !dbg !3201
  br i1 %12, label %13, label %15, !dbg !3202

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3203
  store i8 0, i8* %14, align 1, !dbg !3205
  br label %15, !dbg !3206

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3207
  ret i32 %10, !dbg !3208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3214, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3215, metadata !DIExpression()), !dbg !3216
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3217
  %4 = load i8*, i8** %3, align 4, !dbg !3217
  %5 = icmp eq i8* %4, null, !dbg !3219
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3220
  br i1 %5, label %12, label %8, !dbg !3221

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3222
  %10 = load i32, i32* %9, align 4, !dbg !3222
  %11 = icmp slt i32 %7, %10, !dbg !3223
  br i1 %11, label %15, label %12, !dbg !3224

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3225
  %14 = add nsw i32 %7, 1, !dbg !3227
  store i32 %14, i32* %13, align 4, !dbg !3227
  br label %25, !dbg !3228

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3229
  %17 = icmp eq i32 %7, %16, !dbg !3231
  br i1 %17, label %18, label %21, !dbg !3232

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3233
  store i32 %19, i32* %6, align 4, !dbg !3233
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3235
  store i8 0, i8* %20, align 1, !dbg !3236
  br label %25, !dbg !3237

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3238
  %23 = add nsw i32 %7, 1, !dbg !3240
  store i32 %23, i32* %6, align 4, !dbg !3240
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3241
  store i8 %22, i8* %24, align 1, !dbg !3242
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3243
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3244 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3254, metadata !DIExpression()), !dbg !3258
  call void @llvm.dbg.value(metadata i8* %1, metadata !3255, metadata !DIExpression()), !dbg !3258
  call void @llvm.dbg.value(metadata i8* %2, metadata !3256, metadata !DIExpression()), !dbg !3258
  call void @llvm.dbg.value(metadata i8* %3, metadata !3257, metadata !DIExpression()), !dbg !3258
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !3259
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3260
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !3261
  unreachable, !dbg !3262
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3263 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3361
  ret %struct.k_thread* %1, !dbg !3362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3363 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3368, metadata !DIExpression()), !dbg !3369
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3370, !srcloc !3372
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !3373
  ret void, !dbg !3374
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3375 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3376, !srcloc !3378
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !3379
  ret %struct.k_thread* %1, !dbg !3380
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3381 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3392, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i8* %1, metadata !3393, metadata !DIExpression()), !dbg !3396
  %3 = icmp eq i8* %1, null, !dbg !3397
  br i1 %3, label %8, label %4, !dbg !3399

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3400
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3400
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3394, metadata !DIExpression()), !dbg !3396
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !3401, !range !3402
  call void @llvm.dbg.value(metadata i32 %7, metadata !3395, metadata !DIExpression()), !dbg !3396
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #25, !dbg !3403
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !3404
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3406 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3410, metadata !DIExpression()), !dbg !3414
  call void @llvm.dbg.value(metadata i8* %1, metadata !3411, metadata !DIExpression()), !dbg !3414
  call void @llvm.dbg.value(metadata i8* %1, metadata !3412, metadata !DIExpression()), !dbg !3414
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !3415
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3413, metadata !DIExpression()), !dbg !3414
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3416
  %5 = ptrtoint i8* %4 to i32, !dbg !3417
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3417
  %7 = sub i32 %5, %6, !dbg !3417
  %8 = lshr i32 %7, 3, !dbg !3418
  ret i32 %8, !dbg !3419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3420 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3424, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.value(metadata i32 %1, metadata !3425, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.value(metadata i1 %2, metadata !3426, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3429
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !3430
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3427, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3428, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3429
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3431
  %6 = bitcast i8* %5 to i16*, !dbg !3431
  %7 = load i16, i16* %6, align 2, !dbg !3431
  %8 = and i16 %7, -2, !dbg !3435
  %9 = zext i1 %2 to i16, !dbg !3435
  %10 = or i16 %8, %9, !dbg !3435
  store i16 %10, i16* %6, align 2, !dbg !3431
  ret void, !dbg !3436
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3437 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3441, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.value(metadata i32 %1, metadata !3442, metadata !DIExpression()), !dbg !3443
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3444
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !3446
  br i1 %4, label %7, label %5, !dbg !3447

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !3448
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3450
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !3451
  br label %7, !dbg !3452

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3453, !range !3455
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !3456
  br i1 %9, label %13, label %10, !dbg !3457

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !3458
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3460, !range !3455
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #25, !dbg !3461
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %12, metadata !3442, metadata !DIExpression()), !dbg !3443
  br label %13, !dbg !3463

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3442, metadata !DIExpression()), !dbg !3443
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #25, !dbg !3464
  ret void, !dbg !3465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3466 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3470, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i32 %1, metadata !3471, metadata !DIExpression()), !dbg !3472
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3473
  %4 = add i32 %3, %1, !dbg !3474
  ret i32 %4, !dbg !3475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3476 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3480, metadata !DIExpression()), !dbg !3482
  call void @llvm.dbg.value(metadata i32 %1, metadata !3481, metadata !DIExpression()), !dbg !3482
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !3483
  %4 = and i32 %3, 1, !dbg !3484
  %5 = icmp ne i32 %4, 0, !dbg !3483
  ret i1 %5, !dbg !3485
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3486 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3488, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i32 %1, metadata !3489, metadata !DIExpression()), !dbg !3493
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3494, !range !3495
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !3496
  call void @llvm.dbg.value(metadata i32 %4, metadata !3490, metadata !DIExpression()), !dbg !3497
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !3498
  ret void, !dbg !3499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3500 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3504, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i32 %1, metadata !3505, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i32 %2, metadata !3506, metadata !DIExpression()), !dbg !3509
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3510
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !3511
  %6 = add i32 %5, %4, !dbg !3512
  call void @llvm.dbg.value(metadata i32 %6, metadata !3507, metadata !DIExpression()), !dbg !3509
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !3513
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !3514
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !3515
  ret void, !dbg !3516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3517 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3519, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.value(metadata i32 %1, metadata !3520, metadata !DIExpression()), !dbg !3521
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #25, !dbg !3522
  %4 = sub i32 %1, %3, !dbg !3523
  ret i32 %4, !dbg !3524
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3525 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3527, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i32 %1, metadata !3528, metadata !DIExpression()), !dbg !3532
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3533, !range !3495
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !3534
  call void @llvm.dbg.value(metadata i32 %4, metadata !3529, metadata !DIExpression()), !dbg !3535
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !3536
  ret void, !dbg !3537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3538 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3542, metadata !DIExpression()), !dbg !3544
  call void @llvm.dbg.value(metadata i32 %1, metadata !3543, metadata !DIExpression()), !dbg !3544
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !3545
  %4 = lshr i32 %3, 1, !dbg !3546
  ret i32 %4, !dbg !3547
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3548 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3552, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %1, metadata !3553, metadata !DIExpression()), !dbg !3555
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #25, !dbg !3556
  %4 = add i32 %1, 1, !dbg !3557
  %5 = sub i32 %4, %3, !dbg !3558
  call void @llvm.dbg.value(metadata i32 %5, metadata !3554, metadata !DIExpression()), !dbg !3555
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3559, !range !3560
  %7 = sub nsw i32 31, %6, !dbg !3561
  ret i32 %7, !dbg !3562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3563 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3567, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %1, metadata !3568, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %2, metadata !3569, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3570, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3576
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3577
  %5 = load i32, i32* %4, align 4, !dbg !3577
  %6 = icmp eq i32 %5, 0, !dbg !3578
  br i1 %6, label %7, label %12, !dbg !3579

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3580
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3582
  %10 = load i32, i32* %9, align 4, !dbg !3583
  %11 = or i32 %10, %8, !dbg !3583
  store i32 %11, i32* %9, align 4, !dbg !3583
  store i32 %1, i32* %4, align 4, !dbg !3584
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !3585
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !3586
  br label %14, !dbg !3587

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3572, metadata !DIExpression()), !dbg !3588
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #25, !dbg !3589, !range !3590
  call void @llvm.dbg.value(metadata i32 %13, metadata !3575, metadata !DIExpression()), !dbg !3588
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #25, !dbg !3591
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #25, !dbg !3592
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #25, !dbg !3593
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #25, !dbg !3594
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3596 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3598, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.value(metadata i32 %1, metadata !3599, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.value(metadata i32 %2, metadata !3600, metadata !DIExpression()), !dbg !3601
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #25, !dbg !3602
  ret void, !dbg !3603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3604 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3606, metadata !DIExpression()), !dbg !3609
  call void @llvm.dbg.value(metadata i32 %1, metadata !3607, metadata !DIExpression()), !dbg !3609
  call void @llvm.dbg.value(metadata i32 %2, metadata !3608, metadata !DIExpression()), !dbg !3609
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #25, !dbg !3610
  ret void, !dbg !3611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3612 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3614, metadata !DIExpression()), !dbg !3616
  call void @llvm.dbg.value(metadata i32 %1, metadata !3615, metadata !DIExpression()), !dbg !3616
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #25, !dbg !3617
  ret i32 %3, !dbg !3618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3619 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3623, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %1, metadata !3624, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %2, metadata !3625, metadata !DIExpression()), !dbg !3628
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !3629
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3626, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3628
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3628
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3630
  call void @llvm.dbg.value(metadata i8* %5, metadata !3627, metadata !DIExpression()), !dbg !3628
  %6 = bitcast i8* %5 to i16*, !dbg !3631
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3634
  %8 = load i16, i16* %7, align 2, !dbg !3634
  %9 = zext i16 %8 to i32, !dbg !3634
  ret i32 %9, !dbg !3635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3636 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3640, metadata !DIExpression()), !dbg !3641
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3642
  ret %struct.chunk_unit_t* %2, !dbg !3643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3644 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3648, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i32 %1, metadata !3649, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i32 %2, metadata !3650, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i32 %3, metadata !3651, metadata !DIExpression()), !dbg !3654
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !3655
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3652, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3654
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3656
  call void @llvm.dbg.value(metadata i8* %6, metadata !3653, metadata !DIExpression()), !dbg !3654
  %7 = trunc i32 %3 to i16, !dbg !3657
  %8 = bitcast i8* %6 to i16*, !dbg !3660
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3661
  store i16 %7, i16* %9, align 2, !dbg !3662
  ret void, !dbg !3663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3664 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3668, metadata !DIExpression()), !dbg !3669
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #25, !dbg !3670
  ret i32 %2, !dbg !3671
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3672 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3676, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i32 %1, metadata !3677, metadata !DIExpression()), !dbg !3678
  %3 = add i32 %1, 4, !dbg !3679
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #25, !dbg !3680
  ret i32 %4, !dbg !3681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3686, metadata !DIExpression()), !dbg !3687
  %2 = add i32 %0, 7, !dbg !3688
  %3 = lshr i32 %2, 3, !dbg !3689
  ret i32 %3, !dbg !3690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3691 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3695, metadata !DIExpression()), !dbg !3698
  call void @llvm.dbg.value(metadata i32 %1, metadata !3696, metadata !DIExpression()), !dbg !3698
  call void @llvm.dbg.value(metadata i32 %2, metadata !3697, metadata !DIExpression()), !dbg !3698
  %4 = shl i32 %2, 1, !dbg !3699
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #25, !dbg !3700
  ret void, !dbg !3701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3702 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3704, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %1, metadata !3705, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %2, metadata !3706, metadata !DIExpression()), !dbg !3707
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #25, !dbg !3708
  ret void, !dbg !3709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3710 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3712, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i32 %1, metadata !3713, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i32 %2, metadata !3714, metadata !DIExpression()), !dbg !3720
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !3721
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3715, metadata !DIExpression()), !dbg !3720
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3722
  %6 = icmp eq i32 %5, %1, !dbg !3723
  br i1 %6, label %7, label %14, !dbg !3724

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3725
  %9 = xor i32 %8, -1, !dbg !3727
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3728
  %11 = load i32, i32* %10, align 4, !dbg !3729
  %12 = and i32 %11, %9, !dbg !3729
  store i32 %12, i32* %10, align 4, !dbg !3729
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3730
  store i32 0, i32* %13, align 4, !dbg !3731
  br label %17, !dbg !3732

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3733
  call void @llvm.dbg.value(metadata i32 %15, metadata !3716, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata i32 %5, metadata !3719, metadata !DIExpression()), !dbg !3734
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3735
  store i32 %5, i32* %16, align 4, !dbg !3736
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #25, !dbg !3737
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #25, !dbg !3738
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !3739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3740 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3742, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 %1, metadata !3743, metadata !DIExpression()), !dbg !3744
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #25, !dbg !3745
  ret i32 %3, !dbg !3746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3747 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3751, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8* %1, metadata !3752, metadata !DIExpression()), !dbg !3758
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3759
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3759
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3753, metadata !DIExpression()), !dbg !3758
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #25, !dbg !3760
  call void @llvm.dbg.value(metadata i32 %5, metadata !3754, metadata !DIExpression()), !dbg !3758
  %6 = ptrtoint i8* %1 to i32, !dbg !3761
  call void @llvm.dbg.value(metadata i32 %6, metadata !3755, metadata !DIExpression()), !dbg !3758
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #25, !dbg !3762
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3762
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3763
  call void @llvm.dbg.value(metadata i32 %9, metadata !3756, metadata !DIExpression()), !dbg !3758
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #25, !dbg !3764
  %11 = shl i32 %10, 3, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %11, metadata !3757, metadata !DIExpression()), !dbg !3758
  %12 = sub i32 %9, %6, !dbg !3766
  %13 = add i32 %12, %11, !dbg !3767
  ret i32 %13, !dbg !3768
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3769 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3773, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.value(metadata i32 %1, metadata !3774, metadata !DIExpression()), !dbg !3779
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3780
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3780
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3775, metadata !DIExpression()), !dbg !3779
  %5 = icmp eq i32 %1, 0, !dbg !3781
  br i1 %5, label %19, label %6, !dbg !3783

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !3784
  br i1 %7, label %19, label %8, !dbg !3785

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !3786, !range !3402
  call void @llvm.dbg.value(metadata i32 %9, metadata !3777, metadata !DIExpression()), !dbg !3779
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #25, !dbg !3787
  call void @llvm.dbg.value(metadata i32 %10, metadata !3778, metadata !DIExpression()), !dbg !3779
  %11 = icmp eq i32 %10, 0, !dbg !3788
  br i1 %11, label %19, label %12, !dbg !3790

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !3791
  %14 = icmp ugt i32 %13, %9, !dbg !3793
  br i1 %14, label %15, label %17, !dbg !3794

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3795
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #25, !dbg !3797
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #25, !dbg !3798
  br label %17, !dbg !3799

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #25, !dbg !3800
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !3801
  call void @llvm.dbg.value(metadata i8* %18, metadata !3776, metadata !DIExpression()), !dbg !3779
  br label %19, !dbg !3802

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3779
  ret i8* %20, !dbg !3803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3804 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3808, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i32 %1, metadata !3809, metadata !DIExpression()), !dbg !3810
  %3 = lshr i32 %1, 3, !dbg !3811
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3812
  %5 = load i32, i32* %4, align 4, !dbg !3812
  %6 = icmp uge i32 %3, %5, !dbg !3813
  ret i1 %6, !dbg !3814
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3815 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3819, metadata !DIExpression()), !dbg !3834
  call void @llvm.dbg.value(metadata i32 %1, metadata !3820, metadata !DIExpression()), !dbg !3834
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %3, metadata !3821, metadata !DIExpression()), !dbg !3834
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3822, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3834
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !3836
  %5 = load i32, i32* %4, align 4, !dbg !3836
  %6 = icmp eq i32 %5, 0, !dbg !3837
  br i1 %6, label %19, label %7, !dbg !3838

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3839
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3840
  call void @llvm.dbg.value(metadata i32 %9, metadata !3826, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i32 %8, metadata !3827, metadata !DIExpression()), !dbg !3841
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !3842
  %11 = icmp ult i32 %10, %1, !dbg !3844
  br i1 %11, label %13, label %12, !dbg !3845

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #25, !dbg !3846
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !3848
  store i32 %14, i32* %4, align 4, !dbg !3849
  %15 = add nsw i32 %9, -1, !dbg !3850
  call void @llvm.dbg.value(metadata i32 %15, metadata !3826, metadata !DIExpression()), !dbg !3840
  %16 = icmp eq i32 %15, 0, !dbg !3850
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3851
  br i1 %18, label %19, label %7, !dbg !3851, !llvm.loop !3852

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3855
  %21 = load i32, i32* %20, align 4, !dbg !3855
  %22 = add nsw i32 %3, 1, !dbg !3856
  %23 = shl nsw i32 -1, %22, !dbg !3856
  %24 = and i32 %21, %23, !dbg !3857
  call void @llvm.dbg.value(metadata i32 %24, metadata !3829, metadata !DIExpression()), !dbg !3834
  %25 = icmp eq i32 %24, 0, !dbg !3858
  br i1 %25, label %30, label %26, !dbg !3859

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3860, !range !3560
  call void @llvm.dbg.value(metadata i32 %27, metadata !3830, metadata !DIExpression()), !dbg !3861
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !3862
  %29 = load i32, i32* %28, align 4, !dbg !3862
  call void @llvm.dbg.value(metadata i32 %29, metadata !3833, metadata !DIExpression()), !dbg !3861
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #25, !dbg !3863
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3834
  ret i32 %31, !dbg !3864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3865 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3867, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.value(metadata i32 %1, metadata !3868, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.value(metadata i32 %2, metadata !3869, metadata !DIExpression()), !dbg !3873
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3874
  call void @llvm.dbg.value(metadata i32 %4, metadata !3870, metadata !DIExpression()), !dbg !3873
  %5 = sub i32 %2, %1, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %5, metadata !3871, metadata !DIExpression()), !dbg !3873
  %6 = sub i32 %4, %5, !dbg !3876
  call void @llvm.dbg.value(metadata i32 %6, metadata !3872, metadata !DIExpression()), !dbg !3873
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #25, !dbg !3877
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #25, !dbg !3878
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #25, !dbg !3879
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !3880
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !3881
  ret void, !dbg !3882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3883 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3887, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata i32 %1, metadata !3888, metadata !DIExpression()), !dbg !3891
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !3892
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3889, metadata !DIExpression()), !dbg !3891
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3893
  call void @llvm.dbg.value(metadata i8* %4, metadata !3890, metadata !DIExpression()), !dbg !3891
  ret i8* %4, !dbg !3894
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3895 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3899, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i32 %1, metadata !3900, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i32 %2, metadata !3901, metadata !DIExpression()), !dbg !3911
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3912
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3912
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3902, metadata !DIExpression()), !dbg !3911
  %6 = sub i32 0, %1, !dbg !3913
  %7 = and i32 %6, %1, !dbg !3914
  call void @llvm.dbg.value(metadata i32 %7, metadata !3904, metadata !DIExpression()), !dbg !3911
  %8 = icmp eq i32 %7, %1, !dbg !3915
  br i1 %8, label %13, label %9, !dbg !3917

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3918
  call void @llvm.dbg.value(metadata i32 %10, metadata !3900, metadata !DIExpression()), !dbg !3911
  %11 = icmp ult i32 %7, 4, !dbg !3920
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3920
  br label %17, !dbg !3920

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !3921
  br i1 %14, label %15, label %17, !dbg !3924

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #25, !dbg !3925
  br label %57, !dbg !3927

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3911
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !3928
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3900, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i32 %19, metadata !3903, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i32 %18, metadata !3904, metadata !DIExpression()), !dbg !3911
  %21 = icmp eq i32 %2, 0, !dbg !3929
  br i1 %21, label %57, label %22, !dbg !3931

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #25, !dbg !3932
  br i1 %23, label %57, label %24, !dbg !3933

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !3934
  %26 = add i32 %25, %20, !dbg !3935
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #25, !dbg !3936, !range !3402
  call void @llvm.dbg.value(metadata i32 %27, metadata !3905, metadata !DIExpression()), !dbg !3911
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #25, !dbg !3937
  call void @llvm.dbg.value(metadata i32 %28, metadata !3906, metadata !DIExpression()), !dbg !3911
  %29 = icmp eq i32 %28, 0, !dbg !3938
  br i1 %29, label %57, label %30, !dbg !3940

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #25, !dbg !3941
  call void @llvm.dbg.value(metadata i8* %31, metadata !3907, metadata !DIExpression()), !dbg !3911
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !3942
  %33 = ptrtoint i8* %32 to i32, !dbg !3942
  %34 = add i32 %20, -1, !dbg !3942
  %35 = add i32 %34, %33, !dbg !3942
  %36 = sub i32 0, %20, !dbg !3942
  %37 = and i32 %35, %36, !dbg !3942
  %38 = inttoptr i32 %37 to i8*, !dbg !3943
  %39 = sub i32 0, %18, !dbg !3944
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !3944
  call void @llvm.dbg.value(metadata i8* %40, metadata !3907, metadata !DIExpression()), !dbg !3911
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !3945
  %42 = ptrtoint i8* %41 to i32, !dbg !3945
  %43 = add i32 %42, 7, !dbg !3945
  %44 = and i32 %43, -8, !dbg !3945
  call void @llvm.dbg.value(metadata i32 %44, metadata !3908, metadata !DIExpression()), !dbg !3911
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #25, !dbg !3946
  call void @llvm.dbg.value(metadata i32 %45, metadata !3909, metadata !DIExpression()), !dbg !3911
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #25, !dbg !3947
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !3948
  %48 = sub i32 %44, %47, !dbg !3948
  %49 = ashr exact i32 %48, 3, !dbg !3948
  call void @llvm.dbg.value(metadata i32 %49, metadata !3910, metadata !DIExpression()), !dbg !3911
  %50 = icmp ugt i32 %45, %28, !dbg !3949
  br i1 %50, label %51, label %52, !dbg !3951

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #25, !dbg !3952
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #25, !dbg !3954
  br label %52, !dbg !3955

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #25, !dbg !3956
  %54 = icmp ugt i32 %53, %49, !dbg !3958
  br i1 %54, label %55, label %56, !dbg !3959

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #25, !dbg !3960
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #25, !dbg !3962
  br label %56, !dbg !3963

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #25, !dbg !3964
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3911
  ret i8* %58, !dbg !3965
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !3966 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3970, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i8* %1, metadata !3971, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i32 %2, metadata !3972, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i32 %3, metadata !3973, metadata !DIExpression()), !dbg !3989
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3990
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3990
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3974, metadata !DIExpression()), !dbg !3989
  %7 = icmp eq i8* %1, null, !dbg !3991
  br i1 %7, label %8, label %10, !dbg !3993

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !3994
  br label %59, !dbg !3996

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !3997
  br i1 %11, label %12, label %13, !dbg !3999

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !4000
  br label %59, !dbg !4002

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #25, !dbg !4003
  br i1 %14, label %59, label %15, !dbg !4005

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !4006, !range !3402
  call void @llvm.dbg.value(metadata i32 %16, metadata !3975, metadata !DIExpression()), !dbg !3989
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !4007
  call void @llvm.dbg.value(metadata i32 %17, metadata !3976, metadata !DIExpression()), !dbg !3989
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !4008
  %19 = ptrtoint i8* %1 to i32, !dbg !4009
  %20 = ptrtoint i8* %18 to i32, !dbg !4009
  %21 = sub i32 %19, %20, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %21, metadata !3977, metadata !DIExpression()), !dbg !3989
  %22 = add i32 %21, %3, !dbg !4010
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !4011
  call void @llvm.dbg.value(metadata i32 %23, metadata !3978, metadata !DIExpression()), !dbg !3989
  %24 = icmp eq i32 %2, 0, !dbg !4012
  br i1 %24, label %29, label %25, !dbg !4013

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4014
  %27 = and i32 %26, %19, !dbg !4015
  %28 = icmp eq i32 %27, 0, !dbg !4015
  br i1 %28, label %29, label %49, !dbg !4016

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !4017
  %31 = icmp eq i32 %23, %30, !dbg !4018
  br i1 %31, label %59, label %32, !dbg !4019

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4020
  br i1 %33, label %34, label %36, !dbg !4021

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4022
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #25, !dbg !4024
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #25, !dbg !4025
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #25, !dbg !4026
  br label %59, !dbg !4027

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !4028
  br i1 %37, label %49, label %38, !dbg !4029

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !4030
  %40 = add i32 %39, %30, !dbg !4031
  %41 = icmp ult i32 %40, %23, !dbg !4032
  br i1 %41, label %49, label %42, !dbg !4033

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4034
  call void @llvm.dbg.value(metadata i32 %43, metadata !3979, metadata !DIExpression()), !dbg !4035
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !4036
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !4037
  %45 = icmp ult i32 %43, %44, !dbg !4039
  br i1 %45, label %46, label %48, !dbg !4040

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4041
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #25, !dbg !4043
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #25, !dbg !4044
  br label %48, !dbg !4045

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #25, !dbg !4046
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #25, !dbg !4047
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !4048
  call void @llvm.dbg.value(metadata i8* %50, metadata !3985, metadata !DIExpression()), !dbg !3989
  %51 = icmp eq i8* %50, null, !dbg !4049
  br i1 %51, label %59, label %52, !dbg !4050

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !4051, !range !3495
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #25, !dbg !4052
  %55 = sub i32 %54, %21, !dbg !4053
  call void @llvm.dbg.value(metadata i32 %55, metadata !3986, metadata !DIExpression()), !dbg !4054
  %56 = icmp ult i32 %55, %3, !dbg !4055
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4055
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #24, !dbg !4056
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !4057
  br label %59, !dbg !4058

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !3989
  ret i8* %60, !dbg !4059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4060 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4064, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %1, metadata !4065, metadata !DIExpression()), !dbg !4066
  %3 = shl i32 %1, 3, !dbg !4067
  %4 = add i32 %3, -4, !dbg !4068
  ret i32 %4, !dbg !4069
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4070 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4074, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i8* %1, metadata !4075, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i32 %2, metadata !4076, metadata !DIExpression()), !dbg !4085
  %4 = add i32 %2, -4, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %4, metadata !4076, metadata !DIExpression()), !dbg !4085
  %5 = ptrtoint i8* %1 to i32, !dbg !4087
  %6 = add i32 %5, 7, !dbg !4087
  %7 = and i32 %6, -8, !dbg !4087
  call void @llvm.dbg.value(metadata i32 %7, metadata !4077, metadata !DIExpression()), !dbg !4085
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4088
  %9 = ptrtoint i8* %8 to i32, !dbg !4088
  %10 = and i32 %9, -8, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %10, metadata !4078, metadata !DIExpression()), !dbg !4085
  %11 = sub i32 %10, %7, !dbg !4089
  %12 = lshr exact i32 %11, 3, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %12, metadata !4079, metadata !DIExpression()), !dbg !4085
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4091
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4080, metadata !DIExpression()), !dbg !4085
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4092
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4093
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4094
  store i32 %12, i32* %15, align 8, !dbg !4095
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4096
  store i32 0, i32* %16, align 4, !dbg !4097
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #25, !dbg !4098
  call void @llvm.dbg.value(metadata i32 %17, metadata !4081, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4085
  %18 = shl i32 %17, 2, !dbg !4099
  %19 = add i32 %18, 20, !dbg !4100
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #25, !dbg !4101
  call void @llvm.dbg.value(metadata i32 %20, metadata !4082, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i32 0, metadata !4083, metadata !DIExpression()), !dbg !4102
  %21 = icmp slt i32 %17, 0, !dbg !4103
  br i1 %21, label %22, label %24, !dbg !4105

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #25, !dbg !4106
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #25, !dbg !4107
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #25, !dbg !4108
  %23 = sub i32 %12, %20, !dbg !4109
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #25, !dbg !4110
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #25, !dbg !4111
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #25, !dbg !4112
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #25, !dbg !4113
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #25, !dbg !4114
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #25, !dbg !4115
  ret void, !dbg !4116

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4083, metadata !DIExpression()), !dbg !4102
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4117
  store i32 0, i32* %26, align 4, !dbg !4119
  %27 = add nuw i32 %25, 1, !dbg !4120
  call void @llvm.dbg.value(metadata i32 %27, metadata !4083, metadata !DIExpression()), !dbg !4102
  %28 = icmp eq i32 %25, %17, !dbg !4103
  br i1 %28, label %22, label %24, !dbg !4105, !llvm.loop !4121
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4123 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4136, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4133, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %1, metadata !4134, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %2, metadata !4135, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %4, metadata !4137, metadata !DIExpression()), !dbg !4264
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4265
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4265
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4138, metadata !DIExpression()), !dbg !4266
  call void @llvm.dbg.value(metadata i32 0, metadata !4142, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i1 undef, metadata !4144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4264
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4267

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4267

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4268
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4136, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %30, metadata !4135, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %29, metadata !4142, metadata !DIExpression()), !dbg !4264
  %31 = load i8, i8* %30, align 1, !dbg !4269
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4267

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4269
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4270
  call void @llvm.dbg.value(metadata i8* %34, metadata !4135, metadata !DIExpression()), !dbg !4264
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !4270
  call void @llvm.dbg.value(metadata i32 %35, metadata !4146, metadata !DIExpression()), !dbg !4271
  %36 = icmp slt i32 %35, 0, !dbg !4272
  %37 = add i32 %29, 1, !dbg !4270
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  br i1 %36, label %365, label %28, !llvm.loop !4274

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4276
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4151, metadata !DIExpression()), !dbg !4277
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4277
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4196, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4199, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %30, metadata !4202, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 -1, metadata !4203, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 -1, metadata !4204, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* null, metadata !4205, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %14, metadata !4206, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 0, metadata !4207, metadata !DIExpression()), !dbg !4278
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !4279
  call void @llvm.dbg.value(metadata i8* %39, metadata !4135, metadata !DIExpression()), !dbg !4264
  %40 = load i24, i24* %15, align 8, !dbg !4280
  %41 = and i24 %40, 256, !dbg !4280
  %42 = icmp eq i24 %41, 0, !dbg !4280
  br i1 %42, label %51, label %43, !dbg !4282

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4283
  call void @llvm.dbg.value(metadata i8* %44, metadata !4136, metadata !DIExpression()), !dbg !4264
  %45 = bitcast i8* %27 to i32*, !dbg !4283
  %46 = load i32, i32* %45, align 4, !dbg !4283
  call void @llvm.dbg.value(metadata i32 %46, metadata !4203, metadata !DIExpression()), !dbg !4278
  %47 = icmp slt i32 %46, 0, !dbg !4285
  br i1 %47, label %48, label %56, !dbg !4287

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4288
  store i24 %49, i24* %15, align 8, !dbg !4288
  %50 = sub nsw i32 0, %46, !dbg !4290
  call void @llvm.dbg.value(metadata i32 %50, metadata !4203, metadata !DIExpression()), !dbg !4278
  br label %56, !dbg !4291

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4292
  %53 = icmp eq i24 %52, 0, !dbg !4292
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4294
  br label %56, !dbg !4294

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4295
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4278
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4136, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %58, metadata !4203, metadata !DIExpression()), !dbg !4278
  %60 = and i24 %57, 1024, !dbg !4295
  %61 = icmp eq i24 %60, 0, !dbg !4295
  br i1 %61, label %69, label %62, !dbg !4296

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4297
  call void @llvm.dbg.value(metadata i8* %63, metadata !4136, metadata !DIExpression()), !dbg !4264
  %64 = bitcast i8* %59 to i32*, !dbg !4297
  %65 = load i32, i32* %64, align 4, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %65, metadata !4208, metadata !DIExpression()), !dbg !4298
  %66 = icmp slt i32 %65, 0, !dbg !4299
  br i1 %66, label %67, label %74, !dbg !4301

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4302
  store i24 %68, i24* %15, align 8, !dbg !4302
  br label %74, !dbg !4304

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4305
  %71 = icmp eq i24 %70, 0, !dbg !4305
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4307
  br label %74, !dbg !4307

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4308
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4278
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4278
  call void @llvm.dbg.value(metadata i8* %77, metadata !4136, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %76, metadata !4204, metadata !DIExpression()), !dbg !4278
  store i32 0, i32* %16, align 4, !dbg !4309
  store i32 0, i32* %17, align 8, !dbg !4310
  %78 = lshr i24 %75, 16, !dbg !4308
  call void @llvm.dbg.value(metadata i24 %78, metadata !4211, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4278
  %79 = lshr i24 %75, 11, !dbg !4311
  %80 = and i24 %79, 15, !dbg !4311
  %81 = zext i24 %80 to i32, !dbg !4311
  call void @llvm.dbg.value(metadata i32 %81, metadata !4212, metadata !DIExpression()), !dbg !4278
  %82 = trunc i24 %78 to i3, !dbg !4312
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4312

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4313

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4316
  call void @llvm.dbg.value(metadata i8* %85, metadata !4136, metadata !DIExpression()), !dbg !4264
  %86 = bitcast i8* %77 to i32*, !dbg !4316
  %87 = load i32, i32* %86, align 4, !dbg !4316
  %88 = sext i32 %87 to i64, !dbg !4316
  store i64 %88, i64* %20, align 8, !dbg !4318
  br label %115, !dbg !4319

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4320
  call void @llvm.dbg.value(metadata i8* %90, metadata !4136, metadata !DIExpression()), !dbg !4264
  %91 = bitcast i8* %77 to i32*, !dbg !4320
  %92 = load i32, i32* %91, align 4, !dbg !4320
  %93 = sext i32 %92 to i64, !dbg !4320
  store i64 %93, i64* %20, align 8, !dbg !4323
  br label %115, !dbg !4324

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4325
  %96 = add i32 %95, 7, !dbg !4325
  %97 = and i32 %96, -8, !dbg !4325
  %98 = inttoptr i32 %97 to i8*, !dbg !4325
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4325
  call void @llvm.dbg.value(metadata i8* %99, metadata !4136, metadata !DIExpression()), !dbg !4264
  %100 = inttoptr i32 %97 to i64*, !dbg !4325
  %101 = load i64, i64* %100, align 8, !dbg !4325
  store i64 %101, i64* %20, align 8, !dbg !4326
  br label %115, !dbg !4327

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4328
  %104 = add i32 %103, 7, !dbg !4328
  %105 = and i32 %104, -8, !dbg !4328
  %106 = inttoptr i32 %105 to i8*, !dbg !4328
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4328
  call void @llvm.dbg.value(metadata i8* %107, metadata !4136, metadata !DIExpression()), !dbg !4264
  %108 = inttoptr i32 %105 to i64*, !dbg !4328
  %109 = load i64, i64* %108, align 8, !dbg !4328
  store i64 %109, i64* %20, align 8, !dbg !4329
  br label %115, !dbg !4330

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4331
  call void @llvm.dbg.value(metadata i8* %111, metadata !4136, metadata !DIExpression()), !dbg !4264
  %112 = bitcast i8* %77 to i32*, !dbg !4331
  %113 = load i32, i32* %112, align 4, !dbg !4331
  %114 = sext i32 %113 to i64, !dbg !4332
  store i64 %114, i64* %20, align 8, !dbg !4333
  br label %115, !dbg !4334

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4335
  call void @llvm.dbg.value(metadata i8* %117, metadata !4136, metadata !DIExpression()), !dbg !4264
  %118 = trunc i24 %79 to i4, !dbg !4336
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4336

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4337
  %121 = ashr exact i64 %120, 56, !dbg !4337
  store i64 %121, i64* %20, align 8, !dbg !4340
  br label %177, !dbg !4341

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4342
  %124 = ashr exact i64 %123, 48, !dbg !4342
  store i64 %124, i64* %20, align 8, !dbg !4345
  br label %177, !dbg !4346

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4347

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4350
  call void @llvm.dbg.value(metadata i8* %127, metadata !4136, metadata !DIExpression()), !dbg !4264
  %128 = bitcast i8* %77 to i32*, !dbg !4350
  %129 = load i32, i32* %128, align 4, !dbg !4350
  %130 = zext i32 %129 to i64, !dbg !4350
  store i64 %130, i64* %20, align 8, !dbg !4352
  br label %157, !dbg !4353

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4354
  call void @llvm.dbg.value(metadata i8* %132, metadata !4136, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %132, metadata !4136, metadata !DIExpression()), !dbg !4264
  %133 = bitcast i8* %77 to i32*, !dbg !4354
  %134 = load i32, i32* %133, align 4, !dbg !4354
  %135 = zext i32 %134 to i64, !dbg !4354
  store i64 %135, i64* %20, align 8, !dbg !4354
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4356
  %138 = add i32 %137, 7, !dbg !4356
  %139 = and i32 %138, -8, !dbg !4356
  %140 = inttoptr i32 %139 to i8*, !dbg !4356
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4356
  call void @llvm.dbg.value(metadata i8* %141, metadata !4136, metadata !DIExpression()), !dbg !4264
  %142 = inttoptr i32 %139 to i64*, !dbg !4356
  %143 = load i64, i64* %142, align 8, !dbg !4356
  store i64 %143, i64* %20, align 8, !dbg !4357
  br label %157, !dbg !4358

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4359
  %146 = add i32 %145, 7, !dbg !4359
  %147 = and i32 %146, -8, !dbg !4359
  %148 = inttoptr i32 %147 to i8*, !dbg !4359
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4359
  call void @llvm.dbg.value(metadata i8* %149, metadata !4136, metadata !DIExpression()), !dbg !4264
  %150 = inttoptr i32 %147 to i64*, !dbg !4359
  %151 = load i64, i64* %150, align 8, !dbg !4359
  store i64 %151, i64* %20, align 8, !dbg !4360
  br label %157, !dbg !4361

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4362
  call void @llvm.dbg.value(metadata i8* %153, metadata !4136, metadata !DIExpression()), !dbg !4264
  %154 = bitcast i8* %77 to i32*, !dbg !4362
  %155 = load i32, i32* %154, align 4, !dbg !4362
  %156 = zext i32 %155 to i64, !dbg !4363
  store i64 %156, i64* %20, align 8, !dbg !4364
  br label %157, !dbg !4365

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4366
  call void @llvm.dbg.value(metadata i8* %159, metadata !4136, metadata !DIExpression()), !dbg !4264
  %160 = trunc i24 %79 to i4, !dbg !4367
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4367

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4368
  store i64 %162, i64* %20, align 8, !dbg !4371
  br label %177, !dbg !4372

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4373
  store i64 %164, i64* %20, align 8, !dbg !4376
  br label %177, !dbg !4377

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4378
  %167 = add i32 %166, 7, !dbg !4378
  %168 = and i32 %167, -8, !dbg !4378
  %169 = inttoptr i32 %168 to i8*, !dbg !4378
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4378
  call void @llvm.dbg.value(metadata i8* %170, metadata !4136, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %170, metadata !4136, metadata !DIExpression()), !dbg !4264
  %171 = inttoptr i32 %168 to double*, !dbg !4378
  %172 = load double, double* %171, align 8, !dbg !4378
  store double %172, double* %19, align 8, !dbg !4378
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4382
  call void @llvm.dbg.value(metadata i8* %174, metadata !4136, metadata !DIExpression()), !dbg !4264
  %175 = bitcast i8* %77 to i8**, !dbg !4382
  %176 = load i8*, i8** %175, align 4, !dbg !4382
  store i8* %176, i8** %18, align 8, !dbg !4385
  br label %177, !dbg !4386

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4278
  call void @llvm.dbg.value(metadata i8* %178, metadata !4136, metadata !DIExpression()), !dbg !4264
  %179 = and i24 %75, 3, !dbg !4387
  %180 = icmp eq i24 %179, 0, !dbg !4387
  br i1 %180, label %185, label %181, !dbg !4387

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !4388
  call void @llvm.dbg.value(metadata i32 %182, metadata !4213, metadata !DIExpression()), !dbg !4389
  %183 = icmp slt i32 %182, 0, !dbg !4390
  %184 = add i32 %182, %29, !dbg !4388
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4392
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4393

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !4394
  call void @llvm.dbg.value(metadata i32 %188, metadata !4217, metadata !DIExpression()), !dbg !4395
  %189 = icmp slt i32 %188, 0, !dbg !4396
  %190 = add i32 %29, 1, !dbg !4394
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4398
  call void @llvm.dbg.value(metadata i8* %192, metadata !4205, metadata !DIExpression()), !dbg !4278
  %193 = icmp sgt i32 %76, -1, !dbg !4399
  br i1 %193, label %194, label %196, !dbg !4401

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !4402
  call void @llvm.dbg.value(metadata i32 %195, metadata !4220, metadata !DIExpression()), !dbg !4404
  br label %241, !dbg !4405

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %197, metadata !4220, metadata !DIExpression()), !dbg !4404
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4205, metadata !DIExpression()), !dbg !4278
  %199 = load i64, i64* %20, align 8, !dbg !4408
  %200 = trunc i64 %199 to i8, !dbg !4409
  store i8 %200, i8* %10, align 1, !dbg !4410
  call void @llvm.dbg.value(metadata i8* %23, metadata !4206, metadata !DIExpression()), !dbg !4278
  br label %245, !dbg !4411

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4412
  %203 = icmp eq i24 %202, 0, !dbg !4412
  %204 = trunc i24 %75 to i8, !dbg !4414
  %205 = shl i8 %204, 1, !dbg !4414
  %206 = and i8 %205, 32, !dbg !4414
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4414
  call void @llvm.dbg.value(metadata i8 %207, metadata !4207, metadata !DIExpression()), !dbg !4278
  %208 = load i64, i64* %20, align 8, !dbg !4415
  call void @llvm.dbg.value(metadata i64 %208, metadata !4143, metadata !DIExpression()), !dbg !4264
  %209 = icmp slt i64 %208, 0, !dbg !4416
  br i1 %209, label %210, label %212, !dbg !4418

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4207, metadata !DIExpression()), !dbg !4278
  %211 = sub nsw i64 0, %208, !dbg !4419
  store i64 %211, i64* %20, align 8, !dbg !4421
  br label %212, !dbg !4422

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4278
  call void @llvm.dbg.value(metadata i8 %213, metadata !4207, metadata !DIExpression()), !dbg !4278
  %214 = load i64, i64* %20, align 8, !dbg !4423
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4424
  call void @llvm.dbg.value(metadata i8* %215, metadata !4205, metadata !DIExpression()), !dbg !4278
  br label %216, !dbg !4425

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4426
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4427
  call void @llvm.dbg.value(metadata i8* %218, metadata !4205, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 %217, metadata !4207, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.label(metadata !4263), !dbg !4428
  %219 = icmp sgt i32 %76, -1, !dbg !4429
  br i1 %219, label %222, label %220, !dbg !4430

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4431
  br label %245, !dbg !4430

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4433
  %224 = sub i32 %22, %223, !dbg !4433
  call void @llvm.dbg.value(metadata i32 %224, metadata !4222, metadata !DIExpression()), !dbg !4434
  %225 = load i24, i24* %15, align 8, !dbg !4435
  %226 = and i24 %225, -65, !dbg !4435
  store i24 %226, i24* %15, align 8, !dbg !4435
  %227 = icmp ugt i32 %76, %224, !dbg !4436
  br i1 %227, label %228, label %245, !dbg !4438

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4439
  store i32 %229, i32* %16, align 4, !dbg !4441
  br label %245, !dbg !4442

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4443
  %232 = icmp eq i8* %231, null, !dbg !4445
  br i1 %232, label %245, label %233, !dbg !4446

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4447
  %235 = zext i32 %234 to i64, !dbg !4447
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4449
  call void @llvm.dbg.value(metadata i8* %236, metadata !4205, metadata !DIExpression()), !dbg !4278
  %237 = load i24, i24* %15, align 8, !dbg !4450
  %238 = or i24 %237, 1048576, !dbg !4450
  store i24 %238, i24* %15, align 8, !dbg !4450
  store i8 120, i8* %21, align 1, !dbg !4451
  br label %216, !dbg !4452

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4453
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !4456
  br label %363, !dbg !4457

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4458
  call void @llvm.dbg.value(metadata i32 %242, metadata !4220, metadata !DIExpression()), !dbg !4404
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4459
  call void @llvm.dbg.value(metadata i32 -1, metadata !4204, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %29, metadata !4142, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %192, metadata !4205, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %243, metadata !4206, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 0, metadata !4207, metadata !DIExpression()), !dbg !4278
  %244 = icmp eq i8* %192, null, !dbg !4460
  br i1 %244, label %363, label %245, !dbg !4462, !llvm.loop !4274

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4431
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4278
  call void @llvm.dbg.value(metadata i32 0, metadata !4226, metadata !DIExpression()), !dbg !4278
  %250 = zext i8 %249 to i32, !dbg !4463
  %251 = icmp eq i8 %249, 0, !dbg !4465
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  call void @llvm.dbg.value(metadata i32 undef, metadata !4225, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  call void @llvm.dbg.value(metadata i32 undef, metadata !4225, metadata !DIExpression()), !dbg !4278
  %252 = icmp sgt i32 %58, 0, !dbg !4466
  br i1 %252, label %253, label %302, !dbg !4467

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4431
  %255 = icmp eq i24 %254, 0, !dbg !4431
  %256 = ptrtoint i8* %248 to i32, !dbg !4468
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  %257 = ptrtoint i8* %247 to i32, !dbg !4468
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  %258 = xor i1 %251, true, !dbg !4469
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  %259 = sext i1 %258 to i32, !dbg !4469
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  %260 = lshr i24 %246, 19, !dbg !4470
  %261 = and i24 %260, 1, !dbg !4470
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4470
  %263 = zext i24 %262 to i32, !dbg !4470
  %264 = add i32 %257, %259, !dbg !4470
  %265 = add i32 %256, %263, !dbg !4470
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  %266 = and i24 %246, 4194304, !dbg !4471
  %267 = icmp eq i24 %266, 0, !dbg !4471
  %268 = load i32, i32* %16, align 4, !dbg !4473
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  call void @llvm.dbg.value(metadata i32 undef, metadata !4225, metadata !DIExpression()), !dbg !4278
  %269 = load i32, i32* %17, align 8, !dbg !4474
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4474
  call void @llvm.dbg.value(metadata i32 undef, metadata !4225, metadata !DIExpression()), !dbg !4278
  %271 = add i32 %264, %58, !dbg !4474
  %272 = add i32 %265, %268, !dbg !4474
  %273 = add i32 %272, %270, !dbg !4475
  %274 = sub i32 %271, %273, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %274, metadata !4203, metadata !DIExpression()), !dbg !4278
  %275 = and i24 %246, 4, !dbg !4476
  %276 = icmp eq i24 %275, 0, !dbg !4476
  br i1 %276, label %277, label %302, !dbg !4477

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4227, metadata !DIExpression()), !dbg !4478
  %278 = and i24 %246, 64, !dbg !4479
  %279 = icmp eq i24 %278, 0, !dbg !4479
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4480
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4480
  %282 = select i1 %279, i32 32, i32 48, !dbg !4480
  br i1 %280, label %287, label %283, !dbg !4480

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !4481
  call void @llvm.dbg.value(metadata i32 %284, metadata !4232, metadata !DIExpression()), !dbg !4482
  %285 = icmp slt i32 %284, 0, !dbg !4483
  %286 = add i32 %29, 1, !dbg !4481
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4278
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4268
  call void @llvm.dbg.value(metadata i32 %290, metadata !4142, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8 undef, metadata !4227, metadata !DIExpression()), !dbg !4478
  call void @llvm.dbg.value(metadata i8 %288, metadata !4207, metadata !DIExpression()), !dbg !4278
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4485
  %292 = add i32 %291, -1, !dbg !4485
  br label %293, !dbg !4485

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4486
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4268
  call void @llvm.dbg.value(metadata i32 %295, metadata !4142, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %294, metadata !4203, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %294, metadata !4203, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4278
  %296 = icmp sgt i32 %294, 0, !dbg !4487
  br i1 %296, label %297, label %302, !dbg !4485

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4488
  call void @llvm.dbg.value(metadata i32 %298, metadata !4203, metadata !DIExpression()), !dbg !4278
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !4489
  call void @llvm.dbg.value(metadata i32 %299, metadata !4238, metadata !DIExpression()), !dbg !4490
  %300 = icmp slt i32 %299, 0, !dbg !4491
  %301 = add i32 %295, 1, !dbg !4489
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  br i1 %300, label %361, label %293, !llvm.loop !4493

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4278
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4278
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4268
  call void @llvm.dbg.value(metadata i32 %305, metadata !4142, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %304, metadata !4203, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 %303, metadata !4207, metadata !DIExpression()), !dbg !4278
  %306 = icmp eq i8 %303, 0, !dbg !4495
  br i1 %306, label %312, label %307, !dbg !4496

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4497
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !4498
  call void @llvm.dbg.value(metadata i32 %309, metadata !4241, metadata !DIExpression()), !dbg !4499
  %310 = icmp slt i32 %309, 0, !dbg !4500
  %311 = add i32 %305, 1, !dbg !4498
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4268
  call void @llvm.dbg.value(metadata i32 %313, metadata !4142, metadata !DIExpression()), !dbg !4264
  %314 = lshr i24 %246, 20, !dbg !4502
  %315 = lshr i24 %246, 19, !dbg !4503
  %316 = or i24 %314, %315, !dbg !4504
  %317 = and i24 %316, 1, !dbg !4504
  %318 = icmp eq i24 %317, 0, !dbg !4504
  br i1 %318, label %323, label %319, !dbg !4505

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4506
  call void @llvm.dbg.value(metadata i32 %320, metadata !4245, metadata !DIExpression()), !dbg !4507
  %321 = icmp slt i32 %320, 0, !dbg !4508
  %322 = add i32 %313, 1, !dbg !4506
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4268
  call void @llvm.dbg.value(metadata i32 %324, metadata !4142, metadata !DIExpression()), !dbg !4264
  %325 = and i24 %246, 1048576, !dbg !4510
  %326 = icmp eq i24 %325, 0, !dbg !4510
  br i1 %326, label %333, label %327, !dbg !4511

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4512
  %329 = zext i8 %328 to i32, !dbg !4512
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !4512
  call void @llvm.dbg.value(metadata i32 %330, metadata !4251, metadata !DIExpression()), !dbg !4513
  %331 = icmp slt i32 %330, 0, !dbg !4514
  %332 = add i32 %324, 1, !dbg !4512
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4268
  call void @llvm.dbg.value(metadata i32 %334, metadata !4142, metadata !DIExpression()), !dbg !4264
  %335 = load i32, i32* %16, align 4, !dbg !4516
  call void @llvm.dbg.value(metadata i32 %335, metadata !4226, metadata !DIExpression()), !dbg !4278
  br label %336, !dbg !4517

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4518
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4268
  call void @llvm.dbg.value(metadata i32 %338, metadata !4142, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %337, metadata !4226, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4278
  %339 = icmp sgt i32 %337, 0, !dbg !4519
  br i1 %339, label %340, label %345, !dbg !4517

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4520
  call void @llvm.dbg.value(metadata i32 %341, metadata !4226, metadata !DIExpression()), !dbg !4278
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %342, metadata !4255, metadata !DIExpression()), !dbg !4522
  %343 = icmp slt i32 %342, 0, !dbg !4523
  %344 = add i32 %338, 1, !dbg !4521
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  br i1 %343, label %361, label %336, !llvm.loop !4525

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !4527
  call void @llvm.dbg.value(metadata i32 %346, metadata !4258, metadata !DIExpression()), !dbg !4528
  %347 = icmp slt i32 %346, 0, !dbg !4529
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4527
  call void @llvm.dbg.value(metadata i32 %349, metadata !4142, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %304, metadata !4203, metadata !DIExpression()), !dbg !4278
  %350 = icmp sgt i32 %304, 0, !dbg !4531
  br i1 %350, label %351, label %363, !dbg !4532

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4532
  %353 = add i32 %352, %338, !dbg !4532
  br label %354, !dbg !4532

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %355, metadata !4203, metadata !DIExpression()), !dbg !4278
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !4533
  call void @llvm.dbg.value(metadata i32 %356, metadata !4260, metadata !DIExpression()), !dbg !4534
  %357 = icmp slt i32 %356, 0, !dbg !4535
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4537
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %359, metadata !4203, metadata !DIExpression()), !dbg !4278
  %360 = icmp sgt i32 %355, 1, !dbg !4531
  br i1 %360, label %354, label %363, !dbg !4532, !llvm.loop !4538

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4142, metadata !DIExpression()), !dbg !4264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4275
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4268
  call void @llvm.dbg.value(metadata i32 %364, metadata !4142, metadata !DIExpression()), !dbg !4264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4275
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4264
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4540
  ret i32 %366, !dbg !4540
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4541 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4545, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i8* %1, metadata !4546, metadata !DIExpression()), !dbg !4547
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4548
  store i24 0, i24* %3, align 4, !dbg !4548
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4548
  store i8 0, i8* %4, align 1, !dbg !4548
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4548
  store i32 0, i32* %5, align 4, !dbg !4548
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4548
  store i32 0, i32* %6, align 4, !dbg !4548
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4549
  call void @llvm.dbg.value(metadata i8* %7, metadata !4546, metadata !DIExpression()), !dbg !4547
  %8 = load i8, i8* %7, align 1, !dbg !4550
  %9 = icmp eq i8 %8, 37, !dbg !4552
  br i1 %9, label %10, label %12, !dbg !4553

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4554
  call void @llvm.dbg.value(metadata i8* %11, metadata !4546, metadata !DIExpression()), !dbg !4547
  store i8 37, i8* %4, align 1, !dbg !4556
  br label %18, !dbg !4557

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !4558
  call void @llvm.dbg.value(metadata i8* %13, metadata !4546, metadata !DIExpression()), !dbg !4547
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !4559
  call void @llvm.dbg.value(metadata i8* %14, metadata !4546, metadata !DIExpression()), !dbg !4547
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !4560
  call void @llvm.dbg.value(metadata i8* %15, metadata !4546, metadata !DIExpression()), !dbg !4547
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !4561
  call void @llvm.dbg.value(metadata i8* %16, metadata !4546, metadata !DIExpression()), !dbg !4547
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !4562
  call void @llvm.dbg.value(metadata i8* %17, metadata !4546, metadata !DIExpression()), !dbg !4547
  br label %18, !dbg !4563

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4547
  ret i8* %19, !dbg !4564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4565 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4569, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %1, metadata !4570, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %2, metadata !4571, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %3, metadata !4572, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 0, metadata !4573, metadata !DIExpression()), !dbg !4576
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4577

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4578
  call void @llvm.dbg.value(metadata i32 %9, metadata !4573, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %8, metadata !4571, metadata !DIExpression()), !dbg !4576
  %10 = icmp ult i8* %8, %3, !dbg !4579
  br i1 %10, label %11, label %13, !dbg !4580

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4581
  br label %17, !dbg !4580

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4582

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4583
  %16 = icmp eq i8 %15, 0, !dbg !4582
  br i1 %16, label %24, label %17, !dbg !4577

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4581
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4584
  call void @llvm.dbg.value(metadata i8* %19, metadata !4571, metadata !DIExpression()), !dbg !4576
  %20 = zext i8 %18 to i32, !dbg !4585
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !4586
  call void @llvm.dbg.value(metadata i32 %21, metadata !4574, metadata !DIExpression()), !dbg !4587
  %22 = icmp slt i32 %21, 0, !dbg !4588
  %23 = add i32 %9, 1, !dbg !4590
  call void @llvm.dbg.value(metadata i32 undef, metadata !4573, metadata !DIExpression()), !dbg !4576
  br i1 %22, label %24, label %7, !llvm.loop !4591

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4576
  ret i32 %25, !dbg !4593
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4594 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4598, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4599, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8* %2, metadata !4600, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8* %3, metadata !4601, metadata !DIExpression()), !dbg !4608
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4609
  %6 = load i8, i8* %5, align 1, !dbg !4609
  %7 = zext i8 %6 to i32, !dbg !4610
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !4611
  %9 = icmp eq i32 %8, 0, !dbg !4611
  call void @llvm.dbg.value(metadata i1 %9, metadata !4602, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4608
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !4612
  call void @llvm.dbg.value(metadata i32 %10, metadata !4603, metadata !DIExpression()), !dbg !4608
  %11 = ptrtoint i8* %3 to i32, !dbg !4613
  %12 = ptrtoint i8* %2 to i32, !dbg !4613
  %13 = sub i32 %11, %12, !dbg !4613
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4614
  call void @llvm.dbg.value(metadata i8* %14, metadata !4605, metadata !DIExpression()), !dbg !4608
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4615

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4608
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4598, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8* %18, metadata !4605, metadata !DIExpression()), !dbg !4608
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4616
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %25, metadata !4606, metadata !DIExpression()), !dbg !4618
  %26 = icmp ult i32 %25, 10, !dbg !4619
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4620
  %28 = add i32 %27, %25, !dbg !4618
  %29 = trunc i32 %28 to i8, !dbg !4620
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4621
  call void @llvm.dbg.value(metadata i8* %30, metadata !4605, metadata !DIExpression()), !dbg !4608
  store i8 %29, i8* %30, align 1, !dbg !4622
  call void @llvm.dbg.value(metadata i64 %22, metadata !4598, metadata !DIExpression()), !dbg !4608
  %31 = icmp uge i64 %19, %15, !dbg !4623
  %32 = icmp ugt i8* %30, %2, !dbg !4624
  %33 = and i1 %31, %32, !dbg !4624
  br i1 %33, label %17, label %34, !dbg !4625, !llvm.loop !4626

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4628
  %36 = load i24, i24* %35, align 4, !dbg !4628
  %37 = and i24 %36, 32, !dbg !4628
  %38 = icmp eq i24 %37, 0, !dbg !4628
  br i1 %38, label %44, label %39, !dbg !4630

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4631

40:                                               ; preds = %39
  br label %41, !dbg !4633

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4637
  store i24 %43, i24* %35, align 4, !dbg !4637
  br label %44, !dbg !4638

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4638
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4639 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4645, metadata !DIExpression()), !dbg !4648
  call void @llvm.dbg.value(metadata i8* %1, metadata !4646, metadata !DIExpression()), !dbg !4648
  call void @llvm.dbg.value(metadata i32 %2, metadata !4647, metadata !DIExpression()), !dbg !4648
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4649
  %5 = load i24, i24* %4, align 4, !dbg !4649
  %6 = lshr i24 %5, 11, !dbg !4649
  %7 = and i24 %6, 15, !dbg !4649
  %8 = zext i24 %7 to i32, !dbg !4649
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4650

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4651
  store i32 %2, i32* %10, align 4, !dbg !4653
  br label %28, !dbg !4654

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4655
  store i8 %12, i8* %1, align 1, !dbg !4656
  br label %28, !dbg !4657

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4658
  %15 = bitcast i8* %1 to i16*, !dbg !4659
  store i16 %14, i16* %15, align 2, !dbg !4660
  br label %28, !dbg !4661

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4662
  store i32 %2, i32* %17, align 4, !dbg !4663
  br label %28, !dbg !4664

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4665
  %20 = bitcast i8* %1 to i64*, !dbg !4666
  store i64 %19, i64* %20, align 8, !dbg !4667
  br label %28, !dbg !4668

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4669
  %23 = bitcast i8* %1 to i64*, !dbg !4670
  store i64 %22, i64* %23, align 8, !dbg !4671
  br label %28, !dbg !4672

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4673
  store i32 %2, i32* %25, align 4, !dbg !4674
  br label %28, !dbg !4675

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4676
  store i32 %2, i32* %27, align 4, !dbg !4677
  br label %28, !dbg !4678

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4679
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4683, metadata !DIExpression()), !dbg !4684
  %2 = add i32 %0, -65, !dbg !4685
  %3 = icmp ult i32 %2, 26, !dbg !4686
  %4 = zext i1 %3 to i32, !dbg !4686
  ret i32 %4, !dbg !4687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4688 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4692, metadata !DIExpression()), !dbg !4693
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4694

2:                                                ; preds = %1
  br label %4, !dbg !4695

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4697

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4698
  ret i32 %5, !dbg !4699
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !4700 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4702, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8* %1, metadata !4703, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8 1, metadata !4704, metadata !DIExpression()), !dbg !4705
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4706

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4704, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8* %5, metadata !4703, metadata !DIExpression()), !dbg !4705
  %6 = load i8, i8* %5, align 1, !dbg !4707
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4709

7:                                                ; preds = %4
  br label %11, !dbg !4710

8:                                                ; preds = %4
  br label %11, !dbg !4712

9:                                                ; preds = %4
  br label %11, !dbg !4713

10:                                               ; preds = %4
  br label %11, !dbg !4714

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4715
  %14 = or i24 %13, %12, !dbg !4715
  store i24 %14, i24* %3, align 4, !dbg !4715
  call void @llvm.dbg.value(metadata i8 poison, metadata !4704, metadata !DIExpression()), !dbg !4705
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4703, metadata !DIExpression()), !dbg !4705
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4704, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8* %15, metadata !4703, metadata !DIExpression()), !dbg !4705
  %17 = load i24, i24* %3, align 4, !dbg !4716
  %18 = and i24 %17, 68, !dbg !4718
  %19 = icmp eq i24 %18, 68, !dbg !4718
  br i1 %19, label %20, label %22, !dbg !4718

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4719
  store i24 %21, i24* %3, align 4, !dbg !4719
  br label %22, !dbg !4721

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4722
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4723 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4725, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8* %1, metadata !4726, metadata !DIExpression()), !dbg !4729
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4730
  %5 = load i24, i24* %4, align 4, !dbg !4731
  %6 = or i24 %5, 128, !dbg !4731
  store i24 %6, i24* %4, align 4, !dbg !4731
  call void @llvm.dbg.value(metadata i8* %1, metadata !4726, metadata !DIExpression()), !dbg !4729
  %7 = load i8, i8* %1, align 1, !dbg !4732
  %8 = icmp eq i8 %7, 42, !dbg !4734
  br i1 %8, label %9, label %12, !dbg !4735

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4736
  store i24 %10, i24* %4, align 4, !dbg !4736
  call void @llvm.dbg.value(metadata i8* %1, metadata !4726, metadata !DIExpression()), !dbg !4729
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4738
  call void @llvm.dbg.value(metadata i8* %11, metadata !4726, metadata !DIExpression()), !dbg !4729
  store i8* %11, i8** %3, align 4, !dbg !4738
  br label %29, !dbg !4739

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4727, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8** %3, metadata !4726, metadata !DIExpression(DW_OP_deref)), !dbg !4729
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %13, metadata !4728, metadata !DIExpression()), !dbg !4729
  %14 = load i8*, i8** %3, align 4, !dbg !4741
  call void @llvm.dbg.value(metadata i8* %14, metadata !4726, metadata !DIExpression()), !dbg !4729
  %15 = icmp eq i8* %14, %1, !dbg !4743
  br i1 %15, label %29, label %16, !dbg !4744

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4745
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4747
  store i32 %13, i32* %18, align 4, !dbg !4748
  %19 = lshr i32 %13, 31, !dbg !4749
  %20 = lshr i24 %17, 1, !dbg !4750
  %21 = and i24 %20, 1, !dbg !4750
  %22 = zext i24 %21 to i32, !dbg !4750
  %23 = or i32 %19, %22, !dbg !4750
  %24 = trunc i32 %23 to i24, !dbg !4750
  %25 = shl nuw nsw i24 %24, 1, !dbg !4750
  %26 = and i24 %17, -131, !dbg !4750
  %27 = or i24 %26, 128, !dbg !4750
  %28 = or i24 %25, %27, !dbg !4750
  store i24 %28, i24* %4, align 4, !dbg !4750
  br label %29, !dbg !4751

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4729
  ret i8* %30, !dbg !4752
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4753 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4755, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.value(metadata i8* %1, metadata !4756, metadata !DIExpression()), !dbg !4758
  %4 = load i8, i8* %1, align 1, !dbg !4759
  %5 = icmp eq i8 %4, 46, !dbg !4760
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4761
  %7 = load i24, i24* %6, align 4, !dbg !4762
  %8 = select i1 %5, i24 512, i24 0, !dbg !4762
  %9 = and i24 %7, -513, !dbg !4762
  %10 = or i24 %9, %8, !dbg !4762
  store i24 %10, i24* %6, align 4, !dbg !4762
  br i1 %5, label %11, label %32, !dbg !4763

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4756, metadata !DIExpression()), !dbg !4758
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4764
  call void @llvm.dbg.value(metadata i8* %12, metadata !4756, metadata !DIExpression()), !dbg !4758
  store i8* %12, i8** %3, align 4, !dbg !4764
  %13 = load i8, i8* %12, align 1, !dbg !4765
  %14 = icmp eq i8 %13, 42, !dbg !4767
  br i1 %14, label %15, label %18, !dbg !4768

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4769
  store i24 %16, i24* %6, align 4, !dbg !4769
  call void @llvm.dbg.value(metadata i8* %12, metadata !4756, metadata !DIExpression()), !dbg !4758
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4771
  call void @llvm.dbg.value(metadata i8* %17, metadata !4756, metadata !DIExpression()), !dbg !4758
  store i8* %17, i8** %3, align 4, !dbg !4771
  br label %32, !dbg !4772

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4756, metadata !DIExpression(DW_OP_deref)), !dbg !4758
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %19, metadata !4757, metadata !DIExpression()), !dbg !4758
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4774
  store i32 %19, i32* %20, align 4, !dbg !4775
  %21 = lshr i32 %19, 31, !dbg !4776
  %22 = load i24, i24* %6, align 4, !dbg !4777
  %23 = lshr i24 %22, 1, !dbg !4777
  %24 = and i24 %23, 1, !dbg !4777
  %25 = zext i24 %24 to i32, !dbg !4777
  %26 = or i32 %21, %25, !dbg !4777
  %27 = trunc i32 %26 to i24, !dbg !4777
  %28 = shl nuw nsw i24 %27, 1, !dbg !4777
  %29 = and i24 %22, -3, !dbg !4777
  %30 = or i24 %28, %29, !dbg !4777
  store i24 %30, i24* %6, align 4, !dbg !4777
  %31 = load i8*, i8** %3, align 4, !dbg !4778
  call void @llvm.dbg.value(metadata i8* %31, metadata !4756, metadata !DIExpression()), !dbg !4758
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4758
  ret i8* %33, !dbg !4779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4780 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4782, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8* %1, metadata !4783, metadata !DIExpression()), !dbg !4784
  %3 = load i8, i8* %1, align 1, !dbg !4785
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4786

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4787
  call void @llvm.dbg.value(metadata i8* %5, metadata !4783, metadata !DIExpression()), !dbg !4784
  %6 = load i8, i8* %5, align 1, !dbg !4790
  %7 = icmp eq i8 %6, 104, !dbg !4791
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4792
  %9 = load i24, i24* %8, align 4, !dbg !4792
  %10 = and i24 %9, -30721, !dbg !4792
  br i1 %7, label %11, label %14, !dbg !4793

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4794
  store i24 %12, i24* %8, align 4, !dbg !4794
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4796
  call void @llvm.dbg.value(metadata i8* %13, metadata !4783, metadata !DIExpression()), !dbg !4784
  br label %56, !dbg !4797

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4798
  store i24 %15, i24* %8, align 4, !dbg !4798
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4800
  call void @llvm.dbg.value(metadata i8* %17, metadata !4783, metadata !DIExpression()), !dbg !4784
  %18 = load i8, i8* %17, align 1, !dbg !4802
  %19 = icmp eq i8 %18, 108, !dbg !4803
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4804
  %21 = load i24, i24* %20, align 4, !dbg !4804
  %22 = and i24 %21, -30721, !dbg !4804
  br i1 %19, label %23, label %26, !dbg !4805

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4806
  store i24 %24, i24* %20, align 4, !dbg !4806
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4808
  call void @llvm.dbg.value(metadata i8* %25, metadata !4783, metadata !DIExpression()), !dbg !4784
  br label %56, !dbg !4809

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4810
  store i24 %27, i24* %20, align 4, !dbg !4810
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4812
  %30 = load i24, i24* %29, align 4, !dbg !4813
  %31 = and i24 %30, -30721, !dbg !4813
  %32 = or i24 %31, 10240, !dbg !4813
  store i24 %32, i24* %29, align 4, !dbg !4813
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4814
  call void @llvm.dbg.value(metadata i8* %33, metadata !4783, metadata !DIExpression()), !dbg !4784
  br label %56, !dbg !4815

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4816
  %36 = load i24, i24* %35, align 4, !dbg !4817
  %37 = and i24 %36, -30721, !dbg !4817
  %38 = or i24 %37, 12288, !dbg !4817
  store i24 %38, i24* %35, align 4, !dbg !4817
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4818
  call void @llvm.dbg.value(metadata i8* %39, metadata !4783, metadata !DIExpression()), !dbg !4784
  br label %56, !dbg !4819

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4820
  %42 = load i24, i24* %41, align 4, !dbg !4821
  %43 = and i24 %42, -30721, !dbg !4821
  %44 = or i24 %43, 14336, !dbg !4821
  store i24 %44, i24* %41, align 4, !dbg !4821
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4822
  call void @llvm.dbg.value(metadata i8* %45, metadata !4783, metadata !DIExpression()), !dbg !4784
  br label %56, !dbg !4823

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4824
  %48 = load i24, i24* %47, align 4, !dbg !4825
  %49 = and i24 %48, -30723, !dbg !4825
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4826
  call void @llvm.dbg.value(metadata i8* %50, metadata !4783, metadata !DIExpression()), !dbg !4784
  %51 = or i24 %49, 16386, !dbg !4827
  store i24 %51, i24* %47, align 4, !dbg !4827
  br label %56, !dbg !4828

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4829
  %54 = load i24, i24* %53, align 4, !dbg !4830
  %55 = and i24 %54, -30721, !dbg !4830
  store i24 %55, i24* %53, align 4, !dbg !4830
  br label %56, !dbg !4831

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4783, metadata !DIExpression()), !dbg !4784
  ret i8* %57, !dbg !4832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4833 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4835, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8* %1, metadata !4836, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8 0, metadata !4837, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8* %1, metadata !4836, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4840
  %3 = load i8, i8* %1, align 1, !dbg !4841
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4842
  store i8 %3, i8* %4, align 1, !dbg !4843
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4844

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4845

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4846
  %9 = load i24, i24* %8, align 4, !dbg !4846
  %10 = and i24 %9, -458753, !dbg !4846
  %11 = or i24 %10, %7, !dbg !4846
  call void @llvm.dbg.label(metadata !4838), !dbg !4847
  %12 = and i24 %9, 30720, !dbg !4848
  %13 = icmp eq i24 %12, 16384, !dbg !4848
  %14 = zext i1 %13 to i24, !dbg !4850
  %15 = or i24 %11, %14, !dbg !4850
  %16 = icmp eq i8 %3, 99, !dbg !4851
  br i1 %16, label %17, label %43, !dbg !4853

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4854
  %19 = icmp ne i24 %18, 0, !dbg !4854
  call void @llvm.dbg.value(metadata i1 %19, metadata !4837, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4840
  br label %43, !dbg !4856

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4857
  %22 = load i24, i24* %21, align 4, !dbg !4858
  %23 = and i24 %22, -458753, !dbg !4858
  %24 = or i24 %23, 262144, !dbg !4858
  call void @llvm.dbg.value(metadata i8 1, metadata !4837, metadata !DIExpression()), !dbg !4840
  br label %43, !dbg !4859

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4862
  %27 = load i24, i24* %26, align 4, !dbg !4863
  %28 = and i24 %27, -458753, !dbg !4863
  %29 = or i24 %28, 196608, !dbg !4863
  %30 = and i24 %27, 30720, !dbg !4864
  %31 = icmp eq i24 %30, 16384, !dbg !4864
  br label %43, !dbg !4866

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4867
  %34 = load i24, i24* %33, align 4, !dbg !4868
  %35 = and i24 %34, -458753, !dbg !4868
  %36 = or i24 %35, 196608, !dbg !4868
  %37 = and i24 %34, 30720, !dbg !4869
  %38 = icmp ne i24 %37, 0, !dbg !4869
  br label %43, !dbg !4871

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4872
  %41 = load i24, i24* %40, align 4, !dbg !4873
  %42 = or i24 %41, 1, !dbg !4873
  br label %43, !dbg !4874

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4875
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4876
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4877
  call void @llvm.dbg.value(metadata i8* %48, metadata !4836, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8 poison, metadata !4837, metadata !DIExpression()), !dbg !4840
  %49 = lshr i24 %44, 1, !dbg !4875
  %50 = and i24 %49, 1, !dbg !4875
  %51 = zext i24 %50 to i32, !dbg !4875
  %52 = or i32 %51, %47, !dbg !4875
  %53 = trunc i32 %52 to i24, !dbg !4875
  %54 = shl nuw nsw i24 %53, 1, !dbg !4875
  %55 = and i24 %44, -3, !dbg !4875
  %56 = or i24 %54, %55, !dbg !4875
  store i24 %56, i24* %46, align 4, !dbg !4875
  ret i8* %48, !dbg !4878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !4879 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4884, metadata !DIExpression()), !dbg !4887
  %2 = load i8*, i8** %0, align 4, !dbg !4888
  call void @llvm.dbg.value(metadata i8* %2, metadata !4885, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.value(metadata i32 0, metadata !4886, metadata !DIExpression()), !dbg !4887
  %3 = load i8, i8* %2, align 1, !dbg !4889
  %4 = zext i8 %3 to i32, !dbg !4890
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !4891
  %6 = icmp eq i32 %5, 0, !dbg !4892
  br i1 %6, label %19, label %7, !dbg !4892

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4886, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.value(metadata i8* %10, metadata !4885, metadata !DIExpression()), !dbg !4887
  %11 = mul i32 %9, 10, !dbg !4893
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4895
  call void @llvm.dbg.value(metadata i8* %12, metadata !4885, metadata !DIExpression()), !dbg !4887
  %13 = add i32 %11, -48, !dbg !4896
  %14 = add i32 %13, %8, !dbg !4897
  call void @llvm.dbg.value(metadata i32 %14, metadata !4886, metadata !DIExpression()), !dbg !4887
  %15 = load i8, i8* %12, align 1, !dbg !4889
  %16 = zext i8 %15 to i32, !dbg !4890
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !4891
  %18 = icmp eq i32 %17, 0, !dbg !4892
  br i1 %18, label %19, label %7, !dbg !4892, !llvm.loop !4898

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4887
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4887
  store i8* %20, i8** %0, align 4, !dbg !4900
  ret i32 %21, !dbg !4901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !4902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4904, metadata !DIExpression()), !dbg !4905
  %2 = add i32 %0, -48, !dbg !4906
  %3 = icmp ult i32 %2, 10, !dbg !4907
  %4 = zext i1 %3 to i32, !dbg !4907
  ret i32 %4, !dbg !4908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4909 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4911, !srcloc !4912
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4913, !srcloc !4914
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #23, !dbg !4915, !srcloc !4916
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4917, !srcloc !4918
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4919, !srcloc !4920
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4921, !srcloc !4922
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4923, !srcloc !4924
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4925, !srcloc !4926
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4927, !srcloc !4928
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4929, !srcloc !4930
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4931, !srcloc !4932
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4933, !srcloc !4934
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4935, !srcloc !4936
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #23, !dbg !4937, !srcloc !4938
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4939, !srcloc !4940
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4941, !srcloc !4942
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4943, !srcloc !4944
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4945, !srcloc !4946
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4947, !srcloc !4948
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4949, !srcloc !4950
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4951, !srcloc !4952
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #23, !dbg !4953, !srcloc !4954
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4955, !srcloc !4956
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4957, !srcloc !4958
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4959, !srcloc !4960
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4961, !srcloc !4962
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4963, !srcloc !4964
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #23, !dbg !4965, !srcloc !4966
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4967, !srcloc !4968
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4969, !srcloc !4970
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #23, !dbg !4971, !srcloc !4972
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #23, !dbg !4973, !srcloc !4974
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #23, !dbg !4975, !srcloc !4976
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #23, !dbg !4977, !srcloc !4978
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #23, !dbg !4979, !srcloc !4980
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #23, !dbg !4981, !srcloc !4982
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #23, !dbg !4983, !srcloc !4984
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4985, !srcloc !4986
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4987, !srcloc !4988
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4989, !srcloc !4990
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4991, !srcloc !4992
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4993, !srcloc !4994
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4995, !srcloc !4996
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4997, !srcloc !4998
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4999, !srcloc !5000
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5001, !srcloc !5002
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5003, !srcloc !5004
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5005, !srcloc !5006
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5007, !srcloc !5008
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5009, !srcloc !5010
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5011, !srcloc !5012
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5013, !srcloc !5014
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5015, !srcloc !5016
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5017, !srcloc !5018
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5019, !srcloc !5020
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5021, !srcloc !5022
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5023, !srcloc !5024
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5025, !srcloc !5026
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5027, !srcloc !5028
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5029, !srcloc !5030
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5031, !srcloc !5032
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5033, !srcloc !5034
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5035, !srcloc !5036
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5037, !srcloc !5038
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5039, !srcloc !5040
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5041, !srcloc !5042
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5043, !srcloc !5044
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #23, !dbg !5045, !srcloc !5046
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #23, !dbg !5047, !srcloc !5048
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #23, !dbg !5049, !srcloc !5050
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #23, !dbg !5051, !srcloc !5052
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5053, !srcloc !5054
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #23, !dbg !5055, !srcloc !5056
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #23, !dbg !5057, !srcloc !5058
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5059, !srcloc !5060
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #23, !dbg !5061, !srcloc !5062
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #23, !dbg !5063, !srcloc !5064
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #23, !dbg !5065, !srcloc !5066
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #23, !dbg !5067, !srcloc !5068
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5069, !srcloc !5070
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5071, !srcloc !5072
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5073, !srcloc !5074
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5075, !srcloc !5076
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5077, !srcloc !5078
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5079, !srcloc !5080
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5081, !srcloc !5082
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5083, !srcloc !5084
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5085, !srcloc !5086
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5087, !srcloc !5088
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5089, !srcloc !5090
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5091, !srcloc !5092
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5093, !srcloc !5094
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5095, !srcloc !5096
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5097, !srcloc !5098
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5099, !srcloc !5100
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5101, !srcloc !5102
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5103, !srcloc !5104
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5105, !srcloc !5106
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5107, !srcloc !5108
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5109, !srcloc !5110
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5111, !srcloc !5112
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5113, !srcloc !5114
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5115, !srcloc !5116
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5117, !srcloc !5118
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5119, !srcloc !5120
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5121, !srcloc !5122
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5123, !srcloc !5124
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5125, !srcloc !5126
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5127, !srcloc !5128
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5129, !srcloc !5130
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5131, !srcloc !5132
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5133, !srcloc !5134
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5135, !srcloc !5136
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5137, !srcloc !5138
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5139, !srcloc !5140
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5141, !srcloc !5142
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5143, !srcloc !5144
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5145, !srcloc !5146
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5147, !srcloc !5148
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5149, !srcloc !5150
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5151, !srcloc !5152
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5153, !srcloc !5154
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5155, !srcloc !5156
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5157, !srcloc !5158
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5159, !srcloc !5160
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5161, !srcloc !5162
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5163, !srcloc !5164
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5165, !srcloc !5166
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5167, !srcloc !5168
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5169, !srcloc !5170
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5171, !srcloc !5172
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5173, !srcloc !5174
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5175, !srcloc !5176
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5177, !srcloc !5178
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5179, !srcloc !5180
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5181, !srcloc !5182
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5183, !srcloc !5184
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5185, !srcloc !5186
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5187, !srcloc !5188
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5189, !srcloc !5190
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5191, !srcloc !5192
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5193, !srcloc !5194
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5195, !srcloc !5196
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5197, !srcloc !5198
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5199, !srcloc !5200
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5201, !srcloc !5202
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5203, !srcloc !5204
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5205, !srcloc !5206
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5207, !srcloc !5208
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5209, !srcloc !5210
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5211, !srcloc !5212
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5213, !srcloc !5214
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5215, !srcloc !5216
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5217, !srcloc !5218
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5219, !srcloc !5220
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5221, !srcloc !5222
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5223, !srcloc !5224
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5225, !srcloc !5226
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5227, !srcloc !5228
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5229, !srcloc !5230
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5231, !srcloc !5232
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5233, !srcloc !5234
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5235, !srcloc !5236
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #23, !dbg !5237, !srcloc !5238
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5239, !srcloc !5240
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5241, !srcloc !5242
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #23, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #23, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #23, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETLINE\0A\09.equ\09CONFIG_CONSOLE_GETLINE,1\0A\09.type\09CONFIG_CONSOLE_GETLINE,%object", ""() #23, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5373, !srcloc !5374
  ret void, !dbg !5375
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5376 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5378, metadata !DIExpression()), !dbg !5379
  tail call void @SOC_RdcInit() #25, !dbg !5380
  tail call void @SOC_ClockInit() #25, !dbg !5381
  tail call fastcc void @nxp_mcimx7_gpio_config() #25, !dbg !5382
  ret i32 0, !dbg !5383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #15 !dbg !5384 {
  tail call fastcc void @RDC_SetDomainID() #25, !dbg !5385
  ret void, !dbg !5386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !5387 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #24, !dbg !5388
  tail call fastcc void @CCM_EnableRoot() #25, !dbg !5389
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #25, !dbg !5390
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #25, !dbg !5391
  tail call fastcc void @WDOG_DisablePowerdown() #25, !dbg !5392
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #25, !dbg !5393
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #25, !dbg !5394
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #25, !dbg !5395
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #25, !dbg !5396
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #25, !dbg !5397
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #25, !dbg !5398
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #25, !dbg !5399
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #25, !dbg !5400
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #25, !dbg !5401
  ret void, !dbg !5402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #15 !dbg !5403 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #25, !dbg !5404
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #25, !dbg !5405
  ret void, !dbg !5406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5407 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5412, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i32 %0, metadata !5413, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8 %1, metadata !5414, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8 0, metadata !5415, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8 0, metadata !5416, metadata !DIExpression()), !dbg !5417
  %3 = zext i8 %1 to i32, !dbg !5418
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !5419
  store volatile i32 %3, i32* %4, align 4, !dbg !5420
  ret void, !dbg !5421
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5422 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5426, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i32 %0, metadata !5427, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i32 %1, metadata !5428, metadata !DIExpression()), !dbg !5429
  %3 = inttoptr i32 %0 to i32*, !dbg !5430
  store volatile i32 %1, i32* %3, align 4, !dbg !5431
  ret void, !dbg !5432
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #15 !dbg !5433 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5437, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata i32 809024384, metadata !5438, metadata !DIExpression()), !dbg !5439
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !5440
  ret void, !dbg !5441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #15 !dbg !5442 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !5447, metadata !DIExpression()), !dbg !5448
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5449
  %2 = and i16 %1, -2, !dbg !5449
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5449
  ret void, !dbg !5450
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #15 !dbg !5451 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5455, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata i32 1, metadata !5456, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata i32 1, metadata !5457, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata i8 0, metadata !5458, metadata !DIExpression()), !dbg !5459
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !5460
  ret void, !dbg !5461
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @console_getline() local_unnamed_addr #1 !dbg !699 {
  %1 = load %struct.console_input*, %struct.console_input** @console_getline.cmd, align 4, !dbg !5462
  %2 = icmp eq %struct.console_input* %1, null, !dbg !5464
  br i1 %2, label %5, label %3, !dbg !5465

3:                                                ; preds = %0
  %4 = bitcast %struct.console_input* %1 to i8*, !dbg !5466
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull %4) #24, !dbg !5466
  br label %5, !dbg !5469

5:                                                ; preds = %3, %0
  %6 = tail call fastcc i8* @k_queue_get() #25, !dbg !5470
  call void @llvm.dbg.value(metadata i8* %6, metadata !704, metadata !DIExpression()), !dbg !5471
  store i8* %6, i8** bitcast (%struct.console_input** @console_getline.cmd to i8**), align 4, !dbg !5472
  %7 = getelementptr inbounds i8, i8* %6, i32 5, !dbg !5473
  ret i8* %7, !dbg !5474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !5475 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5485, metadata !DIExpression()), !dbg !5486
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), metadata !5484, metadata !DIExpression()), !dbg !5486
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5487, !srcloc !5489
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), [1 x i64] [i64 -1]) #24, !dbg !5490
  ret i8* %1, !dbg !5491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @console_getline_init() local_unnamed_addr #1 !dbg !5492 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5494, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata i32 0, metadata !5494, metadata !DIExpression()), !dbg !5495
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast ([2 x %struct.console_input]* @line_bufs to i8*)) #24, !dbg !5496
  call void @llvm.dbg.value(metadata i32 0, metadata !5494, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5495
  call void @llvm.dbg.value(metadata i32 0, metadata !5494, metadata !DIExpression()), !dbg !5495
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast (%struct.console_input* getelementptr inbounds ([2 x %struct.console_input], [2 x %struct.console_input]* @line_bufs, i32 0, i32 1) to i8*)) #24, !dbg !5496
  call void @llvm.dbg.value(metadata i32 0, metadata !5494, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5495
  tail call void @uart_register_input(%struct.k_fifo* noundef nonnull @free_queue, %struct.k_fifo* noundef nonnull @used_queue, i8 (i8*, i8)* noundef null) #24, !dbg !5501
  ret void, !dbg !5502
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5552, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5553, metadata !DIExpression()), !dbg !5554
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !5555
  ret void, !dbg !5556
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5557 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5574, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5575, metadata !DIExpression()), !dbg !5577
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5578
  %4 = load i32, i32* %3, align 4, !dbg !5578
  call void @llvm.dbg.value(metadata i32 %4, metadata !5576, metadata !DIExpression()), !dbg !5577
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !5579
  ret void, !dbg !5580
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5581 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5585, metadata !DIExpression()), !dbg !5588
  call void @llvm.dbg.value(metadata i8* %0, metadata !5586, metadata !DIExpression()), !dbg !5588
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5589
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !5589
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5587, metadata !DIExpression()), !dbg !5590
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5590
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5591
  %5 = bitcast i8* %4 to i32*, !dbg !5591
  %6 = load i32, i32* %5, align 4, !dbg !5591
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5592
  store i32 %6, i32* %7, align 4, !dbg !5593
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !5594
  unreachable, !dbg !5595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5601, metadata !DIExpression()), !dbg !5602
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !5603
  ret void, !dbg !5604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5609, metadata !DIExpression()), !dbg !5610
  %2 = icmp sgt i32 %0, -1, !dbg !5611
  br i1 %2, label %3, label %8, !dbg !5613

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5614, !srcloc !5616
  %4 = and i32 %0, 31, !dbg !5617
  %5 = shl nuw i32 1, %4, !dbg !5618
  %6 = lshr i32 %0, 5, !dbg !5619
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5620
  store volatile i32 %5, i32* %7, align 4, !dbg !5621
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5622, !srcloc !5623
  br label %8, !dbg !5624

8:                                                ; preds = %3, %1
  ret void, !dbg !5625
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5628, metadata !DIExpression()), !dbg !5629
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !5630
  ret void, !dbg !5631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5634, metadata !DIExpression()), !dbg !5635
  %2 = icmp sgt i32 %0, -1, !dbg !5636
  br i1 %2, label %3, label %8, !dbg !5638

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5639
  %5 = shl nuw i32 1, %4, !dbg !5641
  %6 = lshr i32 %0, 5, !dbg !5642
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5643
  store volatile i32 %5, i32* %7, align 4, !dbg !5644
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5645, !srcloc !5649
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5650, !srcloc !5653
  br label %8, !dbg !5654

8:                                                ; preds = %3, %1
  ret void, !dbg !5655
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !5656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5660, metadata !DIExpression()), !dbg !5661
  %2 = lshr i32 %0, 5, !dbg !5662
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5663
  %4 = load volatile i32, i32* %3, align 4, !dbg !5663
  %5 = and i32 %0, 31, !dbg !5664
  %6 = shl nuw i32 1, %5, !dbg !5664
  %7 = and i32 %4, %6, !dbg !5665
  ret i32 %7, !dbg !5666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !5667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5671, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.value(metadata i32 %1, metadata !5672, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.value(metadata i32 %2, metadata !5673, metadata !DIExpression()), !dbg !5674
  %4 = add i32 %1, 1, !dbg !5675
  call void @llvm.dbg.value(metadata i32 %4, metadata !5672, metadata !DIExpression()), !dbg !5674
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !5678
  ret void, !dbg !5679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5684, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 %1, metadata !5685, metadata !DIExpression()), !dbg !5686
  %3 = trunc i32 %1 to i8, !dbg !5687
  %4 = shl i8 %3, 4, !dbg !5687
  %5 = and i32 %0, 15, !dbg !5689
  %6 = add nsw i32 %5, -4, !dbg !5689
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5689
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5689
  %9 = icmp slt i32 %0, 0, !dbg !5689
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5689
  store volatile i8 %4, i8* %10, align 1, !dbg !5687
  ret void, !dbg !5690
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5693, metadata !DIExpression()), !dbg !5694
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !5695
  ret void, !dbg !5696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5697 {
  tail call void @z_SysNmiOnReset() #24, !dbg !5699
  tail call void @z_arm_int_exit() #24, !dbg !5700
  ret void, !dbg !5701
}

; Function Attrs: optsize
declare !dbg !5702 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5703 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !5705 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !5707
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !5708
  tail call void @z_bss_zero() #24, !dbg !5709
  tail call void @z_data_copy() #24, !dbg !5710
  tail call void @z_arm_interrupt_init() #24, !dbg !5711
  tail call void @z_cstart() #27, !dbg !5712
  unreachable, !dbg !5712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5713 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5714
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5715, !srcloc !5718
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5719, !srcloc !5722
  ret void, !dbg !5723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !5724 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5725
  %2 = and i32 %1, -15728641, !dbg !5725
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5725
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !5726, !srcloc !5733
  call void @llvm.dbg.value(metadata i32 %3, metadata !5731, metadata !DIExpression()) #23, !dbg !5734
  %4 = and i32 %3, -5, !dbg !5735
  call void @llvm.dbg.value(metadata i32 %4, metadata !5736, metadata !DIExpression()) #23, !dbg !5741
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5745, !srcloc !5722
  ret void, !dbg !5747
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5751, metadata !DIExpression()), !dbg !5752
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5753
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 0, !dbg !5754
  store i32 %0, i32* %3, align 8, !dbg !5755
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5756
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 1, !dbg !5757
  store i32 %4, i32* %5, align 4, !dbg !5758
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5759
  %7 = or i32 %6, 268435456, !dbg !5759
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5759
  call void @llvm.dbg.value(metadata i32 0, metadata !5760, metadata !DIExpression()) #23, !dbg !5764
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5766, !srcloc !5767
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5768
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 6, i32 1, !dbg !5769
  %10 = load i32, i32* %9, align 4, !dbg !5769
  ret i32 %10, !dbg !5770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !5771 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5875, metadata !DIExpression()), !dbg !5883
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5876, metadata !DIExpression()), !dbg !5883
  call void @llvm.dbg.value(metadata i8* %2, metadata !5877, metadata !DIExpression()), !dbg !5883
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5878, metadata !DIExpression()), !dbg !5883
  call void @llvm.dbg.value(metadata i8* %4, metadata !5879, metadata !DIExpression()), !dbg !5883
  call void @llvm.dbg.value(metadata i8* %5, metadata !5880, metadata !DIExpression()), !dbg !5883
  call void @llvm.dbg.value(metadata i8* %6, metadata !5881, metadata !DIExpression()), !dbg !5883
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5884
  call void @llvm.dbg.value(metadata i8* %8, metadata !5882, metadata !DIExpression()), !dbg !5883
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5885
  %10 = bitcast i8* %9 to i32*, !dbg !5885
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5886
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5887
  %12 = bitcast i8* %8 to i32*, !dbg !5888
  store i32 %11, i32* %12, align 4, !dbg !5889
  %13 = ptrtoint i8* %4 to i32, !dbg !5890
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5891
  %15 = bitcast i8* %14 to i32*, !dbg !5891
  store i32 %13, i32* %15, align 4, !dbg !5892
  %16 = ptrtoint i8* %5 to i32, !dbg !5893
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5894
  %18 = bitcast i8* %17 to i32*, !dbg !5894
  store i32 %16, i32* %18, align 4, !dbg !5895
  %19 = ptrtoint i8* %6 to i32, !dbg !5896
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5897
  %21 = bitcast i8* %20 to i32*, !dbg !5897
  store i32 %19, i32* %21, align 4, !dbg !5898
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5899
  %23 = bitcast i8* %22 to i32*, !dbg !5899
  store i32 16777216, i32* %23, align 4, !dbg !5900
  %24 = ptrtoint i8* %8 to i32, !dbg !5901
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5902
  store i32 %24, i32* %25, align 8, !dbg !5903
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !5904
  store i32 0, i32* %26, align 8, !dbg !5905
  ret void, !dbg !5906
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !5907 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5911, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i8* %1, metadata !5912, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5913, metadata !DIExpression()), !dbg !5914
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5915
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5916, !srcloc !5917
  unreachable, !dbg !5918
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5919 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5937, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i32 %1, metadata !5938, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i32 %2, metadata !5939, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5940, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i32 0, metadata !5941, metadata !DIExpression()), !dbg !5947
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5948
  %9 = and i32 %8, 511, !dbg !5949
  call void @llvm.dbg.value(metadata i32 %9, metadata !5942, metadata !DIExpression()), !dbg !5947
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5950
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5950
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5951
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5951
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5946, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.value(metadata i32 0, metadata !5953, metadata !DIExpression()) #23, !dbg !5956
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5958, !srcloc !5959
  call void @llvm.dbg.value(metadata i8* %6, metadata !5944, metadata !DIExpression(DW_OP_deref)), !dbg !5947
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !5960
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5945, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i8* %5, metadata !5943, metadata !DIExpression(DW_OP_deref)), !dbg !5947
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !5961
  call void @llvm.dbg.value(metadata i32 %12, metadata !5941, metadata !DIExpression()), !dbg !5947
  %13 = load i8, i8* %5, align 1, !dbg !5962, !range !5964
  call void @llvm.dbg.value(metadata i8 %13, metadata !5943, metadata !DIExpression()), !dbg !5947
  %14 = icmp eq i8 %13, 0, !dbg !5962
  br i1 %14, label %15, label %32, !dbg !5965

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5966
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !5967
  %18 = load i8, i8* %6, align 1, !dbg !5968, !range !5964
  call void @llvm.dbg.value(metadata i8 %18, metadata !5944, metadata !DIExpression()), !dbg !5947
  %19 = icmp eq i8 %18, 0, !dbg !5968
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5970
  %21 = load i32, i32* %20, align 4, !dbg !5970
  br i1 %19, label %27, label %22, !dbg !5971

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5972
  %24 = icmp eq i32 %23, 0, !dbg !5975
  br i1 %24, label %25, label %31, !dbg !5976

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5977
  br label %29, !dbg !5979

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5980
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5970
  br label %31, !dbg !5982

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !5982
  br label %32, !dbg !5983

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5983
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5983
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5983
  ret void, !dbg !5983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !5984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5989, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata i32 %1, metadata !5990, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata i32 %2, metadata !5991, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata i8* %3, metadata !5992, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata i8 0, metadata !5993, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5994, metadata !DIExpression()), !dbg !5995
  store i8 0, i8* %3, align 1, !dbg !5996
  %5 = icmp ult i32 %2, -16777216, !dbg !5997
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5999
  br i1 %8, label %16, label %9, !dbg !5999

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6000
  %11 = icmp eq i32 %10, 0, !dbg !6000
  br i1 %11, label %12, label %13, !dbg !6002

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5994, metadata !DIExpression()), !dbg !5995
  store i8 1, i8* %3, align 1, !dbg !6005
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5995
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5994, metadata !DIExpression()), !dbg !5995
  br label %16, !dbg !6008

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5995
  ret %struct.__esf* %17, !dbg !6009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6010 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6014, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata i32 %1, metadata !6015, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata i8* %2, metadata !6016, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata i32 0, metadata !6017, metadata !DIExpression()), !dbg !6018
  store i8 0, i8* %2, align 1, !dbg !6019
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !6020

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !6021
  call void @llvm.dbg.value(metadata i32 %5, metadata !6017, metadata !DIExpression()), !dbg !6018
  br label %10, !dbg !6023

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6024
  call void @llvm.dbg.value(metadata i32 0, metadata !6017, metadata !DIExpression()), !dbg !6018
  br label %10, !dbg !6025

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6026
  call void @llvm.dbg.value(metadata i32 0, metadata !6017, metadata !DIExpression()), !dbg !6018
  br label %10, !dbg !6027

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !6028
  call void @llvm.dbg.value(metadata i32 0, metadata !6017, metadata !DIExpression()), !dbg !6018
  br label %10, !dbg !6029

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !6030
  br label %10, !dbg !6031

10:                                               ; preds = %4, %6, %7, %8, %9, %3
  %11 = phi i32 [ 0, %3 ], [ %5, %4 ], [ 0, %6 ], [ 0, %7 ], [ 0, %8 ], [ 0, %9 ]
  ret i32 %11, !dbg !6032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6033 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6037, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.value(metadata i8* %1, metadata !6038, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.value(metadata i32 0, metadata !6039, metadata !DIExpression()), !dbg !6040
  store i8 0, i8* %1, align 1, !dbg !6041
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6042
  %4 = and i32 %3, 2, !dbg !6044
  %5 = icmp eq i32 %4, 0, !dbg !6045
  br i1 %5, label %6, label %32, !dbg !6046

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6047
  %8 = icmp sgt i32 %7, -1, !dbg !6049
  br i1 %8, label %9, label %32, !dbg !6050

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6051
  %11 = and i32 %10, 1073741824, !dbg !6053
  %12 = icmp eq i32 %11, 0, !dbg !6054
  br i1 %12, label %32, label %13, !dbg !6055

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !6056
  br i1 %14, label %15, label %18, !dbg !6059

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6060
  %17 = load i32, i32* %16, align 4, !dbg !6060
  call void @llvm.dbg.value(metadata i32 %17, metadata !6039, metadata !DIExpression()), !dbg !6040
  br label %32, !dbg !6062

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6063
  %20 = and i32 %19, 255, !dbg !6065
  %21 = icmp eq i32 %20, 0, !dbg !6066
  br i1 %21, label %23, label %22, !dbg !6067

22:                                               ; preds = %18
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6068
  call void @llvm.dbg.value(metadata i32 0, metadata !6039, metadata !DIExpression()), !dbg !6040
  br label %32, !dbg !6070

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6071
  %25 = and i32 %24, 65280, !dbg !6073
  %26 = icmp eq i32 %25, 0, !dbg !6074
  br i1 %26, label %28, label %27, !dbg !6075

27:                                               ; preds = %23
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6076
  call void @llvm.dbg.value(metadata i32 0, metadata !6039, metadata !DIExpression()), !dbg !6040
  br label %32, !dbg !6078

28:                                               ; preds = %23
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6079
  %30 = icmp ult i32 %29, 65536, !dbg !6081
  br i1 %30, label %32, label %31, !dbg !6082

31:                                               ; preds = %28
  tail call fastcc void @usage_fault() #25, !dbg !6083
  call void @llvm.dbg.value(metadata i32 0, metadata !6039, metadata !DIExpression()), !dbg !6040
  br label %32, !dbg !6085

32:                                               ; preds = %6, %9, %15, %27, %28, %31, %22, %2
  %33 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ 0, %22 ], [ 0, %27 ], [ 0, %31 ], [ 0, %28 ], [ 0, %9 ], !dbg !6040
  call void @llvm.dbg.value(metadata i32 %33, metadata !6039, metadata !DIExpression()), !dbg !6040
  ret i32 %33, !dbg !6086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6087 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6089, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 %0, metadata !6090, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i8* %1, metadata !6091, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 0, metadata !6092, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 -22, metadata !6093, metadata !DIExpression()), !dbg !6097
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6098
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6100
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6102
  %6 = and i32 %5, 2, !dbg !6103
  %7 = icmp eq i32 %6, 0, !dbg !6104
  br i1 %7, label %18, label %8, !dbg !6105

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %9, metadata !6094, metadata !DIExpression()), !dbg !6107
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6108
  %11 = and i32 %10, 128, !dbg !6110
  %12 = icmp eq i32 %11, 0, !dbg !6111
  %13 = icmp eq i32 %0, 0
  %14 = or i1 %13, %12, !dbg !6112
  call void @llvm.dbg.value(metadata i32 %9, metadata !6093, metadata !DIExpression()), !dbg !6097
  br i1 %14, label %18, label %15, !dbg !6112

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6113
  %17 = and i32 %16, -129, !dbg !6113
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6113
  br label %18, !dbg !6117

18:                                               ; preds = %8, %15, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !6093, metadata !DIExpression()), !dbg !6097
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6118
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6120
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6122
  %22 = and i32 %21, 16, !dbg !6124
  %23 = icmp eq i32 %22, 0, !dbg !6124
  br i1 %23, label %24, label %26, !dbg !6125

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6126
  br label %26, !dbg !6127

26:                                               ; preds = %24, %18
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6128
  %28 = and i32 %27, 32, !dbg !6130
  %29 = icmp eq i32 %28, 0, !dbg !6131
  br i1 %29, label %33, label %30, !dbg !6132

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6133
  %32 = and i32 %31, -8193, !dbg !6133
  store volatile i32 %32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6133
  br label %33, !dbg !6135

33:                                               ; preds = %30, %26
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6136
  %35 = or i32 %34, 255, !dbg !6136
  store volatile i32 %35, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6136
  store i8 0, i8* %1, align 1, !dbg !6137
  ret void, !dbg !6138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6139 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6143, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i32 %0, metadata !6144, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i8* %1, metadata !6145, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i32 0, metadata !6146, metadata !DIExpression()), !dbg !6150
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6151
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6153
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6155
  %6 = and i32 %5, 512, !dbg !6156
  %7 = icmp eq i32 %6, 0, !dbg !6156
  br i1 %7, label %18, label %8, !dbg !6157

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6158
  call void @llvm.dbg.value(metadata i32 %9, metadata !6147, metadata !DIExpression()), !dbg !6159
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6160
  %11 = and i32 %10, 32768, !dbg !6162
  %12 = icmp ne i32 %11, 0, !dbg !6163
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6164
  br i1 %14, label %15, label %18, !dbg !6164

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6165
  %17 = and i32 %16, -32769, !dbg !6165
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6165
  br label %18, !dbg !6169

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6170
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6172
  %21 = and i32 %20, 256, !dbg !6174
  %22 = icmp eq i32 %21, 0, !dbg !6175
  br i1 %22, label %23, label %25, !dbg !6176

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6177
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6179
  %27 = or i32 %26, 65280, !dbg !6179
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6179
  store i8 0, i8* %1, align 1, !dbg !6180
  ret void, !dbg !6181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6182 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6188, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i32 0, metadata !6189, metadata !DIExpression()), !dbg !6190
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6191
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6193
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6195
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6197
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6199
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6201
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6203
  %8 = or i32 %7, -65536, !dbg !6203
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6203
  ret void, !dbg !6204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6205 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6209, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.value(metadata i8* %0, metadata !6210, metadata !DIExpression()), !dbg !6211
  store i8 0, i8* %0, align 1, !dbg !6212
  ret void, !dbg !6213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6214 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6218, metadata !DIExpression()), !dbg !6221
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6222
  %3 = load i32, i32* %2, align 4, !dbg !6222
  %4 = inttoptr i32 %3 to i16*, !dbg !6223
  call void @llvm.dbg.value(metadata i16* %4, metadata !6219, metadata !DIExpression()), !dbg !6221
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6224
  %6 = or i32 %5, 256, !dbg !6224
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6224
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6225, !srcloc !6228
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6229, !srcloc !6232
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6233
  %8 = load i16, i16* %7, align 2, !dbg !6234
  call void @llvm.dbg.value(metadata i16 %8, metadata !6220, metadata !DIExpression()), !dbg !6221
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6235
  %10 = and i32 %9, -257, !dbg !6235
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6235
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6236, !srcloc !6228
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6238, !srcloc !6232
  %11 = icmp eq i16 %8, -8446, !dbg !6240
  ret i1 %11, !dbg !6242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6243 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6244
  %2 = or i32 %1, 16, !dbg !6244
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6244
  ret void, !dbg !6245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6246 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6249, metadata !DIExpression()), !dbg !6250
  br label %1, !dbg !6251

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6249, metadata !DIExpression()), !dbg !6250
  tail call fastcc void @__NVIC_SetPriority.15(i32 noundef %2) #25, !dbg !6253
  %3 = add nuw nsw i32 %2, 1, !dbg !6256
  call void @llvm.dbg.value(metadata i32 %3, metadata !6249, metadata !DIExpression()), !dbg !6250
  %4 = icmp eq i32 %3, 127, !dbg !6257
  br i1 %4, label %5, label %1, !dbg !6251, !llvm.loop !6258

5:                                                ; preds = %1
  ret void, !dbg !6260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.15(i32 noundef %0) unnamed_addr #15 !dbg !6261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6263, metadata !DIExpression()), !dbg !6265
  call void @llvm.dbg.value(metadata i32 1, metadata !6264, metadata !DIExpression()), !dbg !6265
  %2 = and i32 %0, 15, !dbg !6266
  %3 = add nsw i32 %2, -4, !dbg !6266
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6266
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6266
  %6 = icmp slt i32 %0, 0, !dbg !6266
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6266
  store volatile i8 16, i8* %7, align 1, !dbg !6267
  ret void, !dbg !6269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6270 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6370, metadata !DIExpression()), !dbg !6371
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6372
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6374
  br i1 %3, label %4, label %12, !dbg !6375

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !6376, !srcloc !6388
  call void @llvm.dbg.value(metadata i32 %5, metadata !6379, metadata !DIExpression()) #23, !dbg !6389
  %6 = icmp eq i32 %5, 0, !dbg !6390
  br i1 %6, label %12, label %7, !dbg !6391

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6392
  %9 = or i32 %8, 268435456, !dbg !6392
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6392
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6394
  %11 = and i32 %10, -32769, !dbg !6394
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6394
  br label %12, !dbg !6395

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !6396
  ret void, !dbg !6397
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !6398 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6405, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i8* %1, metadata !6406, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i8* %0, metadata !6407, metadata !DIExpression()), !dbg !6408
  %3 = load i8, i8* %1, align 1, !dbg !6409
  %4 = icmp eq i8 %3, 0, !dbg !6410
  br i1 %4, label %13, label %5, !dbg !6411

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6405, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i8* %8, metadata !6406, metadata !DIExpression()), !dbg !6408
  store i8 %6, i8* %7, align 1, !dbg !6412
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6414
  call void @llvm.dbg.value(metadata i8* %9, metadata !6405, metadata !DIExpression()), !dbg !6408
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6415
  call void @llvm.dbg.value(metadata i8* %10, metadata !6406, metadata !DIExpression()), !dbg !6408
  %11 = load i8, i8* %10, align 1, !dbg !6409
  %12 = icmp eq i8 %11, 0, !dbg !6410
  br i1 %12, label %13, label %5, !dbg !6411, !llvm.loop !6416

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6418
  ret i8* %0, !dbg !6419
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !6420 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6424, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.value(metadata i8* %1, metadata !6425, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.value(metadata i32 %2, metadata !6426, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.value(metadata i8* %0, metadata !6427, metadata !DIExpression()), !dbg !6428
  %4 = icmp eq i32 %2, 0, !dbg !6429
  br i1 %4, label %22, label %5, !dbg !6430

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6424, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.value(metadata i32 %7, metadata !6426, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.value(metadata i8* %8, metadata !6425, metadata !DIExpression()), !dbg !6428
  %9 = load i8, i8* %8, align 1, !dbg !6431
  %10 = icmp eq i8 %9, 0, !dbg !6432
  br i1 %10, label %16, label %11, !dbg !6433

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6434
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6436
  call void @llvm.dbg.value(metadata i8* %12, metadata !6425, metadata !DIExpression()), !dbg !6428
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6437
  call void @llvm.dbg.value(metadata i8* %13, metadata !6424, metadata !DIExpression()), !dbg !6428
  %14 = add i32 %7, -1, !dbg !6438
  call void @llvm.dbg.value(metadata i32 %14, metadata !6426, metadata !DIExpression()), !dbg !6428
  %15 = icmp eq i32 %14, 0, !dbg !6429
  br i1 %15, label %22, label %5, !dbg !6430, !llvm.loop !6439

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6424, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.value(metadata i32 %18, metadata !6426, metadata !DIExpression()), !dbg !6428
  store i8 0, i8* %17, align 1, !dbg !6441
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6443
  call void @llvm.dbg.value(metadata i8* %19, metadata !6424, metadata !DIExpression()), !dbg !6428
  %20 = add i32 %18, -1, !dbg !6444
  call void @llvm.dbg.value(metadata i32 %20, metadata !6426, metadata !DIExpression()), !dbg !6428
  %21 = icmp eq i32 %20, 0, !dbg !6445
  br i1 %21, label %22, label %16, !dbg !6446, !llvm.loop !6447

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6449
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !6450 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6454, metadata !DIExpression()), !dbg !6457
  call void @llvm.dbg.value(metadata i32 %1, metadata !6455, metadata !DIExpression()), !dbg !6457
  call void @llvm.dbg.value(metadata i32 %1, metadata !6456, metadata !DIExpression()), !dbg !6457
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6458

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6454, metadata !DIExpression()), !dbg !6457
  %6 = load i8, i8* %5, align 1, !dbg !6459
  %7 = icmp eq i8 %6, %3, !dbg !6460
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6461
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6462
  call void @llvm.dbg.value(metadata i8* %10, metadata !6454, metadata !DIExpression()), !dbg !6457
  br i1 %9, label %11, label %4, !dbg !6461, !llvm.loop !6464

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6466
  ret i8* %12, !dbg !6467
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !6468 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6470, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.value(metadata i32 %1, metadata !6471, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.value(metadata i8* null, metadata !6472, metadata !DIExpression()), !dbg !6473
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6474

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6473
  call void @llvm.dbg.value(metadata i8* %6, metadata !6472, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.value(metadata i8* %5, metadata !6470, metadata !DIExpression()), !dbg !6473
  %7 = load i8, i8* %5, align 1, !dbg !6475
  %8 = icmp eq i8 %7, %3, !dbg !6478
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6479
  call void @llvm.dbg.value(metadata i8* %9, metadata !6472, metadata !DIExpression()), !dbg !6473
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6480
  call void @llvm.dbg.value(metadata i8* %10, metadata !6470, metadata !DIExpression()), !dbg !6473
  %11 = icmp eq i8 %7, 0, !dbg !6481
  br i1 %11, label %12, label %4, !dbg !6481, !llvm.loop !6482

12:                                               ; preds = %4
  ret i8* %9, !dbg !6484
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #17 !dbg !6485 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6489, metadata !DIExpression()), !dbg !6491
  call void @llvm.dbg.value(metadata i32 0, metadata !6490, metadata !DIExpression()), !dbg !6491
  %2 = load i8, i8* %0, align 1, !dbg !6492
  %3 = icmp eq i8 %2, 0, !dbg !6493
  br i1 %3, label %11, label %4, !dbg !6494

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6490, metadata !DIExpression()), !dbg !6491
  call void @llvm.dbg.value(metadata i8* %6, metadata !6489, metadata !DIExpression()), !dbg !6491
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6495
  call void @llvm.dbg.value(metadata i8* %7, metadata !6489, metadata !DIExpression()), !dbg !6491
  %8 = add i32 %5, 1, !dbg !6497
  call void @llvm.dbg.value(metadata i32 %8, metadata !6490, metadata !DIExpression()), !dbg !6491
  %9 = load i8, i8* %7, align 1, !dbg !6492
  %10 = icmp eq i8 %9, 0, !dbg !6493
  br i1 %10, label %11, label %4, !dbg !6494, !llvm.loop !6498

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6491
  ret i32 %12, !dbg !6500
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !6501 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6505, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i32 %1, metadata !6506, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i32 0, metadata !6507, metadata !DIExpression()), !dbg !6508
  %3 = load i8, i8* %0, align 1, !dbg !6509
  %4 = icmp ne i8 %3, 0, !dbg !6510
  %5 = icmp ne i32 %1, 0, !dbg !6511
  %6 = and i1 %4, %5, !dbg !6511
  br i1 %6, label %7, label %16, !dbg !6512

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6507, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i8* %9, metadata !6505, metadata !DIExpression()), !dbg !6508
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6513
  call void @llvm.dbg.value(metadata i8* %10, metadata !6505, metadata !DIExpression()), !dbg !6508
  %11 = add nuw i32 %8, 1, !dbg !6515
  call void @llvm.dbg.value(metadata i32 %11, metadata !6507, metadata !DIExpression()), !dbg !6508
  %12 = load i8, i8* %10, align 1, !dbg !6509
  %13 = icmp ne i8 %12, 0, !dbg !6510
  %14 = icmp ult i32 %11, %1, !dbg !6511
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6511
  br i1 %15, label %7, label %16, !dbg !6512, !llvm.loop !6516

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6508
  ret i32 %17, !dbg !6518
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !6519 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6523, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.value(metadata i8* %1, metadata !6524, metadata !DIExpression()), !dbg !6525
  %3 = load i8, i8* %0, align 1, !dbg !6526
  %4 = load i8, i8* %1, align 1, !dbg !6527
  %5 = icmp ne i8 %3, %4, !dbg !6528
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6529
  br i1 %7, label %18, label %8, !dbg !6529

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6524, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.value(metadata i8* %10, metadata !6523, metadata !DIExpression()), !dbg !6525
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6530
  call void @llvm.dbg.value(metadata i8* %11, metadata !6523, metadata !DIExpression()), !dbg !6525
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6532
  call void @llvm.dbg.value(metadata i8* %12, metadata !6524, metadata !DIExpression()), !dbg !6525
  %13 = load i8, i8* %11, align 1, !dbg !6526
  %14 = load i8, i8* %12, align 1, !dbg !6527
  %15 = icmp ne i8 %13, %14, !dbg !6528
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6529
  br i1 %17, label %18, label %8, !dbg !6529, !llvm.loop !6533

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6526
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6527
  %21 = zext i8 %19 to i32, !dbg !6536
  %22 = zext i8 %20 to i32, !dbg !6537
  %23 = sub nsw i32 %21, %22, !dbg !6538
  ret i32 %23, !dbg !6539
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !6540 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6544, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i8* %1, metadata !6545, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i32 %2, metadata !6546, metadata !DIExpression()), !dbg !6547
  %4 = icmp eq i32 %2, 0, !dbg !6548
  br i1 %4, label %23, label %5, !dbg !6548

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6546, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i8* %7, metadata !6545, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i8* %8, metadata !6544, metadata !DIExpression()), !dbg !6547
  %9 = load i8, i8* %8, align 1, !dbg !6549
  %10 = load i8, i8* %7, align 1, !dbg !6550
  %11 = icmp ne i8 %9, %10, !dbg !6551
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6552
  br i1 %13, label %19, label %14, !dbg !6552

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6553
  call void @llvm.dbg.value(metadata i8* %15, metadata !6544, metadata !DIExpression()), !dbg !6547
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6555
  call void @llvm.dbg.value(metadata i8* %16, metadata !6545, metadata !DIExpression()), !dbg !6547
  %17 = add i32 %6, -1, !dbg !6556
  call void @llvm.dbg.value(metadata i32 %17, metadata !6546, metadata !DIExpression()), !dbg !6547
  %18 = icmp eq i32 %17, 0, !dbg !6548
  br i1 %18, label %23, label %5, !dbg !6548, !llvm.loop !6557

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6560
  %21 = zext i8 %10 to i32, !dbg !6561
  %22 = sub nsw i32 %20, %21, !dbg !6562
  br label %23, !dbg !6563

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6563
  ret i32 %24, !dbg !6564
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !6565 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6570, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i8* %1, metadata !6571, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i8** %2, metadata !6572, metadata !DIExpression()), !dbg !6575
  %4 = icmp eq i8* %0, null, !dbg !6576
  br i1 %4, label %5, label %7, !dbg !6576

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6577
  br label %7, !dbg !6576

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6576
  call void @llvm.dbg.value(metadata i8* %8, metadata !6573, metadata !DIExpression()), !dbg !6575
  %9 = load i8, i8* %8, align 1, !dbg !6578
  %10 = icmp eq i8 %9, 0, !dbg !6578
  br i1 %10, label %33, label %11, !dbg !6579

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6573, metadata !DIExpression()), !dbg !6575
  %14 = zext i8 %12 to i32, !dbg !6578
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !6580
  %16 = icmp eq i8* %15, null, !dbg !6579
  br i1 %16, label %21, label %17, !dbg !6581

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6582
  call void @llvm.dbg.value(metadata i8* %18, metadata !6573, metadata !DIExpression()), !dbg !6575
  %19 = load i8, i8* %18, align 1, !dbg !6578
  %20 = icmp eq i8 %19, 0, !dbg !6578
  br i1 %20, label %33, label %11, !dbg !6579, !llvm.loop !6584

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6574, metadata !DIExpression()), !dbg !6575
  %24 = zext i8 %22 to i32, !dbg !6586
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !6587
  %26 = icmp eq i8* %25, null, !dbg !6588
  br i1 %26, label %27, label %31, !dbg !6589

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6590
  call void @llvm.dbg.value(metadata i8* %28, metadata !6574, metadata !DIExpression()), !dbg !6575
  %29 = load i8, i8* %28, align 1, !dbg !6586
  %30 = icmp eq i8 %29, 0, !dbg !6586
  br i1 %30, label %33, label %21, !dbg !6592, !llvm.loop !6593

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6595
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6598
  br label %33, !dbg !6599

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6575
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6575
  store i8* %34, i8** %2, align 4, !dbg !6575
  ret i8* %35, !dbg !6600
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !6601 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6603, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.value(metadata i8* %1, metadata !6604, metadata !DIExpression()), !dbg !6605
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6606
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6607
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !6608
  ret i8* %0, !dbg !6609
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !6610 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6612, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i8* %1, metadata !6613, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 %2, metadata !6614, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i8* %0, metadata !6615, metadata !DIExpression()), !dbg !6617
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6618
  call void @llvm.dbg.value(metadata i32 %4, metadata !6616, metadata !DIExpression()), !dbg !6617
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6619
  call void @llvm.dbg.value(metadata i8* %5, metadata !6612, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i8* %1, metadata !6613, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 %2, metadata !6614, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 %2, metadata !6614, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6617
  %6 = icmp eq i32 %2, 0, !dbg !6620
  br i1 %6, label %18, label %7, !dbg !6621

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6622
  call void @llvm.dbg.value(metadata i8* %9, metadata !6612, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i8* %10, metadata !6613, metadata !DIExpression()), !dbg !6617
  %12 = load i8, i8* %10, align 1, !dbg !6623
  %13 = icmp eq i8 %12, 0, !dbg !6624
  br i1 %13, label %18, label %14, !dbg !6625

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6626
  call void @llvm.dbg.value(metadata i8* %15, metadata !6613, metadata !DIExpression()), !dbg !6617
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6628
  call void @llvm.dbg.value(metadata i8* %16, metadata !6612, metadata !DIExpression()), !dbg !6617
  store i8 %12, i8* %9, align 1, !dbg !6629
  call void @llvm.dbg.value(metadata i32 %11, metadata !6614, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 %11, metadata !6614, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6617
  %17 = icmp eq i32 %11, 0, !dbg !6620
  br i1 %17, label %18, label %7, !dbg !6621, !llvm.loop !6630

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6617
  store i8 0, i8* %19, align 1, !dbg !6632
  ret i8* %0, !dbg !6633
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !6634 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6638, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %1, metadata !6639, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i32 %2, metadata !6640, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %0, metadata !6641, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %1, metadata !6642, metadata !DIExpression()), !dbg !6643
  %4 = icmp eq i32 %2, 0, !dbg !6644
  br i1 %4, label %31, label %5, !dbg !6646

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6642, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %0, metadata !6641, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i32 %2, metadata !6640, metadata !DIExpression()), !dbg !6643
  %6 = add i32 %2, -1, !dbg !6647
  call void @llvm.dbg.value(metadata i32 %6, metadata !6640, metadata !DIExpression()), !dbg !6643
  %7 = icmp eq i32 %6, 0, !dbg !6648
  br i1 %7, label %23, label %8, !dbg !6649

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6650
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6650
  br label %11, !dbg !6650

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6642, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %14, metadata !6641, metadata !DIExpression()), !dbg !6643
  %15 = load i8, i8* %14, align 1, !dbg !6651
  %16 = load i8, i8* %13, align 1, !dbg !6652
  %17 = icmp eq i8 %15, %16, !dbg !6653
  br i1 %17, label %18, label %23, !dbg !6650

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6654
  call void @llvm.dbg.value(metadata i8* %19, metadata !6641, metadata !DIExpression()), !dbg !6643
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6656
  call void @llvm.dbg.value(metadata i8* %20, metadata !6642, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i32 %12, metadata !6640, metadata !DIExpression()), !dbg !6643
  %21 = add i32 %12, -1, !dbg !6647
  call void @llvm.dbg.value(metadata i32 %21, metadata !6640, metadata !DIExpression()), !dbg !6643
  %22 = icmp eq i32 %21, 0, !dbg !6648
  br i1 %22, label %23, label %11, !dbg !6649, !llvm.loop !6657

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6643
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6643
  %26 = load i8, i8* %24, align 1, !dbg !6659
  %27 = zext i8 %26 to i32, !dbg !6659
  %28 = load i8, i8* %25, align 1, !dbg !6660
  %29 = zext i8 %28 to i32, !dbg !6660
  %30 = sub nsw i32 %27, %29, !dbg !6661
  br label %31, !dbg !6662

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6643
  ret i32 %32, !dbg !6663
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !6664 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6668, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i8* %1, metadata !6669, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i32 %2, metadata !6670, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i8* %0, metadata !6671, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i8* %1, metadata !6672, metadata !DIExpression()), !dbg !6673
  %4 = ptrtoint i8* %0 to i32, !dbg !6674
  %5 = ptrtoint i8* %1 to i32, !dbg !6674
  %6 = sub i32 %4, %5, !dbg !6674
  %7 = icmp ult i32 %6, %2, !dbg !6676
  br i1 %7, label %10, label %8, !dbg !6677

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6672, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i8* %0, metadata !6671, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i32 %2, metadata !6670, metadata !DIExpression()), !dbg !6673
  %9 = icmp eq i32 %2, 0, !dbg !6678
  br i1 %9, label %26, label %17, !dbg !6680

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6670, metadata !DIExpression()), !dbg !6673
  %12 = add i32 %11, -1, !dbg !6681
  call void @llvm.dbg.value(metadata i32 %12, metadata !6670, metadata !DIExpression()), !dbg !6673
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6684
  %14 = load i8, i8* %13, align 1, !dbg !6684
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6685
  store i8 %14, i8* %15, align 1, !dbg !6686
  %16 = icmp eq i32 %12, 0, !dbg !6687
  br i1 %16, label %26, label %10, !dbg !6688, !llvm.loop !6689

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6672, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i8* %19, metadata !6671, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i32 %20, metadata !6670, metadata !DIExpression()), !dbg !6673
  %21 = load i8, i8* %18, align 1, !dbg !6691
  store i8 %21, i8* %19, align 1, !dbg !6693
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6694
  call void @llvm.dbg.value(metadata i8* %22, metadata !6671, metadata !DIExpression()), !dbg !6673
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6695
  call void @llvm.dbg.value(metadata i8* %23, metadata !6672, metadata !DIExpression()), !dbg !6673
  %24 = add i32 %20, -1, !dbg !6696
  call void @llvm.dbg.value(metadata i32 %24, metadata !6670, metadata !DIExpression()), !dbg !6673
  %25 = icmp eq i32 %24, 0, !dbg !6678
  br i1 %25, label %26, label %17, !dbg !6680, !llvm.loop !6697

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6699
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !6700 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6706, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i8* %1, metadata !6707, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i32 %2, metadata !6708, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i8* %0, metadata !6709, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i8* %1, metadata !6710, metadata !DIExpression()), !dbg !6711
  %4 = icmp eq i32 %2, 0, !dbg !6712
  br i1 %4, label %14, label %5, !dbg !6713

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6710, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i8* %7, metadata !6709, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i32 %8, metadata !6708, metadata !DIExpression()), !dbg !6711
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6714
  call void @llvm.dbg.value(metadata i8* %9, metadata !6710, metadata !DIExpression()), !dbg !6711
  %10 = load i8, i8* %6, align 1, !dbg !6716
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6717
  call void @llvm.dbg.value(metadata i8* %11, metadata !6709, metadata !DIExpression()), !dbg !6711
  store i8 %10, i8* %7, align 1, !dbg !6718
  %12 = add i32 %8, -1, !dbg !6719
  call void @llvm.dbg.value(metadata i32 %12, metadata !6708, metadata !DIExpression()), !dbg !6711
  %13 = icmp eq i32 %12, 0, !dbg !6712
  br i1 %13, label %14, label %5, !dbg !6713, !llvm.loop !6720

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6722
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6723 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6727, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i32 %1, metadata !6728, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i32 %2, metadata !6729, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i8* %0, metadata !6730, metadata !DIExpression()), !dbg !6732
  %4 = trunc i32 %1 to i8, !dbg !6733
  call void @llvm.dbg.value(metadata i8 %4, metadata !6731, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i32 %2, metadata !6729, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i8* %0, metadata !6730, metadata !DIExpression()), !dbg !6732
  %5 = icmp eq i32 %2, 0, !dbg !6734
  br i1 %5, label %12, label %6, !dbg !6735

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6729, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i8* %8, metadata !6730, metadata !DIExpression()), !dbg !6732
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6736
  call void @llvm.dbg.value(metadata i8* %9, metadata !6730, metadata !DIExpression()), !dbg !6732
  store i8 %4, i8* %8, align 1, !dbg !6738
  %10 = add i32 %7, -1, !dbg !6739
  call void @llvm.dbg.value(metadata i32 %10, metadata !6729, metadata !DIExpression()), !dbg !6732
  %11 = icmp eq i32 %10, 0, !dbg !6734
  br i1 %11, label %12, label %6, !dbg !6735, !llvm.loop !6740

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6742
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !6743 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6747, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i32 %1, metadata !6748, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i32 %2, metadata !6749, metadata !DIExpression()), !dbg !6753
  %4 = icmp eq i32 %2, 0, !dbg !6754
  br i1 %4, label %17, label %5, !dbg !6755

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6756

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6757
  call void @llvm.dbg.value(metadata i8* %9, metadata !6750, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i32 %8, metadata !6749, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i8* %9, metadata !6750, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6757
  %10 = load i8, i8* %9, align 1, !dbg !6758
  %11 = icmp eq i8 %10, %6, !dbg !6761
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6762
  call void @llvm.dbg.value(metadata i8* %12, metadata !6750, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i32 %13, metadata !6749, metadata !DIExpression()), !dbg !6753
  br i1 %15, label %16, label %7, !dbg !6762, !llvm.loop !6763

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6765

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6753
  ret i8* %19, !dbg !6766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !6767 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6769, metadata !DIExpression()), !dbg !6770
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6771
  ret void, !dbg !6772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !6773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6775, metadata !DIExpression()), !dbg !6776
  ret i32 -1, !dbg !6777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6782, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata i32* %1, metadata !6783, metadata !DIExpression()), !dbg !6784
  %3 = ptrtoint i32* %1 to i32, !dbg !6785
  %4 = and i32 %3, -2, !dbg !6785
  %5 = icmp eq i32 %4, 2, !dbg !6785
  br i1 %5, label %6, label %9, !dbg !6785

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6786
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !6786
  br label %9, !dbg !6787

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6787
  ret i32 %10, !dbg !6788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6791, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i32* %1, metadata !6792, metadata !DIExpression()), !dbg !6793
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6794
  ret i32 %3, !dbg !6795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6799, metadata !DIExpression()), !dbg !6801
  call void @llvm.dbg.value(metadata i32* %1, metadata !6800, metadata !DIExpression()), !dbg !6801
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6802, !srcloc !6804
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6805
  ret i32 %3, !dbg !6806
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6807 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6812, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.value(metadata i32* %1, metadata !6813, metadata !DIExpression()), !dbg !6816
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6817
  call void @llvm.dbg.value(metadata i32 %3, metadata !6814, metadata !DIExpression()), !dbg !6816
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !6818
  call void @llvm.dbg.value(metadata i32 %4, metadata !6815, metadata !DIExpression()), !dbg !6816
  %5 = icmp ne i32 %3, %4, !dbg !6819
  %6 = sext i1 %5 to i32, !dbg !6820
  ret i32 %6, !dbg !6821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6822 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6826, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.value(metadata i32 %1, metadata !6827, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.value(metadata i32 %2, metadata !6828, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.value(metadata i32* %3, metadata !6829, metadata !DIExpression()), !dbg !6830
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6831
  ret i32 %5, !dbg !6832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6833 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6835, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i32 %1, metadata !6836, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i32 %2, metadata !6837, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i32* %3, metadata !6838, metadata !DIExpression()), !dbg !6839
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6840, !srcloc !6842
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6843
  ret i32 %5, !dbg !6844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6845 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6847, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.value(metadata i32 %1, metadata !6848, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.value(metadata i32 %2, metadata !6849, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.value(metadata i32* %3, metadata !6850, metadata !DIExpression()), !dbg !6855
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6856
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6858
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6858
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6858
  br i1 %11, label %33, label %12, !dbg !6858

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6855
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6855
  call void @llvm.dbg.value(metadata i8* %14, metadata !6853, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.value(metadata i32 %13, metadata !6851, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.value(metadata i32 %1, metadata !6852, metadata !DIExpression()), !dbg !6855
  br label %15, !dbg !6859

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6861
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6855
  call void @llvm.dbg.value(metadata i8* %17, metadata !6853, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.value(metadata i32 %16, metadata !6852, metadata !DIExpression()), !dbg !6855
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6862
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6865
  call void @llvm.dbg.value(metadata i8* %19, metadata !6853, metadata !DIExpression()), !dbg !6855
  %20 = load i8, i8* %17, align 1, !dbg !6866
  %21 = zext i8 %20 to i32, !dbg !6867
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !6862
  %23 = icmp eq i32 %22, -1, !dbg !6868
  br i1 %23, label %30, label %24, !dbg !6869

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6870
  call void @llvm.dbg.value(metadata i32 %25, metadata !6852, metadata !DIExpression()), !dbg !6855
  %26 = icmp eq i32 %25, 0, !dbg !6871
  br i1 %26, label %27, label %15, !dbg !6872, !llvm.loop !6873

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6875
  call void @llvm.dbg.value(metadata i32 %28, metadata !6851, metadata !DIExpression()), !dbg !6855
  %29 = icmp eq i32 %28, 0, !dbg !6876
  br i1 %29, label %30, label %12, !dbg !6877, !llvm.loop !6878

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6855
  call void @llvm.dbg.value(metadata i32 %31, metadata !6851, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.label(metadata !6854), !dbg !6881
  %32 = sub i32 %2, %31, !dbg !6882
  br label %33, !dbg !6883

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6855
  ret i32 %34, !dbg !6884
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6885 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6889, metadata !DIExpression()), !dbg !6890
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6891
  %3 = icmp eq i32 %2, -1, !dbg !6893
  br i1 %3, label %8, label %4, !dbg !6894

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6895
  %6 = icmp eq i32 %5, -1, !dbg !6896
  %7 = sext i1 %6 to i32, !dbg !6895
  br label %8, !dbg !6897

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6890
  ret i32 %9, !dbg !6898
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6899 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6901, metadata !DIExpression()), !dbg !6902
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !6903
  br i1 %2, label %3, label %4, !dbg !6905

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !6906
  br label %4, !dbg !6907

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !6902
  ret i32 %5, !dbg !6908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6909 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !6914, metadata !DIExpression()), !dbg !6915
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6916, !srcloc !6918
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !6919
  ret i1 %1, !dbg !6920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !6921 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !6922
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !6923
  ret void, !dbg !6924
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !6925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6927, metadata !DIExpression()), !dbg !6928
  %2 = icmp eq i32 %0, 10, !dbg !6929
  br i1 %2, label %3, label %4, !dbg !6931

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !6932
  br label %4, !dbg !6934

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !6935
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !6936
  ret i32 %0, !dbg !6937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !6938 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !6941, metadata !DIExpression()), !dbg !6943
  call void @llvm.dbg.value(metadata i8 %0, metadata !6942, metadata !DIExpression()), !dbg !6943
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6944, !srcloc !6946
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !6947
  ret void, !dbg !6948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !6949 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !6951, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.value(metadata i8 %0, metadata !6952, metadata !DIExpression()), !dbg !6954
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6955
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !6953, metadata !DIExpression()), !dbg !6954
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !6956
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !6956
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #24, !dbg !6957
  ret void, !dbg !6958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6959 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !6961, metadata !DIExpression()), !dbg !6962
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !6963
  ret i1 %1, !dbg !6964
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !6965 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !6969, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !6970, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !6971, metadata !DIExpression()), !dbg !6972
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !6973
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !6974
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !6975
  tail call fastcc void @console_input_init() #25, !dbg !6976
  ret void, !dbg !6977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !6978 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #23, !dbg !6981
  tail call fastcc void @uart_irq_rx_disable() #25, !dbg !6982
  tail call fastcc void @uart_irq_tx_disable() #25, !dbg !6983
  tail call fastcc void @uart_irq_callback_set() #25, !dbg !6984
  %2 = call fastcc i32 @uart_irq_rx_ready() #25, !dbg !6985
  %3 = icmp eq i32 %2, 0, !dbg !6986
  br i1 %3, label %8, label %4, !dbg !6986

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !6980, metadata !DIExpression(DW_OP_deref)), !dbg !6987
  %5 = call fastcc i32 @uart_fifo_read(i8* noundef nonnull %1) #25, !dbg !6988
  %6 = call fastcc i32 @uart_irq_rx_ready() #25, !dbg !6985
  %7 = icmp eq i32 %6, 0, !dbg !6986
  br i1 %7, label %8, label %4, !dbg !6986, !llvm.loop !6990

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable() #25, !dbg !6992
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #23, !dbg !6993
  ret void, !dbg !6993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable() unnamed_addr #1 !dbg !6994 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !6996, metadata !DIExpression()), !dbg !6997
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6998, !srcloc !7000
  tail call fastcc void @z_impl_uart_irq_rx_disable() #25, !dbg !7001
  ret void, !dbg !7002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable() unnamed_addr #1 !dbg !7003 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7005, metadata !DIExpression()), !dbg !7006
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7007, !srcloc !7009
  tail call fastcc void @z_impl_uart_irq_tx_disable() #25, !dbg !7010
  ret void, !dbg !7011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !7012 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7016, metadata !DIExpression()), !dbg !7018
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !7017, metadata !DIExpression()), !dbg !7018
  tail call fastcc void @uart_irq_callback_user_data_set() #25, !dbg !7019
  ret void, !dbg !7020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !7021 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7023, metadata !DIExpression()), !dbg !7025
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7026
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7024, metadata !DIExpression()), !dbg !7025
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !7027
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !7027
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !7029
  br i1 %4, label %7, label %5, !dbg !7030

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !7031
  br label %7, !dbg !7032

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !7025
  ret i32 %8, !dbg !7033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !7034 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7036, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata i8* %0, metadata !7037, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata i32 1, metadata !7038, metadata !DIExpression()), !dbg !7040
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7041
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7039, metadata !DIExpression()), !dbg !7040
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !7042
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !7042
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !7044
  br i1 %5, label %8, label %6, !dbg !7045

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8* noundef %0, i32 noundef 1) #24, !dbg !7046
  br label %8, !dbg !7047

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !7040
  ret i32 %9, !dbg !7048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !7049 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7051, metadata !DIExpression()), !dbg !7052
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7053, !srcloc !7055
  tail call fastcc void @z_impl_uart_irq_rx_enable() #25, !dbg !7056
  ret void, !dbg !7057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !7058 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7060, metadata !DIExpression()), !dbg !7062
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7063
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7061, metadata !DIExpression()), !dbg !7062
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !7064
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !7064
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !7066
  br i1 %4, label %6, label %5, !dbg !7067

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !7068
  br label %6, !dbg !7070

6:                                                ; preds = %5, %0
  ret void, !dbg !7071
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !884 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !886, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.value(metadata i8* %1, metadata !887, metadata !DIExpression()), !dbg !7072
  %4 = call fastcc i32 @uart_irq_update() #25, !dbg !7073
  %5 = icmp eq i32 %4, 0, !dbg !7073
  br i1 %5, label %89, label %6, !dbg !7074

6:                                                ; preds = %2, %86
  %7 = call fastcc i32 @uart_irq_is_pending() #25, !dbg !7075
  %8 = icmp eq i32 %7, 0, !dbg !7074
  br i1 %8, label %89, label %9, !dbg !7076

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #23, !dbg !7077
  %10 = call fastcc i32 @uart_irq_rx_ready() #25, !dbg !7078
  %11 = icmp eq i32 %10, 0, !dbg !7078
  br i1 %11, label %86, label %12, !dbg !7080, !llvm.loop !7081

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !888, metadata !DIExpression(DW_OP_deref)), !dbg !7083
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #25, !dbg !7084
  call void @llvm.dbg.value(metadata i32 %13, metadata !890, metadata !DIExpression()), !dbg !7083
  %14 = icmp slt i32 %13, 0, !dbg !7085
  br i1 %14, label %85, label %15, !dbg !7087

15:                                               ; preds = %12
  %16 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7088
  %17 = icmp eq %struct.console_input* %16, null, !dbg !7088
  br i1 %17, label %18, label %23, !dbg !7089

18:                                               ; preds = %15
  %19 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !7090
  %20 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %19, i32 0, i32 0, !dbg !7090
  %21 = call fastcc i8* @k_queue_get.27(%struct.k_queue* noundef %20) #25, !dbg !7090
  call void @llvm.dbg.value(metadata i8* %21, metadata !891, metadata !DIExpression()), !dbg !7091
  store i8* %21, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !7092
  %22 = icmp eq i8* %21, null, !dbg !7093
  br i1 %22, label %85, label %23, !dbg !7095

23:                                               ; preds = %18, %15
  %24 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #25, !dbg !7096
  br i1 %24, label %25, label %29, !dbg !7098

25:                                               ; preds = %23
  %26 = load i8, i8* %3, align 1, !dbg !7099
  call void @llvm.dbg.value(metadata i8 %26, metadata !888, metadata !DIExpression()), !dbg !7083
  %27 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7101
  %28 = getelementptr inbounds %struct.console_input, %struct.console_input* %27, i32 0, i32 2, i32 0, !dbg !7101
  call fastcc void @handle_ansi(i8 noundef zeroext %26, i8* noundef nonnull %28) #25, !dbg !7102
  br label %86, !dbg !7103, !llvm.loop !7081

29:                                               ; preds = %23
  %30 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #25, !dbg !7104
  %31 = load i8, i8* %3, align 1, !dbg !7083
  call void @llvm.dbg.value(metadata i8 %31, metadata !888, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.value(metadata i8 %31, metadata !888, metadata !DIExpression()), !dbg !7083
  br i1 %30, label %32, label %35, !dbg !7106

32:                                               ; preds = %29
  %33 = icmp eq i8 %31, 91, !dbg !7107
  br i1 %33, label %34, label %86, !dbg !7110, !llvm.loop !7081

34:                                               ; preds = %32
  call fastcc void @atomic_set_bit(i32 noundef 1) #25, !dbg !7111
  call fastcc void @atomic_set_bit(i32 noundef 2) #25, !dbg !7113
  br label %86, !dbg !7114, !llvm.loop !7081

35:                                               ; preds = %29
  %36 = zext i8 %31 to i32, !dbg !7115
  %37 = call fastcc i32 @isprint(i32 noundef %36) #25, !dbg !7117
  %38 = icmp eq i32 %37, 0, !dbg !7117
  br i1 %38, label %39, label %74, !dbg !7118

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i8 undef, metadata !888, metadata !DIExpression()), !dbg !7083
  switch i8 %31, label %86 [
    i8 8, label %40
    i8 127, label %40
    i8 27, label %49
    i8 13, label %50
    i8 9, label %61
  ], !dbg !7119, !llvm.loop !7081

40:                                               ; preds = %39, %39
  %41 = load i8, i8* @cur, align 1, !dbg !7121
  %42 = icmp eq i8 %41, 0, !dbg !7124
  br i1 %42, label %86, label %43, !dbg !7125, !llvm.loop !7081

43:                                               ; preds = %40
  %44 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7126
  %45 = add i8 %41, -1, !dbg !7128
  store i8 %45, i8* @cur, align 1, !dbg !7128
  %46 = zext i8 %45 to i32, !dbg !7126
  %47 = getelementptr inbounds %struct.console_input, %struct.console_input* %44, i32 0, i32 2, i32 %46, !dbg !7126
  %48 = load i8, i8* @end, align 1, !dbg !7129
  call fastcc void @del_char(i8* noundef nonnull %47, i8 noundef zeroext %48) #25, !dbg !7130
  br label %86, !dbg !7131, !llvm.loop !7081

49:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 0) #25, !dbg !7132
  br label %86, !dbg !7133, !llvm.loop !7081

50:                                               ; preds = %39
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7134
  %52 = load i8, i8* @cur, align 1, !dbg !7135
  %53 = zext i8 %52 to i32, !dbg !7135
  %54 = load i8, i8* @end, align 1, !dbg !7136
  %55 = zext i8 %54 to i32, !dbg !7136
  %56 = add nuw nsw i32 %55, %53, !dbg !7137
  %57 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %56, !dbg !7134
  store i8 0, i8* %57, align 1, !dbg !7138
  call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !7139
  call fastcc void @uart_poll_out(i8 noundef zeroext 10) #25, !dbg !7140
  store i8 0, i8* @cur, align 1, !dbg !7141
  store i8 0, i8* @end, align 1, !dbg !7142
  %58 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !7143
  %59 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %58, i32 0, i32 0, !dbg !7143
  %60 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !7143
  call void @k_queue_append(%struct.k_queue* noundef %59, i8* noundef %60) #24, !dbg !7143
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7145
  br label %86, !dbg !7146, !llvm.loop !7081

61:                                               ; preds = %39
  %62 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !7147
  %63 = icmp eq i8 (i8*, i8)* %62, null, !dbg !7147
  %64 = load i8, i8* @end, align 1
  %65 = icmp ne i8 %64, 0
  %66 = select i1 %63, i1 true, i1 %65, !dbg !7149
  br i1 %66, label %86, label %67, !dbg !7149, !llvm.loop !7081

67:                                               ; preds = %61
  %68 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7150
  %69 = getelementptr inbounds %struct.console_input, %struct.console_input* %68, i32 0, i32 2, i32 0, !dbg !7150
  %70 = load i8, i8* @cur, align 1, !dbg !7152
  %71 = call zeroext i8 %62(i8* noundef nonnull %69, i8 noundef zeroext %70) #24, !dbg !7153
  %72 = load i8, i8* @cur, align 1, !dbg !7154
  %73 = add i8 %72, %71, !dbg !7154
  store i8 %73, i8* @cur, align 1, !dbg !7154
  br label %86, !dbg !7155, !llvm.loop !7081

74:                                               ; preds = %35
  %75 = load i8, i8* @cur, align 1, !dbg !7156
  %76 = zext i8 %75 to i32, !dbg !7156
  %77 = load i8, i8* @end, align 1, !dbg !7158
  %78 = zext i8 %77 to i32, !dbg !7158
  %79 = add nuw nsw i32 %78, %76, !dbg !7159
  %80 = icmp ult i32 %79, 127, !dbg !7160
  br i1 %80, label %81, label %86, !dbg !7161

81:                                               ; preds = %74
  %82 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7162
  %83 = add i8 %75, 1, !dbg !7164
  store i8 %83, i8* @cur, align 1, !dbg !7164
  %84 = getelementptr inbounds %struct.console_input, %struct.console_input* %82, i32 0, i32 2, i32 %76, !dbg !7162
  call void @llvm.dbg.value(metadata i8 %31, metadata !888, metadata !DIExpression()), !dbg !7083
  call fastcc void @insert_char(i8* noundef nonnull %84, i8 noundef zeroext %31, i8 noundef zeroext %77) #25, !dbg !7165
  br label %86, !dbg !7166

85:                                               ; preds = %12, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #23, !dbg !7082
  br label %89

86:                                               ; preds = %74, %81, %49, %50, %43, %40, %67, %61, %39, %32, %34, %9, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #23, !dbg !7082
  %87 = call fastcc i32 @uart_irq_update() #25, !dbg !7073
  %88 = icmp eq i32 %87, 0, !dbg !7073
  br i1 %88, label %89, label %6, !dbg !7074

89:                                               ; preds = %6, %86, %2, %85
  ret void, !dbg !7167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !7168 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7170, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !7171, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata i8* null, metadata !7172, metadata !DIExpression()), !dbg !7174
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7175
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7173, metadata !DIExpression()), !dbg !7174
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !7176
  br i1 %2, label %8, label %3, !dbg !7178

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !7179
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !7179
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !7180
  br i1 %6, label %8, label %7, !dbg !7181

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_198, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #24, !dbg !7182
  br label %8, !dbg !7184

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !7185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !7186 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7188, metadata !DIExpression()), !dbg !7189
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7190, !srcloc !7192
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #25, !dbg !7193
  ret i32 %1, !dbg !7194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !7195 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7197, metadata !DIExpression()), !dbg !7198
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7199, !srcloc !7201
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #25, !dbg !7202
  ret i32 %1, !dbg !7203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !7204 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7208, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i8* %0, metadata !7209, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i32 1, metadata !7210, metadata !DIExpression()), !dbg !7212
  %2 = tail call fastcc i32 @uart_fifo_read(i8* noundef %0) #25, !dbg !7213
  call void @llvm.dbg.value(metadata i32 %2, metadata !7211, metadata !DIExpression()), !dbg !7212
  %3 = icmp slt i32 %2, 0, !dbg !7214
  br i1 %3, label %4, label %5, !dbg !7216

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable() #25, !dbg !7217
  br label %5, !dbg !7219

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !7212
  ret i32 %6, !dbg !7220
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get.27(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !7221 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !7231, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !7230, metadata !DIExpression()), !dbg !7232
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7233, !srcloc !7235
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #24, !dbg !7236
  ret i8* %2, !dbg !7237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !7238 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7244, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata i32 %0, metadata !7245, metadata !DIExpression()), !dbg !7248
  %2 = tail call fastcc i32 @atomic_get() #25, !dbg !7249
  call void @llvm.dbg.value(metadata i32 %2, metadata !7246, metadata !DIExpression()), !dbg !7248
  %3 = and i32 %0, 31, !dbg !7250
  %4 = shl nuw i32 1, %3, !dbg !7251
  %5 = and i32 %2, %4, !dbg !7251
  %6 = icmp ne i32 %5, 0, !dbg !7251
  ret i1 %6, !dbg !7252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !7253 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7257, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.value(metadata i8* %1, metadata !7258, metadata !DIExpression()), !dbg !7260
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #25, !dbg !7261
  br i1 %3, label %4, label %11, !dbg !7263

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !7264
  %6 = tail call fastcc i32 @isdigit.29(i32 noundef %5) #25, !dbg !7267
  %7 = icmp eq i32 %6, 0, !dbg !7267
  br i1 %7, label %8, label %9, !dbg !7268

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !7269
  br label %34, !dbg !7271

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #25, !dbg !7272
  %10 = add nsw i32 %5, -48, !dbg !7273
  store i32 %10, i32* @ansi_val, align 4, !dbg !7274
  store i32 0, i32* @ansi_val_2, align 4, !dbg !7275
  br label %81, !dbg !7276

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #25, !dbg !7277
  br i1 %12, label %13, label %34, !dbg !7279

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !7280
  %15 = tail call fastcc i32 @isdigit.29(i32 noundef %14) #25, !dbg !7283
  %16 = icmp eq i32 %15, 0, !dbg !7283
  br i1 %16, label %29, label %17, !dbg !7284

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #25, !dbg !7285
  br i1 %18, label %19, label %24, !dbg !7288

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !7289
  %21 = mul i32 %20, 10, !dbg !7289
  %22 = add nsw i32 %14, -48, !dbg !7291
  %23 = add i32 %22, %21, !dbg !7292
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !7292
  br label %81, !dbg !7293

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !7294
  %26 = mul i32 %25, 10, !dbg !7294
  %27 = add nsw i32 %14, -48, !dbg !7296
  %28 = add i32 %27, %26, !dbg !7297
  store i32 %28, i32* @ansi_val, align 4, !dbg !7297
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !7298
  br i1 %30, label %31, label %33, !dbg !7300

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #25, !dbg !7301
  br i1 %32, label %33, label %81, !dbg !7302

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #25, !dbg !7303
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #25, !dbg !7304
  br label %34, !dbg !7305

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !7259), !dbg !7306
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !7307

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !7308
  %37 = load i8, i8* @cur, align 1, !dbg !7311
  %38 = zext i8 %37 to i32, !dbg !7311
  %39 = icmp ugt i32 %36, %38, !dbg !7312
  br i1 %39, label %80, label %40, !dbg !7313

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !7314
  %42 = trunc i32 %36 to i8, !dbg !7314
  %43 = add i8 %41, %42, !dbg !7314
  store i8 %43, i8* @end, align 1, !dbg !7314
  %44 = sub i8 %37, %42, !dbg !7315
  store i8 %44, i8* @cur, align 1, !dbg !7315
  tail call fastcc void @cursor_backward(i32 noundef %36) #25, !dbg !7316
  br label %80, !dbg !7317

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !7318
  %47 = load i8, i8* @end, align 1, !dbg !7320
  %48 = zext i8 %47 to i32, !dbg !7320
  %49 = icmp ugt i32 %46, %48, !dbg !7321
  br i1 %49, label %80, label %50, !dbg !7322

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !7323
  %52 = sub i8 %47, %51, !dbg !7323
  store i8 %52, i8* @end, align 1, !dbg !7323
  %53 = load i8, i8* @cur, align 1, !dbg !7324
  %54 = add i8 %53, %51, !dbg !7324
  store i8 %54, i8* @cur, align 1, !dbg !7324
  tail call fastcc void @cursor_forward(i32 noundef %46) #25, !dbg !7325
  br label %80, !dbg !7326

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !7327
  %57 = icmp eq i8 %56, 0, !dbg !7327
  br i1 %57, label %80, label %58, !dbg !7329

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !7330
  tail call fastcc void @cursor_backward(i32 noundef %59) #25, !dbg !7331
  %60 = load i8, i8* @cur, align 1, !dbg !7332
  %61 = load i8, i8* @end, align 1, !dbg !7333
  %62 = add i8 %61, %60, !dbg !7333
  store i8 %62, i8* @end, align 1, !dbg !7333
  store i8 0, i8* @cur, align 1, !dbg !7334
  br label %80, !dbg !7335

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !7336
  %65 = icmp eq i8 %64, 0, !dbg !7336
  br i1 %65, label %80, label %66, !dbg !7338

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !7339
  tail call fastcc void @cursor_forward(i32 noundef %67) #25, !dbg !7340
  %68 = load i8, i8* @end, align 1, !dbg !7341
  %69 = load i8, i8* @cur, align 1, !dbg !7342
  %70 = add i8 %69, %68, !dbg !7342
  store i8 %70, i8* @cur, align 1, !dbg !7342
  store i8 0, i8* @end, align 1, !dbg !7343
  br label %80, !dbg !7344

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !7345
  %73 = icmp eq i8 %72, 0, !dbg !7345
  br i1 %73, label %80, label %74, !dbg !7347

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #25, !dbg !7348
  %75 = load i8, i8* @cur, align 1, !dbg !7349
  %76 = zext i8 %75 to i32, !dbg !7350
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !7350
  %78 = load i8, i8* @end, align 1, !dbg !7351
  %79 = add i8 %78, -1, !dbg !7351
  store i8 %79, i8* @end, align 1, !dbg !7351
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #25, !dbg !7352
  br label %80, !dbg !7353

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #25, !dbg !7354
  br label %81, !dbg !7355

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !7355
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !7356 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7361, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i32 %0, metadata !7362, metadata !DIExpression()), !dbg !7365
  %2 = and i32 %0, 31, !dbg !7366
  %3 = shl nuw i32 1, %2, !dbg !7366
  call void @llvm.dbg.value(metadata i32 %3, metadata !7363, metadata !DIExpression()), !dbg !7365
  %4 = xor i32 %3, -1, !dbg !7367
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #25, !dbg !7368
  call void @llvm.dbg.value(metadata i32 %5, metadata !7364, metadata !DIExpression()), !dbg !7365
  %6 = and i32 %5, %3, !dbg !7369
  %7 = icmp ne i32 %6, 0, !dbg !7370
  ret i1 %7, !dbg !7371
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !7372 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7376, metadata !DIExpression()), !dbg !7379
  call void @llvm.dbg.value(metadata i32 %0, metadata !7377, metadata !DIExpression()), !dbg !7379
  %2 = and i32 %0, 31, !dbg !7380
  %3 = shl nuw i32 1, %2, !dbg !7380
  call void @llvm.dbg.value(metadata i32 %3, metadata !7378, metadata !DIExpression()), !dbg !7379
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #25, !dbg !7381
  ret void, !dbg !7382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !7383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7385, metadata !DIExpression()), !dbg !7386
  %2 = add i32 %0, -32, !dbg !7387
  %3 = icmp ult i32 %2, 95, !dbg !7387
  %4 = zext i1 %3 to i32, !dbg !7387
  ret i32 %4, !dbg !7388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7389 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7393, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i8 %1, metadata !7394, metadata !DIExpression()), !dbg !7395
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #25, !dbg !7396
  %3 = icmp eq i8 %1, 0, !dbg !7397
  br i1 %3, label %4, label %5, !dbg !7399

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #25, !dbg !7400
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #25, !dbg !7402
  br label %14, !dbg !7403

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #25, !dbg !7404
  call void @llvm.dbg.value(metadata i8 %1, metadata !7394, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i8* %0, metadata !7393, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i8 %1, metadata !7394, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7395
  br label %6, !dbg !7405

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !7394, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i8* %8, metadata !7393, metadata !DIExpression()), !dbg !7395
  %9 = add i8 %7, -1, !dbg !7406
  call void @llvm.dbg.value(metadata i8 %9, metadata !7394, metadata !DIExpression()), !dbg !7395
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7407
  %11 = load i8, i8* %10, align 1, !dbg !7409
  store i8 %11, i8* %8, align 1, !dbg !7410
  call void @llvm.dbg.value(metadata i8* %10, metadata !7393, metadata !DIExpression()), !dbg !7395
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %11) #25, !dbg !7411
  call void @llvm.dbg.value(metadata i8 %9, metadata !7394, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7395
  %12 = icmp eq i8 %9, 0, !dbg !7412
  br i1 %12, label %13, label %6, !dbg !7405, !llvm.loop !7413

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #25, !dbg !7415
  tail call fastcc void @cursor_restore() #25, !dbg !7416
  br label %14, !dbg !7417

14:                                               ; preds = %13, %4
  ret void, !dbg !7417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !7418 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7422, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8 %1, metadata !7423, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8 %2, metadata !7424, metadata !DIExpression()), !dbg !7426
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %1) #25, !dbg !7427
  %4 = icmp eq i8 %2, 0, !dbg !7428
  br i1 %4, label %5, label %6, !dbg !7430

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !7431
  br label %17, !dbg !7433

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !7434
  call void @llvm.dbg.value(metadata i8 %7, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8* %0, metadata !7422, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7426
  store i8 %1, i8* %0, align 1, !dbg !7435
  tail call fastcc void @cursor_save() #25, !dbg !7436
  call void @llvm.dbg.value(metadata i8 %7, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8 %2, metadata !7424, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8* %0, metadata !7422, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7426
  call void @llvm.dbg.value(metadata i8 %2, metadata !7424, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7426
  br label %8, !dbg !7437

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7426
  call void @llvm.dbg.value(metadata i8 %10, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8 %11, metadata !7424, metadata !DIExpression()), !dbg !7426
  %13 = add i8 %11, -1, !dbg !7438
  call void @llvm.dbg.value(metadata i8 %13, metadata !7424, metadata !DIExpression()), !dbg !7426
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %10) #25, !dbg !7439
  %14 = load i8, i8* %12, align 1, !dbg !7441
  call void @llvm.dbg.value(metadata i8 %14, metadata !7423, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8* %12, metadata !7422, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7426
  store i8 %10, i8* %12, align 1, !dbg !7442
  call void @llvm.dbg.value(metadata i8 %14, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8* %12, metadata !7422, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7426
  call void @llvm.dbg.value(metadata i8 %13, metadata !7424, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7426
  %15 = icmp eq i8 %13, 0, !dbg !7443
  br i1 %15, label %16, label %8, !dbg !7437, !llvm.loop !7444

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #25, !dbg !7446
  br label %17, !dbg !7447

17:                                               ; preds = %16, %5
  ret void, !dbg !7447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !7448 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.28, i32 0, i32 0)) #24, !dbg !7449
  ret void, !dbg !7450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !7451 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #24, !dbg !7452
  ret void, !dbg !7453
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !7454 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7459, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata i32 %0, metadata !7460, metadata !DIExpression()), !dbg !7461
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !7462
  ret i32 %2, !dbg !7463
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !7464 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7466, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 %0, metadata !7467, metadata !DIExpression()), !dbg !7468
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !7469
  ret i32 %2, !dbg !7470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.29(i32 noundef %0) unnamed_addr #11 !dbg !7471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7473, metadata !DIExpression()), !dbg !7474
  %2 = add i32 %0, -48, !dbg !7475
  %3 = icmp ult i32 %2, 10, !dbg !7476
  %4 = zext i1 %3 to i32, !dbg !7476
  ret i32 %4, !dbg !7477
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !7478 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7480, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i32 4, metadata !7481, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i32 16, metadata !7482, metadata !DIExpression()), !dbg !7484
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #25, !dbg !7485
  call void @llvm.dbg.value(metadata i32 %1, metadata !7483, metadata !DIExpression()), !dbg !7484
  %2 = and i32 %1, 16, !dbg !7486
  %3 = icmp ne i32 %2, 0, !dbg !7487
  ret i1 %3, !dbg !7488
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !7489 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7491, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i32 %0, metadata !7492, metadata !DIExpression()), !dbg !7494
  %2 = and i32 %0, 31, !dbg !7495
  %3 = shl nuw i32 1, %2, !dbg !7495
  call void @llvm.dbg.value(metadata i32 %3, metadata !7493, metadata !DIExpression()), !dbg !7494
  %4 = xor i32 %3, -1, !dbg !7496
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #25, !dbg !7497
  ret void, !dbg !7498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !7499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7501, metadata !DIExpression()), !dbg !7502
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i32 noundef %0) #24, !dbg !7503
  ret void, !dbg !7504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !7505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7507, metadata !DIExpression()), !dbg !7508
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef %0) #24, !dbg !7509
  ret void, !dbg !7510
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !7511 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7515, metadata !DIExpression()), !dbg !7516
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !7517
  ret i32 %1, !dbg !7518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !7519 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7521, metadata !DIExpression()), !dbg !7523
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7524
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7522, metadata !DIExpression()), !dbg !7523
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !7525
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !7525
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !7527
  br i1 %4, label %7, label %5, !dbg !7528

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !7529
  br label %7, !dbg !7530

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !7523
  ret i32 %8, !dbg !7531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !7532 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7534, metadata !DIExpression()), !dbg !7536
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7537
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7535, metadata !DIExpression()), !dbg !7536
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !7538
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !7538
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !7540
  br i1 %4, label %7, label %5, !dbg !7541

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !7542
  br label %7, !dbg !7543

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !7536
  ret i32 %8, !dbg !7544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable() unnamed_addr #1 !dbg !7545 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7547, metadata !DIExpression()), !dbg !7549
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7550
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7548, metadata !DIExpression()), !dbg !7549
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !7551
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !7551
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !7553
  br i1 %4, label %6, label %5, !dbg !7554

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !7555
  br label %6, !dbg !7557

6:                                                ; preds = %5, %0
  ret void, !dbg !7558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable() unnamed_addr #1 !dbg !7559 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7561, metadata !DIExpression()), !dbg !7563
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7564
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7562, metadata !DIExpression()), !dbg !7563
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !7565
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !7565
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !7567
  br i1 %4, label %6, label %5, !dbg !7568

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !7569
  br label %6, !dbg !7571

6:                                                ; preds = %5, %0
  ret void, !dbg !7572
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7573 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7575, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i8 %1, metadata !7576, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i32 %2, metadata !7577, metadata !DIExpression()), !dbg !7588
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7589
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !7589
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !7589
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !7578, metadata !DIExpression()), !dbg !7588
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !7590
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7590
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !7580, metadata !DIExpression()), !dbg !7588
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !7591
  %13 = icmp eq i32 %12, 196608, !dbg !7591
  br i1 %13, label %66, label %14, !dbg !7591

14:                                               ; preds = %3
  %15 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !7593
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #23, !dbg !7593
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !7581, metadata !DIExpression()), !dbg !7594
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !7595
  %17 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %16, align 4, !dbg !7595
  %18 = zext i8 %1 to i32, !dbg !7596
  %19 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, i32 1, !dbg !7597
  %20 = load i32, i32* %19, align 4, !dbg !7597
  %21 = inttoptr i32 %20 to i32*, !dbg !7598
  call void @llvm.dbg.value(metadata i32* %21, metadata !7586, metadata !DIExpression()), !dbg !7588
  %22 = load volatile i32, i32* %21, align 4, !dbg !7599
  call void @llvm.dbg.value(metadata i32 %22, metadata !7587, metadata !DIExpression()), !dbg !7588
  %23 = and i32 %2, 2, !dbg !7600
  %24 = icmp eq i32 %23, 0, !dbg !7602
  br i1 %24, label %25, label %64, !dbg !7603

25:                                               ; preds = %14
  %26 = and i32 %2, 48, !dbg !7604
  %27 = icmp eq i32 %26, 0, !dbg !7604
  br i1 %27, label %36, label %28, !dbg !7604

28:                                               ; preds = %25
  %29 = and i32 %2, 16, !dbg !7606
  %30 = icmp eq i32 %29, 0, !dbg !7607
  call void @llvm.dbg.value(metadata i32 %22, metadata !7587, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7588
  br i1 %30, label %33, label %31, !dbg !7608

31:                                               ; preds = %28
  %32 = or i32 %22, 48, !dbg !7610
  call void @llvm.dbg.value(metadata i32 %32, metadata !7587, metadata !DIExpression()), !dbg !7588
  br label %38, !dbg !7613

33:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %22, metadata !7587, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7588
  %34 = and i32 %22, -49, !dbg !7614
  %35 = or i32 %34, 16, !dbg !7614
  call void @llvm.dbg.value(metadata i32 %35, metadata !7587, metadata !DIExpression()), !dbg !7588
  br label %38

36:                                               ; preds = %25
  %37 = and i32 %22, -17, !dbg !7616
  call void @llvm.dbg.value(metadata i32 %37, metadata !7587, metadata !DIExpression()), !dbg !7588
  br label %38

38:                                               ; preds = %31, %33, %36
  %39 = phi i32 [ %32, %31 ], [ %35, %33 ], [ %37, %36 ], !dbg !7618
  call void @llvm.dbg.value(metadata i32 %39, metadata !7587, metadata !DIExpression()), !dbg !7588
  %40 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, !dbg !7619
  %41 = bitcast %struct.pinctrl_soc_pinmux* %40 to i8*, !dbg !7620
  %42 = call i8* @memcpy(i8* noundef nonnull %15, i8* noundef %41, i32 noundef 20) #24, !dbg !7621
  %43 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !7622
  store i32 %39, i32* %43, align 4, !dbg !7623
  %44 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #24, !dbg !7624
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #24, !dbg !7625
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #24, !dbg !7626
  br i1 %11, label %58, label %45, !dbg !7627

45:                                               ; preds = %38
  %46 = and i32 %2, 262144, !dbg !7628
  %47 = icmp eq i32 %46, 0, !dbg !7632
  br i1 %47, label %48, label %51, !dbg !7633

48:                                               ; preds = %45
  %49 = and i32 %2, 524288, !dbg !7634
  %50 = icmp eq i32 %49, 0, !dbg !7636
  br i1 %50, label %53, label %51, !dbg !7637

51:                                               ; preds = %48, %45
  %52 = phi i32 [ 0, %45 ], [ 1, %48 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %18, i32 noundef %52) #24, !dbg !7638
  br label %53, !dbg !7639

53:                                               ; preds = %51, %48
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7639
  %55 = load volatile i32, i32* %54, align 4, !dbg !7639
  %56 = shl nuw i32 1, %18, !dbg !7639
  %57 = or i32 %55, %56, !dbg !7639
  store volatile i32 %57, i32* %54, align 4, !dbg !7639
  br label %64, !dbg !7640

58:                                               ; preds = %38
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7641
  %60 = load volatile i32, i32* %59, align 4, !dbg !7641
  %61 = shl nuw i32 1, %18, !dbg !7641
  %62 = xor i32 %61, -1, !dbg !7641
  %63 = and i32 %60, %62, !dbg !7641
  store volatile i32 %63, i32* %59, align 4, !dbg !7641
  br label %64

64:                                               ; preds = %53, %58, %14
  %65 = phi i32 [ -134, %14 ], [ 0, %58 ], [ 0, %53 ], !dbg !7588
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #23, !dbg !7643
  br label %66

66:                                               ; preds = %3, %64
  %67 = phi i32 [ %65, %64 ], [ -134, %3 ], !dbg !7588
  ret i32 %67, !dbg !7643
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !7644 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7648, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32* %1, metadata !7649, metadata !DIExpression()), !dbg !7652
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7653
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7653
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7653
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7650, metadata !DIExpression()), !dbg !7652
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7654
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7654
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7651, metadata !DIExpression()), !dbg !7652
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !7655
  store i32 %8, i32* %1, align 4, !dbg !7656
  ret i32 0, !dbg !7657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !7658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7660, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata i32 %1, metadata !7661, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata i32 %2, metadata !7662, metadata !DIExpression()), !dbg !7665
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7666
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !7666
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !7666
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !7663, metadata !DIExpression()), !dbg !7665
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !7667
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !7667
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !7664, metadata !DIExpression()), !dbg !7665
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #25, !dbg !7668
  %10 = xor i32 %1, -1, !dbg !7669
  %11 = and i32 %9, %10, !dbg !7670
  %12 = and i32 %2, %1, !dbg !7671
  %13 = or i32 %11, %12, !dbg !7672
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #25, !dbg !7673
  ret i32 0, !dbg !7674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7675 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7677, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata i32 %1, metadata !7678, metadata !DIExpression()), !dbg !7681
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7682
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7682
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7682
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7679, metadata !DIExpression()), !dbg !7681
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7683
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7683
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7680, metadata !DIExpression()), !dbg !7681
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !7684
  %9 = or i32 %8, %1, !dbg !7685
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #25, !dbg !7686
  ret i32 0, !dbg !7687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7688 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7690, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i32 %1, metadata !7691, metadata !DIExpression()), !dbg !7694
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7695
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7695
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7695
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7692, metadata !DIExpression()), !dbg !7694
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7696
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7696
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7693, metadata !DIExpression()), !dbg !7694
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !7697
  %9 = xor i32 %1, -1, !dbg !7698
  %10 = and i32 %8, %9, !dbg !7699
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #25, !dbg !7700
  ret i32 0, !dbg !7701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7702 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7704, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i32 %1, metadata !7705, metadata !DIExpression()), !dbg !7708
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7709
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7709
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7709
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7706, metadata !DIExpression()), !dbg !7708
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7710
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7710
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7707, metadata !DIExpression()), !dbg !7708
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !7711
  %9 = xor i32 %8, %1, !dbg !7712
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #25, !dbg !7713
  ret i32 0, !dbg !7714
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7717, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i8 %1, metadata !7718, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i32 %2, metadata !7719, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i32 %3, metadata !7720, metadata !DIExpression()), !dbg !7727
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7728
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !7728
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !7728
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !7721, metadata !DIExpression()), !dbg !7727
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !7729
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7729
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !7722, metadata !DIExpression()), !dbg !7727
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7730
  %11 = load volatile i32, i32* %10, align 4, !dbg !7730
  %12 = zext i8 %1 to i32, !dbg !7732
  %13 = shl nuw i32 1, %12, !dbg !7732
  %14 = and i32 %11, %13, !dbg !7733
  %15 = icmp ne i32 %14, 0, !dbg !7734
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !7735
  br i1 %17, label %77, label %18, !dbg !7735

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !7736
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !7738
  br i1 %21, label %29, label %22, !dbg !7738

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !7739
  br i1 %24, label %29, label %25, !dbg !7739

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !7741
  %27 = and i1 %26, %23, !dbg !7743
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !7744
  call void @llvm.dbg.value(metadata i32 %30, metadata !7725, metadata !DIExpression()), !dbg !7727
  %31 = icmp ult i8 %1, 16, !dbg !7745
  br i1 %31, label %32, label %35, !dbg !7747

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !7748
  call void @llvm.dbg.value(metadata i8 %33, metadata !7726, metadata !DIExpression()), !dbg !7727
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !7750
  call void @llvm.dbg.value(metadata i32* %34, metadata !7723, metadata !DIExpression()), !dbg !7727
  br label %41, !dbg !7751

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !7752
  br i1 %36, label %37, label %77, !dbg !7754

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !7755
  %39 = add nsw i8 %38, -32, !dbg !7755
  call void @llvm.dbg.value(metadata i8 %39, metadata !7726, metadata !DIExpression()), !dbg !7727
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !7757
  call void @llvm.dbg.value(metadata i32* %40, metadata !7723, metadata !DIExpression()), !dbg !7727
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !7758
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !7758
  call void @llvm.dbg.value(metadata i8 %43, metadata !7726, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i32* %42, metadata !7723, metadata !DIExpression()), !dbg !7727
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !7759, !srcloc !7767
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !7759
  call void @llvm.dbg.value(metadata i32 %45, metadata !7764, metadata !DIExpression()) #23, !dbg !7768
  call void @llvm.dbg.value(metadata i32 undef, metadata !7765, metadata !DIExpression()) #23, !dbg !7768
  call void @llvm.dbg.value(metadata i32 %45, metadata !7724, metadata !DIExpression()), !dbg !7727
  %46 = load volatile i32, i32* %42, align 4, !dbg !7769
  %47 = zext i8 %43 to i32, !dbg !7770
  %48 = shl nuw i32 3, %47, !dbg !7771
  %49 = xor i32 %48, -1, !dbg !7772
  %50 = and i32 %46, %49, !dbg !7773
  %51 = shl nuw i32 %30, %47, !dbg !7774
  %52 = or i32 %50, %51, !dbg !7775
  store volatile i32 %52, i32* %42, align 4, !dbg !7776
  %53 = icmp eq i32 %3, 100663296, !dbg !7777
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !7777
  %55 = load volatile i32, i32* %54, align 4, !dbg !7777
  %56 = or i32 %55, %13, !dbg !7777
  %57 = xor i32 %13, -1, !dbg !7777
  %58 = and i32 %55, %57, !dbg !7777
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !7777
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !7777
  store volatile i32 %59, i32* %60, align 4, !dbg !7777
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !7778
  %62 = load volatile i32, i32* %61, align 4, !dbg !7778
  br i1 %16, label %63, label %68, !dbg !7778

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !7778
  store volatile i32 %64, i32* %61, align 4, !dbg !7778
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7779
  %66 = load volatile i32, i32* %65, align 4, !dbg !7779
  %67 = or i32 %66, %13, !dbg !7779
  br label %74, !dbg !7779

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !7778
  %70 = and i32 %62, %69, !dbg !7778
  store volatile i32 %70, i32* %61, align 4, !dbg !7778
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7779
  %72 = load volatile i32, i32* %71, align 4, !dbg !7779
  %73 = and i32 %72, %69, !dbg !7779
  br label %74, !dbg !7779

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !7779
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7779
  store volatile i32 %75, i32* %76, align 4, !dbg !7779
  call void @llvm.dbg.value(metadata i32 %45, metadata !7780, metadata !DIExpression()) #23, !dbg !7783
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #23, !dbg !7785, !srcloc !7786
  br label %77, !dbg !7787

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !7727
  ret i32 %78, !dbg !7788
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !7789 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7791, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7792, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i1 %2, metadata !7793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7796
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7797
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !7797
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !7797
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !7794, metadata !DIExpression()), !dbg !7796
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !7798
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !7799
  ret i32 %8, !dbg !7800
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !7801 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7807, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7808, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i1 %2, metadata !7809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7810
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !7811
  br i1 %4, label %10, label %5, !dbg !7813

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7814
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #25, !dbg !7817
  %8 = or i1 %7, %2, !dbg !7818
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7818
  br i1 %2, label %11, label %13, !dbg !7818

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7819

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7820
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #25, !dbg !7823
  br label %13, !dbg !7824

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7810
  ret i32 %14, !dbg !7825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7826 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7830, metadata !DIExpression()), !dbg !7831
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7832
  %3 = icmp eq %struct._snode* %2, null, !dbg !7832
  ret i1 %3, !dbg !7832
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !7833 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7837, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7838, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7839, metadata !DIExpression()), !dbg !7841
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7842
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7840, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7839, metadata !DIExpression()), !dbg !7841
  %4 = icmp eq %struct._snode* %3, null, !dbg !7844
  br i1 %4, label %15, label %5, !dbg !7842

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7840, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7839, metadata !DIExpression()), !dbg !7841
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7846
  br i1 %6, label %9, label %11, !dbg !7849

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7840, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7839, metadata !DIExpression()), !dbg !7841
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7846
  br i1 %8, label %9, label %11, !dbg !7849, !llvm.loop !7850

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !7851
  br label %15, !dbg !7851

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7840, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7839, metadata !DIExpression()), !dbg !7841
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !7844
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7840, metadata !DIExpression()), !dbg !7841
  %14 = icmp eq %struct._snode* %13, null, !dbg !7844
  br i1 %14, label %15, label %7, !dbg !7842, !llvm.loop !7850

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !7854 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7858, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7859, metadata !DIExpression()), !dbg !7860
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7861
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !7861
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !7861
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7862
  %5 = icmp eq %struct._snode* %4, null, !dbg !7862
  br i1 %5, label %6, label %8, !dbg !7861

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7864
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !7864
  br label %8, !dbg !7864

8:                                                ; preds = %6, %2
  ret void, !dbg !7861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7866 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7870, metadata !DIExpression()), !dbg !7871
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7872
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7872
  ret %struct._snode* %3, !dbg !7873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7874 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7878, metadata !DIExpression()), !dbg !7880
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7879, metadata !DIExpression()), !dbg !7880
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7881
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7882
  ret void, !dbg !7883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7884 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7886, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7887, metadata !DIExpression()), !dbg !7888
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7889
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7890
  ret void, !dbg !7891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7892 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7894, metadata !DIExpression()), !dbg !7895
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7896
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7896
  ret %struct._snode* %3, !dbg !7897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7898 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7900, metadata !DIExpression()), !dbg !7902
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7901, metadata !DIExpression()), !dbg !7902
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7903
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7904
  ret void, !dbg !7905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !7906 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7910, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7911, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7912, metadata !DIExpression()), !dbg !7913
  %4 = icmp eq %struct._snode* %1, null, !dbg !7914
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !7916
  br i1 %4, label %6, label %11, !dbg !7917

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !7918
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7920
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7920
  br i1 %8, label %9, label %15, !dbg !7918

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7922
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !7922
  br label %15, !dbg !7922

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !7924
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7926
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7926
  br i1 %13, label %14, label %15, !dbg !7924

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !7928
  br label %15, !dbg !7928

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !7917
  ret void, !dbg !7917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !7930 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7934, metadata !DIExpression()), !dbg !7935
  %2 = icmp eq %struct._snode* %0, null, !dbg !7936
  br i1 %2, label %5, label %3, !dbg !7936

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !7936
  br label %5, !dbg !7936

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7936
  ret %struct._snode* %6, !dbg !7936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7937 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7939, metadata !DIExpression()), !dbg !7940
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !7941
  ret %struct._snode* %2, !dbg !7941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7942 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7944, metadata !DIExpression()), !dbg !7945
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7946
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7946
  ret %struct._snode* %3, !dbg !7947
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #16 !dbg !7948 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !7952, metadata !DIExpression()), !dbg !7953
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !7954
  %3 = load volatile i32, i32* %2, align 4, !dbg !7954
  ret i32 %3, !dbg !7955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7956 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !7960, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i32 %1, metadata !7961, metadata !DIExpression()), !dbg !7962
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !7963
  store volatile i32 %1, i32* %3, align 4, !dbg !7964
  ret void, !dbg !7965
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !7966 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7970, metadata !DIExpression()), !dbg !7974
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7975
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !7975
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !7975
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !7971, metadata !DIExpression()), !dbg !7974
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7976
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !7976
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !7976
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !7972, metadata !DIExpression()), !dbg !7974
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !7977
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7977
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !7978
  %11 = load volatile i32, i32* %10, align 4, !dbg !7978
  call void @llvm.dbg.value(metadata i32 %11, metadata !7973, metadata !DIExpression()), !dbg !7974
  store volatile i32 %11, i32* %10, align 4, !dbg !7979
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !7980
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #25, !dbg !7981
  ret void, !dbg !7982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7983 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7987, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7988, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 %2, metadata !7989, metadata !DIExpression()), !dbg !7992
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7993
  %5 = icmp eq %struct._snode* %4, null, !dbg !7993
  br i1 %5, label %21, label %6, !dbg !7993

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !7995
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7991, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7990, metadata !DIExpression()), !dbg !7992
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7996
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7996
  %11 = load i32, i32* %10, align 4, !dbg !7996
  %12 = and i32 %11, %2, !dbg !8000
  %13 = icmp eq i32 %12, 0, !dbg !8000
  br i1 %13, label %19, label %14, !dbg !8001

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7990, metadata !DIExpression()), !dbg !7992
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8002
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8002
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8002
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !8004
  br label %19, !dbg !8005

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7990, metadata !DIExpression()), !dbg !7992
  %20 = icmp eq %struct._snode* %8, null, !dbg !8006
  br i1 %20, label %21, label %6, !dbg !8006

21:                                               ; preds = %19, %3
  ret void, !dbg !8007
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1084 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1086, metadata !DIExpression()), !dbg !8008
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #24, !dbg !8009
  tail call void @arch_irq_enable(i32 noundef 64) #24, !dbg !8011
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #24, !dbg !8012
  tail call void @arch_irq_enable(i32 noundef 65) #24, !dbg !8011
  ret i32 0, !dbg !8011
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !8014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8016, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i8* %1, metadata !8017, metadata !DIExpression()), !dbg !8020
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8021
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !8021
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !8021
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !8021
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !8021
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !8018, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i32 -1, metadata !8019, metadata !DIExpression()), !dbg !8020
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #25, !dbg !8022
  br i1 %8, label %9, label %13, !dbg !8024

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #25, !dbg !8025
  store i8 %10, i8* %1, align 1, !dbg !8027
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #25, !dbg !8028
  br i1 %11, label %12, label %13, !dbg !8030

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #24, !dbg !8031
  br label %13, !dbg !8033

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !8020
  call void @llvm.dbg.value(metadata i32 %14, metadata !8019, metadata !DIExpression()), !dbg !8020
  ret i32 %14, !dbg !8034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !8035 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8037, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.value(metadata i8 %1, metadata !8038, metadata !DIExpression()), !dbg !8040
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8041
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !8041
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !8041
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !8041
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !8041
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !8039, metadata !DIExpression()), !dbg !8040
  br label %8, !dbg !8042

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #25, !dbg !8043
  br i1 %9, label %10, label %8, !dbg !8042, !llvm.loop !8044

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #25, !dbg !8046
  ret void, !dbg !8047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #15 !dbg !8048 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8050, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i8* %1, metadata !8051, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %2, metadata !8052, metadata !DIExpression()), !dbg !8055
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8056
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !8056
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !8056
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !8056
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8056
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 0, metadata !8054, metadata !DIExpression()), !dbg !8055
  %9 = icmp eq i32 %2, 0, !dbg !8057
  br i1 %9, label %18, label %10, !dbg !8058

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8054, metadata !DIExpression()), !dbg !8055
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #25, !dbg !8059
  br i1 %12, label %13, label %18, !dbg !8060

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !8061
  %15 = load i8, i8* %14, align 1, !dbg !8061
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #25, !dbg !8063
  %16 = add nuw i32 %11, 1, !dbg !8064
  call void @llvm.dbg.value(metadata i32 %16, metadata !8054, metadata !DIExpression()), !dbg !8055
  %17 = icmp eq i32 %16, %2, !dbg !8057
  br i1 %17, label %18, label %10, !dbg !8058, !llvm.loop !8065

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !8055
  ret i32 %19, !dbg !8067
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !8068 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8070, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i8* %1, metadata !8071, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i32 %2, metadata !8072, metadata !DIExpression()), !dbg !8075
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8076
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !8076
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !8076
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !8076
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8076
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !8073, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i32 0, metadata !8074, metadata !DIExpression()), !dbg !8075
  %9 = icmp eq i32 %2, 0, !dbg !8077
  br i1 %9, label %18, label %10, !dbg !8078

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8074, metadata !DIExpression()), !dbg !8075
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #25, !dbg !8079
  br i1 %12, label %13, label %18, !dbg !8080

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #25, !dbg !8081
  %15 = add nuw i32 %11, 1, !dbg !8083
  call void @llvm.dbg.value(metadata i32 %15, metadata !8074, metadata !DIExpression()), !dbg !8075
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !8084
  store i8 %14, i8* %16, align 1, !dbg !8085
  %17 = icmp eq i32 %15, %2, !dbg !8077
  br i1 %17, label %18, label %10, !dbg !8078, !llvm.loop !8086

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !8075
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #25, !dbg !8088
  br i1 %20, label %21, label %22, !dbg !8090

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #24, !dbg !8091
  br label %22, !dbg !8093

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !8094
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8097, metadata !DIExpression()), !dbg !8099
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8100
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8100
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8100
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8100
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8100
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8098, metadata !DIExpression()), !dbg !8099
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #24, !dbg !8101
  ret void, !dbg !8102
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8105, metadata !DIExpression()), !dbg !8107
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8108
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8108
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8108
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8108
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8108
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8106, metadata !DIExpression()), !dbg !8107
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #24, !dbg !8109
  ret void, !dbg !8110
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !8111 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8113, metadata !DIExpression()), !dbg !8115
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8116
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8116
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8116
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8116
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8116
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8114, metadata !DIExpression()), !dbg !8115
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #25, !dbg !8117
  %8 = zext i1 %7 to i32, !dbg !8117
  ret i32 %8, !dbg !8118
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8119 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8121, metadata !DIExpression()), !dbg !8123
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8124
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8124
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8124
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8124
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8124
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8122, metadata !DIExpression()), !dbg !8123
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #24, !dbg !8125
  ret void, !dbg !8126
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8127 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8129, metadata !DIExpression()), !dbg !8131
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8132
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8132
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8132
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8132
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8132
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8130, metadata !DIExpression()), !dbg !8131
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #24, !dbg !8133
  ret void, !dbg !8134
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !8135 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8137, metadata !DIExpression()), !dbg !8139
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8140
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8140
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8140
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8140
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8140
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8138, metadata !DIExpression()), !dbg !8139
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #25, !dbg !8141
  %8 = zext i1 %7 to i32, !dbg !8141
  ret i32 %8, !dbg !8142
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8145, metadata !DIExpression()), !dbg !8147
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8148
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8148
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8148
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8148
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8148
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8146, metadata !DIExpression()), !dbg !8147
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #24, !dbg !8149
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #24, !dbg !8150
  ret void, !dbg !8151
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8152 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8154, metadata !DIExpression()), !dbg !8156
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8157
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8157
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8157
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8157
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8157
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8155, metadata !DIExpression()), !dbg !8156
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #24, !dbg !8158
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #24, !dbg !8159
  ret void, !dbg !8160
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !8161 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8163, metadata !DIExpression()), !dbg !8165
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8166
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8166
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8166
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8166
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8166
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8164, metadata !DIExpression()), !dbg !8165
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #25, !dbg !8167
  br i1 %7, label %11, label %8, !dbg !8168

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #25, !dbg !8169
  %10 = zext i1 %9 to i32, !dbg !8168
  br label %11, !dbg !8168

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !8170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !8171 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8173, metadata !DIExpression()), !dbg !8174
  ret i32 1, !dbg !8175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !8176 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8178, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !8179, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata i8* %2, metadata !8180, metadata !DIExpression()), !dbg !8183
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8184
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !8184
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !8184
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !8181, metadata !DIExpression()), !dbg !8183
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !8185
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !8186
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !8187
  store i8* %2, i8** %8, align 4, !dbg !8188
  ret void, !dbg !8189
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8190 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8194, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.value(metadata i32 %1, metadata !8195, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.value(metadata i32* null, metadata !8196, metadata !DIExpression()), !dbg !8197
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !8198
  %4 = lshr i32 %1, 16, !dbg !8199
  %5 = add i32 %4, %3, !dbg !8200
  %6 = inttoptr i32 %5 to i32*, !dbg !8201
  call void @llvm.dbg.value(metadata i32* %6, metadata !8196, metadata !DIExpression()), !dbg !8197
  %7 = load volatile i32, i32* %6, align 4, !dbg !8202
  %8 = and i32 %1, 65535, !dbg !8203
  %9 = shl nuw i32 1, %8, !dbg !8204
  %10 = and i32 %7, %9, !dbg !8204
  %11 = icmp ne i32 %10, 0, !dbg !8204
  ret i1 %11, !dbg !8205
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !8206 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8210, metadata !DIExpression()), !dbg !8211
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !8212
  %3 = load volatile i32, i32* %2, align 4, !dbg !8212
  %4 = trunc i32 %3 to i8, !dbg !8213
  ret i8 %4, !dbg !8214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !8215 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8219, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata i8 %1, metadata !8220, metadata !DIExpression()), !dbg !8221
  %3 = zext i8 %1 to i32, !dbg !8222
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !8223
  store volatile i32 %3, i32* %4, align 4, !dbg !8224
  ret void, !dbg !8225
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1384, metadata !DIExpression()), !dbg !8226
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #24, !dbg !8227
  tail call void @arch_irq_enable(i32 noundef 26) #24, !dbg !8229
  ret void, !dbg !8229
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !8230 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8232, metadata !DIExpression()), !dbg !8234
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8235
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !8235
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !8235
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !8233, metadata !DIExpression()), !dbg !8234
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !8236
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !8236
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !8238
  br i1 %7, label %11, label %8, !dbg !8239

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !8240
  %10 = load i8*, i8** %9, align 4, !dbg !8240
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #24, !dbg !8242
  br label %11, !dbg !8243

11:                                               ; preds = %8, %1
  ret void, !dbg !8244
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !8245 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8247, metadata !DIExpression()), !dbg !8262
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8263
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !8263
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !8263
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !8263
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !8263
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !8248, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !8249, metadata !DIExpression()), !dbg !8262
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8264, !srcloc !8270
  call void @llvm.dbg.value(metadata i32 undef, metadata !8267, metadata !DIExpression()) #23, !dbg !8271
  call void @llvm.dbg.value(metadata i32 undef, metadata !8268, metadata !DIExpression()) #23, !dbg !8271
  call void @llvm.dbg.value(metadata i32 undef, metadata !8250, metadata !DIExpression()), !dbg !8262
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !8272
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #23, !dbg !8272
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !8252, metadata !DIExpression()), !dbg !8273
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !8274
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !8275
  %12 = load i32, i32* %11, align 4, !dbg !8275
  store i32 %12, i32* %10, align 4, !dbg !8274
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !8274
  store i32 32, i32* %13, align 4, !dbg !8274
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !8274
  store i32 0, i32* %14, align 4, !dbg !8274
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !8274
  store i32 0, i32* %15, align 4, !dbg !8274
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !8274
  store i32 6, i32* %16, align 4, !dbg !8274
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !8276
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !8276
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #25, !dbg !8277
  call void @llvm.dbg.value(metadata i32 %19, metadata !8251, metadata !DIExpression()), !dbg !8262
  %20 = icmp eq i32 %19, 0, !dbg !8278
  br i1 %20, label %21, label %30, !dbg !8280

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !8274
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !8264
  call void @llvm.dbg.value(metadata i32 %23, metadata !8267, metadata !DIExpression()) #23, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %23, metadata !8250, metadata !DIExpression()), !dbg !8262
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #24, !dbg !8281
  store i32 %24, i32* %22, align 4, !dbg !8282
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #24, !dbg !8283
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #25, !dbg !8284
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #25, !dbg !8285
  call void @llvm.dbg.value(metadata i32 undef, metadata !8286, metadata !DIExpression()) #23, !dbg !8289
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !8291, !srcloc !8292
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !8293
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !8293
  call void %26(%struct.device* noundef nonnull %0) #24, !dbg !8294
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !8295
  %28 = load i8, i8* %27, align 4, !dbg !8295
  %29 = zext i8 %28 to i32, !dbg !8296
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #24, !dbg !8297
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #25, !dbg !8298
  br label %30, !dbg !8299

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #23, !dbg !8300
  ret i32 %19, !dbg !8300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8301 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8305, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8 0, metadata !8306, metadata !DIExpression()), !dbg !8309
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8310
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8310
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8308, metadata !DIExpression(DW_OP_deref)), !dbg !8309
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !8311
  call void @llvm.dbg.value(metadata i32 %4, metadata !8307, metadata !DIExpression()), !dbg !8309
  %5 = icmp slt i32 %4, 0, !dbg !8312
  br i1 %5, label %9, label %6, !dbg !8314

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8315
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8308, metadata !DIExpression()), !dbg !8309
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !8316
  br label %9, !dbg !8317

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8309
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8318
  ret i32 %10, !dbg !8318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !8319 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8321, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i8 2, metadata !8322, metadata !DIExpression()), !dbg !8323
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !8324
  %3 = load volatile i32, i32* %2, align 4, !dbg !8324
  %4 = and i32 %3, -64513, !dbg !8325
  %5 = or i32 %4, 2048, !dbg !8326
  store volatile i32 %5, i32* %2, align 4, !dbg !8327
  ret void, !dbg !8328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !8329 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8331, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i8 1, metadata !8332, metadata !DIExpression()), !dbg !8333
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !8334
  %3 = load volatile i32, i32* %2, align 4, !dbg !8334
  %4 = and i32 %3, -64, !dbg !8335
  %5 = or i32 %4, 1, !dbg !8336
  store volatile i32 %5, i32* %2, align 4, !dbg !8337
  ret void, !dbg !8338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !8339 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8343, metadata !DIExpression()), !dbg !8344
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !8345
  %3 = load volatile i32, i32* %2, align 4, !dbg !8346
  %4 = or i32 %3, 1, !dbg !8346
  store volatile i32 %4, i32* %2, align 4, !dbg !8346
  ret void, !dbg !8347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8348 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8352, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8353, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.value(metadata i32 0, metadata !8354, metadata !DIExpression()), !dbg !8355
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8356
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !8356
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8357
  %5 = load i8, i8* %4, align 4, !dbg !8357
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !8358
  ret i32 %6, !dbg !8359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !8360 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8362, metadata !DIExpression()), !dbg !8363
  tail call fastcc void @__NVIC_SetPriority.39() #25, !dbg !8364
  store i32 19999, i32* @last_load, align 4, !dbg !8365
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8366
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8367
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8368
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8369
  %3 = or i32 %2, 7, !dbg !8369
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8369
  ret i32 0, !dbg !8370
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.39() unnamed_addr #15 !dbg !8371 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8373, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i32 1, metadata !8374, metadata !DIExpression()), !dbg !8375
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8376
  ret void, !dbg !8379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8380 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8382, metadata !DIExpression()), !dbg !8384
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !8385
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8386
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8387
  %5 = add i32 %4, %3, !dbg !8387
  store i32 %5, i32* @cycle_count, align 4, !dbg !8387
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8388
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8389
  %7 = sub i32 %5, %6, !dbg !8392
  %8 = udiv i32 %7, 20000, !dbg !8393
  call void @llvm.dbg.value(metadata i32 %8, metadata !8383, metadata !DIExpression()), !dbg !8384
  %9 = mul nuw i32 %8, 20000, !dbg !8394
  %10 = add i32 %9, %6, !dbg !8395
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8395
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !8396
  tail call void @z_arm_int_exit() #24, !dbg !8397
  ret void, !dbg !8398
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !8399 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8404
  call void @llvm.dbg.value(metadata i32 %1, metadata !8401, metadata !DIExpression()), !dbg !8405
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8406
  call void @llvm.dbg.value(metadata i32 %2, metadata !8402, metadata !DIExpression()), !dbg !8405
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8407
  call void @llvm.dbg.value(metadata i32 %3, metadata !8403, metadata !DIExpression()), !dbg !8405
  %4 = and i32 %2, 65536, !dbg !8408
  %5 = icmp ne i32 %4, 0, !dbg !8408
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8410
  %8 = load i32, i32* @last_load, align 4, !dbg !8405
  br i1 %7, label %9, label %13, !dbg !8410

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8411
  %11 = add i32 %10, %8, !dbg !8411
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8411
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8413
  br label %13, !dbg !8414

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8415
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8416
  %16 = add i32 %14, %15, !dbg !8417
  ret i32 %16, !dbg !8418
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8423, metadata !DIExpression()), !dbg !8436
  call void @llvm.dbg.value(metadata i1 %1, metadata !8424, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8436
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8437
  br i1 %4, label %5, label %8, !dbg !8437

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8439
  %7 = and i32 %6, -2, !dbg !8439
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8439
  store i32 -16777216, i32* @last_load, align 4, !dbg !8441
  br label %54, !dbg !8442

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8443
  call void @llvm.dbg.value(metadata i32 %9, metadata !8428, metadata !DIExpression()), !dbg !8436
  br i1 %3, label %18, label %10, !dbg !8444

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8444
  call void @llvm.dbg.value(metadata i32 undef, metadata !8423, metadata !DIExpression()), !dbg !8436
  %12 = icmp slt i32 %11, 1, !dbg !8445
  br i1 %12, label %18, label %13, !dbg !8445

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !8445
  %15 = select i1 %14, i32 %11, i32 837, !dbg !8445
  %16 = mul nuw nsw i32 %15, 20000, !dbg !8445
  %17 = add nuw nsw i32 %16, 19999, !dbg !8445
  br label %18, !dbg !8445

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8423, metadata !DIExpression()), !dbg !8436
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8446, metadata !DIExpression()) #23, !dbg !8453
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8455, !srcloc !8461
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8455
  call void @llvm.dbg.value(metadata i32 %21, metadata !8458, metadata !DIExpression()) #23, !dbg !8462
  call void @llvm.dbg.value(metadata i32 undef, metadata !8459, metadata !DIExpression()) #23, !dbg !8462
  call void @llvm.dbg.value(metadata i32 %21, metadata !8452, metadata !DIExpression()) #23, !dbg !8453
  call void @llvm.dbg.value(metadata i32 %21, metadata !8429, metadata !DIExpression()), !dbg !8436
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !8463
  call void @llvm.dbg.value(metadata i32 %22, metadata !8434, metadata !DIExpression()), !dbg !8436
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8464
  call void @llvm.dbg.value(metadata i32 %23, metadata !8426, metadata !DIExpression()), !dbg !8436
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8465
  %25 = add i32 %24, %22, !dbg !8465
  store i32 %25, i32* @cycle_count, align 4, !dbg !8465
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8466
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8467
  %27 = sub i32 %25, %26, !dbg !8468
  call void @llvm.dbg.value(metadata i32 %27, metadata !8435, metadata !DIExpression()), !dbg !8436
  %28 = icmp slt i32 %27, 0, !dbg !8469
  br i1 %28, label %38, label %29, !dbg !8471

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8425, metadata !DIExpression()), !dbg !8436
  call void @llvm.dbg.value(metadata i32 undef, metadata !8425, metadata !DIExpression()), !dbg !8436
  %30 = add nuw i32 %19, %27, !dbg !8472
  %31 = urem i32 %30, 20000, !dbg !8474
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8425, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8436
  %32 = sub nuw nsw i32 %19, %31, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %32, metadata !8425, metadata !DIExpression()), !dbg !8436
  %33 = icmp ugt i32 %32, 1250, !dbg !8476
  br i1 %33, label %34, label %36, !dbg !8476

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8425, metadata !DIExpression()), !dbg !8436
  %35 = icmp ugt i32 %32, 16740000, !dbg !8477
  br i1 %35, label %38, label %36, !dbg !8479

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1250, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1250, %18 ], [ 16740000, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8480
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8481
  call void @llvm.dbg.value(metadata i32 %40, metadata !8427, metadata !DIExpression()), !dbg !8436
  %41 = add nsw i32 %39, -1, !dbg !8482
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8483
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8484
  %42 = icmp ult i32 %23, %40, !dbg !8485
  br i1 %42, label %43, label %48, !dbg !8487

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8488
  %45 = add i32 %23, %9, !dbg !8490
  %46 = sub i32 %45, %40, !dbg !8491
  %47 = add i32 %46, %44, !dbg !8488
  br label %52, !dbg !8492

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8493
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8495
  %51 = add i32 %49, %50, !dbg !8495
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8496
  store i32 %53, i32* @cycle_count, align 4, !dbg !8496
  call void @llvm.dbg.value(metadata i32 %21, metadata !8497, metadata !DIExpression()) #23, !dbg !8503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8502, metadata !DIExpression()) #23, !dbg !8503
  call void @llvm.dbg.value(metadata i32 %21, metadata !8505, metadata !DIExpression()) #23, !dbg !8508
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !8510, !srcloc !8511
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8512
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8513 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8446, metadata !DIExpression()) #23, !dbg !8517
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8519, !srcloc !8461
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8519
  call void @llvm.dbg.value(metadata i32 %2, metadata !8458, metadata !DIExpression()) #23, !dbg !8521
  call void @llvm.dbg.value(metadata i32 undef, metadata !8459, metadata !DIExpression()) #23, !dbg !8521
  call void @llvm.dbg.value(metadata i32 %2, metadata !8452, metadata !DIExpression()) #23, !dbg !8517
  call void @llvm.dbg.value(metadata i32 %2, metadata !8515, metadata !DIExpression()), !dbg !8522
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8523
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8524
  %5 = add i32 %4, %3, !dbg !8525
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8526
  %7 = sub i32 %5, %6, !dbg !8527
  call void @llvm.dbg.value(metadata i32 %7, metadata !8516, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i32 %2, metadata !8497, metadata !DIExpression()) #23, !dbg !8528
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8502, metadata !DIExpression()) #23, !dbg !8528
  call void @llvm.dbg.value(metadata i32 %2, metadata !8505, metadata !DIExpression()) #23, !dbg !8530
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8532, !srcloc !8511
  %8 = udiv i32 %7, 20000, !dbg !8533
  ret i32 %8, !dbg !8534
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8535 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8446, metadata !DIExpression()) #23, !dbg !8539
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8541, !srcloc !8461
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8541
  call void @llvm.dbg.value(metadata i32 %2, metadata !8458, metadata !DIExpression()) #23, !dbg !8543
  call void @llvm.dbg.value(metadata i32 undef, metadata !8459, metadata !DIExpression()) #23, !dbg !8543
  call void @llvm.dbg.value(metadata i32 %2, metadata !8452, metadata !DIExpression()) #23, !dbg !8539
  call void @llvm.dbg.value(metadata i32 %2, metadata !8537, metadata !DIExpression()), !dbg !8544
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8545
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8546
  %5 = add i32 %4, %3, !dbg !8547
  call void @llvm.dbg.value(metadata i32 %5, metadata !8538, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata i32 %2, metadata !8497, metadata !DIExpression()) #23, !dbg !8548
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8502, metadata !DIExpression()) #23, !dbg !8548
  call void @llvm.dbg.value(metadata i32 %2, metadata !8505, metadata !DIExpression()) #23, !dbg !8550
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8552, !srcloc !8511
  ret i32 %5, !dbg !8553
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !8554 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8555
  %2 = icmp eq i32 %1, -16777216, !dbg !8557
  br i1 %2, label %3, label %6, !dbg !8558

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8559
  %5 = or i32 %4, 1, !dbg !8559
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8559
  br label %6, !dbg !8561

6:                                                ; preds = %3, %0
  ret void, !dbg !8562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !8563 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8564
  %2 = and i32 %1, -2, !dbg !8564
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8564
  ret void, !dbg !8565
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !8566 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8599, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.value(metadata i8 %1, metadata !8600, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8601, metadata !DIExpression()), !dbg !8602
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !8603
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8603
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !8602
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8604
  %8 = load i8, i8* %6, align 4, !dbg !8605
  %9 = zext i8 %8 to i32, !dbg !8606
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !8606
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !8607
  br i1 %11, label %18, label %24, !dbg !8608

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !8602
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8604
  %14 = load i8, i8* %6, align 4, !dbg !8605
  %15 = zext i8 %14 to i32, !dbg !8606
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !8606
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !8607
  br i1 %17, label %18, label %24, !dbg !8608, !llvm.loop !8609

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !8611
  %21 = load i8, i8* %20, align 1, !dbg !8611
  %22 = icmp eq i8 %21, %1, !dbg !8614
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !8615
  br i1 %22, label %24, label %12, !dbg !8616

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !8602
  ret i32 %25, !dbg !8617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #11 !dbg !8618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8620, metadata !DIExpression()), !dbg !8621
  ret i32 0, !dbg !8622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8623 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !8641, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i8 %1, metadata !8642, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i32 %2, metadata !8643, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i8 0, metadata !8644, metadata !DIExpression()), !dbg !8655
  %4 = icmp eq i8 %1, 0, !dbg !8656
  br i1 %4, label %7, label %5, !dbg !8657

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !8656
  br label %8, !dbg !8657

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !8658

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8644, metadata !DIExpression()), !dbg !8655
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !8659
  %11 = load i32, i32* %10, align 4, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %11, metadata !8646, metadata !DIExpression()), !dbg !8660
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !8661
  %13 = load i8, i8* %12, align 4, !dbg !8661
  call void @llvm.dbg.value(metadata i8 %13, metadata !8649, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8660
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !8662
  %15 = load i32, i32* %14, align 4, !dbg !8662
  call void @llvm.dbg.value(metadata i32 %15, metadata !8650, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8 %13, metadata !8651, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8660
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !8663
  %17 = load i32, i32* %16, align 4, !dbg !8663
  call void @llvm.dbg.value(metadata i32 %17, metadata !8652, metadata !DIExpression()), !dbg !8660
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !8664
  %19 = load i32, i32* %18, align 4, !dbg !8664
  call void @llvm.dbg.value(metadata i32 %19, metadata !8653, metadata !DIExpression()), !dbg !8660
  %20 = and i8 %13, 15, !dbg !8665
  %21 = zext i8 %20 to i32, !dbg !8665
  %22 = lshr i32 %19, 27, !dbg !8666
  %23 = and i32 %22, 16, !dbg !8666
  %24 = or i32 %23, %21, !dbg !8667
  %25 = inttoptr i32 %11 to i32*, !dbg !8668
  store volatile i32 %24, i32* %25, align 4, !dbg !8669
  %26 = icmp eq i32 %15, 0, !dbg !8670
  br i1 %26, label %32, label %27, !dbg !8672

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !8673
  call void @llvm.dbg.value(metadata i8 %28, metadata !8651, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8660
  %29 = and i8 %28, 7, !dbg !8674
  %30 = zext i8 %29 to i32, !dbg !8674
  %31 = inttoptr i32 %15 to i32*, !dbg !8676
  store volatile i32 %30, i32* %31, align 4, !dbg !8677
  br label %32, !dbg !8678

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !8679
  br i1 %33, label %37, label %34, !dbg !8681

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !8682
  %36 = inttoptr i32 %17 to i32*, !dbg !8684
  store volatile i32 %35, i32* %36, align 4, !dbg !8685
  br label %37, !dbg !8686

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %38, metadata !8644, metadata !DIExpression()), !dbg !8655
  %39 = icmp eq i32 %38, %6, !dbg !8656
  br i1 %39, label %7, label %8, !dbg !8657, !llvm.loop !8688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !8690 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8747, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 %1, metadata !8748, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 %2, metadata !8749, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 %3, metadata !8750, metadata !DIExpression()), !dbg !8751
  %5 = inttoptr i32 %1 to i32*, !dbg !8752
  %6 = load volatile i32, i32* %5, align 4, !dbg !8752
  %7 = and i32 %6, -458816, !dbg !8753
  %8 = shl i32 %2, 16, !dbg !8754
  %9 = and i32 %8, 458752, !dbg !8754
  %10 = and i32 %3, 63, !dbg !8755
  %11 = or i32 %10, %9, !dbg !8756
  %12 = or i32 %11, %7, !dbg !8757
  store volatile i32 %12, i32* %5, align 4, !dbg !8758
  ret void, !dbg !8759
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #16 !dbg !8760 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8764, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i32 %1, metadata !8765, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i32* %2, metadata !8766, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i32* %3, metadata !8767, metadata !DIExpression()), !dbg !8768
  %5 = inttoptr i32 %1 to i32*, !dbg !8769
  %6 = load volatile i32, i32* %5, align 4, !dbg !8769
  %7 = lshr i32 %6, 16, !dbg !8770
  %8 = and i32 %7, 7, !dbg !8770
  store i32 %8, i32* %2, align 4, !dbg !8771
  %9 = load volatile i32, i32* %5, align 4, !dbg !8772
  %10 = and i32 %9, 63, !dbg !8773
  store i32 %10, i32* %3, align 4, !dbg !8774
  ret void, !dbg !8775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #15 !dbg !8776 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8780, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i32 %1, metadata !8781, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i32 %2, metadata !8782, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i32 %3, metadata !8783, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i32 %4, metadata !8784, metadata !DIExpression()), !dbg !8785
  %6 = inttoptr i32 %1 to i32*, !dbg !8786
  %7 = load volatile i32, i32* %6, align 4, !dbg !8786
  %8 = and i32 %7, -117899328, !dbg !8787
  %9 = shl i32 %2, 24, !dbg !8788
  %10 = and i32 %9, 117440512, !dbg !8788
  %11 = shl i32 %3, 16, !dbg !8789
  %12 = and i32 %11, 458752, !dbg !8789
  %13 = and i32 %4, 63, !dbg !8790
  %14 = or i32 %12, %10, !dbg !8791
  %15 = or i32 %14, %13, !dbg !8792
  %16 = or i32 %15, %8, !dbg !8793
  store volatile i32 %16, i32* %6, align 4, !dbg !8794
  ret void, !dbg !8795
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8796 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8801, metadata !DIExpression()), !dbg !8802
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #25, !dbg !8803
  br i1 %2, label %7, label %3, !dbg !8805

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !8806
  %5 = and i32 %4, 127, !dbg !8807
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !8808
  br label %7, !dbg !8809

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !8802
  ret i32 %8, !dbg !8810
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8811 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8815, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 %1, metadata !8816, metadata !DIExpression()), !dbg !8817
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !8818
  %4 = and i32 %1, 65535, !dbg !8818
  %5 = add i32 %4, %3, !dbg !8818
  %6 = inttoptr i32 %5 to i32*, !dbg !8818
  %7 = load volatile i32, i32* %6, align 4, !dbg !8818
  %8 = and i32 %7, 65536, !dbg !8819
  %9 = icmp ne i32 %8, 0, !dbg !8820
  ret i1 %9, !dbg !8821
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8822 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8824, metadata !DIExpression()), !dbg !8825
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #25, !dbg !8826
  br i1 %2, label %8, label %3, !dbg !8828

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !8829
  %5 = and i32 %4, 1, !dbg !8831
  %6 = icmp eq i32 %5, 0, !dbg !8831
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !8832
  br label %8, !dbg !8832

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !8825
  ret i32 %9, !dbg !8833
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8834 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8836, metadata !DIExpression()), !dbg !8840
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #25, !dbg !8841
  br i1 %2, label %40, label %3, !dbg !8843

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !8844
  %5 = trunc i32 %4 to i8, !dbg !8844
  %6 = and i8 %5, 127, !dbg !8844
  call void @llvm.dbg.value(metadata i8 %6, metadata !8837, metadata !DIExpression()), !dbg !8840
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !8845
  %8 = lshr i32 %7, 21, !dbg !8846
  %9 = and i32 %8, 3, !dbg !8847
  call void @llvm.dbg.value(metadata i32 %9, metadata !8838, metadata !DIExpression()), !dbg !8840
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %9, !dbg !8848
  %11 = load i32, i32* %10, align 4, !dbg !8848
  call void @llvm.dbg.value(metadata i8 undef, metadata !8838, metadata !DIExpression()), !dbg !8840
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !8849
  %13 = load volatile i32, i32* %12, align 4, !dbg !8849
  %14 = and i32 %13, 32768, !dbg !8851
  %15 = icmp eq i32 %14, 0, !dbg !8851
  br i1 %15, label %36, label %16, !dbg !8852

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !8853
  %18 = and i32 %17, 32767, !dbg !8855
  %19 = uitofp i32 %18 to float, !dbg !8856
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !8857
  %21 = load volatile i32, i32* %20, align 4, !dbg !8857
  %22 = and i32 %21, 1073741823, !dbg !8858
  %23 = uitofp i32 %22 to float, !dbg !8859
  %24 = fdiv float %19, %23, !dbg !8860
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !8861
  %26 = load volatile i32, i32* %25, align 4, !dbg !8861
  %27 = and i32 %26, 1073741823, !dbg !8862
  %28 = uitofp i32 %27 to float, !dbg !8863
  %29 = fmul float %24, %28, !dbg !8864
  call void @llvm.dbg.value(metadata float %29, metadata !8839, metadata !DIExpression()), !dbg !8840
  %30 = lshr i32 24000000, %11, !dbg !8865
  %31 = uitofp i32 %30 to float, !dbg !8866
  %32 = uitofp i8 %6 to float, !dbg !8867
  %33 = fadd float %29, %32, !dbg !8868
  %34 = fmul float %33, %31, !dbg !8869
  %35 = fptoui float %34 to i32, !dbg !8870
  br label %40, !dbg !8871

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !8872
  %38 = zext i8 %6 to i32, !dbg !8874
  %39 = mul nuw i32 %37, %38, !dbg !8875
  br label %40, !dbg !8876

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !8840
  ret i32 %41, !dbg !8877
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8878 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8880, metadata !DIExpression()), !dbg !8881
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #25, !dbg !8882
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !8881
  ret i32 %3, !dbg !8884
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8885 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8887, metadata !DIExpression()), !dbg !8892
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #25, !dbg !8893
  br i1 %2, label %47, label %3, !dbg !8895

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8896
  %5 = trunc i32 %4 to i8, !dbg !8896
  %6 = and i8 %5, 127, !dbg !8896
  call void @llvm.dbg.value(metadata i8 %6, metadata !8888, metadata !DIExpression()), !dbg !8892
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8897
  %8 = lshr i32 %7, 22, !dbg !8898
  %9 = and i32 %8, 3, !dbg !8899
  call void @llvm.dbg.value(metadata i32 %8, metadata !8889, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8892
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8900
  %11 = lshr i32 %10, 19, !dbg !8901
  %12 = and i32 %11, 3, !dbg !8902
  call void @llvm.dbg.value(metadata i32 %11, metadata !8890, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8892
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !8903
  %14 = load i32, i32* %13, align 4, !dbg !8903
  call void @llvm.dbg.value(metadata i8 undef, metadata !8889, metadata !DIExpression()), !dbg !8892
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !8904
  %16 = load i32, i32* %15, align 4, !dbg !8904
  call void @llvm.dbg.value(metadata i8 undef, metadata !8890, metadata !DIExpression()), !dbg !8892
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !8905
  %18 = load volatile i32, i32* %17, align 4, !dbg !8905
  %19 = and i32 %18, 32768, !dbg !8907
  %20 = icmp eq i32 %19, 0, !dbg !8907
  br i1 %20, label %42, label %21, !dbg !8908

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !8909
  %23 = and i32 %22, 32767, !dbg !8911
  %24 = uitofp i32 %23 to float, !dbg !8912
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !8913
  %26 = load volatile i32, i32* %25, align 4, !dbg !8913
  %27 = and i32 %26, 1073741823, !dbg !8914
  %28 = uitofp i32 %27 to float, !dbg !8915
  %29 = fdiv float %24, %28, !dbg !8916
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !8917
  %31 = load volatile i32, i32* %30, align 4, !dbg !8917
  %32 = and i32 %31, 1073741823, !dbg !8918
  %33 = uitofp i32 %32 to float, !dbg !8919
  %34 = fmul float %29, %33, !dbg !8920
  call void @llvm.dbg.value(metadata float %34, metadata !8891, metadata !DIExpression()), !dbg !8892
  %35 = lshr i32 24000000, %16, !dbg !8921
  %36 = lshr i32 %35, %14, !dbg !8922
  %37 = uitofp i32 %36 to float, !dbg !8923
  %38 = uitofp i8 %6 to float, !dbg !8924
  %39 = fadd float %34, %38, !dbg !8925
  %40 = fmul float %39, %37, !dbg !8926
  %41 = fptoui float %40 to i32, !dbg !8927
  br label %47, !dbg !8928

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !8929
  %44 = lshr i32 %43, %14, !dbg !8931
  %45 = zext i8 %6 to i32, !dbg !8932
  %46 = mul nuw i32 %44, %45, !dbg !8933
  br label %47, !dbg !8934

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !8892
  ret i32 %48, !dbg !8935
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8936 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8938, metadata !DIExpression()), !dbg !8943
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #25, !dbg !8944
  br i1 %2, label %47, label %3, !dbg !8946

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8947
  %5 = trunc i32 %4 to i8, !dbg !8947
  %6 = and i8 %5, 127, !dbg !8947
  call void @llvm.dbg.value(metadata i8 %6, metadata !8939, metadata !DIExpression()), !dbg !8943
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8948
  %8 = lshr i32 %7, 22, !dbg !8949
  %9 = and i32 %8, 3, !dbg !8950
  call void @llvm.dbg.value(metadata i32 %8, metadata !8940, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8943
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8951
  %11 = lshr i32 %10, 19, !dbg !8952
  %12 = and i32 %11, 3, !dbg !8953
  call void @llvm.dbg.value(metadata i32 %11, metadata !8941, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8943
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !8954
  %14 = load i32, i32* %13, align 4, !dbg !8954
  call void @llvm.dbg.value(metadata i8 undef, metadata !8940, metadata !DIExpression()), !dbg !8943
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !8955
  %16 = load i32, i32* %15, align 4, !dbg !8955
  call void @llvm.dbg.value(metadata i8 undef, metadata !8941, metadata !DIExpression()), !dbg !8943
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !8956
  %18 = load volatile i32, i32* %17, align 4, !dbg !8956
  %19 = and i32 %18, 32768, !dbg !8958
  %20 = icmp eq i32 %19, 0, !dbg !8958
  br i1 %20, label %42, label %21, !dbg !8959

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !8960
  %23 = and i32 %22, 32767, !dbg !8962
  %24 = uitofp i32 %23 to float, !dbg !8963
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !8964
  %26 = load volatile i32, i32* %25, align 4, !dbg !8964
  %27 = and i32 %26, 1073741823, !dbg !8965
  %28 = uitofp i32 %27 to float, !dbg !8966
  %29 = fdiv float %24, %28, !dbg !8967
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !8968
  %31 = load volatile i32, i32* %30, align 4, !dbg !8968
  %32 = and i32 %31, 1073741823, !dbg !8969
  %33 = uitofp i32 %32 to float, !dbg !8970
  %34 = fmul float %29, %33, !dbg !8971
  call void @llvm.dbg.value(metadata float %34, metadata !8942, metadata !DIExpression()), !dbg !8943
  %35 = lshr i32 24000000, %16, !dbg !8972
  %36 = lshr i32 %35, %14, !dbg !8973
  %37 = uitofp i32 %36 to float, !dbg !8974
  %38 = uitofp i8 %6 to float, !dbg !8975
  %39 = fadd float %34, %38, !dbg !8976
  %40 = fmul float %39, %37, !dbg !8977
  %41 = fptoui float %40 to i32, !dbg !8978
  br label %47, !dbg !8979

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !8980
  %44 = lshr i32 %43, %14, !dbg !8982
  %45 = zext i8 %6 to i32, !dbg !8983
  %46 = mul nuw i32 %44, %45, !dbg !8984
  br label %47, !dbg !8985

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !8943
  ret i32 %48, !dbg !8986
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !8987 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8991, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.value(metadata i32 %1, metadata !8992, metadata !DIExpression()), !dbg !8995
  %3 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #25, !dbg !8996
  call void @llvm.dbg.value(metadata i32 %3, metadata !8993, metadata !DIExpression()), !dbg !8995
  %4 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #25, !dbg !8997
  call void @llvm.dbg.value(metadata i32 %4, metadata !8994, metadata !DIExpression()), !dbg !8995
  %5 = udiv i32 %3, %4, !dbg !8998
  %6 = mul i32 %5, 18, !dbg !8999
  ret i32 %6, !dbg !9000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9001 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9003, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.value(metadata i32 %1, metadata !9004, metadata !DIExpression()), !dbg !9005
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !9006
  %4 = and i32 %1, 65535, !dbg !9006
  %5 = add i32 %4, %3, !dbg !9006
  %6 = inttoptr i32 %5 to i32*, !dbg !9006
  %7 = load volatile i32, i32* %6, align 4, !dbg !9006
  %8 = lshr i32 %1, 16, !dbg !9007
  %9 = and i32 %8, 31, !dbg !9007
  %10 = lshr i32 %7, %9, !dbg !9008
  %11 = and i32 %10, 63, !dbg !9009
  ret i32 %11, !dbg !9010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct._gpio_init_config* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9011 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9038, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !9039, metadata !DIExpression()), !dbg !9042
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !9043
  store volatile i32 0, i32* %3, align 4, !dbg !9044
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !9045
  store volatile i32 0, i32* %4, align 4, !dbg !9046
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !9047
  %6 = load i32, i32* %5, align 4, !dbg !9047
  call void @llvm.dbg.value(metadata i32 %6, metadata !9040, metadata !DIExpression()), !dbg !9042
  %7 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !9048
  %8 = load i32, i32* %7, align 4, !dbg !9048
  %9 = icmp eq i32 %8, 1, !dbg !9050
  %10 = shl nuw i32 1, %6, !dbg !9051
  br i1 %9, label %11, label %15, !dbg !9052

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !9053
  %13 = load volatile i32, i32* %12, align 4, !dbg !9054
  %14 = or i32 %13, %10, !dbg !9054
  store volatile i32 %14, i32* %12, align 4, !dbg !9054
  br label %20, !dbg !9053

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !9055
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !9056
  %18 = load volatile i32, i32* %17, align 4, !dbg !9057
  %19 = and i32 %18, %16, !dbg !9057
  store volatile i32 %19, i32* %17, align 4, !dbg !9057
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !9058
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !9060
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !9060
  %24 = add i32 %6, -16, !dbg !9060
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !9060
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !9060
  call void @llvm.dbg.value(metadata i32* %26, metadata !9041, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata i32 %25, metadata !9040, metadata !DIExpression()), !dbg !9042
  %27 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !9061
  %28 = load i32, i32* %27, align 4, !dbg !9061
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !9062

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !9063
  %31 = shl i32 3, %30, !dbg !9066
  %32 = xor i32 %31, -1, !dbg !9067
  %33 = load volatile i32, i32* %26, align 4, !dbg !9068
  %34 = and i32 %33, %32, !dbg !9068
  br label %56, !dbg !9069

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !9070
  %37 = shl i32 %25, 1, !dbg !9072
  %38 = shl i32 3, %37, !dbg !9073
  %39 = xor i32 %38, -1, !dbg !9074
  %40 = and i32 %36, %39, !dbg !9075
  %41 = shl nuw i32 1, %37, !dbg !9076
  %42 = or i32 %40, %41, !dbg !9077
  br label %56, !dbg !9078

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !9079
  %45 = shl i32 %25, 1, !dbg !9081
  %46 = shl i32 3, %45, !dbg !9082
  %47 = xor i32 %46, -1, !dbg !9083
  %48 = and i32 %44, %47, !dbg !9084
  %49 = shl i32 2, %45, !dbg !9085
  %50 = or i32 %48, %49, !dbg !9086
  br label %56, !dbg !9087

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !9088
  %53 = shl i32 3, %52, !dbg !9090
  %54 = load volatile i32, i32* %26, align 4, !dbg !9091
  %55 = or i32 %54, %53, !dbg !9091
  br label %56, !dbg !9092

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !9093
  br label %58, !dbg !9094

58:                                               ; preds = %56, %20
  ret void, !dbg !9094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9095 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9100, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %1, metadata !9101, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %2, metadata !9102, metadata !DIExpression()), !dbg !9103
  %4 = icmp eq i32 %2, 1, !dbg !9104
  %5 = shl nuw i32 1, %1, !dbg !9106
  br i1 %4, label %6, label %10, !dbg !9107

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9108
  %8 = load volatile i32, i32* %7, align 4, !dbg !9110
  %9 = or i32 %8, %5, !dbg !9110
  store volatile i32 %9, i32* %7, align 4, !dbg !9110
  br label %15, !dbg !9111

10:                                               ; preds = %3
  %11 = xor i32 %5, -1, !dbg !9112
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9114
  %13 = load volatile i32, i32* %12, align 4, !dbg !9115
  %14 = and i32 %13, %11, !dbg !9115
  store volatile i32 %14, i32* %12, align 4, !dbg !9115
  br label %15

15:                                               ; preds = %10, %6
  ret void, !dbg !9116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9117 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9121, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 %1, metadata !9122, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i1 %2, metadata !9123, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9124
  %4 = shl nuw i32 1, %1, !dbg !9125
  br i1 %2, label %5, label %9, !dbg !9127

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !9128
  %7 = load volatile i32, i32* %6, align 4, !dbg !9129
  %8 = or i32 %7, %4, !dbg !9129
  store volatile i32 %8, i32* %6, align 4, !dbg !9129
  br label %14, !dbg !9128

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !9130
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !9131
  %12 = load volatile i32, i32* %11, align 4, !dbg !9132
  %13 = and i32 %12, %10, !dbg !9132
  store volatile i32 %13, i32* %11, align 4, !dbg !9132
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !9133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9134 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9136, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.value(metadata i32 %1, metadata !9137, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.value(metadata i1 %2, metadata !9138, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9139
  %4 = shl nuw i32 1, %1, !dbg !9140
  br i1 %2, label %5, label %9, !dbg !9142

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !9143
  %7 = load volatile i32, i32* %6, align 4, !dbg !9144
  %8 = or i32 %7, %4, !dbg !9144
  store volatile i32 %8, i32* %6, align 4, !dbg !9144
  br label %14, !dbg !9143

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !9145
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !9146
  %12 = load volatile i32, i32* %11, align 4, !dbg !9147
  %13 = and i32 %12, %10, !dbg !9147
  store volatile i32 %13, i32* %11, align 4, !dbg !9147
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !9148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9149 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9188, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !9189, metadata !DIExpression()), !dbg !9190
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9191
  %4 = load volatile i32, i32* %3, align 4, !dbg !9192
  %5 = and i32 %4, -2, !dbg !9192
  store volatile i32 %5, i32* %3, align 4, !dbg !9192
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #25, !dbg !9193
  %6 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !9194
  %7 = load i32, i32* %6, align 4, !dbg !9194
  %8 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !9195
  %9 = load i32, i32* %8, align 4, !dbg !9195
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !9196
  %11 = load i32, i32* %10, align 4, !dbg !9196
  %12 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !9197
  %13 = load i32, i32* %12, align 4, !dbg !9197
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9198
  %15 = load volatile i32, i32* %14, align 4, !dbg !9199
  %16 = or i32 %7, %9, !dbg !9200
  %17 = or i32 %16, %11, !dbg !9201
  %18 = or i32 %17, %13, !dbg !9202
  %19 = or i32 %18, %15, !dbg !9199
  %20 = or i32 %19, 16384, !dbg !9199
  store volatile i32 %20, i32* %14, align 4, !dbg !9199
  %21 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9203
  %22 = load volatile i32, i32* %21, align 4, !dbg !9204
  %23 = or i32 %22, 4, !dbg !9204
  store volatile i32 %23, i32* %21, align 4, !dbg !9204
  %24 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !9205
  %25 = load i32, i32* %24, align 4, !dbg !9205
  %26 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !9206
  %27 = load i32, i32* %26, align 4, !dbg !9206
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %25, i32 noundef %27) #25, !dbg !9207
  ret void, !dbg !9208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #15 !dbg !9209 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9213, metadata !DIExpression()), !dbg !9214
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9215
  %3 = load volatile i32, i32* %2, align 4, !dbg !9216
  %4 = and i32 %3, -2, !dbg !9216
  store volatile i32 %4, i32* %2, align 4, !dbg !9216
  store volatile i32 0, i32* %2, align 4, !dbg !9217
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9218
  store volatile i32 1, i32* %5, align 4, !dbg !9219
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9220
  store volatile i32 1792, i32* %6, align 4, !dbg !9221
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9222
  store volatile i32 32768, i32* %7, align 4, !dbg !9223
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9224
  store volatile i32 2049, i32* %8, align 4, !dbg !9225
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !9226
  store volatile i32 43, i32* %9, align 4, !dbg !9227
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !9228
  store volatile i32 0, i32* %10, align 4, !dbg !9229
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !9230
  store volatile i32 0, i32* %11, align 4, !dbg !9231
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !9232
  store volatile i32 96, i32* %12, align 4, !dbg !9233
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9234
  store volatile i32 0, i32* %13, align 4, !dbg !9235
  %14 = load volatile i32, i32* %5, align 4, !dbg !9236
  %15 = and i32 %14, -2, !dbg !9236
  store volatile i32 %15, i32* %5, align 4, !dbg !9236
  br label %16, !dbg !9237

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !9238
  %18 = and i32 %17, 1, !dbg !9239
  %19 = icmp eq i32 %18, 0, !dbg !9240
  br i1 %19, label %16, label %20, !dbg !9237, !llvm.loop !9241

20:                                               ; preds = %16
  ret void, !dbg !9243
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9244 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9248, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 %1, metadata !9249, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 %2, metadata !9250, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 1, metadata !9255, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 %1, metadata !9251, metadata !DIExpression()), !dbg !9261
  %4 = shl i32 %2, 4, !dbg !9262
  call void @llvm.dbg.value(metadata i32 %4, metadata !9252, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 1, metadata !9253, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 %1, metadata !9251, metadata !DIExpression()), !dbg !9261
  %5 = icmp eq i32 %4, 0, !dbg !9263
  br i1 %5, label %11, label %6, !dbg !9264

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9251, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 %8, metadata !9252, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 %8, metadata !9253, metadata !DIExpression()), !dbg !9261
  %9 = urem i32 %7, %8, !dbg !9265
  call void @llvm.dbg.value(metadata i32 %8, metadata !9251, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 %9, metadata !9252, metadata !DIExpression()), !dbg !9261
  %10 = icmp eq i32 %9, 0, !dbg !9263
  br i1 %10, label %11, label %6, !dbg !9264, !llvm.loop !9267

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !9261
  %13 = udiv i32 %1, %12, !dbg !9269
  call void @llvm.dbg.value(metadata i32 %13, metadata !9251, metadata !DIExpression()), !dbg !9261
  %14 = udiv i32 %4, %12, !dbg !9270
  call void @llvm.dbg.value(metadata i32 %14, metadata !9252, metadata !DIExpression()), !dbg !9261
  %15 = icmp ugt i32 %13, 458745, !dbg !9271
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !9272
  br i1 %17, label %18, label %33, !dbg !9272

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !9273
  %20 = udiv i32 %19, 458745, !dbg !9274
  %21 = add nuw nsw i32 %20, 1, !dbg !9275
  call void @llvm.dbg.value(metadata i32 %21, metadata !9256, metadata !DIExpression()), !dbg !9276
  %22 = add i32 %14, -1, !dbg !9277
  %23 = udiv i32 %22, 65535, !dbg !9278
  %24 = add nuw nsw i32 %23, 1, !dbg !9279
  call void @llvm.dbg.value(metadata i32 %24, metadata !9259, metadata !DIExpression()), !dbg !9276
  %25 = icmp ugt i32 %21, %24, !dbg !9280
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !9281
  call void @llvm.dbg.value(metadata i32 %26, metadata !9260, metadata !DIExpression()), !dbg !9276
  %27 = udiv i32 %13, %26, !dbg !9282
  call void @llvm.dbg.value(metadata i32 %27, metadata !9251, metadata !DIExpression()), !dbg !9261
  %28 = udiv i32 %14, %26, !dbg !9283
  call void @llvm.dbg.value(metadata i32 %28, metadata !9252, metadata !DIExpression()), !dbg !9261
  %29 = icmp ugt i32 %26, %13, !dbg !9284
  %30 = select i1 %29, i32 1, i32 %27, !dbg !9286
  call void @llvm.dbg.value(metadata i32 %30, metadata !9251, metadata !DIExpression()), !dbg !9261
  %31 = icmp ugt i32 %26, %14, !dbg !9287
  %32 = select i1 %31, i32 1, i32 %28, !dbg !9289
  call void @llvm.dbg.value(metadata i32 %32, metadata !9252, metadata !DIExpression()), !dbg !9261
  br label %33, !dbg !9290

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !9261
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !9261
  call void @llvm.dbg.value(metadata i32 %35, metadata !9251, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 %34, metadata !9252, metadata !DIExpression()), !dbg !9261
  %36 = add i32 %35, -1, !dbg !9291
  %37 = udiv i32 %36, 65535, !dbg !9292
  %38 = add nuw nsw i32 %37, 1, !dbg !9293
  call void @llvm.dbg.value(metadata i32 %38, metadata !9255, metadata !DIExpression()), !dbg !9261
  %39 = add nsw i32 %37, -1, !dbg !9294
  %40 = icmp ult i32 %39, 6, !dbg !9294
  br i1 %40, label %41, label %44, !dbg !9294

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !9294
  %43 = load i32, i32* %42, align 4, !dbg !9294
  br label %44, !dbg !9294

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !9295
  call void @llvm.dbg.value(metadata i32 %45, metadata !9254, metadata !DIExpression()), !dbg !9261
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9297
  %47 = load volatile i32, i32* %46, align 4, !dbg !9298
  %48 = and i32 %47, -897, !dbg !9298
  store volatile i32 %48, i32* %46, align 4, !dbg !9298
  %49 = load volatile i32, i32* %46, align 4, !dbg !9299
  %50 = or i32 %49, %45, !dbg !9299
  store volatile i32 %50, i32* %46, align 4, !dbg !9299
  %51 = add i32 %34, 65535, !dbg !9300
  %52 = and i32 %51, 65535, !dbg !9300
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !9301
  store volatile i32 %52, i32* %53, align 4, !dbg !9302
  %54 = udiv i32 %35, %38, !dbg !9303
  %55 = add i32 %54, 65535, !dbg !9303
  %56 = and i32 %55, 65535, !dbg !9303
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !9304
  store volatile i32 %56, i32* %57, align 4, !dbg !9305
  %58 = mul nuw nsw i32 %38, 1000, !dbg !9306
  %59 = udiv i32 %1, %58, !dbg !9306
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !9307
  store volatile i32 %59, i32* %60, align 4, !dbg !9308
  ret void, !dbg !9309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9310 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9314, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata i32 %1, metadata !9315, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata i1 %2, metadata !9316, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9317
  %4 = and i32 %1, 2, !dbg !9318
  %5 = icmp eq i32 %4, 0, !dbg !9318
  br i1 %2, label %6, label %18, !dbg !9320

6:                                                ; preds = %3
  br i1 %5, label %11, label %7, !dbg !9321

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9323
  %9 = load volatile i32, i32* %8, align 4, !dbg !9325
  %10 = or i32 %9, 512, !dbg !9325
  store volatile i32 %10, i32* %8, align 4, !dbg !9325
  br label %11, !dbg !9323

11:                                               ; preds = %7, %6
  %12 = and i32 %1, 4, !dbg !9326
  %13 = icmp eq i32 %12, 0, !dbg !9326
  br i1 %13, label %30, label %14, !dbg !9328

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9329
  %16 = load volatile i32, i32* %15, align 4, !dbg !9330
  %17 = or i32 %16, 2, !dbg !9330
  store volatile i32 %17, i32* %15, align 4, !dbg !9330
  br label %30, !dbg !9329

18:                                               ; preds = %3
  br i1 %5, label %23, label %19, !dbg !9331

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9333
  %21 = load volatile i32, i32* %20, align 4, !dbg !9335
  %22 = and i32 %21, -513, !dbg !9335
  store volatile i32 %22, i32* %20, align 4, !dbg !9335
  br label %23, !dbg !9333

23:                                               ; preds = %19, %18
  %24 = and i32 %1, 4, !dbg !9336
  %25 = icmp eq i32 %24, 0, !dbg !9336
  br i1 %25, label %30, label %26, !dbg !9338

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9339
  %28 = load volatile i32, i32* %27, align 4, !dbg !9340
  %29 = and i32 %28, -3, !dbg !9340
  store volatile i32 %29, i32* %27, align 4, !dbg !9340
  br label %30, !dbg !9339

30:                                               ; preds = %23, %26, %11, %14
  ret void, !dbg !9341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9342 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9346, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i1 %1, metadata !9347, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9348
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9349
  %4 = load volatile i32, i32* %3, align 4, !dbg !9349
  %5 = and i32 %4, 2, !dbg !9351
  %6 = select i1 %1, i32 0, i32 -3, !dbg !9351
  %7 = or i32 %5, %6, !dbg !9351
  store volatile i32 %7, i32* %3, align 4, !dbg !9349
  ret void, !dbg !9352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9353 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9355, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata i1 %1, metadata !9356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9357
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9358
  %4 = load volatile i32, i32* %3, align 4, !dbg !9358
  %5 = and i32 %4, -17, !dbg !9360
  %6 = select i1 %1, i32 0, i32 16, !dbg !9360
  %7 = or i32 %5, %6, !dbg !9360
  store volatile i32 %7, i32* %3, align 4, !dbg !9358
  ret void, !dbg !9361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9362 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9364, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 %1, metadata !9365, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i1 %2, metadata !9366, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9369
  call void @llvm.dbg.value(metadata i32* null, metadata !9367, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 0, metadata !9368, metadata !DIExpression()), !dbg !9369
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9370
  %5 = lshr i32 %1, 16, !dbg !9371
  %6 = add i32 %5, %4, !dbg !9372
  %7 = inttoptr i32 %6 to i32*, !dbg !9373
  call void @llvm.dbg.value(metadata i32* %7, metadata !9367, metadata !DIExpression()), !dbg !9369
  %8 = and i32 %1, 65535, !dbg !9374
  %9 = shl nuw i32 1, %8, !dbg !9375
  call void @llvm.dbg.value(metadata i32 %9, metadata !9368, metadata !DIExpression()), !dbg !9369
  br i1 %2, label %10, label %13, !dbg !9376

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !9377
  %12 = or i32 %11, %9, !dbg !9377
  br label %17, !dbg !9379

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !9380
  %15 = load volatile i32, i32* %7, align 4, !dbg !9381
  %16 = and i32 %15, %14, !dbg !9381
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !9382
  ret void, !dbg !9383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9384 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9388, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32 %1, metadata !9389, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32* null, metadata !9390, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32 0, metadata !9391, metadata !DIExpression()), !dbg !9392
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9393
  %4 = lshr i32 %1, 16, !dbg !9394
  %5 = add i32 %4, %3, !dbg !9395
  %6 = inttoptr i32 %5 to i32*, !dbg !9396
  call void @llvm.dbg.value(metadata i32* %6, metadata !9390, metadata !DIExpression()), !dbg !9392
  %7 = and i32 %1, 65535, !dbg !9397
  %8 = shl nuw i32 1, %7, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %8, metadata !9391, metadata !DIExpression()), !dbg !9392
  store volatile i32 %8, i32* %6, align 4, !dbg !9399
  ret void, !dbg !9400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9401 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9403, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %1, metadata !9404, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i1 %2, metadata !9405, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9408
  call void @llvm.dbg.value(metadata i32* null, metadata !9406, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 0, metadata !9407, metadata !DIExpression()), !dbg !9408
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9409
  %5 = lshr i32 %1, 16, !dbg !9410
  %6 = add i32 %5, %4, !dbg !9411
  %7 = inttoptr i32 %6 to i32*, !dbg !9412
  call void @llvm.dbg.value(metadata i32* %7, metadata !9406, metadata !DIExpression()), !dbg !9408
  %8 = and i32 %1, 65535, !dbg !9413
  %9 = shl nuw i32 1, %8, !dbg !9414
  call void @llvm.dbg.value(metadata i32 %9, metadata !9407, metadata !DIExpression()), !dbg !9408
  br i1 %2, label %10, label %13, !dbg !9415

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !9416
  %12 = or i32 %11, %9, !dbg !9416
  br label %17, !dbg !9418

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !9419
  %15 = load volatile i32, i32* %7, align 4, !dbg !9420
  %16 = and i32 %15, %14, !dbg !9420
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !9421
  ret void, !dbg !9422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9423 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9425, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.value(metadata i1 %1, metadata !9426, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9427
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9428
  %4 = load volatile i32, i32* %3, align 4, !dbg !9428
  %5 = and i32 %4, -16385, !dbg !9430
  %6 = select i1 %1, i32 0, i32 16384, !dbg !9430
  %7 = or i32 %5, %6, !dbg !9430
  store volatile i32 %7, i32* %3, align 4, !dbg !9428
  ret void, !dbg !9431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9432 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9434, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.value(metadata i1 %1, metadata !9435, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9436
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9437
  %4 = load volatile i32, i32* %3, align 4, !dbg !9437
  %5 = and i32 %4, -8193, !dbg !9439
  %6 = select i1 %1, i32 8192, i32 0, !dbg !9439
  %7 = or i32 %5, %6, !dbg !9439
  store volatile i32 %7, i32* %3, align 4, !dbg !9437
  ret void, !dbg !9440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9441 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9443, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i1 %1, metadata !9444, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9445
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9446
  %4 = load volatile i32, i32* %3, align 4, !dbg !9446
  %5 = and i32 %4, -4097, !dbg !9448
  %6 = select i1 %1, i32 4096, i32 0, !dbg !9448
  %7 = or i32 %5, %6, !dbg !9448
  store volatile i32 %7, i32* %3, align 4, !dbg !9446
  ret void, !dbg !9449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9450 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9452, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 %1, metadata !9453, metadata !DIExpression()), !dbg !9454
  %3 = icmp eq i32 %1, 0, !dbg !9455
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9457
  %5 = load volatile i32, i32* %4, align 4, !dbg !9457
  %6 = and i32 %5, -65, !dbg !9458
  %7 = select i1 %3, i32 0, i32 64, !dbg !9458
  %8 = or i32 %6, %7, !dbg !9458
  store volatile i32 %8, i32* %4, align 4, !dbg !9457
  ret void, !dbg !9459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9460 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9462, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata i1 %1, metadata !9463, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9464
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9465
  %4 = load volatile i32, i32* %3, align 4, !dbg !9465
  %5 = and i32 %4, -1025, !dbg !9467
  %6 = select i1 %1, i32 1024, i32 0, !dbg !9467
  %7 = or i32 %5, %6, !dbg !9467
  store volatile i32 %7, i32* %3, align 4, !dbg !9465
  ret void, !dbg !9468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9469 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9471, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i1 %1, metadata !9472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9473
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9474
  %4 = load volatile i32, i32* %3, align 4, !dbg !9474
  %5 = and i32 %4, -513, !dbg !9476
  %6 = select i1 %1, i32 512, i32 0, !dbg !9476
  %7 = or i32 %5, %6, !dbg !9476
  store volatile i32 %7, i32* %3, align 4, !dbg !9474
  ret void, !dbg !9477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9478 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9480, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i1 %1, metadata !9481, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9482
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9483
  %4 = load volatile i32, i32* %3, align 4, !dbg !9483
  %5 = and i32 %4, -257, !dbg !9485
  %6 = select i1 %1, i32 256, i32 0, !dbg !9485
  %7 = or i32 %5, %6, !dbg !9485
  store volatile i32 %7, i32* %3, align 4, !dbg !9483
  ret void, !dbg !9486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #15 !dbg !9487 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9491, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i16 %1, metadata !9492, metadata !DIExpression()), !dbg !9493
  %3 = zext i16 %1 to i32, !dbg !9494
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9496
  %5 = load volatile i32, i32* %4, align 4, !dbg !9496
  %6 = and i32 %5, -5, !dbg !9497
  %7 = lshr i32 %3, 6, !dbg !9497
  %8 = and i32 %7, 4, !dbg !9497
  %9 = or i32 %6, %8, !dbg !9497
  store volatile i32 %9, i32* %4, align 4, !dbg !9496
  %10 = and i32 %3, 255, !dbg !9498
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !9499
  store volatile i32 %10, i32* %11, align 4, !dbg !9500
  ret void, !dbg !9501
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #16 !dbg !9502 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9506, metadata !DIExpression()), !dbg !9508
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !9509
  %3 = load volatile i32, i32* %2, align 4, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %3, metadata !9507, metadata !DIExpression()), !dbg !9508
  %4 = trunc i32 %3 to i16, !dbg !9510
  %5 = and i16 %4, 255, !dbg !9510
  %6 = lshr i16 %4, 2, !dbg !9510
  %7 = and i16 %6, 256, !dbg !9510
  %8 = or i16 %7, %5, !dbg !9510
  call void @llvm.dbg.value(metadata i16 %8, metadata !9507, metadata !DIExpression()), !dbg !9508
  ret i16 %8, !dbg !9511
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9512 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9514, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.value(metadata i1 %1, metadata !9515, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9516
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9517
  %4 = load volatile i32, i32* %3, align 4, !dbg !9517
  %5 = and i32 %4, -2, !dbg !9519
  %6 = zext i1 %1 to i32, !dbg !9519
  %7 = or i32 %5, %6, !dbg !9519
  store volatile i32 %7, i32* %3, align 4, !dbg !9517
  ret void, !dbg !9520
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9521 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9523, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata i1 %1, metadata !9524, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9525
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9526
  %4 = load volatile i32, i32* %3, align 4, !dbg !9526
  %5 = and i32 %4, -3, !dbg !9528
  %6 = select i1 %1, i32 2, i32 0, !dbg !9528
  %7 = or i32 %5, %6, !dbg !9528
  store volatile i32 %7, i32* %3, align 4, !dbg !9526
  ret void, !dbg !9529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9530 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9532, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.value(metadata i1 %1, metadata !9533, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9534
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9535
  %4 = load volatile i32, i32* %3, align 4, !dbg !9535
  %5 = and i32 %4, -129, !dbg !9537
  %6 = select i1 %1, i32 128, i32 0, !dbg !9537
  %7 = or i32 %5, %6, !dbg !9537
  store volatile i32 %7, i32* %3, align 4, !dbg !9535
  ret void, !dbg !9538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9539 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9541, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %1, metadata !9542, metadata !DIExpression()), !dbg !9543
  %3 = icmp eq i32 %1, 0, !dbg !9544
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9546
  %5 = load volatile i32, i32* %4, align 4, !dbg !9546
  %6 = and i32 %5, -33, !dbg !9547
  %7 = select i1 %3, i32 32, i32 0, !dbg !9547
  %8 = or i32 %6, %7, !dbg !9547
  store volatile i32 %8, i32* %4, align 4, !dbg !9546
  ret void, !dbg !9548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9549 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9551, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.value(metadata i1 %1, metadata !9552, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9553
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9554
  %4 = load volatile i32, i32* %3, align 4, !dbg !9554
  %5 = and i32 %4, -16385, !dbg !9556
  %6 = select i1 %1, i32 16384, i32 0, !dbg !9556
  %7 = or i32 %5, %6, !dbg !9556
  store volatile i32 %7, i32* %3, align 4, !dbg !9554
  ret void, !dbg !9557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9558 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9560, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i1 %1, metadata !9561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9562
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9563
  %4 = load volatile i32, i32* %3, align 4, !dbg !9563
  %5 = and i32 %4, -17, !dbg !9565
  %6 = select i1 %1, i32 16, i32 0, !dbg !9565
  %7 = or i32 %5, %6, !dbg !9565
  store volatile i32 %7, i32* %3, align 4, !dbg !9563
  ret void, !dbg !9566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9567 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9569, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.value(metadata i1 %1, metadata !9570, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9571
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9572
  %4 = load volatile i32, i32* %3, align 4, !dbg !9572
  %5 = and i32 %4, -2049, !dbg !9574
  %6 = select i1 %1, i32 2048, i32 0, !dbg !9574
  %7 = or i32 %5, %6, !dbg !9574
  store volatile i32 %7, i32* %3, align 4, !dbg !9572
  ret void, !dbg !9575
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !9576 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !9595, metadata !DIExpression()), !dbg !9600
  %4 = bitcast i32* %2 to i8*, !dbg !9601
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9601
  %5 = bitcast i32* %3 to i8*, !dbg !9601
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9601
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !9602
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !9603

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9596, metadata !DIExpression()), !dbg !9600
  call void @llvm.dbg.value(metadata i32* %2, metadata !9598, metadata !DIExpression(DW_OP_deref)), !dbg !9600
  call void @llvm.dbg.value(metadata i32* %3, metadata !9599, metadata !DIExpression(DW_OP_deref)), !dbg !9600
  br label %8, !dbg !9604

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !9606
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !9606
  call void @llvm.dbg.value(metadata i32 %10, metadata !9596, metadata !DIExpression()), !dbg !9600
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !9607

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #24, !dbg !9608
  call void @llvm.dbg.value(metadata i32 %12, metadata !9597, metadata !DIExpression()), !dbg !9600
  br label %13, !dbg !9610

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !9611
  call void @llvm.dbg.value(metadata i32 %14, metadata !9597, metadata !DIExpression()), !dbg !9600
  %15 = load i32, i32* %2, align 4, !dbg !9612
  call void @llvm.dbg.value(metadata i32 %15, metadata !9598, metadata !DIExpression()), !dbg !9600
  %16 = add i32 %15, 1, !dbg !9613
  %17 = udiv i32 %14, %16, !dbg !9614
  %18 = load i32, i32* %3, align 4, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %18, metadata !9599, metadata !DIExpression()), !dbg !9600
  %19 = add i32 %18, 1, !dbg !9616
  %20 = udiv i32 %17, %19, !dbg !9617
  br label %21, !dbg !9618

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !9600
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9619
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9619
  ret i32 %22, !dbg !9619
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #16 !dbg !9620 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !9624, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 %0, metadata !9625, metadata !DIExpression()), !dbg !9626
  %2 = inttoptr i32 %0 to i32*, !dbg !9627
  %3 = load volatile i32, i32* %2, align 4, !dbg !9627
  %4 = lshr i32 %3, 24, !dbg !9628
  %5 = and i32 %4, 7, !dbg !9628
  ret i32 %5, !dbg !9629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !9630 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !9652, metadata !DIExpression()), !dbg !9657
  %4 = bitcast i32* %2 to i8*, !dbg !9658
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9658
  %5 = bitcast i32* %3 to i8*, !dbg !9658
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9658
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !9659
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !9660

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9653, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32* %2, metadata !9655, metadata !DIExpression(DW_OP_deref)), !dbg !9657
  call void @llvm.dbg.value(metadata i32* %3, metadata !9656, metadata !DIExpression(DW_OP_deref)), !dbg !9657
  br label %8, !dbg !9661

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !9663
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !9663
  call void @llvm.dbg.value(metadata i32 %10, metadata !9653, metadata !DIExpression()), !dbg !9657
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !9664

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #24, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %12, metadata !9654, metadata !DIExpression()), !dbg !9657
  br label %13, !dbg !9667

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !9668
  call void @llvm.dbg.value(metadata i32 %14, metadata !9654, metadata !DIExpression()), !dbg !9657
  %15 = load i32, i32* %2, align 4, !dbg !9669
  call void @llvm.dbg.value(metadata i32 %15, metadata !9655, metadata !DIExpression()), !dbg !9657
  %16 = add i32 %15, 1, !dbg !9670
  %17 = udiv i32 %14, %16, !dbg !9671
  %18 = load i32, i32* %3, align 4, !dbg !9672
  call void @llvm.dbg.value(metadata i32 %18, metadata !9656, metadata !DIExpression()), !dbg !9657
  %19 = add i32 %18, 1, !dbg !9673
  %20 = udiv i32 %17, %19, !dbg !9674
  br label %21, !dbg !9675

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !9657
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9676
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9676
  ret i32 %22, !dbg !9676
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !9677 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !9723, metadata !DIExpression()), !dbg !9728
  %4 = bitcast i32* %2 to i8*, !dbg !9729
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9729
  %5 = bitcast i32* %3 to i8*, !dbg !9729
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9729
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !9730
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !9731

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9724, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata i32* %2, metadata !9726, metadata !DIExpression(DW_OP_deref)), !dbg !9728
  call void @llvm.dbg.value(metadata i32* %3, metadata !9727, metadata !DIExpression(DW_OP_deref)), !dbg !9728
  br label %8, !dbg !9732

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !9734
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !9734
  call void @llvm.dbg.value(metadata i32 %10, metadata !9724, metadata !DIExpression()), !dbg !9728
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !9735

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !9736
  %13 = lshr i32 %12, 2, !dbg !9738
  call void @llvm.dbg.value(metadata i32 %13, metadata !9725, metadata !DIExpression()), !dbg !9728
  br label %16, !dbg !9739

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !9740
  call void @llvm.dbg.value(metadata i32 %15, metadata !9725, metadata !DIExpression()), !dbg !9728
  br label %16, !dbg !9741

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !9742
  call void @llvm.dbg.value(metadata i32 %17, metadata !9725, metadata !DIExpression()), !dbg !9728
  %18 = load i32, i32* %2, align 4, !dbg !9743
  call void @llvm.dbg.value(metadata i32 %18, metadata !9726, metadata !DIExpression()), !dbg !9728
  %19 = add i32 %18, 1, !dbg !9744
  %20 = udiv i32 %17, %19, !dbg !9745
  %21 = load i32, i32* %3, align 4, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %21, metadata !9727, metadata !DIExpression()), !dbg !9728
  %22 = add i32 %21, 1, !dbg !9747
  %23 = udiv i32 %20, %22, !dbg !9748
  br label %24, !dbg !9749

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !9728
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9750
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9750
  ret i32 %25, !dbg !9750
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !9751 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !9769, metadata !DIExpression()), !dbg !9774
  %4 = bitcast i32* %2 to i8*, !dbg !9775
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9775
  %5 = bitcast i32* %3 to i8*, !dbg !9775
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9775
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !9776
  %7 = add i32 %6, -815923200, !dbg !9777
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !9777
  %9 = icmp ult i32 %8, 4, !dbg !9777
  br i1 %9, label %10, label %25, !dbg !9777

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !9777
  %12 = add i32 %11, 809020800, !dbg !9777
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #25, !dbg !9778
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !9778
  call void @llvm.dbg.value(metadata i32 %13, metadata !9770, metadata !DIExpression()), !dbg !9774
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !9780

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !9781
  %16 = lshr i32 %15, 2, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %16, metadata !9771, metadata !DIExpression()), !dbg !9774
  br label %17, !dbg !9784

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !9785
  call void @llvm.dbg.value(metadata i32 %18, metadata !9771, metadata !DIExpression()), !dbg !9774
  %19 = load i32, i32* %2, align 4, !dbg !9786
  call void @llvm.dbg.value(metadata i32 %19, metadata !9772, metadata !DIExpression()), !dbg !9774
  %20 = add i32 %19, 1, !dbg !9787
  %21 = udiv i32 %18, %20, !dbg !9788
  %22 = load i32, i32* %3, align 4, !dbg !9789
  call void @llvm.dbg.value(metadata i32 %22, metadata !9773, metadata !DIExpression()), !dbg !9774
  %23 = add i32 %22, 1, !dbg !9790
  %24 = udiv i32 %21, %23, !dbg !9791
  br label %25, !dbg !9792

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !9774
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9793
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9793
  ret i32 %26, !dbg !9793
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !9794 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9821, metadata !DIExpression()), !dbg !9826
  %4 = bitcast i32* %2 to i8*, !dbg !9827
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9827
  %5 = bitcast i32* %3 to i8*, !dbg !9827
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9827
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9828
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !9829

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9822, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %2, metadata !9824, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %3, metadata !9825, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  br label %13, !dbg !9830

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9822, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %2, metadata !9824, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %3, metadata !9825, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  br label %13, !dbg !9832

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9822, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %2, metadata !9824, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %3, metadata !9825, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  br label %13, !dbg !9833

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9822, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %2, metadata !9824, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %3, metadata !9825, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  br label %13, !dbg !9834

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9822, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %2, metadata !9824, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %3, metadata !9825, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  br label %13, !dbg !9835

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !9822, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %2, metadata !9824, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %3, metadata !9825, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  br label %13, !dbg !9836

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #25, !dbg !9837
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !9837
  call void @llvm.dbg.value(metadata i32 %15, metadata !9822, metadata !DIExpression()), !dbg !9826
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !9838

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !9839
  %18 = lshr i32 %17, 1, !dbg !9841
  call void @llvm.dbg.value(metadata i32 %18, metadata !9823, metadata !DIExpression()), !dbg !9826
  br label %21, !dbg !9842

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !9843
  call void @llvm.dbg.value(metadata i32 %20, metadata !9823, metadata !DIExpression()), !dbg !9826
  br label %21, !dbg !9844

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !9845
  call void @llvm.dbg.value(metadata i32 %22, metadata !9823, metadata !DIExpression()), !dbg !9826
  %23 = load i32, i32* %2, align 4, !dbg !9846
  call void @llvm.dbg.value(metadata i32 %23, metadata !9824, metadata !DIExpression()), !dbg !9826
  %24 = add i32 %23, 1, !dbg !9847
  %25 = udiv i32 %22, %24, !dbg !9848
  %26 = load i32, i32* %3, align 4, !dbg !9849
  call void @llvm.dbg.value(metadata i32 %26, metadata !9825, metadata !DIExpression()), !dbg !9826
  %27 = add i32 %26, 1, !dbg !9850
  %28 = udiv i32 %25, %27, !dbg !9851
  br label %29, !dbg !9852

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !9826
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9853
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9853
  ret i32 %30, !dbg !9853
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #19 !dbg !9854 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !9857, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i32 undef, metadata !9857, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i32 undef, metadata !9857, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !9873
  ret void, !dbg !9874
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !9875 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9879, metadata !DIExpression()), !dbg !9881
  %2 = icmp eq i8* %0, null, !dbg !9882
  br i1 %2, label %29, label %3, !dbg !9884

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !9885
  %5 = icmp eq i8 %4, 0, !dbg !9886
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !9887
  br i1 %6, label %29, label %8, !dbg !9887

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !9880, metadata !DIExpression()), !dbg !9881
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !9888

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !9880, metadata !DIExpression()), !dbg !9881
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !9890
  br i1 %10, label %11, label %15, !dbg !9895

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !9896
  %13 = load i8*, i8** %12, align 4, !dbg !9896
  %14 = icmp eq i8* %13, %0, !dbg !9897
  br i1 %14, label %29, label %15, !dbg !9898

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !9899
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !9880, metadata !DIExpression()), !dbg !9881
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !9900
  br i1 %17, label %7, label %8, !dbg !9901, !llvm.loop !9902

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !9880, metadata !DIExpression()), !dbg !9881
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !9904
  br i1 %20, label %21, label %26, !dbg !9908

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !9909
  %23 = load i8*, i8** %22, align 4, !dbg !9909
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !9910
  %25 = icmp eq i32 %24, 0, !dbg !9911
  br i1 %25, label %29, label %26, !dbg !9912

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !9913
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !9880, metadata !DIExpression()), !dbg !9881
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !9914
  br i1 %28, label %29, label %18, !dbg !9888, !llvm.loop !9915

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !9881
  ret %struct.device* %30, !dbg !9917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !9918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9922, metadata !DIExpression()), !dbg !9923
  %2 = icmp eq %struct.device* %0, null, !dbg !9924
  br i1 %2, label %14, label %3, !dbg !9926

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9927
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !9927
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !9928
  %7 = load i8, i8* %6, align 1, !dbg !9928
  %8 = and i8 %7, 1, !dbg !9928
  %9 = icmp eq i8 %8, 0, !dbg !9928
  br i1 %9, label %14, label %10, !dbg !9929

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !9930
  %12 = load i8, i8* %11, align 1, !dbg !9930
  %13 = icmp eq i8 %12, 0, !dbg !9931
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !9923
  ret i1 %15, !dbg !9932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !9933 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !9938, metadata !DIExpression()), !dbg !9939
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !9940
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !9941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !9942 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9950, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !9951, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8* %2, metadata !9952, metadata !DIExpression()), !dbg !9955
  %5 = bitcast i32* %4 to i8*, !dbg !9956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9956
  call void @llvm.dbg.value(metadata i32 0, metadata !9953, metadata !DIExpression()), !dbg !9955
  store i32 0, i32* %4, align 4, !dbg !9957
  call void @llvm.dbg.value(metadata i32* %4, metadata !9953, metadata !DIExpression(DW_OP_deref)), !dbg !9955
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !9958
  call void @llvm.dbg.value(metadata i16* %6, metadata !9954, metadata !DIExpression()), !dbg !9955
  %7 = load i32, i32* %4, align 4, !dbg !9959
  call void @llvm.dbg.value(metadata i32 %7, metadata !9953, metadata !DIExpression()), !dbg !9955
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !9960
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9961
  ret i32 %8, !dbg !9962
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !9963 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9967, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata i32* %1, metadata !9968, metadata !DIExpression()), !dbg !9973
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !9974
  %4 = load i16*, i16** %3, align 4, !dbg !9974
  call void @llvm.dbg.value(metadata i16* %4, metadata !9969, metadata !DIExpression()), !dbg !9973
  %5 = icmp eq i16* %4, null, !dbg !9975
  br i1 %5, label %14, label %6, !dbg !9976

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !9977
  call void @llvm.dbg.value(metadata i32 %7, metadata !9970, metadata !DIExpression()), !dbg !9977
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !9978
  %9 = load i16, i16* %8, align 2, !dbg !9978
  %10 = add i16 %9, -32767, !dbg !9979
  %11 = icmp ult i16 %10, 2, !dbg !9979
  %12 = add i32 %7, 1, !dbg !9980
  call void @llvm.dbg.value(metadata i32 %12, metadata !9970, metadata !DIExpression()), !dbg !9977
  br i1 %11, label %13, label %6, !dbg !9979, !llvm.loop !9982

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !9985
  br label %14, !dbg !9986

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !9987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !9988 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !9992, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.value(metadata i32 %1, metadata !9993, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !9994, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.value(metadata i8* %3, metadata !9995, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.value(metadata i32 0, metadata !9996, metadata !DIExpression()), !dbg !10004
  %5 = icmp eq i32 %1, 0, !dbg !10005
  br i1 %5, label %16, label %8, !dbg !10006

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !9996, metadata !DIExpression()), !dbg !10004
  %7 = icmp eq i32 %15, %1, !dbg !10005
  br i1 %7, label %16, label %8, !dbg !10006, !llvm.loop !10007

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9996, metadata !DIExpression()), !dbg !10004
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10009
  %11 = load i16, i16* %10, align 2, !dbg !10009
  call void @llvm.dbg.value(metadata i16 %11, metadata !9998, metadata !DIExpression()), !dbg !10010
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !10011
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10001, metadata !DIExpression()), !dbg !10010
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !10012
  call void @llvm.dbg.value(metadata i32 %13, metadata !10002, metadata !DIExpression()), !dbg !10010
  %14 = icmp slt i32 %13, 0, !dbg !10013
  %15 = add nuw i32 %9, 1, !dbg !10015
  call void @llvm.dbg.value(metadata i32 %15, metadata !9996, metadata !DIExpression()), !dbg !10004
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !10017 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10021, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10023, metadata !DIExpression()), !dbg !10024
  %2 = sext i16 %0 to i32, !dbg !10025
  %3 = icmp slt i16 %0, 1, !dbg !10027
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10028
  %6 = add nsw i32 %2, -1, !dbg !10028
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10028
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10028
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10022, metadata !DIExpression()), !dbg !10024
  ret %struct.device* %8, !dbg !10029
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10030 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10032, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10033, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata i8* %2, metadata !10034, metadata !DIExpression()), !dbg !10037
  %5 = bitcast i32* %4 to i8*, !dbg !10038
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10038
  call void @llvm.dbg.value(metadata i32 0, metadata !10035, metadata !DIExpression()), !dbg !10037
  store i32 0, i32* %4, align 4, !dbg !10039
  call void @llvm.dbg.value(metadata i32* %4, metadata !10035, metadata !DIExpression(DW_OP_deref)), !dbg !10037
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10040
  call void @llvm.dbg.value(metadata i16* %6, metadata !10036, metadata !DIExpression()), !dbg !10037
  %7 = load i32, i32* %4, align 4, !dbg !10041
  call void @llvm.dbg.value(metadata i32 %7, metadata !10035, metadata !DIExpression()), !dbg !10037
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10042
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10043
  ret i32 %8, !dbg !10044
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !10045 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10047, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32* %1, metadata !10048, metadata !DIExpression()), !dbg !10052
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10053
  %4 = load i16*, i16** %3, align 4, !dbg !10053
  call void @llvm.dbg.value(metadata i16* %4, metadata !10049, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32 0, metadata !10050, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32 0, metadata !10051, metadata !DIExpression()), !dbg !10052
  %5 = icmp eq i16* %4, null, !dbg !10054
  br i1 %5, label %22, label %6, !dbg !10056

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10050, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i16* %8, metadata !10049, metadata !DIExpression()), !dbg !10052
  %9 = load i16, i16* %8, align 2, !dbg !10057
  %10 = icmp eq i16 %9, -32768, !dbg !10061
  call void @llvm.dbg.value(metadata i32 undef, metadata !10050, metadata !DIExpression()), !dbg !10052
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10062
  call void @llvm.dbg.value(metadata i16* %11, metadata !10049, metadata !DIExpression()), !dbg !10052
  %12 = zext i1 %10 to i32, !dbg !10063
  %13 = add i32 %7, %12, !dbg !10063
  call void @llvm.dbg.value(metadata i32 %13, metadata !10050, metadata !DIExpression()), !dbg !10052
  %14 = icmp eq i32 %13, 2, !dbg !10064
  br i1 %14, label %15, label %6, !dbg !10065

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10052
  call void @llvm.dbg.value(metadata i32 %16, metadata !10051, metadata !DIExpression()), !dbg !10052
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10066
  %18 = load i16, i16* %17, align 2, !dbg !10066
  %19 = icmp eq i16 %18, 32767, !dbg !10067
  %20 = add i32 %16, 1, !dbg !10068
  call void @llvm.dbg.value(metadata i32 %20, metadata !10051, metadata !DIExpression()), !dbg !10052
  br i1 %19, label %21, label %15, !dbg !10070, !llvm.loop !10071

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10073
  br label %22, !dbg !10074

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10075
  call void @llvm.dbg.value(metadata i16* %23, metadata !10049, metadata !DIExpression()), !dbg !10052
  ret i16* %23, !dbg !10076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !10077 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10080
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10081
  ret i32* %2, !dbg !10082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !10083 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10225, metadata !DIExpression()), !dbg !10228
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10226, metadata !DIExpression()), !dbg !10228
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10227, metadata !DIExpression()), !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !10230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10234, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.value(metadata i32 %1, metadata !10235, metadata !DIExpression()), !dbg !10236
  ret void, !dbg !10237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !10238 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10242, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.value(metadata i32 %1, metadata !10243, metadata !DIExpression()), !dbg !10244
  ret void, !dbg !10245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !10246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10250, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i8* %1, metadata !10251, metadata !DIExpression()), !dbg !10252
  ret i32 -134, !dbg !10253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !10254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10258, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata i8* %1, metadata !10259, metadata !DIExpression()), !dbg !10260
  ret i32 -134, !dbg !10261
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !10262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10265, metadata !DIExpression()), !dbg !10266
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10267, !srcloc !10273
  call void @llvm.dbg.value(metadata i32 undef, metadata !10270, metadata !DIExpression()) #23, !dbg !10274
  call void @llvm.dbg.value(metadata i32 undef, metadata !10271, metadata !DIExpression()) #23, !dbg !10274
  br label %3, !dbg !10275

3:                                                ; preds = %3, %1
  br label %3, !dbg !10276, !llvm.loop !10279
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10286, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10287, metadata !DIExpression()), !dbg !10288
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !10289
  unreachable, !dbg !10289
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !10290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10292, metadata !DIExpression()), !dbg !10293
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !10294
  unreachable, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10297, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10298, metadata !DIExpression()), !dbg !10301
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10302, !srcloc !10273
  call void @llvm.dbg.value(metadata i32 undef, metadata !10270, metadata !DIExpression()) #23, !dbg !10304
  call void @llvm.dbg.value(metadata i32 undef, metadata !10271, metadata !DIExpression()) #23, !dbg !10304
  call void @llvm.dbg.value(metadata i32 undef, metadata !10299, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10300, metadata !DIExpression()), !dbg !10301
  %4 = icmp eq %struct.__esf* %1, null, !dbg !10305
  br i1 %4, label %6, label %5, !dbg !10307

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !10308
  br label %7, !dbg !10309

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !10308
  br label %7, !dbg !10312

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %8, metadata !10270, metadata !DIExpression()) #23, !dbg !10304
  call void @llvm.dbg.value(metadata i32 %8, metadata !10299, metadata !DIExpression()), !dbg !10301
  %9 = tail call fastcc %struct.k_thread* @k_current_get.69() #26, !dbg !10314
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !10300, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.value(metadata i32 undef, metadata !10315, metadata !DIExpression()) #23, !dbg !10318
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !10320, !srcloc !10321
  tail call fastcc void @k_thread_abort.70(%struct.k_thread* noundef %9) #25, !dbg !10322
  ret void, !dbg !10325
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.69() unnamed_addr #9 !dbg !10326 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.71() #26, !dbg !10330
  ret %struct.k_thread* %1, !dbg !10331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.70(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10332 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10336, metadata !DIExpression()), !dbg !10337
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10338, !srcloc !10340
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !10341
  ret void, !dbg !10342
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.71() unnamed_addr #9 !dbg !10343 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10344, !srcloc !10346
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !10347
  ret %struct.k_thread* %1, !dbg !10348
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10349 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10353, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %1, metadata !10354, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %2, metadata !10355, metadata !DIExpression()), !dbg !10356
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !10357
  ret void, !dbg !10358
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10359 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10363, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i8* %1, metadata !10364, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i32 %2, metadata !10365, metadata !DIExpression()), !dbg !10366
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !10367
  ret void, !dbg !10368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10369 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !10370
  ret void, !dbg !10371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10376, metadata !DIExpression()), !dbg !10377
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !10378
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10379
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10380
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10381
  %4 = trunc i32 %0 to i8, !dbg !10382
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !10383
  store i8 %4, i8* %5, align 4, !dbg !10384
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10385
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !10386
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10387
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10388
  store i8* %8, i8** %9, align 4, !dbg !10389
  ret void, !dbg !10390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10393, metadata !DIExpression()), !dbg !10399
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10400
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10394, metadata !DIExpression()), !dbg !10399
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10401
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !10395, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i8* null, metadata !10398, metadata !DIExpression()), !dbg !10399
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10402
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10403
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !10404
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !10405
  ret void, !dbg !10406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !10407 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10411, metadata !DIExpression()), !dbg !10412
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !10413
  ret i8* %2, !dbg !10414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !10415 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10420, metadata !DIExpression()), !dbg !10421
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10422
  %3 = load i8, i8* %2, align 1, !dbg !10423
  %4 = and i8 %3, -5, !dbg !10423
  store i8 %4, i8* %2, align 1, !dbg !10423
  ret void, !dbg !10424
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !10425 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !10428
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !10429
  %3 = ptrtoint i8* %2 to i32, !dbg !10438
  %4 = add i32 %3, 2048, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %4, metadata !10433, metadata !DIExpression()) #23, !dbg !10440
  call void @llvm.dbg.value(metadata i32 %4, metadata !10441, metadata !DIExpression()) #23, !dbg !10444
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !10446, !srcloc !10447
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10448
  %6 = or i32 %5, 512, !dbg !10448
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10448
  tail call fastcc void @__NVIC_SetPriority.78(i32 noundef -2, i32 noundef 255) #24, !dbg !10449
  tail call fastcc void @__NVIC_SetPriority.78(i32 noundef -5, i32 noundef 0) #24, !dbg !10452
  tail call fastcc void @__NVIC_SetPriority.78(i32 noundef -12, i32 noundef 0) #24, !dbg !10453
  tail call fastcc void @__NVIC_SetPriority.78(i32 noundef -11, i32 noundef 0) #24, !dbg !10454
  tail call fastcc void @__NVIC_SetPriority.78(i32 noundef -10, i32 noundef 0) #24, !dbg !10455
  tail call fastcc void @__NVIC_SetPriority.78(i32 noundef -4, i32 noundef 0) #24, !dbg !10456
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10457
  %8 = or i32 %7, 458752, !dbg !10457
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10457
  tail call void @z_arm_fault_init() #24, !dbg !10458
  tail call void @z_arm_cpu_idle_init() #24, !dbg !10459
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10460
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10463
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !10464
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #23, !dbg !10464
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10427, metadata !DIExpression()), !dbg !10465
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !10466
  call void @z_device_state_init() #24, !dbg !10467
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !10468
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !10469
  %10 = call fastcc i8* @prepare_multithreading() #25, !dbg !10470
  call fastcc void @switch_to_main_thread(i8* noundef %10) #28, !dbg !10471
  unreachable, !dbg !10471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1925, metadata !DIExpression()), !dbg !10472
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10473
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10473
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1926, metadata !DIExpression()), !dbg !10472
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1926, metadata !DIExpression()), !dbg !10472
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10474
  br i1 %7, label %8, label %35, !dbg !10475

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1926, metadata !DIExpression()), !dbg !10472
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10476
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10476
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1936, metadata !DIExpression()), !dbg !10477
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10478
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10478
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !10479
  call void @llvm.dbg.value(metadata i32 %14, metadata !1940, metadata !DIExpression()), !dbg !10477
  %15 = icmp eq %struct.device* %11, null, !dbg !10480
  br i1 %15, label %32, label %16, !dbg !10482

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10483
  br i1 %17, label %26, label %18, !dbg !10486

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10487
  call void @llvm.dbg.value(metadata i32 %19, metadata !1940, metadata !DIExpression()), !dbg !10477
  %20 = icmp ult i32 %19, 255, !dbg !10489
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %21, metadata !1940, metadata !DIExpression()), !dbg !10477
  %22 = trunc i32 %21 to i8, !dbg !10490
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10491
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10491
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10492
  store i8 %22, i8* %25, align 1, !dbg !10493
  br label %26, !dbg !10494

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10495
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10495
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10496
  %30 = load i8, i8* %29, align 1, !dbg !10497
  %31 = or i8 %30, 1, !dbg !10497
  store i8 %31, i8* %29, align 1, !dbg !10497
  br label %32, !dbg !10498

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10499
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1926, metadata !DIExpression()), !dbg !10472
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10474
  br i1 %34, label %8, label %35, !dbg !10475, !llvm.loop !10500

35:                                               ; preds = %32, %1
  ret void, !dbg !10502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.78(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10505, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.value(metadata i32 %1, metadata !10506, metadata !DIExpression()), !dbg !10507
  %3 = trunc i32 %1 to i8, !dbg !10508
  %4 = shl i8 %3, 4, !dbg !10508
  %5 = and i32 %0, 15, !dbg !10511
  %6 = add nsw i32 %5, -4, !dbg !10512
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10513
  store volatile i8 %4, i8* %7, align 1, !dbg !10514
  ret void, !dbg !10515
}

; Function Attrs: optsize
declare !dbg !10516 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !10517 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10520, metadata !DIExpression()), !dbg !10521
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10522
  store i8 1, i8* %2, align 1, !dbg !10523
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10524
  store i8 1, i8* %3, align 4, !dbg !10525
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !10526
  store %struct.k_heap* null, %struct.k_heap** %4, align 4, !dbg !10527
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10528
  ret void, !dbg !10529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !10530 {
  tail call void @z_sched_init() #24, !dbg !10533
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10534
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0)) #24, !dbg !10535
  call void @llvm.dbg.value(metadata i8* %1, metadata !10532, metadata !DIExpression()), !dbg !10536
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !10537
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !10538
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !10539
  ret i8* %1, !dbg !10540
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !10541 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10545, metadata !DIExpression()), !dbg !10546
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !10547
  unreachable, !dbg !10548
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !10549 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10551, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i8* %1, metadata !10552, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i8* %2, metadata !10553, metadata !DIExpression()), !dbg !10554
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !10555
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !10556
  tail call void @boot_banner() #24, !dbg !10557
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !10558
  tail call void @z_init_static_threads() #24, !dbg !10559
  tail call void @main() #24, !dbg !10560
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10561
  %5 = and i8 %4, -2, !dbg !10561
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10561
  ret void, !dbg !10562
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !10563 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10573, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.value(metadata i8* %1, metadata !10574, metadata !DIExpression()), !dbg !10575
  ret void, !dbg !10576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !10577 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10579, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata i8* %1, metadata !10580, metadata !DIExpression()), !dbg !10581
  ret void, !dbg !10582
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !10583 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !10584, !srcloc !10591
  call void @llvm.dbg.value(metadata i32 %1, metadata !10587, metadata !DIExpression()) #23, !dbg !10592
  %2 = icmp ne i32 %1, 0, !dbg !10593
  ret i1 %2, !dbg !10594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !10595 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10596
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10597
  %3 = load i8, i8* %2, align 4, !dbg !10598
  %4 = or i8 %3, 1, !dbg !10598
  store i8 %4, i8* %2, align 4, !dbg !10598
  ret void, !dbg !10599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !10600 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10601
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10602
  %3 = load i8, i8* %2, align 4, !dbg !10603
  %4 = and i8 %3, -2, !dbg !10603
  store i8 %4, i8* %2, align 4, !dbg !10603
  ret void, !dbg !10604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !10605 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10606
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10607
  %3 = load i8, i8* %2, align 4, !dbg !10607
  %4 = and i8 %3, 1, !dbg !10608
  %5 = icmp ne i8 %4, 0, !dbg !10609
  ret i1 %5, !dbg !10610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !10611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10615, metadata !DIExpression()), !dbg !10617
  call void @llvm.dbg.value(metadata i8* %1, metadata !10616, metadata !DIExpression()), !dbg !10617
  ret i32 -88, !dbg !10618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !10619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10623, metadata !DIExpression()), !dbg !10624
  ret i8* null, !dbg !10625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !10626 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10630, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata i8* %1, metadata !10631, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata i32 %2, metadata !10632, metadata !DIExpression()), !dbg !10633
  ret i32 -88, !dbg !10634
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2058, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata i8* %1, metadata !2059, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata i32 %2, metadata !2060, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata i32 0, metadata !2061, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata i8 undef, metadata !2063, metadata !DIExpression()), !dbg !10635
  %4 = icmp eq i8* %1, null, !dbg !10636
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !10638
  br i1 %6, label %46, label %7, !dbg !10638

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10639
  %9 = load i8, i8* %8, align 1, !dbg !10639
  call void @llvm.dbg.value(metadata i8 %9, metadata !2063, metadata !DIExpression()), !dbg !10635
  %10 = add i32 %2, -1, !dbg !10640
  call void @llvm.dbg.value(metadata i32 %10, metadata !2060, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata i8 0, metadata !2064, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.value(metadata i8 %9, metadata !2063, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata i32 0, metadata !2061, metadata !DIExpression()), !dbg !10635
  %11 = icmp eq i8 %9, 0, !dbg !10642
  br i1 %11, label %12, label %15, !dbg !10644

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !10645
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !10646
  store i8 0, i8* %14, align 1, !dbg !10647
  br label %46, !dbg !10648

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2064, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.value(metadata i8 %17, metadata !2063, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata i32 %18, metadata !2061, metadata !DIExpression()), !dbg !10635
  %19 = zext i8 %17 to i32, !dbg !10649
  %20 = zext i8 %16 to i32, !dbg !10650
  %21 = shl nuw i32 1, %20, !dbg !10650
  call void @llvm.dbg.value(metadata i32 %21, metadata !2062, metadata !DIExpression()), !dbg !10635
  %22 = and i32 %21, %19, !dbg !10652
  %23 = icmp eq i32 %22, 0, !dbg !10654
  br i1 %23, label %42, label %24, !dbg !10655

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !10656
  %26 = sub i32 %10, %18, !dbg !10657
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !10658
  %28 = load i8*, i8** %27, align 4, !dbg !10658
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !10659
  %30 = load i32, i32* %29, align 4, !dbg !10659
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !10660
  %32 = add i32 %31, %18, !dbg !10661
  call void @llvm.dbg.value(metadata i32 %32, metadata !2061, metadata !DIExpression()), !dbg !10635
  %33 = trunc i32 %21 to i8, !dbg !10662
  %34 = xor i8 %33, -1, !dbg !10662
  %35 = and i8 %17, %34, !dbg !10662
  call void @llvm.dbg.value(metadata i8 %35, metadata !2063, metadata !DIExpression()), !dbg !10635
  %36 = icmp eq i8 %35, 0, !dbg !10663
  br i1 %36, label %12, label %37, !dbg !10665

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !10666
  %39 = sub i32 %10, %32, !dbg !10668
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #25, !dbg !10669
  %41 = add i32 %40, %32, !dbg !10670
  call void @llvm.dbg.value(metadata i32 %41, metadata !2061, metadata !DIExpression()), !dbg !10635
  br label %42, !dbg !10671

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !10635
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !10635
  call void @llvm.dbg.value(metadata i8 %44, metadata !2063, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata i32 %43, metadata !2061, metadata !DIExpression()), !dbg !10635
  %45 = add i8 %16, 1, !dbg !10672
  call void @llvm.dbg.value(metadata i8 %45, metadata !2064, metadata !DIExpression()), !dbg !10641
  br label %15, !dbg !10644

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !10635
  ret i8* %47, !dbg !10673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10674 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10678, metadata !DIExpression()), !dbg !10683
  call void @llvm.dbg.value(metadata i32 %1, metadata !10679, metadata !DIExpression()), !dbg !10683
  call void @llvm.dbg.value(metadata i8* %2, metadata !10680, metadata !DIExpression()), !dbg !10683
  call void @llvm.dbg.value(metadata i32 %3, metadata !10681, metadata !DIExpression()), !dbg !10683
  %5 = icmp ult i32 %1, %3, !dbg !10684
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !10684
  call void @llvm.dbg.value(metadata i32 %6, metadata !10682, metadata !DIExpression()), !dbg !10683
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !10685
  ret i32 %6, !dbg !10686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10687 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10691, metadata !DIExpression()), !dbg !10692
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !10693
  ret void, !dbg !10694
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !10695 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10704, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10705, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i32 %2, metadata !10706, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !10707, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i8* %4, metadata !10708, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i8* %5, metadata !10709, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i8* %6, metadata !10710, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i32 %7, metadata !10711, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i32 %8, metadata !10712, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i8* undef, metadata !10713, metadata !DIExpression()), !dbg !10715
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !10716
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !10717
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !10718
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !10719
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !10720
  call void @llvm.dbg.value(metadata i8* %13, metadata !10714, metadata !DIExpression()), !dbg !10715
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !10721
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !10722
  store i8* null, i8** %14, align 4, !dbg !10723
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10724
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !10724
  br i1 %16, label %20, label %17, !dbg !10726

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 5, !dbg !10727
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 4, !dbg !10727
  br label %20, !dbg !10728

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !10715
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !10729
  store %struct.k_heap* %21, %struct.k_heap** %22, align 4, !dbg !10731
  ret i8* %13, !dbg !10732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !10733 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !10738, metadata !DIExpression()), !dbg !10739
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !10740
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !10741
  ret void, !dbg !10742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !10743 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !10748, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.value(metadata i32 %1, metadata !10749, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.value(metadata i32 %2, metadata !10750, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.value(metadata i32 %3, metadata !10751, metadata !DIExpression()), !dbg !10752
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !10753
  store %union.anon* null, %union.anon** %5, align 8, !dbg !10754
  %6 = trunc i32 %3 to i8, !dbg !10755
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !10756
  store i8 %6, i8* %7, align 4, !dbg !10757
  %8 = trunc i32 %2 to i8, !dbg !10758
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !10759
  store i8 %8, i8* %9, align 1, !dbg !10760
  %10 = trunc i32 %1 to i8, !dbg !10761
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !10762
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !10762
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !10762
  store i8 %10, i8* %13, align 2, !dbg !10763
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !10764
  store i8 0, i8* %14, align 1, !dbg !10765
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !10766
  ret void, !dbg !10767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !10768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10772, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10773, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %1, metadata !10774, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 0, metadata !10779, metadata !DIExpression()), !dbg !10780
  %3 = add i32 %1, 7, !dbg !10781
  %4 = and i32 %3, -8, !dbg !10781
  call void @llvm.dbg.value(metadata i32 %4, metadata !10775, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i8* undef, metadata !10778, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %4, metadata !10776, metadata !DIExpression()), !dbg !10780
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !10783
  call void @llvm.dbg.value(metadata i8* %5, metadata !10777, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 0, metadata !10779, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i8* %5, metadata !10777, metadata !DIExpression()), !dbg !10780
  ret i8* %5, !dbg !10784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !10785 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !10790, metadata !DIExpression()), !dbg !10791
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !10792
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !10793
  ret void, !dbg !10794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !10795 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !10797, metadata !DIExpression()), !dbg !10798
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !10799
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !10800
  ret void, !dbg !10801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10806, metadata !DIExpression()), !dbg !10807
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !10808
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !10809
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10810
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !10811
  ret void, !dbg !10812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !10813 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10818, metadata !DIExpression()), !dbg !10819
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !10820
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !10821
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10822
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !10823
  ret void, !dbg !10824
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !10825 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !10842, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10833, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10834, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata i32 %2, metadata !10835, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !10836, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata i8* %4, metadata !10837, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata i8* %5, metadata !10838, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata i8* %6, metadata !10839, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata i32 %7, metadata !10840, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata i32 %8, metadata !10841, metadata !DIExpression()), !dbg !10843
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !10844
  %13 = icmp eq i64 %11, -1, !dbg !10845
  br i1 %13, label %15, label %14, !dbg !10847

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !10848
  br label %15, !dbg !10850

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !10851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10852 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !10857, metadata !DIExpression()), !dbg !10858
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10856, metadata !DIExpression()), !dbg !10858
  %4 = icmp eq i64 %3, 0, !dbg !10859
  br i1 %4, label %5, label %6, !dbg !10861

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !10862
  br label %7, !dbg !10864

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !10865
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !10867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10872, metadata !DIExpression()), !dbg !10873
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10874, !srcloc !10876
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !10877
  ret void, !dbg !10878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10879 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10882, metadata !DIExpression()), !dbg !10883
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10881, metadata !DIExpression()), !dbg !10883
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !10884
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !10885
  ret void, !dbg !10886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !10887 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !10889, metadata !DIExpression()), !dbg !10909
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !10910

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !10911
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !10907, metadata !DIExpression()), !dbg !10912
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !10913

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !10889, metadata !DIExpression()), !dbg !10909
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !10914
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !10914
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !10917
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !10917
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !10918
  %9 = load i32, i32* %8, align 4, !dbg !10918
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !10919
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !10919
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !10920
  %13 = load i8*, i8** %12, align 4, !dbg !10920
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !10921
  %15 = load i8*, i8** %14, align 4, !dbg !10921
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !10922
  %17 = load i8*, i8** %16, align 4, !dbg !10922
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !10923
  %19 = load i32, i32* %18, align 4, !dbg !10923
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !10924
  %21 = load i32, i32* %20, align 4, !dbg !10924
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !10925
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !10926
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !10927
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !10928
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !10928
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !10929
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !10889, metadata !DIExpression()), !dbg !10909
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !10930
  br i1 %27, label %2, label %1, !dbg !10910, !llvm.loop !10932

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !10911
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !10907, metadata !DIExpression()), !dbg !10912
  br label %29, !dbg !10913

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !10934
  ret void, !dbg !10935

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !10907, metadata !DIExpression()), !dbg !10912
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !10936
  %33 = load i32, i32* %32, align 4, !dbg !10936
  %34 = icmp eq i32 %33, -1, !dbg !10940
  br i1 %34, label %43, label %35, !dbg !10941

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !10942
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !10942
  %38 = icmp sgt i32 %33, 0, !dbg !10944
  %39 = select i1 %38, i32 %33, i32 0, !dbg !10944
  %40 = zext i32 %39 to i64, !dbg !10944
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !10944
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !10945
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !10945
  br label %43, !dbg !10946

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !10947
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !10907, metadata !DIExpression()), !dbg !10912
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !10948
  br i1 %45, label %30, label %29, !dbg !10913, !llvm.loop !10950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !10952 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !10957, metadata !DIExpression()), !dbg !10958
  call void @llvm.dbg.value(metadata i64 %0, metadata !10959, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 1000, metadata !10964, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 10000, metadata !10965, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i8 1, metadata !10966, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i8 0, metadata !10967, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i8 1, metadata !10968, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i8 0, metadata !10969, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i8 1, metadata !10970, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i8 0, metadata !10971, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i64 0, metadata !10972, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i64 0, metadata !10972, metadata !DIExpression()), !dbg !10976
  %2 = mul i64 %0, 10, !dbg !10978
  ret i64 %2, !dbg !10984
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !10985 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !10987, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i8* %1, metadata !10988, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i8* %2, metadata !10989, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i8* %3, metadata !10990, metadata !DIExpression()), !dbg !10991
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10992
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !10993
  %7 = load i8, i8* %6, align 4, !dbg !10994
  %8 = or i8 %7, 4, !dbg !10994
  store i8 %8, i8* %6, align 4, !dbg !10994
  tail call void @z_thread_essential_clear() #25, !dbg !10995
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !10996
  unreachable, !dbg !10996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !10997 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11001, metadata !DIExpression()), !dbg !11002
  ret i32 -134, !dbg !11003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !11004 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11008, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i32 %1, metadata !11009, metadata !DIExpression()), !dbg !11010
  ret i32 -134, !dbg !11011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !11012 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11019, metadata !DIExpression()), !dbg !11021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11020, metadata !DIExpression()), !dbg !11021
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11022
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11024
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11021
  ret i32 %6, !dbg !11025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !11026 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11030, metadata !DIExpression()), !dbg !11031
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11032
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11031
  ret i32 %3, !dbg !11034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11035 {
  tail call void @sys_clock_idle_exit() #24, !dbg !11037
  ret void, !dbg !11038
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !11039 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11041, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i8* %1, metadata !11042, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i8* %2, metadata !11043, metadata !DIExpression()), !dbg !11044
  br label %4, !dbg !11045

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11046, !srcloc !11053
  call void @llvm.dbg.value(metadata i32 undef, metadata !11049, metadata !DIExpression()) #23, !dbg !11054
  call void @llvm.dbg.value(metadata i32 undef, metadata !11050, metadata !DIExpression()) #23, !dbg !11054
  tail call fastcc void @k_cpu_idle() #25, !dbg !11055
  br label %4, !dbg !11045, !llvm.loop !11056
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11058 {
  tail call void @arch_cpu_idle() #24, !dbg !11059
  ret void, !dbg !11060
}

; Function Attrs: optsize
declare !dbg !11061 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11062 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !11066, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i1 %1, metadata !11067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11072
  %3 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !11073
  br i1 %3, label %13, label %4, !dbg !11074

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef nonnull %0) #25, !dbg !11075
  %6 = icmp eq i8 %5, 0, !dbg !11076
  br i1 %6, label %13, label %7, !dbg !11077

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !11069, metadata !DIExpression()), !dbg !11078
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 1, !dbg !11079
  %9 = bitcast %struct.z_heap_bucket* %8 to i8**, !dbg !11079
  %10 = load i8*, i8** %9, align 4, !dbg !11079
  call void @llvm.dbg.value(metadata i8* %10, metadata !11068, metadata !DIExpression()), !dbg !11072
  br i1 %1, label %11, label %15, !dbg !11080

11:                                               ; preds = %7
  %12 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !11081
  tail call void @k_free(i8* noundef nonnull %12) #24, !dbg !11082
  br label %15, !dbg !11085

13:                                               ; preds = %4, %2
  %14 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !11086
  call void @llvm.dbg.value(metadata i8* %14, metadata !11068, metadata !DIExpression()), !dbg !11072
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !11088
  call void @llvm.dbg.value(metadata i8* %16, metadata !11068, metadata !DIExpression()), !dbg !11072
  ret i8* %16, !dbg !11089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11090 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !11094, metadata !DIExpression()), !dbg !11095
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !11096
  %3 = load i32, i32* %2, align 4, !dbg !11096
  %4 = trunc i32 %3 to i8, !dbg !11097
  %5 = and i8 %4, 3, !dbg !11097
  ret i8 %5, !dbg !11098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #4 !dbg !11099 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11120, metadata !DIExpression()), !dbg !11121
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11122
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #25, !dbg !11123
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !11124
  tail call fastcc void @z_waitq_init.91(%union.anon* noundef nonnull %3) #25, !dbg !11125
  ret void, !dbg !11126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11127 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11132, metadata !DIExpression()), !dbg !11133
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !11134
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %2, align 4, !dbg !11135
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !11136
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %3, align 4, !dbg !11137
  ret void, !dbg !11138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.91(%union.anon* noundef %0) unnamed_addr #4 !dbg !11139 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11144, metadata !DIExpression()), !dbg !11145
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11146
  tail call fastcc void @sys_dlist_init.92(%struct._dnode* noundef %2) #25, !dbg !11147
  ret void, !dbg !11148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.92(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11149 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11154, metadata !DIExpression()), !dbg !11155
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11156
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11157
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11158
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11159
  ret void, !dbg !11160
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !11161 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11163, metadata !DIExpression()), !dbg !11243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11244, metadata !DIExpression()) #23, !dbg !11251
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11253, !srcloc !11259
  call void @llvm.dbg.value(metadata i32 undef, metadata !11256, metadata !DIExpression()) #23, !dbg !11260
  call void @llvm.dbg.value(metadata i32 undef, metadata !11257, metadata !DIExpression()) #23, !dbg !11260
  call void @llvm.dbg.value(metadata i32 undef, metadata !11250, metadata !DIExpression()) #23, !dbg !11251
  call void @llvm.dbg.value(metadata i32 undef, metadata !11164, metadata !DIExpression()), !dbg !11243
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !11261
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %3) #24, !dbg !11262
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !11169, metadata !DIExpression()), !dbg !11243
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !11263
  br i1 %5, label %7, label %6, !dbg !11265

6:                                                ; preds = %1
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %4, i8* noundef null) #25, !dbg !11266
  br label %7, !dbg !11268

7:                                                ; preds = %6, %1
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !11253
  call void @llvm.dbg.value(metadata i32 %8, metadata !11256, metadata !DIExpression()) #23, !dbg !11260
  call void @llvm.dbg.value(metadata i32 %8, metadata !11250, metadata !DIExpression()) #23, !dbg !11251
  call void @llvm.dbg.value(metadata i32 %8, metadata !11164, metadata !DIExpression()), !dbg !11243
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !11269
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !11270
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %10) #24, !dbg !11270
  ret void, !dbg !11271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11276, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata i8* %1, metadata !11277, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11279, metadata !DIExpression()), !dbg !11287
  call void @llvm.dbg.value(metadata i32 0, metadata !11285, metadata !DIExpression()), !dbg !11287
  call void @llvm.dbg.value(metadata i8* %1, metadata !11286, metadata !DIExpression()), !dbg !11287
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11289, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.value(metadata i32 0, metadata !11294, metadata !DIExpression()), !dbg !11295
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !11297
  store i32 0, i32* %3, align 4, !dbg !11298
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !11299
  store i8* %1, i8** %4, align 4, !dbg !11300
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !11301
  ret void, !dbg !11302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11303 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11307, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i8* %1, metadata !11308, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i8* %2, metadata !11309, metadata !DIExpression()), !dbg !11310
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #25, !dbg !11311
  ret void, !dbg !11312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !11313 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11317, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i8* %1, metadata !11318, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i8* %2, metadata !11319, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i1 %3, metadata !11320, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11327
  call void @llvm.dbg.value(metadata i1 %4, metadata !11321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11327
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !11328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11244, metadata !DIExpression()) #23, !dbg !11329
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11331, !srcloc !11259
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !11331
  call void @llvm.dbg.value(metadata i32 %8, metadata !11256, metadata !DIExpression()) #23, !dbg !11333
  call void @llvm.dbg.value(metadata i32 undef, metadata !11257, metadata !DIExpression()) #23, !dbg !11333
  call void @llvm.dbg.value(metadata i32 %8, metadata !11250, metadata !DIExpression()) #23, !dbg !11329
  call void @llvm.dbg.value(metadata i32 %8, metadata !11323, metadata !DIExpression()), !dbg !11327
  br i1 %4, label %9, label %13, !dbg !11334

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11335
  %11 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %10) #25, !dbg !11338
  %12 = bitcast %struct.z_heap_bucket* %11 to i8*, !dbg !11338
  call void @llvm.dbg.value(metadata i8* %12, metadata !11318, metadata !DIExpression()), !dbg !11327
  br label %13, !dbg !11339

13:                                               ; preds = %9, %5
  %14 = phi i8* [ %12, %9 ], [ %1, %5 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !11318, metadata !DIExpression()), !dbg !11327
  %15 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !11340
  %16 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %15) #24, !dbg !11341
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !11322, metadata !DIExpression()), !dbg !11327
  %17 = icmp eq %struct.k_thread* %16, null, !dbg !11342
  br i1 %17, label %20, label %18, !dbg !11344

18:                                               ; preds = %13
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %16, i8* noundef %2) #25, !dbg !11345
  %19 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !11347
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %19) #24, !dbg !11347
  br label %36, !dbg !11348

20:                                               ; preds = %13
  br i1 %3, label %21, label %29, !dbg !11349

21:                                               ; preds = %20
  %22 = tail call fastcc i8* @z_thread_malloc() #25, !dbg !11350
  call void @llvm.dbg.value(metadata i8* %22, metadata !11324, metadata !DIExpression()), !dbg !11351
  %23 = icmp eq i8* %22, null, !dbg !11352
  br i1 %23, label %24, label %25, !dbg !11354

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %8, metadata !11355, metadata !DIExpression()) #23, !dbg !11361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11360, metadata !DIExpression()) #23, !dbg !11361
  call void @llvm.dbg.value(metadata i32 %8, metadata !11364, metadata !DIExpression()) #23, !dbg !11367
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11369, !srcloc !11370
  call void @llvm.dbg.value(metadata i8* %22, metadata !11319, metadata !DIExpression()), !dbg !11327
  br label %36

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %22, metadata !11324, metadata !DIExpression()), !dbg !11351
  %26 = getelementptr inbounds i8, i8* %22, i32 4, !dbg !11371
  %27 = bitcast i8* %26 to i8**, !dbg !11371
  store i8* %2, i8** %27, align 4, !dbg !11372
  %28 = bitcast i8* %22 to %struct.z_heap_bucket*, !dbg !11373
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef nonnull %28, i8 noundef zeroext 1) #25, !dbg !11374
  call void @llvm.dbg.value(metadata i8* %22, metadata !11319, metadata !DIExpression()), !dbg !11327
  br label %31

29:                                               ; preds = %20
  %30 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !11375
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef %30, i8 noundef zeroext 0) #25, !dbg !11377
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %struct.z_heap_bucket* [ %28, %25 ], [ %30, %29 ], !dbg !11378
  call void @llvm.dbg.value(metadata i8* undef, metadata !11319, metadata !DIExpression()), !dbg !11327
  %33 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11379
  %34 = bitcast i8* %14 to %struct.z_heap_bucket*, !dbg !11380
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %33, %struct.z_heap_bucket* noundef %34, %struct.z_heap_bucket* noundef %32) #25, !dbg !11381
  %35 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !11382
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %35) #24, !dbg !11382
  br label %36, !dbg !11383

36:                                               ; preds = %24, %31, %18
  %37 = phi i32 [ 0, %18 ], [ 0, %31 ], [ -12, %24 ], !dbg !11327
  ret i32 %37, !dbg !11384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11385 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11389, metadata !DIExpression()), !dbg !11390
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !11391
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !11391
  ret %struct.z_heap_bucket* %3, !dbg !11392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !11393 {
  call void @llvm.dbg.value(metadata i32 8, metadata !11396, metadata !DIExpression()), !dbg !11397
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #24, !dbg !11398
  ret i8* %1, !dbg !11399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sfnode_init(%struct.z_heap_bucket* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #4 !dbg !11400 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !11404, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.value(metadata i8 %1, metadata !11405, metadata !DIExpression()), !dbg !11406
  %3 = zext i8 %1 to i32, !dbg !11407
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !11408
  store i32 %3, i32* %4, align 4, !dbg !11409
  ret void, !dbg !11410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !11411 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11415, metadata !DIExpression()), !dbg !11418
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !11416, metadata !DIExpression()), !dbg !11418
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !11417, metadata !DIExpression()), !dbg !11418
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !11419
  br i1 %4, label %5, label %6, !dbg !11421

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #25, !dbg !11422
  br label %11, !dbg !11422

6:                                                ; preds = %3
  %7 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef nonnull %1) #25, !dbg !11424
  %8 = icmp eq %struct.z_heap_bucket* %7, null, !dbg !11424
  br i1 %8, label %9, label %10, !dbg !11419

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #25, !dbg !11426
  br label %11, !dbg !11426

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef nonnull %7) #25, !dbg !11428
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %2) #25, !dbg !11428
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !11421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !11430 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11434, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !11435, metadata !DIExpression()), !dbg !11436
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #25, !dbg !11437
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %3) #25, !dbg !11437
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #25, !dbg !11437
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #25, !dbg !11438
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !11438
  br i1 %5, label %6, label %8, !dbg !11437

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #25, !dbg !11440
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #25, !dbg !11440
  br label %8, !dbg !11440

8:                                                ; preds = %6, %2
  ret void, !dbg !11437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11442 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !11446, metadata !DIExpression()), !dbg !11447
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !11448
  %3 = load i32, i32* %2, align 4, !dbg !11448
  %4 = and i32 %3, -4, !dbg !11449
  %5 = inttoptr i32 %4 to %struct.z_heap_bucket*, !dbg !11450
  ret %struct.z_heap_bucket* %5, !dbg !11451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !11452 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11454, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !11455, metadata !DIExpression()), !dbg !11456
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef null) #25, !dbg !11457
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #25, !dbg !11458
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !11458
  br i1 %4, label %5, label %6, !dbg !11457

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #25, !dbg !11460
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #25, !dbg !11460
  br label %7, !dbg !11460

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %3, %struct.z_heap_bucket* noundef %1) #25, !dbg !11462
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #25, !dbg !11462
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !11464 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !11468, metadata !DIExpression()), !dbg !11471
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !11469, metadata !DIExpression()), !dbg !11471
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef %0) #25, !dbg !11472
  call void @llvm.dbg.value(metadata i8 %3, metadata !11470, metadata !DIExpression()), !dbg !11471
  %4 = zext i8 %3 to i32, !dbg !11473
  %5 = ptrtoint %struct.z_heap_bucket* %1 to i32, !dbg !11474
  %6 = or i32 %4, %5, !dbg !11475
  %7 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !11476
  store i32 %6, i32* %7, align 4, !dbg !11477
  ret void, !dbg !11478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !11479 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11481, metadata !DIExpression()), !dbg !11483
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !11482, metadata !DIExpression()), !dbg !11483
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !11484
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !11485
  ret void, !dbg !11486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !11487 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11489, metadata !DIExpression()), !dbg !11491
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !11490, metadata !DIExpression()), !dbg !11491
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !11492
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !11493
  ret void, !dbg !11494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11495 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11497, metadata !DIExpression()), !dbg !11498
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !11499
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !11499
  ret %struct.z_heap_bucket* %3, !dbg !11500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11501 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11505, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i8* %1, metadata !11506, metadata !DIExpression()), !dbg !11507
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #25, !dbg !11508
  ret void, !dbg !11509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11510 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11512, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.value(metadata i8* %1, metadata !11513, metadata !DIExpression()), !dbg !11514
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #25, !dbg !11515
  ret void, !dbg !11516
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11517 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11521, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i8* %1, metadata !11522, metadata !DIExpression()), !dbg !11524
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #25, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %3, metadata !11523, metadata !DIExpression()), !dbg !11524
  ret i32 %3, !dbg !11526
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11527 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11529, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata i8* %1, metadata !11530, metadata !DIExpression()), !dbg !11532
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #25, !dbg !11533
  call void @llvm.dbg.value(metadata i32 %3, metadata !11531, metadata !DIExpression()), !dbg !11532
  ret i32 %3, !dbg !11534
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11535 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11539, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.value(metadata i8* %1, metadata !11540, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.value(metadata i8* %2, metadata !11541, metadata !DIExpression()), !dbg !11544
  %4 = icmp eq i8* %1, null, !dbg !11545
  %5 = icmp eq i8* %2, null, !dbg !11545
  %6 = or i1 %4, %5, !dbg !11545
  br i1 %6, label %29, label %7, !dbg !11545

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !11547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11244, metadata !DIExpression()) #23, !dbg !11548
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11550, !srcloc !11259
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !11550
  call void @llvm.dbg.value(metadata i32 %10, metadata !11256, metadata !DIExpression()) #23, !dbg !11552
  call void @llvm.dbg.value(metadata i32 undef, metadata !11257, metadata !DIExpression()) #23, !dbg !11552
  call void @llvm.dbg.value(metadata i32 %10, metadata !11250, metadata !DIExpression()) #23, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %10, metadata !11542, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11543, metadata !DIExpression()), !dbg !11544
  %11 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !11553
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #24, !dbg !11556
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !11543, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !11543, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.value(metadata i8* %1, metadata !11540, metadata !DIExpression()), !dbg !11544
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !11557
  br i1 %13, label %24, label %14, !dbg !11558

14:                                               ; preds = %7, %14
  %15 = phi %struct.k_thread* [ %19, %14 ], [ %12, %7 ]
  %16 = phi i8* [ %18, %14 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !11543, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.value(metadata i8* %16, metadata !11540, metadata !DIExpression()), !dbg !11544
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %15, i8* noundef nonnull %16) #25, !dbg !11559
  %17 = bitcast i8* %16 to i8**, !dbg !11561
  %18 = load i8*, i8** %17, align 4, !dbg !11562
  call void @llvm.dbg.value(metadata i8* %18, metadata !11540, metadata !DIExpression()), !dbg !11544
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #24, !dbg !11563
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !11543, metadata !DIExpression()), !dbg !11544
  %20 = icmp ne i8* %18, null, !dbg !11564
  %21 = icmp ne %struct.k_thread* %19, null, !dbg !11557
  %22 = select i1 %20, i1 %21, i1 false, !dbg !11557
  br i1 %22, label %14, label %23, !dbg !11558, !llvm.loop !11565

23:                                               ; preds = %14
  br i1 %20, label %24, label %27, !dbg !11567

24:                                               ; preds = %7, %23
  %25 = phi i8* [ %18, %23 ], [ %1, %7 ]
  %26 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11568
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %26, i8* noundef nonnull %25, i8* noundef %2) #25, !dbg !11571
  br label %27, !dbg !11572

27:                                               ; preds = %23, %24
  %28 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11573
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %8, [1 x i32] %28) #24, !dbg !11573
  br label %29

29:                                               ; preds = %3, %27
  %30 = phi i32 [ 0, %27 ], [ -22, %3 ], !dbg !11544
  ret i32 %30, !dbg !11574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #8 !dbg !11575 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11579, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i8* %1, metadata !11580, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i8* %2, metadata !11581, metadata !DIExpression()), !dbg !11582
  %4 = icmp ne i8* %1, null, !dbg !11583
  %5 = icmp ne i8* %2, null, !dbg !11583
  %6 = and i1 %4, %5, !dbg !11583
  br i1 %6, label %7, label %15, !dbg !11583

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #25, !dbg !11585
  %9 = icmp eq %struct.z_heap_bucket* %8, null, !dbg !11585
  %10 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !11588
  br i1 %9, label %11, label %12, !dbg !11589

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %10) #25, !dbg !11590
  br label %13, !dbg !11590

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %10) #25, !dbg !11592
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !11589
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %14) #25, !dbg !11589
  br label %15, !dbg !11589

15:                                               ; preds = %13, %3
  ret void, !dbg !11594
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !11595 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11611, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !11612, metadata !DIExpression()), !dbg !11614
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.95(%struct._slist* noundef %1) #25, !dbg !11615
  br i1 %3, label %13, label %4, !dbg !11617

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !11618
  %6 = load i8*, i8** %5, align 4, !dbg !11618
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !11619
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !11619
  %9 = load i8*, i8** %8, align 4, !dbg !11619
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #25, !dbg !11620
  call void @llvm.dbg.value(metadata i32 %10, metadata !11613, metadata !DIExpression()), !dbg !11614
  %11 = icmp eq i32 %10, 0, !dbg !11621
  br i1 %11, label %12, label %13, !dbg !11623

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #25, !dbg !11624
  br label %13, !dbg !11625

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !11614
  ret i32 %14, !dbg !11626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.95(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11627 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11631, metadata !DIExpression()), !dbg !11632
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.96(%struct._slist* noundef %0) #25, !dbg !11633
  %3 = icmp eq %struct._snode* %2, null, !dbg !11633
  ret i1 %3, !dbg !11633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11634 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11638, metadata !DIExpression()), !dbg !11639
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11640
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !11641
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11642
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !11643
  ret void, !dbg !11644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.96(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11645 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11649, metadata !DIExpression()), !dbg !11650
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11651
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11651
  ret %struct._snode* %3, !dbg !11652
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !11653 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11662, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11661, metadata !DIExpression()), !dbg !11669
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !11670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11244, metadata !DIExpression()) #23, !dbg !11671
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11673, !srcloc !11259
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !11673
  call void @llvm.dbg.value(metadata i32 %5, metadata !11256, metadata !DIExpression()) #23, !dbg !11675
  call void @llvm.dbg.value(metadata i32 undef, metadata !11257, metadata !DIExpression()) #23, !dbg !11675
  call void @llvm.dbg.value(metadata i32 %5, metadata !11250, metadata !DIExpression()) #23, !dbg !11671
  call void @llvm.dbg.value(metadata i32 %5, metadata !11663, metadata !DIExpression()), !dbg !11669
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11676
  %7 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %6) #25, !dbg !11676
  br i1 %7, label %11, label %8, !dbg !11677, !prof !11678

8:                                                ; preds = %2
  %9 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* noundef %6) #25, !dbg !11679
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !11665, metadata !DIExpression()), !dbg !11680
  %10 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %9, i1 noundef zeroext true) #25, !dbg !11681
  call void @llvm.dbg.value(metadata i8* %10, metadata !11664, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata i32 %5, metadata !11355, metadata !DIExpression()) #23, !dbg !11682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11360, metadata !DIExpression()) #23, !dbg !11682
  call void @llvm.dbg.value(metadata i32 %5, metadata !11364, metadata !DIExpression()) #23, !dbg !11684
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !11686, !srcloc !11370
  br label %24

11:                                               ; preds = %2
  %12 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %12, metadata !11662, metadata !DIExpression()), !dbg !11669
  %13 = icmp eq i64 %12, 0, !dbg !11687
  br i1 %13, label %14, label %15, !dbg !11689

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %5, metadata !11355, metadata !DIExpression()) #23, !dbg !11690
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11360, metadata !DIExpression()) #23, !dbg !11690
  call void @llvm.dbg.value(metadata i32 %5, metadata !11364, metadata !DIExpression()) #23, !dbg !11693
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !11695, !srcloc !11370
  br label %24, !dbg !11696

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !11697
  %17 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !11698
  %18 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %17, %union.anon* noundef nonnull %16, [1 x i64] %1) #24, !dbg !11698
  call void @llvm.dbg.value(metadata i32 %18, metadata !11668, metadata !DIExpression()), !dbg !11669
  %19 = icmp eq i32 %18, 0, !dbg !11699
  br i1 %19, label %20, label %24, !dbg !11700

20:                                               ; preds = %15
  %21 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11701
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 6, !dbg !11702
  %23 = load i8*, i8** %22, align 4, !dbg !11702
  br label %24, !dbg !11700

24:                                               ; preds = %20, %15, %14, %8
  %25 = phi i8* [ %10, %8 ], [ null, %14 ], [ %23, %20 ], [ null, %15 ], !dbg !11669
  ret i8* %25, !dbg !11703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11704 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11708, metadata !DIExpression()), !dbg !11709
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #25, !dbg !11710
  %3 = icmp eq %struct.z_heap_bucket* %2, null, !dbg !11710
  ret i1 %3, !dbg !11710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #8 !dbg !11711 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11713, metadata !DIExpression()), !dbg !11715
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #25, !dbg !11716
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !11714, metadata !DIExpression()), !dbg !11715
  %3 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #25, !dbg !11716
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %3) #25, !dbg !11716
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #25, !dbg !11717
  %5 = icmp eq %struct.z_heap_bucket* %4, %2, !dbg !11717
  br i1 %5, label %6, label %8, !dbg !11716

6:                                                ; preds = %1
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #25, !dbg !11719
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #25, !dbg !11719
  br label %8, !dbg !11719

8:                                                ; preds = %6, %1
  ret %struct.z_heap_bucket* %2, !dbg !11716
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !11721 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11725, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i8* %1, metadata !11726, metadata !DIExpression()), !dbg !11728
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11729
  %4 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !11730
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct.z_heap_bucket* noundef %4) #25, !dbg !11731
  call void @llvm.dbg.value(metadata i1 %5, metadata !11727, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11728
  ret i1 %5, !dbg !11732
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #14 !dbg !11733 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11737, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !11738, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !11739, metadata !DIExpression()), !dbg !11741
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #25, !dbg !11742
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !11740, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !11739, metadata !DIExpression()), !dbg !11741
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !11744
  br i1 %4, label %15, label %5, !dbg !11742

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !11740, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !11739, metadata !DIExpression()), !dbg !11741
  %6 = icmp eq %struct.z_heap_bucket* %3, %1, !dbg !11746
  br i1 %6, label %9, label %11, !dbg !11749

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !11740, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !11739, metadata !DIExpression()), !dbg !11741
  %8 = icmp eq %struct.z_heap_bucket* %13, %1, !dbg !11746
  br i1 %8, label %9, label %11, !dbg !11749, !llvm.loop !11750

9:                                                ; preds = %7, %5
  %10 = phi %struct.z_heap_bucket* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10, %struct.z_heap_bucket* noundef %1) #25, !dbg !11751
  br label %15, !dbg !11751

11:                                               ; preds = %5, %7
  %12 = phi %struct.z_heap_bucket* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !11740, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !11739, metadata !DIExpression()), !dbg !11741
  %13 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %12) #25, !dbg !11744
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !11740, metadata !DIExpression()), !dbg !11741
  %14 = icmp eq %struct.z_heap_bucket* %13, null, !dbg !11744
  br i1 %14, label %15, label %7, !dbg !11742, !llvm.loop !11750

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !11754 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11756, metadata !DIExpression()), !dbg !11759
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !11757, metadata !DIExpression()), !dbg !11759
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !11758, metadata !DIExpression()), !dbg !11759
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !11760
  %5 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #25, !dbg !11762
  br i1 %4, label %6, label %11, !dbg !11763

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %5) #25, !dbg !11764
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #25, !dbg !11766
  %8 = icmp eq %struct.z_heap_bucket* %7, %2, !dbg !11766
  br i1 %8, label %9, label %15, !dbg !11764

9:                                                ; preds = %6
  %10 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #25, !dbg !11768
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10) #25, !dbg !11768
  br label %15, !dbg !11768

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %5) #25, !dbg !11770
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #25, !dbg !11772
  %13 = icmp eq %struct.z_heap_bucket* %12, %2, !dbg !11772
  br i1 %13, label %14, label %15, !dbg !11770

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %1) #25, !dbg !11774
  br label %15, !dbg !11774

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef null) #25, !dbg !11763
  ret void, !dbg !11763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef readonly %0) unnamed_addr #5 !dbg !11776 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !11778, metadata !DIExpression()), !dbg !11779
  %2 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !11780
  br i1 %2, label %5, label %3, !dbg !11780

3:                                                ; preds = %1
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* noundef nonnull %0) #25, !dbg !11780
  br label %5, !dbg !11780

5:                                                ; preds = %1, %3
  %6 = phi %struct.z_heap_bucket* [ %4, %3 ], [ null, %1 ], !dbg !11780
  ret %struct.z_heap_bucket* %6, !dbg !11780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11781 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !11783, metadata !DIExpression()), !dbg !11784
  %2 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %0) #25, !dbg !11785
  ret %struct.z_heap_bucket* %2, !dbg !11785
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11786 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11788, metadata !DIExpression()), !dbg !11791
  call void @llvm.dbg.value(metadata i8* %1, metadata !11789, metadata !DIExpression()), !dbg !11791
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11792
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %3) #25, !dbg !11792
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !11790, metadata !DIExpression()), !dbg !11791
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !11794
  br i1 %5, label %14, label %6, !dbg !11792

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct.z_heap_bucket*
  br label %8, !dbg !11792

8:                                                ; preds = %6, %11
  %9 = phi %struct.z_heap_bucket* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !11790, metadata !DIExpression()), !dbg !11791
  %10 = icmp eq %struct.z_heap_bucket* %9, %7, !dbg !11796
  br i1 %10, label %15, label %11, !dbg !11799

11:                                               ; preds = %8
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %9) #25, !dbg !11794
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !11790, metadata !DIExpression()), !dbg !11791
  %13 = icmp eq %struct.z_heap_bucket* %12, null, !dbg !11794
  br i1 %13, label %14, label %8, !dbg !11792, !llvm.loop !11800

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #25, !dbg !11802
  br label %15, !dbg !11803

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !11804
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11805 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11809, metadata !DIExpression()), !dbg !11811
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11812
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %2) #25, !dbg !11813
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #25, !dbg !11814
  call void @llvm.dbg.value(metadata i8* %4, metadata !11810, metadata !DIExpression()), !dbg !11811
  ret i8* %4, !dbg !11815
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11816 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11818, metadata !DIExpression()), !dbg !11820
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11821
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #25, !dbg !11822
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #25, !dbg !11823
  call void @llvm.dbg.value(metadata i8* %4, metadata !11819, metadata !DIExpression()), !dbg !11820
  ret i8* %4, !dbg !11824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !11825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11829, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11830, metadata !DIExpression()), !dbg !11833
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11834
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !11834
  %5 = load i8, i8* %4, align 2, !dbg !11834
  call void @llvm.dbg.value(metadata i8 %5, metadata !11831, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11833
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !11835
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !11835
  %8 = load i8, i8* %7, align 2, !dbg !11835
  call void @llvm.dbg.value(metadata i8 %8, metadata !11832, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11833
  %9 = icmp eq i8 %8, %5, !dbg !11836
  %10 = sext i8 %5 to i32, !dbg !11838
  %11 = sext i8 %8 to i32, !dbg !11838
  %12 = sub nsw i32 %11, %10, !dbg !11838
  %13 = select i1 %9, i32 0, i32 %12, !dbg !11838
  ret i32 %13, !dbg !11839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !11840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11844, metadata !DIExpression()), !dbg !11845
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !11846
  %3 = icmp eq i32 %2, 0, !dbg !11848
  br i1 %3, label %8, label %4, !dbg !11849

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !11850
  %6 = add i32 %5, %2, !dbg !11852
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11853
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !11854
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !11855
  br label %8, !dbg !11856

8:                                                ; preds = %4, %1
  ret void, !dbg !11857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !11858 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11862, metadata !DIExpression()), !dbg !11864
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !11865
  call void @llvm.dbg.value(metadata i32 %1, metadata !11863, metadata !DIExpression()), !dbg !11864
  ret i32 %1, !dbg !11866
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11871, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata i32 %1, metadata !11872, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata i32 0, metadata !11873, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !11889
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11891, !srcloc !11897
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11891
  call void @llvm.dbg.value(metadata i32 %4, metadata !11894, metadata !DIExpression()) #23, !dbg !11898
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %4, metadata !11888, metadata !DIExpression()) #23, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %4, metadata !11879, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 undef, metadata !11873, metadata !DIExpression()), !dbg !11881
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11899
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !11902
  %6 = icmp sgt i32 %0, 0, !dbg !11903
  %7 = icmp sgt i32 %5, 2, !dbg !11905
  %8 = select i1 %7, i32 %5, i32 2, !dbg !11905
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !11905
  store i32 %9, i32* @slice_ticks, align 4, !dbg !11906
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !11907
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %4, metadata !11909, metadata !DIExpression()) #23, !dbg !11915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %4, metadata !11917, metadata !DIExpression()) #23, !dbg !11920
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !11922, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !11873, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 undef, metadata !11873, metadata !DIExpression()), !dbg !11881
  ret void, !dbg !11924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !11925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11929, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i32 %0, metadata !11931, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11946
  call void @llvm.dbg.value(metadata i32 1000, metadata !11934, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.value(metadata i32 10000, metadata !11935, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.value(metadata i8 1, metadata !11936, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.value(metadata i1 true, metadata !11937, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11946
  call void @llvm.dbg.value(metadata i1 true, metadata !11938, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11946
  call void @llvm.dbg.value(metadata i8 0, metadata !11939, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.value(metadata i1 true, metadata !11940, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11946
  call void @llvm.dbg.value(metadata i1 false, metadata !11941, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11946
  call void @llvm.dbg.value(metadata i64 0, metadata !11942, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.value(metadata i64 0, metadata !11942, metadata !DIExpression()), !dbg !11946
  %2 = mul i32 %0, 10, !dbg !11948
  ret i32 %2, !dbg !11954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !11955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11957, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !11960
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11962, !srcloc !11897
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %3, metadata !11894, metadata !DIExpression()) #23, !dbg !11964
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !11964
  call void @llvm.dbg.value(metadata i32 %3, metadata !11888, metadata !DIExpression()) #23, !dbg !11960
  call void @llvm.dbg.value(metadata i32 %3, metadata !11958, metadata !DIExpression()), !dbg !11959
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !11965
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11967
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !11968
  br i1 %6, label %7, label %8, !dbg !11969

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !11972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !11972
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !11974
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11976, !srcloc !11923
  br label %24, !dbg !11977

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !11978
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !11979
  %10 = icmp eq i32 %9, 0, !dbg !11979
  br i1 %10, label %21, label %11, !dbg !11981

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !11982
  br i1 %12, label %13, label %21, !dbg !11983

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11984
  %15 = icmp sgt i32 %14, %0, !dbg !11987
  br i1 %15, label %19, label %16, !dbg !11988

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11989
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !11989
  call void @llvm.dbg.value(metadata i32 %18, metadata !11958, metadata !DIExpression()), !dbg !11959
  br label %22, !dbg !11991

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !11992
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11992
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11994
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !11959
  call void @llvm.dbg.value(metadata i32 %23, metadata !11958, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata i32 %23, metadata !11909, metadata !DIExpression()) #23, !dbg !11996
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !11996
  call void @llvm.dbg.value(metadata i32 %23, metadata !11917, metadata !DIExpression()) #23, !dbg !11998
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !12000, !srcloc !11923
  br label %24, !dbg !12001

24:                                               ; preds = %22, %7
  ret void, !dbg !12001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !12002 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12006, metadata !DIExpression()), !dbg !12008
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !12009
  %3 = icmp eq i32 %2, 0, !dbg !12009
  br i1 %3, label %16, label %4, !dbg !12010

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12011
  br i1 %5, label %16, label %6, !dbg !12012

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12013
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12013
  %9 = load i8, i8* %8, align 2, !dbg !12013
  %10 = sext i8 %9 to i32, !dbg !12014
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12015
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !12016
  br i1 %12, label %16, label %13, !dbg !12017

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !12018
  %15 = xor i1 %14, true, !dbg !12019
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12008
  call void @llvm.dbg.value(metadata i1 %17, metadata !12007, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12008
  ret i1 %17, !dbg !12020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12021 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12025, metadata !DIExpression()), !dbg !12027
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12028
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12026, metadata !DIExpression()), !dbg !12027
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !12029
  br i1 %3, label %5, label %4, !dbg !12031

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !12032
  br label %5, !dbg !12034

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12025, metadata !DIExpression()), !dbg !12027
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12035
  ret i32 %6, !dbg !12036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12037 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12039, metadata !DIExpression()), !dbg !12041
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12042
  %3 = load i8, i8* %2, align 1, !dbg !12042
  call void @llvm.dbg.value(metadata i8 %3, metadata !12040, metadata !DIExpression()), !dbg !12041
  %4 = and i8 %3, 31, !dbg !12043
  %5 = icmp ne i8 %4, 0, !dbg !12044
  ret i1 %5, !dbg !12045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12046 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12048, metadata !DIExpression()), !dbg !12049
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12050
  br i1 %2, label %3, label %7, !dbg !12052

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12053, metadata !DIExpression()) #23, !dbg !12056
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12059
  %5 = load i8, i8* %4, align 1, !dbg !12060
  %6 = and i8 %5, 127, !dbg !12060
  store i8 %6, i8* %4, align 1, !dbg !12060
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12061, metadata !DIExpression()) #23, !dbg !12064
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12068
  br label %7, !dbg !12069

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12070, metadata !DIExpression()) #23, !dbg !12073
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12075
  %9 = load i8, i8* %8, align 1, !dbg !12076
  %10 = or i8 %9, -128, !dbg !12076
  store i8 %10, i8* %8, align 1, !dbg !12076
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12077, metadata !DIExpression()) #23, !dbg !12080
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12084, metadata !DIExpression()) #23, !dbg !12092
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12090, metadata !DIExpression()) #23, !dbg !12092
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12094
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12091, metadata !DIExpression()) #23, !dbg !12092
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12096
  br i1 %12, label %23, label %13, !dbg !12094

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12091, metadata !DIExpression()) #23, !dbg !12092
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12098
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12091, metadata !DIExpression()) #23, !dbg !12092
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !12099
  %17 = icmp sgt i32 %16, 0, !dbg !12102
  br i1 %17, label %18, label %20, !dbg !12103

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12104
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !12106
  br label %25, !dbg !12107

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !12096
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12091, metadata !DIExpression()) #23, !dbg !12092
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12096
  br i1 %22, label %23, label %13, !dbg !12094, !llvm.loop !12108

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12110
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !12111
  br label %25, !dbg !12112

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12113
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12114
  %28 = zext i1 %27 to i32, !dbg !12114
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !12115
  ret void, !dbg !12116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12119, metadata !DIExpression()), !dbg !12120
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !12121
  ret i1 %2, !dbg !12122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !12123 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12125, metadata !DIExpression()), !dbg !12127
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12126, metadata !DIExpression()), !dbg !12127
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12128
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !12129
  ret void, !dbg !12130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !12131 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12135, metadata !DIExpression()), !dbg !12136
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !12137
  br i1 %2, label %6, label %3, !dbg !12137

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12138
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12138
  br label %6, !dbg !12137

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12137
  ret %struct._dnode* %7, !dbg !12139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12140 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12144, metadata !DIExpression()), !dbg !12148
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12145, metadata !DIExpression()), !dbg !12148
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12149
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12149
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12146, metadata !DIExpression()), !dbg !12148
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12150
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12151
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12152
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12153
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12154
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12155
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12156
  ret void, !dbg !12157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12158 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12162, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12163, metadata !DIExpression()), !dbg !12164
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12165
  br i1 %3, label %6, label %4, !dbg !12166

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !12167
  br label %6, !dbg !12166

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12166
  ret %struct._dnode* %7, !dbg !12168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12169 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12173, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12174, metadata !DIExpression()), !dbg !12176
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12177
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12177
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12175, metadata !DIExpression()), !dbg !12176
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12178
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12179
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12180
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12181
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12182
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12183
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12184
  ret void, !dbg !12185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12188, metadata !DIExpression()), !dbg !12190
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12191
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12198, metadata !DIExpression()) #23, !dbg !12200
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12201
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12202
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12202
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12189, metadata !DIExpression()), !dbg !12190
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12203, metadata !DIExpression()) #23, !dbg !12209
  call void @llvm.dbg.value(metadata i32 %0, metadata !12208, metadata !DIExpression()) #23, !dbg !12209
  %6 = icmp eq i32 %0, 0, !dbg !12212
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12214
  br i1 %6, label %8, label %15, !dbg !12215

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !12216
  br i1 %9, label %15, label %10, !dbg !12218

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !12219
  br i1 %11, label %15, label %12, !dbg !12221

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !12222
  %14 = icmp eq i32 %13, 0, !dbg !12222
  br i1 %14, label %18, label %15, !dbg !12224

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !12225
  br i1 %16, label %18, label %17, !dbg !12228

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12229
  br label %18, !dbg !12231

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !12214
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12214
  ret void, !dbg !12232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !12233 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12237, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12238, metadata !DIExpression()), !dbg !12240
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !12241
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12239, metadata !DIExpression()), !dbg !12240
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12238, metadata !DIExpression()), !dbg !12240
  ret %struct.k_thread* %3, !dbg !12242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12245, metadata !DIExpression()), !dbg !12246
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12247
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12248
  %4 = xor i1 %3, true, !dbg !12249
  ret i1 %4, !dbg !12250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12251 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12253, metadata !DIExpression()), !dbg !12254
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12255
  %3 = load i16, i16* %2, align 2, !dbg !12255
  %4 = icmp ult i16 %3, 128, !dbg !12256
  %5 = zext i1 %4 to i32, !dbg !12256
  ret i32 %5, !dbg !12257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12258 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12264, metadata !DIExpression()), !dbg !12265
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12266
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !12267
  %4 = xor i1 %3, true, !dbg !12268
  ret i1 %4, !dbg !12269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12270 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12276, metadata !DIExpression()), !dbg !12277
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12278
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12278
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12279
  ret i1 %4, !dbg !12280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12281 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12283, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12284, metadata !DIExpression()), !dbg !12285
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12286
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12286
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12287
  br i1 %5, label %9, label %6, !dbg !12288

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12289
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12289
  br label %9, !dbg !12288

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12288
  ret %struct._dnode* %10, !dbg !12290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !12291 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12295, metadata !DIExpression()), !dbg !12296
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12297
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12297
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12298
  ret i1 %4, !dbg !12299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !12300 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12304, metadata !DIExpression()), !dbg !12307
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12308
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12308
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12305, metadata !DIExpression()), !dbg !12307
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12309
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12309
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12306, metadata !DIExpression()), !dbg !12307
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12310
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12311
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12312
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12313
  tail call fastcc void @sys_dnode_init.99(%struct._dnode* noundef %0) #25, !dbg !12314
  ret void, !dbg !12315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.99(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12316 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12318, metadata !DIExpression()), !dbg !12319
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12320
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12321
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12322
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12323
  ret void, !dbg !12324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12325 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12329, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 128, metadata !12330, metadata !DIExpression()), !dbg !12331
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12332
  %3 = load i8, i8* %2, align 1, !dbg !12332
  %4 = icmp slt i8 %3, 0, !dbg !12333
  ret i1 %4, !dbg !12334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !12335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12339, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i32 %1, metadata !12340, metadata !DIExpression()), !dbg !12341
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !12342
  ret i1 %3, !dbg !12343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !12344 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12346, metadata !DIExpression()), !dbg !12347
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12348
  ret i1 %2, !dbg !12349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !12350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12352, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i32 %1, metadata !12353, metadata !DIExpression()), !dbg !12354
  %3 = icmp slt i32 %0, %1, !dbg !12355
  ret i1 %3, !dbg !12356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12359, metadata !DIExpression()), !dbg !12363
  call void @llvm.dbg.value(metadata i32 0, metadata !12360, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12365
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12367, !srcloc !11897
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12367
  call void @llvm.dbg.value(metadata i32 %3, metadata !11894, metadata !DIExpression()) #23, !dbg !12369
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12369
  call void @llvm.dbg.value(metadata i32 %3, metadata !11888, metadata !DIExpression()) #23, !dbg !12365
  call void @llvm.dbg.value(metadata i32 %3, metadata !12362, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i32 undef, metadata !12360, metadata !DIExpression()), !dbg !12364
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12370
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !12375
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12375
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !12377
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12379, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !12360, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i32 undef, metadata !12360, metadata !DIExpression()), !dbg !12364
  ret void, !dbg !12380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12383, metadata !DIExpression()), !dbg !12384
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12385
  br i1 %2, label %24, label %3, !dbg !12387

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12388
  br i1 %4, label %5, label %24, !dbg !12389

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12070, metadata !DIExpression()) #23, !dbg !12390
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12393
  %7 = load i8, i8* %6, align 1, !dbg !12394
  %8 = or i8 %7, -128, !dbg !12394
  store i8 %8, i8* %6, align 1, !dbg !12394
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12077, metadata !DIExpression()) #23, !dbg !12395
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12084, metadata !DIExpression()) #23, !dbg !12397
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12090, metadata !DIExpression()) #23, !dbg !12397
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12399
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12091, metadata !DIExpression()) #23, !dbg !12397
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12400
  br i1 %10, label %21, label %11, !dbg !12399

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12091, metadata !DIExpression()) #23, !dbg !12397
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12401
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12091, metadata !DIExpression()) #23, !dbg !12397
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !12402
  %15 = icmp sgt i32 %14, 0, !dbg !12403
  br i1 %15, label %16, label %18, !dbg !12404

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12405
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !12406
  br label %23, !dbg !12407

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !12400
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12091, metadata !DIExpression()) #23, !dbg !12397
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12400
  br i1 %20, label %21, label %11, !dbg !12399, !llvm.loop !12408

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12410
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !12411
  br label %23, !dbg !12412

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12413
  br label %24, !dbg !12414

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12418, metadata !DIExpression()), !dbg !12419
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12420
  br i1 %2, label %6, label %3, !dbg !12421

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !12422
  %5 = xor i1 %4, true, !dbg !12421
  br label %6, !dbg !12421

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12423
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12426, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 0, metadata !12427, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12432
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12434, !srcloc !11897
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12434
  call void @llvm.dbg.value(metadata i32 %3, metadata !11894, metadata !DIExpression()) #23, !dbg !12436
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12436
  call void @llvm.dbg.value(metadata i32 %3, metadata !11888, metadata !DIExpression()) #23, !dbg !12432
  call void @llvm.dbg.value(metadata i32 %3, metadata !12429, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 undef, metadata !12427, metadata !DIExpression()), !dbg !12431
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !12437
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !12440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12440
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !12442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12444, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !12427, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 undef, metadata !12427, metadata !DIExpression()), !dbg !12431
  ret void, !dbg !12445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12446 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12448, metadata !DIExpression()), !dbg !12450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12451
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12453, !srcloc !11897
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12453
  call void @llvm.dbg.value(metadata i32 %3, metadata !11894, metadata !DIExpression()) #23, !dbg !12455
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12455
  call void @llvm.dbg.value(metadata i32 %3, metadata !11888, metadata !DIExpression()) #23, !dbg !12451
  call void @llvm.dbg.value(metadata i32 %3, metadata !12449, metadata !DIExpression()), !dbg !12450
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !12456
  br i1 %4, label %5, label %6, !dbg !12458

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !12459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12459
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !12462
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12464, !srcloc !11923
  br label %8, !dbg !12465

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.104(%struct.k_thread* noundef %0) #25, !dbg !12466
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12467
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12468
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12468
  br label %8, !dbg !12469

8:                                                ; preds = %6, %5
  ret void, !dbg !12469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12472, metadata !DIExpression()), !dbg !12473
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12474
  %3 = load i8, i8* %2, align 1, !dbg !12474
  %4 = and i8 %3, 4, !dbg !12475
  %5 = icmp eq i8 %4, 0, !dbg !12476
  ret i1 %5, !dbg !12477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.104(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12478 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12480, metadata !DIExpression()), !dbg !12481
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12482
  %3 = load i8, i8* %2, align 1, !dbg !12483
  %4 = and i8 %3, -5, !dbg !12483
  store i8 %4, i8* %2, align 1, !dbg !12483
  ret void, !dbg !12484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12485 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12488, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12487, metadata !DIExpression()), !dbg !12489
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !12490
  br i1 %4, label %5, label %9, !dbg !12492

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !12493
  br i1 %6, label %7, label %9, !dbg !12494

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12495, metadata !DIExpression()) #23, !dbg !12501
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12500, metadata !DIExpression()) #23, !dbg !12501
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !12504
  br label %10, !dbg !12505

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !12506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12506
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !12509
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12511, !srcloc !11923
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12517, metadata !DIExpression()), !dbg !12518
  call void @llvm.dbg.value(metadata i32 %0, metadata !12519, metadata !DIExpression()), !dbg !12524
  %2 = icmp eq i32 %0, 0, !dbg !12526
  br i1 %2, label %3, label %6, !dbg !12527

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12528, !srcloc !12535
  call void @llvm.dbg.value(metadata i32 %4, metadata !12531, metadata !DIExpression()) #23, !dbg !12536
  %5 = icmp eq i32 %4, 0, !dbg !12537
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12518
  ret i1 %7, !dbg !12538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !12539 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12542
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12541, metadata !DIExpression()), !dbg !12543
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12544
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12545
  ret i1 %3, !dbg !12546
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12547 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12549, metadata !DIExpression()), !dbg !12551
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !12552
  call void @llvm.dbg.value(metadata i32 %2, metadata !12550, metadata !DIExpression()), !dbg !12551
  ret i32 %2, !dbg !12553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12554 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12556, metadata !DIExpression()), !dbg !12560
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12561
  call void @llvm.dbg.value(metadata i32 0, metadata !12557, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12563
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12565, !srcloc !11897
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12565
  call void @llvm.dbg.value(metadata i32 %4, metadata !11894, metadata !DIExpression()) #23, !dbg !12567
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12567
  call void @llvm.dbg.value(metadata i32 %4, metadata !11888, metadata !DIExpression()) #23, !dbg !12563
  call void @llvm.dbg.value(metadata i32 %4, metadata !12559, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i32 undef, metadata !12557, metadata !DIExpression()), !dbg !12562
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12568
  br i1 %5, label %6, label %10, !dbg !12572

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12053, metadata !DIExpression()) #23, !dbg !12573
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12576
  %8 = load i8, i8* %7, align 1, !dbg !12577
  %9 = and i8 %8, 127, !dbg !12577
  store i8 %9, i8* %7, align 1, !dbg !12577
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12061, metadata !DIExpression()) #23, !dbg !12578
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12580
  br label %10, !dbg !12581

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !12582
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12583
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12584
  %13 = zext i1 %12 to i32, !dbg !12584
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !12585
  call void @llvm.dbg.value(metadata i32 %4, metadata !11909, metadata !DIExpression()) #23, !dbg !12586
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12586
  call void @llvm.dbg.value(metadata i32 %4, metadata !11917, metadata !DIExpression()) #23, !dbg !12588
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12590, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !12557, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i32 undef, metadata !12557, metadata !DIExpression()), !dbg !12562
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12591
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12593
  br i1 %15, label %16, label %17, !dbg !12594

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12595
  br label %17, !dbg !12597

17:                                               ; preds = %16, %10
  ret void, !dbg !12598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12599 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12601, metadata !DIExpression()), !dbg !12602
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12603
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12604
  ret i32 %3, !dbg !12605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12606 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12608, metadata !DIExpression()), !dbg !12609
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12610
  %3 = load i8, i8* %2, align 1, !dbg !12611
  %4 = or i8 %3, 16, !dbg !12611
  store i8 %4, i8* %2, align 1, !dbg !12611
  ret void, !dbg !12612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12613 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12614, !srcloc !11897
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %2, metadata !11894, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12616
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !12617
  ret void, !dbg !12618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12621, metadata !DIExpression()), !dbg !12622
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !12623
  br i1 %2, label %3, label %5, !dbg !12625

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12626
  br label %6, !dbg !12628

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !11917, metadata !DIExpression()) #23, !dbg !12629
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12632, !srcloc !11923
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12633
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12634 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12636, metadata !DIExpression()), !dbg !12638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12639
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12641, !srcloc !11897
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12641
  call void @llvm.dbg.value(metadata i32 %3, metadata !11894, metadata !DIExpression()) #23, !dbg !12643
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12643
  call void @llvm.dbg.value(metadata i32 %3, metadata !11888, metadata !DIExpression()) #23, !dbg !12639
  call void @llvm.dbg.value(metadata i32 %3, metadata !12637, metadata !DIExpression()), !dbg !12638
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !12644
  br i1 %4, label %6, label %5, !dbg !12646

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !12647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12647
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !12650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12652, !srcloc !11923
  br label %8, !dbg !12653

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !12654
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12655
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12656
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12656
  br label %8, !dbg !12657

8:                                                ; preds = %6, %5
  ret void, !dbg !12657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12658 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12660, metadata !DIExpression()), !dbg !12661
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12662
  %3 = load i8, i8* %2, align 1, !dbg !12662
  %4 = and i8 %3, 16, !dbg !12663
  %5 = icmp ne i8 %4, 0, !dbg !12664
  ret i1 %5, !dbg !12665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12666 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12668, metadata !DIExpression()), !dbg !12669
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12670
  %3 = load i8, i8* %2, align 1, !dbg !12671
  %4 = and i8 %3, -17, !dbg !12671
  store i8 %4, i8* %2, align 1, !dbg !12671
  ret void, !dbg !12672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12673 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12683, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12681, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12682, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata i32 0, metadata !12684, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12689
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12691, !srcloc !11897
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12691
  call void @llvm.dbg.value(metadata i32 %5, metadata !11894, metadata !DIExpression()) #23, !dbg !12693
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12693
  call void @llvm.dbg.value(metadata i32 %5, metadata !11888, metadata !DIExpression()) #23, !dbg !12689
  call void @llvm.dbg.value(metadata i32 %5, metadata !12686, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.value(metadata i32 undef, metadata !12684, metadata !DIExpression()), !dbg !12688
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12694
  call void @llvm.dbg.value(metadata i32 %5, metadata !11909, metadata !DIExpression()) #23, !dbg !12697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12697
  call void @llvm.dbg.value(metadata i32 %5, metadata !11917, metadata !DIExpression()) #23, !dbg !12699
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12701, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !12684, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.value(metadata i32 undef, metadata !12684, metadata !DIExpression()), !dbg !12688
  ret void, !dbg !12702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12703 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12707, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12705, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12706, metadata !DIExpression()), !dbg !12708
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !12709
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !12710
  ret void, !dbg !12711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12712 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12716, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12717, metadata !DIExpression()), !dbg !12718
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !12719
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !12720
  %3 = icmp eq %union.anon* %1, null, !dbg !12721
  br i1 %3, label %21, label %4, !dbg !12723

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12724
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !12726
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12727
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12084, metadata !DIExpression()) #23, !dbg !12728
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12090, metadata !DIExpression()) #23, !dbg !12728
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !12730
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12091, metadata !DIExpression()) #23, !dbg !12728
  %8 = icmp eq %struct._dnode* %7, null, !dbg !12731
  br i1 %8, label %19, label %9, !dbg !12730

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12091, metadata !DIExpression()) #23, !dbg !12728
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !12732
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12091, metadata !DIExpression()) #23, !dbg !12728
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !12733
  %13 = icmp sgt i32 %12, 0, !dbg !12734
  br i1 %13, label %14, label %16, !dbg !12735

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12736
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !12737
  br label %21, !dbg !12738

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !12731
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12091, metadata !DIExpression()) #23, !dbg !12728
  %18 = icmp eq %struct._dnode* %17, null, !dbg !12731
  br i1 %18, label %19, label %9, !dbg !12730, !llvm.loop !12739

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12741
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !12742
  br label %21, !dbg !12743

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !12744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12745 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12750, metadata !DIExpression()), !dbg !12751
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12749, metadata !DIExpression()), !dbg !12751
  %4 = icmp eq i64 %3, -1, !dbg !12752
  br i1 %4, label %6, label %5, !dbg !12754

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.107(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !12755
  br label %6, !dbg !12757

6:                                                ; preds = %5, %2
  ret void, !dbg !12758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.107(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12759 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12762, metadata !DIExpression()), !dbg !12763
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12761, metadata !DIExpression()), !dbg !12763
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12764
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !12765
  ret void, !dbg !12766
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12767 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12769, metadata !DIExpression()), !dbg !12777
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12778
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12778
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12770, metadata !DIExpression()), !dbg !12777
  call void @llvm.dbg.value(metadata i32 0, metadata !12771, metadata !DIExpression()), !dbg !12779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12780
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12782, !srcloc !11897
  call void @llvm.dbg.value(metadata i32 undef, metadata !11894, metadata !DIExpression()) #23, !dbg !12784
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12784
  call void @llvm.dbg.value(metadata i32 undef, metadata !11888, metadata !DIExpression()) #23, !dbg !12780
  call void @llvm.dbg.value(metadata i32 undef, metadata !12773, metadata !DIExpression()), !dbg !12779
  call void @llvm.dbg.value(metadata i32 undef, metadata !12771, metadata !DIExpression()), !dbg !12779
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12785
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !12786
  %7 = load i8, i8* %6, align 1, !dbg !12786
  %8 = and i8 %7, 40, !dbg !12787
  %9 = icmp eq i8 %8, 0, !dbg !12787
  call void @llvm.dbg.value(metadata i1 %9, metadata !12774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12788
  br i1 %9, label %10, label %17, !dbg !12789

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12790
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !12790
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !12790
  %14 = icmp eq %union.anon* %13, null, !dbg !12794
  br i1 %14, label %16, label %15, !dbg !12795

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !12796
  br label %16, !dbg !12798

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.104(%struct.k_thread* noundef nonnull %3) #25, !dbg !12799
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !12800
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !12801
  br label %17, !dbg !12802

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !12782
  call void @llvm.dbg.value(metadata i32 %18, metadata !11894, metadata !DIExpression()) #23, !dbg !12784
  call void @llvm.dbg.value(metadata i32 %18, metadata !11888, metadata !DIExpression()) #23, !dbg !12780
  call void @llvm.dbg.value(metadata i32 %18, metadata !12773, metadata !DIExpression()), !dbg !12779
  call void @llvm.dbg.value(metadata i32 undef, metadata !11909, metadata !DIExpression()) #23, !dbg !12803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12803
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()) #23, !dbg !12805
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12807, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !12771, metadata !DIExpression()), !dbg !12779
  call void @llvm.dbg.value(metadata i32 undef, metadata !12771, metadata !DIExpression()), !dbg !12779
  ret void, !dbg !12808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12809 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12811, metadata !DIExpression()), !dbg !12812
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12813
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !12814
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12815
  store %union.anon* null, %union.anon** %2, align 8, !dbg !12816
  ret void, !dbg !12817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12818 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12820, metadata !DIExpression()), !dbg !12821
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12822
  %3 = load i8, i8* %2, align 1, !dbg !12823
  %4 = and i8 %3, -3, !dbg !12823
  store i8 %4, i8* %2, align 1, !dbg !12823
  ret void, !dbg !12824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12827, metadata !DIExpression()), !dbg !12828
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12829
  br i1 %2, label %3, label %7, !dbg !12831

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12053, metadata !DIExpression()) #23, !dbg !12832
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12835
  %5 = load i8, i8* %4, align 1, !dbg !12836
  %6 = and i8 %5, 127, !dbg !12836
  store i8 %6, i8* %4, align 1, !dbg !12836
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12061, metadata !DIExpression()) #23, !dbg !12837
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12839
  br label %7, !dbg !12840

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12841
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !12842
  %10 = zext i1 %9 to i32, !dbg !12842
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !12843
  ret void, !dbg !12844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12845 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12847, metadata !DIExpression()), !dbg !12848
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12849
  %3 = load i8, i8* %2, align 1, !dbg !12850
  %4 = or i8 %3, 2, !dbg !12850
  store i8 %4, i8* %2, align 1, !dbg !12850
  ret void, !dbg !12851
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #20 !dbg !12852 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12854, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.value(metadata i32 0, metadata !12855, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12860
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12862, !srcloc !11897
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12862
  call void @llvm.dbg.value(metadata i32 %3, metadata !11894, metadata !DIExpression()) #23, !dbg !12864
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12864
  call void @llvm.dbg.value(metadata i32 %3, metadata !11888, metadata !DIExpression()) #23, !dbg !12860
  call void @llvm.dbg.value(metadata i32 %3, metadata !12857, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata i32 undef, metadata !12855, metadata !DIExpression()), !dbg !12859
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !12865
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !12868
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !12870
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12872, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !12855, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata i32 undef, metadata !12855, metadata !DIExpression()), !dbg !12859
  ret void, !dbg !12873
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12874 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12880, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.value(metadata i32 %0, metadata !12878, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12879, metadata !DIExpression()), !dbg !12885
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12886
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12887
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12888
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12889
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12890
  call void @llvm.dbg.value(metadata i32 %6, metadata !12881, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.value(metadata i32 0, metadata !12882, metadata !DIExpression()), !dbg !12891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12892
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12894, !srcloc !11897
  call void @llvm.dbg.value(metadata i32 undef, metadata !11894, metadata !DIExpression()) #23, !dbg !12896
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12896
  call void @llvm.dbg.value(metadata i32 undef, metadata !11888, metadata !DIExpression()) #23, !dbg !12892
  call void @llvm.dbg.value(metadata i32 undef, metadata !12884, metadata !DIExpression()), !dbg !12891
  call void @llvm.dbg.value(metadata i32 undef, metadata !12882, metadata !DIExpression()), !dbg !12891
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12897
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12901
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !12902
  br i1 %10, label %11, label %12, !dbg !12903

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12904
  br label %12, !dbg !12906

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !12894
  call void @llvm.dbg.value(metadata i32 %13, metadata !11894, metadata !DIExpression()) #23, !dbg !12896
  call void @llvm.dbg.value(metadata i32 %13, metadata !11888, metadata !DIExpression()) #23, !dbg !12892
  call void @llvm.dbg.value(metadata i32 %13, metadata !12884, metadata !DIExpression()), !dbg !12891
  call void @llvm.dbg.value(metadata i32 undef, metadata !11909, metadata !DIExpression()) #23, !dbg !12907
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12907
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()) #23, !dbg !12909
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !12911, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !12882, metadata !DIExpression()), !dbg !12891
  call void @llvm.dbg.value(metadata i32 undef, metadata !12882, metadata !DIExpression()), !dbg !12891
  ret i32 %6, !dbg !12912
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !12913 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12918, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata i64 undef, metadata !12920, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12917, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !12919, metadata !DIExpression()), !dbg !12921
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12922
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12924
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12926, !srcloc !11897
  call void @llvm.dbg.value(metadata i32 undef, metadata !11894, metadata !DIExpression()) #23, !dbg !12928
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12928
  call void @llvm.dbg.value(metadata i32 undef, metadata !11888, metadata !DIExpression()) #23, !dbg !12924
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12929
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !12930
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12495, metadata !DIExpression()) #23, !dbg !12931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12500, metadata !DIExpression()) #23, !dbg !12931
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !12933
  ret i32 %9, !dbg !12934
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12935 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12939, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12940, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 0, metadata !12941, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12946
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12948, !srcloc !11897
  call void @llvm.dbg.value(metadata i32 undef, metadata !11894, metadata !DIExpression()) #23, !dbg !12950
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12950
  call void @llvm.dbg.value(metadata i32 undef, metadata !11888, metadata !DIExpression()) #23, !dbg !12946
  call void @llvm.dbg.value(metadata i32 undef, metadata !12943, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12940, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 undef, metadata !12941, metadata !DIExpression()), !dbg !12945
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !12951
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12940, metadata !DIExpression()), !dbg !12944
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12954
  br i1 %5, label %7, label %6, !dbg !12956

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12957
  br label %7, !dbg !12959

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !12948
  call void @llvm.dbg.value(metadata i32 %8, metadata !11894, metadata !DIExpression()) #23, !dbg !12950
  call void @llvm.dbg.value(metadata i32 %8, metadata !11888, metadata !DIExpression()) #23, !dbg !12946
  call void @llvm.dbg.value(metadata i32 %8, metadata !12943, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.value(metadata i32 undef, metadata !11909, metadata !DIExpression()) #23, !dbg !12960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12960
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()) #23, !dbg !12962
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !12964, !srcloc !11923
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12940, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 undef, metadata !12941, metadata !DIExpression()), !dbg !12945
  ret %struct.k_thread* %4, !dbg !12965
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12966 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12968, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12969, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i32 0, metadata !12970, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !12975
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12977, !srcloc !11897
  call void @llvm.dbg.value(metadata i32 undef, metadata !11894, metadata !DIExpression()) #23, !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !11888, metadata !DIExpression()) #23, !dbg !12975
  call void @llvm.dbg.value(metadata i32 undef, metadata !12972, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12969, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i32 undef, metadata !12970, metadata !DIExpression()), !dbg !12974
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !12980
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12969, metadata !DIExpression()), !dbg !12973
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12983
  br i1 %5, label %8, label %6, !dbg !12985

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12986
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12988
  br label %8, !dbg !12989

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12977
  call void @llvm.dbg.value(metadata i32 %9, metadata !11894, metadata !DIExpression()) #23, !dbg !12979
  call void @llvm.dbg.value(metadata i32 %9, metadata !11888, metadata !DIExpression()) #23, !dbg !12975
  call void @llvm.dbg.value(metadata i32 %9, metadata !12972, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.value(metadata i32 undef, metadata !11909, metadata !DIExpression()) #23, !dbg !12990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !12990
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()) #23, !dbg !12992
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !12994, !srcloc !11923
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12969, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i32 undef, metadata !12970, metadata !DIExpression()), !dbg !12974
  ret %struct.k_thread* %4, !dbg !12995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12996 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12998, metadata !DIExpression()), !dbg !12999
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12854, metadata !DIExpression()) #23, !dbg !13000
  call void @llvm.dbg.value(metadata i32 0, metadata !12855, metadata !DIExpression()) #23, !dbg !13002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !13003
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13005, !srcloc !11897
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13005
  call void @llvm.dbg.value(metadata i32 %3, metadata !11894, metadata !DIExpression()) #23, !dbg !13007
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !13007
  call void @llvm.dbg.value(metadata i32 %3, metadata !11888, metadata !DIExpression()) #23, !dbg !13003
  call void @llvm.dbg.value(metadata i32 %3, metadata !12857, metadata !DIExpression()) #23, !dbg !13002
  call void @llvm.dbg.value(metadata i32 undef, metadata !12855, metadata !DIExpression()) #23, !dbg !13002
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13008
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !13009
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !13009
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !13011
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13013, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !12855, metadata !DIExpression()) #23, !dbg !13002
  call void @llvm.dbg.value(metadata i32 undef, metadata !12855, metadata !DIExpression()) #23, !dbg !13002
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13014
  ret void, !dbg !13015
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13016 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13018, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i32 %1, metadata !13019, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i8 0, metadata !13020, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i32 0, metadata !13021, metadata !DIExpression()), !dbg !13025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !13026
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13028, !srcloc !11897
  call void @llvm.dbg.value(metadata i32 undef, metadata !11894, metadata !DIExpression()) #23, !dbg !13030
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !13030
  call void @llvm.dbg.value(metadata i32 undef, metadata !11888, metadata !DIExpression()) #23, !dbg !13026
  call void @llvm.dbg.value(metadata i32 undef, metadata !13023, metadata !DIExpression()), !dbg !13025
  call void @llvm.dbg.value(metadata i8 poison, metadata !13020, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()), !dbg !13025
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !13031
  call void @llvm.dbg.value(metadata i1 %6, metadata !13020, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13024
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13034

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12053, metadata !DIExpression()) #23, !dbg !13035
  %11 = load i8, i8* %4, align 1, !dbg !13041
  %12 = and i8 %11, 127, !dbg !13041
  store i8 %12, i8* %4, align 1, !dbg !13041
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12061, metadata !DIExpression()) #23, !dbg !13042
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13044
  store i8 %9, i8* %8, align 2, !dbg !13045
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12070, metadata !DIExpression()) #23, !dbg !13046
  %13 = load i8, i8* %4, align 1, !dbg !13048
  %14 = or i8 %13, -128, !dbg !13048
  store i8 %14, i8* %4, align 1, !dbg !13048
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12077, metadata !DIExpression()) #23, !dbg !13049
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12084, metadata !DIExpression()) #23, !dbg !13051
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12090, metadata !DIExpression()) #23, !dbg !13051
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13053
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12091, metadata !DIExpression()) #23, !dbg !13051
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13054
  br i1 %16, label %26, label %17, !dbg !13053

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12091, metadata !DIExpression()) #23, !dbg !13051
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13055
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12091, metadata !DIExpression()) #23, !dbg !13051
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !13056
  %21 = icmp sgt i32 %20, 0, !dbg !13057
  br i1 %21, label %22, label %23, !dbg !13058

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !13059
  br label %27, !dbg !13060

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !13054
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12091, metadata !DIExpression()) #23, !dbg !13051
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13054
  br i1 %25, label %26, label %17, !dbg !13053, !llvm.loop !13061

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !13063
  br label %27, !dbg !13064

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13065
  br label %29, !dbg !13066

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13067
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13028
  call void @llvm.dbg.value(metadata i32 %30, metadata !11894, metadata !DIExpression()) #23, !dbg !13030
  call void @llvm.dbg.value(metadata i32 %30, metadata !11888, metadata !DIExpression()) #23, !dbg !13026
  call void @llvm.dbg.value(metadata i32 %30, metadata !13023, metadata !DIExpression()), !dbg !13025
  call void @llvm.dbg.value(metadata i32 undef, metadata !11909, metadata !DIExpression()) #23, !dbg !13069
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !13069
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()) #23, !dbg !13071
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !13073, !srcloc !11923
  call void @llvm.dbg.value(metadata i8 poison, metadata !13020, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i32 undef, metadata !13021, metadata !DIExpression()), !dbg !13025
  ret i1 %6, !dbg !13074
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13079, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata i32 %1, metadata !13080, metadata !DIExpression()), !dbg !13082
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13083
  call void @llvm.dbg.value(metadata i1 %3, metadata !13081, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13082
  br i1 %3, label %4, label %12, !dbg !13084

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13086
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13087
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13087
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13087
  %9 = load i8, i8* %8, align 1, !dbg !13087
  %10 = icmp eq i8 %9, 0, !dbg !13088
  br i1 %10, label %11, label %12, !dbg !13089

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13090
  br label %12, !dbg !13092

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13093
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13094 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13096, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !13100
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13102, !srcloc !11897
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13102
  call void @llvm.dbg.value(metadata i32 %2, metadata !11894, metadata !DIExpression()) #23, !dbg !13104
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !13104
  call void @llvm.dbg.value(metadata i32 %2, metadata !11888, metadata !DIExpression()) #23, !dbg !13100
  call void @llvm.dbg.value(metadata i32 %2, metadata !13098, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i32 undef, metadata !13096, metadata !DIExpression()), !dbg !13099
  tail call fastcc void @z_sched_lock() #25, !dbg !13105
  call void @llvm.dbg.value(metadata i32 %2, metadata !11909, metadata !DIExpression()) #23, !dbg !13108
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !13108
  call void @llvm.dbg.value(metadata i32 %2, metadata !11917, metadata !DIExpression()) #23, !dbg !13110
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13112, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !13096, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i32 undef, metadata !13096, metadata !DIExpression()), !dbg !13099
  ret void, !dbg !13113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13114 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13115
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13116
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13116
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13116
  %5 = load i8, i8* %4, align 1, !dbg !13117
  %6 = add i8 %5, -1, !dbg !13117
  store i8 %6, i8* %4, align 1, !dbg !13117
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13118, !srcloc !13120
  ret void, !dbg !13121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13122 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13124, metadata !DIExpression()), !dbg !13127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !13128
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13130, !srcloc !11897
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13130
  call void @llvm.dbg.value(metadata i32 %2, metadata !11894, metadata !DIExpression()) #23, !dbg !13132
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !13132
  call void @llvm.dbg.value(metadata i32 %2, metadata !11888, metadata !DIExpression()) #23, !dbg !13128
  call void @llvm.dbg.value(metadata i32 %2, metadata !13126, metadata !DIExpression()), !dbg !13127
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()), !dbg !13127
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13133
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13136
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13136
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13136
  %7 = load i8, i8* %6, align 1, !dbg !13137
  %8 = add i8 %7, 1, !dbg !13137
  store i8 %8, i8* %6, align 1, !dbg !13137
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !13138
  call void @llvm.dbg.value(metadata i32 %2, metadata !11909, metadata !DIExpression()) #23, !dbg !13139
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !13139
  call void @llvm.dbg.value(metadata i32 %2, metadata !11917, metadata !DIExpression()) #23, !dbg !13141
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13143, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 1, metadata !13124, metadata !DIExpression()), !dbg !13127
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()), !dbg !13127
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13144
  ret void, !dbg !13145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !13146 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13147
  ret %struct.k_thread* %1, !dbg !13148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13149 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13153, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13154, metadata !DIExpression()), !dbg !13158
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13159
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13155, metadata !DIExpression()), !dbg !13158
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13160
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13156, metadata !DIExpression()), !dbg !13158
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !13161
  call void @llvm.dbg.value(metadata i32 %5, metadata !13157, metadata !DIExpression()), !dbg !13158
  %6 = icmp sgt i32 %5, 0, !dbg !13162
  br i1 %6, label %17, label %7, !dbg !13164

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13165
  br i1 %8, label %17, label %9, !dbg !13167

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13168
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13168
  %12 = load i32, i32* %11, align 8, !dbg !13168
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13170
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13170
  %15 = load i32, i32* %14, align 8, !dbg !13170
  %16 = icmp ult i32 %12, %15, !dbg !13171
  br label %17, !dbg !13172

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13173
  ret i1 %18, !dbg !13174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13175 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13192, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13193, metadata !DIExpression()), !dbg !13207
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13208
  %5 = load i32, i32* %4, align 4, !dbg !13209
  %6 = add nsw i32 %5, 1, !dbg !13209
  store i32 %6, i32* %4, align 4, !dbg !13209
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13210
  store i32 %5, i32* %7, align 8, !dbg !13211
  %8 = load i32, i32* %4, align 4, !dbg !13212
  %9 = icmp eq i32 %8, 0, !dbg !13213
  br i1 %9, label %10, label %32, !dbg !13214

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13215
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13215
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13195, metadata !DIExpression()), !dbg !13215
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13215
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13215
  %14 = load i32, i32* %13, align 4, !dbg !13215
  %15 = shl i32 %14, 2, !dbg !13215
  %16 = alloca i8, i32 %15, align 8, !dbg !13215
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13215
  store i8* %16, i8** %17, align 4, !dbg !13215
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13215
  %19 = alloca i8, i32 %14, align 8, !dbg !13215
  store i8* %19, i8** %18, align 4, !dbg !13215
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13215
  store i32 -1, i32* %20, align 4, !dbg !13215
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13216
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13204, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13194, metadata !DIExpression()), !dbg !13207
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !13218
  br i1 %22, label %23, label %24, !dbg !13215

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13218
  br label %32, !dbg !13219

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !13194, metadata !DIExpression()), !dbg !13207
  %26 = load i32, i32* %4, align 4, !dbg !13220
  %27 = add nsw i32 %26, 1, !dbg !13220
  store i32 %27, i32* %4, align 4, !dbg !13220
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !13222
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !13222
  store i32 %26, i32* %29, align 8, !dbg !13223
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13216
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13204, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13194, metadata !DIExpression()), !dbg !13207
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !13218
  br i1 %31, label %23, label %24, !dbg !13215, !llvm.loop !13224

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13226
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13227
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !13228
  ret void, !dbg !13229
}

; Function Attrs: optsize
declare !dbg !13230 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13235 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13238 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13240, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13241, metadata !DIExpression()), !dbg !13242
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13243
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13244
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !13245
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13246
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !13246
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !13248
  br i1 %7, label %8, label %10, !dbg !13249

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13250
  store i32 0, i32* %9, align 4, !dbg !13252
  br label %10, !dbg !13253

10:                                               ; preds = %8, %2
  ret void, !dbg !13254
}

; Function Attrs: optsize
declare !dbg !13255 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13256 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13260, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13261, metadata !DIExpression()), !dbg !13263
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13264
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !13265
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13262, metadata !DIExpression()), !dbg !13263
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13261, metadata !DIExpression()), !dbg !13263
  ret %struct.k_thread* %4, !dbg !13266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13267 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13271, metadata !DIExpression()), !dbg !13272
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !13273
  ret %struct.rbnode* %2, !dbg !13274
}

; Function Attrs: optsize
declare !dbg !13275 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #21 !dbg !13278 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13288, metadata !DIExpression()), !dbg !13292
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13293
  %3 = load i32, i32* %2, align 4, !dbg !13293
  %4 = icmp eq i32 %3, 0, !dbg !13295
  br i1 %4, label %10, label %5, !dbg !13296

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13289, metadata !DIExpression()), !dbg !13292
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13297, !range !3560
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13298
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13290, metadata !DIExpression()), !dbg !13292
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !13299
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13291, metadata !DIExpression()), !dbg !13292
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13289, metadata !DIExpression()), !dbg !13292
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13292
  ret %struct.k_thread* %11, !dbg !13300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13301 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13305, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 0, metadata !13306, metadata !DIExpression()), !dbg !13308
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13309
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13307, metadata !DIExpression()), !dbg !13308
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13310
  br i1 %3, label %8, label %4, !dbg !13311

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13312
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13314
  call void @llvm.dbg.value(metadata i32 1, metadata !13306, metadata !DIExpression()), !dbg !13308
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13309
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13307, metadata !DIExpression()), !dbg !13308
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13310
  br i1 %7, label %8, label %4, !dbg !13311, !llvm.loop !13315

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13308
  ret i32 %9, !dbg !13317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !13318 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13320, metadata !DIExpression()), !dbg !13321
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13322
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13323
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13324
  ret %struct.k_thread* %4, !dbg !13325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !13326 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13335, metadata !DIExpression()), !dbg !13336
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13337
  tail call fastcc void @sys_dlist_init.118(%struct._dnode* noundef nonnull %2) #25, !dbg !13338
  ret void, !dbg !13339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.118(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13340 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13344, metadata !DIExpression()), !dbg !13345
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13346
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13347
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13348
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13349
  ret void, !dbg !13350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13351 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !13352
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !13353
  ret void, !dbg !13354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !13355 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13360, metadata !DIExpression()), !dbg !13361
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13362
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13362
  %4 = load i8, i8* %3, align 2, !dbg !13362
  %5 = sext i8 %4 to i32, !dbg !13363
  ret i32 %5, !dbg !13364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13365 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13369, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.value(metadata i32 %1, metadata !13370, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13371, metadata !DIExpression()), !dbg !13372
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13373
  ret void, !dbg !13374
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13375 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !13376
  br i1 %1, label %8, label %2, !dbg !13377

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !13378
  br i1 %3, label %8, label %4, !dbg !13379

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13380
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !13381
  %7 = xor i1 %6, true, !dbg !13379
  br label %8, !dbg !13379

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !13383 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13384, !range !5964
  %2 = icmp eq i8 %1, 0, !dbg !13384
  ret i1 %2, !dbg !13385
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13386 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !13389
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13391, !srcloc !11897
  call void @llvm.dbg.value(metadata i32 undef, metadata !11894, metadata !DIExpression()) #23, !dbg !13393
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !13393
  call void @llvm.dbg.value(metadata i32 undef, metadata !11888, metadata !DIExpression()) #23, !dbg !13389
  call void @llvm.dbg.value(metadata i32 undef, metadata !13388, metadata !DIExpression()), !dbg !13394
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13395
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12053, metadata !DIExpression()) #23, !dbg !13398
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13400
  %4 = load i8, i8* %3, align 1, !dbg !13401
  %5 = and i8 %4, 127, !dbg !13401
  store i8 %5, i8* %3, align 1, !dbg !13401
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12061, metadata !DIExpression()) #23, !dbg !13402
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !13404
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13405
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12070, metadata !DIExpression()) #23, !dbg !13406
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13408
  %8 = load i8, i8* %7, align 1, !dbg !13409
  %9 = or i8 %8, -128, !dbg !13409
  store i8 %9, i8* %7, align 1, !dbg !13409
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12077, metadata !DIExpression()) #23, !dbg !13410
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12084, metadata !DIExpression()) #23, !dbg !13412
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12090, metadata !DIExpression()) #23, !dbg !13412
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13414
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12091, metadata !DIExpression()) #23, !dbg !13412
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13415
  br i1 %11, label %22, label %12, !dbg !13414

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12091, metadata !DIExpression()) #23, !dbg !13412
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13416
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12091, metadata !DIExpression()) #23, !dbg !13412
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !13417
  %16 = icmp sgt i32 %15, 0, !dbg !13418
  br i1 %16, label %17, label %19, !dbg !13419

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13420
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !13421
  br label %24, !dbg !13422

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !13415
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12091, metadata !DIExpression()) #23, !dbg !13412
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13415
  br i1 %21, label %22, label %12, !dbg !13414, !llvm.loop !13423

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13425
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !13426
  br label %24, !dbg !13427

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13391
  call void @llvm.dbg.value(metadata i32 %25, metadata !11894, metadata !DIExpression()) #23, !dbg !13393
  call void @llvm.dbg.value(metadata i32 %25, metadata !11888, metadata !DIExpression()) #23, !dbg !13389
  call void @llvm.dbg.value(metadata i32 %25, metadata !13388, metadata !DIExpression()), !dbg !13394
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13428
  call void @llvm.dbg.value(metadata i32 undef, metadata !12495, metadata !DIExpression()) #23, !dbg !13429
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12500, metadata !DIExpression()) #23, !dbg !13429
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !13431
  ret void, !dbg !13432
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13433 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13437, metadata !DIExpression()), !dbg !13440
  %3 = icmp eq i64 %2, -1, !dbg !13441
  br i1 %3, label %4, label %6, !dbg !13443

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13444
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !13446
  br label %11, !dbg !13447

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13438, metadata !DIExpression()), !dbg !13440
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !13448
  %8 = sext i32 %7 to i64, !dbg !13448
  call void @llvm.dbg.value(metadata i64 %8, metadata !13438, metadata !DIExpression()), !dbg !13440
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !13449
  %10 = trunc i64 %9 to i32, !dbg !13449
  call void @llvm.dbg.value(metadata i32 %10, metadata !13439, metadata !DIExpression()), !dbg !13440
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13440
  ret i32 %12, !dbg !13450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13455, metadata !DIExpression()), !dbg !13456
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13457, !srcloc !13459
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !13460
  ret void, !dbg !13461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13462 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13466, metadata !DIExpression()), !dbg !13470
  %2 = icmp eq i64 %0, 0, !dbg !13471
  br i1 %2, label %3, label %4, !dbg !13473

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !13474
  br label %29, !dbg !13476

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13468, metadata !DIExpression()), !dbg !13470
  %5 = icmp sgt i64 %0, -3, !dbg !13477
  br i1 %5, label %6, label %10, !dbg !13479

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13480
  %8 = trunc i64 %0 to i32, !dbg !13482
  %9 = add i32 %7, %8, !dbg !13482
  call void @llvm.dbg.value(metadata i32 %9, metadata !13467, metadata !DIExpression()), !dbg !13470
  br label %13, !dbg !13483

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13484
  %12 = sub i32 -2, %11, !dbg !13484
  call void @llvm.dbg.value(metadata i32 %12, metadata !13467, metadata !DIExpression()), !dbg !13470
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13486
  call void @llvm.dbg.value(metadata i32 %14, metadata !13467, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !13487
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13489, !srcloc !11897
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13489
  call void @llvm.dbg.value(metadata i32 %16, metadata !11894, metadata !DIExpression()) #23, !dbg !13491
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !13491
  call void @llvm.dbg.value(metadata i32 %16, metadata !11888, metadata !DIExpression()) #23, !dbg !13487
  call void @llvm.dbg.value(metadata i32 %16, metadata !13469, metadata !DIExpression()), !dbg !13470
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13492
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13493
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !13494
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13495
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13496
  tail call fastcc void @z_add_thread_timeout.107(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !13496
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13497
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !13498
  call void @llvm.dbg.value(metadata i32 %16, metadata !12495, metadata !DIExpression()) #23, !dbg !13499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12500, metadata !DIExpression()) #23, !dbg !13499
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !13501
  %22 = zext i32 %14 to i64, !dbg !13502
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13503
  %24 = zext i32 %23 to i64, !dbg !13503
  %25 = sub nsw i64 %22, %24, !dbg !13504
  call void @llvm.dbg.value(metadata i64 %25, metadata !13466, metadata !DIExpression()), !dbg !13470
  %26 = icmp sgt i64 %25, 0, !dbg !13505
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13505
  %28 = trunc i64 %27 to i32, !dbg !13505
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13470
  ret i32 %30, !dbg !13506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !13507 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13509, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.value(metadata i64 %0, metadata !11931, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i32 10000, metadata !11934, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i32 1000, metadata !11935, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i8 1, metadata !11936, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i1 false, metadata !11937, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13511
  call void @llvm.dbg.value(metadata i1 false, metadata !11938, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13511
  call void @llvm.dbg.value(metadata i8 0, metadata !11939, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i1 false, metadata !11940, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13511
  call void @llvm.dbg.value(metadata i1 true, metadata !11941, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13511
  call void @llvm.dbg.value(metadata i64 0, metadata !11942, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i64 0, metadata !11942, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i64 %0, metadata !11931, metadata !DIExpression()), !dbg !13511
  %2 = udiv i64 %0, 10, !dbg !13513
  ret i64 %2, !dbg !13517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13518 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13519, !srcloc !13521
  tail call void @z_impl_k_yield() #25, !dbg !13522
  ret void, !dbg !13523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13528, metadata !DIExpression()), !dbg !13530
  %2 = sext i32 %0 to i64, !dbg !13531
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !13532
  call void @llvm.dbg.value(metadata i64 %3, metadata !13529, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13530
  %4 = shl i64 %3, 32, !dbg !13533
  %5 = ashr exact i64 %4, 32, !dbg !13533
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !13534
  call void @llvm.dbg.value(metadata i32 %6, metadata !13529, metadata !DIExpression()), !dbg !13530
  %7 = sext i32 %6 to i64, !dbg !13535
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !13536
  %9 = trunc i64 %8 to i32, !dbg !13536
  ret i32 %9, !dbg !13537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13538 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13540, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i64 %0, metadata !11931, metadata !DIExpression()), !dbg !13542
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11934, metadata !DIExpression()), !dbg !13542
  call void @llvm.dbg.value(metadata i32 10000, metadata !11935, metadata !DIExpression()), !dbg !13542
  call void @llvm.dbg.value(metadata i8 1, metadata !11936, metadata !DIExpression()), !dbg !13542
  call void @llvm.dbg.value(metadata i1 false, metadata !11937, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13542
  call void @llvm.dbg.value(metadata i1 true, metadata !11938, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13542
  call void @llvm.dbg.value(metadata i8 0, metadata !11939, metadata !DIExpression()), !dbg !13542
  call void @llvm.dbg.value(metadata i1 false, metadata !11940, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13542
  call void @llvm.dbg.value(metadata i1 true, metadata !11941, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13542
  call void @llvm.dbg.value(metadata i64 0, metadata !11942, metadata !DIExpression()), !dbg !13542
  call void @llvm.dbg.value(metadata i64 0, metadata !11942, metadata !DIExpression()), !dbg !13542
  %2 = add i64 %0, 99, !dbg !13544
  call void @llvm.dbg.value(metadata i64 %2, metadata !11931, metadata !DIExpression()), !dbg !13542
  %3 = udiv i64 %2, 100, !dbg !13545
  ret i64 %3, !dbg !13546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !13547 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13549, metadata !DIExpression()), !dbg !13550
  call void @llvm.dbg.value(metadata i64 %0, metadata !11931, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata i32 10000, metadata !11934, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11935, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata i8 1, metadata !11936, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata i1 false, metadata !11937, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13551
  call void @llvm.dbg.value(metadata i1 false, metadata !11938, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13551
  call void @llvm.dbg.value(metadata i8 0, metadata !11939, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata i1 true, metadata !11940, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13551
  call void @llvm.dbg.value(metadata i1 false, metadata !11941, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13551
  call void @llvm.dbg.value(metadata i64 0, metadata !11942, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata i64 0, metadata !11942, metadata !DIExpression()), !dbg !13551
  %2 = mul i64 %0, 100, !dbg !13553
  ret i64 %2, !dbg !13555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13558, metadata !DIExpression()), !dbg !13559
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !13560
  br i1 %2, label %14, label %3, !dbg !13562

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13563
  %5 = icmp slt i32 %4, 0, !dbg !13565
  br i1 %5, label %6, label %10, !dbg !13566

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13567
  %8 = load i8, i8* %7, align 1, !dbg !13567
  %9 = icmp eq i8 %8, 16, !dbg !13570
  br i1 %9, label %10, label %14, !dbg !13571

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13572
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13573
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13574, !srcloc !12535
  call void @llvm.dbg.value(metadata i32 %11, metadata !12531, metadata !DIExpression()) #23, !dbg !13578
  %12 = icmp eq i32 %11, 0, !dbg !13579
  br i1 %12, label %13, label %14, !dbg !13580

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13581
  br label %14, !dbg !13583

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13587, metadata !DIExpression()), !dbg !13588
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13589
  %3 = load i8, i8* %2, align 1, !dbg !13589
  %4 = and i8 %3, 2, !dbg !13590
  %5 = icmp ne i8 %4, 0, !dbg !13591
  ret i1 %5, !dbg !13592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !13593 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13598
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13597, metadata !DIExpression()), !dbg !13599
  ret %struct.k_thread* %1, !dbg !13600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13601 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13604, !srcloc !12535
  call void @llvm.dbg.value(metadata i32 %1, metadata !12531, metadata !DIExpression()) #23, !dbg !13607
  %2 = icmp eq i32 %1, 0, !dbg !13608
  br i1 %2, label %3, label %8, !dbg !13609

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13610
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !13611
  %6 = icmp ne i32 %5, 0, !dbg !13609
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13612
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13613 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13615, metadata !DIExpression()), !dbg !13617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !13618
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13620, !srcloc !11897
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13620
  call void @llvm.dbg.value(metadata i32 %3, metadata !11894, metadata !DIExpression()) #23, !dbg !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !13622
  call void @llvm.dbg.value(metadata i32 %3, metadata !11888, metadata !DIExpression()) #23, !dbg !13618
  call void @llvm.dbg.value(metadata i32 %3, metadata !13616, metadata !DIExpression()), !dbg !13617
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13623
  %5 = load i8, i8* %4, align 4, !dbg !13623
  %6 = and i8 %5, 1, !dbg !13625
  %7 = icmp eq i8 %6, 0, !dbg !13626
  br i1 %7, label %9, label %8, !dbg !13627

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !13628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !13628
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !13631
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13633, !srcloc !11923
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13634, !srcloc !13636
  br label %24, !dbg !13637

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13638
  %11 = load i8, i8* %10, align 1, !dbg !13638
  %12 = and i8 %11, 8, !dbg !13640
  %13 = icmp eq i8 %12, 0, !dbg !13641
  br i1 %13, label %15, label %14, !dbg !13642

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !13643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !13643
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !13646
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13648, !srcloc !11923
  br label %24, !dbg !13649

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !13650
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13651
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13653
  br i1 %17, label %18, label %23, !dbg !13654

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13655, !srcloc !12535
  call void @llvm.dbg.value(metadata i32 %19, metadata !12531, metadata !DIExpression()) #23, !dbg !13658
  %20 = icmp eq i32 %19, 0, !dbg !13659
  br i1 %20, label %21, label %23, !dbg !13660

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12495, metadata !DIExpression()) #23, !dbg !13661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12500, metadata !DIExpression()) #23, !dbg !13661
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !13664
  br label %23, !dbg !13665

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !11909, metadata !DIExpression()) #23, !dbg !13666
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !13666
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()) #23, !dbg !13668
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13670, !srcloc !11923
  br label %24, !dbg !13671

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13671
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13672 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13674, metadata !DIExpression()), !dbg !13675
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13676
  %3 = load i8, i8* %2, align 1, !dbg !13676
  %4 = and i8 %3, 8, !dbg !13678
  %5 = icmp eq i8 %4, 0, !dbg !13679
  br i1 %5, label %6, label %20, !dbg !13680

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13681
  %8 = or i8 %7, 8, !dbg !13681
  store i8 %8, i8* %2, align 1, !dbg !13681
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !13683
  br i1 %9, label %10, label %12, !dbg !13685

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12053, metadata !DIExpression()) #23, !dbg !13686
  %11 = and i8 %8, 95, !dbg !13689
  store i8 %11, i8* %2, align 1, !dbg !13689
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12061, metadata !DIExpression()) #23, !dbg !13690
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !13692
  br label %12, !dbg !13693

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13694
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13694
  %15 = icmp eq %union.anon* %14, null, !dbg !13696
  br i1 %15, label %17, label %16, !dbg !13697

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13698
  br label %17, !dbg !13700

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13701
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13702
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !13703
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13704
  br label %20, !dbg !13705

20:                                               ; preds = %17, %1
  ret void, !dbg !13706
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13707 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13711, metadata !DIExpression()), !dbg !13713
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13714
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13712, metadata !DIExpression()), !dbg !13713
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13715
  br i1 %3, label %10, label %4, !dbg !13716

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13717
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13719
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13720, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata i32 0, metadata !13725, metadata !DIExpression()), !dbg !13726
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 1, !dbg !13728
  store i32 0, i32* %7, align 4, !dbg !13729
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13730
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13714
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13712, metadata !DIExpression()), !dbg !13713
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13715
  br i1 %9, label %10, label %4, !dbg !13716, !llvm.loop !13731

10:                                               ; preds = %4, %1
  ret void, !dbg !13733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13734 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13739, metadata !DIExpression()), !dbg !13742
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13738, metadata !DIExpression()), !dbg !13742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !13743
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13745, !srcloc !11897
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13745
  call void @llvm.dbg.value(metadata i32 %4, metadata !11894, metadata !DIExpression()) #23, !dbg !13747
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !13747
  call void @llvm.dbg.value(metadata i32 %4, metadata !11888, metadata !DIExpression()) #23, !dbg !13743
  call void @llvm.dbg.value(metadata i32 %4, metadata !13740, metadata !DIExpression()), !dbg !13742
  call void @llvm.dbg.value(metadata i32 0, metadata !13741, metadata !DIExpression()), !dbg !13742
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13748
  %6 = load i8, i8* %5, align 1, !dbg !13748
  %7 = and i8 %6, 8, !dbg !13750
  %8 = icmp eq i8 %7, 0, !dbg !13751
  br i1 %8, label %9, label %24, !dbg !13752

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !13739, metadata !DIExpression()), !dbg !13742
  %11 = icmp eq i64 %10, 0, !dbg !13753
  br i1 %11, label %24, label %12, !dbg !13755

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13756
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !13758
  br i1 %14, label %24, label %15, !dbg !13759

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13760
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !13760
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !13761
  %19 = icmp eq %union.anon* %17, %18, !dbg !13762
  br i1 %19, label %24, label %20, !dbg !13763

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13764
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !13766
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13767
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !13768
  call void @llvm.dbg.value(metadata i32 %4, metadata !12495, metadata !DIExpression()) #23, !dbg !13769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12500, metadata !DIExpression()) #23, !dbg !13769
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !13771
  call void @llvm.dbg.value(metadata i32 %23, metadata !13741, metadata !DIExpression()), !dbg !13742
  br label %26, !dbg !13772

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !13773
  call void @llvm.dbg.value(metadata i32 %25, metadata !13741, metadata !DIExpression()), !dbg !13742
  call void @llvm.dbg.value(metadata i32 %4, metadata !11909, metadata !DIExpression()) #23, !dbg !13774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !13774
  call void @llvm.dbg.value(metadata i32 %4, metadata !11917, metadata !DIExpression()) #23, !dbg !13776
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13778, !srcloc !11923
  br label %26, !dbg !13779

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !13742
  ret i32 %27, !dbg !13780
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13781 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13785, metadata !DIExpression()), !dbg !13793
  call void @llvm.dbg.value(metadata i32 %1, metadata !13786, metadata !DIExpression()), !dbg !13793
  call void @llvm.dbg.value(metadata i8* %2, metadata !13787, metadata !DIExpression()), !dbg !13793
  call void @llvm.dbg.value(metadata i8 0, metadata !13789, metadata !DIExpression()), !dbg !13793
  call void @llvm.dbg.value(metadata i32 0, metadata !13790, metadata !DIExpression()), !dbg !13794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11882, metadata !DIExpression()) #23, !dbg !13795
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13797, !srcloc !11897
  call void @llvm.dbg.value(metadata i32 undef, metadata !11894, metadata !DIExpression()) #23, !dbg !13799
  call void @llvm.dbg.value(metadata i32 undef, metadata !11895, metadata !DIExpression()) #23, !dbg !13799
  call void @llvm.dbg.value(metadata i32 undef, metadata !11888, metadata !DIExpression()) #23, !dbg !13795
  call void @llvm.dbg.value(metadata i32 undef, metadata !13792, metadata !DIExpression()), !dbg !13794
  call void @llvm.dbg.value(metadata i8 poison, metadata !13789, metadata !DIExpression()), !dbg !13793
  call void @llvm.dbg.value(metadata i32 undef, metadata !13790, metadata !DIExpression()), !dbg !13794
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !13800
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13788, metadata !DIExpression()), !dbg !13793
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13803
  br i1 %7, label %12, label %8, !dbg !13805

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13806, metadata !DIExpression()), !dbg !13813
  call void @llvm.dbg.value(metadata i32 %1, metadata !13811, metadata !DIExpression()), !dbg !13813
  call void @llvm.dbg.value(metadata i8* %2, metadata !13812, metadata !DIExpression()), !dbg !13813
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13720, metadata !DIExpression()), !dbg !13816
  call void @llvm.dbg.value(metadata i32 %1, metadata !13725, metadata !DIExpression()), !dbg !13816
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 6, i32 1, !dbg !13818
  store i32 %1, i32* %9, align 4, !dbg !13819
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !13820
  store i8* %2, i8** %10, align 4, !dbg !13821
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13822
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13823
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !13824
  call void @llvm.dbg.value(metadata i8 1, metadata !13789, metadata !DIExpression()), !dbg !13793
  br label %12, !dbg !13825

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !13797
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !13797
  call void @llvm.dbg.value(metadata i32 %14, metadata !11894, metadata !DIExpression()) #23, !dbg !13799
  call void @llvm.dbg.value(metadata i32 %14, metadata !11888, metadata !DIExpression()) #23, !dbg !13795
  call void @llvm.dbg.value(metadata i32 %14, metadata !13792, metadata !DIExpression()), !dbg !13794
  call void @llvm.dbg.value(metadata i8 poison, metadata !13789, metadata !DIExpression()), !dbg !13793
  call void @llvm.dbg.value(metadata i32 undef, metadata !11909, metadata !DIExpression()) #23, !dbg !13826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11914, metadata !DIExpression()) #23, !dbg !13826
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()) #23, !dbg !13828
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13830, !srcloc !11923
  call void @llvm.dbg.value(metadata i32 undef, metadata !13790, metadata !DIExpression()), !dbg !13794
  ret i1 %13, !dbg !13831
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !13832 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13837, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.value(metadata i64 undef, metadata !13839, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13836, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13838, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.value(metadata i8** %4, metadata !13840, metadata !DIExpression()), !dbg !13842
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !13843
  call void @llvm.dbg.value(metadata i32 %6, metadata !13841, metadata !DIExpression()), !dbg !13842
  %7 = icmp eq i8** %4, null, !dbg !13844
  br i1 %7, label %12, label %8, !dbg !13846

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13847
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !13849
  %11 = load i8*, i8** %10, align 4, !dbg !13849
  store i8* %11, i8** %4, align 4, !dbg !13850
  br label %12, !dbg !13851

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !13852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !13853 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !13855
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !13856
  ret void, !dbg !13857
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13858 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13868, metadata !DIExpression()), !dbg !13885
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13866, metadata !DIExpression()), !dbg !13885
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !13867, metadata !DIExpression()), !dbg !13885
  %5 = icmp eq i64 %4, -1, !dbg !13886
  br i1 %5, label %55, label %6, !dbg !13888

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !13889
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !13890
  call void @llvm.dbg.value(metadata i32 0, metadata !13869, metadata !DIExpression()), !dbg !13891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13892, metadata !DIExpression()) #23, !dbg !13899
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13901, !srcloc !13907
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !13901
  call void @llvm.dbg.value(metadata i32 %9, metadata !13904, metadata !DIExpression()) #23, !dbg !13908
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()) #23, !dbg !13908
  call void @llvm.dbg.value(metadata i32 %9, metadata !13898, metadata !DIExpression()) #23, !dbg !13899
  call void @llvm.dbg.value(metadata i32 %9, metadata !13875, metadata !DIExpression()), !dbg !13891
  call void @llvm.dbg.value(metadata i32 undef, metadata !13869, metadata !DIExpression()), !dbg !13891
  %10 = icmp slt i64 %4, -1, !dbg !13909
  br i1 %10, label %11, label %17, !dbg !13910

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !13911
  %13 = add i64 %4, %12, !dbg !13912
  %14 = sub i64 -2, %13, !dbg !13912
  call void @llvm.dbg.value(metadata i64 %14, metadata !13879, metadata !DIExpression()), !dbg !13913
  %15 = icmp sgt i64 %14, 1, !dbg !13914
  %16 = select i1 %15, i64 %14, i64 1, !dbg !13914
  br label %22, !dbg !13915

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !13916
  %19 = tail call fastcc i32 @elapsed.129() #25, !dbg !13918
  %20 = sext i32 %19 to i64, !dbg !13918
  %21 = add nsw i64 %18, %20, !dbg !13919
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !13920
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13921
  store i64 %23, i64* %24, align 8, !dbg !13922
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !13923
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !13876, metadata !DIExpression()), !dbg !13925
  %26 = icmp eq %struct._timeout* %25, null, !dbg !13926
  br i1 %26, label %42, label %27, !dbg !13926

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !13927
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !13876, metadata !DIExpression()), !dbg !13925
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13931
  %31 = load i64, i64* %30, align 8, !dbg !13931
  %32 = icmp slt i64 %28, %31, !dbg !13932
  br i1 %32, label %33, label %38, !dbg !13933

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13931
  %35 = sub nsw i64 %31, %28, !dbg !13934
  store i64 %35, i64* %34, align 8, !dbg !13934
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !13936
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13937
  tail call fastcc void @sys_dlist_insert.130(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !13938
  br label %44, !dbg !13939

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !13940
  store i64 %39, i64* %24, align 8, !dbg !13940
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !13941
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !13876, metadata !DIExpression()), !dbg !13925
  %41 = icmp eq %struct._timeout* %40, null, !dbg !13926
  br i1 %41, label %42, label %27, !dbg !13926, !llvm.loop !13942

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13944
  tail call fastcc void @sys_dlist_append.131(%struct._dnode* noundef %43) #25, !dbg !13947
  br label %44, !dbg !13948

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !13949
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !13950
  br i1 %46, label %47, label %54, !dbg !13951

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !13952
  call void @llvm.dbg.value(metadata i32 %48, metadata !13882, metadata !DIExpression()), !dbg !13953
  %49 = icmp ne i32 %48, 0, !dbg !13954
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !13956
  br i1 %52, label %54, label %53, !dbg !13956

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !13957
  br label %54, !dbg !13959

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !13960, metadata !DIExpression()) #23, !dbg !13966
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13965, metadata !DIExpression()) #23, !dbg !13966
  call void @llvm.dbg.value(metadata i32 %9, metadata !13968, metadata !DIExpression()) #23, !dbg !13971
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13973, !srcloc !13974
  call void @llvm.dbg.value(metadata i32 undef, metadata !13869, metadata !DIExpression()), !dbg !13891
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !13975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.129() unnamed_addr #1 !dbg !13976 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !13979
  %2 = icmp eq i32 %1, 0, !dbg !13980
  br i1 %2, label %3, label %5, !dbg !13979

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !13981
  br label %5, !dbg !13979

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !13979
  ret i32 %6, !dbg !13982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !13983 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.134() #25, !dbg !13989
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13987, metadata !DIExpression()), !dbg !13990
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !13991
  ret %struct._timeout* %2, !dbg !13992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.130(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !13993 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13997, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13998, metadata !DIExpression()), !dbg !14001
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14002
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14002
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13999, metadata !DIExpression()), !dbg !14001
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14003
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14004
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14005
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14006
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14007
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14008
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14009
  ret void, !dbg !14010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !14011 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14015, metadata !DIExpression()), !dbg !14017
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14018
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.132(%struct._dnode* noundef %2) #25, !dbg !14019
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14016, metadata !DIExpression()), !dbg !14017
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14020
  ret %struct._timeout* %4, !dbg !14021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.131(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14022 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14027, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14028, metadata !DIExpression()), !dbg !14030
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14031
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14029, metadata !DIExpression()), !dbg !14030
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14032
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14033
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14034
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14035
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14036
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14037
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14038
  ret void, !dbg !14039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14040 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !14045
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14042, metadata !DIExpression()), !dbg !14046
  %2 = tail call fastcc i32 @elapsed.129() #25, !dbg !14047
  call void @llvm.dbg.value(metadata i32 %2, metadata !14043, metadata !DIExpression()), !dbg !14046
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14048
  br i1 %3, label %14, label %4, !dbg !14050

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14051
  %6 = load i64, i64* %5, align 8, !dbg !14051
  %7 = sext i32 %2 to i64, !dbg !14052
  %8 = sub nsw i64 %6, %7, !dbg !14053
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14054
  br i1 %9, label %14, label %10, !dbg !14055

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14056
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14056
  %13 = trunc i64 %12 to i32, !dbg !14056
  call void @llvm.dbg.value(metadata i32 %13, metadata !14044, metadata !DIExpression()), !dbg !14046
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14058
  call void @llvm.dbg.value(metadata i32 %15, metadata !14044, metadata !DIExpression()), !dbg !14046
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14059
  %17 = icmp ne i32 %16, 0, !dbg !14061
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14062
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14062
  call void @llvm.dbg.value(metadata i32 %20, metadata !14044, metadata !DIExpression()), !dbg !14046
  ret i32 %20, !dbg !14063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.132(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14064 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14068, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14069, metadata !DIExpression()), !dbg !14070
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14071
  br i1 %2, label %5, label %3, !dbg !14072

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.133(%struct._dnode* noundef nonnull %0) #25, !dbg !14073
  br label %5, !dbg !14072

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14072
  ret %struct._dnode* %6, !dbg !14074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.133(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14075 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14077, metadata !DIExpression()), !dbg !14079
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14078, metadata !DIExpression()), !dbg !14079
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14080
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14081
  br i1 %3, label %7, label %4, !dbg !14082

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14083
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14083
  br label %7, !dbg !14082

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14082
  ret %struct._dnode* %8, !dbg !14084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.134() unnamed_addr #5 !dbg !14085 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14089, metadata !DIExpression()), !dbg !14090
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.135() #25, !dbg !14091
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14091
  ret %struct._dnode* %3, !dbg !14092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.135() unnamed_addr #5 !dbg !14093 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14097, metadata !DIExpression()), !dbg !14098
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14099
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14100
  ret i1 %2, !dbg !14101
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14102 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14106, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i32 -22, metadata !14107, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i32 0, metadata !14108, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13892, metadata !DIExpression()) #23, !dbg !14113
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14115, !srcloc !13907
  call void @llvm.dbg.value(metadata i32 undef, metadata !13904, metadata !DIExpression()) #23, !dbg !14117
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()) #23, !dbg !14117
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()) #23, !dbg !14113
  call void @llvm.dbg.value(metadata i32 undef, metadata !14110, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i32 -22, metadata !14107, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i32 undef, metadata !14108, metadata !DIExpression()), !dbg !14112
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14107, metadata !DIExpression()), !dbg !14111
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.138(%struct._dnode* noundef %3) #25, !dbg !14118
  br i1 %4, label %5, label %6, !dbg !14122

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !14123
  call void @llvm.dbg.value(metadata i32 0, metadata !14107, metadata !DIExpression()), !dbg !14111
  br label %6, !dbg !14125

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !14111
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14115
  call void @llvm.dbg.value(metadata i32 %8, metadata !13904, metadata !DIExpression()) #23, !dbg !14117
  call void @llvm.dbg.value(metadata i32 %8, metadata !13898, metadata !DIExpression()) #23, !dbg !14113
  call void @llvm.dbg.value(metadata i32 %8, metadata !14110, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i32 %7, metadata !14107, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i32 undef, metadata !13960, metadata !DIExpression()) #23, !dbg !14126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13965, metadata !DIExpression()) #23, !dbg !14126
  call void @llvm.dbg.value(metadata i32 undef, metadata !13968, metadata !DIExpression()) #23, !dbg !14128
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14130, !srcloc !13974
  call void @llvm.dbg.value(metadata i32 undef, metadata !14108, metadata !DIExpression()), !dbg !14112
  ret i32 %7, !dbg !14131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.138(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14132 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14138, metadata !DIExpression()), !dbg !14139
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14140
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14140
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14141
  ret i1 %4, !dbg !14142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !14143 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14145, metadata !DIExpression()), !dbg !14146
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !14147
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14149
  br i1 %3, label %10, label %4, !dbg !14150

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14151
  %6 = load i64, i64* %5, align 8, !dbg !14151
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14153
  %8 = load i64, i64* %7, align 8, !dbg !14154
  %9 = add nsw i64 %8, %6, !dbg !14154
  store i64 %9, i64* %7, align 8, !dbg !14154
  br label %10, !dbg !14155

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14156
  tail call fastcc void @sys_dlist_remove.139(%struct._dnode* noundef %11) #25, !dbg !14157
  ret void, !dbg !14158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.139(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14159 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14163, metadata !DIExpression()), !dbg !14166
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14167
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14167
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14164, metadata !DIExpression()), !dbg !14166
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14168
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14168
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14165, metadata !DIExpression()), !dbg !14166
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14169
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14170
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14171
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14172
  tail call fastcc void @sys_dnode_init.140(%struct._dnode* noundef %0) #25, !dbg !14173
  ret void, !dbg !14174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.140(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14175 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14177, metadata !DIExpression()), !dbg !14178
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14179
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14180
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14181
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14182
  ret void, !dbg !14183
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14184 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14190, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.value(metadata i64 0, metadata !14191, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.value(metadata i32 0, metadata !14192, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13892, metadata !DIExpression()) #23, !dbg !14197
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14199, !srcloc !13907
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14199
  call void @llvm.dbg.value(metadata i32 %3, metadata !13904, metadata !DIExpression()) #23, !dbg !14201
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()) #23, !dbg !14201
  call void @llvm.dbg.value(metadata i32 %3, metadata !13898, metadata !DIExpression()) #23, !dbg !14197
  call void @llvm.dbg.value(metadata i32 %3, metadata !14194, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i64 0, metadata !14191, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.value(metadata i32 undef, metadata !14192, metadata !DIExpression()), !dbg !14196
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14202
  call void @llvm.dbg.value(metadata i64 %4, metadata !14191, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.value(metadata i32 %3, metadata !13960, metadata !DIExpression()) #23, !dbg !14205
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13965, metadata !DIExpression()) #23, !dbg !14205
  call void @llvm.dbg.value(metadata i32 %3, metadata !13968, metadata !DIExpression()) #23, !dbg !14207
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14209, !srcloc !13974
  call void @llvm.dbg.value(metadata i32 undef, metadata !14192, metadata !DIExpression()), !dbg !14196
  ret i64 %4, !dbg !14210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14211 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14213, metadata !DIExpression()), !dbg !14217
  call void @llvm.dbg.value(metadata i64 0, metadata !14214, metadata !DIExpression()), !dbg !14217
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.141(%struct._timeout* noundef %0) #25, !dbg !14218
  br i1 %2, label %21, label %3, !dbg !14220

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !14221
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14215, metadata !DIExpression()), !dbg !14222
  call void @llvm.dbg.value(metadata i64 0, metadata !14214, metadata !DIExpression()), !dbg !14217
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14223
  br i1 %5, label %16, label %6, !dbg !14225

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14215, metadata !DIExpression()), !dbg !14222
  call void @llvm.dbg.value(metadata i64 %8, metadata !14214, metadata !DIExpression()), !dbg !14217
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14226
  %10 = load i64, i64* %9, align 8, !dbg !14226
  %11 = add nsw i64 %10, %8, !dbg !14228
  call void @llvm.dbg.value(metadata i64 %11, metadata !14214, metadata !DIExpression()), !dbg !14217
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14229
  br i1 %12, label %16, label %13, !dbg !14231

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !14232
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14215, metadata !DIExpression()), !dbg !14222
  call void @llvm.dbg.value(metadata i64 %11, metadata !14214, metadata !DIExpression()), !dbg !14217
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14223
  br i1 %15, label %16, label %6, !dbg !14225, !llvm.loop !14233

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14217
  call void @llvm.dbg.value(metadata i64 %17, metadata !14214, metadata !DIExpression()), !dbg !14217
  %18 = tail call fastcc i32 @elapsed.129() #25, !dbg !14235
  %19 = sext i32 %18 to i64, !dbg !14235
  %20 = sub nsw i64 %17, %19, !dbg !14236
  br label %21, !dbg !14237

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14217
  ret i64 %22, !dbg !14238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.141(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14239 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14243, metadata !DIExpression()), !dbg !14244
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14245
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.138(%struct._dnode* noundef %2) #25, !dbg !14246
  %4 = xor i1 %3, true, !dbg !14247
  ret i1 %4, !dbg !14248
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14249 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14251, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i64 0, metadata !14252, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i32 0, metadata !14253, metadata !DIExpression()), !dbg !14257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13892, metadata !DIExpression()) #23, !dbg !14258
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14260, !srcloc !13907
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14260
  call void @llvm.dbg.value(metadata i32 %3, metadata !13904, metadata !DIExpression()) #23, !dbg !14262
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()) #23, !dbg !14262
  call void @llvm.dbg.value(metadata i32 %3, metadata !13898, metadata !DIExpression()) #23, !dbg !14258
  call void @llvm.dbg.value(metadata i32 %3, metadata !14255, metadata !DIExpression()), !dbg !14257
  call void @llvm.dbg.value(metadata i64 0, metadata !14252, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i32 undef, metadata !14253, metadata !DIExpression()), !dbg !14257
  %4 = load i64, i64* @curr_tick, align 8, !dbg !14263
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14266
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !14252, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14256
  call void @llvm.dbg.value(metadata i32 %3, metadata !13960, metadata !DIExpression()) #23, !dbg !14267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13965, metadata !DIExpression()) #23, !dbg !14267
  call void @llvm.dbg.value(metadata i32 %3, metadata !13968, metadata !DIExpression()) #23, !dbg !14269
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14271, !srcloc !13974
  call void @llvm.dbg.value(metadata i32 undef, metadata !14253, metadata !DIExpression()), !dbg !14257
  %6 = add i64 %5, %4, !dbg !14272
  ret i64 %6, !dbg !14273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14274 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14276, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i32 0, metadata !14277, metadata !DIExpression()), !dbg !14281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13892, metadata !DIExpression()) #23, !dbg !14282
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14284, !srcloc !13907
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14284
  call void @llvm.dbg.value(metadata i32 %2, metadata !13904, metadata !DIExpression()) #23, !dbg !14286
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()) #23, !dbg !14286
  call void @llvm.dbg.value(metadata i32 %2, metadata !13898, metadata !DIExpression()) #23, !dbg !14282
  call void @llvm.dbg.value(metadata i32 %2, metadata !14279, metadata !DIExpression()), !dbg !14281
  call void @llvm.dbg.value(metadata i32 -1, metadata !14276, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()), !dbg !14281
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !14287
  call void @llvm.dbg.value(metadata i32 %3, metadata !14276, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i32 %2, metadata !13960, metadata !DIExpression()) #23, !dbg !14290
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13965, metadata !DIExpression()) #23, !dbg !14290
  call void @llvm.dbg.value(metadata i32 %2, metadata !13968, metadata !DIExpression()) #23, !dbg !14292
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14294, !srcloc !13974
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()), !dbg !14281
  ret i32 %3, !dbg !14295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14298, metadata !DIExpression()), !dbg !14308
  call void @llvm.dbg.value(metadata i1 %1, metadata !14299, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14308
  call void @llvm.dbg.value(metadata i32 0, metadata !14300, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13892, metadata !DIExpression()) #23, !dbg !14310
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14312, !srcloc !13907
  call void @llvm.dbg.value(metadata i32 undef, metadata !13904, metadata !DIExpression()) #23, !dbg !14314
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()) #23, !dbg !14314
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()) #23, !dbg !14310
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14300, metadata !DIExpression()), !dbg !14309
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !14315
  call void @llvm.dbg.value(metadata i32 %4, metadata !14303, metadata !DIExpression()), !dbg !14316
  call void @llvm.dbg.value(metadata i1 undef, metadata !14306, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14316
  %5 = icmp slt i32 %4, 2, !dbg !14317
  call void @llvm.dbg.value(metadata i1 %5, metadata !14307, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14316
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14318
  call void @llvm.dbg.value(metadata i1 %6, metadata !14306, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14316
  br i1 %7, label %11, label %8, !dbg !14318

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14320
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14320
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !14322
  br label %11, !dbg !14323

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14312
  call void @llvm.dbg.value(metadata i32 %12, metadata !13904, metadata !DIExpression()) #23, !dbg !14314
  call void @llvm.dbg.value(metadata i32 %12, metadata !13898, metadata !DIExpression()) #23, !dbg !14310
  call void @llvm.dbg.value(metadata i32 %12, metadata !14302, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i32 undef, metadata !13960, metadata !DIExpression()) #23, !dbg !14324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13965, metadata !DIExpression()) #23, !dbg !14324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13968, metadata !DIExpression()) #23, !dbg !14326
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14328, !srcloc !13974
  call void @llvm.dbg.value(metadata i32 1, metadata !14300, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14300, metadata !DIExpression()), !dbg !14309
  ret void, !dbg !14329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14334, metadata !DIExpression()), !dbg !14339
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !14340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13892, metadata !DIExpression()) #23, !dbg !14341
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14343, !srcloc !13907
  call void @llvm.dbg.value(metadata i32 undef, metadata !13904, metadata !DIExpression()) #23, !dbg !14345
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()) #23, !dbg !14345
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()) #23, !dbg !14341
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()), !dbg !14339
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14339
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()), !dbg !14339
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !14346
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14347
  br i1 %4, label %28, label %5, !dbg !14348

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14349
  %10 = load i64, i64* %9, align 8, !dbg !14349
  %11 = sext i32 %8 to i64, !dbg !14350
  %12 = icmp sgt i64 %10, %11, !dbg !14351
  br i1 %12, label %26, label %13, !dbg !14352

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14339
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14336, metadata !DIExpression()), !dbg !14353
  %15 = trunc i64 %10 to i32, !dbg !14354
  call void @llvm.dbg.value(metadata i32 %15, metadata !14338, metadata !DIExpression()), !dbg !14353
  %16 = sext i32 %15 to i64, !dbg !14355
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14356
  %18 = add i64 %17, %16, !dbg !14356
  store i64 %18, i64* @curr_tick, align 8, !dbg !14356
  store i64 0, i64* %9, align 8, !dbg !14357
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !14358
  call void @llvm.dbg.value(metadata i32 %14, metadata !13960, metadata !DIExpression()) #23, !dbg !14359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13965, metadata !DIExpression()) #23, !dbg !14359
  call void @llvm.dbg.value(metadata i32 %14, metadata !13968, metadata !DIExpression()) #23, !dbg !14361
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14363, !srcloc !13974
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14364
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14364
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !14365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13892, metadata !DIExpression()) #23, !dbg !14366
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14368, !srcloc !13907
  call void @llvm.dbg.value(metadata i32 undef, metadata !13904, metadata !DIExpression()) #23, !dbg !14370
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()) #23, !dbg !14370
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()) #23, !dbg !14366
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()), !dbg !14339
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14371
  %23 = sub nsw i32 %22, %15, !dbg !14371
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14339
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()), !dbg !14339
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !14346
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14347
  br i1 %25, label %28, label %5, !dbg !14348, !llvm.loop !14372

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14374
  store i64 %27, i64* %9, align 8, !dbg !14374
  br label %32, !dbg !14377

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14339
  %31 = sext i32 %30 to i64, !dbg !14378
  br label %32, !dbg !14378

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14378
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14339
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14379
  %37 = add i64 %36, %33, !dbg !14379
  store i64 %37, i64* @curr_tick, align 8, !dbg !14379
  store i32 0, i32* @announce_remaining, align 4, !dbg !14380
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !14381
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !14382
  call void @llvm.dbg.value(metadata i32 %35, metadata !13960, metadata !DIExpression()) #23, !dbg !14383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13965, metadata !DIExpression()) #23, !dbg !14383
  call void @llvm.dbg.value(metadata i32 %35, metadata !13968, metadata !DIExpression()) #23, !dbg !14385
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14387, !srcloc !13974
  ret void, !dbg !14388
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14389 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14393, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.value(metadata i32 0, metadata !14394, metadata !DIExpression()), !dbg !14398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13892, metadata !DIExpression()) #23, !dbg !14399
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14401, !srcloc !13907
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14401
  call void @llvm.dbg.value(metadata i32 %2, metadata !13904, metadata !DIExpression()) #23, !dbg !14403
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()) #23, !dbg !14403
  call void @llvm.dbg.value(metadata i32 %2, metadata !13898, metadata !DIExpression()) #23, !dbg !14399
  call void @llvm.dbg.value(metadata i32 %2, metadata !14396, metadata !DIExpression()), !dbg !14398
  call void @llvm.dbg.value(metadata i64 0, metadata !14393, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression()), !dbg !14398
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14404
  %4 = tail call fastcc i32 @elapsed.129() #25, !dbg !14407
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14397
  call void @llvm.dbg.value(metadata i32 %2, metadata !13960, metadata !DIExpression()) #23, !dbg !14408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13965, metadata !DIExpression()) #23, !dbg !14408
  call void @llvm.dbg.value(metadata i32 %2, metadata !13968, metadata !DIExpression()) #23, !dbg !14410
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14412, !srcloc !13974
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression()), !dbg !14398
  %5 = sext i32 %4 to i64, !dbg !14407
  %6 = add i64 %3, %5, !dbg !14413
  ret i64 %6, !dbg !14414
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14415 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14416
  %2 = trunc i64 %1 to i32, !dbg !14417
  ret i32 %2, !dbg !14418
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14419 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14420
  ret i64 %1, !dbg !14421
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14424, metadata !DIExpression()), !dbg !14431
  %2 = icmp eq i32 %0, 0, !dbg !14432
  br i1 %2, label %10, label %3, !dbg !14434

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14435
  call void @llvm.dbg.value(metadata i32 %4, metadata !14425, metadata !DIExpression()), !dbg !14431
  %5 = mul i32 %0, 200, !dbg !14436
  call void @llvm.dbg.value(metadata i32 %5, metadata !14426, metadata !DIExpression()), !dbg !14431
  br label %6, !dbg !14437

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14438
  call void @llvm.dbg.value(metadata i32 %7, metadata !14427, metadata !DIExpression()), !dbg !14439
  %8 = sub i32 %7, %4, !dbg !14440
  %9 = icmp ult i32 %8, %5, !dbg !14442
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14444 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !14445
  ret i32 %1, !dbg !14446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14447 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !14449
  ret i32 %1, !dbg !14450
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14451 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14455, metadata !DIExpression()), !dbg !14457
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14458

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !14459
  br label %14, !dbg !14463

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14456, metadata !DIExpression()), !dbg !14457
  %6 = icmp slt i64 %2, -1, !dbg !14464
  br i1 %6, label %7, label %9, !dbg !14467

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14468
  br label %14, !dbg !14469

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !14471
  %11 = icmp ugt i64 %2, 1, !dbg !14472
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14472
  %13 = add nsw i64 %10, %12, !dbg !14473
  br label %14, !dbg !14474

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14475
  ret i64 %15, !dbg !14476
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !14477 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14480, metadata !DIExpression()), !dbg !14513
  %2 = icmp eq i8* %0, null, !dbg !14514
  br i1 %2, label %7, label %3, !dbg !14516

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !14481, metadata !DIExpression()), !dbg !14513
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !14517
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !14517
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !14481, metadata !DIExpression()), !dbg !14513
  call void @llvm.dbg.value(metadata i8* %4, metadata !14480, metadata !DIExpression()), !dbg !14513
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !14519
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #24, !dbg !14520
  br label %7, !dbg !14521

7:                                                ; preds = %3, %1
  ret void, !dbg !14522
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14527, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.value(metadata i32 %1, metadata !14528, metadata !DIExpression()), !dbg !14531
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !14532
  br i1 %3, label %11, label %4, !dbg !14534

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14535
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 5, !dbg !14537
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 4, !dbg !14537
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !14530, metadata !DIExpression()), !dbg !14531
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !14538
  br i1 %8, label %11, label %9, !dbg !14540

9:                                                ; preds = %4
  %10 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %7, i32 noundef %0, i32 noundef %1) #25, !dbg !14541
  call void @llvm.dbg.value(metadata i8* %10, metadata !14529, metadata !DIExpression()), !dbg !14531
  br label %11, !dbg !14543

11:                                               ; preds = %2, %4, %9
  %12 = phi i8* [ %10, %9 ], [ null, %4 ], [ null, %2 ], !dbg !14544
  call void @llvm.dbg.value(metadata i8* %12, metadata !14529, metadata !DIExpression()), !dbg !14531
  ret i8* %12, !dbg !14545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !14546 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !14550, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i32 %1, metadata !14551, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i32 %2, metadata !14552, metadata !DIExpression()), !dbg !14556
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !14552, metadata !DIExpression(DW_OP_deref)), !dbg !14556
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !14557
  br i1 %5, label %14, label %6, !dbg !14559

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !14560
  call void @llvm.dbg.value(metadata i32 %7, metadata !14555, metadata !DIExpression()), !dbg !14556
  %8 = load i32, i32* %4, align 4, !dbg !14561
  call void @llvm.dbg.value(metadata i32 %8, metadata !14552, metadata !DIExpression()), !dbg !14556
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #24, !dbg !14562
  call void @llvm.dbg.value(metadata i8* %9, metadata !14553, metadata !DIExpression()), !dbg !14556
  %10 = icmp eq i8* %9, null, !dbg !14563
  br i1 %10, label %14, label %11, !dbg !14565

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !14566
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !14554, metadata !DIExpression()), !dbg !14556
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !14567
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !14568
  call void @llvm.dbg.value(metadata i8* %13, metadata !14554, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i8* %13, metadata !14553, metadata !DIExpression()), !dbg !14556
  br label %14, !dbg !14569

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !14556
  ret i8* %15, !dbg !14570
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #22 !dbg !14571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14576, metadata !DIExpression()), !dbg !14579
  call void @llvm.dbg.value(metadata i32 4, metadata !14577, metadata !DIExpression()), !dbg !14579
  call void @llvm.dbg.value(metadata i32* %1, metadata !14578, metadata !DIExpression()), !dbg !14579
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !14580
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !14580
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !14580
  store i32 %5, i32* %1, align 4, !dbg !14580
  ret i1 %4, !dbg !14581
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14582 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.154, i32 0, i32 0)) #24, !dbg !14584
  ret void, !dbg !14585
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !14586 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14588, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !14589, metadata !DIExpression()), !dbg !14609
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !14610

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !14611

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !14589, metadata !DIExpression()), !dbg !14609
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !14612
  %6 = load i8*, i8** %5, align 4, !dbg !14612
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !14616
  %8 = load i32, i32* %7, align 4, !dbg !14616
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #25, !dbg !14617
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !14618
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !14589, metadata !DIExpression()), !dbg !14609
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !14619
  br i1 %10, label %3, label %2, !dbg !14610, !llvm.loop !14621
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14623 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !14627, metadata !DIExpression()), !dbg !14630
  call void @llvm.dbg.value(metadata i8* %1, metadata !14628, metadata !DIExpression()), !dbg !14630
  call void @llvm.dbg.value(metadata i32 %2, metadata !14629, metadata !DIExpression()), !dbg !14630
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !14631
  tail call fastcc void @z_waitq_init.156(%union.anon* noundef nonnull %4) #25, !dbg !14632
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !14633
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #24, !dbg !14634
  ret void, !dbg !14635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.156(%union.anon* noundef %0) unnamed_addr #4 !dbg !14636 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14641, metadata !DIExpression()), !dbg !14642
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14643
  tail call fastcc void @sys_dlist_init.157(%struct._dnode* noundef %2) #25, !dbg !14644
  ret void, !dbg !14645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.157(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14646 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14651, metadata !DIExpression()), !dbg !14652
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14653
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14654
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14655
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14656
  ret void, !dbg !14657
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14658 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !14669, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !14666, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata i32 %1, metadata !14667, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata i32 %2, metadata !14668, metadata !DIExpression()), !dbg !14679
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #24, !dbg !14680
  call void @llvm.dbg.value(metadata i64 %6, metadata !14671, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata i8* null, metadata !14672, metadata !DIExpression()), !dbg !14679
  %7 = icmp eq i64 %5, -1, !dbg !14681
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !14681
  call void @llvm.dbg.value(metadata i64 %8, metadata !14671, metadata !DIExpression()), !dbg !14679
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !14682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14683, metadata !DIExpression()) #23, !dbg !14690
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14692, !srcloc !14698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14696, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #23, !dbg !14690
  call void @llvm.dbg.value(metadata i32 undef, metadata !14673, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata i8 0, metadata !14678, metadata !DIExpression()), !dbg !14679
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !14672, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata i8 0, metadata !14678, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata i32 undef, metadata !14673, metadata !DIExpression()), !dbg !14679
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #24, !dbg !14700
  call void @llvm.dbg.value(metadata i8* %12, metadata !14672, metadata !DIExpression()), !dbg !14679
  %13 = tail call i64 @sys_clock_tick_get() #24, !dbg !14702
  call void @llvm.dbg.value(metadata i64 %13, metadata !14670, metadata !DIExpression()), !dbg !14679
  %14 = icmp eq i8* %12, null, !dbg !14703
  br i1 %14, label %15, label %31, !dbg !14705

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14673, metadata !DIExpression()), !dbg !14679
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !14705

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !14678, metadata !DIExpression()), !dbg !14679
  %20 = sub nsw i64 %8, %18, !dbg !14706
  %21 = icmp slt i64 %20, 1, !dbg !14707
  br i1 %21, label %31, label %22, !dbg !14708

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !14679
  call void @llvm.dbg.value(metadata i8 undef, metadata !14678, metadata !DIExpression()), !dbg !14679
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !14709
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !14709
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #24, !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14683, metadata !DIExpression()) #23, !dbg !14710
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14712, !srcloc !14698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()) #23, !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14696, metadata !DIExpression()) #23, !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #23, !dbg !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14673, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata i8* null, metadata !14672, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata i32 undef, metadata !14673, metadata !DIExpression()), !dbg !14679
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #24, !dbg !14700
  call void @llvm.dbg.value(metadata i8* %28, metadata !14672, metadata !DIExpression()), !dbg !14679
  %29 = tail call i64 @sys_clock_tick_get() #24, !dbg !14702
  call void @llvm.dbg.value(metadata i64 %29, metadata !14670, metadata !DIExpression()), !dbg !14679
  %30 = icmp eq i8* %28, null, !dbg !14703
  br i1 %30, label %17, label %31, !dbg !14705, !llvm.loop !14715

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !14700
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !14679
  call void @llvm.dbg.value(metadata i8* %33, metadata !14672, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata i32 %34, metadata !14718, metadata !DIExpression()) #23, !dbg !14724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14723, metadata !DIExpression()) #23, !dbg !14724
  call void @llvm.dbg.value(metadata i32 %34, metadata !14726, metadata !DIExpression()) #23, !dbg !14729
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #23, !dbg !14731, !srcloc !14732
  ret i8* %33, !dbg !14733
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14734 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14740, metadata !DIExpression()), !dbg !14742
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !14738, metadata !DIExpression()), !dbg !14742
  call void @llvm.dbg.value(metadata i32 %1, metadata !14739, metadata !DIExpression()), !dbg !14742
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #25, !dbg !14743
  call void @llvm.dbg.value(metadata i8* %4, metadata !14741, metadata !DIExpression()), !dbg !14742
  ret i8* %4, !dbg !14744
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14745 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !14749, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i8* %1, metadata !14750, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14683, metadata !DIExpression()) #23, !dbg !14753
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14755, !srcloc !14698
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14755
  call void @llvm.dbg.value(metadata i32 %4, metadata !14695, metadata !DIExpression()) #23, !dbg !14757
  call void @llvm.dbg.value(metadata i32 undef, metadata !14696, metadata !DIExpression()) #23, !dbg !14757
  call void @llvm.dbg.value(metadata i32 %4, metadata !14689, metadata !DIExpression()) #23, !dbg !14753
  call void @llvm.dbg.value(metadata i32 %4, metadata !14751, metadata !DIExpression()), !dbg !14752
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !14758
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #24, !dbg !14759
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !14760
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #24, !dbg !14762
  %8 = icmp eq i32 %7, 0, !dbg !14763
  br i1 %8, label %12, label %9, !dbg !14764

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !14765
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !14766
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #24, !dbg !14766
  br label %13, !dbg !14768

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !14718, metadata !DIExpression()) #23, !dbg !14769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14723, metadata !DIExpression()) #23, !dbg !14769
  call void @llvm.dbg.value(metadata i32 %4, metadata !14726, metadata !DIExpression()) #23, !dbg !14772
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14774, !srcloc !14732
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !14775
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1101, !2, !2242, !2244, !27, !2246, !2248, !2281, !2318, !111, !545, !2320, !2331, !2378, !2380, !2408, !2436, !2479, !2550, !2595, !2623, !725, !735, !915, !1112, !1393, !2628, !1653, !2630, !2633, !2710, !2724, !2736, !2861, !1683, !2864, !1689, !2046, !2882, !2884, !2069, !2925, !2178, !2928, !2930, !2217}
!llvm.ident = !{!2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932, !2932}
!llvm.module.flags = !{!2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !111, file: !530, line: 258, type: !531, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !113, retainedTypes: !396, globals: !529, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!113 = !{!114, !146, !156, !205, !211, !332, !367}
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !115, line: 54, baseType: !32, size: 32, elements: !116)
!115 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145}
!117 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!118 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!119 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!120 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!121 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!122 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!123 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!124 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!125 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!126 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!127 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!128 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!129 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!130 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!131 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!132 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!133 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!134 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!135 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!136 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!137 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!138 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!139 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!140 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!141 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!142 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!143 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!144 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!145 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !115, line: 224, baseType: !32, size: 32, elements: !147)
!147 = !{!148, !149, !150, !151, !152, !153, !154, !155}
!148 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!149 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!150 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!151 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!152 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!153 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!154 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!155 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !115, line: 275, baseType: !32, size: 32, elements: !157)
!157 = !{!158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204}
!158 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!159 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!160 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!161 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!162 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!163 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!164 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!165 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!166 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!167 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!168 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!169 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!170 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!171 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!172 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!173 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!174 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!175 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!176 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!177 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!178 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!179 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!180 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!181 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!182 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!183 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!184 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!185 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!186 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!187 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!188 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!189 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!190 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!191 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!192 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!193 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!194 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!195 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!196 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!197 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!198 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!199 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!200 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!201 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!202 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!203 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!204 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!205 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !115, line: 327, baseType: !32, size: 32, elements: !206)
!206 = !{!207, !208, !209, !210}
!207 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!208 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!209 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!210 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!211 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !212, line: 76, baseType: !32, size: 32, elements: !213)
!212 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !{!214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331}
!214 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!215 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!216 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!217 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!218 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!219 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!220 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!221 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!222 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!223 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!224 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!225 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!226 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!227 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!228 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!229 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!230 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!231 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!232 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!233 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!234 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!235 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!236 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!237 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!238 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!239 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!240 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!241 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!242 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!243 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!244 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!245 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!246 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!247 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!248 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!249 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!250 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!251 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!252 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!253 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!254 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!255 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!256 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!257 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!258 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!259 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!260 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!261 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!262 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!263 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!264 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!265 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!266 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!267 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!268 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!269 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!270 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!271 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!272 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!273 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!274 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!275 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!276 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!277 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!278 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!279 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!280 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!281 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!282 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!283 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!284 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!285 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!286 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!287 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!288 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!289 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!290 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!291 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!292 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!293 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!294 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!295 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!296 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!297 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!298 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!299 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!300 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!301 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!302 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!303 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!304 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!305 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!306 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!307 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!308 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!309 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!310 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!311 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!312 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!313 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!314 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!315 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!316 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!317 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!318 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!319 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!320 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!321 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!322 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!323 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!324 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!325 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!326 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!327 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!328 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!329 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!330 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!331 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!332 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !115, line: 237, baseType: !32, size: 32, elements: !333)
!333 = !{!334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366}
!334 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!335 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!336 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!337 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!338 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!339 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!340 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!341 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!342 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!343 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!344 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!345 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!346 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!347 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!348 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!349 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!350 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!351 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!352 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!353 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!354 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!355 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!356 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!357 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!358 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!359 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!360 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!361 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!362 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!363 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!364 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!365 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!366 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !212, line: 44, baseType: !32, size: 32, elements: !368)
!368 = !{!369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395}
!369 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!370 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!371 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!372 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!373 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!374 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!375 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!376 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!377 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!378 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!379 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!380 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!381 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!382 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!383 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!384 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!385 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!386 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!387 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!388 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!389 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!390 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!391 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!392 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!393 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!394 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!395 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!396 = !{!397, !472, !515, !528, !404}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !399, line: 4575, baseType: !400)
!399 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 4532, size: 390144, elements: !401)
!401 = !{!402, !405, !406, !407, !408, !414, !424, !428, !438, !442}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !400, file: !399, line: 4533, baseType: !403, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !404)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !400, file: !399, line: 4534, baseType: !403, size: 32, offset: 32)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !400, file: !399, line: 4535, baseType: !403, size: 32, offset: 64)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !400, file: !399, line: 4536, baseType: !403, size: 32, offset: 96)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !400, file: !399, line: 4537, baseType: !409, size: 16256, offset: 128)
!409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 16256, elements: !412)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !411)
!411 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!412 = !{!413}
!413 = !DISubrange(count: 2032)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !400, file: !399, line: 4543, baseType: !415, size: 4224, offset: 16384)
!415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !416, size: 4224, elements: !422)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !400, file: !399, line: 4538, size: 128, elements: !417)
!417 = !{!418, !419, !420, !421}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !416, file: !399, line: 4539, baseType: !403, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !416, file: !399, line: 4540, baseType: !403, size: 32, offset: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !416, file: !399, line: 4541, baseType: !403, size: 32, offset: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !416, file: !399, line: 4542, baseType: !403, size: 32, offset: 96)
!422 = !{!423}
!423 = !DISubrange(count: 33)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !400, file: !399, line: 4544, baseType: !425, size: 110464, offset: 20608)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 110464, elements: !426)
!426 = !{!427}
!427 = !DISubrange(count: 13808)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !400, file: !399, line: 4550, baseType: !429, size: 24448, offset: 131072)
!429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 24448, elements: !436)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !400, file: !399, line: 4545, size: 128, elements: !431)
!431 = !{!432, !433, !434, !435}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !430, file: !399, line: 4546, baseType: !403, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !430, file: !399, line: 4547, baseType: !403, size: 32, offset: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !430, file: !399, line: 4548, baseType: !403, size: 32, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !430, file: !399, line: 4549, baseType: !403, size: 32, offset: 96)
!436 = !{!437}
!437 = !DISubrange(count: 191)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !400, file: !399, line: 4551, baseType: !439, size: 106624, offset: 155520)
!439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 106624, elements: !440)
!440 = !{!441}
!441 = !DISubrange(count: 13328)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !400, file: !399, line: 4574, baseType: !443, size: 128000, offset: 262144)
!443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 128000, elements: !470)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !400, file: !399, line: 4552, size: 1024, elements: !445)
!445 = !{!446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !466, !467, !468, !469}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !444, file: !399, line: 4553, baseType: !403, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !444, file: !399, line: 4554, baseType: !403, size: 32, offset: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !444, file: !399, line: 4555, baseType: !403, size: 32, offset: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !444, file: !399, line: 4556, baseType: !403, size: 32, offset: 96)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !444, file: !399, line: 4557, baseType: !403, size: 32, offset: 128)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !444, file: !399, line: 4558, baseType: !403, size: 32, offset: 160)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !444, file: !399, line: 4559, baseType: !403, size: 32, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !444, file: !399, line: 4560, baseType: !403, size: 32, offset: 224)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !444, file: !399, line: 4561, baseType: !403, size: 32, offset: 256)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !444, file: !399, line: 4562, baseType: !403, size: 32, offset: 288)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !444, file: !399, line: 4563, baseType: !403, size: 32, offset: 320)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !444, file: !399, line: 4564, baseType: !403, size: 32, offset: 352)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !444, file: !399, line: 4565, baseType: !403, size: 32, offset: 384)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !444, file: !399, line: 4566, baseType: !403, size: 32, offset: 416)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !444, file: !399, line: 4567, baseType: !403, size: 32, offset: 448)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !444, file: !399, line: 4568, baseType: !403, size: 32, offset: 480)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !444, file: !399, line: 4569, baseType: !463, size: 384, offset: 512)
!463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 384, elements: !464)
!464 = !{!465}
!465 = !DISubrange(count: 48)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !444, file: !399, line: 4570, baseType: !403, size: 32, offset: 896)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !444, file: !399, line: 4571, baseType: !403, size: 32, offset: 928)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !444, file: !399, line: 4572, baseType: !403, size: 32, offset: 960)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !444, file: !399, line: 4573, baseType: !403, size: 32, offset: 992)
!470 = !{!471}
!471 = !DISubrange(count: 125)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !399, line: 38320, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 38303, size: 23040, elements: !475)
!475 = !{!476, !478, !482, !483, !484, !485, !489, !493, !497, !501, !505}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !474, file: !399, line: 38304, baseType: !477, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !403)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !474, file: !399, line: 38305, baseType: !479, size: 256, offset: 32)
!479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 256, elements: !480)
!480 = !{!481}
!481 = !DISubrange(count: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !474, file: !399, line: 38306, baseType: !403, size: 32, offset: 288)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !474, file: !399, line: 38307, baseType: !403, size: 32, offset: 320)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !474, file: !399, line: 38308, baseType: !403, size: 32, offset: 352)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !474, file: !399, line: 38309, baseType: !486, size: 3712, offset: 384)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 3712, elements: !487)
!487 = !{!488}
!488 = !DISubrange(count: 464)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !474, file: !399, line: 38310, baseType: !490, size: 864, offset: 4096)
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 864, elements: !491)
!491 = !{!492}
!492 = !DISubrange(count: 27)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !474, file: !399, line: 38311, baseType: !494, size: 3232, offset: 4960)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 3232, elements: !495)
!495 = !{!496}
!496 = !DISubrange(count: 404)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !474, file: !399, line: 38312, baseType: !498, size: 3776, offset: 8192)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 3776, elements: !499)
!499 = !{!500}
!500 = !DISubrange(count: 118)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !474, file: !399, line: 38313, baseType: !502, size: 4416, offset: 11968)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 4416, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 552)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !474, file: !399, line: 38319, baseType: !506, size: 6656, offset: 16384)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 6656, elements: !513)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !474, file: !399, line: 38314, size: 128, elements: !508)
!508 = !{!509, !510, !511, !512}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !507, file: !399, line: 38315, baseType: !403, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !507, file: !399, line: 38316, baseType: !403, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !507, file: !399, line: 38317, baseType: !403, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !507, file: !399, line: 38318, baseType: !403, size: 32, offset: 96)
!513 = !{!514}
!514 = !DISubrange(count: 52)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !399, line: 43319, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 43313, size: 80, elements: !518)
!518 = !{!519, !523, !524, !526, !527}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !517, file: !399, line: 43314, baseType: !520, size: 16)
!520 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !521)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !522)
!522 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !517, file: !399, line: 43315, baseType: !520, size: 16, offset: 16)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !517, file: !399, line: 43316, baseType: !525, size: 16, offset: 32)
!525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !520)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !517, file: !399, line: 43317, baseType: !520, size: 16, offset: 48)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !517, file: !399, line: 43318, baseType: !520, size: 16, offset: 64)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!529 = !{!109}
!530 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !533, line: 51, size: 64, elements: !534)
!533 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !542}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !532, file: !533, line: 60, baseType: !536, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 32)
!537 = !DISubroutineType(types: !538)
!538 = !{!103, !539}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !541)
!541 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !533, line: 48, flags: DIFlagFwdDecl)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !532, file: !533, line: 65, baseType: !539, size: 32, offset: 32)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(name: "free_queue", scope: !545, file: !652, line: 17, type: !653, isLocal: true, isDefinition: true, align: 32)
!545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !547, globals: !649, splitDebugInlining: false, nameTableKind: None)
!546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!547 = !{!102, !548, !552, !103, !554}
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !549, line: 46, baseType: !550)
!549 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !551)
!551 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !553, line: 214, baseType: !32)
!553 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !556)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !557, line: 336, size: 608, elements: !558)
!557 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!558 = !{!559, !589, !593, !597, !610, !615, !621, !627, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !556, file: !557, line: 365, baseType: !560, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = !DISubroutineType(types: !562)
!562 = !{!103, !563, !588}
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 32)
!564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !566, line: 378, size: 192, elements: !567)
!566 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!567 = !{!568, !572, !573, !574, !581, !582}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !565, file: !566, line: 380, baseType: !569, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !571)
!571 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !565, file: !566, line: 382, baseType: !13, size: 32, offset: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !565, file: !566, line: 384, baseType: !13, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !565, file: !566, line: 386, baseType: !575, size: 32, offset: 96)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 32)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !566, line: 351, size: 16, elements: !577)
!577 = !{!578, !579}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !576, file: !566, line: 359, baseType: !410, size: 8)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !576, file: !566, line: 364, baseType: !580, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!580 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !565, file: !566, line: 388, baseType: !102, size: 32, offset: 128)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !565, file: !566, line: 396, baseType: !583, size: 32, offset: 160)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !585)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !566, line: 43, baseType: !586)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !587)
!587 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !556, file: !557, line: 366, baseType: !590, size: 32, offset: 32)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 32)
!591 = !DISubroutineType(types: !592)
!592 = !{null, !563, !411}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !556, file: !557, line: 374, baseType: !594, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = !DISubroutineType(types: !596)
!596 = !{!103, !563}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !556, file: !557, line: 377, baseType: !598, size: 32, offset: 96)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 32)
!599 = !DISubroutineType(types: !600)
!600 = !{!103, !563, !601}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !603)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !557, line: 122, size: 64, elements: !604)
!604 = !{!605, !606, !607, !608, !609}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !603, file: !557, line: 123, baseType: !404, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !603, file: !557, line: 124, baseType: !410, size: 8, offset: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !603, file: !557, line: 125, baseType: !410, size: 8, offset: 40)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !603, file: !557, line: 126, baseType: !410, size: 8, offset: 48)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !603, file: !557, line: 127, baseType: !410, size: 8, offset: 56)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !556, file: !557, line: 379, baseType: !611, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 32)
!612 = !DISubroutineType(types: !613)
!613 = !{!103, !563, !614}
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !556, file: !557, line: 384, baseType: !616, size: 32, offset: 160)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DISubroutineType(types: !618)
!618 = !{!103, !563, !619, !103}
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !556, file: !557, line: 393, baseType: !622, size: 32, offset: 192)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = !DISubroutineType(types: !624)
!624 = !{!103, !563, !625, !626}
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !556, file: !557, line: 402, baseType: !628, size: 32, offset: 224)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 32)
!629 = !DISubroutineType(types: !630)
!630 = !{null, !563}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !556, file: !557, line: 405, baseType: !628, size: 32, offset: 256)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !556, file: !557, line: 408, baseType: !594, size: 32, offset: 288)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !556, file: !557, line: 411, baseType: !628, size: 32, offset: 320)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !556, file: !557, line: 414, baseType: !628, size: 32, offset: 352)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !556, file: !557, line: 417, baseType: !594, size: 32, offset: 384)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !556, file: !557, line: 420, baseType: !594, size: 32, offset: 416)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !556, file: !557, line: 423, baseType: !628, size: 32, offset: 448)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !556, file: !557, line: 426, baseType: !628, size: 32, offset: 480)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !556, file: !557, line: 429, baseType: !594, size: 32, offset: 512)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !556, file: !557, line: 432, baseType: !594, size: 32, offset: 544)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !556, file: !557, line: 435, baseType: !642, size: 32, offset: 576)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 32)
!643 = !DISubroutineType(types: !644)
!644 = !{null, !563, !645, !102}
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !557, line: 142, baseType: !646)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!647 = !DISubroutineType(types: !648)
!648 = !{null, !563, !102}
!649 = !{!543, !650, !697, !718}
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(name: "used_queue", scope: !545, file: !652, line: 18, type: !653, isLocal: true, isDefinition: true, align: 32)
!652 = !DIFile(filename: "zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !654, line: 2208, size: 128, elements: !655)
!654 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!655 = !{!656}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !653, file: !654, line: 2209, baseType: !657, size: 128)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !654, line: 1709, size: 128, elements: !658)
!658 = !{!659, !672, !676}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !657, file: !654, line: 1710, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !661, line: 46, baseType: !662)
!661 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !661, line: 41, size: 64, elements: !663)
!663 = !{!664, !671}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !662, file: !661, line: 42, baseType: !665, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !661, line: 39, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !661, line: 35, size: 32, elements: !668)
!668 = !{!669}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !667, file: !661, line: 36, baseType: !670, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !661, line: 32, baseType: !404)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !662, file: !661, line: 43, baseType: !665, size: 32, offset: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !657, file: !654, line: 1711, baseType: !673, offset: 64)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!674 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!675 = !{}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !657, file: !654, line: 1712, baseType: !677, size: 64, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !679)
!678 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !680)
!680 = !{!681}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !679, file: !678, line: 232, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !684)
!683 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !685)
!685 = !{!686, !692}
!686 = !DIDerivedType(tag: DW_TAG_member, scope: !684, file: !683, line: 38, baseType: !687, size: 32)
!687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !684, file: !683, line: 38, size: 32, elements: !688)
!688 = !{!689, !691}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !687, file: !683, line: 39, baseType: !690, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !687, file: !683, line: 40, baseType: !690, size: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, scope: !684, file: !683, line: 42, baseType: !693, size: 32, offset: 32)
!693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !684, file: !683, line: 42, size: 32, elements: !694)
!694 = !{!695, !696}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !693, file: !683, line: 43, baseType: !690, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !693, file: !683, line: 44, baseType: !690, size: 32)
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "cmd", scope: !699, file: !652, line: 22, type: !706, isLocal: true, isDefinition: true)
!699 = distinct !DISubprogram(name: "console_getline", scope: !652, file: !652, line: 20, type: !700, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !545, retainedNodes: !703)
!700 = !DISubroutineType(types: !701)
!701 = !{!702}
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!703 = !{!704}
!704 = !DILocalVariable(name: "ret", scope: !705, file: !652, line: 29, type: !102)
!705 = distinct !DILexicalBlock(scope: !699, file: !652, line: 29, column: 8)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 32)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !708, line: 21, size: 1088, elements: !709)
!708 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!709 = !{!710, !713, !714}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !707, file: !708, line: 23, baseType: !711, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !712)
!712 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !707, file: !708, line: 25, baseType: !410, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !707, file: !708, line: 27, baseType: !715, size: 1024, offset: 40)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 1024, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 128)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "line_bufs", scope: !545, file: !652, line: 15, type: !720, isLocal: true, isDefinition: true)
!720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 2176, elements: !721)
!721 = !{!722}
!722 = !DISubrange(count: 2)
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !725, file: !732, line: 21, type: !106, isLocal: true, isDefinition: true)
!725 = distinct !DICompileUnit(language: DW_LANG_C99, file: !726, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !727, globals: !731, splitDebugInlining: false, nameTableKind: None)
!726 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!727 = !{!728, !103, !102}
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !730, line: 22, baseType: !103)
!730 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!731 = !{!723}
!732 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "avail_queue", scope: !735, file: !739, line: 108, type: !836, isLocal: true, isDefinition: true)
!735 = distinct !DICompileUnit(language: DW_LANG_C99, file: !736, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !737, retainedTypes: !746, globals: !826, splitDebugInlining: false, nameTableKind: None)
!736 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!737 = !{!30, !738}
!738 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !739, line: 214, baseType: !32, size: 32, elements: !740)
!739 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!740 = !{!741, !742, !743, !744, !745}
!741 = !DIEnumerator(name: "ESC_ESC", value: 0)
!742 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!743 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!744 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!745 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!746 = !{!102, !103, !747, !32, !24}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !749)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !557, line: 336, size: 608, elements: !750)
!750 = !{!751, !770, !774, !778, !791, !796, !800, !804, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !749, file: !557, line: 365, baseType: !752, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 32)
!753 = !DISubroutineType(types: !754)
!754 = !{!103, !755, !588}
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !566, line: 378, size: 192, elements: !758)
!758 = !{!759, !760, !761, !762, !768, !769}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !757, file: !566, line: 380, baseType: !569, size: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !757, file: !566, line: 382, baseType: !13, size: 32, offset: 32)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !757, file: !566, line: 384, baseType: !13, size: 32, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !757, file: !566, line: 386, baseType: !763, size: 32, offset: 96)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !566, line: 351, size: 16, elements: !765)
!765 = !{!766, !767}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !764, file: !566, line: 359, baseType: !410, size: 8)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !764, file: !566, line: 364, baseType: !580, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !757, file: !566, line: 388, baseType: !102, size: 32, offset: 128)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !757, file: !566, line: 396, baseType: !583, size: 32, offset: 160)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !749, file: !557, line: 366, baseType: !771, size: 32, offset: 32)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 32)
!772 = !DISubroutineType(types: !773)
!773 = !{null, !755, !411}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !749, file: !557, line: 374, baseType: !775, size: 32, offset: 64)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!776 = !DISubroutineType(types: !777)
!777 = !{!103, !755}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !749, file: !557, line: 377, baseType: !779, size: 32, offset: 96)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 32)
!780 = !DISubroutineType(types: !781)
!781 = !{!103, !755, !782}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !784)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !557, line: 122, size: 64, elements: !785)
!785 = !{!786, !787, !788, !789, !790}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !784, file: !557, line: 123, baseType: !404, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !784, file: !557, line: 124, baseType: !410, size: 8, offset: 32)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !784, file: !557, line: 125, baseType: !410, size: 8, offset: 40)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !784, file: !557, line: 126, baseType: !410, size: 8, offset: 48)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !784, file: !557, line: 127, baseType: !410, size: 8, offset: 56)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !749, file: !557, line: 379, baseType: !792, size: 32, offset: 128)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 32)
!793 = !DISubroutineType(types: !794)
!794 = !{!103, !755, !795}
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !749, file: !557, line: 384, baseType: !797, size: 32, offset: 160)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DISubroutineType(types: !799)
!799 = !{!103, !755, !619, !103}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !749, file: !557, line: 393, baseType: !801, size: 32, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DISubroutineType(types: !803)
!803 = !{!103, !755, !625, !626}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !749, file: !557, line: 402, baseType: !805, size: 32, offset: 224)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DISubroutineType(types: !807)
!807 = !{null, !755}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !749, file: !557, line: 405, baseType: !805, size: 32, offset: 256)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !749, file: !557, line: 408, baseType: !775, size: 32, offset: 288)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !749, file: !557, line: 411, baseType: !805, size: 32, offset: 320)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !749, file: !557, line: 414, baseType: !805, size: 32, offset: 352)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !749, file: !557, line: 417, baseType: !775, size: 32, offset: 384)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !749, file: !557, line: 420, baseType: !775, size: 32, offset: 416)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !749, file: !557, line: 423, baseType: !805, size: 32, offset: 448)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !749, file: !557, line: 426, baseType: !805, size: 32, offset: 480)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !749, file: !557, line: 429, baseType: !775, size: 32, offset: 512)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !749, file: !557, line: 432, baseType: !775, size: 32, offset: 544)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !749, file: !557, line: 435, baseType: !819, size: 32, offset: 576)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!820 = !DISubroutineType(types: !821)
!821 = !{null, !755, !822, !102}
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !557, line: 142, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = !DISubroutineType(types: !825)
!825 = !{null, !755, !102}
!826 = !{!827, !733, !834, !874, !879, !882, !901, !905, !907, !909, !911}
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !735, file: !739, line: 603, type: !829, isLocal: true, isDefinition: true, align: 32)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !533, line: 51, size: 64, elements: !831)
!831 = !{!832, !833}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !830, file: !533, line: 60, baseType: !775, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !830, file: !533, line: 65, baseType: !755, size: 32, offset: 32)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "lines_queue", scope: !735, file: !739, line: 109, type: !836, isLocal: true, isDefinition: true)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 32)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !654, line: 2208, size: 128, elements: !838)
!838 = !{!839}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !837, file: !654, line: 2209, baseType: !840, size: 128)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !654, line: 1709, size: 128, elements: !841)
!841 = !{!842, !853, !855}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !840, file: !654, line: 1710, baseType: !843, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !661, line: 46, baseType: !844)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !661, line: 41, size: 64, elements: !845)
!845 = !{!846, !852}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !844, file: !661, line: 42, baseType: !847, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !661, line: 39, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !661, line: 35, size: 32, elements: !850)
!850 = !{!851}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !849, file: !661, line: 36, baseType: !670, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !844, file: !661, line: 43, baseType: !847, size: 32, offset: 32)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !840, file: !654, line: 1711, baseType: !854, offset: 64)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !840, file: !654, line: 1712, baseType: !856, size: 64, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !858)
!858 = !{!859}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !857, file: !678, line: 232, baseType: !860, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !862)
!862 = !{!863, !869}
!863 = !DIDerivedType(tag: DW_TAG_member, scope: !861, file: !683, line: 38, baseType: !864, size: 32)
!864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !861, file: !683, line: 38, size: 32, elements: !865)
!865 = !{!866, !868}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !864, file: !683, line: 39, baseType: !867, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !864, file: !683, line: 40, baseType: !867, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, scope: !861, file: !683, line: 42, baseType: !870, size: 32, offset: 32)
!870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !861, file: !683, line: 42, size: 32, elements: !871)
!871 = !{!872, !873}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !870, file: !683, line: 43, baseType: !867, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !870, file: !683, line: 44, baseType: !867, size: 32)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "completion_cb", scope: !735, file: !739, line: 110, type: !876, isLocal: true, isDefinition: true)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DISubroutineType(types: !878)
!878 = !{!410, !702, !410}
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !735, file: !739, line: 38, type: !881, isLocal: true, isDefinition: true)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !755)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "cmd", scope: !884, file: !739, line: 435, type: !895, isLocal: true, isDefinition: true)
!884 = distinct !DISubprogram(name: "uart_console_isr", scope: !739, file: !739, line: 428, type: !824, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !885)
!885 = !{!886, !887, !888, !890, !891}
!886 = !DILocalVariable(name: "unused", arg: 1, scope: !884, file: !739, line: 428, type: !755)
!887 = !DILocalVariable(name: "user_data", arg: 2, scope: !884, file: !739, line: 428, type: !102)
!888 = !DILocalVariable(name: "byte", scope: !889, file: !739, line: 436, type: !410)
!889 = distinct !DILexicalBlock(scope: !884, file: !739, line: 434, column: 48)
!890 = !DILocalVariable(name: "rx", scope: !889, file: !739, line: 437, type: !103)
!891 = !DILocalVariable(name: "ret", scope: !892, file: !739, line: 461, type: !102)
!892 = distinct !DILexicalBlock(scope: !893, file: !739, line: 461, column: 10)
!893 = distinct !DILexicalBlock(scope: !894, file: !739, line: 460, column: 13)
!894 = distinct !DILexicalBlock(scope: !889, file: !739, line: 460, column: 7)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !708, line: 21, size: 1088, elements: !897)
!897 = !{!898, !899, !900}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !896, file: !708, line: 23, baseType: !711, size: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !896, file: !708, line: 25, baseType: !410, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !896, file: !708, line: 27, baseType: !715, size: 1024, offset: 40)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "esc_state", scope: !735, file: !739, line: 228, type: !903, isLocal: true, isDefinition: true)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !904, line: 22, baseType: !712)
!904 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "ansi_val", scope: !735, file: !739, line: 229, type: !32, isLocal: true, isDefinition: true)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !735, file: !739, line: 229, type: !32, isLocal: true, isDefinition: true)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "cur", scope: !735, file: !739, line: 230, type: !410, isLocal: true, isDefinition: true)
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!912 = distinct !DIGlobalVariable(name: "end", scope: !735, file: !739, line: 230, type: !410, isLocal: true, isDefinition: true)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !915, file: !1019, line: 318, type: !1096, isLocal: false, isDefinition: true)
!915 = distinct !DICompileUnit(language: DW_LANG_C99, file: !916, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !917, retainedTypes: !934, globals: !1016, splitDebugInlining: false, nameTableKind: None)
!916 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!917 = !{!918, !924, !929}
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !919, line: 506, baseType: !32, size: 32, elements: !920)
!919 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!920 = !{!921, !922, !923}
!921 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!922 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!923 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!924 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !919, line: 512, baseType: !32, size: 32, elements: !925)
!925 = !{!926, !927, !928}
!926 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!927 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!928 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !930, line: 66, baseType: !32, size: 32, elements: !931)
!930 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!931 = !{!932, !933}
!932 = !DIEnumerator(name: "gpioPinClear", value: 0)
!933 = !DIEnumerator(name: "gpioPinSet", value: 1)
!934 = !{!935, !1005, !1010, !970, !924, !918, !1015, !102, !528, !985, !702}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !937)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !919, line: 523, size: 288, elements: !938)
!938 = !{!939, !960, !966, !971, !975, !976, !977, !981, !1001}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !937, file: !919, line: 524, baseType: !940, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = !DISubroutineType(types: !942)
!942 = !{!103, !943, !958, !959}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !566, line: 378, size: 192, elements: !946)
!946 = !{!947, !948, !949, !950, !956, !957}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !945, file: !566, line: 380, baseType: !569, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !945, file: !566, line: 382, baseType: !13, size: 32, offset: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !945, file: !566, line: 384, baseType: !13, size: 32, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !945, file: !566, line: 386, baseType: !951, size: 32, offset: 96)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !566, line: 351, size: 16, elements: !953)
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !952, file: !566, line: 359, baseType: !410, size: 8)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !952, file: !566, line: 364, baseType: !580, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !945, file: !566, line: 388, baseType: !102, size: 32, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !945, file: !566, line: 396, baseType: !583, size: 32, offset: 160)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !919, line: 237, baseType: !410)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !919, line: 257, baseType: !404)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !937, file: !919, line: 530, baseType: !961, size: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = !DISubroutineType(types: !963)
!963 = !{!103, !943, !964}
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !919, line: 229, baseType: !404)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !937, file: !919, line: 532, baseType: !967, size: 32, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{!103, !943, !970, !965}
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !919, line: 216, baseType: !404)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !937, file: !919, line: 535, baseType: !972, size: 32, offset: 96)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DISubroutineType(types: !974)
!974 = !{!103, !943, !970}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !937, file: !919, line: 537, baseType: !972, size: 32, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !937, file: !919, line: 539, baseType: !972, size: 32, offset: 160)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !937, file: !919, line: 541, baseType: !978, size: 32, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DISubroutineType(types: !980)
!980 = !{!103, !943, !958, !918, !924}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !937, file: !919, line: 544, baseType: !982, size: 32, offset: 224)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DISubroutineType(types: !984)
!984 = !{!103, !943, !985, !580}
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !919, line: 478, size: 96, elements: !987)
!987 = !{!988, !995, !1000}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !986, file: !919, line: 482, baseType: !989, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !990, line: 33, baseType: !991)
!990 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !990, line: 29, size: 32, elements: !992)
!992 = !{!993}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !991, file: !990, line: 30, baseType: !994, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !986, file: !919, line: 485, baseType: !996, size: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !919, line: 464, baseType: !997)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DISubroutineType(types: !999)
!999 = !{null, !943, !985, !970}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !986, file: !919, line: 493, baseType: !970, size: 32, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !937, file: !919, line: 547, baseType: !1002, size: 32, offset: 256)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!404, !943}
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !919, line: 428, size: 32, elements: !1008)
!1008 = !{!1009}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1007, file: !919, line: 434, baseType: !970, size: 32)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1012)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !919, line: 441, size: 32, elements: !1013)
!1013 = !{!1014}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1012, file: !919, line: 447, baseType: !970, size: 32)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1016 = !{!913, !1017, !1023, !1025, !1035, !1047, !1049, !1080, !1082, !1094}
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !915, file: !1019, line: 318, type: !1020, isLocal: false, isDefinition: true, align: 16)
!1019 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 400, elements: !1021)
!1021 = !{!1022}
!1022 = !DISubrange(count: 25)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !915, file: !1019, line: 318, type: !944, isLocal: false, isDefinition: true, align: 32)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !915, file: !1019, line: 318, type: !1027, isLocal: true, isDefinition: true, align: 32)
!1027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1028)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !533, line: 51, size: 64, elements: !1029)
!1029 = !{!1030, !1034}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1028, file: !533, line: 60, baseType: !1031, size: 32)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!103, !943}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1028, file: !533, line: 65, baseType: !943, size: 32, offset: 32)
!1035 = !DIGlobalVariableExpression(var: !1036, expr: !DIExpression())
!1036 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !915, file: !1019, line: 318, type: !1037, isLocal: true, isDefinition: true)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1019, line: 33, size: 96, elements: !1038)
!1038 = !{!1039, !1040}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1037, file: !1019, line: 35, baseType: !1012, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1037, file: !1019, line: 37, baseType: !1041, size: 64, offset: 32)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !990, line: 40, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !990, line: 35, size: 64, elements: !1043)
!1043 = !{!1044, !1046}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1042, file: !990, line: 36, baseType: !1045, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1042, file: !990, line: 37, baseType: !1045, size: 32, offset: 32)
!1047 = !DIGlobalVariableExpression(var: !1048, expr: !DIExpression())
!1048 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !915, file: !1019, line: 318, type: !952, isLocal: true, isDefinition: true, align: 8)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !915, file: !1019, line: 318, type: !1051, isLocal: true, isDefinition: true)
!1051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1019, line: 23, size: 128, elements: !1053)
!1053 = !{!1054, !1055, !1068, !1079}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1052, file: !1019, line: 25, baseType: !1007, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1052, file: !1019, line: 26, baseType: !1056, size: 32, offset: 32)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !399, line: 19729, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 19720, size: 256, elements: !1059)
!1059 = !{!1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1058, file: !399, line: 19721, baseType: !403, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1058, file: !399, line: 19722, baseType: !403, size: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1058, file: !399, line: 19723, baseType: !477, size: 32, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1058, file: !399, line: 19724, baseType: !403, size: 32, offset: 96)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1058, file: !399, line: 19725, baseType: !403, size: 32, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1058, file: !399, line: 19726, baseType: !403, size: 32, offset: 160)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1058, file: !399, line: 19727, baseType: !403, size: 32, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1058, file: !399, line: 19728, baseType: !403, size: 32, offset: 224)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1052, file: !1019, line: 28, baseType: !1069, size: 32, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1072, line: 51, size: 128, elements: !1073)
!1072 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1073 = !{!1074, !1075, !1076, !1077, !1078}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1071, file: !1072, line: 52, baseType: !404, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1071, file: !1072, line: 53, baseType: !404, size: 32, offset: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1071, file: !1072, line: 54, baseType: !404, size: 32, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1071, file: !1072, line: 55, baseType: !410, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1071, file: !1072, line: 56, baseType: !404, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1052, file: !1019, line: 29, baseType: !410, size: 8, offset: 96)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !915, file: !1019, line: 249, type: !936, isLocal: true, isDefinition: true)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1084, file: !1019, line: 318, type: !1087, isLocal: true, isDefinition: true, align: 32)
!1084 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1019, file: !1019, line: 318, type: !1032, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !1085)
!1085 = !{!1086}
!1086 = !DILocalVariable(name: "port", arg: 1, scope: !1084, file: !1019, line: 318, type: !943)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1088)
!1088 = !{!1089, !1091, !1092, !1093}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1087, file: !10, line: 55, baseType: !1090, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1087, file: !10, line: 57, baseType: !1090, size: 32, offset: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1087, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1087, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1084, file: !1019, line: 318, type: !1087, isLocal: true, isDefinition: true, align: 32)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 2048, elements: !1097)
!1097 = !{!1098}
!1098 = !DISubrange(count: 16)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1101, file: !1106, line: 7, type: !1107, isLocal: false, isDefinition: true, align: 16)
!1101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1102, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1103, splitDebugInlining: false, nameTableKind: None)
!1102 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!1103 = !{!1099, !1104}
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1101, file: !1106, line: 12, type: !1107, isLocal: false, isDefinition: true, align: 16)
!1106 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!1107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 48, elements: !1108)
!1108 = !{!1109}
!1109 = !DISubrange(count: 3)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1112, file: !1309, line: 339, type: !1307, isLocal: true, isDefinition: true)
!1112 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1113, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1114, retainedTypes: !1200, globals: !1345, splitDebugInlining: false, nameTableKind: None)
!1113 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!1114 = !{!30, !1115, !1153, !1181, !1185, !1189, !1194}
!1115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1116, line: 122, baseType: !32, size: 32, elements: !1117)
!1116 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1117 = !{!1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152}
!1118 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1119 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1120 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1121 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1122 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1123 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1124 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1125 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1126 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1127 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1128 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1129 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1130 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1131 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1132 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1133 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1134 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1135 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1136 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1137 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1138 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1139 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1140 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1141 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1142 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1143 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1144 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1145 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1146 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1147 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1148 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1149 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1150 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1151 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1152 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1116, line: 91, baseType: !32, size: 32, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180}
!1155 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1156 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1157 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1158 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1159 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1160 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1161 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1162 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1163 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1164 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1165 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1166 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1167 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1168 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1169 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1170 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1171 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1172 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1173 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1174 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1175 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1176 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1177 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1178 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1179 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1180 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1116, line: 60, baseType: !32, size: 32, elements: !1182)
!1182 = !{!1183, !1184}
!1183 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1184 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1116, line: 67, baseType: !32, size: 32, elements: !1186)
!1186 = !{!1187, !1188}
!1187 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1188 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1116, line: 74, baseType: !32, size: 32, elements: !1190)
!1190 = !{!1191, !1192, !1193}
!1191 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1192 = !DIEnumerator(name: "uartParityEven", value: 256)
!1193 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1194 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1116, line: 82, baseType: !32, size: 32, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1199}
!1196 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1197 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1198 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1199 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1200 = !{!102, !103, !1201, !1280, !1306, !1344, !404, !580, !410}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !557, line: 336, size: 608, elements: !1204)
!1204 = !{!1205, !1224, !1228, !1232, !1245, !1250, !1254, !1258, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1203, file: !557, line: 365, baseType: !1206, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!103, !1209, !588}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !566, line: 378, size: 192, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1222, !1223}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1211, file: !566, line: 380, baseType: !569, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1211, file: !566, line: 382, baseType: !13, size: 32, offset: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1211, file: !566, line: 384, baseType: !13, size: 32, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1211, file: !566, line: 386, baseType: !1217, size: 32, offset: 96)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !566, line: 351, size: 16, elements: !1219)
!1219 = !{!1220, !1221}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1218, file: !566, line: 359, baseType: !410, size: 8)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1218, file: !566, line: 364, baseType: !580, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1211, file: !566, line: 388, baseType: !102, size: 32, offset: 128)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1211, file: !566, line: 396, baseType: !583, size: 32, offset: 160)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1203, file: !557, line: 366, baseType: !1225, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{null, !1209, !411}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1203, file: !557, line: 374, baseType: !1229, size: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!103, !1209}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1203, file: !557, line: 377, baseType: !1233, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!103, !1209, !1236}
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !557, line: 122, size: 64, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1238, file: !557, line: 123, baseType: !404, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1238, file: !557, line: 124, baseType: !410, size: 8, offset: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1238, file: !557, line: 125, baseType: !410, size: 8, offset: 40)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1238, file: !557, line: 126, baseType: !410, size: 8, offset: 48)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1238, file: !557, line: 127, baseType: !410, size: 8, offset: 56)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1203, file: !557, line: 379, baseType: !1246, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!103, !1209, !1249}
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1203, file: !557, line: 384, baseType: !1251, size: 32, offset: 160)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!103, !1209, !619, !103}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1203, file: !557, line: 393, baseType: !1255, size: 32, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!103, !1209, !625, !626}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1203, file: !557, line: 402, baseType: !1259, size: 32, offset: 224)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{null, !1209}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1203, file: !557, line: 405, baseType: !1259, size: 32, offset: 256)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1203, file: !557, line: 408, baseType: !1229, size: 32, offset: 288)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1203, file: !557, line: 411, baseType: !1259, size: 32, offset: 320)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1203, file: !557, line: 414, baseType: !1259, size: 32, offset: 352)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1203, file: !557, line: 417, baseType: !1229, size: 32, offset: 384)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1203, file: !557, line: 420, baseType: !1229, size: 32, offset: 416)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1203, file: !557, line: 423, baseType: !1259, size: 32, offset: 448)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1203, file: !557, line: 426, baseType: !1259, size: 32, offset: 480)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1203, file: !557, line: 429, baseType: !1229, size: 32, offset: 512)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1203, file: !557, line: 432, baseType: !1229, size: 32, offset: 544)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1203, file: !557, line: 435, baseType: !1273, size: 32, offset: 576)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{null, !1209, !1276, !102}
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !557, line: 142, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{null, !1209, !102}
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !399, line: 41342, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 41322, size: 1504, elements: !1283)
!1283 = !{!1284, !1285, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1282, file: !399, line: 41323, baseType: !477, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1282, file: !399, line: 41324, baseType: !1286, size: 480, offset: 32)
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 480, elements: !1287)
!1287 = !{!1288}
!1288 = !DISubrange(count: 60)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1282, file: !399, line: 41325, baseType: !403, size: 32, offset: 512)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1282, file: !399, line: 41326, baseType: !1286, size: 480, offset: 544)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1282, file: !399, line: 41327, baseType: !403, size: 32, offset: 1024)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1282, file: !399, line: 41328, baseType: !403, size: 32, offset: 1056)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1282, file: !399, line: 41329, baseType: !403, size: 32, offset: 1088)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1282, file: !399, line: 41330, baseType: !403, size: 32, offset: 1120)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1282, file: !399, line: 41331, baseType: !403, size: 32, offset: 1152)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1282, file: !399, line: 41332, baseType: !403, size: 32, offset: 1184)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1282, file: !399, line: 41333, baseType: !403, size: 32, offset: 1216)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1282, file: !399, line: 41334, baseType: !403, size: 32, offset: 1248)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1282, file: !399, line: 41335, baseType: !403, size: 32, offset: 1280)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1282, file: !399, line: 41336, baseType: !403, size: 32, offset: 1312)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1282, file: !399, line: 41337, baseType: !403, size: 32, offset: 1344)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1282, file: !399, line: 41338, baseType: !477, size: 32, offset: 1376)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1282, file: !399, line: 41339, baseType: !403, size: 32, offset: 1408)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1282, file: !399, line: 41340, baseType: !403, size: 32, offset: 1440)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1282, file: !399, line: 41341, baseType: !403, size: 32, offset: 1472)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1309, line: 29, size: 160, elements: !1310)
!1309 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1310 = !{!1311, !1312, !1313, !1314, !1343}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1308, file: !1309, line: 30, baseType: !1280, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1308, file: !1309, line: 31, baseType: !404, size: 32, offset: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1308, file: !1309, line: 32, baseType: !410, size: 8, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1308, file: !1309, line: 33, baseType: !1315, size: 32, offset: 96)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1318, line: 60, size: 64, elements: !1319)
!1318 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1319 = !{!1320, !1342}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1317, file: !1318, line: 69, baseType: !1321, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1318, line: 50, size: 64, elements: !1324)
!1324 = !{!1325, !1340, !1341}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1323, file: !1318, line: 52, baseType: !1326, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1328)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1072, line: 64, baseType: !1329)
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1072, line: 59, size: 160, elements: !1330)
!1330 = !{!1331, !1339}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1329, file: !1072, line: 60, baseType: !1332, size: 128)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1072, line: 51, size: 128, elements: !1333)
!1333 = !{!1334, !1335, !1336, !1337, !1338}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1332, file: !1072, line: 52, baseType: !404, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1332, file: !1072, line: 53, baseType: !404, size: 32, offset: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1332, file: !1072, line: 54, baseType: !404, size: 32, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1332, file: !1072, line: 55, baseType: !410, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1332, file: !1072, line: 56, baseType: !404, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1329, file: !1072, line: 61, baseType: !404, size: 32, offset: 128)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1323, file: !1318, line: 54, baseType: !410, size: 8, offset: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1323, file: !1318, line: 56, baseType: !410, size: 8, offset: 40)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1317, file: !1318, line: 71, baseType: !410, size: 8, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1308, file: !1309, line: 35, baseType: !1259, size: 32, offset: 128)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!1345 = !{!1346, !1351, !1353, !1360, !1366, !1368, !1110, !1370, !1372, !1377, !1380}
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1112, file: !1309, line: 339, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 96, elements: !1349)
!1349 = !{!1350}
!1350 = !DISubrange(count: 6)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1112, file: !1309, line: 339, type: !1210, isLocal: false, isDefinition: true, align: 32)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1112, file: !1309, line: 339, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !533, line: 51, size: 64, elements: !1357)
!1357 = !{!1358, !1359}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1356, file: !533, line: 60, baseType: !1229, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1356, file: !533, line: 65, baseType: !1209, size: 32, offset: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1112, file: !1309, line: 339, type: !1362, isLocal: true, isDefinition: true)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1309, line: 39, size: 64, elements: !1363)
!1363 = !{!1364, !1365}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1362, file: !1309, line: 41, baseType: !1276, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1362, file: !1309, line: 42, baseType: !102, size: 32, offset: 32)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1112, file: !1309, line: 339, type: !1218, isLocal: true, isDefinition: true, align: 8)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1112, file: !1309, line: 270, type: !1202, isLocal: true, isDefinition: true)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1112, file: !1309, line: 339, type: !1316, isLocal: true, isDefinition: true)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1112, file: !1309, line: 339, type: !1374, isLocal: true, isDefinition: true)
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1322, size: 64, elements: !1375)
!1375 = !{!1376}
!1376 = !DISubrange(count: 1)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1112, file: !1309, line: 339, type: !1379, isLocal: true, isDefinition: true)
!1379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1327, size: 320, elements: !721)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1382, file: !1309, line: 339, type: !1385, isLocal: true, isDefinition: true, align: 32)
!1382 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1309, file: !1309, line: 339, type: !1260, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !1383)
!1383 = !{!1384}
!1384 = !DILocalVariable(name: "dev", arg: 1, scope: !1382, file: !1309, line: 339, type: !1209)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1386)
!1386 = !{!1387, !1388, !1389, !1390}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1385, file: !10, line: 55, baseType: !1090, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1385, file: !10, line: 57, baseType: !1090, size: 32, offset: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1385, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1385, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1393, file: !1618, line: 65, type: !403, isLocal: true, isDefinition: true)
!1393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1394, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1395, retainedTypes: !1536, globals: !1615, splitDebugInlining: false, nameTableKind: None)
!1394 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!1395 = !{!1396}
!1396 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !399, line: 103, baseType: !103, size: 32, elements: !1397)
!1397 = !{!1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535}
!1398 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1399 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1400 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1401 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1402 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1403 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1404 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1405 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1406 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1407 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1408 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1409 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1410 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1411 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1412 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1413 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1414 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1415 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1416 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1417 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1418 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1419 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1420 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1421 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1422 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1423 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1424 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1425 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1426 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1427 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1428 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1429 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1430 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1431 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1432 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1433 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1434 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1435 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1436 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1437 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1438 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1439 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1440 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1441 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1442 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1443 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1444 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1445 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1446 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1447 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1448 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1449 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1450 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1451 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1452 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1453 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1454 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1455 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1456 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1457 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1458 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1459 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1460 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1461 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1462 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1463 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1464 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1465 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1466 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1467 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1468 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1469 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1470 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1471 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1472 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1473 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1474 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1475 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1476 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1477 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1478 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1479 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1480 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1481 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1482 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1483 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1484 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1485 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1486 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1487 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1488 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1489 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1490 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1491 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1492 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1493 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1494 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1495 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1496 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1497 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1498 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1499 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1500 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1501 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1502 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1503 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1504 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1505 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1506 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1507 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1508 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1509 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1510 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1511 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1512 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1513 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1514 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1515 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1516 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1517 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1518 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1519 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1520 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1521 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1522 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1523 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1524 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1525 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1526 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1527 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1528 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1529 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1530 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1531 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1532 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1533 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1534 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1535 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1536 = !{!548, !1537, !1090, !410, !404, !1546, !1579}
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1539, line: 770, baseType: !1540)
!1539 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 764, size: 128, elements: !1541)
!1541 = !{!1542, !1543, !1544, !1545}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1540, file: !1539, line: 766, baseType: !403, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1540, file: !1539, line: 767, baseType: !403, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1540, file: !1539, line: 768, baseType: !403, size: 32, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1540, file: !1539, line: 769, baseType: !477, size: 32, offset: 96)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1539, line: 426, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 411, size: 28704, elements: !1549)
!1549 = !{!1550, !1554, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1569, !1574, !1578}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1548, file: !1539, line: 413, baseType: !1551, size: 256)
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 256, elements: !1552)
!1552 = !{!1553}
!1553 = !DISubrange(count: 8)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1548, file: !1539, line: 414, baseType: !1555, size: 768, offset: 256)
!1555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 768, elements: !1556)
!1556 = !{!1557}
!1557 = !DISubrange(count: 24)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1548, file: !1539, line: 415, baseType: !1551, size: 256, offset: 1024)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1548, file: !1539, line: 416, baseType: !1555, size: 768, offset: 1280)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1548, file: !1539, line: 417, baseType: !1551, size: 256, offset: 2048)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1548, file: !1539, line: 418, baseType: !1555, size: 768, offset: 2304)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1548, file: !1539, line: 419, baseType: !1551, size: 256, offset: 3072)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1548, file: !1539, line: 420, baseType: !1555, size: 768, offset: 3328)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1548, file: !1539, line: 421, baseType: !1551, size: 256, offset: 4096)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1548, file: !1539, line: 422, baseType: !1566, size: 1792, offset: 4352)
!1566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 1792, elements: !1567)
!1567 = !{!1568}
!1568 = !DISubrange(count: 56)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1548, file: !1539, line: 423, baseType: !1570, size: 1920, offset: 6144)
!1570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1571, size: 1920, elements: !1572)
!1571 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !410)
!1572 = !{!1573}
!1573 = !DISubrange(count: 240)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1548, file: !1539, line: 424, baseType: !1575, size: 20608, offset: 8064)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 20608, elements: !1576)
!1576 = !{!1577}
!1577 = !DISubrange(count: 644)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1548, file: !1539, line: 425, baseType: !403, size: 32, offset: 28672)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1539, line: 468, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 445, size: 1120, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1588, !1589, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1602, !1603, !1604, !1608, !1612, !1614}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1581, file: !1539, line: 447, baseType: !477, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1581, file: !1539, line: 448, baseType: !403, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1581, file: !1539, line: 449, baseType: !403, size: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1581, file: !1539, line: 450, baseType: !403, size: 32, offset: 96)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1581, file: !1539, line: 451, baseType: !403, size: 32, offset: 128)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1581, file: !1539, line: 452, baseType: !403, size: 32, offset: 160)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1581, file: !1539, line: 453, baseType: !1590, size: 96, offset: 192)
!1590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1571, size: 96, elements: !1591)
!1591 = !{!1592}
!1592 = !DISubrange(count: 12)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1581, file: !1539, line: 454, baseType: !403, size: 32, offset: 288)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1581, file: !1539, line: 455, baseType: !403, size: 32, offset: 320)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1581, file: !1539, line: 456, baseType: !403, size: 32, offset: 352)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1581, file: !1539, line: 457, baseType: !403, size: 32, offset: 384)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1581, file: !1539, line: 458, baseType: !403, size: 32, offset: 416)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1581, file: !1539, line: 459, baseType: !403, size: 32, offset: 448)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1581, file: !1539, line: 460, baseType: !403, size: 32, offset: 480)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1581, file: !1539, line: 461, baseType: !1601, size: 64, offset: 512)
!1601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !477, size: 64, elements: !721)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1581, file: !1539, line: 462, baseType: !477, size: 32, offset: 576)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1581, file: !1539, line: 463, baseType: !477, size: 32, offset: 608)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1581, file: !1539, line: 464, baseType: !1605, size: 128, offset: 640)
!1605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !477, size: 128, elements: !1606)
!1606 = !{!1607}
!1607 = !DISubrange(count: 4)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1581, file: !1539, line: 465, baseType: !1609, size: 160, offset: 768)
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !477, size: 160, elements: !1610)
!1610 = !{!1611}
!1611 = !DISubrange(count: 5)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1581, file: !1539, line: 466, baseType: !1613, size: 160, offset: 928)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 160, elements: !1610)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1581, file: !1539, line: 467, baseType: !403, size: 32, offset: 1088)
!1615 = !{!1616, !1642, !1645, !1647, !1649, !1391}
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1393, file: !1618, line: 285, type: !1619, isLocal: true, isDefinition: true, align: 32)
!1618 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !533, line: 51, size: 64, elements: !1621)
!1621 = !{!1622, !1641}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1620, file: !533, line: 60, baseType: !1623, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 32)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!103, !1626}
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !566, line: 378, size: 192, elements: !1629)
!1629 = !{!1630, !1631, !1632, !1633, !1639, !1640}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1628, file: !566, line: 380, baseType: !569, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1628, file: !566, line: 382, baseType: !13, size: 32, offset: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1628, file: !566, line: 384, baseType: !13, size: 32, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1628, file: !566, line: 386, baseType: !1634, size: 32, offset: 96)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 32)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !566, line: 351, size: 16, elements: !1636)
!1636 = !{!1637, !1638}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1635, file: !566, line: 359, baseType: !410, size: 8)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1635, file: !566, line: 364, baseType: !580, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1628, file: !566, line: 388, baseType: !102, size: 32, offset: 128)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1628, file: !566, line: 396, baseType: !583, size: 32, offset: 160)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1620, file: !533, line: 65, baseType: !1626, size: 32, offset: 32)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "lock", scope: !1393, file: !1618, line: 34, type: !1644, isLocal: true, isDefinition: true)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "last_load", scope: !1393, file: !1618, line: 36, type: !404, isLocal: true, isDefinition: true)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1393, file: !1618, line: 48, type: !404, isLocal: true, isDefinition: true)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1393, file: !1618, line: 54, type: !404, isLocal: true, isDefinition: true)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1653, file: !1657, line: 69, type: !1658, isLocal: true, isDefinition: true, align: 32)
!1653 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1654, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1655, globals: !1656, splitDebugInlining: false, nameTableKind: None)
!1654 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!1655 = !{!528, !22}
!1656 = !{!1651}
!1657 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !533, line: 51, size: 64, elements: !1660)
!1660 = !{!1661, !1680}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1659, file: !533, line: 60, baseType: !1662, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!103, !1665}
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1667)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !566, line: 378, size: 192, elements: !1668)
!1668 = !{!1669, !1670, !1671, !1672, !1678, !1679}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1667, file: !566, line: 380, baseType: !569, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1667, file: !566, line: 382, baseType: !13, size: 32, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1667, file: !566, line: 384, baseType: !13, size: 32, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1667, file: !566, line: 386, baseType: !1673, size: 32, offset: 96)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !566, line: 351, size: 16, elements: !1675)
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1674, file: !566, line: 359, baseType: !410, size: 8)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1674, file: !566, line: 364, baseType: !580, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1667, file: !566, line: 388, baseType: !102, size: 32, offset: 128)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1667, file: !566, line: 396, baseType: !583, size: 32, offset: 160)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1659, file: !533, line: 65, baseType: !1665, size: 32, offset: 32)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1683, file: !1686, line: 23, type: !626, isLocal: false, isDefinition: true)
!1683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1685, splitDebugInlining: false, nameTableKind: None)
!1684 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!1685 = !{!1681}
!1686 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1689, file: !1693, line: 86, type: !1942, isLocal: false, isDefinition: true, align: 64)
!1689 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1690, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1691, retainedTypes: !1700, globals: !1773, splitDebugInlining: false, nameTableKind: None)
!1690 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!1691 = !{!1692, !30, !1396}
!1692 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1693, line: 63, baseType: !32, size: 32, elements: !1694)
!1693 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1694 = !{!1695, !1696, !1697, !1698, !1699}
!1695 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1696 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1697 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1698 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1699 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1700 = !{!552, !102, !103, !1701, !702, !404, !1731, !1090, !410, !1756}
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1704, line: 51, size: 64, elements: !1705)
!1704 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1705 = !{!1706, !1726}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1703, file: !1704, line: 52, baseType: !1707, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1704, line: 38, baseType: !1708)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{!103, !1711, !625, !521}
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !566, line: 378, size: 192, elements: !1714)
!1714 = !{!1715, !1716, !1717, !1718, !1724, !1725}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1713, file: !566, line: 380, baseType: !569, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1713, file: !566, line: 382, baseType: !13, size: 32, offset: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1713, file: !566, line: 384, baseType: !13, size: 32, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1713, file: !566, line: 386, baseType: !1719, size: 32, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !566, line: 351, size: 16, elements: !1721)
!1721 = !{!1722, !1723}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1720, file: !566, line: 359, baseType: !410, size: 8)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1720, file: !566, line: 364, baseType: !580, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1713, file: !566, line: 388, baseType: !102, size: 32, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1713, file: !566, line: 396, baseType: !583, size: 32, offset: 160)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1703, file: !1704, line: 53, baseType: !1727, size: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1704, line: 47, baseType: !1728)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!103, !1711, !625, !521, !404}
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1539, line: 468, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 445, size: 1120, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1733, file: !1539, line: 447, baseType: !477, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1733, file: !1539, line: 448, baseType: !403, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1733, file: !1539, line: 449, baseType: !403, size: 32, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1733, file: !1539, line: 450, baseType: !403, size: 32, offset: 96)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1733, file: !1539, line: 451, baseType: !403, size: 32, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1733, file: !1539, line: 452, baseType: !403, size: 32, offset: 160)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1733, file: !1539, line: 453, baseType: !1590, size: 96, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1733, file: !1539, line: 454, baseType: !403, size: 32, offset: 288)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1733, file: !1539, line: 455, baseType: !403, size: 32, offset: 320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1733, file: !1539, line: 456, baseType: !403, size: 32, offset: 352)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1733, file: !1539, line: 457, baseType: !403, size: 32, offset: 384)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1733, file: !1539, line: 458, baseType: !403, size: 32, offset: 416)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1733, file: !1539, line: 459, baseType: !403, size: 32, offset: 448)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1733, file: !1539, line: 460, baseType: !403, size: 32, offset: 480)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1733, file: !1539, line: 461, baseType: !1601, size: 64, offset: 512)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1733, file: !1539, line: 462, baseType: !477, size: 32, offset: 576)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1733, file: !1539, line: 463, baseType: !477, size: 32, offset: 608)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1733, file: !1539, line: 464, baseType: !1605, size: 128, offset: 640)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1733, file: !1539, line: 465, baseType: !1609, size: 160, offset: 768)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1733, file: !1539, line: 466, baseType: !1613, size: 160, offset: 928)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1733, file: !1539, line: 467, baseType: !403, size: 32, offset: 1088)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1539, line: 426, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 411, size: 28704, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1758, file: !1539, line: 413, baseType: !1551, size: 256)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1758, file: !1539, line: 414, baseType: !1555, size: 768, offset: 256)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1758, file: !1539, line: 415, baseType: !1551, size: 256, offset: 1024)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1758, file: !1539, line: 416, baseType: !1555, size: 768, offset: 1280)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1758, file: !1539, line: 417, baseType: !1551, size: 256, offset: 2048)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1758, file: !1539, line: 418, baseType: !1555, size: 768, offset: 2304)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1758, file: !1539, line: 419, baseType: !1551, size: 256, offset: 3072)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1758, file: !1539, line: 420, baseType: !1555, size: 768, offset: 3328)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1758, file: !1539, line: 421, baseType: !1551, size: 256, offset: 4096)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1758, file: !1539, line: 422, baseType: !1566, size: 1792, offset: 4352)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1758, file: !1539, line: 423, baseType: !1570, size: 1920, offset: 6144)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1758, file: !1539, line: 424, baseType: !1575, size: 20608, offset: 8064)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1758, file: !1539, line: 425, baseType: !403, size: 32, offset: 28672)
!1773 = !{!1774, !1898, !1907, !1909, !1687, !1912, !1914, !1919}
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "_kernel", scope: !1689, file: !1693, line: 40, type: !1776, isLocal: false, isDefinition: true)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !678, line: 158, size: 288, elements: !1777)
!1777 = !{!1778, !1893}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1776, file: !678, line: 159, baseType: !1779, size: 192)
!1779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1780, size: 192, elements: !1375)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !678, line: 100, size: 192, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1887, !1888, !1889, !1890}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1780, file: !678, line: 102, baseType: !404, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1780, file: !678, line: 105, baseType: !702, size: 32, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1780, file: !678, line: 108, baseType: !1785, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1787, line: 245, size: 896, elements: !1788)
!1787 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1788 = !{!1789, !1850, !1863, !1864, !1865, !1866, !1882}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1786, file: !1787, line: 247, baseType: !1790, size: 384)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1787, line: 57, size: 384, elements: !1791)
!1791 = !{!1792, !1817, !1824, !1825, !1826, !1837, !1838, !1839}
!1792 = !DIDerivedType(tag: DW_TAG_member, scope: !1790, file: !1787, line: 60, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1790, file: !1787, line: 60, size: 64, elements: !1794)
!1794 = !{!1795, !1810}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1793, file: !1787, line: 61, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !683, line: 49, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !1798)
!1798 = !{!1799, !1805}
!1799 = !DIDerivedType(tag: DW_TAG_member, scope: !1797, file: !683, line: 38, baseType: !1800, size: 32)
!1800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1797, file: !683, line: 38, size: 32, elements: !1801)
!1801 = !{!1802, !1804}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1800, file: !683, line: 39, baseType: !1803, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1800, file: !683, line: 40, baseType: !1803, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, scope: !1797, file: !683, line: 42, baseType: !1806, size: 32, offset: 32)
!1806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1797, file: !683, line: 42, size: 32, elements: !1807)
!1807 = !{!1808, !1809}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1806, file: !683, line: 43, baseType: !1803, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1806, file: !683, line: 44, baseType: !1803, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1793, file: !1787, line: 62, baseType: !1811, size: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1812, line: 49, size: 64, elements: !1813)
!1812 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1813 = !{!1814}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1811, file: !1812, line: 50, baseType: !1815, size: 64)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1816, size: 64, elements: !721)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1790, file: !1787, line: 68, baseType: !1818, size: 32, offset: 64)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !1821)
!1821 = !{!1822}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1820, file: !678, line: 232, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !1797)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1790, file: !1787, line: 71, baseType: !410, size: 8, offset: 96)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1790, file: !1787, line: 74, baseType: !410, size: 8, offset: 104)
!1826 = !DIDerivedType(tag: DW_TAG_member, scope: !1790, file: !1787, line: 90, baseType: !1827, size: 16, offset: 112)
!1827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1790, file: !1787, line: 90, size: 16, elements: !1828)
!1828 = !{!1829, !1836}
!1829 = !DIDerivedType(tag: DW_TAG_member, scope: !1827, file: !1787, line: 91, baseType: !1830, size: 16)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1827, file: !1787, line: 91, size: 16, elements: !1831)
!1831 = !{!1832, !1835}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1830, file: !1787, line: 96, baseType: !1833, size: 8)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !1834)
!1834 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1830, file: !1787, line: 97, baseType: !410, size: 8, offset: 8)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1827, file: !1787, line: 100, baseType: !521, size: 16)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1790, file: !1787, line: 107, baseType: !404, size: 32, offset: 128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1790, file: !1787, line: 127, baseType: !102, size: 32, offset: 160)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1790, file: !1787, line: 131, baseType: !1840, size: 192, offset: 192)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !678, line: 244, size: 192, elements: !1841)
!1841 = !{!1842, !1843, !1849}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1840, file: !678, line: 245, baseType: !1796, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1840, file: !678, line: 246, baseType: !1844, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !678, line: 242, baseType: !1845)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{null, !1848}
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1840, file: !678, line: 249, baseType: !550, size: 64, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1786, file: !1787, line: 250, baseType: !1851, size: 288, offset: 384)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1852, line: 25, size: 288, elements: !1853)
!1852 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1853 = !{!1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1851, file: !1852, line: 26, baseType: !404, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1851, file: !1852, line: 27, baseType: !404, size: 32, offset: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1851, file: !1852, line: 28, baseType: !404, size: 32, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1851, file: !1852, line: 29, baseType: !404, size: 32, offset: 96)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1851, file: !1852, line: 30, baseType: !404, size: 32, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1851, file: !1852, line: 31, baseType: !404, size: 32, offset: 160)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1851, file: !1852, line: 32, baseType: !404, size: 32, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1851, file: !1852, line: 33, baseType: !404, size: 32, offset: 224)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1851, file: !1852, line: 34, baseType: !404, size: 32, offset: 256)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1786, file: !1787, line: 253, baseType: !102, size: 32, offset: 672)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1786, file: !1787, line: 256, baseType: !1819, size: 64, offset: 704)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1786, file: !1787, line: 294, baseType: !103, size: 32, offset: 768)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1786, file: !1787, line: 325, baseType: !1867, size: 32, offset: 800)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !654, line: 5073, size: 160, elements: !1869)
!1869 = !{!1870, !1879, !1880}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1868, file: !654, line: 5074, baseType: !1871, size: 96)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !1873)
!1872 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1873 = !{!1874, !1877, !1878}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1871, file: !1872, line: 57, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !1872, line: 57, flags: DIFlagFwdDecl)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1871, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1871, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1868, file: !654, line: 5075, baseType: !1819, size: 64, offset: 96)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1868, file: !654, line: 5076, baseType: !1881, offset: 160)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1786, file: !1787, line: 343, baseType: !1883, size: 64, offset: 832)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1852, line: 60, size: 64, elements: !1884)
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1883, file: !1852, line: 63, baseType: !404, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1883, file: !1852, line: 66, baseType: !404, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1780, file: !678, line: 111, baseType: !1785, size: 32, offset: 96)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1780, file: !678, line: 124, baseType: !103, size: 32, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1780, file: !678, line: 127, baseType: !410, size: 8, offset: 160)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1780, file: !678, line: 153, baseType: !1891, offset: 168)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1892, line: 33, elements: !675)
!1892 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1776, file: !678, line: 170, baseType: !1894, size: 96, offset: 192)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !678, line: 83, size: 96, elements: !1895)
!1895 = !{!1896, !1897}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1894, file: !678, line: 86, baseType: !1785, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1894, file: !678, line: 90, baseType: !1823, size: 64, offset: 32)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1689, file: !1693, line: 43, type: !1900, isLocal: false, isDefinition: true, align: 64)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1901, size: 8192, elements: !1905)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1902, line: 47, size: 8, elements: !1903)
!1902 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1903 = !{!1904}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1901, file: !1902, line: 48, baseType: !571, size: 8)
!1905 = !{!1906}
!1906 = !DISubrange(count: 1024)
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1689, file: !1693, line: 44, type: !1786, isLocal: false, isDefinition: true)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1689, file: !1693, line: 48, type: !1911, isLocal: false, isDefinition: true)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1786, size: 896, elements: !1375)
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1689, file: !1693, line: 217, type: !580, isLocal: false, isDefinition: true)
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1689, file: !1693, line: 50, type: !1916, isLocal: true, isDefinition: true, align: 64)
!1916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1901, size: 2560, elements: !1917)
!1917 = !{!1376, !1918}
!1918 = !DISubrange(count: 320)
!1919 = !DIGlobalVariableExpression(var: !1920, expr: !DIExpression())
!1920 = distinct !DIGlobalVariable(name: "levels", scope: !1921, file: !1693, line: 232, type: !1941, isLocal: true, isDefinition: true)
!1921 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1693, file: !1693, line: 230, type: !1922, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !1924)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{null, !1692}
!1924 = !{!1925, !1926, !1936, !1940}
!1925 = !DILocalVariable(name: "level", arg: 1, scope: !1921, file: !1693, line: 230, type: !1692)
!1926 = !DILocalVariable(name: "entry", scope: !1921, file: !1693, line: 244, type: !1927)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1929)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !533, line: 51, size: 64, elements: !1930)
!1930 = !{!1931, !1935}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1929, file: !533, line: 60, baseType: !1932, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 32)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!103, !1711}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1929, file: !533, line: 65, baseType: !1711, size: 32, offset: 32)
!1936 = !DILocalVariable(name: "dev", scope: !1937, file: !1693, line: 247, type: !1711)
!1937 = distinct !DILexicalBlock(scope: !1938, file: !1693, line: 246, column: 64)
!1938 = distinct !DILexicalBlock(scope: !1939, file: !1693, line: 246, column: 2)
!1939 = distinct !DILexicalBlock(scope: !1921, file: !1693, line: 246, column: 2)
!1940 = !DILocalVariable(name: "rc", scope: !1937, file: !1693, line: 248, type: !103)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1927, size: 192, elements: !1349)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1901, size: 16384, elements: !1943)
!1943 = !{!1376, !1944}
!1944 = !DISubrange(count: 2048)
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(name: "states_str", scope: !1947, file: !1948, line: 276, type: !2066, isLocal: true, isDefinition: true)
!1947 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1948, file: !1948, line: 271, type: !1949, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !2057)
!1948 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!569, !1951, !702, !552}
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1787, line: 347, baseType: !1952)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 32)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1787, line: 245, size: 896, elements: !1954)
!1954 = !{!1955, !2013, !2025, !2026, !2027, !2028, !2041}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1953, file: !1787, line: 247, baseType: !1956, size: 384)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1787, line: 57, size: 384, elements: !1957)
!1957 = !{!1958, !1982, !1989, !1990, !1991, !2000, !2001, !2002}
!1958 = !DIDerivedType(tag: DW_TAG_member, scope: !1956, file: !1787, line: 60, baseType: !1959, size: 64)
!1959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1956, file: !1787, line: 60, size: 64, elements: !1960)
!1960 = !{!1961, !1976}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1959, file: !1787, line: 61, baseType: !1962, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !683, line: 49, baseType: !1963)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !1964)
!1964 = !{!1965, !1971}
!1965 = !DIDerivedType(tag: DW_TAG_member, scope: !1963, file: !683, line: 38, baseType: !1966, size: 32)
!1966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1963, file: !683, line: 38, size: 32, elements: !1967)
!1967 = !{!1968, !1970}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1966, file: !683, line: 39, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1966, file: !683, line: 40, baseType: !1969, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, scope: !1963, file: !683, line: 42, baseType: !1972, size: 32, offset: 32)
!1972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1963, file: !683, line: 42, size: 32, elements: !1973)
!1973 = !{!1974, !1975}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1972, file: !683, line: 43, baseType: !1969, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1972, file: !683, line: 44, baseType: !1969, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1959, file: !1787, line: 62, baseType: !1977, size: 64)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1812, line: 49, size: 64, elements: !1978)
!1978 = !{!1979}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1977, file: !1812, line: 50, baseType: !1980, size: 64)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1981, size: 64, elements: !721)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1956, file: !1787, line: 68, baseType: !1983, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !1986)
!1986 = !{!1987}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1985, file: !678, line: 232, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !1963)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1956, file: !1787, line: 71, baseType: !410, size: 8, offset: 96)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1956, file: !1787, line: 74, baseType: !410, size: 8, offset: 104)
!1991 = !DIDerivedType(tag: DW_TAG_member, scope: !1956, file: !1787, line: 90, baseType: !1992, size: 16, offset: 112)
!1992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1956, file: !1787, line: 90, size: 16, elements: !1993)
!1993 = !{!1994, !1999}
!1994 = !DIDerivedType(tag: DW_TAG_member, scope: !1992, file: !1787, line: 91, baseType: !1995, size: 16)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1992, file: !1787, line: 91, size: 16, elements: !1996)
!1996 = !{!1997, !1998}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1995, file: !1787, line: 96, baseType: !1833, size: 8)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1995, file: !1787, line: 97, baseType: !410, size: 8, offset: 8)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1992, file: !1787, line: 100, baseType: !521, size: 16)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1956, file: !1787, line: 107, baseType: !404, size: 32, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1956, file: !1787, line: 127, baseType: !102, size: 32, offset: 160)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1956, file: !1787, line: 131, baseType: !2003, size: 192, offset: 192)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !678, line: 244, size: 192, elements: !2004)
!2004 = !{!2005, !2006, !2012}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2003, file: !678, line: 245, baseType: !1962, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2003, file: !678, line: 246, baseType: !2007, size: 32, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !678, line: 242, baseType: !2008)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 32)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{null, !2011}
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2003, file: !678, line: 249, baseType: !550, size: 64, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1953, file: !1787, line: 250, baseType: !2014, size: 288, offset: 384)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1852, line: 25, size: 288, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2014, file: !1852, line: 26, baseType: !404, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2014, file: !1852, line: 27, baseType: !404, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2014, file: !1852, line: 28, baseType: !404, size: 32, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2014, file: !1852, line: 29, baseType: !404, size: 32, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2014, file: !1852, line: 30, baseType: !404, size: 32, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2014, file: !1852, line: 31, baseType: !404, size: 32, offset: 160)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2014, file: !1852, line: 32, baseType: !404, size: 32, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2014, file: !1852, line: 33, baseType: !404, size: 32, offset: 224)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2014, file: !1852, line: 34, baseType: !404, size: 32, offset: 256)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1953, file: !1787, line: 253, baseType: !102, size: 32, offset: 672)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1953, file: !1787, line: 256, baseType: !1984, size: 64, offset: 704)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1953, file: !1787, line: 294, baseType: !103, size: 32, offset: 768)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1953, file: !1787, line: 325, baseType: !2029, size: 32, offset: 800)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !654, line: 5073, size: 160, elements: !2031)
!2031 = !{!2032, !2038, !2039}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2030, file: !654, line: 5074, baseType: !2033, size: 96)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !2034)
!2034 = !{!2035, !2036, !2037}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2033, file: !1872, line: 57, baseType: !1875, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2033, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2033, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2030, file: !654, line: 5075, baseType: !1984, size: 64, offset: 96)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2030, file: !654, line: 5076, baseType: !2040, offset: 160)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1953, file: !1787, line: 343, baseType: !2042, size: 64, offset: 832)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1852, line: 60, size: 64, elements: !2043)
!2043 = !{!2044, !2045}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2042, file: !1852, line: 63, baseType: !404, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2042, file: !1852, line: 66, baseType: !404, size: 32, offset: 32)
!2046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2048, globals: !2052, splitDebugInlining: false, nameTableKind: None)
!2047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2048 = !{!102, !569, !548, !410, !103, !2049, !24, !552, !702, !404, !2050}
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2051)
!2051 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2052 = !{!1945, !2053}
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(name: "states_sz", scope: !1947, file: !1948, line: 279, type: !2055, isLocal: true, isDefinition: true)
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2056, size: 256, elements: !1552)
!2056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!2057 = !{!2058, !2059, !2060, !2061, !2062, !2063, !2064}
!2058 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1947, file: !1948, line: 271, type: !1951)
!2059 = !DILocalVariable(name: "buf", arg: 2, scope: !1947, file: !1948, line: 271, type: !702)
!2060 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1947, file: !1948, line: 271, type: !552)
!2061 = !DILocalVariable(name: "off", scope: !1947, file: !1948, line: 273, type: !552)
!2062 = !DILocalVariable(name: "bit", scope: !1947, file: !1948, line: 274, type: !410)
!2063 = !DILocalVariable(name: "thread_state", scope: !1947, file: !1948, line: 275, type: !410)
!2064 = !DILocalVariable(name: "index", scope: !2065, file: !1948, line: 293, type: !410)
!2065 = distinct !DILexicalBlock(scope: !1947, file: !1948, line: 293, column: 2)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 256, elements: !1552)
!2067 = !DIGlobalVariableExpression(var: !2068, expr: !DIExpression())
!2068 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2069, file: !2171, line: 56, type: !2160, isLocal: false, isDefinition: true)
!2069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2070, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2071, globals: !2168, splitDebugInlining: false, nameTableKind: None)
!2070 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2071 = !{!2072, !702, !102, !2166, !625, !548, !1090, !103, !404, !2050, !2167}
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1787, line: 245, size: 896, elements: !2074)
!2074 = !{!2075, !2133, !2145, !2146, !2147, !2148, !2161}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2073, file: !1787, line: 247, baseType: !2076, size: 384)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1787, line: 57, size: 384, elements: !2077)
!2077 = !{!2078, !2102, !2109, !2110, !2111, !2120, !2121, !2122}
!2078 = !DIDerivedType(tag: DW_TAG_member, scope: !2076, file: !1787, line: 60, baseType: !2079, size: 64)
!2079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2076, file: !1787, line: 60, size: 64, elements: !2080)
!2080 = !{!2081, !2096}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2079, file: !1787, line: 61, baseType: !2082, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !683, line: 49, baseType: !2083)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !2084)
!2084 = !{!2085, !2091}
!2085 = !DIDerivedType(tag: DW_TAG_member, scope: !2083, file: !683, line: 38, baseType: !2086, size: 32)
!2086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2083, file: !683, line: 38, size: 32, elements: !2087)
!2087 = !{!2088, !2090}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2086, file: !683, line: 39, baseType: !2089, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2086, file: !683, line: 40, baseType: !2089, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, scope: !2083, file: !683, line: 42, baseType: !2092, size: 32, offset: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2083, file: !683, line: 42, size: 32, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2092, file: !683, line: 43, baseType: !2089, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2092, file: !683, line: 44, baseType: !2089, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2079, file: !1787, line: 62, baseType: !2097, size: 64)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1812, line: 49, size: 64, elements: !2098)
!2098 = !{!2099}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2097, file: !1812, line: 50, baseType: !2100, size: 64)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2101, size: 64, elements: !721)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2076, file: !1787, line: 68, baseType: !2103, size: 32, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !2106)
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2105, file: !678, line: 232, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !2083)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2076, file: !1787, line: 71, baseType: !410, size: 8, offset: 96)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2076, file: !1787, line: 74, baseType: !410, size: 8, offset: 104)
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !2076, file: !1787, line: 90, baseType: !2112, size: 16, offset: 112)
!2112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2076, file: !1787, line: 90, size: 16, elements: !2113)
!2113 = !{!2114, !2119}
!2114 = !DIDerivedType(tag: DW_TAG_member, scope: !2112, file: !1787, line: 91, baseType: !2115, size: 16)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2112, file: !1787, line: 91, size: 16, elements: !2116)
!2116 = !{!2117, !2118}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2115, file: !1787, line: 96, baseType: !1833, size: 8)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2115, file: !1787, line: 97, baseType: !410, size: 8, offset: 8)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2112, file: !1787, line: 100, baseType: !521, size: 16)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2076, file: !1787, line: 107, baseType: !404, size: 32, offset: 128)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2076, file: !1787, line: 127, baseType: !102, size: 32, offset: 160)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2076, file: !1787, line: 131, baseType: !2123, size: 192, offset: 192)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !678, line: 244, size: 192, elements: !2124)
!2124 = !{!2125, !2126, !2132}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2123, file: !678, line: 245, baseType: !2082, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2123, file: !678, line: 246, baseType: !2127, size: 32, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !678, line: 242, baseType: !2128)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 32)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{null, !2131}
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2123, file: !678, line: 249, baseType: !550, size: 64, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2073, file: !1787, line: 250, baseType: !2134, size: 288, offset: 384)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1852, line: 25, size: 288, elements: !2135)
!2135 = !{!2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2134, file: !1852, line: 26, baseType: !404, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2134, file: !1852, line: 27, baseType: !404, size: 32, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2134, file: !1852, line: 28, baseType: !404, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2134, file: !1852, line: 29, baseType: !404, size: 32, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2134, file: !1852, line: 30, baseType: !404, size: 32, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2134, file: !1852, line: 31, baseType: !404, size: 32, offset: 160)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2134, file: !1852, line: 32, baseType: !404, size: 32, offset: 192)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2134, file: !1852, line: 33, baseType: !404, size: 32, offset: 224)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2134, file: !1852, line: 34, baseType: !404, size: 32, offset: 256)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2073, file: !1787, line: 253, baseType: !102, size: 32, offset: 672)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2073, file: !1787, line: 256, baseType: !2104, size: 64, offset: 704)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2073, file: !1787, line: 294, baseType: !103, size: 32, offset: 768)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2073, file: !1787, line: 325, baseType: !2149, size: 32, offset: 800)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !654, line: 5073, size: 160, elements: !2151)
!2151 = !{!2152, !2158, !2159}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2150, file: !654, line: 5074, baseType: !2153, size: 96)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !2154)
!2154 = !{!2155, !2156, !2157}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2153, file: !1872, line: 57, baseType: !1875, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2153, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2153, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2150, file: !654, line: 5075, baseType: !2104, size: 64, offset: 96)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2150, file: !654, line: 5076, baseType: !2160, offset: 160)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2073, file: !1787, line: 343, baseType: !2162, size: 64, offset: 832)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1852, line: 60, size: 64, elements: !2163)
!2163 = !{!2164, !2165}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2162, file: !1852, line: 63, baseType: !404, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2162, file: !1852, line: 66, baseType: !404, size: 32, offset: 32)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2168 = !{!2067, !2169, !2172, !2174}
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2069, file: !2171, line: 404, type: !103, isLocal: true, isDefinition: true)
!2171 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2069, file: !2171, line: 405, type: !103, isLocal: true, isDefinition: true)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "pending_current", scope: !2069, file: !2171, line: 425, type: !2072, isLocal: true, isDefinition: true)
!2176 = !DIGlobalVariableExpression(var: !2177, expr: !DIExpression())
!2177 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2178, file: !2208, line: 15, type: !2050, isLocal: true, isDefinition: true)
!2178 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2179, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2180, globals: !2205, splitDebugInlining: false, nameTableKind: None)
!2179 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2180 = !{!548, !102, !1090, !404, !2050, !103, !2181, !702, !550}
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !678, line: 244, size: 192, elements: !2183)
!2183 = !{!2184, !2199, !2204}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2182, file: !678, line: 245, baseType: !2185, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !683, line: 49, baseType: !2186)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !2187)
!2187 = !{!2188, !2194}
!2188 = !DIDerivedType(tag: DW_TAG_member, scope: !2186, file: !683, line: 38, baseType: !2189, size: 32)
!2189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2186, file: !683, line: 38, size: 32, elements: !2190)
!2190 = !{!2191, !2193}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2189, file: !683, line: 39, baseType: !2192, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2189, file: !683, line: 40, baseType: !2192, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, scope: !2186, file: !683, line: 42, baseType: !2195, size: 32, offset: 32)
!2195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2186, file: !683, line: 42, size: 32, elements: !2196)
!2196 = !{!2197, !2198}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2195, file: !683, line: 43, baseType: !2192, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2195, file: !683, line: 44, baseType: !2192, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2182, file: !678, line: 246, baseType: !2200, size: 32, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !678, line: 242, baseType: !2201)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 32)
!2202 = !DISubroutineType(types: !2203)
!2203 = !{null, !2181}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2182, file: !678, line: 249, baseType: !550, size: 64, offset: 128)
!2205 = !{!2176, !2206, !2210, !2212}
!2206 = !DIGlobalVariableExpression(var: !2207, expr: !DIExpression())
!2207 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2178, file: !2208, line: 19, type: !2209, isLocal: true, isDefinition: true)
!2208 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2178, file: !2208, line: 25, type: !103, isLocal: true, isDefinition: true)
!2212 = !DIGlobalVariableExpression(var: !2213, expr: !DIExpression())
!2213 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2178, file: !2208, line: 17, type: !2214, isLocal: true, isDefinition: true)
!2214 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !2186)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2217, file: !2236, line: 55, type: !2237, isLocal: true, isDefinition: true, align: 32)
!2217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2219, globals: !2235, splitDebugInlining: false, nameTableKind: None)
!2218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2219 = !{!102, !548, !103, !2220}
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !683, line: 49, baseType: !2222)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !2223)
!2223 = !{!2224, !2230}
!2224 = !DIDerivedType(tag: DW_TAG_member, scope: !2222, file: !683, line: 38, baseType: !2225, size: 32)
!2225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2222, file: !683, line: 38, size: 32, elements: !2226)
!2226 = !{!2227, !2229}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2225, file: !683, line: 39, baseType: !2228, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2225, file: !683, line: 40, baseType: !2228, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, scope: !2222, file: !683, line: 42, baseType: !2231, size: 32, offset: 32)
!2231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2222, file: !683, line: 42, size: 32, elements: !2232)
!2232 = !{!2233, !2234}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2231, file: !683, line: 43, baseType: !2228, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2231, file: !683, line: 44, baseType: !2228, size: 32)
!2235 = !{!2215}
!2236 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2238)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !533, line: 51, size: 64, elements: !2239)
!2239 = !{!2240, !2241}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2238, file: !533, line: 60, baseType: !536, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2238, file: !533, line: 65, baseType: !539, size: 32, offset: 32)
!2242 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2243, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2243 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2245, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2245 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2246 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2247, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2247 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2248 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2249, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2250, retainedTypes: !2258, splitDebugInlining: false, nameTableKind: None)
!2249 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2250 = !{!30, !2251}
!2251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2252, line: 54, baseType: !32, size: 32, elements: !2253)
!2252 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2253 = !{!2254, !2255, !2256, !2257}
!2254 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2255 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2256 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2257 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2258 = !{!102, !552, !625, !24, !2259, !22, !2265, !103, !1344, !2280}
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2252, line: 58, baseType: !2261)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2252, line: 58, size: 64, elements: !2262)
!2262 = !{!2263}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2261, file: !2252, line: 58, baseType: !2264, size: 64)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 64, elements: !1552)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2252, line: 68, size: 128, elements: !2267)
!2267 = !{!2268, !2271, !2272, !2273}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2266, file: !2252, line: 69, baseType: !2269, size: 64)
!2269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2270, size: 64, elements: !721)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2252, line: 61, baseType: !404)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2266, file: !2252, line: 70, baseType: !2270, size: 32, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2266, file: !2252, line: 71, baseType: !404, size: 32, offset: 96)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2266, file: !2252, line: 77, baseType: !2274, offset: 128)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2275, elements: !2278)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2252, line: 64, size: 32, elements: !2276)
!2276 = !{!2277}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2275, file: !2252, line: 65, baseType: !2270, size: 32)
!2278 = !{!2279}
!2279 = !DISubrange(count: 0)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 32)
!2281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2282, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2283, retainedTypes: !2303, splitDebugInlining: false, nameTableKind: None)
!2282 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2283 = !{!2284, !2292}
!2284 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2285, line: 69, baseType: !32, size: 32, elements: !2286)
!2285 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2286 = !{!2287, !2288, !2289, !2290, !2291}
!2287 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2288 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2289 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2290 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2291 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2292 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2285, line: 56, baseType: !32, size: 32, elements: !2293)
!2293 = !{!2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302}
!2294 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2295 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2296 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2297 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2298 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2299 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2300 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2301 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2302 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2303 = !{!103, !2284, !2292, !2304, !1834, !587, !2306, !2307, !411, !522, !569, !552, !102, !22, !32, !2309, !2310, !2311, !712, !2312, !551, !2313, !2305, !2314, !2315, !2316, !2317}
!2304 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2285, line: 31, baseType: !2305)
!2305 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !551)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !553, line: 329, baseType: !32)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2285, line: 32, baseType: !2308)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2051)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !553, line: 145, baseType: !103)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2319, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2319 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2321, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2322, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2321 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2322 = !{!2323, !30}
!2323 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2324, line: 27, baseType: !32, size: 32, elements: !2325)
!2324 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2325 = !{!2326, !2327, !2328, !2329, !2330}
!2326 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2327 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2328 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2329 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2330 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2332, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2333, retainedTypes: !2334, splitDebugInlining: false, nameTableKind: None)
!2332 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2333 = !{!1396, !2323, !30}
!2334 = !{!2335, !2336, !102, !103, !1090, !404, !410, !2353}
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !399, line: 249, baseType: !1396)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1539, line: 426, baseType: !2338)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 411, size: 28704, elements: !2339)
!2339 = !{!2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2338, file: !1539, line: 413, baseType: !1551, size: 256)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2338, file: !1539, line: 414, baseType: !1555, size: 768, offset: 256)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2338, file: !1539, line: 415, baseType: !1551, size: 256, offset: 1024)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2338, file: !1539, line: 416, baseType: !1555, size: 768, offset: 1280)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2338, file: !1539, line: 417, baseType: !1551, size: 256, offset: 2048)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2338, file: !1539, line: 418, baseType: !1555, size: 768, offset: 2304)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2338, file: !1539, line: 419, baseType: !1551, size: 256, offset: 3072)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2338, file: !1539, line: 420, baseType: !1555, size: 768, offset: 3328)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2338, file: !1539, line: 421, baseType: !1551, size: 256, offset: 4096)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2338, file: !1539, line: 422, baseType: !1566, size: 1792, offset: 4352)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2338, file: !1539, line: 423, baseType: !1570, size: 1920, offset: 6144)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2338, file: !1539, line: 424, baseType: !1575, size: 20608, offset: 8064)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2338, file: !1539, line: 425, baseType: !403, size: 32, offset: 28672)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1539, line: 468, baseType: !2355)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 445, size: 1120, elements: !2356)
!2356 = !{!2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2355, file: !1539, line: 447, baseType: !477, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2355, file: !1539, line: 448, baseType: !403, size: 32, offset: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2355, file: !1539, line: 449, baseType: !403, size: 32, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2355, file: !1539, line: 450, baseType: !403, size: 32, offset: 96)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2355, file: !1539, line: 451, baseType: !403, size: 32, offset: 128)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2355, file: !1539, line: 452, baseType: !403, size: 32, offset: 160)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2355, file: !1539, line: 453, baseType: !1590, size: 96, offset: 192)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2355, file: !1539, line: 454, baseType: !403, size: 32, offset: 288)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2355, file: !1539, line: 455, baseType: !403, size: 32, offset: 320)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2355, file: !1539, line: 456, baseType: !403, size: 32, offset: 352)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2355, file: !1539, line: 457, baseType: !403, size: 32, offset: 384)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2355, file: !1539, line: 458, baseType: !403, size: 32, offset: 416)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2355, file: !1539, line: 459, baseType: !403, size: 32, offset: 448)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2355, file: !1539, line: 460, baseType: !403, size: 32, offset: 480)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2355, file: !1539, line: 461, baseType: !1601, size: 64, offset: 512)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2355, file: !1539, line: 462, baseType: !477, size: 32, offset: 576)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2355, file: !1539, line: 463, baseType: !477, size: 32, offset: 608)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2355, file: !1539, line: 464, baseType: !1605, size: 128, offset: 640)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2355, file: !1539, line: 465, baseType: !1609, size: 160, offset: 768)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2355, file: !1539, line: 466, baseType: !1613, size: 160, offset: 928)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2355, file: !1539, line: 467, baseType: !403, size: 32, offset: 1088)
!2378 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2379, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2379 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2380 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2381, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2382, splitDebugInlining: false, nameTableKind: None)
!2381 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2382 = !{!102, !103, !22, !2383}
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1539, line: 468, baseType: !2385)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 445, size: 1120, elements: !2386)
!2386 = !{!2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2385, file: !1539, line: 447, baseType: !477, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2385, file: !1539, line: 448, baseType: !403, size: 32, offset: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2385, file: !1539, line: 449, baseType: !403, size: 32, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2385, file: !1539, line: 450, baseType: !403, size: 32, offset: 96)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2385, file: !1539, line: 451, baseType: !403, size: 32, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2385, file: !1539, line: 452, baseType: !403, size: 32, offset: 160)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2385, file: !1539, line: 453, baseType: !1590, size: 96, offset: 192)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2385, file: !1539, line: 454, baseType: !403, size: 32, offset: 288)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2385, file: !1539, line: 455, baseType: !403, size: 32, offset: 320)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2385, file: !1539, line: 456, baseType: !403, size: 32, offset: 352)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2385, file: !1539, line: 457, baseType: !403, size: 32, offset: 384)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2385, file: !1539, line: 458, baseType: !403, size: 32, offset: 416)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2385, file: !1539, line: 459, baseType: !403, size: 32, offset: 448)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2385, file: !1539, line: 460, baseType: !403, size: 32, offset: 480)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2385, file: !1539, line: 461, baseType: !1601, size: 64, offset: 512)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2385, file: !1539, line: 462, baseType: !477, size: 32, offset: 576)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2385, file: !1539, line: 463, baseType: !477, size: 32, offset: 608)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2385, file: !1539, line: 464, baseType: !1605, size: 128, offset: 640)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2385, file: !1539, line: 465, baseType: !1609, size: 160, offset: 768)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2385, file: !1539, line: 466, baseType: !1613, size: 160, offset: 928)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2385, file: !1539, line: 467, baseType: !403, size: 32, offset: 1088)
!2408 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2409, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2410, splitDebugInlining: false, nameTableKind: None)
!2409 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2410 = !{!2411, !102, !103}
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1539, line: 468, baseType: !2413)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 445, size: 1120, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2413, file: !1539, line: 447, baseType: !477, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2413, file: !1539, line: 448, baseType: !403, size: 32, offset: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2413, file: !1539, line: 449, baseType: !403, size: 32, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2413, file: !1539, line: 450, baseType: !403, size: 32, offset: 96)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2413, file: !1539, line: 451, baseType: !403, size: 32, offset: 128)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2413, file: !1539, line: 452, baseType: !403, size: 32, offset: 160)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2413, file: !1539, line: 453, baseType: !1590, size: 96, offset: 192)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2413, file: !1539, line: 454, baseType: !403, size: 32, offset: 288)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2413, file: !1539, line: 455, baseType: !403, size: 32, offset: 320)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2413, file: !1539, line: 456, baseType: !403, size: 32, offset: 352)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2413, file: !1539, line: 457, baseType: !403, size: 32, offset: 384)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2413, file: !1539, line: 458, baseType: !403, size: 32, offset: 416)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2413, file: !1539, line: 459, baseType: !403, size: 32, offset: 448)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2413, file: !1539, line: 460, baseType: !403, size: 32, offset: 480)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2413, file: !1539, line: 461, baseType: !1601, size: 64, offset: 512)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2413, file: !1539, line: 462, baseType: !477, size: 32, offset: 576)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2413, file: !1539, line: 463, baseType: !477, size: 32, offset: 608)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2413, file: !1539, line: 464, baseType: !1605, size: 128, offset: 640)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2413, file: !1539, line: 465, baseType: !1609, size: 160, offset: 768)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2413, file: !1539, line: 466, baseType: !1613, size: 160, offset: 928)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2413, file: !1539, line: 467, baseType: !403, size: 32, offset: 1088)
!2436 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2437, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2438, splitDebugInlining: false, nameTableKind: None)
!2437 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2438 = !{!2439, !404, !102, !103}
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2441, line: 98, size: 256, elements: !2442)
!2441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2442 = !{!2443, !2448, !2453, !2458, !2463, !2468, !2473, !2478}
!2443 = !DIDerivedType(tag: DW_TAG_member, scope: !2440, file: !2441, line: 99, baseType: !2444, size: 32)
!2444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2440, file: !2441, line: 99, size: 32, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2444, file: !2441, line: 99, baseType: !404, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2444, file: !2441, line: 99, baseType: !404, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, scope: !2440, file: !2441, line: 100, baseType: !2449, size: 32, offset: 32)
!2449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2440, file: !2441, line: 100, size: 32, elements: !2450)
!2450 = !{!2451, !2452}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2449, file: !2441, line: 100, baseType: !404, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2449, file: !2441, line: 100, baseType: !404, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, scope: !2440, file: !2441, line: 101, baseType: !2454, size: 32, offset: 64)
!2454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2440, file: !2441, line: 101, size: 32, elements: !2455)
!2455 = !{!2456, !2457}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2454, file: !2441, line: 101, baseType: !404, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2454, file: !2441, line: 101, baseType: !404, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, scope: !2440, file: !2441, line: 102, baseType: !2459, size: 32, offset: 96)
!2459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2440, file: !2441, line: 102, size: 32, elements: !2460)
!2460 = !{!2461, !2462}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2459, file: !2441, line: 102, baseType: !404, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2459, file: !2441, line: 102, baseType: !404, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, scope: !2440, file: !2441, line: 103, baseType: !2464, size: 32, offset: 128)
!2464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2440, file: !2441, line: 103, size: 32, elements: !2465)
!2465 = !{!2466, !2467}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2464, file: !2441, line: 103, baseType: !404, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2464, file: !2441, line: 103, baseType: !404, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, scope: !2440, file: !2441, line: 104, baseType: !2469, size: 32, offset: 160)
!2469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2440, file: !2441, line: 104, size: 32, elements: !2470)
!2470 = !{!2471, !2472}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2469, file: !2441, line: 104, baseType: !404, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2469, file: !2441, line: 104, baseType: !404, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !2440, file: !2441, line: 105, baseType: !2474, size: 32, offset: 192)
!2474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2440, file: !2441, line: 105, size: 32, elements: !2475)
!2475 = !{!2476, !2477}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2474, file: !2441, line: 105, baseType: !404, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2474, file: !2441, line: 105, baseType: !404, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2440, file: !2441, line: 106, baseType: !404, size: 32, offset: 224)
!2479 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2480, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2322, retainedTypes: !2481, splitDebugInlining: false, nameTableKind: None)
!2480 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2481 = !{!2482, !102, !103, !2507, !2280, !404}
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1539, line: 468, baseType: !2484)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 445, size: 1120, elements: !2485)
!2485 = !{!2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2484, file: !1539, line: 447, baseType: !477, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2484, file: !1539, line: 448, baseType: !403, size: 32, offset: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2484, file: !1539, line: 449, baseType: !403, size: 32, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2484, file: !1539, line: 450, baseType: !403, size: 32, offset: 96)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2484, file: !1539, line: 451, baseType: !403, size: 32, offset: 128)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2484, file: !1539, line: 452, baseType: !403, size: 32, offset: 160)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2484, file: !1539, line: 453, baseType: !1590, size: 96, offset: 192)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2484, file: !1539, line: 454, baseType: !403, size: 32, offset: 288)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2484, file: !1539, line: 455, baseType: !403, size: 32, offset: 320)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2484, file: !1539, line: 456, baseType: !403, size: 32, offset: 352)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2484, file: !1539, line: 457, baseType: !403, size: 32, offset: 384)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2484, file: !1539, line: 458, baseType: !403, size: 32, offset: 416)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2484, file: !1539, line: 459, baseType: !403, size: 32, offset: 448)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2484, file: !1539, line: 460, baseType: !403, size: 32, offset: 480)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2484, file: !1539, line: 461, baseType: !1601, size: 64, offset: 512)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2484, file: !1539, line: 462, baseType: !477, size: 32, offset: 576)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2484, file: !1539, line: 463, baseType: !477, size: 32, offset: 608)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2484, file: !1539, line: 464, baseType: !1605, size: 128, offset: 640)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2484, file: !1539, line: 465, baseType: !1609, size: 160, offset: 768)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2484, file: !1539, line: 466, baseType: !1613, size: 160, offset: 928)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2484, file: !1539, line: 467, baseType: !403, size: 32, offset: 1088)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2441, line: 141, baseType: !2509)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2441, line: 97, size: 256, elements: !2510)
!2510 = !{!2511}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2509, file: !2441, line: 107, baseType: !2512, size: 256)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2441, line: 98, size: 256, elements: !2513)
!2513 = !{!2514, !2519, !2524, !2529, !2534, !2539, !2544, !2549}
!2514 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2441, line: 99, baseType: !2515, size: 32)
!2515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2441, line: 99, size: 32, elements: !2516)
!2516 = !{!2517, !2518}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2515, file: !2441, line: 99, baseType: !404, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2515, file: !2441, line: 99, baseType: !404, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2441, line: 100, baseType: !2520, size: 32, offset: 32)
!2520 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2441, line: 100, size: 32, elements: !2521)
!2521 = !{!2522, !2523}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2520, file: !2441, line: 100, baseType: !404, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2520, file: !2441, line: 100, baseType: !404, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2441, line: 101, baseType: !2525, size: 32, offset: 64)
!2525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2441, line: 101, size: 32, elements: !2526)
!2526 = !{!2527, !2528}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2525, file: !2441, line: 101, baseType: !404, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2525, file: !2441, line: 101, baseType: !404, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2441, line: 102, baseType: !2530, size: 32, offset: 96)
!2530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2441, line: 102, size: 32, elements: !2531)
!2531 = !{!2532, !2533}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2530, file: !2441, line: 102, baseType: !404, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2530, file: !2441, line: 102, baseType: !404, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2441, line: 103, baseType: !2535, size: 32, offset: 128)
!2535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2441, line: 103, size: 32, elements: !2536)
!2536 = !{!2537, !2538}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2535, file: !2441, line: 103, baseType: !404, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2535, file: !2441, line: 103, baseType: !404, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2441, line: 104, baseType: !2540, size: 32, offset: 160)
!2540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2441, line: 104, size: 32, elements: !2541)
!2541 = !{!2542, !2543}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2540, file: !2441, line: 104, baseType: !404, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2540, file: !2441, line: 104, baseType: !404, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2441, line: 105, baseType: !2545, size: 32, offset: 192)
!2545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2441, line: 105, size: 32, elements: !2546)
!2546 = !{!2547, !2548}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2545, file: !2441, line: 105, baseType: !404, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2545, file: !2441, line: 105, baseType: !404, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2512, file: !2441, line: 106, baseType: !404, size: 32, offset: 224)
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1395, retainedTypes: !2552, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2552 = !{!2335, !1090, !410, !404, !2553, !2570}
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1539, line: 426, baseType: !2555)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 411, size: 28704, elements: !2556)
!2556 = !{!2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2555, file: !1539, line: 413, baseType: !1551, size: 256)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2555, file: !1539, line: 414, baseType: !1555, size: 768, offset: 256)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2555, file: !1539, line: 415, baseType: !1551, size: 256, offset: 1024)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2555, file: !1539, line: 416, baseType: !1555, size: 768, offset: 1280)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2555, file: !1539, line: 417, baseType: !1551, size: 256, offset: 2048)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2555, file: !1539, line: 418, baseType: !1555, size: 768, offset: 2304)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2555, file: !1539, line: 419, baseType: !1551, size: 256, offset: 3072)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2555, file: !1539, line: 420, baseType: !1555, size: 768, offset: 3328)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2555, file: !1539, line: 421, baseType: !1551, size: 256, offset: 4096)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2555, file: !1539, line: 422, baseType: !1566, size: 1792, offset: 4352)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2555, file: !1539, line: 423, baseType: !1570, size: 1920, offset: 6144)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2555, file: !1539, line: 424, baseType: !1575, size: 20608, offset: 8064)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2555, file: !1539, line: 425, baseType: !403, size: 32, offset: 28672)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1539, line: 468, baseType: !2572)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 445, size: 1120, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2572, file: !1539, line: 447, baseType: !477, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2572, file: !1539, line: 448, baseType: !403, size: 32, offset: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2572, file: !1539, line: 449, baseType: !403, size: 32, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2572, file: !1539, line: 450, baseType: !403, size: 32, offset: 96)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2572, file: !1539, line: 451, baseType: !403, size: 32, offset: 128)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2572, file: !1539, line: 452, baseType: !403, size: 32, offset: 160)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2572, file: !1539, line: 453, baseType: !1590, size: 96, offset: 192)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2572, file: !1539, line: 454, baseType: !403, size: 32, offset: 288)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2572, file: !1539, line: 455, baseType: !403, size: 32, offset: 320)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2572, file: !1539, line: 456, baseType: !403, size: 32, offset: 352)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2572, file: !1539, line: 457, baseType: !403, size: 32, offset: 384)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2572, file: !1539, line: 458, baseType: !403, size: 32, offset: 416)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2572, file: !1539, line: 459, baseType: !403, size: 32, offset: 448)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2572, file: !1539, line: 460, baseType: !403, size: 32, offset: 480)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2572, file: !1539, line: 461, baseType: !1601, size: 64, offset: 512)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2572, file: !1539, line: 462, baseType: !477, size: 32, offset: 576)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2572, file: !1539, line: 463, baseType: !477, size: 32, offset: 608)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2572, file: !1539, line: 464, baseType: !1605, size: 128, offset: 640)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2572, file: !1539, line: 465, baseType: !1609, size: 160, offset: 768)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2572, file: !1539, line: 466, baseType: !1613, size: 160, offset: 928)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2572, file: !1539, line: 467, baseType: !403, size: 32, offset: 1088)
!2595 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2596, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2597, splitDebugInlining: false, nameTableKind: None)
!2596 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2597 = !{!2598, !102, !103}
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1539, line: 468, baseType: !2600)
!2600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 445, size: 1120, elements: !2601)
!2601 = !{!2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2600, file: !1539, line: 447, baseType: !477, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2600, file: !1539, line: 448, baseType: !403, size: 32, offset: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2600, file: !1539, line: 449, baseType: !403, size: 32, offset: 64)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2600, file: !1539, line: 450, baseType: !403, size: 32, offset: 96)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2600, file: !1539, line: 451, baseType: !403, size: 32, offset: 128)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2600, file: !1539, line: 452, baseType: !403, size: 32, offset: 160)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2600, file: !1539, line: 453, baseType: !1590, size: 96, offset: 192)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2600, file: !1539, line: 454, baseType: !403, size: 32, offset: 288)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2600, file: !1539, line: 455, baseType: !403, size: 32, offset: 320)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2600, file: !1539, line: 456, baseType: !403, size: 32, offset: 352)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2600, file: !1539, line: 457, baseType: !403, size: 32, offset: 384)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2600, file: !1539, line: 458, baseType: !403, size: 32, offset: 416)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2600, file: !1539, line: 459, baseType: !403, size: 32, offset: 448)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2600, file: !1539, line: 460, baseType: !403, size: 32, offset: 480)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2600, file: !1539, line: 461, baseType: !1601, size: 64, offset: 512)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2600, file: !1539, line: 462, baseType: !477, size: 32, offset: 576)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2600, file: !1539, line: 463, baseType: !477, size: 32, offset: 608)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2600, file: !1539, line: 464, baseType: !1605, size: 128, offset: 640)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2600, file: !1539, line: 465, baseType: !1609, size: 160, offset: 768)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2600, file: !1539, line: 466, baseType: !1613, size: 160, offset: 928)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2600, file: !1539, line: 467, baseType: !403, size: 32, offset: 1088)
!2623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2625, splitDebugInlining: false, nameTableKind: None)
!2624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2625 = !{!571, !702, !552, !588, !2626, !411, !102}
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !411)
!2628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2629 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2630 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2631, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2632, splitDebugInlining: false, nameTableKind: None)
!2631 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2632 = !{!528, !404}
!2633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2635, retainedTypes: !2645, splitDebugInlining: false, nameTableKind: None)
!2634 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2635 = !{!2636}
!2636 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2637, line: 62, baseType: !32, size: 32, elements: !2638)
!2637 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2638 = !{!2639, !2640, !2641, !2642, !2643, !2644}
!2639 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2640 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2641 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2642 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2643 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2644 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2645 = !{!2646, !2709, !404, !580, !528}
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !399, line: 8619, baseType: !2648)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 8563, size: 3072, elements: !2649)
!2649 = !{!2650, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2648, file: !399, line: 8564, baseType: !2651, size: 768)
!2651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 768, elements: !2652)
!2652 = !{!2653}
!2653 = !DISubrange(count: 96)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2648, file: !399, line: 8565, baseType: !403, size: 32, offset: 768)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2648, file: !399, line: 8566, baseType: !403, size: 32, offset: 800)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2648, file: !399, line: 8567, baseType: !403, size: 32, offset: 832)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2648, file: !399, line: 8568, baseType: !403, size: 32, offset: 864)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2648, file: !399, line: 8569, baseType: !403, size: 32, offset: 896)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2648, file: !399, line: 8570, baseType: !403, size: 32, offset: 928)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2648, file: !399, line: 8571, baseType: !403, size: 32, offset: 960)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2648, file: !399, line: 8572, baseType: !403, size: 32, offset: 992)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2648, file: !399, line: 8573, baseType: !403, size: 32, offset: 1024)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2648, file: !399, line: 8574, baseType: !2664, size: 96, offset: 1056)
!2664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 96, elements: !1591)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2648, file: !399, line: 8575, baseType: !403, size: 32, offset: 1152)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2648, file: !399, line: 8576, baseType: !2664, size: 96, offset: 1184)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2648, file: !399, line: 8577, baseType: !403, size: 32, offset: 1280)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2648, file: !399, line: 8578, baseType: !2664, size: 96, offset: 1312)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2648, file: !399, line: 8579, baseType: !403, size: 32, offset: 1408)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2648, file: !399, line: 8580, baseType: !403, size: 32, offset: 1440)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2648, file: !399, line: 8581, baseType: !403, size: 32, offset: 1472)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2648, file: !399, line: 8582, baseType: !403, size: 32, offset: 1504)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2648, file: !399, line: 8583, baseType: !403, size: 32, offset: 1536)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2648, file: !399, line: 8584, baseType: !403, size: 32, offset: 1568)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2648, file: !399, line: 8585, baseType: !403, size: 32, offset: 1600)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2648, file: !399, line: 8586, baseType: !403, size: 32, offset: 1632)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2648, file: !399, line: 8587, baseType: !403, size: 32, offset: 1664)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2648, file: !399, line: 8588, baseType: !403, size: 32, offset: 1696)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2648, file: !399, line: 8589, baseType: !403, size: 32, offset: 1728)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2648, file: !399, line: 8590, baseType: !403, size: 32, offset: 1760)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2648, file: !399, line: 8591, baseType: !403, size: 32, offset: 1792)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2648, file: !399, line: 8592, baseType: !403, size: 32, offset: 1824)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2648, file: !399, line: 8593, baseType: !403, size: 32, offset: 1856)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2648, file: !399, line: 8594, baseType: !403, size: 32, offset: 1888)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2648, file: !399, line: 8595, baseType: !403, size: 32, offset: 1920)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2648, file: !399, line: 8596, baseType: !403, size: 32, offset: 1952)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2648, file: !399, line: 8597, baseType: !403, size: 32, offset: 1984)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2648, file: !399, line: 8598, baseType: !403, size: 32, offset: 2016)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2648, file: !399, line: 8599, baseType: !403, size: 32, offset: 2048)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2648, file: !399, line: 8600, baseType: !2664, size: 96, offset: 2080)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2648, file: !399, line: 8601, baseType: !403, size: 32, offset: 2176)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2648, file: !399, line: 8602, baseType: !2664, size: 96, offset: 2208)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2648, file: !399, line: 8603, baseType: !403, size: 32, offset: 2304)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2648, file: !399, line: 8604, baseType: !2664, size: 96, offset: 2336)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2648, file: !399, line: 8605, baseType: !403, size: 32, offset: 2432)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2648, file: !399, line: 8606, baseType: !403, size: 32, offset: 2464)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2648, file: !399, line: 8607, baseType: !403, size: 32, offset: 2496)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2648, file: !399, line: 8608, baseType: !403, size: 32, offset: 2528)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2648, file: !399, line: 8609, baseType: !403, size: 32, offset: 2560)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2648, file: !399, line: 8610, baseType: !2664, size: 96, offset: 2592)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2648, file: !399, line: 8611, baseType: !403, size: 32, offset: 2688)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2648, file: !399, line: 8612, baseType: !2664, size: 96, offset: 2720)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2648, file: !399, line: 8613, baseType: !403, size: 32, offset: 2816)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2648, file: !399, line: 8614, baseType: !2664, size: 96, offset: 2848)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2648, file: !399, line: 8615, baseType: !403, size: 32, offset: 2944)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2648, file: !399, line: 8616, baseType: !403, size: 32, offset: 2976)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2648, file: !399, line: 8617, baseType: !403, size: 32, offset: 3008)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2648, file: !399, line: 8618, baseType: !403, size: 32, offset: 3040)
!2709 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2712, splitDebugInlining: false, nameTableKind: None)
!2711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2712 = !{!2713, !2717, !929}
!2713 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !930, line: 49, baseType: !32, size: 32, elements: !2714)
!2714 = !{!2715, !2716}
!2715 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2716 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !930, line: 56, baseType: !32, size: 32, elements: !2718)
!2718 = !{!2719, !2720, !2721, !2722, !2723}
!2719 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2720 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2721 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2722 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2723 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2726, retainedTypes: !2735, splitDebugInlining: false, nameTableKind: None)
!2725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2726 = !{!2727, !2731}
!2727 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1116, line: 179, baseType: !32, size: 32, elements: !2728)
!2728 = !{!2729, !2730}
!2729 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2730 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2731 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1116, line: 194, baseType: !32, size: 32, elements: !2732)
!2732 = !{!2733, !2734}
!2733 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2734 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2735 = !{!404, !1344}
!2736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2738, retainedTypes: !2749, splitDebugInlining: false, nameTableKind: None)
!2737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2738 = !{!114, !2739}
!2739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2637, line: 128, baseType: !32, size: 32, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748}
!2741 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2742 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2743 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2744 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2745 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2746 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2747 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2748 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2749 = !{!404, !2750, !2802, !528}
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !399, line: 4575, baseType: !2752)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 4532, size: 390144, elements: !2753)
!2753 = !{!2754, !2755, !2756, !2757, !2758, !2759, !2767, !2768, !2776, !2777}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2752, file: !399, line: 4533, baseType: !403, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2752, file: !399, line: 4534, baseType: !403, size: 32, offset: 32)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2752, file: !399, line: 4535, baseType: !403, size: 32, offset: 64)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2752, file: !399, line: 4536, baseType: !403, size: 32, offset: 96)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2752, file: !399, line: 4537, baseType: !409, size: 16256, offset: 128)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2752, file: !399, line: 4543, baseType: !2760, size: 4224, offset: 16384)
!2760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2761, size: 4224, elements: !422)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2752, file: !399, line: 4538, size: 128, elements: !2762)
!2762 = !{!2763, !2764, !2765, !2766}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2761, file: !399, line: 4539, baseType: !403, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2761, file: !399, line: 4540, baseType: !403, size: 32, offset: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2761, file: !399, line: 4541, baseType: !403, size: 32, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2761, file: !399, line: 4542, baseType: !403, size: 32, offset: 96)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2752, file: !399, line: 4544, baseType: !425, size: 110464, offset: 20608)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2752, file: !399, line: 4550, baseType: !2769, size: 24448, offset: 131072)
!2769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2770, size: 24448, elements: !436)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2752, file: !399, line: 4545, size: 128, elements: !2771)
!2771 = !{!2772, !2773, !2774, !2775}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2770, file: !399, line: 4546, baseType: !403, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !2770, file: !399, line: 4547, baseType: !403, size: 32, offset: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !2770, file: !399, line: 4548, baseType: !403, size: 32, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !2770, file: !399, line: 4549, baseType: !403, size: 32, offset: 96)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2752, file: !399, line: 4551, baseType: !439, size: 106624, offset: 155520)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2752, file: !399, line: 4574, baseType: !2778, size: 128000, offset: 262144)
!2778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2779, size: 128000, elements: !470)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2752, file: !399, line: 4552, size: 1024, elements: !2780)
!2780 = !{!2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !2779, file: !399, line: 4553, baseType: !403, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !2779, file: !399, line: 4554, baseType: !403, size: 32, offset: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !2779, file: !399, line: 4555, baseType: !403, size: 32, offset: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !2779, file: !399, line: 4556, baseType: !403, size: 32, offset: 96)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !2779, file: !399, line: 4557, baseType: !403, size: 32, offset: 128)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !2779, file: !399, line: 4558, baseType: !403, size: 32, offset: 160)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !2779, file: !399, line: 4559, baseType: !403, size: 32, offset: 192)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !2779, file: !399, line: 4560, baseType: !403, size: 32, offset: 224)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !2779, file: !399, line: 4561, baseType: !403, size: 32, offset: 256)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !2779, file: !399, line: 4562, baseType: !403, size: 32, offset: 288)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !2779, file: !399, line: 4563, baseType: !403, size: 32, offset: 320)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !2779, file: !399, line: 4564, baseType: !403, size: 32, offset: 352)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !2779, file: !399, line: 4565, baseType: !403, size: 32, offset: 384)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !2779, file: !399, line: 4566, baseType: !403, size: 32, offset: 416)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !2779, file: !399, line: 4567, baseType: !403, size: 32, offset: 448)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !2779, file: !399, line: 4568, baseType: !403, size: 32, offset: 480)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2779, file: !399, line: 4569, baseType: !463, size: 384, offset: 512)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !2779, file: !399, line: 4570, baseType: !403, size: 32, offset: 896)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !2779, file: !399, line: 4571, baseType: !403, size: 32, offset: 928)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !2779, file: !399, line: 4572, baseType: !403, size: 32, offset: 960)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2779, file: !399, line: 4573, baseType: !403, size: 32, offset: 992)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !399, line: 8619, baseType: !2804)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 8563, size: 3072, elements: !2805)
!2805 = !{!2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2804, file: !399, line: 8564, baseType: !2651, size: 768)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2804, file: !399, line: 8565, baseType: !403, size: 32, offset: 768)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2804, file: !399, line: 8566, baseType: !403, size: 32, offset: 800)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2804, file: !399, line: 8567, baseType: !403, size: 32, offset: 832)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2804, file: !399, line: 8568, baseType: !403, size: 32, offset: 864)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2804, file: !399, line: 8569, baseType: !403, size: 32, offset: 896)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2804, file: !399, line: 8570, baseType: !403, size: 32, offset: 928)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2804, file: !399, line: 8571, baseType: !403, size: 32, offset: 960)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2804, file: !399, line: 8572, baseType: !403, size: 32, offset: 992)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2804, file: !399, line: 8573, baseType: !403, size: 32, offset: 1024)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2804, file: !399, line: 8574, baseType: !2664, size: 96, offset: 1056)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2804, file: !399, line: 8575, baseType: !403, size: 32, offset: 1152)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2804, file: !399, line: 8576, baseType: !2664, size: 96, offset: 1184)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2804, file: !399, line: 8577, baseType: !403, size: 32, offset: 1280)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2804, file: !399, line: 8578, baseType: !2664, size: 96, offset: 1312)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2804, file: !399, line: 8579, baseType: !403, size: 32, offset: 1408)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2804, file: !399, line: 8580, baseType: !403, size: 32, offset: 1440)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2804, file: !399, line: 8581, baseType: !403, size: 32, offset: 1472)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2804, file: !399, line: 8582, baseType: !403, size: 32, offset: 1504)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2804, file: !399, line: 8583, baseType: !403, size: 32, offset: 1536)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2804, file: !399, line: 8584, baseType: !403, size: 32, offset: 1568)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2804, file: !399, line: 8585, baseType: !403, size: 32, offset: 1600)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2804, file: !399, line: 8586, baseType: !403, size: 32, offset: 1632)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2804, file: !399, line: 8587, baseType: !403, size: 32, offset: 1664)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2804, file: !399, line: 8588, baseType: !403, size: 32, offset: 1696)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2804, file: !399, line: 8589, baseType: !403, size: 32, offset: 1728)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2804, file: !399, line: 8590, baseType: !403, size: 32, offset: 1760)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2804, file: !399, line: 8591, baseType: !403, size: 32, offset: 1792)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2804, file: !399, line: 8592, baseType: !403, size: 32, offset: 1824)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2804, file: !399, line: 8593, baseType: !403, size: 32, offset: 1856)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2804, file: !399, line: 8594, baseType: !403, size: 32, offset: 1888)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2804, file: !399, line: 8595, baseType: !403, size: 32, offset: 1920)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2804, file: !399, line: 8596, baseType: !403, size: 32, offset: 1952)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2804, file: !399, line: 8597, baseType: !403, size: 32, offset: 1984)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2804, file: !399, line: 8598, baseType: !403, size: 32, offset: 2016)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2804, file: !399, line: 8599, baseType: !403, size: 32, offset: 2048)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2804, file: !399, line: 8600, baseType: !2664, size: 96, offset: 2080)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2804, file: !399, line: 8601, baseType: !403, size: 32, offset: 2176)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2804, file: !399, line: 8602, baseType: !2664, size: 96, offset: 2208)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2804, file: !399, line: 8603, baseType: !403, size: 32, offset: 2304)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2804, file: !399, line: 8604, baseType: !2664, size: 96, offset: 2336)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2804, file: !399, line: 8605, baseType: !403, size: 32, offset: 2432)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2804, file: !399, line: 8606, baseType: !403, size: 32, offset: 2464)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2804, file: !399, line: 8607, baseType: !403, size: 32, offset: 2496)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2804, file: !399, line: 8608, baseType: !403, size: 32, offset: 2528)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2804, file: !399, line: 8609, baseType: !403, size: 32, offset: 2560)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2804, file: !399, line: 8610, baseType: !2664, size: 96, offset: 2592)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2804, file: !399, line: 8611, baseType: !403, size: 32, offset: 2688)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2804, file: !399, line: 8612, baseType: !2664, size: 96, offset: 2720)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2804, file: !399, line: 8613, baseType: !403, size: 32, offset: 2816)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2804, file: !399, line: 8614, baseType: !2664, size: 96, offset: 2848)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2804, file: !399, line: 8615, baseType: !403, size: 32, offset: 2944)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2804, file: !399, line: 8616, baseType: !403, size: 32, offset: 2976)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2804, file: !399, line: 8617, baseType: !403, size: 32, offset: 3008)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2804, file: !399, line: 8618, baseType: !403, size: 32, offset: 3040)
!2861 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2862, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2863, splitDebugInlining: false, nameTableKind: None)
!2862 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2863 = !{!102, !552}
!2864 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2865, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2866, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2865 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2866 = !{!2867, !2874, !30}
!2867 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2868, line: 14, baseType: !32, size: 32, elements: !2869)
!2868 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2869 = !{!2870, !2871, !2872, !2873}
!2870 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2871 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2872 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2873 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2868, line: 42, baseType: !32, size: 32, elements: !2875)
!2875 = !{!2876, !2877, !2878, !2879, !2880, !2881}
!2876 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2877 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2878 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2879 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2880 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2881 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2883, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2883 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2884 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2885, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2886, retainedTypes: !2897, splitDebugInlining: false, nameTableKind: None)
!2885 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2886 = !{!2887, !30}
!2887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !654, line: 5323, baseType: !32, size: 32, elements: !2888)
!2888 = !{!2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896}
!2889 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!2890 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!2891 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!2892 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!2893 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!2894 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!2895 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!2896 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!2897 = !{!102, !410, !2898, !702, !2908, !580, !2909, !103, !2910, !670}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 32)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !2900, line: 25, size: 64, elements: !2901)
!2900 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2901 = !{!2902, !2907}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2899, file: !2900, line: 26, baseType: !2903, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !661, line: 39, baseType: !2904)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !661, line: 35, size: 32, elements: !2905)
!2905 = !{!2906}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !2904, file: !661, line: 36, baseType: !670, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2899, file: !2900, line: 27, baseType: !102, size: 32, offset: 32)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !683, line: 49, baseType: !2912)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !2913)
!2913 = !{!2914, !2920}
!2914 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !683, line: 38, baseType: !2915, size: 32)
!2915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2912, file: !683, line: 38, size: 32, elements: !2916)
!2916 = !{!2917, !2919}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2915, file: !683, line: 39, baseType: !2918, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2915, file: !683, line: 40, baseType: !2918, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !683, line: 42, baseType: !2921, size: 32, offset: 32)
!2921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2912, file: !683, line: 42, size: 32, elements: !2922)
!2922 = !{!2923, !2924}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2921, file: !683, line: 43, baseType: !2918, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2921, file: !683, line: 44, baseType: !2918, size: 32)
!2925 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2926, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2927, splitDebugInlining: false, nameTableKind: None)
!2926 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2927 = !{!22, !102, !103}
!2928 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2929, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2929 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2931, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!2932 = !{!"Ubuntu clang version 14.0.6"}
!2933 = !{i32 7, !"Dwarf Version", i32 4}
!2934 = !{i32 2, !"Debug Info Version", i32 3}
!2935 = !{i32 1, !"wchar_size", i32 4}
!2936 = !{i32 1, !"min_enum_size", i32 4}
!2937 = !{i32 1, !"branch-target-enforcement", i32 0}
!2938 = !{i32 1, !"sign-return-address", i32 0}
!2939 = !{i32 1, !"sign-return-address-all", i32 0}
!2940 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2941 = !{i32 7, !"frame-pointer", i32 2}
!2942 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2943, file: !2943, line: 26, type: !2944, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2242, retainedNodes: !675)
!2943 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null}
!2946 = !DILocation(line: 28, column: 1, scope: !2942)
!2947 = !{i64 2155071427, i64 2155071447, i64 2155071510}
!2948 = !DILocation(line: 29, column: 1, scope: !2942)
!2949 = !{i64 2155071842, i64 2155071862, i64 2155071925}
!2950 = !DILocation(line: 30, column: 1, scope: !2942)
!2951 = !{i64 2155072261, i64 2155072281, i64 2155072344}
!2952 = !DILocation(line: 31, column: 1, scope: !2942)
!2953 = !{i64 2155072680, i64 2155072700, i64 2155072763}
!2954 = !DILocation(line: 33, column: 1, scope: !2942)
!2955 = !{i64 2155072972, i64 2155072992, i64 2155073055}
!2956 = !DILocation(line: 35, column: 1, scope: !2942)
!2957 = !{i64 2155073297, i64 2155073317, i64 2155073380}
!2958 = !DILocation(line: 50, column: 1, scope: !2942)
!2959 = !{i64 2155073724, i64 2155073744, i64 2155073807}
!2960 = !DILocation(line: 54, column: 1, scope: !2942)
!2961 = !{i64 2155074163, i64 2155074183, i64 2155074246}
!2962 = !DILocation(line: 61, column: 1, scope: !2942)
!2963 = !{i64 2155074480, i64 2155074500, i64 2155074563}
!2964 = !DILocation(line: 63, column: 1, scope: !2942)
!2965 = !{i64 2155074860, i64 2155074880, i64 2155074943}
!2966 = !DILocation(line: 64, column: 1, scope: !2942)
!2967 = !{i64 2155079443, i64 2155079463, i64 2155079526}
!2968 = !DILocation(line: 65, column: 1, scope: !2942)
!2969 = !{i64 2155079941, i64 2155079961, i64 2155080024}
!2970 = !DILocation(line: 66, column: 1, scope: !2942)
!2971 = !{i64 2155080423, i64 2155080443, i64 2155080506}
!2972 = !DILocation(line: 67, column: 1, scope: !2942)
!2973 = !{i64 2155080930, i64 2155080950, i64 2155081013}
!2974 = !DILocation(line: 68, column: 1, scope: !2942)
!2975 = !{i64 2155081418, i64 2155081438, i64 2155081501}
!2976 = !DILocation(line: 70, column: 1, scope: !2942)
!2977 = !{i64 2155081886, i64 2155081906, i64 2155081969}
!2978 = !DILocation(line: 71, column: 1, scope: !2942)
!2979 = !{i64 2155082328, i64 2155082348, i64 2155082411}
!2980 = !DILocation(line: 72, column: 1, scope: !2942)
!2981 = !{i64 2155082786, i64 2155082806, i64 2155082869}
!2982 = !DILocation(line: 97, column: 1, scope: !2942)
!2983 = !{i64 2155083093, i64 2155083113, i64 2155083176}
!2984 = !DILocation(line: 99, column: 1, scope: !2942)
!2985 = !{i64 2155083311, i64 2155083331, i64 2155083394}
!2986 = !DILocation(line: 102, column: 1, scope: !2942)
!2987 = !{i64 2155083568, i64 2155083588, i64 2155083651}
!2988 = !DILocation(line: 105, column: 1, scope: !2942)
!2989 = !{i64 2155083808, i64 2155083828, i64 2155083891}
!2990 = !DILocation(line: 115, column: 1, scope: !2942)
!2991 = !{i64 2155084147, i64 2155084167, i64 2155084230}
!2992 = !DILocation(line: 118, column: 1, scope: !2942)
!2993 = !{i64 2155084491, i64 2155084511, i64 2155084574}
!2994 = !DILocation(line: 32, column: 1, scope: !2995)
!2995 = !DILexicalBlockFile(scope: !2942, file: !2996, discriminator: 0)
!2996 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2997 = !{i64 2155084847, i64 2155084867, i64 2155084930}
!2998 = !DILocation(line: 33, column: 1, scope: !2995)
!2999 = !{i64 2155085359, i64 2155085379, i64 2155085442}
!3000 = !DILocation(line: 53, column: 1, scope: !2995)
!3001 = !{i64 2155085867, i64 2155085887, i64 2155085950}
!3002 = !DILocation(line: 54, column: 1, scope: !2995)
!3003 = !{i64 2155086285, i64 2155086305, i64 2155086368}
!3004 = !DILocation(line: 55, column: 1, scope: !2995)
!3005 = !{i64 2155086703, i64 2155086723, i64 2155086786}
!3006 = !DILocation(line: 56, column: 1, scope: !2995)
!3007 = !{i64 2155087121, i64 2155087141, i64 2155087204}
!3008 = !DILocation(line: 57, column: 1, scope: !2995)
!3009 = !{i64 2155087539, i64 2155087559, i64 2155087622}
!3010 = !DILocation(line: 58, column: 1, scope: !2995)
!3011 = !{i64 2155087957, i64 2155087977, i64 2155088040}
!3012 = !DILocation(line: 59, column: 1, scope: !2995)
!3013 = !{i64 2155088375, i64 2155088395, i64 2155088458}
!3014 = !DILocation(line: 60, column: 1, scope: !2995)
!3015 = !{i64 2155088799, i64 2155088819, i64 2155088882}
!3016 = !DILocation(line: 61, column: 1, scope: !2995)
!3017 = !{i64 2155093177, i64 2155093197, i64 2155093260}
!3018 = !DILocation(line: 70, column: 1, scope: !2995)
!3019 = !{i64 2155093406, i64 2155093426, i64 2155093489}
!3020 = !DILocation(line: 72, column: 1, scope: !2995)
!3021 = !{i64 2155093738, i64 2155093758, i64 2155093821}
!3022 = !DILocation(line: 73, column: 1, scope: !2995)
!3023 = !{i64 2155094188, i64 2155094208, i64 2155094271}
!3024 = !DILocation(line: 74, column: 1, scope: !2995)
!3025 = !{i64 2155094638, i64 2155094658, i64 2155094721}
!3026 = !DILocation(line: 75, column: 1, scope: !2995)
!3027 = !{i64 2155095088, i64 2155095108, i64 2155095171}
!3028 = !DILocation(line: 76, column: 1, scope: !2995)
!3029 = !{i64 2155095538, i64 2155095558, i64 2155095621}
!3030 = !DILocation(line: 77, column: 1, scope: !2995)
!3031 = !{i64 2155095988, i64 2155096008, i64 2155096071}
!3032 = !DILocation(line: 78, column: 1, scope: !2995)
!3033 = !{i64 2155096438, i64 2155096458, i64 2155096521}
!3034 = !DILocation(line: 79, column: 1, scope: !2995)
!3035 = !{i64 2155096888, i64 2155096908, i64 2155096971}
!3036 = !DILocation(line: 80, column: 1, scope: !2995)
!3037 = !{i64 2155097341, i64 2155097361, i64 2155097424}
!3038 = !DILocation(line: 84, column: 1, scope: !2995)
!3039 = !{i64 2155097673, i64 2155097693, i64 2155097756}
!3040 = !DILocation(line: 106, column: 1, scope: !2995)
!3041 = !{i64 2155097923, i64 2155097943, i64 2155098006}
!3042 = !DILocation(line: 11, column: 1, scope: !3043)
!3043 = !DILexicalBlockFile(scope: !2942, file: !3044, discriminator: 0)
!3044 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3045 = distinct !DISubprogram(name: "main", scope: !3046, file: !3046, line: 12, type: !2944, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !3047)
!3046 = !DIFile(filename: "zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3047 = !{!3048}
!3048 = !DILocalVariable(name: "s", scope: !3049, file: !3046, line: 19, type: !702)
!3049 = distinct !DILexicalBlock(scope: !3045, file: !3046, line: 18, column: 12)
!3050 = !DILocation(line: 14, column: 2, scope: !3045)
!3051 = !DILocation(line: 16, column: 2, scope: !3045)
!3052 = !DILocation(line: 18, column: 2, scope: !3045)
!3053 = !DILocation(line: 19, column: 13, scope: !3049)
!3054 = !DILocation(line: 0, scope: !3049)
!3055 = !DILocation(line: 21, column: 3, scope: !3049)
!3056 = !DILocation(line: 22, column: 37, scope: !3049)
!3057 = !DILocation(line: 22, column: 47, scope: !3049)
!3058 = !DILocation(line: 22, column: 35, scope: !3049)
!3059 = !DILocation(line: 22, column: 3, scope: !3049)
!3060 = distinct !{!3060, !3052, !3061}
!3061 = !DILocation(line: 23, column: 2, scope: !3045)
!3062 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3063)
!3063 = !{!3064}
!3064 = !DILocalVariable(name: "c", arg: 1, scope: !3062, file: !105, line: 45, type: !103)
!3065 = !DILocation(line: 0, scope: !3062)
!3066 = !DILocation(line: 50, column: 2, scope: !3062)
!3067 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3068, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3070)
!3068 = !DISubroutineType(types: !3069)
!3069 = !{null, !106}
!3070 = !{!3071}
!3071 = !DILocalVariable(name: "fn", arg: 1, scope: !3067, file: !105, line: 63, type: !106)
!3072 = !DILocation(line: 0, scope: !3067)
!3073 = !DILocation(line: 65, column: 12, scope: !3067)
!3074 = !DILocation(line: 66, column: 1, scope: !3067)
!3075 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3076, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !675)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!102}
!3078 = !DILocation(line: 78, column: 9, scope: !3075)
!3079 = !DILocation(line: 78, column: 2, scope: !3075)
!3080 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3081, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3090)
!3081 = !DISubroutineType(types: !3082)
!3082 = !{null, !569, !3083}
!3083 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3084, line: 99, baseType: !3085)
!3084 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3085 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3084, line: 40, baseType: !3086)
!3086 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3087)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3088)
!3088 = !{!3089}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3087, file: !105, line: 79, baseType: !102, size: 32)
!3090 = !{!3091, !3092, !3093}
!3091 = !DILocalVariable(name: "fmt", arg: 1, scope: !3080, file: !105, line: 113, type: !569)
!3092 = !DILocalVariable(name: "ap", arg: 2, scope: !3080, file: !105, line: 113, type: !3083)
!3093 = !DILocalVariable(name: "ctx", scope: !3094, file: !105, line: 121, type: !3096)
!3094 = distinct !DILexicalBlock(scope: !3095, file: !105, line: 120, column: 27)
!3095 = distinct !DILexicalBlock(scope: !3080, file: !105, line: 120, column: 6)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3097)
!3097 = !{!3098, !3099}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3096, file: !105, line: 85, baseType: !32, size: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3096, file: !105, line: 86, baseType: !3100, offset: 32)
!3100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, elements: !2278)
!3101 = !DILocation(line: 0, scope: !3080)
!3102 = !DILocation(line: 148, column: 3, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3095, file: !105, line: 138, column: 9)
!3104 = !DILocation(line: 155, column: 1, scope: !3080)
!3105 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3106, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3108)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!103, !103, !102}
!3108 = !{!3109, !3110}
!3109 = !DILocalVariable(name: "c", arg: 1, scope: !3105, file: !105, line: 107, type: !103)
!3110 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3105, file: !105, line: 107, type: !102)
!3111 = !DILocation(line: 0, scope: !3105)
!3112 = !DILocation(line: 110, column: 9, scope: !3105)
!3113 = !DILocation(line: 110, column: 2, scope: !3105)
!3114 = distinct !DISubprogram(name: "cbvprintf", scope: !3115, file: !3115, line: 739, type: !3116, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3122)
!3115 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3116 = !DISubroutineType(types: !3117)
!3117 = !{!103, !3118, !102, !569, !3083}
!3118 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3115, line: 297, baseType: !3119)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 32)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!103, null}
!3122 = !{!3123, !3124, !3125, !3126}
!3123 = !DILocalVariable(name: "out", arg: 1, scope: !3114, file: !3115, line: 739, type: !3118)
!3124 = !DILocalVariable(name: "ctx", arg: 2, scope: !3114, file: !3115, line: 739, type: !102)
!3125 = !DILocalVariable(name: "format", arg: 3, scope: !3114, file: !3115, line: 739, type: !569)
!3126 = !DILocalVariable(name: "ap", arg: 4, scope: !3114, file: !3115, line: 739, type: !3083)
!3127 = !DILocation(line: 0, scope: !3114)
!3128 = !DILocation(line: 741, column: 9, scope: !3114)
!3129 = !DILocation(line: 741, column: 2, scope: !3114)
!3130 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3131, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3133)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{null, !702, !552}
!3133 = !{!3134, !3135, !3136}
!3134 = !DILocalVariable(name: "c", arg: 1, scope: !3130, file: !105, line: 157, type: !702)
!3135 = !DILocalVariable(name: "n", arg: 2, scope: !3130, file: !105, line: 157, type: !552)
!3136 = !DILocalVariable(name: "i", scope: !3130, file: !105, line: 159, type: !552)
!3137 = !DILocation(line: 0, scope: !3130)
!3138 = !DILocation(line: 164, column: 16, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !105, line: 164, column: 2)
!3140 = distinct !DILexicalBlock(scope: !3130, file: !105, line: 164, column: 2)
!3141 = !DILocation(line: 164, column: 2, scope: !3140)
!3142 = !DILocation(line: 165, column: 3, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3139, file: !105, line: 164, column: 26)
!3144 = !DILocation(line: 165, column: 13, scope: !3143)
!3145 = !DILocation(line: 164, column: 22, scope: !3139)
!3146 = distinct !{!3146, !3141, !3147}
!3147 = !DILocation(line: 166, column: 2, scope: !3140)
!3148 = !DILocation(line: 171, column: 1, scope: !3130)
!3149 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3150, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3152)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{null, !569, null}
!3152 = !{!3153, !3154}
!3153 = !DILocalVariable(name: "fmt", arg: 1, scope: !3149, file: !105, line: 203, type: !569)
!3154 = !DILocalVariable(name: "ap", scope: !3149, file: !105, line: 205, type: !3083)
!3155 = !DILocation(line: 0, scope: !3149)
!3156 = !DILocation(line: 205, column: 2, scope: !3149)
!3157 = !DILocation(line: 205, column: 10, scope: !3149)
!3158 = !DILocation(line: 207, column: 2, scope: !3149)
!3159 = !DILocation(line: 209, column: 2, scope: !3149)
!3160 = !DILocation(line: 211, column: 2, scope: !3149)
!3161 = !DILocation(line: 212, column: 1, scope: !3149)
!3162 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3163, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3165)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!103, !702, !552, !569, null}
!3165 = !{!3166, !3167, !3168, !3169, !3170}
!3166 = !DILocalVariable(name: "str", arg: 1, scope: !3162, file: !105, line: 239, type: !702)
!3167 = !DILocalVariable(name: "size", arg: 2, scope: !3162, file: !105, line: 239, type: !552)
!3168 = !DILocalVariable(name: "fmt", arg: 3, scope: !3162, file: !105, line: 239, type: !569)
!3169 = !DILocalVariable(name: "ap", scope: !3162, file: !105, line: 241, type: !3083)
!3170 = !DILocalVariable(name: "ret", scope: !3162, file: !105, line: 242, type: !103)
!3171 = !DILocation(line: 0, scope: !3162)
!3172 = !DILocation(line: 241, column: 2, scope: !3162)
!3173 = !DILocation(line: 241, column: 10, scope: !3162)
!3174 = !DILocation(line: 244, column: 2, scope: !3162)
!3175 = !DILocation(line: 245, column: 8, scope: !3162)
!3176 = !DILocation(line: 246, column: 2, scope: !3162)
!3177 = !DILocation(line: 249, column: 1, scope: !3162)
!3178 = !DILocation(line: 248, column: 2, scope: !3162)
!3179 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3180, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3182)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{!103, !702, !552, !569, !3083}
!3182 = !{!3183, !3184, !3185, !3186, !3187}
!3183 = !DILocalVariable(name: "str", arg: 1, scope: !3179, file: !105, line: 251, type: !702)
!3184 = !DILocalVariable(name: "size", arg: 2, scope: !3179, file: !105, line: 251, type: !552)
!3185 = !DILocalVariable(name: "fmt", arg: 3, scope: !3179, file: !105, line: 251, type: !569)
!3186 = !DILocalVariable(name: "ap", arg: 4, scope: !3179, file: !105, line: 251, type: !3083)
!3187 = !DILocalVariable(name: "ctx", scope: !3179, file: !105, line: 253, type: !3188)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3189)
!3189 = !{!3190, !3191, !3192}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3188, file: !105, line: 218, baseType: !702, size: 32)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3188, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3188, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3193 = !DILocation(line: 0, scope: !3179)
!3194 = !DILocation(line: 253, column: 2, scope: !3179)
!3195 = !DILocation(line: 253, column: 21, scope: !3179)
!3196 = !DILocation(line: 253, column: 27, scope: !3179)
!3197 = !DILocation(line: 255, column: 2, scope: !3179)
!3198 = !DILocation(line: 257, column: 10, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3179, file: !105, line: 257, column: 6)
!3200 = !DILocation(line: 257, column: 22, scope: !3199)
!3201 = !DILocation(line: 257, column: 16, scope: !3199)
!3202 = !DILocation(line: 257, column: 6, scope: !3179)
!3203 = !DILocation(line: 258, column: 3, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3199, file: !105, line: 257, column: 27)
!3205 = !DILocation(line: 258, column: 18, scope: !3204)
!3206 = !DILocation(line: 259, column: 2, scope: !3204)
!3207 = !DILocation(line: 262, column: 1, scope: !3179)
!3208 = !DILocation(line: 261, column: 2, scope: !3179)
!3209 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3210, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3213)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{!103, !103, !3212}
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 32)
!3213 = !{!3214, !3215}
!3214 = !DILocalVariable(name: "c", arg: 1, scope: !3209, file: !105, line: 223, type: !103)
!3215 = !DILocalVariable(name: "ctx", arg: 2, scope: !3209, file: !105, line: 223, type: !3212)
!3216 = !DILocation(line: 0, scope: !3209)
!3217 = !DILocation(line: 225, column: 11, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3209, file: !105, line: 225, column: 6)
!3219 = !DILocation(line: 225, column: 15, scope: !3218)
!3220 = !DILocation(line: 0, scope: !3218)
!3221 = !DILocation(line: 225, column: 23, scope: !3218)
!3222 = !DILocation(line: 225, column: 45, scope: !3218)
!3223 = !DILocation(line: 225, column: 37, scope: !3218)
!3224 = !DILocation(line: 225, column: 6, scope: !3209)
!3225 = !DILocation(line: 226, column: 8, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3218, file: !105, line: 225, column: 50)
!3227 = !DILocation(line: 226, column: 13, scope: !3226)
!3228 = !DILocation(line: 227, column: 3, scope: !3226)
!3229 = !DILocation(line: 230, column: 29, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3209, file: !105, line: 230, column: 6)
!3231 = !DILocation(line: 230, column: 17, scope: !3230)
!3232 = !DILocation(line: 230, column: 6, scope: !3209)
!3233 = !DILocation(line: 231, column: 22, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3230, file: !105, line: 230, column: 34)
!3235 = !DILocation(line: 231, column: 3, scope: !3234)
!3236 = !DILocation(line: 231, column: 26, scope: !3234)
!3237 = !DILocation(line: 232, column: 2, scope: !3234)
!3238 = !DILocation(line: 233, column: 28, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3230, file: !105, line: 232, column: 9)
!3240 = !DILocation(line: 233, column: 22, scope: !3239)
!3241 = !DILocation(line: 233, column: 3, scope: !3239)
!3242 = !DILocation(line: 233, column: 26, scope: !3239)
!3243 = !DILocation(line: 237, column: 1, scope: !3209)
!3244 = distinct !DISubprogram(name: "z_thread_entry", scope: !3245, file: !3245, line: 30, type: !3246, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2246, retainedNodes: !3253)
!3245 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3246 = !DISubroutineType(types: !3247)
!3247 = !{null, !3248, !102, !102, !102}
!3248 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3249, line: 46, baseType: !3250)
!3249 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 32)
!3251 = !DISubroutineType(types: !3252)
!3252 = !{null, !102, !102, !102}
!3253 = !{!3254, !3255, !3256, !3257}
!3254 = !DILocalVariable(name: "entry", arg: 1, scope: !3244, file: !3245, line: 30, type: !3248)
!3255 = !DILocalVariable(name: "p1", arg: 2, scope: !3244, file: !3245, line: 31, type: !102)
!3256 = !DILocalVariable(name: "p2", arg: 3, scope: !3244, file: !3245, line: 31, type: !102)
!3257 = !DILocalVariable(name: "p3", arg: 4, scope: !3244, file: !3245, line: 31, type: !102)
!3258 = !DILocation(line: 0, scope: !3244)
!3259 = !DILocation(line: 36, column: 2, scope: !3244)
!3260 = !DILocation(line: 38, column: 17, scope: !3244)
!3261 = !DILocation(line: 38, column: 2, scope: !3244)
!3262 = !DILocation(line: 45, column: 2, scope: !3244)
!3263 = distinct !DISubprogram(name: "k_current_get", scope: !654, file: !654, line: 530, type: !3264, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2246, retainedNodes: !675)
!3264 = !DISubroutineType(types: !3265)
!3265 = !{!3266}
!3266 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1787, line: 347, baseType: !3267)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 32)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1787, line: 245, size: 896, elements: !3269)
!3269 = !{!3270, !3328, !3340, !3341, !3342, !3343, !3356}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3268, file: !1787, line: 247, baseType: !3271, size: 384)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1787, line: 57, size: 384, elements: !3272)
!3272 = !{!3273, !3297, !3304, !3305, !3306, !3315, !3316, !3317}
!3273 = !DIDerivedType(tag: DW_TAG_member, scope: !3271, file: !1787, line: 60, baseType: !3274, size: 64)
!3274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3271, file: !1787, line: 60, size: 64, elements: !3275)
!3275 = !{!3276, !3291}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3274, file: !1787, line: 61, baseType: !3277, size: 64)
!3277 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !683, line: 49, baseType: !3278)
!3278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !3279)
!3279 = !{!3280, !3286}
!3280 = !DIDerivedType(tag: DW_TAG_member, scope: !3278, file: !683, line: 38, baseType: !3281, size: 32)
!3281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3278, file: !683, line: 38, size: 32, elements: !3282)
!3282 = !{!3283, !3285}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3281, file: !683, line: 39, baseType: !3284, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3281, file: !683, line: 40, baseType: !3284, size: 32)
!3286 = !DIDerivedType(tag: DW_TAG_member, scope: !3278, file: !683, line: 42, baseType: !3287, size: 32, offset: 32)
!3287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3278, file: !683, line: 42, size: 32, elements: !3288)
!3288 = !{!3289, !3290}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3287, file: !683, line: 43, baseType: !3284, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3287, file: !683, line: 44, baseType: !3284, size: 32)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3274, file: !1787, line: 62, baseType: !3292, size: 64)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1812, line: 49, size: 64, elements: !3293)
!3293 = !{!3294}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3292, file: !1812, line: 50, baseType: !3295, size: 64)
!3295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3296, size: 64, elements: !721)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3271, file: !1787, line: 68, baseType: !3298, size: 32, offset: 64)
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 32)
!3299 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !3300)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !3301)
!3301 = !{!3302}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3300, file: !678, line: 232, baseType: !3303, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !3278)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3271, file: !1787, line: 71, baseType: !410, size: 8, offset: 96)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3271, file: !1787, line: 74, baseType: !410, size: 8, offset: 104)
!3306 = !DIDerivedType(tag: DW_TAG_member, scope: !3271, file: !1787, line: 90, baseType: !3307, size: 16, offset: 112)
!3307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3271, file: !1787, line: 90, size: 16, elements: !3308)
!3308 = !{!3309, !3314}
!3309 = !DIDerivedType(tag: DW_TAG_member, scope: !3307, file: !1787, line: 91, baseType: !3310, size: 16)
!3310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3307, file: !1787, line: 91, size: 16, elements: !3311)
!3311 = !{!3312, !3313}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3310, file: !1787, line: 96, baseType: !1833, size: 8)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3310, file: !1787, line: 97, baseType: !410, size: 8, offset: 8)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3307, file: !1787, line: 100, baseType: !521, size: 16)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3271, file: !1787, line: 107, baseType: !404, size: 32, offset: 128)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3271, file: !1787, line: 127, baseType: !102, size: 32, offset: 160)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3271, file: !1787, line: 131, baseType: !3318, size: 192, offset: 192)
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !678, line: 244, size: 192, elements: !3319)
!3319 = !{!3320, !3321, !3327}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3318, file: !678, line: 245, baseType: !3277, size: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3318, file: !678, line: 246, baseType: !3322, size: 32, offset: 64)
!3322 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !678, line: 242, baseType: !3323)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 32)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{null, !3326}
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3318, file: !678, line: 249, baseType: !550, size: 64, offset: 128)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3268, file: !1787, line: 250, baseType: !3329, size: 288, offset: 384)
!3329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1852, line: 25, size: 288, elements: !3330)
!3330 = !{!3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3329, file: !1852, line: 26, baseType: !404, size: 32)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3329, file: !1852, line: 27, baseType: !404, size: 32, offset: 32)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3329, file: !1852, line: 28, baseType: !404, size: 32, offset: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3329, file: !1852, line: 29, baseType: !404, size: 32, offset: 96)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3329, file: !1852, line: 30, baseType: !404, size: 32, offset: 128)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3329, file: !1852, line: 31, baseType: !404, size: 32, offset: 160)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3329, file: !1852, line: 32, baseType: !404, size: 32, offset: 192)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3329, file: !1852, line: 33, baseType: !404, size: 32, offset: 224)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3329, file: !1852, line: 34, baseType: !404, size: 32, offset: 256)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3268, file: !1787, line: 253, baseType: !102, size: 32, offset: 672)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3268, file: !1787, line: 256, baseType: !3299, size: 64, offset: 704)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3268, file: !1787, line: 294, baseType: !103, size: 32, offset: 768)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3268, file: !1787, line: 325, baseType: !3344, size: 32, offset: 800)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 32)
!3345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !654, line: 5073, size: 160, elements: !3346)
!3346 = !{!3347, !3353, !3354}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3345, file: !654, line: 5074, baseType: !3348, size: 96)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !3349)
!3349 = !{!3350, !3351, !3352}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3348, file: !1872, line: 57, baseType: !1875, size: 32)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3348, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3348, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3345, file: !654, line: 5075, baseType: !3299, size: 64, offset: 96)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3345, file: !654, line: 5076, baseType: !3355, offset: 160)
!3355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3268, file: !1787, line: 343, baseType: !3357, size: 64, offset: 832)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1852, line: 60, size: 64, elements: !3358)
!3358 = !{!3359, !3360}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3357, file: !1852, line: 63, baseType: !404, size: 32)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3357, file: !1852, line: 66, baseType: !404, size: 32, offset: 32)
!3361 = !DILocation(line: 535, column: 9, scope: !3263)
!3362 = !DILocation(line: 535, column: 2, scope: !3263)
!3363 = distinct !DISubprogram(name: "k_thread_abort", scope: !3364, file: !3364, line: 188, type: !3365, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2246, retainedNodes: !3367)
!3364 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!3365 = !DISubroutineType(types: !3366)
!3366 = !{null, !3266}
!3367 = !{!3368}
!3368 = !DILocalVariable(name: "thread", arg: 1, scope: !3363, file: !3364, line: 188, type: !3266)
!3369 = !DILocation(line: 0, scope: !3363)
!3370 = !DILocation(line: 197, column: 2, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3363, file: !3364, line: 197, column: 2)
!3372 = !{i64 2151033516}
!3373 = !DILocation(line: 198, column: 2, scope: !3363)
!3374 = !DILocation(line: 199, column: 1, scope: !3363)
!3375 = distinct !DISubprogram(name: "z_current_get", scope: !3364, file: !3364, line: 173, type: !3264, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2246, retainedNodes: !675)
!3376 = !DILocation(line: 180, column: 2, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3375, file: !3364, line: 180, column: 2)
!3378 = !{i64 2151033448}
!3379 = !DILocation(line: 181, column: 9, scope: !3375)
!3380 = !DILocation(line: 181, column: 2, scope: !3375)
!3381 = distinct !DISubprogram(name: "sys_heap_free", scope: !3382, file: !3382, line: 163, type: !3383, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3391)
!3382 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3383 = !DISubroutineType(types: !3384)
!3384 = !{null, !3385, !102}
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 32)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !3387)
!3387 = !{!3388, !3389, !3390}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3386, file: !1872, line: 57, baseType: !2265, size: 32)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3386, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3386, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!3391 = !{!3392, !3393, !3394, !3395}
!3392 = !DILocalVariable(name: "heap", arg: 1, scope: !3381, file: !3382, line: 163, type: !3385)
!3393 = !DILocalVariable(name: "mem", arg: 2, scope: !3381, file: !3382, line: 163, type: !102)
!3394 = !DILocalVariable(name: "h", scope: !3381, file: !3382, line: 168, type: !2265)
!3395 = !DILocalVariable(name: "c", scope: !3381, file: !3382, line: 169, type: !2270)
!3396 = !DILocation(line: 0, scope: !3381)
!3397 = !DILocation(line: 165, column: 10, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3381, file: !3382, line: 165, column: 6)
!3399 = !DILocation(line: 165, column: 6, scope: !3381)
!3400 = !DILocation(line: 168, column: 27, scope: !3381)
!3401 = !DILocation(line: 169, column: 16, scope: !3381)
!3402 = !{i32 0, i32 536870912}
!3403 = !DILocation(line: 187, column: 2, scope: !3381)
!3404 = !DILocation(line: 197, column: 2, scope: !3381)
!3405 = !DILocation(line: 198, column: 1, scope: !3381)
!3406 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3382, file: !3382, line: 157, type: !3407, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3409)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{!2270, !2265, !102}
!3409 = !{!3410, !3411, !3412, !3413}
!3410 = !DILocalVariable(name: "h", arg: 1, scope: !3406, file: !3382, line: 157, type: !2265)
!3411 = !DILocalVariable(name: "p", arg: 2, scope: !3406, file: !3382, line: 157, type: !102)
!3412 = !DILocalVariable(name: "mem", scope: !3406, file: !3382, line: 159, type: !625)
!3413 = !DILocalVariable(name: "base", scope: !3406, file: !3382, line: 159, type: !625)
!3414 = !DILocation(line: 0, scope: !3406)
!3415 = !DILocation(line: 159, column: 39, scope: !3406)
!3416 = !DILocation(line: 160, column: 14, scope: !3406)
!3417 = !DILocation(line: 160, column: 38, scope: !3406)
!3418 = !DILocation(line: 160, column: 46, scope: !3406)
!3419 = !DILocation(line: 160, column: 2, scope: !3406)
!3420 = distinct !DISubprogram(name: "set_chunk_used", scope: !2252, file: !2252, line: 147, type: !3421, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3423)
!3421 = !DISubroutineType(types: !3422)
!3422 = !{null, !2265, !2270, !580}
!3423 = !{!3424, !3425, !3426, !3427, !3428}
!3424 = !DILocalVariable(name: "h", arg: 1, scope: !3420, file: !2252, line: 147, type: !2265)
!3425 = !DILocalVariable(name: "c", arg: 2, scope: !3420, file: !2252, line: 147, type: !2270)
!3426 = !DILocalVariable(name: "used", arg: 3, scope: !3420, file: !2252, line: 147, type: !580)
!3427 = !DILocalVariable(name: "buf", scope: !3420, file: !2252, line: 149, type: !2259)
!3428 = !DILocalVariable(name: "cmem", scope: !3420, file: !2252, line: 150, type: !102)
!3429 = !DILocation(line: 0, scope: !3420)
!3430 = !DILocation(line: 149, column: 22, scope: !3420)
!3431 = !DILocation(line: 0, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !2252, line: 159, column: 7)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !2252, line: 158, column: 9)
!3434 = distinct !DILexicalBlock(scope: !3420, file: !2252, line: 152, column: 6)
!3435 = !DILocation(line: 159, column: 7, scope: !3433)
!3436 = !DILocation(line: 165, column: 1, scope: !3420)
!3437 = distinct !DISubprogram(name: "free_chunk", scope: !3382, file: !3382, line: 133, type: !3438, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3440)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{null, !2265, !2270}
!3440 = !{!3441, !3442}
!3441 = !DILocalVariable(name: "h", arg: 1, scope: !3437, file: !3382, line: 133, type: !2265)
!3442 = !DILocalVariable(name: "c", arg: 2, scope: !3437, file: !3382, line: 133, type: !2270)
!3443 = !DILocation(line: 0, scope: !3437)
!3444 = !DILocation(line: 136, column: 21, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3437, file: !3382, line: 136, column: 6)
!3446 = !DILocation(line: 136, column: 7, scope: !3445)
!3447 = !DILocation(line: 136, column: 6, scope: !3437)
!3448 = !DILocation(line: 137, column: 3, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3445, file: !3382, line: 136, column: 41)
!3450 = !DILocation(line: 138, column: 22, scope: !3449)
!3451 = !DILocation(line: 138, column: 3, scope: !3449)
!3452 = !DILocation(line: 139, column: 2, scope: !3449)
!3453 = !DILocation(line: 142, column: 21, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3437, file: !3382, line: 142, column: 6)
!3455 = !{i32 -65535, i32 536903678}
!3456 = !DILocation(line: 142, column: 7, scope: !3454)
!3457 = !DILocation(line: 142, column: 6, scope: !3437)
!3458 = !DILocation(line: 143, column: 3, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3454, file: !3382, line: 142, column: 40)
!3460 = !DILocation(line: 144, column: 19, scope: !3459)
!3461 = !DILocation(line: 144, column: 3, scope: !3459)
!3462 = !DILocation(line: 145, column: 7, scope: !3459)
!3463 = !DILocation(line: 146, column: 2, scope: !3459)
!3464 = !DILocation(line: 148, column: 2, scope: !3437)
!3465 = !DILocation(line: 149, column: 1, scope: !3437)
!3466 = distinct !DISubprogram(name: "right_chunk", scope: !2252, file: !2252, line: 204, type: !3467, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3469)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{!2270, !2265, !2270}
!3469 = !{!3470, !3471}
!3470 = !DILocalVariable(name: "h", arg: 1, scope: !3466, file: !2252, line: 204, type: !2265)
!3471 = !DILocalVariable(name: "c", arg: 2, scope: !3466, file: !2252, line: 204, type: !2270)
!3472 = !DILocation(line: 0, scope: !3466)
!3473 = !DILocation(line: 206, column: 13, scope: !3466)
!3474 = !DILocation(line: 206, column: 11, scope: !3466)
!3475 = !DILocation(line: 206, column: 2, scope: !3466)
!3476 = distinct !DISubprogram(name: "chunk_used", scope: !2252, file: !2252, line: 137, type: !3477, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3479)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{!580, !2265, !2270}
!3479 = !{!3480, !3481}
!3480 = !DILocalVariable(name: "h", arg: 1, scope: !3476, file: !2252, line: 137, type: !2265)
!3481 = !DILocalVariable(name: "c", arg: 2, scope: !3476, file: !2252, line: 137, type: !2270)
!3482 = !DILocation(line: 0, scope: !3476)
!3483 = !DILocation(line: 139, column: 9, scope: !3476)
!3484 = !DILocation(line: 139, column: 42, scope: !3476)
!3485 = !DILocation(line: 139, column: 2, scope: !3476)
!3486 = distinct !DISubprogram(name: "free_list_remove", scope: !3382, file: !3382, line: 60, type: !3438, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3487)
!3487 = !{!3488, !3489, !3490}
!3488 = !DILocalVariable(name: "h", arg: 1, scope: !3486, file: !3382, line: 60, type: !2265)
!3489 = !DILocalVariable(name: "c", arg: 2, scope: !3486, file: !3382, line: 60, type: !2270)
!3490 = !DILocalVariable(name: "bidx", scope: !3491, file: !3382, line: 63, type: !103)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !3382, line: 62, column: 31)
!3492 = distinct !DILexicalBlock(scope: !3486, file: !3382, line: 62, column: 6)
!3493 = !DILocation(line: 0, scope: !3486)
!3494 = !DILocation(line: 63, column: 28, scope: !3491)
!3495 = !{i32 0, i32 32768}
!3496 = !DILocation(line: 63, column: 14, scope: !3491)
!3497 = !DILocation(line: 0, scope: !3491)
!3498 = !DILocation(line: 64, column: 3, scope: !3491)
!3499 = !DILocation(line: 66, column: 1, scope: !3486)
!3500 = distinct !DISubprogram(name: "merge_chunks", scope: !3382, file: !3382, line: 125, type: !3501, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3503)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{null, !2265, !2270, !2270}
!3503 = !{!3504, !3505, !3506, !3507}
!3504 = !DILocalVariable(name: "h", arg: 1, scope: !3500, file: !3382, line: 125, type: !2265)
!3505 = !DILocalVariable(name: "lc", arg: 2, scope: !3500, file: !3382, line: 125, type: !2270)
!3506 = !DILocalVariable(name: "rc", arg: 3, scope: !3500, file: !3382, line: 125, type: !2270)
!3507 = !DILocalVariable(name: "newsz", scope: !3500, file: !3382, line: 127, type: !3508)
!3508 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2252, line: 62, baseType: !404)
!3509 = !DILocation(line: 0, scope: !3500)
!3510 = !DILocation(line: 127, column: 20, scope: !3500)
!3511 = !DILocation(line: 127, column: 40, scope: !3500)
!3512 = !DILocation(line: 127, column: 38, scope: !3500)
!3513 = !DILocation(line: 129, column: 2, scope: !3500)
!3514 = !DILocation(line: 130, column: 25, scope: !3500)
!3515 = !DILocation(line: 130, column: 2, scope: !3500)
!3516 = !DILocation(line: 131, column: 1, scope: !3500)
!3517 = distinct !DISubprogram(name: "left_chunk", scope: !2252, file: !2252, line: 199, type: !3467, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3518)
!3518 = !{!3519, !3520}
!3519 = !DILocalVariable(name: "h", arg: 1, scope: !3517, file: !2252, line: 199, type: !2265)
!3520 = !DILocalVariable(name: "c", arg: 2, scope: !3517, file: !2252, line: 199, type: !2270)
!3521 = !DILocation(line: 0, scope: !3517)
!3522 = !DILocation(line: 201, column: 13, scope: !3517)
!3523 = !DILocation(line: 201, column: 11, scope: !3517)
!3524 = !DILocation(line: 201, column: 2, scope: !3517)
!3525 = distinct !DISubprogram(name: "free_list_add", scope: !3382, file: !3382, line: 98, type: !3438, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3526)
!3526 = !{!3527, !3528, !3529}
!3527 = !DILocalVariable(name: "h", arg: 1, scope: !3525, file: !3382, line: 98, type: !2265)
!3528 = !DILocalVariable(name: "c", arg: 2, scope: !3525, file: !3382, line: 98, type: !2270)
!3529 = !DILocalVariable(name: "bidx", scope: !3530, file: !3382, line: 101, type: !103)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !3382, line: 100, column: 31)
!3531 = distinct !DILexicalBlock(scope: !3525, file: !3382, line: 100, column: 6)
!3532 = !DILocation(line: 0, scope: !3525)
!3533 = !DILocation(line: 101, column: 28, scope: !3530)
!3534 = !DILocation(line: 101, column: 14, scope: !3530)
!3535 = !DILocation(line: 0, scope: !3530)
!3536 = !DILocation(line: 102, column: 3, scope: !3530)
!3537 = !DILocation(line: 104, column: 1, scope: !3525)
!3538 = distinct !DISubprogram(name: "chunk_size", scope: !2252, file: !2252, line: 142, type: !3539, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3541)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{!3508, !2265, !2270}
!3541 = !{!3542, !3543}
!3542 = !DILocalVariable(name: "h", arg: 1, scope: !3538, file: !2252, line: 142, type: !2265)
!3543 = !DILocalVariable(name: "c", arg: 2, scope: !3538, file: !2252, line: 142, type: !2270)
!3544 = !DILocation(line: 0, scope: !3538)
!3545 = !DILocation(line: 144, column: 9, scope: !3538)
!3546 = !DILocation(line: 144, column: 42, scope: !3538)
!3547 = !DILocation(line: 144, column: 2, scope: !3538)
!3548 = distinct !DISubprogram(name: "bucket_idx", scope: !2252, file: !2252, line: 250, type: !3549, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3551)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{!103, !2265, !3508}
!3551 = !{!3552, !3553, !3554}
!3552 = !DILocalVariable(name: "h", arg: 1, scope: !3548, file: !2252, line: 250, type: !2265)
!3553 = !DILocalVariable(name: "sz", arg: 2, scope: !3548, file: !2252, line: 250, type: !3508)
!3554 = !DILocalVariable(name: "usable_sz", scope: !3548, file: !2252, line: 252, type: !32)
!3555 = !DILocation(line: 0, scope: !3548)
!3556 = !DILocation(line: 252, column: 32, scope: !3548)
!3557 = !DILocation(line: 252, column: 30, scope: !3548)
!3558 = !DILocation(line: 252, column: 50, scope: !3548)
!3559 = !DILocation(line: 253, column: 14, scope: !3548)
!3560 = !{i32 0, i32 33}
!3561 = !DILocation(line: 253, column: 12, scope: !3548)
!3562 = !DILocation(line: 253, column: 2, scope: !3548)
!3563 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3382, file: !3382, line: 68, type: !3564, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3566)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{null, !2265, !2270, !103}
!3566 = !{!3567, !3568, !3569, !3570, !3572, !3575}
!3567 = !DILocalVariable(name: "h", arg: 1, scope: !3563, file: !3382, line: 68, type: !2265)
!3568 = !DILocalVariable(name: "c", arg: 2, scope: !3563, file: !3382, line: 68, type: !2270)
!3569 = !DILocalVariable(name: "bidx", arg: 3, scope: !3563, file: !3382, line: 68, type: !103)
!3570 = !DILocalVariable(name: "b", scope: !3563, file: !3382, line: 70, type: !3571)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!3572 = !DILocalVariable(name: "second", scope: !3573, file: !3382, line: 84, type: !2270)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !3382, line: 80, column: 9)
!3574 = distinct !DILexicalBlock(scope: !3563, file: !3382, line: 72, column: 6)
!3575 = !DILocalVariable(name: "first", scope: !3573, file: !3382, line: 85, type: !2270)
!3576 = !DILocation(line: 0, scope: !3563)
!3577 = !DILocation(line: 72, column: 9, scope: !3574)
!3578 = !DILocation(line: 72, column: 14, scope: !3574)
!3579 = !DILocation(line: 72, column: 6, scope: !3563)
!3580 = !DILocation(line: 76, column: 23, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3574, file: !3382, line: 72, column: 21)
!3582 = !DILocation(line: 76, column: 6, scope: !3581)
!3583 = !DILocation(line: 76, column: 20, scope: !3581)
!3584 = !DILocation(line: 77, column: 11, scope: !3581)
!3585 = !DILocation(line: 78, column: 3, scope: !3581)
!3586 = !DILocation(line: 79, column: 3, scope: !3581)
!3587 = !DILocation(line: 80, column: 2, scope: !3581)
!3588 = !DILocation(line: 0, scope: !3573)
!3589 = !DILocation(line: 85, column: 21, scope: !3573)
!3590 = !{i32 0, i32 65536}
!3591 = !DILocation(line: 87, column: 3, scope: !3573)
!3592 = !DILocation(line: 88, column: 3, scope: !3573)
!3593 = !DILocation(line: 89, column: 3, scope: !3573)
!3594 = !DILocation(line: 90, column: 3, scope: !3573)
!3595 = !DILocation(line: 96, column: 1, scope: !3563)
!3596 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2252, file: !2252, line: 187, type: !3501, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3597)
!3597 = !{!3598, !3599, !3600}
!3598 = !DILocalVariable(name: "h", arg: 1, scope: !3596, file: !2252, line: 187, type: !2265)
!3599 = !DILocalVariable(name: "c", arg: 2, scope: !3596, file: !2252, line: 187, type: !2270)
!3600 = !DILocalVariable(name: "prev", arg: 3, scope: !3596, file: !2252, line: 188, type: !2270)
!3601 = !DILocation(line: 0, scope: !3596)
!3602 = !DILocation(line: 190, column: 2, scope: !3596)
!3603 = !DILocation(line: 191, column: 1, scope: !3596)
!3604 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2252, file: !2252, line: 193, type: !3501, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3605)
!3605 = !{!3606, !3607, !3608}
!3606 = !DILocalVariable(name: "h", arg: 1, scope: !3604, file: !2252, line: 193, type: !2265)
!3607 = !DILocalVariable(name: "c", arg: 2, scope: !3604, file: !2252, line: 193, type: !2270)
!3608 = !DILocalVariable(name: "next", arg: 3, scope: !3604, file: !2252, line: 194, type: !2270)
!3609 = !DILocation(line: 0, scope: !3604)
!3610 = !DILocation(line: 196, column: 2, scope: !3604)
!3611 = !DILocation(line: 197, column: 1, scope: !3604)
!3612 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2252, file: !2252, line: 177, type: !3467, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3613)
!3613 = !{!3614, !3615}
!3614 = !DILocalVariable(name: "h", arg: 1, scope: !3612, file: !2252, line: 177, type: !2265)
!3615 = !DILocalVariable(name: "c", arg: 2, scope: !3612, file: !2252, line: 177, type: !2270)
!3616 = !DILocation(line: 0, scope: !3612)
!3617 = !DILocation(line: 179, column: 9, scope: !3612)
!3618 = !DILocation(line: 179, column: 2, scope: !3612)
!3619 = distinct !DISubprogram(name: "chunk_field", scope: !2252, file: !2252, line: 107, type: !3620, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3622)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{!2270, !2265, !2270, !2251}
!3622 = !{!3623, !3624, !3625, !3626, !3627}
!3623 = !DILocalVariable(name: "h", arg: 1, scope: !3619, file: !2252, line: 107, type: !2265)
!3624 = !DILocalVariable(name: "c", arg: 2, scope: !3619, file: !2252, line: 107, type: !2270)
!3625 = !DILocalVariable(name: "f", arg: 3, scope: !3619, file: !2252, line: 108, type: !2251)
!3626 = !DILocalVariable(name: "buf", scope: !3619, file: !2252, line: 110, type: !2259)
!3627 = !DILocalVariable(name: "cmem", scope: !3619, file: !2252, line: 111, type: !102)
!3628 = !DILocation(line: 0, scope: !3619)
!3629 = !DILocation(line: 110, column: 22, scope: !3619)
!3630 = !DILocation(line: 111, column: 15, scope: !3619)
!3631 = !DILocation(line: 116, column: 11, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !2252, line: 115, column: 9)
!3633 = distinct !DILexicalBlock(scope: !3619, file: !2252, line: 113, column: 6)
!3634 = !DILocation(line: 116, column: 10, scope: !3632)
!3635 = !DILocation(line: 118, column: 1, scope: !3619)
!3636 = distinct !DISubprogram(name: "chunk_buf", scope: !2252, file: !2252, line: 101, type: !3637, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3639)
!3637 = !DISubroutineType(types: !3638)
!3638 = !{!2259, !2265}
!3639 = !{!3640}
!3640 = !DILocalVariable(name: "h", arg: 1, scope: !3636, file: !2252, line: 101, type: !2265)
!3641 = !DILocation(line: 0, scope: !3636)
!3642 = !DILocation(line: 104, column: 9, scope: !3636)
!3643 = !DILocation(line: 104, column: 2, scope: !3636)
!3644 = distinct !DISubprogram(name: "chunk_set", scope: !2252, file: !2252, line: 120, type: !3645, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3647)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{null, !2265, !2270, !2251, !2270}
!3647 = !{!3648, !3649, !3650, !3651, !3652, !3653}
!3648 = !DILocalVariable(name: "h", arg: 1, scope: !3644, file: !2252, line: 120, type: !2265)
!3649 = !DILocalVariable(name: "c", arg: 2, scope: !3644, file: !2252, line: 120, type: !2270)
!3650 = !DILocalVariable(name: "f", arg: 3, scope: !3644, file: !2252, line: 121, type: !2251)
!3651 = !DILocalVariable(name: "val", arg: 4, scope: !3644, file: !2252, line: 121, type: !2270)
!3652 = !DILocalVariable(name: "buf", scope: !3644, file: !2252, line: 125, type: !2259)
!3653 = !DILocalVariable(name: "cmem", scope: !3644, file: !2252, line: 126, type: !102)
!3654 = !DILocation(line: 0, scope: !3644)
!3655 = !DILocation(line: 125, column: 22, scope: !3644)
!3656 = !DILocation(line: 126, column: 15, scope: !3644)
!3657 = !DILocation(line: 133, column: 27, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !2252, line: 131, column: 9)
!3659 = distinct !DILexicalBlock(scope: !3644, file: !2252, line: 128, column: 6)
!3660 = !DILocation(line: 133, column: 4, scope: !3658)
!3661 = !DILocation(line: 133, column: 3, scope: !3658)
!3662 = !DILocation(line: 133, column: 25, scope: !3658)
!3663 = !DILocation(line: 135, column: 1, scope: !3644)
!3664 = distinct !DISubprogram(name: "min_chunk_size", scope: !2252, file: !2252, line: 240, type: !3665, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3667)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{!3508, !2265}
!3667 = !{!3668}
!3668 = !DILocalVariable(name: "h", arg: 1, scope: !3664, file: !2252, line: 240, type: !2265)
!3669 = !DILocation(line: 0, scope: !3664)
!3670 = !DILocation(line: 242, column: 9, scope: !3664)
!3671 = !DILocation(line: 242, column: 2, scope: !3664)
!3672 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2252, file: !2252, line: 235, type: !3673, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3675)
!3673 = !DISubroutineType(types: !3674)
!3674 = !{!3508, !2265, !552}
!3675 = !{!3676, !3677}
!3676 = !DILocalVariable(name: "h", arg: 1, scope: !3672, file: !2252, line: 235, type: !2265)
!3677 = !DILocalVariable(name: "bytes", arg: 2, scope: !3672, file: !2252, line: 235, type: !552)
!3678 = !DILocation(line: 0, scope: !3672)
!3679 = !DILocation(line: 237, column: 39, scope: !3672)
!3680 = !DILocation(line: 237, column: 9, scope: !3672)
!3681 = !DILocation(line: 237, column: 2, scope: !3672)
!3682 = distinct !DISubprogram(name: "chunksz", scope: !2252, file: !2252, line: 230, type: !3683, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3685)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{!3508, !552}
!3685 = !{!3686}
!3686 = !DILocalVariable(name: "bytes", arg: 1, scope: !3682, file: !2252, line: 230, type: !552)
!3687 = !DILocation(line: 0, scope: !3682)
!3688 = !DILocation(line: 232, column: 29, scope: !3682)
!3689 = !DILocation(line: 232, column: 35, scope: !3682)
!3690 = !DILocation(line: 232, column: 2, scope: !3682)
!3691 = distinct !DISubprogram(name: "set_chunk_size", scope: !2252, file: !2252, line: 172, type: !3692, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3694)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{null, !2265, !2270, !3508}
!3694 = !{!3695, !3696, !3697}
!3695 = !DILocalVariable(name: "h", arg: 1, scope: !3691, file: !2252, line: 172, type: !2265)
!3696 = !DILocalVariable(name: "c", arg: 2, scope: !3691, file: !2252, line: 172, type: !2270)
!3697 = !DILocalVariable(name: "size", arg: 3, scope: !3691, file: !2252, line: 172, type: !3508)
!3698 = !DILocation(line: 0, scope: !3691)
!3699 = !DILocation(line: 174, column: 38, scope: !3691)
!3700 = !DILocation(line: 174, column: 2, scope: !3691)
!3701 = !DILocation(line: 175, column: 1, scope: !3691)
!3702 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2252, file: !2252, line: 209, type: !3692, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3703)
!3703 = !{!3704, !3705, !3706}
!3704 = !DILocalVariable(name: "h", arg: 1, scope: !3702, file: !2252, line: 209, type: !2265)
!3705 = !DILocalVariable(name: "c", arg: 2, scope: !3702, file: !2252, line: 209, type: !2270)
!3706 = !DILocalVariable(name: "size", arg: 3, scope: !3702, file: !2252, line: 210, type: !3508)
!3707 = !DILocation(line: 0, scope: !3702)
!3708 = !DILocation(line: 212, column: 2, scope: !3702)
!3709 = !DILocation(line: 213, column: 1, scope: !3702)
!3710 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3382, file: !3382, line: 34, type: !3564, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3711)
!3711 = !{!3712, !3713, !3714, !3715, !3716, !3719}
!3712 = !DILocalVariable(name: "h", arg: 1, scope: !3710, file: !3382, line: 34, type: !2265)
!3713 = !DILocalVariable(name: "c", arg: 2, scope: !3710, file: !3382, line: 34, type: !2270)
!3714 = !DILocalVariable(name: "bidx", arg: 3, scope: !3710, file: !3382, line: 34, type: !103)
!3715 = !DILocalVariable(name: "b", scope: !3710, file: !3382, line: 36, type: !3571)
!3716 = !DILocalVariable(name: "first", scope: !3717, file: !3382, line: 47, type: !2270)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !3382, line: 46, column: 9)
!3718 = distinct !DILexicalBlock(scope: !3710, file: !3382, line: 42, column: 6)
!3719 = !DILocalVariable(name: "second", scope: !3717, file: !3382, line: 48, type: !2270)
!3720 = !DILocation(line: 0, scope: !3710)
!3721 = !DILocation(line: 36, column: 29, scope: !3710)
!3722 = !DILocation(line: 42, column: 6, scope: !3718)
!3723 = !DILocation(line: 42, column: 28, scope: !3718)
!3724 = !DILocation(line: 42, column: 6, scope: !3710)
!3725 = !DILocation(line: 44, column: 24, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3718, file: !3382, line: 42, column: 34)
!3727 = !DILocation(line: 44, column: 23, scope: !3726)
!3728 = !DILocation(line: 44, column: 6, scope: !3726)
!3729 = !DILocation(line: 44, column: 20, scope: !3726)
!3730 = !DILocation(line: 45, column: 6, scope: !3726)
!3731 = !DILocation(line: 45, column: 11, scope: !3726)
!3732 = !DILocation(line: 46, column: 2, scope: !3726)
!3733 = !DILocation(line: 47, column: 21, scope: !3717)
!3734 = !DILocation(line: 0, scope: !3717)
!3735 = !DILocation(line: 50, column: 6, scope: !3717)
!3736 = !DILocation(line: 50, column: 11, scope: !3717)
!3737 = !DILocation(line: 51, column: 3, scope: !3717)
!3738 = !DILocation(line: 52, column: 3, scope: !3717)
!3739 = !DILocation(line: 58, column: 1, scope: !3710)
!3740 = distinct !DISubprogram(name: "next_free_chunk", scope: !2252, file: !2252, line: 182, type: !3467, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3741)
!3741 = !{!3742, !3743}
!3742 = !DILocalVariable(name: "h", arg: 1, scope: !3740, file: !2252, line: 182, type: !2265)
!3743 = !DILocalVariable(name: "c", arg: 2, scope: !3740, file: !2252, line: 182, type: !2270)
!3744 = !DILocation(line: 0, scope: !3740)
!3745 = !DILocation(line: 184, column: 9, scope: !3740)
!3746 = !DILocation(line: 184, column: 2, scope: !3740)
!3747 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3382, file: !3382, line: 200, type: !3748, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3750)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!552, !3385, !102}
!3750 = !{!3751, !3752, !3753, !3754, !3755, !3756, !3757}
!3751 = !DILocalVariable(name: "heap", arg: 1, scope: !3747, file: !3382, line: 200, type: !3385)
!3752 = !DILocalVariable(name: "mem", arg: 2, scope: !3747, file: !3382, line: 200, type: !102)
!3753 = !DILocalVariable(name: "h", scope: !3747, file: !3382, line: 202, type: !2265)
!3754 = !DILocalVariable(name: "c", scope: !3747, file: !3382, line: 203, type: !2270)
!3755 = !DILocalVariable(name: "addr", scope: !3747, file: !3382, line: 204, type: !552)
!3756 = !DILocalVariable(name: "chunk_base", scope: !3747, file: !3382, line: 205, type: !552)
!3757 = !DILocalVariable(name: "chunk_sz", scope: !3747, file: !3382, line: 206, type: !552)
!3758 = !DILocation(line: 0, scope: !3747)
!3759 = !DILocation(line: 202, column: 27, scope: !3747)
!3760 = !DILocation(line: 203, column: 16, scope: !3747)
!3761 = !DILocation(line: 204, column: 16, scope: !3747)
!3762 = !DILocation(line: 205, column: 31, scope: !3747)
!3763 = !DILocation(line: 205, column: 22, scope: !3747)
!3764 = !DILocation(line: 206, column: 20, scope: !3747)
!3765 = !DILocation(line: 206, column: 37, scope: !3747)
!3766 = !DILocation(line: 208, column: 26, scope: !3747)
!3767 = !DILocation(line: 208, column: 18, scope: !3747)
!3768 = !DILocation(line: 208, column: 2, scope: !3747)
!3769 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3382, file: !3382, line: 263, type: !3770, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3772)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{!102, !3385, !552}
!3772 = !{!3773, !3774, !3775, !3776, !3777, !3778}
!3773 = !DILocalVariable(name: "heap", arg: 1, scope: !3769, file: !3382, line: 263, type: !3385)
!3774 = !DILocalVariable(name: "bytes", arg: 2, scope: !3769, file: !3382, line: 263, type: !552)
!3775 = !DILocalVariable(name: "h", scope: !3769, file: !3382, line: 265, type: !2265)
!3776 = !DILocalVariable(name: "mem", scope: !3769, file: !3382, line: 266, type: !102)
!3777 = !DILocalVariable(name: "chunk_sz", scope: !3769, file: !3382, line: 272, type: !3508)
!3778 = !DILocalVariable(name: "c", scope: !3769, file: !3382, line: 273, type: !2270)
!3779 = !DILocation(line: 0, scope: !3769)
!3780 = !DILocation(line: 265, column: 27, scope: !3769)
!3781 = !DILocation(line: 268, column: 12, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3769, file: !3382, line: 268, column: 6)
!3783 = !DILocation(line: 268, column: 18, scope: !3782)
!3784 = !DILocation(line: 268, column: 21, scope: !3782)
!3785 = !DILocation(line: 268, column: 6, scope: !3769)
!3786 = !DILocation(line: 272, column: 23, scope: !3769)
!3787 = !DILocation(line: 273, column: 16, scope: !3769)
!3788 = !DILocation(line: 274, column: 8, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3769, file: !3382, line: 274, column: 6)
!3790 = !DILocation(line: 274, column: 6, scope: !3769)
!3791 = !DILocation(line: 279, column: 6, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3769, file: !3382, line: 279, column: 6)
!3793 = !DILocation(line: 279, column: 23, scope: !3792)
!3794 = !DILocation(line: 279, column: 6, scope: !3769)
!3795 = !DILocation(line: 280, column: 24, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3792, file: !3382, line: 279, column: 35)
!3797 = !DILocation(line: 280, column: 3, scope: !3796)
!3798 = !DILocation(line: 281, column: 3, scope: !3796)
!3799 = !DILocation(line: 282, column: 2, scope: !3796)
!3800 = !DILocation(line: 284, column: 2, scope: !3769)
!3801 = !DILocation(line: 286, column: 8, scope: !3769)
!3802 = !DILocation(line: 298, column: 2, scope: !3769)
!3803 = !DILocation(line: 299, column: 1, scope: !3769)
!3804 = distinct !DISubprogram(name: "size_too_big", scope: !2252, file: !2252, line: 256, type: !3805, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3807)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!580, !2265, !552}
!3807 = !{!3808, !3809}
!3808 = !DILocalVariable(name: "h", arg: 1, scope: !3804, file: !2252, line: 256, type: !2265)
!3809 = !DILocalVariable(name: "bytes", arg: 2, scope: !3804, file: !2252, line: 256, type: !552)
!3810 = !DILocation(line: 0, scope: !3804)
!3811 = !DILocation(line: 262, column: 16, scope: !3804)
!3812 = !DILocation(line: 262, column: 36, scope: !3804)
!3813 = !DILocation(line: 262, column: 30, scope: !3804)
!3814 = !DILocation(line: 262, column: 2, scope: !3804)
!3815 = distinct !DISubprogram(name: "alloc_chunk", scope: !3382, file: !3382, line: 211, type: !3816, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3818)
!3816 = !DISubroutineType(types: !3817)
!3817 = !{!2270, !2265, !3508}
!3818 = !{!3819, !3820, !3821, !3822, !3823, !3826, !3827, !3829, !3830, !3833}
!3819 = !DILocalVariable(name: "h", arg: 1, scope: !3815, file: !3382, line: 211, type: !2265)
!3820 = !DILocalVariable(name: "sz", arg: 2, scope: !3815, file: !3382, line: 211, type: !3508)
!3821 = !DILocalVariable(name: "bi", scope: !3815, file: !3382, line: 213, type: !103)
!3822 = !DILocalVariable(name: "b", scope: !3815, file: !3382, line: 214, type: !3571)
!3823 = !DILocalVariable(name: "first", scope: !3824, file: !3382, line: 233, type: !2270)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !3382, line: 232, column: 15)
!3825 = distinct !DILexicalBlock(scope: !3815, file: !3382, line: 232, column: 6)
!3826 = !DILocalVariable(name: "i", scope: !3824, file: !3382, line: 234, type: !103)
!3827 = !DILocalVariable(name: "c", scope: !3828, file: !3382, line: 236, type: !2270)
!3828 = distinct !DILexicalBlock(scope: !3824, file: !3382, line: 235, column: 6)
!3829 = !DILocalVariable(name: "bmask", scope: !3815, file: !3382, line: 249, type: !404)
!3830 = !DILocalVariable(name: "minbucket", scope: !3831, file: !3382, line: 252, type: !103)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !3382, line: 251, column: 19)
!3832 = distinct !DILexicalBlock(scope: !3815, file: !3382, line: 251, column: 6)
!3833 = !DILocalVariable(name: "c", scope: !3831, file: !3382, line: 253, type: !2270)
!3834 = !DILocation(line: 0, scope: !3815)
!3835 = !DILocation(line: 213, column: 11, scope: !3815)
!3836 = !DILocation(line: 232, column: 9, scope: !3825)
!3837 = !DILocation(line: 232, column: 6, scope: !3825)
!3838 = !DILocation(line: 232, column: 6, scope: !3815)
!3839 = !DILocation(line: 236, column: 21, scope: !3828)
!3840 = !DILocation(line: 0, scope: !3824)
!3841 = !DILocation(line: 0, scope: !3828)
!3842 = !DILocation(line: 237, column: 8, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3828, file: !3382, line: 237, column: 8)
!3844 = !DILocation(line: 237, column: 25, scope: !3843)
!3845 = !DILocation(line: 237, column: 8, scope: !3828)
!3846 = !DILocation(line: 238, column: 5, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3843, file: !3382, line: 237, column: 32)
!3848 = !DILocation(line: 241, column: 14, scope: !3828)
!3849 = !DILocation(line: 241, column: 12, scope: !3828)
!3850 = !DILocation(line: 243, column: 12, scope: !3824)
!3851 = !DILocation(line: 243, column: 16, scope: !3824)
!3852 = distinct !{!3852, !3853, !3854}
!3853 = !DILocation(line: 235, column: 3, scope: !3824)
!3854 = !DILocation(line: 243, column: 35, scope: !3824)
!3855 = !DILocation(line: 249, column: 22, scope: !3815)
!3856 = !DILocation(line: 249, column: 39, scope: !3815)
!3857 = !DILocation(line: 249, column: 36, scope: !3815)
!3858 = !DILocation(line: 251, column: 12, scope: !3832)
!3859 = !DILocation(line: 251, column: 6, scope: !3815)
!3860 = !DILocation(line: 252, column: 19, scope: !3831)
!3861 = !DILocation(line: 0, scope: !3831)
!3862 = !DILocation(line: 253, column: 39, scope: !3831)
!3863 = !DILocation(line: 255, column: 3, scope: !3831)
!3864 = !DILocation(line: 261, column: 1, scope: !3815)
!3865 = distinct !DISubprogram(name: "split_chunks", scope: !3382, file: !3382, line: 109, type: !3501, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3866)
!3866 = !{!3867, !3868, !3869, !3870, !3871, !3872}
!3867 = !DILocalVariable(name: "h", arg: 1, scope: !3865, file: !3382, line: 109, type: !2265)
!3868 = !DILocalVariable(name: "lc", arg: 2, scope: !3865, file: !3382, line: 109, type: !2270)
!3869 = !DILocalVariable(name: "rc", arg: 3, scope: !3865, file: !3382, line: 109, type: !2270)
!3870 = !DILocalVariable(name: "sz0", scope: !3865, file: !3382, line: 114, type: !3508)
!3871 = !DILocalVariable(name: "lsz", scope: !3865, file: !3382, line: 115, type: !3508)
!3872 = !DILocalVariable(name: "rsz", scope: !3865, file: !3382, line: 116, type: !3508)
!3873 = !DILocation(line: 0, scope: !3865)
!3874 = !DILocation(line: 114, column: 18, scope: !3865)
!3875 = !DILocation(line: 115, column: 21, scope: !3865)
!3876 = !DILocation(line: 116, column: 22, scope: !3865)
!3877 = !DILocation(line: 118, column: 2, scope: !3865)
!3878 = !DILocation(line: 119, column: 2, scope: !3865)
!3879 = !DILocation(line: 120, column: 2, scope: !3865)
!3880 = !DILocation(line: 121, column: 25, scope: !3865)
!3881 = !DILocation(line: 121, column: 2, scope: !3865)
!3882 = !DILocation(line: 122, column: 1, scope: !3865)
!3883 = distinct !DISubprogram(name: "chunk_mem", scope: !3382, file: !3382, line: 24, type: !3884, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3886)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!102, !2265, !2270}
!3886 = !{!3887, !3888, !3889, !3890}
!3887 = !DILocalVariable(name: "h", arg: 1, scope: !3883, file: !3382, line: 24, type: !2265)
!3888 = !DILocalVariable(name: "c", arg: 2, scope: !3883, file: !3382, line: 24, type: !2270)
!3889 = !DILocalVariable(name: "buf", scope: !3883, file: !3382, line: 26, type: !2259)
!3890 = !DILocalVariable(name: "ret", scope: !3883, file: !3382, line: 27, type: !625)
!3891 = !DILocation(line: 0, scope: !3883)
!3892 = !DILocation(line: 26, column: 22, scope: !3883)
!3893 = !DILocation(line: 27, column: 38, scope: !3883)
!3894 = !DILocation(line: 31, column: 2, scope: !3883)
!3895 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3382, file: !3382, line: 301, type: !3896, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3898)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{!102, !3385, !552, !552}
!3898 = !{!3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908, !3909, !3910}
!3899 = !DILocalVariable(name: "heap", arg: 1, scope: !3895, file: !3382, line: 301, type: !3385)
!3900 = !DILocalVariable(name: "align", arg: 2, scope: !3895, file: !3382, line: 301, type: !552)
!3901 = !DILocalVariable(name: "bytes", arg: 3, scope: !3895, file: !3382, line: 301, type: !552)
!3902 = !DILocalVariable(name: "h", scope: !3895, file: !3382, line: 303, type: !2265)
!3903 = !DILocalVariable(name: "gap", scope: !3895, file: !3382, line: 304, type: !552)
!3904 = !DILocalVariable(name: "rew", scope: !3895, file: !3382, line: 304, type: !552)
!3905 = !DILocalVariable(name: "padded_sz", scope: !3895, file: !3382, line: 335, type: !3508)
!3906 = !DILocalVariable(name: "c0", scope: !3895, file: !3382, line: 336, type: !2270)
!3907 = !DILocalVariable(name: "mem", scope: !3895, file: !3382, line: 341, type: !625)
!3908 = !DILocalVariable(name: "end", scope: !3895, file: !3382, line: 345, type: !2259)
!3909 = !DILocalVariable(name: "c", scope: !3895, file: !3382, line: 348, type: !2270)
!3910 = !DILocalVariable(name: "c_end", scope: !3895, file: !3382, line: 349, type: !2270)
!3911 = !DILocation(line: 0, scope: !3895)
!3912 = !DILocation(line: 303, column: 27, scope: !3895)
!3913 = !DILocation(line: 313, column: 16, scope: !3895)
!3914 = !DILocation(line: 313, column: 14, scope: !3895)
!3915 = !DILocation(line: 314, column: 12, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3895, file: !3382, line: 314, column: 6)
!3917 = !DILocation(line: 314, column: 6, scope: !3895)
!3918 = !DILocation(line: 315, column: 9, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3916, file: !3382, line: 314, column: 20)
!3920 = !DILocation(line: 316, column: 9, scope: !3919)
!3921 = !DILocation(line: 318, column: 13, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3923, file: !3382, line: 318, column: 7)
!3923 = distinct !DILexicalBlock(scope: !3916, file: !3382, line: 317, column: 9)
!3924 = !DILocation(line: 318, column: 7, scope: !3923)
!3925 = !DILocation(line: 319, column: 11, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3922, file: !3382, line: 318, column: 39)
!3927 = !DILocation(line: 319, column: 4, scope: !3926)
!3928 = !DILocation(line: 0, scope: !3916)
!3929 = !DILocation(line: 326, column: 12, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3895, file: !3382, line: 326, column: 6)
!3931 = !DILocation(line: 326, column: 17, scope: !3930)
!3932 = !DILocation(line: 326, column: 20, scope: !3930)
!3933 = !DILocation(line: 326, column: 6, scope: !3895)
!3934 = !DILocation(line: 335, column: 50, scope: !3895)
!3935 = !DILocation(line: 335, column: 58, scope: !3895)
!3936 = !DILocation(line: 335, column: 24, scope: !3895)
!3937 = !DILocation(line: 336, column: 17, scope: !3895)
!3938 = !DILocation(line: 338, column: 9, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3895, file: !3382, line: 338, column: 6)
!3940 = !DILocation(line: 338, column: 6, scope: !3895)
!3941 = !DILocation(line: 341, column: 17, scope: !3895)
!3942 = !DILocation(line: 344, column: 20, scope: !3895)
!3943 = !DILocation(line: 344, column: 8, scope: !3895)
!3944 = !DILocation(line: 344, column: 47, scope: !3895)
!3945 = !DILocation(line: 345, column: 39, scope: !3895)
!3946 = !DILocation(line: 348, column: 16, scope: !3895)
!3947 = !DILocation(line: 349, column: 26, scope: !3895)
!3948 = !DILocation(line: 349, column: 24, scope: !3895)
!3949 = !DILocation(line: 353, column: 8, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3895, file: !3382, line: 353, column: 6)
!3951 = !DILocation(line: 353, column: 6, scope: !3895)
!3952 = !DILocation(line: 354, column: 3, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3950, file: !3382, line: 353, column: 14)
!3954 = !DILocation(line: 355, column: 3, scope: !3953)
!3955 = !DILocation(line: 356, column: 2, scope: !3953)
!3956 = !DILocation(line: 359, column: 6, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3895, file: !3382, line: 359, column: 6)
!3958 = !DILocation(line: 359, column: 24, scope: !3957)
!3959 = !DILocation(line: 359, column: 6, scope: !3895)
!3960 = !DILocation(line: 360, column: 3, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3957, file: !3382, line: 359, column: 33)
!3962 = !DILocation(line: 361, column: 3, scope: !3961)
!3963 = !DILocation(line: 362, column: 2, scope: !3961)
!3964 = !DILocation(line: 364, column: 2, scope: !3895)
!3965 = !DILocation(line: 377, column: 1, scope: !3895)
!3966 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3382, file: !3382, line: 379, type: !3967, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !3969)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!102, !3385, !102, !552, !552}
!3969 = !{!3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3985, !3986}
!3970 = !DILocalVariable(name: "heap", arg: 1, scope: !3966, file: !3382, line: 379, type: !3385)
!3971 = !DILocalVariable(name: "ptr", arg: 2, scope: !3966, file: !3382, line: 379, type: !102)
!3972 = !DILocalVariable(name: "align", arg: 3, scope: !3966, file: !3382, line: 380, type: !552)
!3973 = !DILocalVariable(name: "bytes", arg: 4, scope: !3966, file: !3382, line: 380, type: !552)
!3974 = !DILocalVariable(name: "h", scope: !3966, file: !3382, line: 382, type: !2265)
!3975 = !DILocalVariable(name: "c", scope: !3966, file: !3382, line: 399, type: !2270)
!3976 = !DILocalVariable(name: "rc", scope: !3966, file: !3382, line: 400, type: !2270)
!3977 = !DILocalVariable(name: "align_gap", scope: !3966, file: !3382, line: 401, type: !552)
!3978 = !DILocalVariable(name: "chunks_need", scope: !3966, file: !3382, line: 402, type: !3508)
!3979 = !DILocalVariable(name: "split_size", scope: !3980, file: !3382, line: 435, type: !3508)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !3382, line: 433, column: 61)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !3382, line: 432, column: 13)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !3382, line: 409, column: 13)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !3382, line: 406, column: 13)
!3984 = distinct !DILexicalBlock(scope: !3966, file: !3382, line: 404, column: 6)
!3985 = !DILocalVariable(name: "ptr2", scope: !3966, file: !3382, line: 474, type: !102)
!3986 = !DILocalVariable(name: "prev_size", scope: !3987, file: !3382, line: 477, type: !552)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !3382, line: 476, column: 20)
!3988 = distinct !DILexicalBlock(scope: !3966, file: !3382, line: 476, column: 6)
!3989 = !DILocation(line: 0, scope: !3966)
!3990 = !DILocation(line: 382, column: 27, scope: !3966)
!3991 = !DILocation(line: 385, column: 10, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3966, file: !3382, line: 385, column: 6)
!3993 = !DILocation(line: 385, column: 6, scope: !3966)
!3994 = !DILocation(line: 386, column: 10, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3992, file: !3382, line: 385, column: 19)
!3996 = !DILocation(line: 386, column: 3, scope: !3995)
!3997 = !DILocation(line: 388, column: 12, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3966, file: !3382, line: 388, column: 6)
!3999 = !DILocation(line: 388, column: 6, scope: !3966)
!4000 = !DILocation(line: 389, column: 3, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3998, file: !3382, line: 388, column: 18)
!4002 = !DILocation(line: 390, column: 3, scope: !4001)
!4003 = !DILocation(line: 395, column: 6, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3966, file: !3382, line: 395, column: 6)
!4005 = !DILocation(line: 395, column: 6, scope: !3966)
!4006 = !DILocation(line: 399, column: 16, scope: !3966)
!4007 = !DILocation(line: 400, column: 17, scope: !3966)
!4008 = !DILocation(line: 401, column: 49, scope: !3966)
!4009 = !DILocation(line: 401, column: 36, scope: !3966)
!4010 = !DILocation(line: 402, column: 52, scope: !3966)
!4011 = !DILocation(line: 402, column: 26, scope: !3966)
!4012 = !DILocation(line: 404, column: 6, scope: !3984)
!4013 = !DILocation(line: 404, column: 12, scope: !3984)
!4014 = !DILocation(line: 404, column: 40, scope: !3984)
!4015 = !DILocation(line: 404, column: 31, scope: !3984)
!4016 = !DILocation(line: 404, column: 6, scope: !3966)
!4017 = !DILocation(line: 406, column: 13, scope: !3983)
!4018 = !DILocation(line: 406, column: 30, scope: !3983)
!4019 = !DILocation(line: 406, column: 13, scope: !3984)
!4020 = !DILocation(line: 409, column: 30, scope: !3982)
!4021 = !DILocation(line: 409, column: 13, scope: !3983)
!4022 = !DILocation(line: 420, column: 24, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !3982, file: !3382, line: 409, column: 45)
!4024 = !DILocation(line: 420, column: 3, scope: !4023)
!4025 = !DILocation(line: 421, column: 3, scope: !4023)
!4026 = !DILocation(line: 422, column: 3, scope: !4023)
!4027 = !DILocation(line: 431, column: 3, scope: !4023)
!4028 = !DILocation(line: 432, column: 14, scope: !3981)
!4029 = !DILocation(line: 432, column: 32, scope: !3981)
!4030 = !DILocation(line: 433, column: 26, scope: !3981)
!4031 = !DILocation(line: 433, column: 24, scope: !3981)
!4032 = !DILocation(line: 433, column: 44, scope: !3981)
!4033 = !DILocation(line: 432, column: 13, scope: !3982)
!4034 = !DILocation(line: 435, column: 38, scope: !3980)
!4035 = !DILocation(line: 0, scope: !3980)
!4036 = !DILocation(line: 445, column: 3, scope: !3980)
!4037 = !DILocation(line: 447, column: 20, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !3980, file: !3382, line: 447, column: 7)
!4039 = !DILocation(line: 447, column: 18, scope: !4038)
!4040 = !DILocation(line: 447, column: 7, scope: !3980)
!4041 = !DILocation(line: 448, column: 27, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4038, file: !3382, line: 447, column: 39)
!4043 = !DILocation(line: 448, column: 4, scope: !4042)
!4044 = !DILocation(line: 449, column: 4, scope: !4042)
!4045 = !DILocation(line: 450, column: 3, scope: !4042)
!4046 = !DILocation(line: 452, column: 3, scope: !3980)
!4047 = !DILocation(line: 453, column: 3, scope: !3980)
!4048 = !DILocation(line: 474, column: 15, scope: !3966)
!4049 = !DILocation(line: 476, column: 11, scope: !3988)
!4050 = !DILocation(line: 476, column: 6, scope: !3966)
!4051 = !DILocation(line: 477, column: 42, scope: !3987)
!4052 = !DILocation(line: 477, column: 22, scope: !3987)
!4053 = !DILocation(line: 477, column: 60, scope: !3987)
!4054 = !DILocation(line: 0, scope: !3987)
!4055 = !DILocation(line: 479, column: 21, scope: !3987)
!4056 = !DILocation(line: 479, column: 3, scope: !3987)
!4057 = !DILocation(line: 480, column: 3, scope: !3987)
!4058 = !DILocation(line: 481, column: 2, scope: !3987)
!4059 = !DILocation(line: 483, column: 1, scope: !3966)
!4060 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2252, file: !2252, line: 245, type: !4061, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !4063)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!552, !2265, !3508}
!4063 = !{!4064, !4065}
!4064 = !DILocalVariable(name: "h", arg: 1, scope: !4060, file: !2252, line: 245, type: !2265)
!4065 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4060, file: !2252, line: 245, type: !3508)
!4066 = !DILocation(line: 0, scope: !4060)
!4067 = !DILocation(line: 247, column: 20, scope: !4060)
!4068 = !DILocation(line: 247, column: 33, scope: !4060)
!4069 = !DILocation(line: 247, column: 2, scope: !4060)
!4070 = distinct !DISubprogram(name: "sys_heap_init", scope: !3382, file: !3382, line: 485, type: !4071, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2248, retainedNodes: !4073)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{null, !3385, !102, !552}
!4073 = !{!4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083}
!4074 = !DILocalVariable(name: "heap", arg: 1, scope: !4070, file: !3382, line: 485, type: !3385)
!4075 = !DILocalVariable(name: "mem", arg: 2, scope: !4070, file: !3382, line: 485, type: !102)
!4076 = !DILocalVariable(name: "bytes", arg: 3, scope: !4070, file: !3382, line: 485, type: !552)
!4077 = !DILocalVariable(name: "addr", scope: !4070, file: !3382, line: 502, type: !22)
!4078 = !DILocalVariable(name: "end", scope: !4070, file: !3382, line: 503, type: !22)
!4079 = !DILocalVariable(name: "heap_sz", scope: !4070, file: !3382, line: 504, type: !3508)
!4080 = !DILocalVariable(name: "h", scope: !4070, file: !3382, line: 509, type: !2265)
!4081 = !DILocalVariable(name: "nb_buckets", scope: !4070, file: !3382, line: 520, type: !103)
!4082 = !DILocalVariable(name: "chunk0_size", scope: !4070, file: !3382, line: 521, type: !3508)
!4083 = !DILocalVariable(name: "i", scope: !4084, file: !3382, line: 526, type: !103)
!4084 = distinct !DILexicalBlock(scope: !4070, file: !3382, line: 526, column: 2)
!4085 = !DILocation(line: 0, scope: !4070)
!4086 = !DILocation(line: 499, column: 8, scope: !4070)
!4087 = !DILocation(line: 502, column: 19, scope: !4070)
!4088 = !DILocation(line: 503, column: 18, scope: !4070)
!4089 = !DILocation(line: 504, column: 27, scope: !4070)
!4090 = !DILocation(line: 504, column: 35, scope: !4070)
!4091 = !DILocation(line: 509, column: 21, scope: !4070)
!4092 = !DILocation(line: 510, column: 8, scope: !4070)
!4093 = !DILocation(line: 510, column: 13, scope: !4070)
!4094 = !DILocation(line: 511, column: 5, scope: !4070)
!4095 = !DILocation(line: 511, column: 15, scope: !4070)
!4096 = !DILocation(line: 512, column: 5, scope: !4070)
!4097 = !DILocation(line: 512, column: 19, scope: !4070)
!4098 = !DILocation(line: 520, column: 19, scope: !4070)
!4099 = !DILocation(line: 522, column: 21, scope: !4070)
!4100 = !DILocation(line: 521, column: 56, scope: !4070)
!4101 = !DILocation(line: 521, column: 26, scope: !4070)
!4102 = !DILocation(line: 0, scope: !4084)
!4103 = !DILocation(line: 526, column: 20, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4084, file: !3382, line: 526, column: 2)
!4105 = !DILocation(line: 526, column: 2, scope: !4084)
!4106 = !DILocation(line: 531, column: 2, scope: !4070)
!4107 = !DILocation(line: 532, column: 2, scope: !4070)
!4108 = !DILocation(line: 533, column: 2, scope: !4070)
!4109 = !DILocation(line: 536, column: 41, scope: !4070)
!4110 = !DILocation(line: 536, column: 2, scope: !4070)
!4111 = !DILocation(line: 537, column: 2, scope: !4070)
!4112 = !DILocation(line: 540, column: 2, scope: !4070)
!4113 = !DILocation(line: 541, column: 2, scope: !4070)
!4114 = !DILocation(line: 542, column: 2, scope: !4070)
!4115 = !DILocation(line: 544, column: 2, scope: !4070)
!4116 = !DILocation(line: 545, column: 1, scope: !4070)
!4117 = !DILocation(line: 527, column: 17, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4104, file: !3382, line: 526, column: 39)
!4119 = !DILocation(line: 527, column: 22, scope: !4118)
!4120 = !DILocation(line: 526, column: 35, scope: !4104)
!4121 = distinct !{!4121, !4105, !4122}
!4122 = !DILocation(line: 528, column: 2, scope: !4084)
!4123 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2285, file: !2285, line: 1338, type: !4124, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4132)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!103, !3118, !102, !569, !4126, !404}
!4126 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3084, line: 99, baseType: !4127)
!4127 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3084, line: 40, baseType: !4128)
!4128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2285, baseType: !4129)
!4129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4130)
!4130 = !{!4131}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4129, file: !2285, baseType: !102, size: 32)
!4132 = !{!4133, !4134, !4135, !4136, !4137, !4138, !4142, !4143, !4144, !4146, !4151, !4196, !4199, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4211, !4212, !4213, !4217, !4220, !4222, !4225, !4226, !4227, !4232, !4238, !4241, !4245, !4251, !4255, !4258, !4260, !4263}
!4133 = !DILocalVariable(name: "out", arg: 1, scope: !4123, file: !2285, line: 1338, type: !3118)
!4134 = !DILocalVariable(name: "ctx", arg: 2, scope: !4123, file: !2285, line: 1338, type: !102)
!4135 = !DILocalVariable(name: "fp", arg: 3, scope: !4123, file: !2285, line: 1338, type: !569)
!4136 = !DILocalVariable(name: "ap", arg: 4, scope: !4123, file: !2285, line: 1339, type: !4126)
!4137 = !DILocalVariable(name: "flags", arg: 5, scope: !4123, file: !2285, line: 1339, type: !404)
!4138 = !DILocalVariable(name: "buf", scope: !4123, file: !2285, line: 1341, type: !4139)
!4139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 176, elements: !4140)
!4140 = !{!4141}
!4141 = !DISubrange(count: 22)
!4142 = !DILocalVariable(name: "count", scope: !4123, file: !2285, line: 1342, type: !552)
!4143 = !DILocalVariable(name: "sint", scope: !4123, file: !2285, line: 1343, type: !2304)
!4144 = !DILocalVariable(name: "tagged_ap", scope: !4123, file: !2285, line: 1345, type: !4145)
!4145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!4146 = !DILocalVariable(name: "rc", scope: !4147, file: !2285, line: 1377, type: !103)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !2285, line: 1377, column: 4)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !2285, line: 1376, column: 19)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1376, column: 7)
!4150 = distinct !DILexicalBlock(scope: !4123, file: !2285, line: 1375, column: 19)
!4151 = !DILocalVariable(name: "state", scope: !4150, file: !2285, line: 1395, type: !4152)
!4152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4123, file: !2285, line: 1392, size: 192, elements: !4153)
!4153 = !{!4154, !4164}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4152, file: !2285, line: 1393, baseType: !4155, size: 64)
!4155 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2285, line: 166, size: 64, elements: !4156)
!4156 = !{!4157, !4158, !4159, !4161, !4163}
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4155, file: !2285, line: 168, baseType: !2304, size: 64)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4155, file: !2285, line: 171, baseType: !2307, size: 64)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4155, file: !2285, line: 174, baseType: !4160, size: 64)
!4160 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4155, file: !2285, line: 177, baseType: !4162, size: 64)
!4162 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4155, file: !2285, line: 180, baseType: !102, size: 32)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4152, file: !2285, line: 1394, baseType: !4165, size: 96, offset: 64)
!4165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2285, line: 189, size: 96, elements: !4166)
!4166 = !{!4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4191}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4165, file: !2285, line: 191, baseType: !580, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4165, file: !2285, line: 194, baseType: !580, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4165, file: !2285, line: 197, baseType: !580, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4165, file: !2285, line: 200, baseType: !580, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4165, file: !2285, line: 203, baseType: !580, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4165, file: !2285, line: 206, baseType: !580, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4165, file: !2285, line: 209, baseType: !580, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4165, file: !2285, line: 212, baseType: !580, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4165, file: !2285, line: 219, baseType: !580, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4165, file: !2285, line: 222, baseType: !580, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4165, file: !2285, line: 229, baseType: !580, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4165, file: !2285, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4165, file: !2285, line: 238, baseType: !580, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4165, file: !2285, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4165, file: !2285, line: 244, baseType: !580, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4165, file: !2285, line: 247, baseType: !580, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4165, file: !2285, line: 252, baseType: !580, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4165, file: !2285, line: 257, baseType: !580, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4165, file: !2285, line: 260, baseType: !411, size: 8, offset: 24)
!4186 = !DIDerivedType(tag: DW_TAG_member, scope: !4165, file: !2285, line: 262, baseType: !4187, size: 32, offset: 32)
!4187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4165, file: !2285, line: 262, size: 32, elements: !4188)
!4188 = !{!4189, !4190}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4187, file: !2285, line: 267, baseType: !103, size: 32)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4187, file: !2285, line: 289, baseType: !103, size: 32)
!4191 = !DIDerivedType(tag: DW_TAG_member, scope: !4165, file: !2285, line: 292, baseType: !4192, size: 32, offset: 64)
!4192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4165, file: !2285, line: 292, size: 32, elements: !4193)
!4193 = !{!4194, !4195}
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4192, file: !2285, line: 297, baseType: !103, size: 32)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4192, file: !2285, line: 306, baseType: !103, size: 32)
!4196 = !DILocalVariable(name: "conv", scope: !4150, file: !2285, line: 1400, type: !4197)
!4197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4198)
!4198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4165, size: 32)
!4199 = !DILocalVariable(name: "value", scope: !4150, file: !2285, line: 1401, type: !4200)
!4200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4201)
!4201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 32)
!4202 = !DILocalVariable(name: "sp", scope: !4150, file: !2285, line: 1402, type: !569)
!4203 = !DILocalVariable(name: "width", scope: !4150, file: !2285, line: 1403, type: !103)
!4204 = !DILocalVariable(name: "precision", scope: !4150, file: !2285, line: 1404, type: !103)
!4205 = !DILocalVariable(name: "bps", scope: !4150, file: !2285, line: 1405, type: !569)
!4206 = !DILocalVariable(name: "bpe", scope: !4150, file: !2285, line: 1406, type: !569)
!4207 = !DILocalVariable(name: "sign", scope: !4150, file: !2285, line: 1407, type: !571)
!4208 = !DILocalVariable(name: "arg", scope: !4209, file: !2285, line: 1432, type: !103)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !2285, line: 1431, column: 24)
!4210 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1431, column: 7)
!4211 = !DILocalVariable(name: "specifier_cat", scope: !4150, file: !2285, line: 1468, type: !2284)
!4212 = !DILocalVariable(name: "length_mod", scope: !4150, file: !2285, line: 1470, type: !2292)
!4213 = !DILocalVariable(name: "rc", scope: !4214, file: !2285, line: 1575, type: !103)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !2285, line: 1575, column: 4)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !2285, line: 1574, column: 43)
!4216 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1574, column: 7)
!4217 = !DILocalVariable(name: "rc", scope: !4218, file: !2285, line: 1584, type: !103)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !2285, line: 1584, column: 4)
!4219 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1582, column: 28)
!4220 = !DILocalVariable(name: "len", scope: !4221, file: !2285, line: 1589, type: !552)
!4221 = distinct !DILexicalBlock(scope: !4219, file: !2285, line: 1586, column: 13)
!4222 = !DILocalVariable(name: "len", scope: !4223, file: !2285, line: 1641, type: !552)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !2285, line: 1640, column: 24)
!4224 = distinct !DILexicalBlock(scope: !4219, file: !2285, line: 1640, column: 8)
!4225 = !DILocalVariable(name: "nj_len", scope: !4150, file: !2285, line: 1722, type: !552)
!4226 = !DILocalVariable(name: "pad_len", scope: !4150, file: !2285, line: 1723, type: !103)
!4227 = !DILocalVariable(name: "pad", scope: !4228, file: !2285, line: 1751, type: !571)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !2285, line: 1750, column: 26)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !2285, line: 1750, column: 8)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !2285, line: 1747, column: 18)
!4231 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1747, column: 7)
!4232 = !DILocalVariable(name: "rc", scope: !4233, file: !2285, line: 1758, type: !103)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !2285, line: 1758, column: 7)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !2285, line: 1757, column: 21)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !2285, line: 1757, column: 10)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !2285, line: 1756, column: 26)
!4237 = distinct !DILexicalBlock(scope: !4228, file: !2285, line: 1756, column: 9)
!4238 = !DILocalVariable(name: "rc", scope: !4239, file: !2285, line: 1765, type: !103)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !2285, line: 1765, column: 6)
!4240 = distinct !DILexicalBlock(scope: !4228, file: !2285, line: 1764, column: 25)
!4241 = !DILocalVariable(name: "rc", scope: !4242, file: !2285, line: 1774, type: !103)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !2285, line: 1774, column: 4)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !2285, line: 1773, column: 18)
!4244 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1773, column: 7)
!4245 = !DILocalVariable(name: "rc", scope: !4246, file: !2285, line: 1819, type: !103)
!4246 = distinct !DILexicalBlock(scope: !4247, file: !2285, line: 1819, column: 5)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !2285, line: 1818, column: 44)
!4248 = distinct !DILexicalBlock(scope: !4249, file: !2285, line: 1818, column: 8)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !2285, line: 1817, column: 10)
!4250 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1777, column: 7)
!4251 = !DILocalVariable(name: "rc", scope: !4252, file: !2285, line: 1823, type: !103)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !2285, line: 1823, column: 5)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !2285, line: 1822, column: 26)
!4254 = distinct !DILexicalBlock(scope: !4249, file: !2285, line: 1822, column: 8)
!4255 = !DILocalVariable(name: "rc", scope: !4256, file: !2285, line: 1828, type: !103)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !2285, line: 1828, column: 5)
!4257 = distinct !DILexicalBlock(scope: !4249, file: !2285, line: 1827, column: 26)
!4258 = !DILocalVariable(name: "rc", scope: !4259, file: !2285, line: 1831, type: !103)
!4259 = distinct !DILexicalBlock(scope: !4249, file: !2285, line: 1831, column: 4)
!4260 = !DILocalVariable(name: "rc", scope: !4261, file: !2285, line: 1836, type: !103)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !2285, line: 1836, column: 4)
!4262 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1835, column: 21)
!4263 = !DILabel(scope: !4219, name: "prec_int_pad0", file: !2285, line: 1634)
!4264 = !DILocation(line: 0, scope: !4123)
!4265 = !DILocation(line: 1341, column: 2, scope: !4123)
!4266 = !DILocation(line: 1341, column: 7, scope: !4123)
!4267 = !DILocation(line: 1375, column: 2, scope: !4123)
!4268 = !DILocation(line: 1342, column: 9, scope: !4123)
!4269 = !DILocation(line: 1375, column: 9, scope: !4123)
!4270 = !DILocation(line: 1377, column: 4, scope: !4147)
!4271 = !DILocation(line: 0, scope: !4147)
!4272 = !DILocation(line: 1377, column: 4, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4147, file: !2285, line: 1377, column: 4)
!4274 = distinct !{!4274, !4267, !4275}
!4275 = !DILocation(line: 1839, column: 2, scope: !4123)
!4276 = !DILocation(line: 1392, column: 3, scope: !4150)
!4277 = !DILocation(line: 1395, column: 5, scope: !4150)
!4278 = !DILocation(line: 0, scope: !4150)
!4279 = !DILocation(line: 1409, column: 8, scope: !4150)
!4280 = !DILocation(line: 1414, column: 13, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1414, column: 7)
!4282 = !DILocation(line: 1414, column: 7, scope: !4150)
!4283 = !DILocation(line: 1415, column: 12, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4281, file: !2285, line: 1414, column: 25)
!4285 = !DILocation(line: 1417, column: 14, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4284, file: !2285, line: 1417, column: 8)
!4287 = !DILocation(line: 1417, column: 8, scope: !4284)
!4288 = !DILocation(line: 1418, column: 21, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4286, file: !2285, line: 1417, column: 19)
!4290 = !DILocation(line: 1419, column: 13, scope: !4289)
!4291 = !DILocation(line: 1420, column: 4, scope: !4289)
!4292 = !DILocation(line: 1421, column: 20, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4281, file: !2285, line: 1421, column: 14)
!4294 = !DILocation(line: 1421, column: 14, scope: !4281)
!4295 = !DILocation(line: 1431, column: 13, scope: !4210)
!4296 = !DILocation(line: 1431, column: 7, scope: !4150)
!4297 = !DILocation(line: 1432, column: 14, scope: !4209)
!4298 = !DILocation(line: 0, scope: !4209)
!4299 = !DILocation(line: 1434, column: 12, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4209, file: !2285, line: 1434, column: 8)
!4301 = !DILocation(line: 1434, column: 8, scope: !4209)
!4302 = !DILocation(line: 1435, column: 24, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4300, file: !2285, line: 1434, column: 17)
!4304 = !DILocation(line: 1436, column: 4, scope: !4303)
!4305 = !DILocation(line: 1439, column: 20, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4210, file: !2285, line: 1439, column: 14)
!4307 = !DILocation(line: 1439, column: 14, scope: !4210)
!4308 = !DILocation(line: 1469, column: 37, scope: !4150)
!4309 = !DILocation(line: 1448, column: 20, scope: !4150)
!4310 = !DILocation(line: 1449, column: 22, scope: !4150)
!4311 = !DILocation(line: 1471, column: 34, scope: !4150)
!4312 = !DILocation(line: 1478, column: 7, scope: !4150)
!4313 = !DILocation(line: 1479, column: 4, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !2285, line: 1478, column: 40)
!4315 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1478, column: 7)
!4316 = !DILocation(line: 1484, column: 19, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4314, file: !2285, line: 1479, column: 24)
!4318 = !DILocation(line: 1484, column: 17, scope: !4317)
!4319 = !DILocation(line: 1485, column: 5, scope: !4317)
!4320 = !DILocation(line: 1492, column: 20, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4322, file: !2285, line: 1491, column: 12)
!4322 = distinct !DILexicalBlock(scope: !4317, file: !2285, line: 1487, column: 9)
!4323 = !DILocation(line: 1492, column: 18, scope: !4321)
!4324 = !DILocation(line: 1494, column: 5, scope: !4317)
!4325 = !DILocation(line: 1497, column: 23, scope: !4317)
!4326 = !DILocation(line: 1496, column: 17, scope: !4317)
!4327 = !DILocation(line: 1498, column: 5, scope: !4317)
!4328 = !DILocation(line: 1501, column: 23, scope: !4317)
!4329 = !DILocation(line: 1500, column: 17, scope: !4317)
!4330 = !DILocation(line: 1502, column: 5, scope: !4317)
!4331 = !DILocation(line: 1513, column: 23, scope: !4317)
!4332 = !DILocation(line: 1513, column: 6, scope: !4317)
!4333 = !DILocation(line: 1512, column: 17, scope: !4317)
!4334 = !DILocation(line: 1514, column: 5, scope: !4317)
!4335 = !DILocation(line: 0, scope: !4317)
!4336 = !DILocation(line: 1516, column: 8, scope: !4314)
!4337 = !DILocation(line: 1517, column: 19, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !2285, line: 1516, column: 33)
!4339 = distinct !DILexicalBlock(scope: !4314, file: !2285, line: 1516, column: 8)
!4340 = !DILocation(line: 1517, column: 17, scope: !4338)
!4341 = !DILocation(line: 1518, column: 4, scope: !4338)
!4342 = !DILocation(line: 1519, column: 19, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !2285, line: 1518, column: 39)
!4344 = distinct !DILexicalBlock(scope: !4339, file: !2285, line: 1518, column: 15)
!4345 = !DILocation(line: 1519, column: 17, scope: !4343)
!4346 = !DILocation(line: 1520, column: 4, scope: !4343)
!4347 = !DILocation(line: 1522, column: 4, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !2285, line: 1521, column: 47)
!4349 = distinct !DILexicalBlock(scope: !4315, file: !2285, line: 1521, column: 14)
!4350 = !DILocation(line: 1527, column: 19, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4348, file: !2285, line: 1522, column: 24)
!4352 = !DILocation(line: 1527, column: 17, scope: !4351)
!4353 = !DILocation(line: 1528, column: 5, scope: !4351)
!4354 = !DILocation(line: 0, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4351, file: !2285, line: 1530, column: 9)
!4356 = !DILocation(line: 1540, column: 23, scope: !4351)
!4357 = !DILocation(line: 1539, column: 17, scope: !4351)
!4358 = !DILocation(line: 1542, column: 5, scope: !4351)
!4359 = !DILocation(line: 1545, column: 23, scope: !4351)
!4360 = !DILocation(line: 1544, column: 17, scope: !4351)
!4361 = !DILocation(line: 1547, column: 5, scope: !4351)
!4362 = !DILocation(line: 1551, column: 23, scope: !4351)
!4363 = !DILocation(line: 1551, column: 6, scope: !4351)
!4364 = !DILocation(line: 1550, column: 17, scope: !4351)
!4365 = !DILocation(line: 1552, column: 5, scope: !4351)
!4366 = !DILocation(line: 0, scope: !4351)
!4367 = !DILocation(line: 1554, column: 8, scope: !4348)
!4368 = !DILocation(line: 1555, column: 19, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !2285, line: 1554, column: 33)
!4370 = distinct !DILexicalBlock(scope: !4348, file: !2285, line: 1554, column: 8)
!4371 = !DILocation(line: 1555, column: 17, scope: !4369)
!4372 = !DILocation(line: 1556, column: 4, scope: !4369)
!4373 = !DILocation(line: 1557, column: 19, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !2285, line: 1556, column: 39)
!4375 = distinct !DILexicalBlock(scope: !4370, file: !2285, line: 1556, column: 15)
!4376 = !DILocation(line: 1557, column: 17, scope: !4374)
!4377 = !DILocation(line: 1558, column: 4, scope: !4374)
!4378 = !DILocation(line: 0, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !2285, line: 1560, column: 8)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !2285, line: 1559, column: 45)
!4381 = distinct !DILexicalBlock(scope: !4349, file: !2285, line: 1559, column: 14)
!4382 = !DILocation(line: 1566, column: 17, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !2285, line: 1565, column: 46)
!4384 = distinct !DILexicalBlock(scope: !4381, file: !2285, line: 1565, column: 14)
!4385 = !DILocation(line: 1566, column: 15, scope: !4383)
!4386 = !DILocation(line: 1567, column: 3, scope: !4383)
!4387 = !DILocation(line: 1574, column: 21, scope: !4216)
!4388 = !DILocation(line: 1575, column: 4, scope: !4214)
!4389 = !DILocation(line: 0, scope: !4214)
!4390 = !DILocation(line: 1575, column: 4, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4214, file: !2285, line: 1575, column: 4)
!4392 = !DILocation(line: 1582, column: 17, scope: !4150)
!4393 = !DILocation(line: 1582, column: 3, scope: !4150)
!4394 = !DILocation(line: 1584, column: 4, scope: !4218)
!4395 = !DILocation(line: 0, scope: !4218)
!4396 = !DILocation(line: 1584, column: 4, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4218, file: !2285, line: 1584, column: 4)
!4398 = !DILocation(line: 1587, column: 31, scope: !4221)
!4399 = !DILocation(line: 1591, column: 18, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4221, file: !2285, line: 1591, column: 8)
!4401 = !DILocation(line: 1591, column: 8, scope: !4221)
!4402 = !DILocation(line: 1592, column: 11, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4400, file: !2285, line: 1591, column: 24)
!4404 = !DILocation(line: 0, scope: !4221)
!4405 = !DILocation(line: 1593, column: 4, scope: !4403)
!4406 = !DILocation(line: 1594, column: 11, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4400, file: !2285, line: 1593, column: 11)
!4408 = !DILocation(line: 1604, column: 51, scope: !4219)
!4409 = !DILocation(line: 1604, column: 13, scope: !4219)
!4410 = !DILocation(line: 1604, column: 11, scope: !4219)
!4411 = !DILocation(line: 1606, column: 4, scope: !4219)
!4412 = !DILocation(line: 1609, column: 14, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4219, file: !2285, line: 1609, column: 8)
!4414 = !DILocation(line: 1609, column: 8, scope: !4219)
!4415 = !DILocation(line: 1619, column: 18, scope: !4219)
!4416 = !DILocation(line: 1620, column: 13, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4219, file: !2285, line: 1620, column: 8)
!4418 = !DILocation(line: 1620, column: 8, scope: !4219)
!4419 = !DILocation(line: 1622, column: 36, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4417, file: !2285, line: 1620, column: 18)
!4421 = !DILocation(line: 1622, column: 17, scope: !4420)
!4422 = !DILocation(line: 1623, column: 4, scope: !4420)
!4423 = !DILocation(line: 1632, column: 29, scope: !4219)
!4424 = !DILocation(line: 1632, column: 10, scope: !4219)
!4425 = !DILocation(line: 1632, column: 4, scope: !4219)
!4426 = !DILocation(line: 1407, column: 8, scope: !4150)
!4427 = !DILocation(line: 0, scope: !4219)
!4428 = !DILocation(line: 1634, column: 3, scope: !4219)
!4429 = !DILocation(line: 1640, column: 18, scope: !4224)
!4430 = !DILocation(line: 1640, column: 8, scope: !4219)
!4431 = !DILocation(line: 1729, column: 13, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1729, column: 7)
!4433 = !DILocation(line: 1641, column: 22, scope: !4223)
!4434 = !DILocation(line: 0, scope: !4223)
!4435 = !DILocation(line: 1646, column: 21, scope: !4223)
!4436 = !DILocation(line: 1649, column: 13, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4223, file: !2285, line: 1649, column: 9)
!4438 = !DILocation(line: 1649, column: 9, scope: !4223)
!4439 = !DILocation(line: 1650, column: 35, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4437, file: !2285, line: 1649, column: 34)
!4441 = !DILocation(line: 1650, column: 23, scope: !4440)
!4442 = !DILocation(line: 1651, column: 5, scope: !4440)
!4443 = !DILocation(line: 1660, column: 15, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4219, file: !2285, line: 1660, column: 8)
!4445 = !DILocation(line: 1660, column: 19, scope: !4444)
!4446 = !DILocation(line: 1660, column: 8, scope: !4219)
!4447 = !DILocation(line: 1661, column: 23, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4444, file: !2285, line: 1660, column: 28)
!4449 = !DILocation(line: 1661, column: 11, scope: !4448)
!4450 = !DILocation(line: 1665, column: 22, scope: !4448)
!4451 = !DILocation(line: 1666, column: 21, scope: !4448)
!4452 = !DILocation(line: 1668, column: 5, scope: !4448)
!4453 = !DILocation(line: 1677, column: 30, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !2285, line: 1676, column: 49)
!4455 = distinct !DILexicalBlock(scope: !4219, file: !2285, line: 1676, column: 8)
!4456 = !DILocation(line: 1677, column: 5, scope: !4454)
!4457 = !DILocation(line: 1680, column: 4, scope: !4219)
!4458 = !DILocation(line: 0, scope: !4400)
!4459 = !DILocation(line: 1597, column: 14, scope: !4221)
!4460 = !DILocation(line: 1699, column: 11, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1699, column: 7)
!4462 = !DILocation(line: 1699, column: 7, scope: !4150)
!4463 = !DILocation(line: 1725, column: 7, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1725, column: 7)
!4465 = !DILocation(line: 1725, column: 12, scope: !4464)
!4466 = !DILocation(line: 1747, column: 13, scope: !4231)
!4467 = !DILocation(line: 1747, column: 7, scope: !4150)
!4468 = !DILocation(line: 1722, column: 24, scope: !4150)
!4469 = !DILocation(line: 1725, column: 7, scope: !4150)
!4470 = !DILocation(line: 1729, column: 7, scope: !4150)
!4471 = !DILocation(line: 1736, column: 13, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4150, file: !2285, line: 1736, column: 7)
!4473 = !DILocation(line: 1735, column: 19, scope: !4150)
!4474 = !DILocation(line: 1736, column: 7, scope: !4150)
!4475 = !DILocation(line: 1748, column: 10, scope: !4230)
!4476 = !DILocation(line: 1750, column: 15, scope: !4229)
!4477 = !DILocation(line: 1750, column: 8, scope: !4230)
!4478 = !DILocation(line: 0, scope: !4228)
!4479 = !DILocation(line: 1756, column: 15, scope: !4237)
!4480 = !DILocation(line: 1756, column: 9, scope: !4228)
!4481 = !DILocation(line: 1758, column: 7, scope: !4233)
!4482 = !DILocation(line: 0, scope: !4233)
!4483 = !DILocation(line: 1758, column: 7, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4233, file: !2285, line: 1758, column: 7)
!4485 = !DILocation(line: 1764, column: 5, scope: !4228)
!4486 = !DILocation(line: 0, scope: !4230)
!4487 = !DILocation(line: 1764, column: 20, scope: !4228)
!4488 = !DILocation(line: 1764, column: 17, scope: !4228)
!4489 = !DILocation(line: 1765, column: 6, scope: !4239)
!4490 = !DILocation(line: 0, scope: !4239)
!4491 = !DILocation(line: 1765, column: 6, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4239, file: !2285, line: 1765, column: 6)
!4493 = distinct !{!4493, !4485, !4494}
!4494 = !DILocation(line: 1766, column: 5, scope: !4228)
!4495 = !DILocation(line: 1773, column: 12, scope: !4244)
!4496 = !DILocation(line: 1773, column: 7, scope: !4150)
!4497 = !DILocation(line: 1773, column: 7, scope: !4244)
!4498 = !DILocation(line: 1774, column: 4, scope: !4242)
!4499 = !DILocation(line: 0, scope: !4242)
!4500 = !DILocation(line: 1774, column: 4, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4242, file: !2285, line: 1774, column: 4)
!4502 = !DILocation(line: 1818, column: 8, scope: !4248)
!4503 = !DILocation(line: 1818, column: 27, scope: !4248)
!4504 = !DILocation(line: 1818, column: 25, scope: !4248)
!4505 = !DILocation(line: 1818, column: 8, scope: !4249)
!4506 = !DILocation(line: 1819, column: 5, scope: !4246)
!4507 = !DILocation(line: 0, scope: !4246)
!4508 = !DILocation(line: 1819, column: 5, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4246, file: !2285, line: 1819, column: 5)
!4510 = !DILocation(line: 1822, column: 14, scope: !4254)
!4511 = !DILocation(line: 1822, column: 8, scope: !4249)
!4512 = !DILocation(line: 1823, column: 5, scope: !4252)
!4513 = !DILocation(line: 0, scope: !4252)
!4514 = !DILocation(line: 1823, column: 5, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4252, file: !2285, line: 1823, column: 5)
!4516 = !DILocation(line: 1826, column: 20, scope: !4249)
!4517 = !DILocation(line: 1827, column: 4, scope: !4249)
!4518 = !DILocation(line: 0, scope: !4249)
!4519 = !DILocation(line: 1827, column: 21, scope: !4249)
!4520 = !DILocation(line: 1827, column: 18, scope: !4249)
!4521 = !DILocation(line: 1828, column: 5, scope: !4256)
!4522 = !DILocation(line: 0, scope: !4256)
!4523 = !DILocation(line: 1828, column: 5, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4256, file: !2285, line: 1828, column: 5)
!4525 = distinct !{!4525, !4517, !4526}
!4526 = !DILocation(line: 1829, column: 4, scope: !4249)
!4527 = !DILocation(line: 1831, column: 4, scope: !4259)
!4528 = !DILocation(line: 0, scope: !4259)
!4529 = !DILocation(line: 1831, column: 4, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4259, file: !2285, line: 1831, column: 4)
!4531 = !DILocation(line: 1835, column: 16, scope: !4150)
!4532 = !DILocation(line: 1835, column: 3, scope: !4150)
!4533 = !DILocation(line: 1836, column: 4, scope: !4261)
!4534 = !DILocation(line: 0, scope: !4261)
!4535 = !DILocation(line: 1836, column: 4, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4261, file: !2285, line: 1836, column: 4)
!4537 = !DILocation(line: 1837, column: 4, scope: !4262)
!4538 = distinct !{!4538, !4532, !4539}
!4539 = !DILocation(line: 1838, column: 3, scope: !4150)
!4540 = !DILocation(line: 1844, column: 1, scope: !4123)
!4541 = distinct !DISubprogram(name: "extract_conversion", scope: !2285, file: !2285, line: 642, type: !4542, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4544)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!569, !4198, !569}
!4544 = !{!4545, !4546}
!4545 = !DILocalVariable(name: "conv", arg: 1, scope: !4541, file: !2285, line: 642, type: !4198)
!4546 = !DILocalVariable(name: "sp", arg: 2, scope: !4541, file: !2285, line: 643, type: !569)
!4547 = !DILocation(line: 0, scope: !4541)
!4548 = !DILocation(line: 645, column: 10, scope: !4541)
!4549 = !DILocation(line: 653, column: 2, scope: !4541)
!4550 = !DILocation(line: 654, column: 6, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4541, file: !2285, line: 654, column: 6)
!4552 = !DILocation(line: 654, column: 10, scope: !4551)
!4553 = !DILocation(line: 654, column: 6, scope: !4541)
!4554 = !DILocation(line: 655, column: 24, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4551, file: !2285, line: 654, column: 18)
!4556 = !DILocation(line: 655, column: 19, scope: !4555)
!4557 = !DILocation(line: 656, column: 3, scope: !4555)
!4558 = !DILocation(line: 659, column: 7, scope: !4541)
!4559 = !DILocation(line: 660, column: 7, scope: !4541)
!4560 = !DILocation(line: 661, column: 7, scope: !4541)
!4561 = !DILocation(line: 662, column: 7, scope: !4541)
!4562 = !DILocation(line: 663, column: 7, scope: !4541)
!4563 = !DILocation(line: 665, column: 2, scope: !4541)
!4564 = !DILocation(line: 666, column: 1, scope: !4541)
!4565 = distinct !DISubprogram(name: "outs", scope: !2285, file: !2285, line: 1319, type: !4566, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4568)
!4566 = !DISubroutineType(types: !4567)
!4567 = !{!103, !3118, !102, !569, !569}
!4568 = !{!4569, !4570, !4571, !4572, !4573, !4574}
!4569 = !DILocalVariable(name: "out", arg: 1, scope: !4565, file: !2285, line: 1319, type: !3118)
!4570 = !DILocalVariable(name: "ctx", arg: 2, scope: !4565, file: !2285, line: 1320, type: !102)
!4571 = !DILocalVariable(name: "sp", arg: 3, scope: !4565, file: !2285, line: 1321, type: !569)
!4572 = !DILocalVariable(name: "ep", arg: 4, scope: !4565, file: !2285, line: 1322, type: !569)
!4573 = !DILocalVariable(name: "count", scope: !4565, file: !2285, line: 1324, type: !552)
!4574 = !DILocalVariable(name: "rc", scope: !4575, file: !2285, line: 1327, type: !103)
!4575 = distinct !DILexicalBlock(scope: !4565, file: !2285, line: 1326, column: 45)
!4576 = !DILocation(line: 0, scope: !4565)
!4577 = !DILocation(line: 1326, column: 2, scope: !4565)
!4578 = !DILocation(line: 1324, column: 9, scope: !4565)
!4579 = !DILocation(line: 1326, column: 13, scope: !4565)
!4580 = !DILocation(line: 1326, column: 19, scope: !4565)
!4581 = !DILocation(line: 1327, column: 21, scope: !4575)
!4582 = !DILocation(line: 1326, column: 36, scope: !4565)
!4583 = !DILocation(line: 1326, column: 39, scope: !4565)
!4584 = !DILocation(line: 1327, column: 24, scope: !4575)
!4585 = !DILocation(line: 1327, column: 16, scope: !4575)
!4586 = !DILocation(line: 1327, column: 12, scope: !4575)
!4587 = !DILocation(line: 0, scope: !4575)
!4588 = !DILocation(line: 1329, column: 10, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4575, file: !2285, line: 1329, column: 7)
!4590 = !DILocation(line: 1329, column: 7, scope: !4575)
!4591 = distinct !{!4591, !4577, !4592}
!4592 = !DILocation(line: 1333, column: 2, scope: !4565)
!4593 = !DILocation(line: 1336, column: 1, scope: !4565)
!4594 = distinct !DISubprogram(name: "encode_uint", scope: !2285, file: !2285, line: 788, type: !4595, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4597)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{!702, !2307, !4198, !702, !569}
!4597 = !{!4598, !4599, !4600, !4601, !4602, !4603, !4605, !4606}
!4598 = !DILocalVariable(name: "value", arg: 1, scope: !4594, file: !2285, line: 788, type: !2307)
!4599 = !DILocalVariable(name: "conv", arg: 2, scope: !4594, file: !2285, line: 789, type: !4198)
!4600 = !DILocalVariable(name: "bps", arg: 3, scope: !4594, file: !2285, line: 790, type: !702)
!4601 = !DILocalVariable(name: "bpe", arg: 4, scope: !4594, file: !2285, line: 791, type: !569)
!4602 = !DILocalVariable(name: "upcase", scope: !4594, file: !2285, line: 793, type: !580)
!4603 = !DILocalVariable(name: "radix", scope: !4594, file: !2285, line: 794, type: !4604)
!4604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4605 = !DILocalVariable(name: "bp", scope: !4594, file: !2285, line: 795, type: !702)
!4606 = !DILocalVariable(name: "lsv", scope: !4607, file: !2285, line: 798, type: !32)
!4607 = distinct !DILexicalBlock(scope: !4594, file: !2285, line: 797, column: 5)
!4608 = !DILocation(line: 0, scope: !4594)
!4609 = !DILocation(line: 793, column: 35, scope: !4594)
!4610 = !DILocation(line: 793, column: 24, scope: !4594)
!4611 = !DILocation(line: 793, column: 16, scope: !4594)
!4612 = !DILocation(line: 794, column: 29, scope: !4594)
!4613 = !DILocation(line: 795, column: 24, scope: !4594)
!4614 = !DILocation(line: 795, column: 17, scope: !4594)
!4615 = !DILocation(line: 797, column: 2, scope: !4594)
!4616 = !DILocation(line: 802, column: 9, scope: !4607)
!4617 = !DILocation(line: 798, column: 22, scope: !4607)
!4618 = !DILocation(line: 0, scope: !4607)
!4619 = !DILocation(line: 800, column: 16, scope: !4607)
!4620 = !DILocation(line: 800, column: 11, scope: !4607)
!4621 = !DILocation(line: 800, column: 4, scope: !4607)
!4622 = !DILocation(line: 800, column: 9, scope: !4607)
!4623 = !DILocation(line: 803, column: 18, scope: !4594)
!4624 = !DILocation(line: 803, column: 24, scope: !4594)
!4625 = !DILocation(line: 803, column: 2, scope: !4607)
!4626 = distinct !{!4626, !4615, !4627}
!4627 = !DILocation(line: 803, column: 37, scope: !4594)
!4628 = !DILocation(line: 808, column: 12, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4594, file: !2285, line: 808, column: 6)
!4630 = !DILocation(line: 808, column: 6, scope: !4594)
!4631 = !DILocation(line: 809, column: 7, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4629, file: !2285, line: 808, column: 23)
!4633 = !DILocation(line: 813, column: 3, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !2285, line: 811, column: 27)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !2285, line: 811, column: 14)
!4636 = distinct !DILexicalBlock(scope: !4632, file: !2285, line: 809, column: 7)
!4637 = !DILocation(line: 0, scope: !4636)
!4638 = !DILocation(line: 818, column: 2, scope: !4594)
!4639 = distinct !DISubprogram(name: "store_count", scope: !2285, file: !2285, line: 1280, type: !4640, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4644)
!4640 = !DISubroutineType(types: !4641)
!4641 = !{null, !4642, !102, !103}
!4642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4643, size: 32)
!4643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4165)
!4644 = !{!4645, !4646, !4647}
!4645 = !DILocalVariable(name: "conv", arg: 1, scope: !4639, file: !2285, line: 1280, type: !4642)
!4646 = !DILocalVariable(name: "dp", arg: 2, scope: !4639, file: !2285, line: 1281, type: !102)
!4647 = !DILocalVariable(name: "count", arg: 3, scope: !4639, file: !2285, line: 1282, type: !103)
!4648 = !DILocation(line: 0, scope: !4639)
!4649 = !DILocation(line: 1284, column: 38, scope: !4639)
!4650 = !DILocation(line: 1284, column: 2, scope: !4639)
!4651 = !DILocation(line: 1286, column: 4, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4639, file: !2285, line: 1284, column: 50)
!4653 = !DILocation(line: 1286, column: 14, scope: !4652)
!4654 = !DILocation(line: 1287, column: 3, scope: !4652)
!4655 = !DILocation(line: 1289, column: 24, scope: !4652)
!4656 = !DILocation(line: 1289, column: 22, scope: !4652)
!4657 = !DILocation(line: 1290, column: 3, scope: !4652)
!4658 = !DILocation(line: 1292, column: 18, scope: !4652)
!4659 = !DILocation(line: 1292, column: 4, scope: !4652)
!4660 = !DILocation(line: 1292, column: 16, scope: !4652)
!4661 = !DILocation(line: 1293, column: 3, scope: !4652)
!4662 = !DILocation(line: 1295, column: 4, scope: !4652)
!4663 = !DILocation(line: 1295, column: 15, scope: !4652)
!4664 = !DILocation(line: 1296, column: 3, scope: !4652)
!4665 = !DILocation(line: 1298, column: 22, scope: !4652)
!4666 = !DILocation(line: 1298, column: 4, scope: !4652)
!4667 = !DILocation(line: 1298, column: 20, scope: !4652)
!4668 = !DILocation(line: 1299, column: 3, scope: !4652)
!4669 = !DILocation(line: 1301, column: 21, scope: !4652)
!4670 = !DILocation(line: 1301, column: 4, scope: !4652)
!4671 = !DILocation(line: 1301, column: 19, scope: !4652)
!4672 = !DILocation(line: 1302, column: 3, scope: !4652)
!4673 = !DILocation(line: 1304, column: 4, scope: !4652)
!4674 = !DILocation(line: 1304, column: 17, scope: !4652)
!4675 = !DILocation(line: 1305, column: 3, scope: !4652)
!4676 = !DILocation(line: 1307, column: 4, scope: !4652)
!4677 = !DILocation(line: 1307, column: 20, scope: !4652)
!4678 = !DILocation(line: 1308, column: 3, scope: !4652)
!4679 = !DILocation(line: 1316, column: 1, scope: !4639)
!4680 = distinct !DISubprogram(name: "isupper", scope: !4681, file: !4681, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4682)
!4681 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4682 = !{!4683}
!4683 = !DILocalVariable(name: "a", arg: 1, scope: !4680, file: !4681, line: 16, type: !103)
!4684 = !DILocation(line: 0, scope: !4680)
!4685 = !DILocation(line: 18, column: 29, scope: !4680)
!4686 = !DILocation(line: 18, column: 45, scope: !4680)
!4687 = !DILocation(line: 18, column: 2, scope: !4680)
!4688 = distinct !DISubprogram(name: "conversion_radix", scope: !2285, file: !2285, line: 761, type: !4689, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4691)
!4689 = !DISubroutineType(types: !4690)
!4690 = !{!552, !571}
!4691 = !{!4692}
!4692 = !DILocalVariable(name: "specifier", arg: 1, scope: !4688, file: !2285, line: 761, type: !571)
!4693 = !DILocation(line: 0, scope: !4688)
!4694 = !DILocation(line: 763, column: 2, scope: !4688)
!4695 = !DILocation(line: 770, column: 3, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4688, file: !2285, line: 763, column: 21)
!4697 = !DILocation(line: 774, column: 3, scope: !4696)
!4698 = !DILocation(line: 0, scope: !4696)
!4699 = !DILocation(line: 776, column: 1, scope: !4688)
!4700 = distinct !DISubprogram(name: "extract_flags", scope: !2285, file: !2285, line: 339, type: !4542, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4701)
!4701 = !{!4702, !4703, !4704}
!4702 = !DILocalVariable(name: "conv", arg: 1, scope: !4700, file: !2285, line: 339, type: !4198)
!4703 = !DILocalVariable(name: "sp", arg: 2, scope: !4700, file: !2285, line: 340, type: !569)
!4704 = !DILocalVariable(name: "loop", scope: !4700, file: !2285, line: 342, type: !580)
!4705 = !DILocation(line: 0, scope: !4700)
!4706 = !DILocation(line: 344, column: 2, scope: !4700)
!4707 = !DILocation(line: 345, column: 11, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4700, file: !2285, line: 344, column: 5)
!4709 = !DILocation(line: 345, column: 3, scope: !4708)
!4710 = !DILocation(line: 351, column: 4, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4708, file: !2285, line: 345, column: 16)
!4712 = !DILocation(line: 354, column: 4, scope: !4711)
!4713 = !DILocation(line: 357, column: 4, scope: !4711)
!4714 = !DILocation(line: 360, column: 4, scope: !4711)
!4715 = !DILocation(line: 0, scope: !4711)
!4716 = !DILocation(line: 370, column: 12, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4700, file: !2285, line: 370, column: 6)
!4718 = !DILocation(line: 370, column: 22, scope: !4717)
!4719 = !DILocation(line: 371, column: 19, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4717, file: !2285, line: 370, column: 42)
!4721 = !DILocation(line: 372, column: 2, scope: !4720)
!4722 = !DILocation(line: 376, column: 2, scope: !4700)
!4723 = distinct !DISubprogram(name: "extract_width", scope: !2285, file: !2285, line: 388, type: !4542, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4724)
!4724 = !{!4725, !4726, !4727, !4728}
!4725 = !DILocalVariable(name: "conv", arg: 1, scope: !4723, file: !2285, line: 388, type: !4198)
!4726 = !DILocalVariable(name: "sp", arg: 2, scope: !4723, file: !2285, line: 389, type: !569)
!4727 = !DILocalVariable(name: "wp", scope: !4723, file: !2285, line: 398, type: !569)
!4728 = !DILocalVariable(name: "width", scope: !4723, file: !2285, line: 399, type: !552)
!4729 = !DILocation(line: 0, scope: !4723)
!4730 = !DILocation(line: 391, column: 8, scope: !4723)
!4731 = !DILocation(line: 391, column: 22, scope: !4723)
!4732 = !DILocation(line: 393, column: 6, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4723, file: !2285, line: 393, column: 6)
!4734 = !DILocation(line: 393, column: 10, scope: !4733)
!4735 = !DILocation(line: 393, column: 6, scope: !4723)
!4736 = !DILocation(line: 394, column: 20, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4733, file: !2285, line: 393, column: 18)
!4738 = !DILocation(line: 395, column: 10, scope: !4737)
!4739 = !DILocation(line: 395, column: 3, scope: !4737)
!4740 = !DILocation(line: 399, column: 17, scope: !4723)
!4741 = !DILocation(line: 401, column: 6, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4723, file: !2285, line: 401, column: 6)
!4743 = !DILocation(line: 401, column: 9, scope: !4742)
!4744 = !DILocation(line: 401, column: 6, scope: !4723)
!4745 = !DILocation(line: 402, column: 23, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4742, file: !2285, line: 401, column: 16)
!4747 = !DILocation(line: 403, column: 9, scope: !4746)
!4748 = !DILocation(line: 403, column: 21, scope: !4746)
!4749 = !DILocation(line: 405, column: 11, scope: !4746)
!4750 = !DILocation(line: 404, column: 21, scope: !4746)
!4751 = !DILocation(line: 406, column: 2, scope: !4746)
!4752 = !DILocation(line: 409, column: 1, scope: !4723)
!4753 = distinct !DISubprogram(name: "extract_prec", scope: !2285, file: !2285, line: 420, type: !4542, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4754)
!4754 = !{!4755, !4756, !4757}
!4755 = !DILocalVariable(name: "conv", arg: 1, scope: !4753, file: !2285, line: 420, type: !4198)
!4756 = !DILocalVariable(name: "sp", arg: 2, scope: !4753, file: !2285, line: 421, type: !569)
!4757 = !DILocalVariable(name: "prec", scope: !4753, file: !2285, line: 435, type: !552)
!4758 = !DILocation(line: 0, scope: !4753)
!4759 = !DILocation(line: 423, column: 24, scope: !4753)
!4760 = !DILocation(line: 423, column: 28, scope: !4753)
!4761 = !DILocation(line: 423, column: 8, scope: !4753)
!4762 = !DILocation(line: 423, column: 21, scope: !4753)
!4763 = !DILocation(line: 425, column: 6, scope: !4753)
!4764 = !DILocation(line: 428, column: 2, scope: !4753)
!4765 = !DILocation(line: 430, column: 6, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4753, file: !2285, line: 430, column: 6)
!4767 = !DILocation(line: 430, column: 10, scope: !4766)
!4768 = !DILocation(line: 430, column: 6, scope: !4753)
!4769 = !DILocation(line: 431, column: 19, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4766, file: !2285, line: 430, column: 18)
!4771 = !DILocation(line: 432, column: 10, scope: !4770)
!4772 = !DILocation(line: 432, column: 3, scope: !4770)
!4773 = !DILocation(line: 435, column: 16, scope: !4753)
!4774 = !DILocation(line: 437, column: 8, scope: !4753)
!4775 = !DILocation(line: 437, column: 19, scope: !4753)
!4776 = !DILocation(line: 439, column: 10, scope: !4753)
!4777 = !DILocation(line: 438, column: 20, scope: !4753)
!4778 = !DILocation(line: 441, column: 9, scope: !4753)
!4779 = !DILocation(line: 442, column: 1, scope: !4753)
!4780 = distinct !DISubprogram(name: "extract_length", scope: !2285, file: !2285, line: 453, type: !4542, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4781)
!4781 = !{!4782, !4783}
!4782 = !DILocalVariable(name: "conv", arg: 1, scope: !4780, file: !2285, line: 453, type: !4198)
!4783 = !DILocalVariable(name: "sp", arg: 2, scope: !4780, file: !2285, line: 454, type: !569)
!4784 = !DILocation(line: 0, scope: !4780)
!4785 = !DILocation(line: 456, column: 10, scope: !4780)
!4786 = !DILocation(line: 456, column: 2, scope: !4780)
!4787 = !DILocation(line: 458, column: 8, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4789, file: !2285, line: 458, column: 7)
!4789 = distinct !DILexicalBlock(scope: !4780, file: !2285, line: 456, column: 15)
!4790 = !DILocation(line: 458, column: 7, scope: !4788)
!4791 = !DILocation(line: 458, column: 13, scope: !4788)
!4792 = !DILocation(line: 0, scope: !4788)
!4793 = !DILocation(line: 458, column: 7, scope: !4789)
!4794 = !DILocation(line: 459, column: 21, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4788, file: !2285, line: 458, column: 21)
!4796 = !DILocation(line: 460, column: 4, scope: !4795)
!4797 = !DILocation(line: 461, column: 3, scope: !4795)
!4798 = !DILocation(line: 462, column: 21, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4788, file: !2285, line: 461, column: 10)
!4800 = !DILocation(line: 466, column: 8, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4789, file: !2285, line: 466, column: 7)
!4802 = !DILocation(line: 466, column: 7, scope: !4801)
!4803 = !DILocation(line: 466, column: 13, scope: !4801)
!4804 = !DILocation(line: 0, scope: !4801)
!4805 = !DILocation(line: 466, column: 7, scope: !4789)
!4806 = !DILocation(line: 467, column: 21, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4801, file: !2285, line: 466, column: 21)
!4808 = !DILocation(line: 468, column: 4, scope: !4807)
!4809 = !DILocation(line: 469, column: 3, scope: !4807)
!4810 = !DILocation(line: 470, column: 21, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4801, file: !2285, line: 469, column: 10)
!4812 = !DILocation(line: 474, column: 9, scope: !4789)
!4813 = !DILocation(line: 474, column: 20, scope: !4789)
!4814 = !DILocation(line: 475, column: 3, scope: !4789)
!4815 = !DILocation(line: 476, column: 3, scope: !4789)
!4816 = !DILocation(line: 478, column: 9, scope: !4789)
!4817 = !DILocation(line: 478, column: 20, scope: !4789)
!4818 = !DILocation(line: 479, column: 3, scope: !4789)
!4819 = !DILocation(line: 480, column: 3, scope: !4789)
!4820 = !DILocation(line: 482, column: 9, scope: !4789)
!4821 = !DILocation(line: 482, column: 20, scope: !4789)
!4822 = !DILocation(line: 483, column: 3, scope: !4789)
!4823 = !DILocation(line: 484, column: 3, scope: !4789)
!4824 = !DILocation(line: 486, column: 9, scope: !4789)
!4825 = !DILocation(line: 486, column: 20, scope: !4789)
!4826 = !DILocation(line: 487, column: 3, scope: !4789)
!4827 = !DILocation(line: 492, column: 21, scope: !4789)
!4828 = !DILocation(line: 493, column: 3, scope: !4789)
!4829 = !DILocation(line: 495, column: 9, scope: !4789)
!4830 = !DILocation(line: 495, column: 20, scope: !4789)
!4831 = !DILocation(line: 496, column: 3, scope: !4789)
!4832 = !DILocation(line: 498, column: 2, scope: !4780)
!4833 = distinct !DISubprogram(name: "extract_specifier", scope: !2285, file: !2285, line: 513, type: !4542, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4834)
!4834 = !{!4835, !4836, !4837, !4838}
!4835 = !DILocalVariable(name: "conv", arg: 1, scope: !4833, file: !2285, line: 513, type: !4198)
!4836 = !DILocalVariable(name: "sp", arg: 2, scope: !4833, file: !2285, line: 514, type: !569)
!4837 = !DILocalVariable(name: "unsupported", scope: !4833, file: !2285, line: 516, type: !580)
!4838 = !DILabel(scope: !4839, name: "int_conv", file: !2285, line: 526)
!4839 = distinct !DILexicalBlock(scope: !4833, file: !2285, line: 520, column: 27)
!4840 = !DILocation(line: 0, scope: !4833)
!4841 = !DILocation(line: 518, column: 20, scope: !4833)
!4842 = !DILocation(line: 518, column: 8, scope: !4833)
!4843 = !DILocation(line: 518, column: 18, scope: !4833)
!4844 = !DILocation(line: 520, column: 2, scope: !4833)
!4845 = !DILocation(line: 525, column: 3, scope: !4839)
!4846 = !DILocation(line: 0, scope: !4839)
!4847 = !DILocation(line: 526, column: 1, scope: !4839)
!4848 = !DILocation(line: 528, column: 24, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4839, file: !2285, line: 528, column: 7)
!4850 = !DILocation(line: 528, column: 7, scope: !4839)
!4851 = !DILocation(line: 535, column: 23, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4839, file: !2285, line: 535, column: 7)
!4853 = !DILocation(line: 535, column: 7, scope: !4839)
!4854 = !DILocation(line: 536, column: 36, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4852, file: !2285, line: 535, column: 31)
!4856 = !DILocation(line: 537, column: 3, scope: !4855)
!4857 = !DILocation(line: 570, column: 9, scope: !4839)
!4858 = !DILocation(line: 570, column: 23, scope: !4839)
!4859 = !DILocation(line: 575, column: 4, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !2285, line: 573, column: 48)
!4861 = distinct !DILexicalBlock(scope: !4839, file: !2285, line: 573, column: 7)
!4862 = !DILocation(line: 603, column: 9, scope: !4839)
!4863 = !DILocation(line: 603, column: 23, scope: !4839)
!4864 = !DILocation(line: 605, column: 24, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4839, file: !2285, line: 605, column: 7)
!4866 = !DILocation(line: 605, column: 7, scope: !4839)
!4867 = !DILocation(line: 612, column: 9, scope: !4839)
!4868 = !DILocation(line: 612, column: 23, scope: !4839)
!4869 = !DILocation(line: 619, column: 24, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4839, file: !2285, line: 619, column: 7)
!4871 = !DILocation(line: 619, column: 7, scope: !4839)
!4872 = !DILocation(line: 625, column: 9, scope: !4839)
!4873 = !DILocation(line: 625, column: 17, scope: !4839)
!4874 = !DILocation(line: 626, column: 3, scope: !4839)
!4875 = !DILocation(line: 629, column: 20, scope: !4833)
!4876 = !DILocation(line: 629, column: 8, scope: !4833)
!4877 = !DILocation(line: 518, column: 23, scope: !4833)
!4878 = !DILocation(line: 631, column: 2, scope: !4833)
!4879 = distinct !DISubprogram(name: "extract_decimal", scope: !2285, file: !2285, line: 318, type: !4880, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4883)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!552, !4882}
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 32)
!4883 = !{!4884, !4885, !4886}
!4884 = !DILocalVariable(name: "str", arg: 1, scope: !4879, file: !2285, line: 318, type: !4882)
!4885 = !DILocalVariable(name: "sp", scope: !4879, file: !2285, line: 320, type: !569)
!4886 = !DILocalVariable(name: "val", scope: !4879, file: !2285, line: 321, type: !552)
!4887 = !DILocation(line: 0, scope: !4879)
!4888 = !DILocation(line: 320, column: 19, scope: !4879)
!4889 = !DILocation(line: 323, column: 37, scope: !4879)
!4890 = !DILocation(line: 323, column: 17, scope: !4879)
!4891 = !DILocation(line: 323, column: 9, scope: !4879)
!4892 = !DILocation(line: 323, column: 2, scope: !4879)
!4893 = !DILocation(line: 324, column: 13, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4879, file: !2285, line: 323, column: 43)
!4895 = !DILocation(line: 324, column: 24, scope: !4894)
!4896 = !DILocation(line: 324, column: 19, scope: !4894)
!4897 = !DILocation(line: 324, column: 27, scope: !4894)
!4898 = distinct !{!4898, !4892, !4899}
!4899 = !DILocation(line: 325, column: 2, scope: !4879)
!4900 = !DILocation(line: 326, column: 7, scope: !4879)
!4901 = !DILocation(line: 327, column: 2, scope: !4879)
!4902 = distinct !DISubprogram(name: "isdigit", scope: !4681, file: !4681, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !4903)
!4903 = !{!4904}
!4904 = !DILocalVariable(name: "a", arg: 1, scope: !4902, file: !4681, line: 43, type: !103)
!4905 = !DILocation(line: 0, scope: !4902)
!4906 = !DILocation(line: 45, column: 29, scope: !4902)
!4907 = !DILocation(line: 45, column: 45, scope: !4902)
!4908 = !DILocation(line: 45, column: 2, scope: !4902)
!4909 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4910, file: !4910, line: 9, type: !2944, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !675)
!4910 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!4911 = !DILocation(line: 11, column: 1, scope: !4909)
!4912 = !{i64 2147556057, i64 2147556100, i64 2147556140}
!4913 = !DILocation(line: 12, column: 1, scope: !4909)
!4914 = !{i64 2147560284, i64 2147560327, i64 2147560367}
!4915 = !DILocation(line: 13, column: 1, scope: !4909)
!4916 = !{i64 2147560493, i64 2147560536, i64 2147560576}
!4917 = !DILocation(line: 14, column: 1, scope: !4909)
!4918 = !{i64 2147560710, i64 2147560753, i64 2147560793}
!4919 = !DILocation(line: 15, column: 1, scope: !4909)
!4920 = !{i64 2147560879, i64 2147560922, i64 2147560962}
!4921 = !DILocation(line: 16, column: 1, scope: !4909)
!4922 = !{i64 2147561064, i64 2147561107, i64 2147561147}
!4923 = !DILocation(line: 17, column: 1, scope: !4909)
!4924 = !{i64 2147561281, i64 2147561324, i64 2147561364}
!4925 = !DILocation(line: 18, column: 1, scope: !4909)
!4926 = !{i64 2147561444, i64 2147561487, i64 2147561527}
!4927 = !DILocation(line: 19, column: 1, scope: !4909)
!4928 = !{i64 2147561628, i64 2147561671, i64 2147561711}
!4929 = !DILocation(line: 20, column: 1, scope: !4909)
!4930 = !{i64 2147561808, i64 2147561851, i64 2147561891}
!4931 = !DILocation(line: 21, column: 1, scope: !4909)
!4932 = !{i64 2147562051, i64 2147562094, i64 2147562134}
!4933 = !DILocation(line: 22, column: 1, scope: !4909)
!4934 = !{i64 2147562287, i64 2147562330, i64 2147562370}
!4935 = !DILocation(line: 23, column: 1, scope: !4909)
!4936 = !{i64 2147562490, i64 2147562533, i64 2147562573}
!4937 = !DILocation(line: 24, column: 1, scope: !4909)
!4938 = !{i64 2147562693, i64 2147562736, i64 2147562776}
!4939 = !DILocation(line: 25, column: 1, scope: !4909)
!4940 = !{i64 2147562892, i64 2147562935, i64 2147562975}
!4941 = !DILocation(line: 26, column: 1, scope: !4909)
!4942 = !{i64 2147563067, i64 2147563110, i64 2147563150}
!4943 = !DILocation(line: 27, column: 1, scope: !4909)
!4944 = !{i64 2147563275, i64 2147563318, i64 2147563358}
!4945 = !DILocation(line: 28, column: 1, scope: !4909)
!4946 = !{i64 2147563479, i64 2147563522, i64 2147563562}
!4947 = !DILocation(line: 29, column: 1, scope: !4909)
!4948 = !{i64 2147563672, i64 2147563715, i64 2147563755}
!4949 = !DILocation(line: 30, column: 1, scope: !4909)
!4950 = !{i64 2147563874, i64 2147563917, i64 2147563957}
!4951 = !DILocation(line: 31, column: 1, scope: !4909)
!4952 = !{i64 2147564101, i64 2147564144, i64 2147564184}
!4953 = !DILocation(line: 32, column: 1, scope: !4909)
!4954 = !{i64 2147564316, i64 2147564359, i64 2147564399}
!4955 = !DILocation(line: 33, column: 1, scope: !4909)
!4956 = !{i64 2147564503, i64 2147564546, i64 2147564586}
!4957 = !DILocation(line: 34, column: 1, scope: !4909)
!4958 = !{i64 2147564675, i64 2147564718, i64 2147564758}
!4959 = !DILocation(line: 35, column: 1, scope: !4909)
!4960 = !{i64 2147564877, i64 2147564920, i64 2147564960}
!4961 = !DILocation(line: 36, column: 1, scope: !4909)
!4962 = !{i64 2147565076, i64 2147565119, i64 2147565159}
!4963 = !DILocation(line: 37, column: 1, scope: !4909)
!4964 = !{i64 2147565251, i64 2147565294, i64 2147565334}
!4965 = !DILocation(line: 38, column: 1, scope: !4909)
!4966 = !{i64 2147565504, i64 2147565547, i64 2147565587}
!4967 = !DILocation(line: 39, column: 1, scope: !4909)
!4968 = !{i64 2147565742, i64 2147565785, i64 2147565825}
!4969 = !DILocation(line: 40, column: 1, scope: !4909)
!4970 = !{i64 2147565977, i64 2147566020, i64 2147566060}
!4971 = !DILocation(line: 41, column: 1, scope: !4909)
!4972 = !{i64 2147566203, i64 2147566246, i64 2147566286}
!4973 = !DILocation(line: 42, column: 1, scope: !4909)
!4974 = !{i64 2147566438, i64 2147566481, i64 2147566521}
!4975 = !DILocation(line: 43, column: 1, scope: !4909)
!4976 = !{i64 2147566673, i64 2147566716, i64 2147566756}
!4977 = !DILocation(line: 44, column: 1, scope: !4909)
!4978 = !{i64 2147566914, i64 2147566957, i64 2147566997}
!4979 = !DILocation(line: 45, column: 1, scope: !4909)
!4980 = !{i64 2147567149, i64 2147567192, i64 2147567232}
!4981 = !DILocation(line: 46, column: 1, scope: !4909)
!4982 = !{i64 2147567378, i64 2147567421, i64 2147567461}
!4983 = !DILocation(line: 47, column: 1, scope: !4909)
!4984 = !{i64 2147567613, i64 2147567656, i64 2147567696}
!4985 = !DILocation(line: 48, column: 1, scope: !4909)
!4986 = !{i64 2147567863, i64 2147567906, i64 2147567946}
!4987 = !DILocation(line: 49, column: 1, scope: !4909)
!4988 = !{i64 2147568092, i64 2147568135, i64 2147568175}
!4989 = !DILocation(line: 50, column: 1, scope: !4909)
!4990 = !{i64 2147568300, i64 2147568343, i64 2147568383}
!4991 = !DILocation(line: 51, column: 1, scope: !4909)
!4992 = !{i64 2147568511, i64 2147568554, i64 2147568594}
!4993 = !DILocation(line: 52, column: 1, scope: !4909)
!4994 = !{i64 2147568746, i64 2147568789, i64 2147568829}
!4995 = !DILocation(line: 53, column: 1, scope: !4909)
!4996 = !{i64 2147568975, i64 2147569018, i64 2147569058}
!4997 = !DILocation(line: 54, column: 1, scope: !4909)
!4998 = !{i64 2147573274, i64 2147573317, i64 2147573357}
!4999 = !DILocation(line: 55, column: 1, scope: !4909)
!5000 = !{i64 2147573506, i64 2147573549, i64 2147573589}
!5001 = !DILocation(line: 56, column: 1, scope: !4909)
!5002 = !{i64 2147573732, i64 2147573775, i64 2147573815}
!5003 = !DILocation(line: 57, column: 1, scope: !4909)
!5004 = !{i64 2147573949, i64 2147573992, i64 2147574032}
!5005 = !DILocation(line: 58, column: 1, scope: !4909)
!5006 = !{i64 2147574181, i64 2147574224, i64 2147574264}
!5007 = !DILocation(line: 59, column: 1, scope: !4909)
!5008 = !{i64 2147574407, i64 2147574450, i64 2147574490}
!5009 = !DILocation(line: 60, column: 1, scope: !4909)
!5010 = !{i64 2147574621, i64 2147574664, i64 2147574704}
!5011 = !DILocation(line: 61, column: 1, scope: !4909)
!5012 = !{i64 2147574841, i64 2147574884, i64 2147574924}
!5013 = !DILocation(line: 62, column: 1, scope: !4909)
!5014 = !{i64 2147575073, i64 2147575116, i64 2147575156}
!5015 = !DILocation(line: 63, column: 1, scope: !4909)
!5016 = !{i64 2147575281, i64 2147575324, i64 2147575364}
!5017 = !DILocation(line: 64, column: 1, scope: !4909)
!5018 = !{i64 2147575486, i64 2147575529, i64 2147575569}
!5019 = !DILocation(line: 65, column: 1, scope: !4909)
!5020 = !{i64 2147575703, i64 2147575746, i64 2147575786}
!5021 = !DILocation(line: 66, column: 1, scope: !4909)
!5022 = !{i64 2147575917, i64 2147575960, i64 2147576000}
!5023 = !DILocation(line: 67, column: 1, scope: !4909)
!5024 = !{i64 2147576143, i64 2147576186, i64 2147576226}
!5025 = !DILocation(line: 68, column: 1, scope: !4909)
!5026 = !{i64 2147576363, i64 2147576406, i64 2147576446}
!5027 = !DILocation(line: 69, column: 1, scope: !4909)
!5028 = !{i64 2147576568, i64 2147576611, i64 2147576651}
!5029 = !DILocation(line: 70, column: 1, scope: !4909)
!5030 = !{i64 2147576800, i64 2147576843, i64 2147576883}
!5031 = !DILocation(line: 71, column: 1, scope: !4909)
!5032 = !{i64 2147577035, i64 2147577078, i64 2147577118}
!5033 = !DILocation(line: 72, column: 1, scope: !4909)
!5034 = !{i64 2147577285, i64 2147577328, i64 2147577368}
!5035 = !DILocation(line: 73, column: 1, scope: !4909)
!5036 = !{i64 2147577535, i64 2147577578, i64 2147577618}
!5037 = !DILocation(line: 74, column: 1, scope: !4909)
!5038 = !{i64 2147577773, i64 2147577816, i64 2147577856}
!5039 = !DILocation(line: 75, column: 1, scope: !4909)
!5040 = !{i64 2147577984, i64 2147578027, i64 2147578067}
!5041 = !DILocation(line: 76, column: 1, scope: !4909)
!5042 = !{i64 2147578201, i64 2147578244, i64 2147578284}
!5043 = !DILocation(line: 77, column: 1, scope: !4909)
!5044 = !{i64 2147578397, i64 2147578440, i64 2147578480}
!5045 = !DILocation(line: 78, column: 1, scope: !4909)
!5046 = !{i64 2147578599, i64 2147578642, i64 2147578682}
!5047 = !DILocation(line: 79, column: 1, scope: !4909)
!5048 = !{i64 2147578786, i64 2147578829, i64 2147578869}
!5049 = !DILocation(line: 80, column: 1, scope: !4909)
!5050 = !{i64 2147578976, i64 2147579019, i64 2147579059}
!5051 = !DILocation(line: 81, column: 1, scope: !4909)
!5052 = !{i64 2147579163, i64 2147579206, i64 2147579246}
!5053 = !DILocation(line: 82, column: 1, scope: !4909)
!5054 = !{i64 2147579359, i64 2147579402, i64 2147579442}
!5055 = !DILocation(line: 83, column: 1, scope: !4909)
!5056 = !{i64 2147579555, i64 2147579598, i64 2147579638}
!5057 = !DILocation(line: 84, column: 1, scope: !4909)
!5058 = !{i64 2147579766, i64 2147579809, i64 2147579849}
!5059 = !DILocation(line: 85, column: 1, scope: !4909)
!5060 = !{i64 2147579974, i64 2147580017, i64 2147580057}
!5061 = !DILocation(line: 86, column: 1, scope: !4909)
!5062 = !{i64 2147580158, i64 2147580201, i64 2147580241}
!5063 = !DILocation(line: 87, column: 1, scope: !4909)
!5064 = !{i64 2147580354, i64 2147580397, i64 2147580437}
!5065 = !DILocation(line: 88, column: 1, scope: !4909)
!5066 = !{i64 2147580547, i64 2147580590, i64 2147580630}
!5067 = !DILocation(line: 89, column: 1, scope: !4909)
!5068 = !{i64 2147580794, i64 2147580837, i64 2147580877}
!5069 = !DILocation(line: 90, column: 1, scope: !4909)
!5070 = !{i64 2147581017, i64 2147581060, i64 2147581100}
!5071 = !DILocation(line: 91, column: 1, scope: !4909)
!5072 = !{i64 2147581183, i64 2147581226, i64 2147581266}
!5073 = !DILocation(line: 92, column: 1, scope: !4909)
!5074 = !{i64 2147581367, i64 2147581410, i64 2147581450}
!5075 = !DILocation(line: 93, column: 1, scope: !4909)
!5076 = !{i64 2147581557, i64 2147581600, i64 2147581640}
!5077 = !DILocation(line: 94, column: 1, scope: !4909)
!5078 = !{i64 2147581741, i64 2147581784, i64 2147581824}
!5079 = !DILocation(line: 95, column: 1, scope: !4909)
!5080 = !{i64 2147581955, i64 2147581998, i64 2147582038}
!5081 = !DILocation(line: 96, column: 1, scope: !4909)
!5082 = !{i64 2147586227, i64 2147586270, i64 2147586310}
!5083 = !DILocation(line: 97, column: 1, scope: !4909)
!5084 = !{i64 2147586450, i64 2147586493, i64 2147586533}
!5085 = !DILocation(line: 98, column: 1, scope: !4909)
!5086 = !{i64 2147586634, i64 2147586677, i64 2147586717}
!5087 = !DILocation(line: 99, column: 1, scope: !4909)
!5088 = !{i64 2147586800, i64 2147586843, i64 2147586883}
!5089 = !DILocation(line: 100, column: 1, scope: !4909)
!5090 = !{i64 2147586981, i64 2147587024, i64 2147587064}
!5091 = !DILocation(line: 101, column: 1, scope: !4909)
!5092 = !{i64 2147587174, i64 2147587217, i64 2147587257}
!5093 = !DILocation(line: 102, column: 1, scope: !4909)
!5094 = !{i64 2147587400, i64 2147587443, i64 2147587483}
!5095 = !DILocation(line: 103, column: 1, scope: !4909)
!5096 = !{i64 2147587614, i64 2147587657, i64 2147587697}
!5097 = !DILocation(line: 104, column: 1, scope: !4909)
!5098 = !{i64 2147587840, i64 2147587883, i64 2147587923}
!5099 = !DILocation(line: 105, column: 1, scope: !4909)
!5100 = !{i64 2147588057, i64 2147588100, i64 2147588140}
!5101 = !DILocation(line: 106, column: 1, scope: !4909)
!5102 = !{i64 2147588334, i64 2147588377, i64 2147588417}
!5103 = !DILocation(line: 107, column: 1, scope: !4909)
!5104 = !{i64 2147588560, i64 2147588603, i64 2147588643}
!5105 = !DILocation(line: 108, column: 1, scope: !4909)
!5106 = !{i64 2147588768, i64 2147588811, i64 2147588851}
!5107 = !DILocation(line: 109, column: 1, scope: !4909)
!5108 = !{i64 2147588964, i64 2147589007, i64 2147589047}
!5109 = !DILocation(line: 110, column: 1, scope: !4909)
!5110 = !{i64 2147589229, i64 2147589272, i64 2147589312}
!5111 = !DILocation(line: 111, column: 1, scope: !4909)
!5112 = !{i64 2147589443, i64 2147589486, i64 2147589526}
!5113 = !DILocation(line: 112, column: 1, scope: !4909)
!5114 = !{i64 2147589606, i64 2147589649, i64 2147589689}
!5115 = !DILocation(line: 113, column: 1, scope: !4909)
!5116 = !{i64 2147589793, i64 2147589836, i64 2147589876}
!5117 = !DILocation(line: 114, column: 1, scope: !4909)
!5118 = !{i64 2147589986, i64 2147590029, i64 2147590069}
!5119 = !DILocation(line: 115, column: 1, scope: !4909)
!5120 = !{i64 2147590168, i64 2147590211, i64 2147590251}
!5121 = !DILocation(line: 116, column: 1, scope: !4909)
!5122 = !{i64 2147590382, i64 2147590425, i64 2147590465}
!5123 = !DILocation(line: 117, column: 1, scope: !4909)
!5124 = !{i64 2147590581, i64 2147590624, i64 2147590664}
!5125 = !DILocation(line: 118, column: 1, scope: !4909)
!5126 = !{i64 2147590816, i64 2147590859, i64 2147590899}
!5127 = !DILocation(line: 119, column: 1, scope: !4909)
!5128 = !{i64 2147591066, i64 2147591109, i64 2147591149}
!5129 = !DILocation(line: 120, column: 1, scope: !4909)
!5130 = !{i64 2147591268, i64 2147591311, i64 2147591351}
!5131 = !DILocation(line: 121, column: 1, scope: !4909)
!5132 = !{i64 2147591491, i64 2147591534, i64 2147591574}
!5133 = !DILocation(line: 122, column: 1, scope: !4909)
!5134 = !{i64 2147591705, i64 2147591748, i64 2147591788}
!5135 = !DILocation(line: 123, column: 1, scope: !4909)
!5136 = !{i64 2147591949, i64 2147591992, i64 2147592032}
!5137 = !DILocation(line: 124, column: 1, scope: !4909)
!5138 = !{i64 2147592178, i64 2147592221, i64 2147592261}
!5139 = !DILocation(line: 125, column: 1, scope: !4909)
!5140 = !{i64 2147592404, i64 2147592447, i64 2147592487}
!5141 = !DILocation(line: 126, column: 1, scope: !4909)
!5142 = !{i64 2147592663, i64 2147592706, i64 2147592746}
!5143 = !DILocation(line: 127, column: 1, scope: !4909)
!5144 = !{i64 2147592883, i64 2147592926, i64 2147592966}
!5145 = !DILocation(line: 128, column: 1, scope: !4909)
!5146 = !{i64 2147593115, i64 2147593158, i64 2147593198}
!5147 = !DILocation(line: 129, column: 1, scope: !4909)
!5148 = !{i64 2147593356, i64 2147593399, i64 2147593439}
!5149 = !DILocation(line: 130, column: 1, scope: !4909)
!5150 = !{i64 2147593597, i64 2147593640, i64 2147593680}
!5151 = !DILocation(line: 131, column: 1, scope: !4909)
!5152 = !{i64 2147593820, i64 2147593863, i64 2147593903}
!5153 = !DILocation(line: 132, column: 1, scope: !4909)
!5154 = !{i64 2147594037, i64 2147594080, i64 2147594120}
!5155 = !DILocation(line: 133, column: 1, scope: !4909)
!5156 = !{i64 2147594278, i64 2147594321, i64 2147594361}
!5157 = !DILocation(line: 134, column: 1, scope: !4909)
!5158 = !{i64 2147594465, i64 2147594508, i64 2147594548}
!5159 = !DILocation(line: 135, column: 1, scope: !4909)
!5160 = !{i64 2147594694, i64 2147594737, i64 2147594777}
!5161 = !DILocation(line: 136, column: 1, scope: !4909)
!5162 = !{i64 2147598951, i64 2147598994, i64 2147599034}
!5163 = !DILocation(line: 137, column: 1, scope: !4909)
!5164 = !{i64 2147599163, i64 2147599206, i64 2147599246}
!5165 = !DILocation(line: 138, column: 1, scope: !4909)
!5166 = !{i64 2147599384, i64 2147599427, i64 2147599467}
!5167 = !DILocation(line: 139, column: 1, scope: !4909)
!5168 = !{i64 2147599598, i64 2147599641, i64 2147599681}
!5169 = !DILocation(line: 140, column: 1, scope: !4909)
!5170 = !{i64 2147599788, i64 2147599831, i64 2147599871}
!5171 = !DILocation(line: 141, column: 1, scope: !4909)
!5172 = !{i64 2147599987, i64 2147600030, i64 2147600070}
!5173 = !DILocation(line: 142, column: 1, scope: !4909)
!5174 = !{i64 2147600192, i64 2147600235, i64 2147600275}
!5175 = !DILocation(line: 143, column: 1, scope: !4909)
!5176 = !{i64 2147600412, i64 2147600455, i64 2147600495}
!5177 = !DILocation(line: 144, column: 1, scope: !4909)
!5178 = !{i64 2147600613, i64 2147600656, i64 2147600696}
!5179 = !DILocation(line: 145, column: 1, scope: !4909)
!5180 = !{i64 2147600812, i64 2147600855, i64 2147600895}
!5181 = !DILocation(line: 146, column: 1, scope: !4909)
!5182 = !{i64 2147600981, i64 2147601024, i64 2147601064}
!5183 = !DILocation(line: 147, column: 1, scope: !4909)
!5184 = !{i64 2147601165, i64 2147601208, i64 2147601248}
!5185 = !DILocation(line: 148, column: 1, scope: !4909)
!5186 = !{i64 2147601349, i64 2147601392, i64 2147601432}
!5187 = !DILocation(line: 149, column: 1, scope: !4909)
!5188 = !{i64 2147601536, i64 2147601579, i64 2147601619}
!5189 = !DILocation(line: 150, column: 1, scope: !4909)
!5190 = !{i64 2147601720, i64 2147601763, i64 2147601803}
!5191 = !DILocation(line: 151, column: 1, scope: !4909)
!5192 = !{i64 2147601958, i64 2147602001, i64 2147602041}
!5193 = !DILocation(line: 152, column: 1, scope: !4909)
!5194 = !{i64 2147602188, i64 2147602231, i64 2147602271}
!5195 = !DILocation(line: 153, column: 1, scope: !4909)
!5196 = !{i64 2147602417, i64 2147602460, i64 2147602500}
!5197 = !DILocation(line: 154, column: 1, scope: !4909)
!5198 = !{i64 2147602604, i64 2147602647, i64 2147602687}
!5199 = !DILocation(line: 155, column: 1, scope: !4909)
!5200 = !{i64 2147602800, i64 2147602843, i64 2147602883}
!5201 = !DILocation(line: 156, column: 1, scope: !4909)
!5202 = !{i64 2147603008, i64 2147603051, i64 2147603091}
!5203 = !DILocation(line: 157, column: 1, scope: !4909)
!5204 = !{i64 2147603220, i64 2147603263, i64 2147603303}
!5205 = !DILocation(line: 158, column: 1, scope: !4909)
!5206 = !{i64 2147603419, i64 2147603462, i64 2147603502}
!5207 = !DILocation(line: 159, column: 1, scope: !4909)
!5208 = !{i64 2147603657, i64 2147603700, i64 2147603740}
!5209 = !DILocation(line: 160, column: 1, scope: !4909)
!5210 = !{i64 2147603853, i64 2147603896, i64 2147603936}
!5211 = !DILocation(line: 161, column: 1, scope: !4909)
!5212 = !{i64 2147604055, i64 2147604098, i64 2147604138}
!5213 = !DILocation(line: 162, column: 1, scope: !4909)
!5214 = !{i64 2147604248, i64 2147604291, i64 2147604331}
!5215 = !DILocation(line: 163, column: 1, scope: !4909)
!5216 = !{i64 2147604482, i64 2147604525, i64 2147604565}
!5217 = !DILocation(line: 164, column: 1, scope: !4909)
!5218 = !{i64 2147604645, i64 2147604688, i64 2147604728}
!5219 = !DILocation(line: 165, column: 1, scope: !4909)
!5220 = !{i64 2147604884, i64 2147604927, i64 2147604967}
!5221 = !DILocation(line: 166, column: 1, scope: !4909)
!5222 = !{i64 2147605123, i64 2147605166, i64 2147605206}
!5223 = !DILocation(line: 167, column: 1, scope: !4909)
!5224 = !{i64 2147605359, i64 2147605402, i64 2147605442}
!5225 = !DILocation(line: 168, column: 1, scope: !4909)
!5226 = !{i64 2147605589, i64 2147605632, i64 2147605672}
!5227 = !DILocation(line: 169, column: 1, scope: !4909)
!5228 = !{i64 2147605776, i64 2147605819, i64 2147605859}
!5229 = !DILocation(line: 170, column: 1, scope: !4909)
!5230 = !{i64 2147605975, i64 2147606018, i64 2147606058}
!5231 = !DILocation(line: 171, column: 1, scope: !4909)
!5232 = !{i64 2147606246, i64 2147606289, i64 2147606329}
!5233 = !DILocation(line: 172, column: 1, scope: !4909)
!5234 = !{i64 2147606421, i64 2147606464, i64 2147606504}
!5235 = !DILocation(line: 173, column: 1, scope: !4909)
!5236 = !{i64 2147606655, i64 2147606698, i64 2147606738}
!5237 = !DILocation(line: 174, column: 1, scope: !4909)
!5238 = !{i64 2147606863, i64 2147606906, i64 2147606946}
!5239 = !DILocation(line: 175, column: 1, scope: !4909)
!5240 = !{i64 2147607062, i64 2147607105, i64 2147607145}
!5241 = !DILocation(line: 176, column: 1, scope: !4909)
!5242 = !{i64 2147607280, i64 2147607323, i64 2147607363}
!5243 = !DILocation(line: 177, column: 1, scope: !4909)
!5244 = !{i64 2147607470, i64 2147607513, i64 2147607553}
!5245 = !DILocation(line: 178, column: 1, scope: !4909)
!5246 = !{i64 2147607666, i64 2147607709, i64 2147607749}
!5247 = !DILocation(line: 179, column: 1, scope: !4909)
!5248 = !{i64 2147607872, i64 2147607915, i64 2147607955}
!5249 = !DILocation(line: 180, column: 1, scope: !4909)
!5250 = !{i64 2147608077, i64 2147608120, i64 2147608160}
!5251 = !DILocation(line: 181, column: 1, scope: !4909)
!5252 = !{i64 2147612364, i64 2147612407, i64 2147612447}
!5253 = !DILocation(line: 182, column: 1, scope: !4909)
!5254 = !{i64 2147612596, i64 2147612639, i64 2147612679}
!5255 = !DILocation(line: 183, column: 1, scope: !4909)
!5256 = !{i64 2147612774, i64 2147612817, i64 2147612857}
!5257 = !DILocation(line: 184, column: 1, scope: !4909)
!5258 = !{i64 2147612983, i64 2147613026, i64 2147613066}
!5259 = !DILocation(line: 185, column: 1, scope: !4909)
!5260 = !{i64 2147613215, i64 2147613258, i64 2147613298}
!5261 = !DILocation(line: 186, column: 1, scope: !4909)
!5262 = !{i64 2147613417, i64 2147613460, i64 2147613500}
!5263 = !DILocation(line: 187, column: 1, scope: !4909)
!5264 = !{i64 2147613667, i64 2147613710, i64 2147613750}
!5265 = !DILocation(line: 188, column: 1, scope: !4909)
!5266 = !{i64 2147613905, i64 2147613948, i64 2147613988}
!5267 = !DILocation(line: 189, column: 1, scope: !4909)
!5268 = !{i64 2147614083, i64 2147614126, i64 2147614166}
!5269 = !DILocation(line: 190, column: 1, scope: !4909)
!5270 = !{i64 2147614297, i64 2147614340, i64 2147614380}
!5271 = !DILocation(line: 191, column: 1, scope: !4909)
!5272 = !{i64 2147614505, i64 2147614548, i64 2147614588}
!5273 = !DILocation(line: 192, column: 1, scope: !4909)
!5274 = !{i64 2147614695, i64 2147614738, i64 2147614778}
!5275 = !DILocation(line: 193, column: 1, scope: !4909)
!5276 = !{i64 2147614909, i64 2147614952, i64 2147614992}
!5277 = !DILocation(line: 194, column: 1, scope: !4909)
!5278 = !{i64 2147615171, i64 2147615214, i64 2147615254}
!5279 = !DILocation(line: 195, column: 1, scope: !4909)
!5280 = !{i64 2147615382, i64 2147615425, i64 2147615465}
!5281 = !DILocation(line: 196, column: 1, scope: !4909)
!5282 = !{i64 2147615626, i64 2147615669, i64 2147615709}
!5283 = !DILocation(line: 197, column: 1, scope: !4909)
!5284 = !{i64 2147615837, i64 2147615880, i64 2147615920}
!5285 = !DILocation(line: 198, column: 1, scope: !4909)
!5286 = !{i64 2147616066, i64 2147616109, i64 2147616149}
!5287 = !DILocation(line: 199, column: 1, scope: !4909)
!5288 = !{i64 2147616331, i64 2147616374, i64 2147616414}
!5289 = !DILocation(line: 200, column: 1, scope: !4909)
!5290 = !{i64 2147616536, i64 2147616579, i64 2147616619}
!5291 = !DILocation(line: 201, column: 1, scope: !4909)
!5292 = !{i64 2147616732, i64 2147616775, i64 2147616815}
!5293 = !DILocation(line: 202, column: 1, scope: !4909)
!5294 = !{i64 2147616955, i64 2147616998, i64 2147617038}
!5295 = !DILocation(line: 203, column: 1, scope: !4909)
!5296 = !{i64 2147617118, i64 2147617161, i64 2147617201}
!5297 = !DILocation(line: 204, column: 1, scope: !4909)
!5298 = !{i64 2147617323, i64 2147617366, i64 2147617406}
!5299 = !DILocation(line: 205, column: 1, scope: !4909)
!5300 = !{i64 2147617543, i64 2147617586, i64 2147617626}
!5301 = !DILocation(line: 206, column: 1, scope: !4909)
!5302 = !{i64 2147617757, i64 2147617800, i64 2147617840}
!5303 = !DILocation(line: 207, column: 1, scope: !4909)
!5304 = !{i64 2147617971, i64 2147618014, i64 2147618054}
!5305 = !DILocation(line: 208, column: 1, scope: !4909)
!5306 = !{i64 2147618182, i64 2147618225, i64 2147618265}
!5307 = !DILocation(line: 209, column: 1, scope: !4909)
!5308 = !{i64 2147618375, i64 2147618418, i64 2147618458}
!5309 = !DILocation(line: 210, column: 1, scope: !4909)
!5310 = !{i64 2147618574, i64 2147618617, i64 2147618657}
!5311 = !DILocation(line: 211, column: 1, scope: !4909)
!5312 = !{i64 2147618770, i64 2147618813, i64 2147618853}
!5313 = !DILocation(line: 212, column: 1, scope: !4909)
!5314 = !{i64 2147618969, i64 2147619012, i64 2147619052}
!5315 = !DILocation(line: 213, column: 1, scope: !4909)
!5316 = !{i64 2147619141, i64 2147619184, i64 2147619224}
!5317 = !DILocation(line: 214, column: 1, scope: !4909)
!5318 = !{i64 2147619334, i64 2147619377, i64 2147619417}
!5319 = !DILocation(line: 215, column: 1, scope: !4909)
!5320 = !{i64 2147619530, i64 2147619573, i64 2147619613}
!5321 = !DILocation(line: 216, column: 1, scope: !4909)
!5322 = !{i64 2147619757, i64 2147619800, i64 2147619840}
!5323 = !DILocation(line: 217, column: 1, scope: !4909)
!5324 = !{i64 2147619974, i64 2147620017, i64 2147620057}
!5325 = !DILocation(line: 218, column: 1, scope: !4909)
!5326 = !{i64 2147620266, i64 2147620309, i64 2147620349}
!5327 = !DILocation(line: 219, column: 1, scope: !4909)
!5328 = !{i64 2147620498, i64 2147620541, i64 2147620581}
!5329 = !DILocation(line: 220, column: 1, scope: !4909)
!5330 = !{i64 2147620715, i64 2147620758, i64 2147620798}
!5331 = !DILocation(line: 221, column: 1, scope: !4909)
!5332 = !{i64 2147620922, i64 2147620965, i64 2147621005}
!5333 = !DILocation(line: 222, column: 1, scope: !4909)
!5334 = !{i64 2147625184, i64 2147625227, i64 2147625267}
!5335 = !DILocation(line: 223, column: 1, scope: !4909)
!5336 = !{i64 2147625416, i64 2147625459, i64 2147625499}
!5337 = !DILocation(line: 224, column: 1, scope: !4909)
!5338 = !{i64 2147625624, i64 2147625667, i64 2147625707}
!5339 = !DILocation(line: 225, column: 1, scope: !4909)
!5340 = !{i64 2147625814, i64 2147625857, i64 2147625897}
!5341 = !DILocation(line: 226, column: 1, scope: !4909)
!5342 = !{i64 2147626040, i64 2147626083, i64 2147626123}
!5343 = !DILocation(line: 227, column: 1, scope: !4909)
!5344 = !{i64 2147626229, i64 2147626272, i64 2147626312}
!5345 = !DILocation(line: 228, column: 1, scope: !4909)
!5346 = !{i64 2147626500, i64 2147626543, i64 2147626583}
!5347 = !DILocation(line: 229, column: 1, scope: !4909)
!5348 = !{i64 2147626720, i64 2147626763, i64 2147626803}
!5349 = !DILocation(line: 230, column: 1, scope: !4909)
!5350 = !{i64 2147626973, i64 2147627016, i64 2147627056}
!5351 = !DILocation(line: 231, column: 1, scope: !4909)
!5352 = !{i64 2147627181, i64 2147627224, i64 2147627264}
!5353 = !DILocation(line: 232, column: 1, scope: !4909)
!5354 = !{i64 2147627413, i64 2147627456, i64 2147627496}
!5355 = !DILocation(line: 233, column: 1, scope: !4909)
!5356 = !{i64 2147627624, i64 2147627667, i64 2147627707}
!5357 = !DILocation(line: 234, column: 1, scope: !4909)
!5358 = !{i64 2147627814, i64 2147627857, i64 2147627897}
!5359 = !DILocation(line: 235, column: 1, scope: !4909)
!5360 = !{i64 2147628028, i64 2147628071, i64 2147628111}
!5361 = !DILocation(line: 236, column: 1, scope: !4909)
!5362 = !{i64 2147628227, i64 2147628270, i64 2147628310}
!5363 = !DILocation(line: 237, column: 1, scope: !4909)
!5364 = !{i64 2147628414, i64 2147628457, i64 2147628497}
!5365 = !DILocation(line: 238, column: 1, scope: !4909)
!5366 = !{i64 2147628622, i64 2147628665, i64 2147628705}
!5367 = !DILocation(line: 239, column: 1, scope: !4909)
!5368 = !{i64 2147628851, i64 2147628894, i64 2147628934}
!5369 = !DILocation(line: 240, column: 1, scope: !4909)
!5370 = !{i64 2147629053, i64 2147629096, i64 2147629136}
!5371 = !DILocation(line: 241, column: 1, scope: !4909)
!5372 = !{i64 2147629252, i64 2147629295, i64 2147629335}
!5373 = !DILocation(line: 242, column: 1, scope: !4909)
!5374 = !{i64 2147629469, i64 2147629512, i64 2147629552}
!5375 = !DILocation(line: 244, column: 1, scope: !4909)
!5376 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !530, file: !530, line: 225, type: !537, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5377)
!5377 = !{!5378}
!5378 = !DILocalVariable(name: "arg", arg: 1, scope: !5376, file: !530, line: 225, type: !539)
!5379 = !DILocation(line: 0, scope: !5376)
!5380 = !DILocation(line: 230, column: 2, scope: !5376)
!5381 = !DILocation(line: 233, column: 2, scope: !5376)
!5382 = !DILocation(line: 236, column: 2, scope: !5376)
!5383 = !DILocation(line: 255, column: 2, scope: !5376)
!5384 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !530, file: !530, line: 50, type: !2944, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !675)
!5385 = !DILocation(line: 53, column: 2, scope: !5384)
!5386 = !DILocation(line: 54, column: 1, scope: !5384)
!5387 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !530, file: !530, line: 14, type: !2944, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !675)
!5388 = !DILocation(line: 23, column: 2, scope: !5387)
!5389 = !DILocation(line: 24, column: 2, scope: !5387)
!5390 = !DILocation(line: 25, column: 2, scope: !5387)
!5391 = !DILocation(line: 27, column: 2, scope: !5387)
!5392 = !DILocation(line: 31, column: 2, scope: !5387)
!5393 = !DILocation(line: 33, column: 2, scope: !5387)
!5394 = !DILocation(line: 36, column: 2, scope: !5387)
!5395 = !DILocation(line: 37, column: 2, scope: !5387)
!5396 = !DILocation(line: 40, column: 2, scope: !5387)
!5397 = !DILocation(line: 41, column: 2, scope: !5387)
!5398 = !DILocation(line: 42, column: 2, scope: !5387)
!5399 = !DILocation(line: 43, column: 2, scope: !5387)
!5400 = !DILocation(line: 44, column: 2, scope: !5387)
!5401 = !DILocation(line: 47, column: 2, scope: !5387)
!5402 = !DILocation(line: 48, column: 1, scope: !5387)
!5403 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !530, file: !530, line: 57, type: !2944, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !675)
!5404 = !DILocation(line: 61, column: 2, scope: !5403)
!5405 = !DILocation(line: 63, column: 2, scope: !5403)
!5406 = !DILocation(line: 80, column: 1, scope: !5403)
!5407 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !5408, file: !5408, line: 164, type: !5409, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5411)
!5408 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5409 = !DISubroutineType(types: !5410)
!5410 = !{null, !472, !404, !410, !580, !580}
!5411 = !{!5412, !5413, !5414, !5415, !5416}
!5412 = !DILocalVariable(name: "base", arg: 1, scope: !5407, file: !5408, line: 164, type: !472)
!5413 = !DILocalVariable(name: "pdap", arg: 2, scope: !5407, file: !5408, line: 164, type: !404)
!5414 = !DILocalVariable(name: "perm", arg: 3, scope: !5407, file: !5408, line: 164, type: !410)
!5415 = !DILocalVariable(name: "sreq", arg: 4, scope: !5407, file: !5408, line: 164, type: !580)
!5416 = !DILocalVariable(name: "lock", arg: 5, scope: !5407, file: !5408, line: 164, type: !580)
!5417 = !DILocation(line: 0, scope: !5407)
!5418 = !DILocation(line: 166, column: 24, scope: !5407)
!5419 = !DILocation(line: 166, column: 5, scope: !5407)
!5420 = !DILocation(line: 166, column: 22, scope: !5407)
!5421 = !DILocation(line: 167, column: 1, scope: !5407)
!5422 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !115, file: !115, line: 454, type: !5423, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5425)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{null, !397, !404, !404}
!5425 = !{!5426, !5427, !5428}
!5426 = !DILocalVariable(name: "base", arg: 1, scope: !5422, file: !115, line: 454, type: !397)
!5427 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !5422, file: !115, line: 454, type: !404)
!5428 = !DILocalVariable(name: "control", arg: 3, scope: !5422, file: !115, line: 454, type: !404)
!5429 = !DILocation(line: 0, scope: !5422)
!5430 = !DILocation(line: 456, column: 5, scope: !5422)
!5431 = !DILocation(line: 456, column: 22, scope: !5422)
!5432 = !DILocation(line: 457, column: 1, scope: !5422)
!5433 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !115, file: !115, line: 379, type: !5434, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5436)
!5434 = !DISubroutineType(types: !5435)
!5435 = !{null, !397, !404}
!5436 = !{!5437, !5438}
!5437 = !DILocalVariable(name: "base", arg: 1, scope: !5433, file: !115, line: 379, type: !397)
!5438 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !5433, file: !115, line: 379, type: !404)
!5439 = !DILocation(line: 0, scope: !5433)
!5440 = !DILocation(line: 381, column: 26, scope: !5433)
!5441 = !DILocation(line: 382, column: 1, scope: !5433)
!5442 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !5443, file: !5443, line: 136, type: !5444, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5446)
!5443 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5444 = !DISubroutineType(types: !5445)
!5445 = !{null, !515}
!5446 = !{!5447}
!5447 = !DILocalVariable(name: "base", arg: 1, scope: !5442, file: !5443, line: 136, type: !515)
!5448 = !DILocation(line: 0, scope: !5442)
!5449 = !DILocation(line: 138, column: 16, scope: !5442)
!5450 = !DILocation(line: 139, column: 1, scope: !5442)
!5451 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !5408, file: !5408, line: 136, type: !5452, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5454)
!5452 = !DISubroutineType(types: !5453)
!5453 = !{null, !472, !404, !404, !580}
!5454 = !{!5455, !5456, !5457, !5458}
!5455 = !DILocalVariable(name: "base", arg: 1, scope: !5451, file: !5408, line: 136, type: !472)
!5456 = !DILocalVariable(name: "mda", arg: 2, scope: !5451, file: !5408, line: 136, type: !404)
!5457 = !DILocalVariable(name: "domainId", arg: 3, scope: !5451, file: !5408, line: 136, type: !404)
!5458 = !DILocalVariable(name: "lock", arg: 4, scope: !5451, file: !5408, line: 136, type: !580)
!5459 = !DILocation(line: 0, scope: !5451)
!5460 = !DILocation(line: 140, column: 20, scope: !5451)
!5461 = !DILocation(line: 141, column: 1, scope: !5451)
!5462 = !DILocation(line: 25, column: 6, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !699, file: !652, line: 25, column: 6)
!5464 = !DILocation(line: 25, column: 10, scope: !5463)
!5465 = !DILocation(line: 25, column: 6, scope: !699)
!5466 = !DILocation(line: 26, column: 3, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5468, file: !652, line: 26, column: 3)
!5468 = distinct !DILexicalBlock(scope: !5463, file: !652, line: 25, column: 19)
!5469 = !DILocation(line: 27, column: 2, scope: !5468)
!5470 = !DILocation(line: 29, column: 8, scope: !705)
!5471 = !DILocation(line: 0, scope: !705)
!5472 = !DILocation(line: 29, column: 6, scope: !699)
!5473 = !DILocation(line: 30, column: 14, scope: !699)
!5474 = !DILocation(line: 30, column: 2, scope: !699)
!5475 = distinct !DISubprogram(name: "k_queue_get", scope: !3364, file: !3364, line: 649, type: !5476, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !545, retainedNodes: !5483)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{!102, !5478, !5479}
!5478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 32)
!5479 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !549, line: 67, baseType: !5480)
!5480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 65, size: 64, elements: !5481)
!5481 = !{!5482}
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5480, file: !549, line: 66, baseType: !548, size: 64)
!5483 = !{!5484, !5485}
!5484 = !DILocalVariable(name: "queue", arg: 1, scope: !5475, file: !3364, line: 649, type: !5478)
!5485 = !DILocalVariable(name: "timeout", arg: 2, scope: !5475, file: !3364, line: 649, type: !5479)
!5486 = !DILocation(line: 0, scope: !5475)
!5487 = !DILocation(line: 658, column: 2, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5475, file: !3364, line: 658, column: 2)
!5489 = !{i64 2151035267}
!5490 = !DILocation(line: 659, column: 9, scope: !5475)
!5491 = !DILocation(line: 659, column: 2, scope: !5475)
!5492 = distinct !DISubprogram(name: "console_getline_init", scope: !652, file: !652, line: 33, type: !2944, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !545, retainedNodes: !5493)
!5493 = !{!5494}
!5494 = !DILocalVariable(name: "i", scope: !5492, file: !652, line: 35, type: !103)
!5495 = !DILocation(line: 0, scope: !5492)
!5496 = !DILocation(line: 38, column: 3, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !652, line: 38, column: 3)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !652, line: 37, column: 46)
!5499 = distinct !DILexicalBlock(scope: !5500, file: !652, line: 37, column: 2)
!5500 = distinct !DILexicalBlock(scope: !5492, file: !652, line: 37, column: 2)
!5501 = !DILocation(line: 45, column: 2, scope: !5492)
!5502 = !DILocation(line: 46, column: 1, scope: !5492)
!5503 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5504, file: !5504, line: 57, type: !5505, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !5551)
!5504 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5505 = !DISubroutineType(types: !5506)
!5506 = !{null, !32, !5507}
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5508, size: 32)
!5508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5509)
!5509 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2441, line: 141, baseType: !5510)
!5510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2441, line: 97, size: 256, elements: !5511)
!5511 = !{!5512}
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5510, file: !2441, line: 107, baseType: !5513, size: 256)
!5513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2441, line: 98, size: 256, elements: !5514)
!5514 = !{!5515, !5520, !5525, !5530, !5535, !5540, !5545, !5550}
!5515 = !DIDerivedType(tag: DW_TAG_member, scope: !5513, file: !2441, line: 99, baseType: !5516, size: 32)
!5516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5513, file: !2441, line: 99, size: 32, elements: !5517)
!5517 = !{!5518, !5519}
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5516, file: !2441, line: 99, baseType: !404, size: 32)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5516, file: !2441, line: 99, baseType: !404, size: 32)
!5520 = !DIDerivedType(tag: DW_TAG_member, scope: !5513, file: !2441, line: 100, baseType: !5521, size: 32, offset: 32)
!5521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5513, file: !2441, line: 100, size: 32, elements: !5522)
!5522 = !{!5523, !5524}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5521, file: !2441, line: 100, baseType: !404, size: 32)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5521, file: !2441, line: 100, baseType: !404, size: 32)
!5525 = !DIDerivedType(tag: DW_TAG_member, scope: !5513, file: !2441, line: 101, baseType: !5526, size: 32, offset: 64)
!5526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5513, file: !2441, line: 101, size: 32, elements: !5527)
!5527 = !{!5528, !5529}
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5526, file: !2441, line: 101, baseType: !404, size: 32)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5526, file: !2441, line: 101, baseType: !404, size: 32)
!5530 = !DIDerivedType(tag: DW_TAG_member, scope: !5513, file: !2441, line: 102, baseType: !5531, size: 32, offset: 96)
!5531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5513, file: !2441, line: 102, size: 32, elements: !5532)
!5532 = !{!5533, !5534}
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5531, file: !2441, line: 102, baseType: !404, size: 32)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5531, file: !2441, line: 102, baseType: !404, size: 32)
!5535 = !DIDerivedType(tag: DW_TAG_member, scope: !5513, file: !2441, line: 103, baseType: !5536, size: 32, offset: 128)
!5536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5513, file: !2441, line: 103, size: 32, elements: !5537)
!5537 = !{!5538, !5539}
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5536, file: !2441, line: 103, baseType: !404, size: 32)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5536, file: !2441, line: 103, baseType: !404, size: 32)
!5540 = !DIDerivedType(tag: DW_TAG_member, scope: !5513, file: !2441, line: 104, baseType: !5541, size: 32, offset: 160)
!5541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5513, file: !2441, line: 104, size: 32, elements: !5542)
!5542 = !{!5543, !5544}
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5541, file: !2441, line: 104, baseType: !404, size: 32)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5541, file: !2441, line: 104, baseType: !404, size: 32)
!5545 = !DIDerivedType(tag: DW_TAG_member, scope: !5513, file: !2441, line: 105, baseType: !5546, size: 32, offset: 192)
!5546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5513, file: !2441, line: 105, size: 32, elements: !5547)
!5547 = !{!5548, !5549}
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5546, file: !2441, line: 105, baseType: !404, size: 32)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5546, file: !2441, line: 105, baseType: !404, size: 32)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5513, file: !2441, line: 106, baseType: !404, size: 32, offset: 224)
!5551 = !{!5552, !5553}
!5552 = !DILocalVariable(name: "reason", arg: 1, scope: !5503, file: !5504, line: 57, type: !32)
!5553 = !DILocalVariable(name: "esf", arg: 2, scope: !5503, file: !5504, line: 57, type: !5507)
!5554 = !DILocation(line: 0, scope: !5503)
!5555 = !DILocation(line: 63, column: 2, scope: !5503)
!5556 = !DILocation(line: 64, column: 1, scope: !5503)
!5557 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5504, file: !5504, line: 82, type: !5558, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !5573)
!5558 = !DISubroutineType(types: !5559)
!5559 = !{null, !5507, !5560}
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 32)
!5561 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !1852, line: 37, baseType: !5562)
!5562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1852, line: 25, size: 288, elements: !5563)
!5563 = !{!5564, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5562, file: !1852, line: 26, baseType: !404, size: 32)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5562, file: !1852, line: 27, baseType: !404, size: 32, offset: 32)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5562, file: !1852, line: 28, baseType: !404, size: 32, offset: 64)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5562, file: !1852, line: 29, baseType: !404, size: 32, offset: 96)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5562, file: !1852, line: 30, baseType: !404, size: 32, offset: 128)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5562, file: !1852, line: 31, baseType: !404, size: 32, offset: 160)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5562, file: !1852, line: 32, baseType: !404, size: 32, offset: 192)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5562, file: !1852, line: 33, baseType: !404, size: 32, offset: 224)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5562, file: !1852, line: 34, baseType: !404, size: 32, offset: 256)
!5573 = !{!5574, !5575, !5576}
!5574 = !DILocalVariable(name: "esf", arg: 1, scope: !5557, file: !5504, line: 82, type: !5507)
!5575 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5557, file: !5504, line: 82, type: !5560)
!5576 = !DILocalVariable(name: "reason", scope: !5557, file: !5504, line: 88, type: !32)
!5577 = !DILocation(line: 0, scope: !5557)
!5578 = !DILocation(line: 88, column: 35, scope: !5557)
!5579 = !DILocation(line: 108, column: 2, scope: !5557)
!5580 = !DILocation(line: 131, column: 1, scope: !5557)
!5581 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5504, file: !5504, line: 133, type: !5582, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !5584)
!5582 = !DISubroutineType(types: !5583)
!5583 = !{null, !102}
!5584 = !{!5585, !5586, !5587}
!5585 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5581, file: !5504, line: 133, type: !102)
!5586 = !DILocalVariable(name: "ssf_contents", scope: !5581, file: !5504, line: 135, type: !1344)
!5587 = !DILocalVariable(name: "oops_esf", scope: !5581, file: !5504, line: 136, type: !5509)
!5588 = !DILocation(line: 0, scope: !5581)
!5589 = !DILocation(line: 136, column: 2, scope: !5581)
!5590 = !DILocation(line: 136, column: 15, scope: !5581)
!5591 = !DILocation(line: 139, column: 22, scope: !5581)
!5592 = !DILocation(line: 139, column: 17, scope: !5581)
!5593 = !DILocation(line: 139, column: 20, scope: !5581)
!5594 = !DILocation(line: 141, column: 2, scope: !5581)
!5595 = !DILocation(line: 142, column: 2, scope: !5581)
!5596 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5597, file: !5597, line: 40, type: !5598, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !5600)
!5597 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5598 = !DISubroutineType(types: !5599)
!5599 = !{null, !32}
!5600 = !{!5601}
!5601 = !DILocalVariable(name: "irq", arg: 1, scope: !5596, file: !5597, line: 40, type: !32)
!5602 = !DILocation(line: 0, scope: !5596)
!5603 = !DILocation(line: 42, column: 2, scope: !5596)
!5604 = !DILocation(line: 43, column: 1, scope: !5596)
!5605 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1539, file: !1539, line: 1684, type: !5606, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !5608)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{null, !2335}
!5608 = !{!5609}
!5609 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5605, file: !1539, line: 1684, type: !2335)
!5610 = !DILocation(line: 0, scope: !5605)
!5611 = !DILocation(line: 1686, column: 23, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5605, file: !1539, line: 1686, column: 7)
!5613 = !DILocation(line: 1686, column: 7, scope: !5605)
!5614 = !DILocation(line: 1688, column: 5, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5612, file: !1539, line: 1687, column: 3)
!5616 = !{i64 2154443851}
!5617 = !DILocation(line: 1689, column: 81, scope: !5615)
!5618 = !DILocation(line: 1689, column: 60, scope: !5615)
!5619 = !DILocation(line: 1689, column: 34, scope: !5615)
!5620 = !DILocation(line: 1689, column: 5, scope: !5615)
!5621 = !DILocation(line: 1689, column: 43, scope: !5615)
!5622 = !DILocation(line: 1690, column: 5, scope: !5615)
!5623 = !{i64 2154443965}
!5624 = !DILocation(line: 1691, column: 3, scope: !5615)
!5625 = !DILocation(line: 1692, column: 1, scope: !5605)
!5626 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5597, file: !5597, line: 45, type: !5598, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !5627)
!5627 = !{!5628}
!5628 = !DILocalVariable(name: "irq", arg: 1, scope: !5626, file: !5597, line: 45, type: !32)
!5629 = !DILocation(line: 0, scope: !5626)
!5630 = !DILocation(line: 47, column: 2, scope: !5626)
!5631 = !DILocation(line: 48, column: 1, scope: !5626)
!5632 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1539, file: !1539, line: 1722, type: !5606, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !5633)
!5633 = !{!5634}
!5634 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5632, file: !1539, line: 1722, type: !2335)
!5635 = !DILocation(line: 0, scope: !5632)
!5636 = !DILocation(line: 1724, column: 23, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5632, file: !1539, line: 1724, column: 7)
!5638 = !DILocation(line: 1724, column: 7, scope: !5632)
!5639 = !DILocation(line: 1726, column: 81, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5637, file: !1539, line: 1725, column: 3)
!5641 = !DILocation(line: 1726, column: 60, scope: !5640)
!5642 = !DILocation(line: 1726, column: 34, scope: !5640)
!5643 = !DILocation(line: 1726, column: 5, scope: !5640)
!5644 = !DILocation(line: 1726, column: 43, scope: !5640)
!5645 = !DILocation(line: 271, column: 3, scope: !5646, inlinedAt: !5648)
!5646 = distinct !DISubprogram(name: "__DSB", scope: !5647, file: !5647, line: 269, type: !2944, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !675)
!5647 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5648 = distinct !DILocation(line: 1727, column: 5, scope: !5640)
!5649 = !{i64 6898238}
!5650 = !DILocation(line: 260, column: 3, scope: !5651, inlinedAt: !5652)
!5651 = distinct !DISubprogram(name: "__ISB", scope: !5647, file: !5647, line: 258, type: !2944, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !675)
!5652 = distinct !DILocation(line: 1728, column: 5, scope: !5640)
!5653 = !{i64 6897955}
!5654 = !DILocation(line: 1729, column: 3, scope: !5640)
!5655 = !DILocation(line: 1730, column: 1, scope: !5632)
!5656 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5597, file: !5597, line: 50, type: !5657, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !5659)
!5657 = !DISubroutineType(types: !5658)
!5658 = !{!103, !32}
!5659 = !{!5660}
!5660 = !DILocalVariable(name: "irq", arg: 1, scope: !5656, file: !5597, line: 50, type: !32)
!5661 = !DILocation(line: 0, scope: !5656)
!5662 = !DILocation(line: 52, column: 20, scope: !5656)
!5663 = !DILocation(line: 52, column: 9, scope: !5656)
!5664 = !DILocation(line: 52, column: 41, scope: !5656)
!5665 = !DILocation(line: 52, column: 39, scope: !5656)
!5666 = !DILocation(line: 52, column: 2, scope: !5656)
!5667 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5597, file: !5597, line: 64, type: !5668, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !5670)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{null, !32, !32, !404}
!5670 = !{!5671, !5672, !5673}
!5671 = !DILocalVariable(name: "irq", arg: 1, scope: !5667, file: !5597, line: 64, type: !32)
!5672 = !DILocalVariable(name: "prio", arg: 2, scope: !5667, file: !5597, line: 64, type: !32)
!5673 = !DILocalVariable(name: "flags", arg: 3, scope: !5667, file: !5597, line: 64, type: !404)
!5674 = !DILocation(line: 0, scope: !5667)
!5675 = !DILocation(line: 83, column: 8, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !5597, line: 82, column: 9)
!5677 = distinct !DILexicalBlock(scope: !5667, file: !5597, line: 76, column: 6)
!5678 = !DILocation(line: 95, column: 2, scope: !5667)
!5679 = !DILocation(line: 96, column: 1, scope: !5667)
!5680 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1539, file: !1539, line: 1814, type: !5681, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !5683)
!5681 = !DISubroutineType(types: !5682)
!5682 = !{null, !2335, !404}
!5683 = !{!5684, !5685}
!5684 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5680, file: !1539, line: 1814, type: !2335)
!5685 = !DILocalVariable(name: "priority", arg: 2, scope: !5680, file: !1539, line: 1814, type: !404)
!5686 = !DILocation(line: 0, scope: !5680)
!5687 = !DILocation(line: 0, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5680, file: !1539, line: 1816, column: 7)
!5689 = !DILocation(line: 1816, column: 7, scope: !5680)
!5690 = !DILocation(line: 1824, column: 1, scope: !5680)
!5691 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5597, file: !5597, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !5692)
!5692 = !{!5693}
!5693 = !DILocalVariable(name: "unused", arg: 1, scope: !5691, file: !5597, line: 155, type: !13)
!5694 = !DILocation(line: 0, scope: !5691)
!5695 = !DILocation(line: 159, column: 2, scope: !5691)
!5696 = !DILocation(line: 160, column: 1, scope: !5691)
!5697 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5698, file: !5698, line: 87, type: !2944, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !675)
!5698 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5699 = !DILocation(line: 89, column: 2, scope: !5697)
!5700 = !DILocation(line: 90, column: 2, scope: !5697)
!5701 = !DILocation(line: 91, column: 1, scope: !5697)
!5702 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5698, file: !5698, line: 23, type: !2944, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !675)
!5703 = !DISubprogram(name: "z_arm_int_exit", scope: !5704, file: !5704, line: 153, type: !2944, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !675)
!5704 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5705 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5706, file: !5706, line: 256, type: !2944, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !675)
!5706 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5707 = !DILocation(line: 258, column: 2, scope: !5705)
!5708 = !DILocation(line: 260, column: 2, scope: !5705)
!5709 = !DILocation(line: 262, column: 2, scope: !5705)
!5710 = !DILocation(line: 263, column: 2, scope: !5705)
!5711 = !DILocation(line: 267, column: 2, scope: !5705)
!5712 = !DILocation(line: 268, column: 2, scope: !5705)
!5713 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5706, file: !5706, line: 53, type: !2944, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !675)
!5714 = !DILocation(line: 55, column: 12, scope: !5713)
!5715 = !DILocation(line: 271, column: 3, scope: !5716, inlinedAt: !5717)
!5716 = distinct !DISubprogram(name: "__DSB", scope: !5647, file: !5647, line: 269, type: !2944, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !675)
!5717 = distinct !DILocation(line: 56, column: 2, scope: !5713)
!5718 = !{i64 6934012}
!5719 = !DILocation(line: 260, column: 3, scope: !5720, inlinedAt: !5721)
!5720 = distinct !DISubprogram(name: "__ISB", scope: !5647, file: !5647, line: 258, type: !2944, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !675)
!5721 = distinct !DILocation(line: 57, column: 2, scope: !5713)
!5722 = !{i64 6933729}
!5723 = !DILocation(line: 58, column: 1, scope: !5713)
!5724 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5706, file: !5706, line: 96, type: !2944, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !675)
!5725 = !DILocation(line: 103, column: 13, scope: !5724)
!5726 = !DILocation(line: 975, column: 3, scope: !5727, inlinedAt: !5732)
!5727 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5647, file: !5647, line: 971, type: !5728, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !5730)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{!404}
!5730 = !{!5731}
!5731 = !DILocalVariable(name: "result", scope: !5727, file: !5647, line: 973, type: !404)
!5732 = distinct !DILocation(line: 189, column: 16, scope: !5724)
!5733 = !{i64 6954842}
!5734 = !DILocation(line: 0, scope: !5727, inlinedAt: !5732)
!5735 = !DILocation(line: 189, column: 32, scope: !5724)
!5736 = !DILocalVariable(name: "control", arg: 1, scope: !5737, file: !5647, line: 1001, type: !404)
!5737 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5647, file: !5647, line: 1001, type: !5738, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !5740)
!5738 = !DISubroutineType(types: !5739)
!5739 = !{null, !404}
!5740 = !{!5736}
!5741 = !DILocation(line: 0, scope: !5737, inlinedAt: !5742)
!5742 = distinct !DILocation(line: 189, column: 2, scope: !5724)
!5743 = !DILocation(line: 1003, column: 3, scope: !5737, inlinedAt: !5742)
!5744 = !{i64 6955562}
!5745 = !DILocation(line: 260, column: 3, scope: !5720, inlinedAt: !5746)
!5746 = distinct !DILocation(line: 1004, column: 3, scope: !5737, inlinedAt: !5742)
!5747 = !DILocation(line: 191, column: 1, scope: !5724)
!5748 = distinct !DISubprogram(name: "arch_swap", scope: !5749, file: !5749, line: 33, type: !5657, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !5750)
!5749 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5750 = !{!5751}
!5751 = !DILocalVariable(name: "key", arg: 1, scope: !5748, file: !5749, line: 33, type: !32)
!5752 = !DILocation(line: 0, scope: !5748)
!5753 = !DILocation(line: 36, column: 2, scope: !5748)
!5754 = !DILocation(line: 36, column: 17, scope: !5748)
!5755 = !DILocation(line: 36, column: 25, scope: !5748)
!5756 = !DILocation(line: 37, column: 37, scope: !5748)
!5757 = !DILocation(line: 37, column: 17, scope: !5748)
!5758 = !DILocation(line: 37, column: 35, scope: !5748)
!5759 = !DILocation(line: 41, column: 12, scope: !5748)
!5760 = !DILocalVariable(name: "key", arg: 1, scope: !5761, file: !5762, line: 84, type: !32)
!5761 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5762, file: !5762, line: 84, type: !5598, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !5763)
!5762 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5763 = !{!5760}
!5764 = !DILocation(line: 0, scope: !5761, inlinedAt: !5765)
!5765 = distinct !DILocation(line: 44, column: 2, scope: !5748)
!5766 = !DILocation(line: 95, column: 2, scope: !5761, inlinedAt: !5765)
!5767 = !{i64 2840510}
!5768 = !DILocation(line: 53, column: 9, scope: !5748)
!5769 = !DILocation(line: 53, column: 24, scope: !5748)
!5770 = !DILocation(line: 53, column: 2, scope: !5748)
!5771 = distinct !DISubprogram(name: "arch_new_thread", scope: !5772, file: !5772, line: 56, type: !5773, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !5874)
!5772 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5773 = !DISubroutineType(types: !5774)
!5774 = !{null, !5775, !5869, !702, !3248, !102, !102, !102}
!5775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5776, size: 32)
!5776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1787, line: 245, size: 896, elements: !5777)
!5777 = !{!5778, !5836, !5848, !5849, !5850, !5851, !5864}
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5776, file: !1787, line: 247, baseType: !5779, size: 384)
!5779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1787, line: 57, size: 384, elements: !5780)
!5780 = !{!5781, !5805, !5812, !5813, !5814, !5823, !5824, !5825}
!5781 = !DIDerivedType(tag: DW_TAG_member, scope: !5779, file: !1787, line: 60, baseType: !5782, size: 64)
!5782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5779, file: !1787, line: 60, size: 64, elements: !5783)
!5783 = !{!5784, !5799}
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5782, file: !1787, line: 61, baseType: !5785, size: 64)
!5785 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !683, line: 49, baseType: !5786)
!5786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !5787)
!5787 = !{!5788, !5794}
!5788 = !DIDerivedType(tag: DW_TAG_member, scope: !5786, file: !683, line: 38, baseType: !5789, size: 32)
!5789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5786, file: !683, line: 38, size: 32, elements: !5790)
!5790 = !{!5791, !5793}
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5789, file: !683, line: 39, baseType: !5792, size: 32)
!5792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5786, size: 32)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5789, file: !683, line: 40, baseType: !5792, size: 32)
!5794 = !DIDerivedType(tag: DW_TAG_member, scope: !5786, file: !683, line: 42, baseType: !5795, size: 32, offset: 32)
!5795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5786, file: !683, line: 42, size: 32, elements: !5796)
!5796 = !{!5797, !5798}
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5795, file: !683, line: 43, baseType: !5792, size: 32)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5795, file: !683, line: 44, baseType: !5792, size: 32)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5782, file: !1787, line: 62, baseType: !5800, size: 64)
!5800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1812, line: 49, size: 64, elements: !5801)
!5801 = !{!5802}
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5800, file: !1812, line: 50, baseType: !5803, size: 64)
!5803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5804, size: 64, elements: !721)
!5804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5800, size: 32)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5779, file: !1787, line: 68, baseType: !5806, size: 32, offset: 64)
!5806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5807, size: 32)
!5807 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !5808)
!5808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !5809)
!5809 = !{!5810}
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5808, file: !678, line: 232, baseType: !5811, size: 64)
!5811 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !5786)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5779, file: !1787, line: 71, baseType: !410, size: 8, offset: 96)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5779, file: !1787, line: 74, baseType: !410, size: 8, offset: 104)
!5814 = !DIDerivedType(tag: DW_TAG_member, scope: !5779, file: !1787, line: 90, baseType: !5815, size: 16, offset: 112)
!5815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5779, file: !1787, line: 90, size: 16, elements: !5816)
!5816 = !{!5817, !5822}
!5817 = !DIDerivedType(tag: DW_TAG_member, scope: !5815, file: !1787, line: 91, baseType: !5818, size: 16)
!5818 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5815, file: !1787, line: 91, size: 16, elements: !5819)
!5819 = !{!5820, !5821}
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5818, file: !1787, line: 96, baseType: !1833, size: 8)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5818, file: !1787, line: 97, baseType: !410, size: 8, offset: 8)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5815, file: !1787, line: 100, baseType: !521, size: 16)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5779, file: !1787, line: 107, baseType: !404, size: 32, offset: 128)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5779, file: !1787, line: 127, baseType: !102, size: 32, offset: 160)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5779, file: !1787, line: 131, baseType: !5826, size: 192, offset: 192)
!5826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !678, line: 244, size: 192, elements: !5827)
!5827 = !{!5828, !5829, !5835}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5826, file: !678, line: 245, baseType: !5785, size: 64)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5826, file: !678, line: 246, baseType: !5830, size: 32, offset: 64)
!5830 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !678, line: 242, baseType: !5831)
!5831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5832, size: 32)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{null, !5834}
!5834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5826, size: 32)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5826, file: !678, line: 249, baseType: !550, size: 64, offset: 128)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5776, file: !1787, line: 250, baseType: !5837, size: 288, offset: 384)
!5837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1852, line: 25, size: 288, elements: !5838)
!5838 = !{!5839, !5840, !5841, !5842, !5843, !5844, !5845, !5846, !5847}
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5837, file: !1852, line: 26, baseType: !404, size: 32)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5837, file: !1852, line: 27, baseType: !404, size: 32, offset: 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5837, file: !1852, line: 28, baseType: !404, size: 32, offset: 64)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5837, file: !1852, line: 29, baseType: !404, size: 32, offset: 96)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5837, file: !1852, line: 30, baseType: !404, size: 32, offset: 128)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5837, file: !1852, line: 31, baseType: !404, size: 32, offset: 160)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5837, file: !1852, line: 32, baseType: !404, size: 32, offset: 192)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5837, file: !1852, line: 33, baseType: !404, size: 32, offset: 224)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5837, file: !1852, line: 34, baseType: !404, size: 32, offset: 256)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5776, file: !1787, line: 253, baseType: !102, size: 32, offset: 672)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5776, file: !1787, line: 256, baseType: !5807, size: 64, offset: 704)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5776, file: !1787, line: 294, baseType: !103, size: 32, offset: 768)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5776, file: !1787, line: 325, baseType: !5852, size: 32, offset: 800)
!5852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5853, size: 32)
!5853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !654, line: 5073, size: 160, elements: !5854)
!5854 = !{!5855, !5861, !5862}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5853, file: !654, line: 5074, baseType: !5856, size: 96)
!5856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !5857)
!5857 = !{!5858, !5859, !5860}
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5856, file: !1872, line: 57, baseType: !1875, size: 32)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5856, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5856, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5853, file: !654, line: 5075, baseType: !5807, size: 64, offset: 96)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5853, file: !654, line: 5076, baseType: !5863, offset: 160)
!5863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5776, file: !1787, line: 343, baseType: !5865, size: 64, offset: 832)
!5865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1852, line: 60, size: 64, elements: !5866)
!5866 = !{!5867, !5868}
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5865, file: !1852, line: 63, baseType: !404, size: 32)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5865, file: !1852, line: 66, baseType: !404, size: 32, offset: 32)
!5869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5870, size: 32)
!5870 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3249, line: 44, baseType: !5871)
!5871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1902, line: 47, size: 8, elements: !5872)
!5872 = !{!5873}
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5871, file: !1902, line: 48, baseType: !571, size: 8)
!5874 = !{!5875, !5876, !5877, !5878, !5879, !5880, !5881, !5882}
!5875 = !DILocalVariable(name: "thread", arg: 1, scope: !5771, file: !5772, line: 56, type: !5775)
!5876 = !DILocalVariable(name: "stack", arg: 2, scope: !5771, file: !5772, line: 56, type: !5869)
!5877 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5771, file: !5772, line: 57, type: !702)
!5878 = !DILocalVariable(name: "entry", arg: 4, scope: !5771, file: !5772, line: 57, type: !3248)
!5879 = !DILocalVariable(name: "p1", arg: 5, scope: !5771, file: !5772, line: 58, type: !102)
!5880 = !DILocalVariable(name: "p2", arg: 6, scope: !5771, file: !5772, line: 58, type: !102)
!5881 = !DILocalVariable(name: "p3", arg: 7, scope: !5771, file: !5772, line: 58, type: !102)
!5882 = !DILocalVariable(name: "iframe", scope: !5771, file: !5772, line: 60, type: !2439)
!5883 = !DILocation(line: 0, scope: !5771)
!5884 = !DILocation(line: 85, column: 11, scope: !5771)
!5885 = !DILocation(line: 93, column: 10, scope: !5771)
!5886 = !DILocation(line: 98, column: 13, scope: !5771)
!5887 = !DILocation(line: 100, column: 15, scope: !5771)
!5888 = !DILocation(line: 100, column: 10, scope: !5771)
!5889 = !DILocation(line: 100, column: 13, scope: !5771)
!5890 = !DILocation(line: 101, column: 15, scope: !5771)
!5891 = !DILocation(line: 101, column: 10, scope: !5771)
!5892 = !DILocation(line: 101, column: 13, scope: !5771)
!5893 = !DILocation(line: 102, column: 15, scope: !5771)
!5894 = !DILocation(line: 102, column: 10, scope: !5771)
!5895 = !DILocation(line: 102, column: 13, scope: !5771)
!5896 = !DILocation(line: 103, column: 15, scope: !5771)
!5897 = !DILocation(line: 103, column: 10, scope: !5771)
!5898 = !DILocation(line: 103, column: 13, scope: !5771)
!5899 = !DILocation(line: 106, column: 10, scope: !5771)
!5900 = !DILocation(line: 106, column: 15, scope: !5771)
!5901 = !DILocation(line: 122, column: 29, scope: !5771)
!5902 = !DILocation(line: 122, column: 23, scope: !5771)
!5903 = !DILocation(line: 122, column: 27, scope: !5771)
!5904 = !DILocation(line: 123, column: 15, scope: !5771)
!5905 = !DILocation(line: 123, column: 23, scope: !5771)
!5906 = !DILocation(line: 143, column: 1, scope: !5771)
!5907 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5772, file: !5772, line: 530, type: !5908, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !5910)
!5908 = !DISubroutineType(types: !5909)
!5909 = !{null, !5775, !702, !3248}
!5910 = !{!5911, !5912, !5913}
!5911 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5907, file: !5772, line: 530, type: !5775)
!5912 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5907, file: !5772, line: 530, type: !702)
!5913 = !DILocalVariable(name: "_main", arg: 3, scope: !5907, file: !5772, line: 531, type: !3248)
!5914 = !DILocation(line: 0, scope: !5907)
!5915 = !DILocation(line: 535, column: 11, scope: !5907)
!5916 = !DILocation(line: 576, column: 2, scope: !5907)
!5917 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5918 = !DILocation(line: 603, column: 2, scope: !5907)
!5919 = distinct !DISubprogram(name: "z_arm_fault", scope: !5920, file: !5920, line: 1036, type: !5921, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !5936)
!5920 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5921 = !DISubroutineType(types: !5922)
!5922 = !{null, !404, !404, !404, !5923}
!5923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5924, size: 32)
!5924 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !1852, line: 37, baseType: !5925)
!5925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1852, line: 25, size: 288, elements: !5926)
!5926 = !{!5927, !5928, !5929, !5930, !5931, !5932, !5933, !5934, !5935}
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5925, file: !1852, line: 26, baseType: !404, size: 32)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5925, file: !1852, line: 27, baseType: !404, size: 32, offset: 32)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5925, file: !1852, line: 28, baseType: !404, size: 32, offset: 64)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5925, file: !1852, line: 29, baseType: !404, size: 32, offset: 96)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5925, file: !1852, line: 30, baseType: !404, size: 32, offset: 128)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5925, file: !1852, line: 31, baseType: !404, size: 32, offset: 160)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5925, file: !1852, line: 32, baseType: !404, size: 32, offset: 192)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5925, file: !1852, line: 33, baseType: !404, size: 32, offset: 224)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5925, file: !1852, line: 34, baseType: !404, size: 32, offset: 256)
!5936 = !{!5937, !5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945, !5946}
!5937 = !DILocalVariable(name: "msp", arg: 1, scope: !5919, file: !5920, line: 1036, type: !404)
!5938 = !DILocalVariable(name: "psp", arg: 2, scope: !5919, file: !5920, line: 1036, type: !404)
!5939 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5919, file: !5920, line: 1036, type: !404)
!5940 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5919, file: !5920, line: 1037, type: !5923)
!5941 = !DILocalVariable(name: "reason", scope: !5919, file: !5920, line: 1039, type: !404)
!5942 = !DILocalVariable(name: "fault", scope: !5919, file: !5920, line: 1040, type: !103)
!5943 = !DILocalVariable(name: "recoverable", scope: !5919, file: !5920, line: 1041, type: !580)
!5944 = !DILocalVariable(name: "nested_exc", scope: !5919, file: !5920, line: 1041, type: !580)
!5945 = !DILocalVariable(name: "esf", scope: !5919, file: !5920, line: 1042, type: !2507)
!5946 = !DILocalVariable(name: "esf_copy", scope: !5919, file: !5920, line: 1047, type: !2508)
!5947 = !DILocation(line: 0, scope: !5919)
!5948 = !DILocation(line: 1040, column: 19, scope: !5919)
!5949 = !DILocation(line: 1040, column: 24, scope: !5919)
!5950 = !DILocation(line: 1041, column: 2, scope: !5919)
!5951 = !DILocation(line: 1047, column: 2, scope: !5919)
!5952 = !DILocation(line: 1047, column: 15, scope: !5919)
!5953 = !DILocalVariable(name: "key", arg: 1, scope: !5954, file: !5762, line: 84, type: !32)
!5954 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5762, file: !5762, line: 84, type: !5598, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !5955)
!5955 = !{!5953}
!5956 = !DILocation(line: 0, scope: !5954, inlinedAt: !5957)
!5957 = distinct !DILocation(line: 1050, column: 2, scope: !5919)
!5958 = !DILocation(line: 95, column: 2, scope: !5954, inlinedAt: !5957)
!5959 = !{i64 2873754}
!5960 = !DILocation(line: 1055, column: 9, scope: !5919)
!5961 = !DILocation(line: 1063, column: 11, scope: !5919)
!5962 = !DILocation(line: 1064, column: 6, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5919, file: !5920, line: 1064, column: 6)
!5964 = !{i8 0, i8 2}
!5965 = !DILocation(line: 1064, column: 6, scope: !5919)
!5966 = !DILocation(line: 1070, column: 20, scope: !5919)
!5967 = !DILocation(line: 1070, column: 2, scope: !5919)
!5968 = !DILocation(line: 1089, column: 6, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5919, file: !5920, line: 1089, column: 6)
!5970 = !DILocation(line: 0, scope: !5969)
!5971 = !DILocation(line: 1089, column: 6, scope: !5919)
!5972 = !DILocation(line: 1090, column: 28, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5974, file: !5920, line: 1090, column: 7)
!5974 = distinct !DILexicalBlock(scope: !5969, file: !5920, line: 1089, column: 18)
!5975 = !DILocation(line: 1090, column: 44, scope: !5973)
!5976 = !DILocation(line: 1090, column: 7, scope: !5974)
!5977 = !DILocation(line: 1091, column: 24, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5973, file: !5920, line: 1090, column: 50)
!5979 = !DILocation(line: 1092, column: 3, scope: !5978)
!5980 = !DILocation(line: 1094, column: 23, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5969, file: !5920, line: 1093, column: 9)
!5982 = !DILocation(line: 1097, column: 2, scope: !5919)
!5983 = !DILocation(line: 1098, column: 1, scope: !5919)
!5984 = distinct !DISubprogram(name: "get_esf", scope: !5920, file: !5920, line: 894, type: !5985, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !5988)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{!2507, !404, !404, !404, !5987}
!5987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 32)
!5988 = !{!5989, !5990, !5991, !5992, !5993, !5994}
!5989 = !DILocalVariable(name: "msp", arg: 1, scope: !5984, file: !5920, line: 894, type: !404)
!5990 = !DILocalVariable(name: "psp", arg: 2, scope: !5984, file: !5920, line: 894, type: !404)
!5991 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5984, file: !5920, line: 894, type: !404)
!5992 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5984, file: !5920, line: 895, type: !5987)
!5993 = !DILocalVariable(name: "alternative_state_exc", scope: !5984, file: !5920, line: 897, type: !580)
!5994 = !DILocalVariable(name: "ptr_esf", scope: !5984, file: !5920, line: 898, type: !2507)
!5995 = !DILocation(line: 0, scope: !5984)
!5996 = !DILocation(line: 900, column: 14, scope: !5984)
!5997 = !DILocation(line: 902, column: 49, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5984, file: !5920, line: 902, column: 6)
!5999 = !DILocation(line: 902, column: 6, scope: !5984)
!6000 = !DILocation(line: 983, column: 18, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5984, file: !5920, line: 983, column: 6)
!6002 = !DILocation(line: 991, column: 7, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !6004, file: !5920, line: 990, column: 30)
!6004 = distinct !DILexicalBlock(scope: !5984, file: !5920, line: 990, column: 6)
!6005 = !DILocation(line: 998, column: 16, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6007, file: !5920, line: 995, column: 10)
!6007 = distinct !DILexicalBlock(scope: !6003, file: !5920, line: 991, column: 7)
!6008 = !DILocation(line: 1002, column: 2, scope: !5984)
!6009 = !DILocation(line: 1003, column: 1, scope: !5984)
!6010 = distinct !DISubprogram(name: "fault_handle", scope: !5920, file: !5920, line: 786, type: !6011, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !6013)
!6011 = !DISubroutineType(types: !6012)
!6012 = !{!404, !2507, !103, !5987}
!6013 = !{!6014, !6015, !6016, !6017}
!6014 = !DILocalVariable(name: "esf", arg: 1, scope: !6010, file: !5920, line: 786, type: !2507)
!6015 = !DILocalVariable(name: "fault", arg: 2, scope: !6010, file: !5920, line: 786, type: !103)
!6016 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6010, file: !5920, line: 786, type: !5987)
!6017 = !DILocalVariable(name: "reason", scope: !6010, file: !5920, line: 788, type: !404)
!6018 = !DILocation(line: 0, scope: !6010)
!6019 = !DILocation(line: 790, column: 15, scope: !6010)
!6020 = !DILocation(line: 792, column: 2, scope: !6010)
!6021 = !DILocation(line: 794, column: 12, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6010, file: !5920, line: 792, column: 17)
!6023 = !DILocation(line: 795, column: 3, scope: !6022)
!6024 = !DILocation(line: 800, column: 12, scope: !6022)
!6025 = !DILocation(line: 801, column: 3, scope: !6022)
!6026 = !DILocation(line: 803, column: 12, scope: !6022)
!6027 = !DILocation(line: 804, column: 3, scope: !6022)
!6028 = !DILocation(line: 806, column: 12, scope: !6022)
!6029 = !DILocation(line: 807, column: 3, scope: !6022)
!6030 = !DILocation(line: 814, column: 3, scope: !6022)
!6031 = !DILocation(line: 815, column: 3, scope: !6022)
!6032 = !DILocation(line: 829, column: 2, scope: !6010)
!6033 = distinct !DISubprogram(name: "hard_fault", scope: !5920, file: !5920, line: 709, type: !6034, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !6036)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!404, !2507, !5987}
!6036 = !{!6037, !6038, !6039}
!6037 = !DILocalVariable(name: "esf", arg: 1, scope: !6033, file: !5920, line: 709, type: !2507)
!6038 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6033, file: !5920, line: 709, type: !5987)
!6039 = !DILocalVariable(name: "reason", scope: !6033, file: !5920, line: 711, type: !404)
!6040 = !DILocation(line: 0, scope: !6033)
!6041 = !DILocation(line: 732, column: 15, scope: !6033)
!6042 = !DILocation(line: 734, column: 12, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6033, file: !5920, line: 734, column: 6)
!6044 = !DILocation(line: 734, column: 17, scope: !6043)
!6045 = !DILocation(line: 734, column: 41, scope: !6043)
!6046 = !DILocation(line: 734, column: 6, scope: !6033)
!6047 = !DILocation(line: 736, column: 19, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6043, file: !5920, line: 736, column: 13)
!6049 = !DILocation(line: 736, column: 49, scope: !6048)
!6050 = !DILocation(line: 736, column: 13, scope: !6043)
!6051 = !DILocation(line: 738, column: 19, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6048, file: !5920, line: 738, column: 13)
!6053 = !DILocation(line: 738, column: 24, scope: !6052)
!6054 = !DILocation(line: 738, column: 47, scope: !6052)
!6055 = !DILocation(line: 738, column: 13, scope: !6048)
!6056 = !DILocation(line: 740, column: 7, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6058, file: !5920, line: 740, column: 7)
!6058 = distinct !DILexicalBlock(scope: !6052, file: !5920, line: 738, column: 53)
!6059 = !DILocation(line: 740, column: 7, scope: !6058)
!6060 = !DILocation(line: 742, column: 24, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6057, file: !5920, line: 740, column: 38)
!6062 = !DILocation(line: 743, column: 3, scope: !6061)
!6063 = !DILocation(line: 743, column: 20, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6057, file: !5920, line: 743, column: 14)
!6065 = !DILocation(line: 743, column: 25, scope: !6064)
!6066 = !DILocation(line: 743, column: 52, scope: !6064)
!6067 = !DILocation(line: 743, column: 14, scope: !6057)
!6068 = !DILocation(line: 744, column: 13, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6064, file: !5920, line: 743, column: 58)
!6070 = !DILocation(line: 745, column: 3, scope: !6069)
!6071 = !DILocation(line: 745, column: 20, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6064, file: !5920, line: 745, column: 14)
!6073 = !DILocation(line: 745, column: 25, scope: !6072)
!6074 = !DILocation(line: 745, column: 52, scope: !6072)
!6075 = !DILocation(line: 745, column: 14, scope: !6064)
!6076 = !DILocation(line: 746, column: 13, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6072, file: !5920, line: 745, column: 58)
!6078 = !DILocation(line: 747, column: 3, scope: !6077)
!6079 = !DILocation(line: 747, column: 20, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6072, file: !5920, line: 747, column: 14)
!6081 = !DILocation(line: 747, column: 52, scope: !6080)
!6082 = !DILocation(line: 747, column: 14, scope: !6072)
!6083 = !DILocation(line: 748, column: 13, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6080, file: !5920, line: 747, column: 58)
!6085 = !DILocation(line: 753, column: 3, scope: !6084)
!6086 = !DILocation(line: 766, column: 2, scope: !6033)
!6087 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5920, file: !5920, line: 229, type: !6011, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !6088)
!6088 = !{!6089, !6090, !6091, !6092, !6093, !6094}
!6089 = !DILocalVariable(name: "esf", arg: 1, scope: !6087, file: !5920, line: 229, type: !2507)
!6090 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6087, file: !5920, line: 229, type: !103)
!6091 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6087, file: !5920, line: 230, type: !5987)
!6092 = !DILocalVariable(name: "reason", scope: !6087, file: !5920, line: 232, type: !404)
!6093 = !DILocalVariable(name: "mmfar", scope: !6087, file: !5920, line: 233, type: !404)
!6094 = !DILocalVariable(name: "temp", scope: !6095, file: !5920, line: 254, type: !404)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !5920, line: 244, column: 48)
!6096 = distinct !DILexicalBlock(scope: !6087, file: !5920, line: 244, column: 6)
!6097 = !DILocation(line: 0, scope: !6087)
!6098 = !DILocation(line: 237, column: 12, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6087, file: !5920, line: 237, column: 6)
!6100 = !DILocation(line: 241, column: 12, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6087, file: !5920, line: 241, column: 6)
!6102 = !DILocation(line: 244, column: 12, scope: !6096)
!6103 = !DILocation(line: 244, column: 17, scope: !6096)
!6104 = !DILocation(line: 244, column: 42, scope: !6096)
!6105 = !DILocation(line: 244, column: 6, scope: !6087)
!6106 = !DILocation(line: 254, column: 24, scope: !6095)
!6107 = !DILocation(line: 0, scope: !6095)
!6108 = !DILocation(line: 256, column: 13, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6095, file: !5920, line: 256, column: 7)
!6110 = !DILocation(line: 256, column: 18, scope: !6109)
!6111 = !DILocation(line: 256, column: 44, scope: !6109)
!6112 = !DILocation(line: 256, column: 7, scope: !6095)
!6113 = !DILocation(line: 261, column: 15, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6115, file: !5920, line: 259, column: 30)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !5920, line: 259, column: 8)
!6116 = distinct !DILexicalBlock(scope: !6109, file: !5920, line: 256, column: 50)
!6117 = !DILocation(line: 262, column: 4, scope: !6114)
!6118 = !DILocation(line: 265, column: 12, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6087, file: !5920, line: 265, column: 6)
!6120 = !DILocation(line: 269, column: 12, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6087, file: !5920, line: 269, column: 6)
!6122 = !DILocation(line: 288, column: 12, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6087, file: !5920, line: 288, column: 6)
!6124 = !DILocation(line: 288, column: 17, scope: !6123)
!6125 = !DILocation(line: 288, column: 41, scope: !6123)
!6126 = !DILocation(line: 289, column: 9, scope: !6123)
!6127 = !DILocation(line: 288, column: 6, scope: !6087)
!6128 = !DILocation(line: 360, column: 12, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6087, file: !5920, line: 360, column: 6)
!6130 = !DILocation(line: 360, column: 17, scope: !6129)
!6131 = !DILocation(line: 360, column: 41, scope: !6129)
!6132 = !DILocation(line: 360, column: 6, scope: !6087)
!6133 = !DILocation(line: 361, column: 14, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6129, file: !5920, line: 360, column: 47)
!6135 = !DILocation(line: 362, column: 2, scope: !6134)
!6136 = !DILocation(line: 366, column: 12, scope: !6087)
!6137 = !DILocation(line: 369, column: 15, scope: !6087)
!6138 = !DILocation(line: 371, column: 2, scope: !6087)
!6139 = distinct !DISubprogram(name: "bus_fault", scope: !5920, file: !5920, line: 383, type: !6140, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !6142)
!6140 = !DISubroutineType(types: !6141)
!6141 = !{!103, !2507, !103, !5987}
!6142 = !{!6143, !6144, !6145, !6146, !6147}
!6143 = !DILocalVariable(name: "esf", arg: 1, scope: !6139, file: !5920, line: 383, type: !2507)
!6144 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6139, file: !5920, line: 383, type: !103)
!6145 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6139, file: !5920, line: 383, type: !5987)
!6146 = !DILocalVariable(name: "reason", scope: !6139, file: !5920, line: 385, type: !404)
!6147 = !DILocalVariable(name: "bfar", scope: !6148, file: !5920, line: 405, type: !404)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !5920, line: 395, column: 42)
!6149 = distinct !DILexicalBlock(scope: !6139, file: !5920, line: 395, column: 6)
!6150 = !DILocation(line: 0, scope: !6139)
!6151 = !DILocation(line: 389, column: 11, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6139, file: !5920, line: 389, column: 6)
!6153 = !DILocation(line: 392, column: 11, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6139, file: !5920, line: 392, column: 6)
!6155 = !DILocation(line: 395, column: 11, scope: !6149)
!6156 = !DILocation(line: 395, column: 16, scope: !6149)
!6157 = !DILocation(line: 395, column: 6, scope: !6139)
!6158 = !DILocation(line: 405, column: 3, scope: !6148)
!6159 = !DILocation(line: 0, scope: !6148)
!6160 = !DILocation(line: 407, column: 13, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6148, file: !5920, line: 407, column: 7)
!6162 = !DILocation(line: 407, column: 18, scope: !6161)
!6163 = !DILocation(line: 407, column: 44, scope: !6161)
!6164 = !DILocation(line: 407, column: 7, scope: !6148)
!6165 = !DILocation(line: 411, column: 15, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !5920, line: 409, column: 30)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !5920, line: 409, column: 8)
!6168 = distinct !DILexicalBlock(scope: !6161, file: !5920, line: 407, column: 50)
!6169 = !DILocation(line: 412, column: 4, scope: !6166)
!6170 = !DILocation(line: 415, column: 11, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6139, file: !5920, line: 415, column: 6)
!6172 = !DILocation(line: 418, column: 12, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6139, file: !5920, line: 418, column: 6)
!6174 = !DILocation(line: 418, column: 17, scope: !6173)
!6175 = !DILocation(line: 418, column: 41, scope: !6173)
!6176 = !DILocation(line: 418, column: 6, scope: !6139)
!6177 = !DILocation(line: 423, column: 18, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6173, file: !5920, line: 423, column: 13)
!6179 = !DILocation(line: 524, column: 12, scope: !6139)
!6180 = !DILocation(line: 526, column: 15, scope: !6139)
!6181 = !DILocation(line: 528, column: 2, scope: !6139)
!6182 = distinct !DISubprogram(name: "usage_fault", scope: !5920, file: !5920, line: 539, type: !6183, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !6187)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{!404, !6185}
!6185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6186, size: 32)
!6186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2508)
!6187 = !{!6188, !6189}
!6188 = !DILocalVariable(name: "esf", arg: 1, scope: !6182, file: !5920, line: 539, type: !6185)
!6189 = !DILocalVariable(name: "reason", scope: !6182, file: !5920, line: 541, type: !404)
!6190 = !DILocation(line: 0, scope: !6182)
!6191 = !DILocation(line: 546, column: 12, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6182, file: !5920, line: 546, column: 6)
!6193 = !DILocation(line: 549, column: 12, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6182, file: !5920, line: 549, column: 6)
!6195 = !DILocation(line: 567, column: 12, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6182, file: !5920, line: 567, column: 6)
!6197 = !DILocation(line: 570, column: 12, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6182, file: !5920, line: 570, column: 6)
!6199 = !DILocation(line: 573, column: 12, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6182, file: !5920, line: 573, column: 6)
!6201 = !DILocation(line: 576, column: 12, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6182, file: !5920, line: 576, column: 6)
!6203 = !DILocation(line: 581, column: 12, scope: !6182)
!6204 = !DILocation(line: 583, column: 2, scope: !6182)
!6205 = distinct !DISubprogram(name: "debug_monitor", scope: !5920, file: !5920, line: 632, type: !6206, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !6208)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{null, !2507, !5987}
!6208 = !{!6209, !6210}
!6209 = !DILocalVariable(name: "esf", arg: 1, scope: !6205, file: !5920, line: 632, type: !2507)
!6210 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6205, file: !5920, line: 632, type: !5987)
!6211 = !DILocation(line: 0, scope: !6205)
!6212 = !DILocation(line: 634, column: 15, scope: !6205)
!6213 = !DILocation(line: 652, column: 1, scope: !6205)
!6214 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5920, file: !5920, line: 658, type: !6215, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !6217)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{!580, !2507}
!6217 = !{!6218, !6219, !6220}
!6218 = !DILocalVariable(name: "esf", arg: 1, scope: !6214, file: !5920, line: 658, type: !2507)
!6219 = !DILocalVariable(name: "ret_addr", scope: !6214, file: !5920, line: 660, type: !2280)
!6220 = !DILocalVariable(name: "fault_insn", scope: !6214, file: !5920, line: 686, type: !521)
!6221 = !DILocation(line: 0, scope: !6214)
!6222 = !DILocation(line: 660, column: 46, scope: !6214)
!6223 = !DILocation(line: 660, column: 23, scope: !6214)
!6224 = !DILocation(line: 682, column: 11, scope: !6214)
!6225 = !DILocation(line: 271, column: 3, scope: !6226, inlinedAt: !6227)
!6226 = distinct !DISubprogram(name: "__DSB", scope: !5647, file: !5647, line: 269, type: !2944, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !675)
!6227 = distinct !DILocation(line: 683, column: 2, scope: !6214)
!6228 = !{i64 6961116}
!6229 = !DILocation(line: 260, column: 3, scope: !6230, inlinedAt: !6231)
!6230 = distinct !DISubprogram(name: "__ISB", scope: !5647, file: !5647, line: 258, type: !2944, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !675)
!6231 = distinct !DILocation(line: 684, column: 2, scope: !6214)
!6232 = !{i64 6960833}
!6233 = !DILocation(line: 686, column: 35, scope: !6214)
!6234 = !DILocation(line: 686, column: 24, scope: !6214)
!6235 = !DILocation(line: 688, column: 11, scope: !6214)
!6236 = !DILocation(line: 271, column: 3, scope: !6226, inlinedAt: !6237)
!6237 = distinct !DILocation(line: 689, column: 2, scope: !6214)
!6238 = !DILocation(line: 260, column: 3, scope: !6230, inlinedAt: !6239)
!6239 = distinct !DILocation(line: 690, column: 2, scope: !6214)
!6240 = !DILocation(line: 693, column: 45, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6214, file: !5920, line: 693, column: 6)
!6242 = !DILocation(line: 699, column: 1, scope: !6214)
!6243 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5920, file: !5920, line: 1107, type: !2944, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !675)
!6244 = !DILocation(line: 1111, column: 11, scope: !6243)
!6245 = !DILocation(line: 1136, column: 1, scope: !6243)
!6246 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6247, file: !6247, line: 26, type: !2944, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !6248)
!6247 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6248 = !{!6249}
!6249 = !DILocalVariable(name: "irq", scope: !6246, file: !6247, line: 28, type: !103)
!6250 = !DILocation(line: 0, scope: !6246)
!6251 = !DILocation(line: 30, column: 2, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6246, file: !6247, line: 30, column: 2)
!6253 = !DILocation(line: 31, column: 3, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6255, file: !6247, line: 30, column: 39)
!6255 = distinct !DILexicalBlock(scope: !6252, file: !6247, line: 30, column: 2)
!6256 = !DILocation(line: 30, column: 35, scope: !6255)
!6257 = !DILocation(line: 30, column: 13, scope: !6255)
!6258 = distinct !{!6258, !6251, !6259}
!6259 = !DILocation(line: 32, column: 2, scope: !6252)
!6260 = !DILocation(line: 33, column: 1, scope: !6246)
!6261 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1539, file: !1539, line: 1814, type: !5681, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !6262)
!6262 = !{!6263, !6264}
!6263 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6261, file: !1539, line: 1814, type: !2335)
!6264 = !DILocalVariable(name: "priority", arg: 2, scope: !6261, file: !1539, line: 1814, type: !404)
!6265 = !DILocation(line: 0, scope: !6261)
!6266 = !DILocation(line: 1816, column: 7, scope: !6261)
!6267 = !DILocation(line: 0, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6261, file: !1539, line: 1816, column: 7)
!6269 = !DILocation(line: 1824, column: 1, scope: !6261)
!6270 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6271, file: !6271, line: 27, type: !6272, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !6369)
!6271 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6272 = !DISubroutineType(types: !6273)
!6273 = !{null, !6274}
!6274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1787, line: 347, baseType: !6275)
!6275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6276, size: 32)
!6276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1787, line: 245, size: 896, elements: !6277)
!6277 = !{!6278, !6336, !6348, !6349, !6350, !6351, !6364}
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6276, file: !1787, line: 247, baseType: !6279, size: 384)
!6279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1787, line: 57, size: 384, elements: !6280)
!6280 = !{!6281, !6305, !6312, !6313, !6314, !6323, !6324, !6325}
!6281 = !DIDerivedType(tag: DW_TAG_member, scope: !6279, file: !1787, line: 60, baseType: !6282, size: 64)
!6282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6279, file: !1787, line: 60, size: 64, elements: !6283)
!6283 = !{!6284, !6299}
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6282, file: !1787, line: 61, baseType: !6285, size: 64)
!6285 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !683, line: 49, baseType: !6286)
!6286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !6287)
!6287 = !{!6288, !6294}
!6288 = !DIDerivedType(tag: DW_TAG_member, scope: !6286, file: !683, line: 38, baseType: !6289, size: 32)
!6289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6286, file: !683, line: 38, size: 32, elements: !6290)
!6290 = !{!6291, !6293}
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6289, file: !683, line: 39, baseType: !6292, size: 32)
!6292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6286, size: 32)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6289, file: !683, line: 40, baseType: !6292, size: 32)
!6294 = !DIDerivedType(tag: DW_TAG_member, scope: !6286, file: !683, line: 42, baseType: !6295, size: 32, offset: 32)
!6295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6286, file: !683, line: 42, size: 32, elements: !6296)
!6296 = !{!6297, !6298}
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6295, file: !683, line: 43, baseType: !6292, size: 32)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6295, file: !683, line: 44, baseType: !6292, size: 32)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6282, file: !1787, line: 62, baseType: !6300, size: 64)
!6300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1812, line: 49, size: 64, elements: !6301)
!6301 = !{!6302}
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6300, file: !1812, line: 50, baseType: !6303, size: 64)
!6303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6304, size: 64, elements: !721)
!6304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6300, size: 32)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6279, file: !1787, line: 68, baseType: !6306, size: 32, offset: 64)
!6306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6307, size: 32)
!6307 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !6308)
!6308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !6309)
!6309 = !{!6310}
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6308, file: !678, line: 232, baseType: !6311, size: 64)
!6311 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !6286)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6279, file: !1787, line: 71, baseType: !410, size: 8, offset: 96)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6279, file: !1787, line: 74, baseType: !410, size: 8, offset: 104)
!6314 = !DIDerivedType(tag: DW_TAG_member, scope: !6279, file: !1787, line: 90, baseType: !6315, size: 16, offset: 112)
!6315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6279, file: !1787, line: 90, size: 16, elements: !6316)
!6316 = !{!6317, !6322}
!6317 = !DIDerivedType(tag: DW_TAG_member, scope: !6315, file: !1787, line: 91, baseType: !6318, size: 16)
!6318 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6315, file: !1787, line: 91, size: 16, elements: !6319)
!6319 = !{!6320, !6321}
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6318, file: !1787, line: 96, baseType: !1833, size: 8)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6318, file: !1787, line: 97, baseType: !410, size: 8, offset: 8)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6315, file: !1787, line: 100, baseType: !521, size: 16)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6279, file: !1787, line: 107, baseType: !404, size: 32, offset: 128)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6279, file: !1787, line: 127, baseType: !102, size: 32, offset: 160)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6279, file: !1787, line: 131, baseType: !6326, size: 192, offset: 192)
!6326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !678, line: 244, size: 192, elements: !6327)
!6327 = !{!6328, !6329, !6335}
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6326, file: !678, line: 245, baseType: !6285, size: 64)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6326, file: !678, line: 246, baseType: !6330, size: 32, offset: 64)
!6330 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !678, line: 242, baseType: !6331)
!6331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6332, size: 32)
!6332 = !DISubroutineType(types: !6333)
!6333 = !{null, !6334}
!6334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 32)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6326, file: !678, line: 249, baseType: !550, size: 64, offset: 128)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6276, file: !1787, line: 250, baseType: !6337, size: 288, offset: 384)
!6337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1852, line: 25, size: 288, elements: !6338)
!6338 = !{!6339, !6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347}
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6337, file: !1852, line: 26, baseType: !404, size: 32)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6337, file: !1852, line: 27, baseType: !404, size: 32, offset: 32)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6337, file: !1852, line: 28, baseType: !404, size: 32, offset: 64)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6337, file: !1852, line: 29, baseType: !404, size: 32, offset: 96)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6337, file: !1852, line: 30, baseType: !404, size: 32, offset: 128)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6337, file: !1852, line: 31, baseType: !404, size: 32, offset: 160)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6337, file: !1852, line: 32, baseType: !404, size: 32, offset: 192)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6337, file: !1852, line: 33, baseType: !404, size: 32, offset: 224)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6337, file: !1852, line: 34, baseType: !404, size: 32, offset: 256)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6276, file: !1787, line: 253, baseType: !102, size: 32, offset: 672)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6276, file: !1787, line: 256, baseType: !6307, size: 64, offset: 704)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6276, file: !1787, line: 294, baseType: !103, size: 32, offset: 768)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6276, file: !1787, line: 325, baseType: !6352, size: 32, offset: 800)
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 32)
!6353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !654, line: 5073, size: 160, elements: !6354)
!6354 = !{!6355, !6361, !6362}
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6353, file: !654, line: 5074, baseType: !6356, size: 96)
!6356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !6357)
!6357 = !{!6358, !6359, !6360}
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6356, file: !1872, line: 57, baseType: !1875, size: 32)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6356, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6356, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6353, file: !654, line: 5075, baseType: !6307, size: 64, offset: 96)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6353, file: !654, line: 5076, baseType: !6363, offset: 160)
!6363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6276, file: !1787, line: 343, baseType: !6365, size: 64, offset: 832)
!6365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1852, line: 60, size: 64, elements: !6366)
!6366 = !{!6367, !6368}
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6365, file: !1852, line: 63, baseType: !404, size: 32)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6365, file: !1852, line: 66, baseType: !404, size: 32, offset: 32)
!6369 = !{!6370}
!6370 = !DILocalVariable(name: "thread", arg: 1, scope: !6270, file: !6271, line: 27, type: !6274)
!6371 = !DILocation(line: 0, scope: !6270)
!6372 = !DILocation(line: 29, column: 6, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6270, file: !6271, line: 29, column: 6)
!6374 = !DILocation(line: 29, column: 15, scope: !6373)
!6375 = !DILocation(line: 29, column: 6, scope: !6270)
!6376 = !DILocation(line: 1031, column: 3, scope: !6377, inlinedAt: !6380)
!6377 = distinct !DISubprogram(name: "__get_IPSR", scope: !5647, file: !5647, line: 1027, type: !5728, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !6378)
!6378 = !{!6379}
!6379 = !DILocalVariable(name: "result", scope: !6377, file: !5647, line: 1029, type: !404)
!6380 = distinct !DILocation(line: 48, column: 10, scope: !6381, inlinedAt: !6385)
!6381 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6382, file: !6382, line: 46, type: !6383, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !675)
!6382 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6383 = !DISubroutineType(types: !6384)
!6384 = !{!580}
!6385 = distinct !DILocation(line: 30, column: 7, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !6271, line: 30, column: 7)
!6387 = distinct !DILexicalBlock(scope: !6373, file: !6271, line: 29, column: 26)
!6388 = !{i64 6962340}
!6389 = !DILocation(line: 0, scope: !6377, inlinedAt: !6380)
!6390 = !DILocation(line: 48, column: 9, scope: !6381, inlinedAt: !6385)
!6391 = !DILocation(line: 30, column: 7, scope: !6387)
!6392 = !DILocation(line: 42, column: 14, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6386, file: !6271, line: 30, column: 25)
!6394 = !DILocation(line: 48, column: 15, scope: !6393)
!6395 = !DILocation(line: 49, column: 3, scope: !6393)
!6396 = !DILocation(line: 52, column: 2, scope: !6270)
!6397 = !DILocation(line: 53, column: 1, scope: !6270)
!6398 = distinct !DISubprogram(name: "strcpy", scope: !6399, file: !6399, line: 20, type: !6400, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6404)
!6399 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6400 = !DISubroutineType(types: !6401)
!6401 = !{!702, !6402, !6403}
!6402 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !702)
!6403 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!6404 = !{!6405, !6406, !6407}
!6405 = !DILocalVariable(name: "d", arg: 1, scope: !6398, file: !6399, line: 20, type: !6402)
!6406 = !DILocalVariable(name: "s", arg: 2, scope: !6398, file: !6399, line: 20, type: !6403)
!6407 = !DILocalVariable(name: "dest", scope: !6398, file: !6399, line: 22, type: !702)
!6408 = !DILocation(line: 0, scope: !6398)
!6409 = !DILocation(line: 24, column: 9, scope: !6398)
!6410 = !DILocation(line: 24, column: 12, scope: !6398)
!6411 = !DILocation(line: 24, column: 2, scope: !6398)
!6412 = !DILocation(line: 25, column: 6, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6398, file: !6399, line: 24, column: 21)
!6414 = !DILocation(line: 26, column: 4, scope: !6413)
!6415 = !DILocation(line: 27, column: 4, scope: !6413)
!6416 = distinct !{!6416, !6411, !6417}
!6417 = !DILocation(line: 28, column: 2, scope: !6398)
!6418 = !DILocation(line: 30, column: 5, scope: !6398)
!6419 = !DILocation(line: 32, column: 2, scope: !6398)
!6420 = distinct !DISubprogram(name: "strncpy", scope: !6399, file: !6399, line: 42, type: !6421, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6423)
!6421 = !DISubroutineType(types: !6422)
!6422 = !{!702, !6402, !6403, !552}
!6423 = !{!6424, !6425, !6426, !6427}
!6424 = !DILocalVariable(name: "d", arg: 1, scope: !6420, file: !6399, line: 42, type: !6402)
!6425 = !DILocalVariable(name: "s", arg: 2, scope: !6420, file: !6399, line: 42, type: !6403)
!6426 = !DILocalVariable(name: "n", arg: 3, scope: !6420, file: !6399, line: 42, type: !552)
!6427 = !DILocalVariable(name: "dest", scope: !6420, file: !6399, line: 44, type: !702)
!6428 = !DILocation(line: 0, scope: !6420)
!6429 = !DILocation(line: 46, column: 12, scope: !6420)
!6430 = !DILocation(line: 46, column: 17, scope: !6420)
!6431 = !DILocation(line: 46, column: 20, scope: !6420)
!6432 = !DILocation(line: 46, column: 23, scope: !6420)
!6433 = !DILocation(line: 46, column: 2, scope: !6420)
!6434 = !DILocation(line: 47, column: 6, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6420, file: !6399, line: 46, column: 32)
!6436 = !DILocation(line: 48, column: 4, scope: !6435)
!6437 = !DILocation(line: 49, column: 4, scope: !6435)
!6438 = !DILocation(line: 50, column: 4, scope: !6435)
!6439 = distinct !{!6439, !6433, !6440}
!6440 = !DILocation(line: 51, column: 2, scope: !6420)
!6441 = !DILocation(line: 54, column: 6, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6420, file: !6399, line: 53, column: 16)
!6443 = !DILocation(line: 55, column: 4, scope: !6442)
!6444 = !DILocation(line: 56, column: 4, scope: !6442)
!6445 = !DILocation(line: 53, column: 11, scope: !6420)
!6446 = !DILocation(line: 53, column: 2, scope: !6420)
!6447 = distinct !{!6447, !6446, !6448}
!6448 = !DILocation(line: 57, column: 2, scope: !6420)
!6449 = !DILocation(line: 59, column: 2, scope: !6420)
!6450 = distinct !DISubprogram(name: "strchr", scope: !6399, file: !6399, line: 69, type: !6451, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6453)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!702, !569, !103}
!6453 = !{!6454, !6455, !6456}
!6454 = !DILocalVariable(name: "s", arg: 1, scope: !6450, file: !6399, line: 69, type: !569)
!6455 = !DILocalVariable(name: "c", arg: 2, scope: !6450, file: !6399, line: 69, type: !103)
!6456 = !DILocalVariable(name: "tmp", scope: !6450, file: !6399, line: 71, type: !571)
!6457 = !DILocation(line: 0, scope: !6450)
!6458 = !DILocation(line: 73, column: 2, scope: !6450)
!6459 = !DILocation(line: 73, column: 10, scope: !6450)
!6460 = !DILocation(line: 73, column: 13, scope: !6450)
!6461 = !DILocation(line: 73, column: 21, scope: !6450)
!6462 = !DILocation(line: 74, column: 4, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6450, file: !6399, line: 73, column: 38)
!6464 = distinct !{!6464, !6458, !6465}
!6465 = !DILocation(line: 75, column: 2, scope: !6450)
!6466 = !DILocation(line: 77, column: 9, scope: !6450)
!6467 = !DILocation(line: 77, column: 2, scope: !6450)
!6468 = distinct !DISubprogram(name: "strrchr", scope: !6399, file: !6399, line: 87, type: !6451, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6469)
!6469 = !{!6470, !6471, !6472}
!6470 = !DILocalVariable(name: "s", arg: 1, scope: !6468, file: !6399, line: 87, type: !569)
!6471 = !DILocalVariable(name: "c", arg: 2, scope: !6468, file: !6399, line: 87, type: !103)
!6472 = !DILocalVariable(name: "match", scope: !6468, file: !6399, line: 89, type: !702)
!6473 = !DILocation(line: 0, scope: !6468)
!6474 = !DILocation(line: 91, column: 2, scope: !6468)
!6475 = !DILocation(line: 92, column: 7, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6477, file: !6399, line: 92, column: 7)
!6477 = distinct !DILexicalBlock(scope: !6468, file: !6399, line: 91, column: 5)
!6478 = !DILocation(line: 92, column: 10, scope: !6476)
!6479 = !DILocation(line: 92, column: 7, scope: !6477)
!6480 = !DILocation(line: 95, column: 13, scope: !6468)
!6481 = !DILocation(line: 95, column: 2, scope: !6477)
!6482 = distinct !{!6482, !6474, !6483}
!6483 = !DILocation(line: 95, column: 15, scope: !6468)
!6484 = !DILocation(line: 97, column: 2, scope: !6468)
!6485 = distinct !DISubprogram(name: "strlen", scope: !6399, file: !6399, line: 107, type: !6486, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6488)
!6486 = !DISubroutineType(types: !6487)
!6487 = !{!552, !569}
!6488 = !{!6489, !6490}
!6489 = !DILocalVariable(name: "s", arg: 1, scope: !6485, file: !6399, line: 107, type: !569)
!6490 = !DILocalVariable(name: "n", scope: !6485, file: !6399, line: 109, type: !552)
!6491 = !DILocation(line: 0, scope: !6485)
!6492 = !DILocation(line: 111, column: 9, scope: !6485)
!6493 = !DILocation(line: 111, column: 12, scope: !6485)
!6494 = !DILocation(line: 111, column: 2, scope: !6485)
!6495 = !DILocation(line: 112, column: 4, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6485, file: !6399, line: 111, column: 21)
!6497 = !DILocation(line: 113, column: 4, scope: !6496)
!6498 = distinct !{!6498, !6494, !6499}
!6499 = !DILocation(line: 114, column: 2, scope: !6485)
!6500 = !DILocation(line: 116, column: 2, scope: !6485)
!6501 = distinct !DISubprogram(name: "strnlen", scope: !6399, file: !6399, line: 126, type: !6502, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6504)
!6502 = !DISubroutineType(types: !6503)
!6503 = !{!552, !569, !552}
!6504 = !{!6505, !6506, !6507}
!6505 = !DILocalVariable(name: "s", arg: 1, scope: !6501, file: !6399, line: 126, type: !569)
!6506 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6501, file: !6399, line: 126, type: !552)
!6507 = !DILocalVariable(name: "n", scope: !6501, file: !6399, line: 128, type: !552)
!6508 = !DILocation(line: 0, scope: !6501)
!6509 = !DILocation(line: 130, column: 9, scope: !6501)
!6510 = !DILocation(line: 130, column: 12, scope: !6501)
!6511 = !DILocation(line: 130, column: 20, scope: !6501)
!6512 = !DILocation(line: 130, column: 2, scope: !6501)
!6513 = !DILocation(line: 131, column: 4, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6501, file: !6399, line: 130, column: 35)
!6515 = !DILocation(line: 132, column: 4, scope: !6514)
!6516 = distinct !{!6516, !6512, !6517}
!6517 = !DILocation(line: 133, column: 2, scope: !6501)
!6518 = !DILocation(line: 135, column: 2, scope: !6501)
!6519 = distinct !DISubprogram(name: "strcmp", scope: !6399, file: !6399, line: 145, type: !6520, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6522)
!6520 = !DISubroutineType(types: !6521)
!6521 = !{!103, !569, !569}
!6522 = !{!6523, !6524}
!6523 = !DILocalVariable(name: "s1", arg: 1, scope: !6519, file: !6399, line: 145, type: !569)
!6524 = !DILocalVariable(name: "s2", arg: 2, scope: !6519, file: !6399, line: 145, type: !569)
!6525 = !DILocation(line: 0, scope: !6519)
!6526 = !DILocation(line: 147, column: 10, scope: !6519)
!6527 = !DILocation(line: 147, column: 17, scope: !6519)
!6528 = !DILocation(line: 147, column: 14, scope: !6519)
!6529 = !DILocation(line: 147, column: 22, scope: !6519)
!6530 = !DILocation(line: 148, column: 5, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6519, file: !6399, line: 147, column: 40)
!6532 = !DILocation(line: 149, column: 5, scope: !6531)
!6533 = distinct !{!6533, !6534, !6535}
!6534 = !DILocation(line: 147, column: 2, scope: !6519)
!6535 = !DILocation(line: 150, column: 2, scope: !6519)
!6536 = !DILocation(line: 152, column: 9, scope: !6519)
!6537 = !DILocation(line: 152, column: 15, scope: !6519)
!6538 = !DILocation(line: 152, column: 13, scope: !6519)
!6539 = !DILocation(line: 152, column: 2, scope: !6519)
!6540 = distinct !DISubprogram(name: "strncmp", scope: !6399, file: !6399, line: 162, type: !6541, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6543)
!6541 = !DISubroutineType(types: !6542)
!6542 = !{!103, !569, !569, !552}
!6543 = !{!6544, !6545, !6546}
!6544 = !DILocalVariable(name: "s1", arg: 1, scope: !6540, file: !6399, line: 162, type: !569)
!6545 = !DILocalVariable(name: "s2", arg: 2, scope: !6540, file: !6399, line: 162, type: !569)
!6546 = !DILocalVariable(name: "n", arg: 3, scope: !6540, file: !6399, line: 162, type: !552)
!6547 = !DILocation(line: 0, scope: !6540)
!6548 = !DILocation(line: 164, column: 17, scope: !6540)
!6549 = !DILocation(line: 164, column: 21, scope: !6540)
!6550 = !DILocation(line: 164, column: 28, scope: !6540)
!6551 = !DILocation(line: 164, column: 25, scope: !6540)
!6552 = !DILocation(line: 164, column: 33, scope: !6540)
!6553 = !DILocation(line: 165, column: 5, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6540, file: !6399, line: 164, column: 51)
!6555 = !DILocation(line: 166, column: 5, scope: !6554)
!6556 = !DILocation(line: 167, column: 4, scope: !6554)
!6557 = distinct !{!6557, !6558, !6559}
!6558 = !DILocation(line: 164, column: 2, scope: !6540)
!6559 = !DILocation(line: 168, column: 2, scope: !6540)
!6560 = !DILocation(line: 170, column: 25, scope: !6540)
!6561 = !DILocation(line: 170, column: 31, scope: !6540)
!6562 = !DILocation(line: 170, column: 29, scope: !6540)
!6563 = !DILocation(line: 170, column: 9, scope: !6540)
!6564 = !DILocation(line: 170, column: 2, scope: !6540)
!6565 = distinct !DISubprogram(name: "strtok_r", scope: !6399, file: !6399, line: 180, type: !6566, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6569)
!6566 = !DISubroutineType(types: !6567)
!6567 = !{!702, !702, !569, !6568}
!6568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!6569 = !{!6570, !6571, !6572, !6573, !6574}
!6570 = !DILocalVariable(name: "str", arg: 1, scope: !6565, file: !6399, line: 180, type: !702)
!6571 = !DILocalVariable(name: "sep", arg: 2, scope: !6565, file: !6399, line: 180, type: !569)
!6572 = !DILocalVariable(name: "state", arg: 3, scope: !6565, file: !6399, line: 180, type: !6568)
!6573 = !DILocalVariable(name: "start", scope: !6565, file: !6399, line: 182, type: !702)
!6574 = !DILocalVariable(name: "end", scope: !6565, file: !6399, line: 182, type: !702)
!6575 = !DILocation(line: 0, scope: !6565)
!6576 = !DILocation(line: 184, column: 10, scope: !6565)
!6577 = !DILocation(line: 184, column: 22, scope: !6565)
!6578 = !DILocation(line: 187, column: 9, scope: !6565)
!6579 = !DILocation(line: 187, column: 16, scope: !6565)
!6580 = !DILocation(line: 187, column: 19, scope: !6565)
!6581 = !DILocation(line: 187, column: 2, scope: !6565)
!6582 = !DILocation(line: 188, column: 8, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6565, file: !6399, line: 187, column: 40)
!6584 = distinct !{!6584, !6581, !6585}
!6585 = !DILocation(line: 189, column: 2, scope: !6565)
!6586 = !DILocation(line: 198, column: 9, scope: !6565)
!6587 = !DILocation(line: 198, column: 18, scope: !6565)
!6588 = !DILocation(line: 198, column: 17, scope: !6565)
!6589 = !DILocation(line: 198, column: 2, scope: !6565)
!6590 = !DILocation(line: 199, column: 6, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6565, file: !6399, line: 198, column: 37)
!6592 = !DILocation(line: 198, column: 14, scope: !6565)
!6593 = distinct !{!6593, !6589, !6594}
!6594 = !DILocation(line: 200, column: 2, scope: !6565)
!6595 = !DILocation(line: 203, column: 8, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6597, file: !6399, line: 202, column: 20)
!6597 = distinct !DILexicalBlock(scope: !6565, file: !6399, line: 202, column: 6)
!6598 = !DILocation(line: 204, column: 16, scope: !6596)
!6599 = !DILocation(line: 205, column: 2, scope: !6596)
!6600 = !DILocation(line: 210, column: 1, scope: !6565)
!6601 = distinct !DISubprogram(name: "strcat", scope: !6399, file: !6399, line: 212, type: !6400, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6602)
!6602 = !{!6603, !6604}
!6603 = !DILocalVariable(name: "dest", arg: 1, scope: !6601, file: !6399, line: 212, type: !6402)
!6604 = !DILocalVariable(name: "src", arg: 2, scope: !6601, file: !6399, line: 212, type: !6403)
!6605 = !DILocation(line: 0, scope: !6601)
!6606 = !DILocation(line: 214, column: 16, scope: !6601)
!6607 = !DILocation(line: 214, column: 14, scope: !6601)
!6608 = !DILocation(line: 214, column: 2, scope: !6601)
!6609 = !DILocation(line: 215, column: 2, scope: !6601)
!6610 = distinct !DISubprogram(name: "strncat", scope: !6399, file: !6399, line: 218, type: !6421, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6611)
!6611 = !{!6612, !6613, !6614, !6615, !6616}
!6612 = !DILocalVariable(name: "dest", arg: 1, scope: !6610, file: !6399, line: 218, type: !6402)
!6613 = !DILocalVariable(name: "src", arg: 2, scope: !6610, file: !6399, line: 218, type: !6403)
!6614 = !DILocalVariable(name: "n", arg: 3, scope: !6610, file: !6399, line: 219, type: !552)
!6615 = !DILocalVariable(name: "orig_dest", scope: !6610, file: !6399, line: 221, type: !702)
!6616 = !DILocalVariable(name: "len", scope: !6610, file: !6399, line: 222, type: !552)
!6617 = !DILocation(line: 0, scope: !6610)
!6618 = !DILocation(line: 222, column: 15, scope: !6610)
!6619 = !DILocation(line: 224, column: 7, scope: !6610)
!6620 = !DILocation(line: 225, column: 14, scope: !6610)
!6621 = !DILocation(line: 225, column: 19, scope: !6610)
!6622 = !DILocation(line: 225, column: 11, scope: !6610)
!6623 = !DILocation(line: 225, column: 23, scope: !6610)
!6624 = !DILocation(line: 225, column: 28, scope: !6610)
!6625 = !DILocation(line: 225, column: 2, scope: !6610)
!6626 = !DILocation(line: 226, column: 17, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6610, file: !6399, line: 225, column: 38)
!6628 = !DILocation(line: 226, column: 8, scope: !6627)
!6629 = !DILocation(line: 226, column: 11, scope: !6627)
!6630 = distinct !{!6630, !6625, !6631}
!6631 = !DILocation(line: 227, column: 2, scope: !6610)
!6632 = !DILocation(line: 228, column: 8, scope: !6610)
!6633 = !DILocation(line: 230, column: 2, scope: !6610)
!6634 = distinct !DISubprogram(name: "memcmp", scope: !6399, file: !6399, line: 239, type: !6635, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6637)
!6635 = !DISubroutineType(types: !6636)
!6636 = !{!103, !13, !13, !552}
!6637 = !{!6638, !6639, !6640, !6641, !6642}
!6638 = !DILocalVariable(name: "m1", arg: 1, scope: !6634, file: !6399, line: 239, type: !13)
!6639 = !DILocalVariable(name: "m2", arg: 2, scope: !6634, file: !6399, line: 239, type: !13)
!6640 = !DILocalVariable(name: "n", arg: 3, scope: !6634, file: !6399, line: 239, type: !552)
!6641 = !DILocalVariable(name: "c1", scope: !6634, file: !6399, line: 241, type: !569)
!6642 = !DILocalVariable(name: "c2", scope: !6634, file: !6399, line: 242, type: !569)
!6643 = !DILocation(line: 0, scope: !6634)
!6644 = !DILocation(line: 244, column: 7, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6634, file: !6399, line: 244, column: 6)
!6646 = !DILocation(line: 244, column: 6, scope: !6634)
!6647 = !DILocation(line: 248, column: 10, scope: !6634)
!6648 = !DILocation(line: 248, column: 14, scope: !6634)
!6649 = !DILocation(line: 248, column: 19, scope: !6634)
!6650 = !DILocation(line: 248, column: 2, scope: !6634)
!6651 = !DILocation(line: 248, column: 23, scope: !6634)
!6652 = !DILocation(line: 248, column: 30, scope: !6634)
!6653 = !DILocation(line: 248, column: 27, scope: !6634)
!6654 = !DILocation(line: 249, column: 5, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6634, file: !6399, line: 248, column: 36)
!6656 = !DILocation(line: 250, column: 5, scope: !6655)
!6657 = distinct !{!6657, !6650, !6658}
!6658 = !DILocation(line: 251, column: 2, scope: !6634)
!6659 = !DILocation(line: 253, column: 9, scope: !6634)
!6660 = !DILocation(line: 253, column: 15, scope: !6634)
!6661 = !DILocation(line: 253, column: 13, scope: !6634)
!6662 = !DILocation(line: 253, column: 2, scope: !6634)
!6663 = !DILocation(line: 254, column: 1, scope: !6634)
!6664 = distinct !DISubprogram(name: "memmove", scope: !6399, file: !6399, line: 263, type: !6665, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6667)
!6665 = !DISubroutineType(types: !6666)
!6666 = !{!102, !102, !13, !552}
!6667 = !{!6668, !6669, !6670, !6671, !6672}
!6668 = !DILocalVariable(name: "d", arg: 1, scope: !6664, file: !6399, line: 263, type: !102)
!6669 = !DILocalVariable(name: "s", arg: 2, scope: !6664, file: !6399, line: 263, type: !13)
!6670 = !DILocalVariable(name: "n", arg: 3, scope: !6664, file: !6399, line: 263, type: !552)
!6671 = !DILocalVariable(name: "dest", scope: !6664, file: !6399, line: 265, type: !702)
!6672 = !DILocalVariable(name: "src", scope: !6664, file: !6399, line: 266, type: !569)
!6673 = !DILocation(line: 0, scope: !6664)
!6674 = !DILocation(line: 268, column: 21, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6664, file: !6399, line: 268, column: 6)
!6676 = !DILocation(line: 268, column: 28, scope: !6675)
!6677 = !DILocation(line: 268, column: 6, scope: !6664)
!6678 = !DILocation(line: 280, column: 12, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6675, file: !6399, line: 278, column: 9)
!6680 = !DILocation(line: 280, column: 3, scope: !6679)
!6681 = !DILocation(line: 275, column: 5, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6683, file: !6399, line: 274, column: 17)
!6683 = distinct !DILexicalBlock(scope: !6675, file: !6399, line: 268, column: 33)
!6684 = !DILocation(line: 276, column: 14, scope: !6682)
!6685 = !DILocation(line: 276, column: 4, scope: !6682)
!6686 = !DILocation(line: 276, column: 12, scope: !6682)
!6687 = !DILocation(line: 274, column: 12, scope: !6683)
!6688 = !DILocation(line: 274, column: 3, scope: !6683)
!6689 = distinct !{!6689, !6688, !6690}
!6690 = !DILocation(line: 277, column: 3, scope: !6683)
!6691 = !DILocation(line: 281, column: 12, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6679, file: !6399, line: 280, column: 17)
!6693 = !DILocation(line: 281, column: 10, scope: !6692)
!6694 = !DILocation(line: 282, column: 8, scope: !6692)
!6695 = !DILocation(line: 283, column: 7, scope: !6692)
!6696 = !DILocation(line: 284, column: 5, scope: !6692)
!6697 = distinct !{!6697, !6680, !6698}
!6698 = !DILocation(line: 285, column: 3, scope: !6679)
!6699 = !DILocation(line: 288, column: 2, scope: !6664)
!6700 = distinct !DISubprogram(name: "memcpy", scope: !6399, file: !6399, line: 298, type: !6701, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6705)
!6701 = !DISubroutineType(types: !6702)
!6702 = !{!102, !6703, !6704, !552}
!6703 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6704 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6705 = !{!6706, !6707, !6708, !6709, !6710}
!6706 = !DILocalVariable(name: "d", arg: 1, scope: !6700, file: !6399, line: 298, type: !6703)
!6707 = !DILocalVariable(name: "s", arg: 2, scope: !6700, file: !6399, line: 298, type: !6704)
!6708 = !DILocalVariable(name: "n", arg: 3, scope: !6700, file: !6399, line: 298, type: !552)
!6709 = !DILocalVariable(name: "d_byte", scope: !6700, file: !6399, line: 302, type: !588)
!6710 = !DILocalVariable(name: "s_byte", scope: !6700, file: !6399, line: 303, type: !2626)
!6711 = !DILocation(line: 0, scope: !6700)
!6712 = !DILocation(line: 337, column: 11, scope: !6700)
!6713 = !DILocation(line: 337, column: 2, scope: !6700)
!6714 = !DILocation(line: 338, column: 25, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6700, file: !6399, line: 337, column: 16)
!6716 = !DILocation(line: 338, column: 17, scope: !6715)
!6717 = !DILocation(line: 338, column: 11, scope: !6715)
!6718 = !DILocation(line: 338, column: 15, scope: !6715)
!6719 = !DILocation(line: 339, column: 4, scope: !6715)
!6720 = distinct !{!6720, !6713, !6721}
!6721 = !DILocation(line: 340, column: 2, scope: !6700)
!6722 = !DILocation(line: 342, column: 2, scope: !6700)
!6723 = distinct !DISubprogram(name: "memset", scope: !6399, file: !6399, line: 352, type: !6724, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6726)
!6724 = !DISubroutineType(types: !6725)
!6725 = !{!102, !102, !103, !552}
!6726 = !{!6727, !6728, !6729, !6730, !6731}
!6727 = !DILocalVariable(name: "buf", arg: 1, scope: !6723, file: !6399, line: 352, type: !102)
!6728 = !DILocalVariable(name: "c", arg: 2, scope: !6723, file: !6399, line: 352, type: !103)
!6729 = !DILocalVariable(name: "n", arg: 3, scope: !6723, file: !6399, line: 352, type: !552)
!6730 = !DILocalVariable(name: "d_byte", scope: !6723, file: !6399, line: 356, type: !588)
!6731 = !DILocalVariable(name: "c_byte", scope: !6723, file: !6399, line: 357, type: !411)
!6732 = !DILocation(line: 0, scope: !6723)
!6733 = !DILocation(line: 357, column: 25, scope: !6723)
!6734 = !DILocation(line: 389, column: 11, scope: !6723)
!6735 = !DILocation(line: 389, column: 2, scope: !6723)
!6736 = !DILocation(line: 390, column: 11, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6723, file: !6399, line: 389, column: 16)
!6738 = !DILocation(line: 390, column: 15, scope: !6737)
!6739 = !DILocation(line: 391, column: 4, scope: !6737)
!6740 = distinct !{!6740, !6735, !6741}
!6741 = !DILocation(line: 392, column: 2, scope: !6723)
!6742 = !DILocation(line: 394, column: 2, scope: !6723)
!6743 = distinct !DISubprogram(name: "memchr", scope: !6399, file: !6399, line: 404, type: !6744, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6746)
!6744 = !DISubroutineType(types: !6745)
!6745 = !{!102, !13, !103, !552}
!6746 = !{!6747, !6748, !6749, !6750}
!6747 = !DILocalVariable(name: "s", arg: 1, scope: !6743, file: !6399, line: 404, type: !13)
!6748 = !DILocalVariable(name: "c", arg: 2, scope: !6743, file: !6399, line: 404, type: !103)
!6749 = !DILocalVariable(name: "n", arg: 3, scope: !6743, file: !6399, line: 404, type: !552)
!6750 = !DILocalVariable(name: "p", scope: !6751, file: !6399, line: 407, type: !2626)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !6399, line: 406, column: 14)
!6752 = distinct !DILexicalBlock(scope: !6743, file: !6399, line: 406, column: 6)
!6753 = !DILocation(line: 0, scope: !6743)
!6754 = !DILocation(line: 406, column: 8, scope: !6752)
!6755 = !DILocation(line: 406, column: 6, scope: !6743)
!6756 = !DILocation(line: 409, column: 3, scope: !6751)
!6757 = !DILocation(line: 0, scope: !6751)
!6758 = !DILocation(line: 410, column: 8, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !6399, line: 410, column: 8)
!6760 = distinct !DILexicalBlock(scope: !6751, file: !6399, line: 409, column: 6)
!6761 = !DILocation(line: 410, column: 13, scope: !6759)
!6762 = !DILocation(line: 410, column: 8, scope: !6760)
!6763 = distinct !{!6763, !6756, !6764}
!6764 = !DILocation(line: 414, column: 20, scope: !6751)
!6765 = !DILocation(line: 417, column: 2, scope: !6743)
!6766 = !DILocation(line: 418, column: 1, scope: !6743)
!6767 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !732, file: !732, line: 23, type: !3068, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !725, retainedNodes: !6768)
!6768 = !{!6769}
!6769 = !DILocalVariable(name: "hook", arg: 1, scope: !6767, file: !732, line: 23, type: !106)
!6770 = !DILocation(line: 0, scope: !6767)
!6771 = !DILocation(line: 25, column: 15, scope: !6767)
!6772 = !DILocation(line: 26, column: 1, scope: !6767)
!6773 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !732, file: !732, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !725, retainedNodes: !6774)
!6774 = !{!6775}
!6775 = !DILocalVariable(name: "c", arg: 1, scope: !6773, file: !732, line: 14, type: !103)
!6776 = !DILocation(line: 0, scope: !6773)
!6777 = !DILocation(line: 18, column: 2, scope: !6773)
!6778 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !732, file: !732, line: 28, type: !6779, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !725, retainedNodes: !6781)
!6779 = !DISubroutineType(types: !6780)
!6780 = !{!103, !103, !728}
!6781 = !{!6782, !6783}
!6782 = !DILocalVariable(name: "c", arg: 1, scope: !6778, file: !732, line: 28, type: !103)
!6783 = !DILocalVariable(name: "stream", arg: 2, scope: !6778, file: !732, line: 28, type: !728)
!6784 = !DILocation(line: 0, scope: !6778)
!6785 = !DILocation(line: 30, column: 27, scope: !6778)
!6786 = !DILocation(line: 30, column: 50, scope: !6778)
!6787 = !DILocation(line: 30, column: 9, scope: !6778)
!6788 = !DILocation(line: 30, column: 2, scope: !6778)
!6789 = distinct !DISubprogram(name: "fputc", scope: !732, file: !732, line: 41, type: !6779, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !725, retainedNodes: !6790)
!6790 = !{!6791, !6792}
!6791 = !DILocalVariable(name: "c", arg: 1, scope: !6789, file: !732, line: 41, type: !103)
!6792 = !DILocalVariable(name: "stream", arg: 2, scope: !6789, file: !732, line: 41, type: !728)
!6793 = !DILocation(line: 0, scope: !6789)
!6794 = !DILocation(line: 43, column: 9, scope: !6789)
!6795 = !DILocation(line: 43, column: 2, scope: !6789)
!6796 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6797, file: !6797, line: 72, type: !6779, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !725, retainedNodes: !6798)
!6797 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!6798 = !{!6799, !6800}
!6799 = !DILocalVariable(name: "c", arg: 1, scope: !6796, file: !6797, line: 72, type: !103)
!6800 = !DILocalVariable(name: "stream", arg: 2, scope: !6796, file: !6797, line: 72, type: !728)
!6801 = !DILocation(line: 0, scope: !6796)
!6802 = !DILocation(line: 81, column: 2, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6796, file: !6797, line: 81, column: 2)
!6804 = !{i64 2151098885}
!6805 = !DILocation(line: 82, column: 9, scope: !6796)
!6806 = !DILocation(line: 82, column: 2, scope: !6796)
!6807 = distinct !DISubprogram(name: "fputs", scope: !732, file: !732, line: 46, type: !6808, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !725, retainedNodes: !6811)
!6808 = !DISubroutineType(types: !6809)
!6809 = !{!103, !6403, !6810}
!6810 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !728)
!6811 = !{!6812, !6813, !6814, !6815}
!6812 = !DILocalVariable(name: "s", arg: 1, scope: !6807, file: !732, line: 46, type: !6403)
!6813 = !DILocalVariable(name: "stream", arg: 2, scope: !6807, file: !732, line: 46, type: !6810)
!6814 = !DILocalVariable(name: "len", scope: !6807, file: !732, line: 48, type: !103)
!6815 = !DILocalVariable(name: "ret", scope: !6807, file: !732, line: 49, type: !103)
!6816 = !DILocation(line: 0, scope: !6807)
!6817 = !DILocation(line: 48, column: 12, scope: !6807)
!6818 = !DILocation(line: 51, column: 8, scope: !6807)
!6819 = !DILocation(line: 53, column: 13, scope: !6807)
!6820 = !DILocation(line: 53, column: 9, scope: !6807)
!6821 = !DILocation(line: 53, column: 2, scope: !6807)
!6822 = distinct !DISubprogram(name: "fwrite", scope: !732, file: !732, line: 99, type: !6823, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !725, retainedNodes: !6825)
!6823 = !DISubroutineType(types: !6824)
!6824 = !{!552, !6704, !552, !552, !6810}
!6825 = !{!6826, !6827, !6828, !6829}
!6826 = !DILocalVariable(name: "ptr", arg: 1, scope: !6822, file: !732, line: 99, type: !6704)
!6827 = !DILocalVariable(name: "size", arg: 2, scope: !6822, file: !732, line: 99, type: !552)
!6828 = !DILocalVariable(name: "nitems", arg: 3, scope: !6822, file: !732, line: 99, type: !552)
!6829 = !DILocalVariable(name: "stream", arg: 4, scope: !6822, file: !732, line: 100, type: !6810)
!6830 = !DILocation(line: 0, scope: !6822)
!6831 = !DILocation(line: 102, column: 9, scope: !6822)
!6832 = !DILocation(line: 102, column: 2, scope: !6822)
!6833 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6797, file: !6797, line: 96, type: !6823, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !725, retainedNodes: !6834)
!6834 = !{!6835, !6836, !6837, !6838}
!6835 = !DILocalVariable(name: "ptr", arg: 1, scope: !6833, file: !6797, line: 96, type: !6704)
!6836 = !DILocalVariable(name: "size", arg: 2, scope: !6833, file: !6797, line: 96, type: !552)
!6837 = !DILocalVariable(name: "nitems", arg: 3, scope: !6833, file: !6797, line: 96, type: !552)
!6838 = !DILocalVariable(name: "stream", arg: 4, scope: !6833, file: !6797, line: 96, type: !6810)
!6839 = !DILocation(line: 0, scope: !6833)
!6840 = !DILocation(line: 107, column: 2, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6833, file: !6797, line: 107, column: 2)
!6842 = !{i64 2151098989}
!6843 = !DILocation(line: 108, column: 9, scope: !6833)
!6844 = !DILocation(line: 108, column: 2, scope: !6833)
!6845 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !732, file: !732, line: 56, type: !6823, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !725, retainedNodes: !6846)
!6846 = !{!6847, !6848, !6849, !6850, !6851, !6852, !6853, !6854}
!6847 = !DILocalVariable(name: "ptr", arg: 1, scope: !6845, file: !732, line: 56, type: !6704)
!6848 = !DILocalVariable(name: "size", arg: 2, scope: !6845, file: !732, line: 56, type: !552)
!6849 = !DILocalVariable(name: "nitems", arg: 3, scope: !6845, file: !732, line: 57, type: !552)
!6850 = !DILocalVariable(name: "stream", arg: 4, scope: !6845, file: !732, line: 57, type: !6810)
!6851 = !DILocalVariable(name: "i", scope: !6845, file: !732, line: 59, type: !552)
!6852 = !DILocalVariable(name: "j", scope: !6845, file: !732, line: 60, type: !552)
!6853 = !DILocalVariable(name: "p", scope: !6845, file: !732, line: 61, type: !2626)
!6854 = !DILabel(scope: !6845, name: "done", file: !732, line: 82)
!6855 = !DILocation(line: 0, scope: !6845)
!6856 = !DILocation(line: 63, column: 14, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6845, file: !732, line: 63, column: 6)
!6858 = !DILocation(line: 63, column: 24, scope: !6857)
!6859 = !DILocation(line: 72, column: 3, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6845, file: !732, line: 70, column: 5)
!6861 = !DILocation(line: 0, scope: !6860)
!6862 = !DILocation(line: 73, column: 8, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !732, line: 73, column: 8)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !732, line: 72, column: 6)
!6865 = !DILocation(line: 73, column: 29, scope: !6863)
!6866 = !DILocation(line: 73, column: 27, scope: !6863)
!6867 = !DILocation(line: 73, column: 21, scope: !6863)
!6868 = !DILocation(line: 73, column: 33, scope: !6863)
!6869 = !DILocation(line: 73, column: 8, scope: !6864)
!6870 = !DILocation(line: 76, column: 5, scope: !6864)
!6871 = !DILocation(line: 77, column: 14, scope: !6860)
!6872 = !DILocation(line: 77, column: 3, scope: !6864)
!6873 = distinct !{!6873, !6859, !6874}
!6874 = !DILocation(line: 77, column: 17, scope: !6860)
!6875 = !DILocation(line: 79, column: 4, scope: !6860)
!6876 = !DILocation(line: 80, column: 13, scope: !6845)
!6877 = !DILocation(line: 80, column: 2, scope: !6860)
!6878 = distinct !{!6878, !6879, !6880}
!6879 = !DILocation(line: 70, column: 2, scope: !6845)
!6880 = !DILocation(line: 80, column: 16, scope: !6845)
!6881 = !DILocation(line: 82, column: 1, scope: !6845)
!6882 = !DILocation(line: 83, column: 17, scope: !6845)
!6883 = !DILocation(line: 83, column: 2, scope: !6845)
!6884 = !DILocation(line: 84, column: 1, scope: !6845)
!6885 = distinct !DISubprogram(name: "puts", scope: !732, file: !732, line: 106, type: !6886, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !725, retainedNodes: !6888)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{!103, !569}
!6888 = !{!6889}
!6889 = !DILocalVariable(name: "s", arg: 1, scope: !6885, file: !732, line: 106, type: !569)
!6890 = !DILocation(line: 0, scope: !6885)
!6891 = !DILocation(line: 108, column: 6, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6885, file: !732, line: 108, column: 6)
!6893 = !DILocation(line: 108, column: 23, scope: !6892)
!6894 = !DILocation(line: 108, column: 6, scope: !6885)
!6895 = !DILocation(line: 112, column: 9, scope: !6885)
!6896 = !DILocation(line: 112, column: 29, scope: !6885)
!6897 = !DILocation(line: 112, column: 2, scope: !6885)
!6898 = !DILocation(line: 113, column: 1, scope: !6885)
!6899 = distinct !DISubprogram(name: "uart_console_init", scope: !739, file: !739, line: 588, type: !776, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !6900)
!6900 = !{!6901}
!6901 = !DILocalVariable(name: "arg", arg: 1, scope: !6899, file: !739, line: 588, type: !755)
!6902 = !DILocation(line: 0, scope: !6899)
!6903 = !DILocation(line: 593, column: 7, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6899, file: !739, line: 593, column: 6)
!6905 = !DILocation(line: 593, column: 6, scope: !6899)
!6906 = !DILocation(line: 597, column: 2, scope: !6899)
!6907 = !DILocation(line: 599, column: 2, scope: !6899)
!6908 = !DILocation(line: 600, column: 1, scope: !6899)
!6909 = distinct !DISubprogram(name: "device_is_ready", scope: !6910, file: !6910, line: 47, type: !6911, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !6913)
!6910 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!6911 = !DISubroutineType(types: !6912)
!6912 = !{!580, !755}
!6913 = !{!6914}
!6914 = !DILocalVariable(name: "dev", arg: 1, scope: !6909, file: !6910, line: 47, type: !755)
!6915 = !DILocation(line: 0, scope: !6909)
!6916 = !DILocation(line: 55, column: 2, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6909, file: !6910, line: 55, column: 2)
!6918 = !{i64 2151368559}
!6919 = !DILocation(line: 56, column: 9, scope: !6909)
!6920 = !DILocation(line: 56, column: 2, scope: !6909)
!6921 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !739, file: !739, line: 573, type: !2944, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !675)
!6922 = !DILocation(line: 576, column: 2, scope: !6921)
!6923 = !DILocation(line: 579, column: 2, scope: !6921)
!6924 = !DILocation(line: 581, column: 1, scope: !6921)
!6925 = distinct !DISubprogram(name: "console_out", scope: !739, file: !739, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !6926)
!6926 = !{!6927}
!6927 = !DILocalVariable(name: "c", arg: 1, scope: !6925, file: !739, line: 77, type: !103)
!6928 = !DILocation(line: 0, scope: !6925)
!6929 = !DILocation(line: 89, column: 11, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6925, file: !739, line: 89, column: 6)
!6931 = !DILocation(line: 89, column: 6, scope: !6925)
!6932 = !DILocation(line: 90, column: 3, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6930, file: !739, line: 89, column: 17)
!6934 = !DILocation(line: 91, column: 2, scope: !6933)
!6935 = !DILocation(line: 92, column: 34, scope: !6925)
!6936 = !DILocation(line: 92, column: 2, scope: !6925)
!6937 = !DILocation(line: 94, column: 2, scope: !6925)
!6938 = distinct !DISubprogram(name: "uart_poll_out", scope: !6939, file: !6939, line: 95, type: !772, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !6940)
!6939 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/getline")
!6940 = !{!6941, !6942}
!6941 = !DILocalVariable(name: "dev", arg: 1, scope: !6938, file: !6939, line: 95, type: !755)
!6942 = !DILocalVariable(name: "out_char", arg: 2, scope: !6938, file: !6939, line: 95, type: !411)
!6943 = !DILocation(line: 0, scope: !6938)
!6944 = !DILocation(line: 105, column: 2, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6938, file: !6939, line: 105, column: 2)
!6946 = !{i64 2151451804}
!6947 = !DILocation(line: 106, column: 2, scope: !6938)
!6948 = !DILocation(line: 107, column: 1, scope: !6938)
!6949 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !557, file: !557, line: 574, type: !772, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !6950)
!6950 = !{!6951, !6952, !6953}
!6951 = !DILocalVariable(name: "dev", arg: 1, scope: !6949, file: !557, line: 574, type: !755)
!6952 = !DILocalVariable(name: "out_char", arg: 2, scope: !6949, file: !557, line: 575, type: !411)
!6953 = !DILocalVariable(name: "api", scope: !6949, file: !557, line: 577, type: !747)
!6954 = !DILocation(line: 0, scope: !6949)
!6955 = !DILocation(line: 578, column: 40, scope: !6949)
!6956 = !DILocation(line: 580, column: 7, scope: !6949)
!6957 = !DILocation(line: 580, column: 2, scope: !6949)
!6958 = !DILocation(line: 581, column: 1, scope: !6949)
!6959 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !566, file: !566, line: 730, type: !6911, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !6960)
!6960 = !{!6961}
!6961 = !DILocalVariable(name: "dev", arg: 1, scope: !6959, file: !566, line: 730, type: !755)
!6962 = !DILocation(line: 0, scope: !6959)
!6963 = !DILocation(line: 732, column: 9, scope: !6959)
!6964 = !DILocation(line: 732, column: 2, scope: !6959)
!6965 = distinct !DISubprogram(name: "uart_register_input", scope: !739, file: !739, line: 549, type: !6966, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !6968)
!6966 = !DISubroutineType(types: !6967)
!6967 = !{null, !836, !836, !876}
!6968 = !{!6969, !6970, !6971}
!6969 = !DILocalVariable(name: "avail", arg: 1, scope: !6965, file: !739, line: 549, type: !836)
!6970 = !DILocalVariable(name: "lines", arg: 2, scope: !6965, file: !739, line: 549, type: !836)
!6971 = !DILocalVariable(name: "completion", arg: 3, scope: !6965, file: !739, line: 550, type: !876)
!6972 = !DILocation(line: 0, scope: !6965)
!6973 = !DILocation(line: 552, column: 14, scope: !6965)
!6974 = !DILocation(line: 553, column: 14, scope: !6965)
!6975 = !DILocation(line: 554, column: 16, scope: !6965)
!6976 = !DILocation(line: 556, column: 2, scope: !6965)
!6977 = !DILocation(line: 557, column: 1, scope: !6965)
!6978 = distinct !DISubprogram(name: "console_input_init", scope: !739, file: !739, line: 532, type: !2944, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !6979)
!6979 = !{!6980}
!6980 = !DILocalVariable(name: "c", scope: !6978, file: !739, line: 534, type: !410)
!6981 = !DILocation(line: 534, column: 2, scope: !6978)
!6982 = !DILocation(line: 536, column: 2, scope: !6978)
!6983 = !DILocation(line: 537, column: 2, scope: !6978)
!6984 = !DILocation(line: 539, column: 2, scope: !6978)
!6985 = !DILocation(line: 542, column: 9, scope: !6978)
!6986 = !DILocation(line: 542, column: 2, scope: !6978)
!6987 = !DILocation(line: 0, scope: !6978)
!6988 = !DILocation(line: 543, column: 3, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6978, file: !739, line: 542, column: 46)
!6990 = distinct !{!6990, !6986, !6991}
!6991 = !DILocation(line: 544, column: 2, scope: !6978)
!6992 = !DILocation(line: 546, column: 2, scope: !6978)
!6993 = !DILocation(line: 547, column: 1, scope: !6978)
!6994 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !6939, file: !6939, line: 265, type: !806, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !6995)
!6995 = !{!6996}
!6996 = !DILocalVariable(name: "dev", arg: 1, scope: !6994, file: !6939, line: 265, type: !755)
!6997 = !DILocation(line: 0, scope: !6994)
!6998 = !DILocation(line: 274, column: 2, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6994, file: !6939, line: 274, column: 2)
!7000 = !{i64 2151452280}
!7001 = !DILocation(line: 275, column: 2, scope: !6994)
!7002 = !DILocation(line: 276, column: 1, scope: !6994)
!7003 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !6939, file: !6939, line: 217, type: !806, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7004)
!7004 = !{!7005}
!7005 = !DILocalVariable(name: "dev", arg: 1, scope: !7003, file: !6939, line: 217, type: !755)
!7006 = !DILocation(line: 0, scope: !7003)
!7007 = !DILocation(line: 226, column: 2, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7003, file: !6939, line: 226, column: 2)
!7009 = !{i64 2151452144}
!7010 = !DILocation(line: 227, column: 2, scope: !7003)
!7011 = !DILocation(line: 228, column: 1, scope: !7003)
!7012 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !557, file: !557, line: 1190, type: !7013, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7015)
!7013 = !DISubroutineType(types: !7014)
!7014 = !{null, !755, !822}
!7015 = !{!7016, !7017}
!7016 = !DILocalVariable(name: "dev", arg: 1, scope: !7012, file: !557, line: 1190, type: !755)
!7017 = !DILocalVariable(name: "cb", arg: 2, scope: !7012, file: !557, line: 1191, type: !822)
!7018 = !DILocation(line: 0, scope: !7012)
!7019 = !DILocation(line: 1193, column: 2, scope: !7012)
!7020 = !DILocation(line: 1194, column: 1, scope: !7012)
!7021 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !557, file: !557, line: 1024, type: !776, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7022)
!7022 = !{!7023, !7024}
!7023 = !DILocalVariable(name: "dev", arg: 1, scope: !7021, file: !557, line: 1024, type: !755)
!7024 = !DILocalVariable(name: "api", scope: !7021, file: !557, line: 1027, type: !747)
!7025 = !DILocation(line: 0, scope: !7021)
!7026 = !DILocation(line: 1028, column: 40, scope: !7021)
!7027 = !DILocation(line: 1030, column: 11, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7021, file: !557, line: 1030, column: 6)
!7029 = !DILocation(line: 1030, column: 24, scope: !7028)
!7030 = !DILocation(line: 1030, column: 6, scope: !7021)
!7031 = !DILocation(line: 1033, column: 9, scope: !7021)
!7032 = !DILocation(line: 1033, column: 2, scope: !7021)
!7033 = !DILocation(line: 1038, column: 1, scope: !7021)
!7034 = distinct !DISubprogram(name: "uart_fifo_read", scope: !557, file: !557, line: 785, type: !802, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7035)
!7035 = !{!7036, !7037, !7038, !7039}
!7036 = !DILocalVariable(name: "dev", arg: 1, scope: !7034, file: !557, line: 785, type: !755)
!7037 = !DILocalVariable(name: "rx_data", arg: 2, scope: !7034, file: !557, line: 785, type: !625)
!7038 = !DILocalVariable(name: "size", arg: 3, scope: !7034, file: !557, line: 786, type: !626)
!7039 = !DILocalVariable(name: "api", scope: !7034, file: !557, line: 789, type: !747)
!7040 = !DILocation(line: 0, scope: !7034)
!7041 = !DILocation(line: 790, column: 40, scope: !7034)
!7042 = !DILocation(line: 792, column: 11, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7034, file: !557, line: 792, column: 6)
!7044 = !DILocation(line: 792, column: 21, scope: !7043)
!7045 = !DILocation(line: 792, column: 6, scope: !7034)
!7046 = !DILocation(line: 796, column: 9, scope: !7034)
!7047 = !DILocation(line: 796, column: 2, scope: !7034)
!7048 = !DILocation(line: 803, column: 1, scope: !7034)
!7049 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !6939, file: !6939, line: 241, type: !806, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7050)
!7050 = !{!7051}
!7051 = !DILocalVariable(name: "dev", arg: 1, scope: !7049, file: !6939, line: 241, type: !755)
!7052 = !DILocation(line: 0, scope: !7049)
!7053 = !DILocation(line: 250, column: 2, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7049, file: !6939, line: 250, column: 2)
!7055 = !{i64 2151452212}
!7056 = !DILocation(line: 251, column: 2, scope: !7049)
!7057 = !DILocation(line: 252, column: 1, scope: !7049)
!7058 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !557, file: !557, line: 934, type: !806, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7059)
!7059 = !{!7060, !7061}
!7060 = !DILocalVariable(name: "dev", arg: 1, scope: !7058, file: !557, line: 934, type: !755)
!7061 = !DILocalVariable(name: "api", scope: !7058, file: !557, line: 937, type: !747)
!7062 = !DILocation(line: 0, scope: !7058)
!7063 = !DILocation(line: 938, column: 40, scope: !7058)
!7064 = !DILocation(line: 940, column: 11, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7058, file: !557, line: 940, column: 6)
!7066 = !DILocation(line: 940, column: 25, scope: !7065)
!7067 = !DILocation(line: 940, column: 6, scope: !7058)
!7068 = !DILocation(line: 941, column: 3, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7065, file: !557, line: 940, column: 34)
!7070 = !DILocation(line: 942, column: 2, scope: !7069)
!7071 = !DILocation(line: 946, column: 1, scope: !7058)
!7072 = !DILocation(line: 0, scope: !884)
!7073 = !DILocation(line: 433, column: 9, scope: !884)
!7074 = !DILocation(line: 433, column: 43, scope: !884)
!7075 = !DILocation(line: 434, column: 9, scope: !884)
!7076 = !DILocation(line: 433, column: 2, scope: !884)
!7077 = !DILocation(line: 436, column: 3, scope: !889)
!7078 = !DILocation(line: 439, column: 8, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !889, file: !739, line: 439, column: 7)
!7080 = !DILocation(line: 439, column: 7, scope: !889)
!7081 = distinct !{!7081, !7076, !7082}
!7082 = !DILocation(line: 529, column: 2, scope: !884)
!7083 = !DILocation(line: 0, scope: !889)
!7084 = !DILocation(line: 445, column: 8, scope: !889)
!7085 = !DILocation(line: 446, column: 10, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !889, file: !739, line: 446, column: 7)
!7087 = !DILocation(line: 446, column: 7, scope: !889)
!7088 = !DILocation(line: 460, column: 8, scope: !894)
!7089 = !DILocation(line: 460, column: 7, scope: !889)
!7090 = !DILocation(line: 461, column: 10, scope: !892)
!7091 = !DILocation(line: 0, scope: !892)
!7092 = !DILocation(line: 461, column: 8, scope: !893)
!7093 = !DILocation(line: 462, column: 9, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !893, file: !739, line: 462, column: 8)
!7095 = !DILocation(line: 462, column: 8, scope: !893)
!7096 = !DILocation(line: 477, column: 7, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !889, file: !739, line: 477, column: 7)
!7098 = !DILocation(line: 477, column: 7, scope: !889)
!7099 = !DILocation(line: 478, column: 16, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7097, file: !739, line: 477, column: 46)
!7101 = !DILocation(line: 478, column: 22, scope: !7100)
!7102 = !DILocation(line: 478, column: 4, scope: !7100)
!7103 = !DILocation(line: 479, column: 4, scope: !7100)
!7104 = !DILocation(line: 483, column: 7, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !889, file: !739, line: 483, column: 7)
!7106 = !DILocation(line: 483, column: 7, scope: !889)
!7107 = !DILocation(line: 484, column: 13, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7109, file: !739, line: 484, column: 8)
!7109 = distinct !DILexicalBlock(scope: !7105, file: !739, line: 483, column: 55)
!7110 = !DILocation(line: 484, column: 8, scope: !7109)
!7111 = !DILocation(line: 485, column: 5, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7108, file: !739, line: 484, column: 26)
!7113 = !DILocation(line: 486, column: 5, scope: !7112)
!7114 = !DILocation(line: 487, column: 4, scope: !7112)
!7115 = !DILocation(line: 493, column: 16, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !889, file: !739, line: 493, column: 7)
!7117 = !DILocation(line: 493, column: 8, scope: !7116)
!7118 = !DILocation(line: 493, column: 7, scope: !889)
!7119 = !DILocation(line: 494, column: 4, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7116, file: !739, line: 493, column: 23)
!7121 = !DILocation(line: 497, column: 9, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !739, line: 497, column: 9)
!7123 = distinct !DILexicalBlock(scope: !7120, file: !739, line: 494, column: 18)
!7124 = !DILocation(line: 497, column: 13, scope: !7122)
!7125 = !DILocation(line: 497, column: 9, scope: !7123)
!7126 = !DILocation(line: 498, column: 16, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7122, file: !739, line: 497, column: 18)
!7128 = !DILocation(line: 498, column: 26, scope: !7127)
!7129 = !DILocation(line: 498, column: 34, scope: !7127)
!7130 = !DILocation(line: 498, column: 6, scope: !7127)
!7131 = !DILocation(line: 499, column: 5, scope: !7127)
!7132 = !DILocation(line: 502, column: 5, scope: !7123)
!7133 = !DILocation(line: 503, column: 5, scope: !7123)
!7134 = !DILocation(line: 505, column: 5, scope: !7123)
!7135 = !DILocation(line: 505, column: 15, scope: !7123)
!7136 = !DILocation(line: 505, column: 21, scope: !7123)
!7137 = !DILocation(line: 505, column: 19, scope: !7123)
!7138 = !DILocation(line: 505, column: 26, scope: !7123)
!7139 = !DILocation(line: 506, column: 5, scope: !7123)
!7140 = !DILocation(line: 507, column: 5, scope: !7123)
!7141 = !DILocation(line: 508, column: 9, scope: !7123)
!7142 = !DILocation(line: 509, column: 9, scope: !7123)
!7143 = !DILocation(line: 510, column: 5, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7123, file: !739, line: 510, column: 5)
!7145 = !DILocation(line: 511, column: 9, scope: !7123)
!7146 = !DILocation(line: 512, column: 5, scope: !7123)
!7147 = !DILocation(line: 514, column: 9, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7123, file: !739, line: 514, column: 9)
!7149 = !DILocation(line: 514, column: 23, scope: !7148)
!7150 = !DILocation(line: 515, column: 27, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7148, file: !739, line: 514, column: 32)
!7152 = !DILocation(line: 515, column: 38, scope: !7151)
!7153 = !DILocation(line: 515, column: 13, scope: !7151)
!7154 = !DILocation(line: 515, column: 10, scope: !7151)
!7155 = !DILocation(line: 516, column: 5, scope: !7151)
!7156 = !DILocation(line: 526, column: 7, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !889, file: !739, line: 526, column: 7)
!7158 = !DILocation(line: 526, column: 13, scope: !7157)
!7159 = !DILocation(line: 526, column: 11, scope: !7157)
!7160 = !DILocation(line: 526, column: 17, scope: !7157)
!7161 = !DILocation(line: 526, column: 7, scope: !889)
!7162 = !DILocation(line: 527, column: 17, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7157, file: !739, line: 526, column: 42)
!7164 = !DILocation(line: 527, column: 30, scope: !7163)
!7165 = !DILocation(line: 527, column: 4, scope: !7163)
!7166 = !DILocation(line: 528, column: 3, scope: !7163)
!7167 = !DILocation(line: 530, column: 1, scope: !884)
!7168 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !557, file: !557, line: 1163, type: !820, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7169)
!7169 = !{!7170, !7171, !7172, !7173}
!7170 = !DILocalVariable(name: "dev", arg: 1, scope: !7168, file: !557, line: 1163, type: !755)
!7171 = !DILocalVariable(name: "cb", arg: 2, scope: !7168, file: !557, line: 1164, type: !822)
!7172 = !DILocalVariable(name: "user_data", arg: 3, scope: !7168, file: !557, line: 1165, type: !102)
!7173 = !DILocalVariable(name: "api", scope: !7168, file: !557, line: 1168, type: !747)
!7174 = !DILocation(line: 0, scope: !7168)
!7175 = !DILocation(line: 1169, column: 40, scope: !7168)
!7176 = !DILocation(line: 1171, column: 11, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7168, file: !557, line: 1171, column: 6)
!7178 = !DILocation(line: 1171, column: 20, scope: !7177)
!7179 = !DILocation(line: 1171, column: 29, scope: !7177)
!7180 = !DILocation(line: 1171, column: 46, scope: !7177)
!7181 = !DILocation(line: 1171, column: 6, scope: !7168)
!7182 = !DILocation(line: 1172, column: 3, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7177, file: !557, line: 1171, column: 56)
!7184 = !DILocation(line: 1173, column: 2, scope: !7183)
!7185 = !DILocation(line: 1179, column: 1, scope: !7168)
!7186 = distinct !DISubprogram(name: "uart_irq_update", scope: !6939, file: !6939, line: 360, type: !776, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7187)
!7187 = !{!7188}
!7188 = !DILocalVariable(name: "dev", arg: 1, scope: !7186, file: !6939, line: 360, type: !755)
!7189 = !DILocation(line: 0, scope: !7186)
!7190 = !DILocation(line: 368, column: 2, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7186, file: !6939, line: 368, column: 2)
!7192 = !{i64 2151452552}
!7193 = !DILocation(line: 369, column: 9, scope: !7186)
!7194 = !DILocation(line: 369, column: 2, scope: !7186)
!7195 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !6939, file: !6939, line: 337, type: !776, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7196)
!7196 = !{!7197}
!7197 = !DILocalVariable(name: "dev", arg: 1, scope: !7195, file: !6939, line: 337, type: !755)
!7198 = !DILocation(line: 0, scope: !7195)
!7199 = !DILocation(line: 345, column: 2, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7195, file: !6939, line: 345, column: 2)
!7201 = !{i64 2151452484}
!7202 = !DILocation(line: 346, column: 9, scope: !7195)
!7203 = !DILocation(line: 346, column: 2, scope: !7195)
!7204 = distinct !DISubprogram(name: "read_uart", scope: !739, file: !739, line: 127, type: !7205, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7207)
!7205 = !DISubroutineType(types: !7206)
!7206 = !{!103, !755, !625, !32}
!7207 = !{!7208, !7209, !7210, !7211}
!7208 = !DILocalVariable(name: "uart", arg: 1, scope: !7204, file: !739, line: 127, type: !755)
!7209 = !DILocalVariable(name: "buf", arg: 2, scope: !7204, file: !739, line: 127, type: !625)
!7210 = !DILocalVariable(name: "size", arg: 3, scope: !7204, file: !739, line: 128, type: !32)
!7211 = !DILocalVariable(name: "rx", scope: !7204, file: !739, line: 130, type: !103)
!7212 = !DILocation(line: 0, scope: !7204)
!7213 = !DILocation(line: 132, column: 7, scope: !7204)
!7214 = !DILocation(line: 133, column: 9, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7204, file: !739, line: 133, column: 6)
!7216 = !DILocation(line: 133, column: 6, scope: !7204)
!7217 = !DILocation(line: 135, column: 3, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7215, file: !739, line: 133, column: 14)
!7219 = !DILocation(line: 137, column: 3, scope: !7218)
!7220 = !DILocation(line: 141, column: 1, scope: !7204)
!7221 = distinct !DISubprogram(name: "k_queue_get", scope: !3364, file: !3364, line: 649, type: !7222, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7229)
!7222 = !DISubroutineType(types: !7223)
!7223 = !{!102, !7224, !7225}
!7224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!7225 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !549, line: 67, baseType: !7226)
!7226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 65, size: 64, elements: !7227)
!7227 = !{!7228}
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !7226, file: !549, line: 66, baseType: !548, size: 64)
!7229 = !{!7230, !7231}
!7230 = !DILocalVariable(name: "queue", arg: 1, scope: !7221, file: !3364, line: 649, type: !7224)
!7231 = !DILocalVariable(name: "timeout", arg: 2, scope: !7221, file: !3364, line: 649, type: !7225)
!7232 = !DILocation(line: 0, scope: !7221)
!7233 = !DILocation(line: 658, column: 2, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7221, file: !3364, line: 658, column: 2)
!7235 = !{i64 2151046835}
!7236 = !DILocation(line: 659, column: 9, scope: !7221)
!7237 = !DILocation(line: 659, column: 2, scope: !7221)
!7238 = distinct !DISubprogram(name: "atomic_test_bit", scope: !904, file: !904, line: 131, type: !7239, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7243)
!7239 = !DISubroutineType(types: !7240)
!7240 = !{!580, !7241, !103}
!7241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7242, size: 32)
!7242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !903)
!7243 = !{!7244, !7245, !7246}
!7244 = !DILocalVariable(name: "target", arg: 1, scope: !7238, file: !904, line: 131, type: !7241)
!7245 = !DILocalVariable(name: "bit", arg: 2, scope: !7238, file: !904, line: 131, type: !103)
!7246 = !DILocalVariable(name: "val", scope: !7238, file: !904, line: 133, type: !7247)
!7247 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !904, line: 23, baseType: !903)
!7248 = !DILocation(line: 0, scope: !7238)
!7249 = !DILocation(line: 133, column: 21, scope: !7238)
!7250 = !DILocation(line: 135, column: 27, scope: !7238)
!7251 = !DILocation(line: 135, column: 50, scope: !7238)
!7252 = !DILocation(line: 135, column: 2, scope: !7238)
!7253 = distinct !DISubprogram(name: "handle_ansi", scope: !739, file: !739, line: 232, type: !7254, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7256)
!7254 = !DISubroutineType(types: !7255)
!7255 = !{null, !410, !702}
!7256 = !{!7257, !7258, !7259}
!7257 = !DILocalVariable(name: "byte", arg: 1, scope: !7253, file: !739, line: 232, type: !410)
!7258 = !DILocalVariable(name: "line", arg: 2, scope: !7253, file: !739, line: 232, type: !702)
!7259 = !DILabel(scope: !7253, name: "ansi_cmd", file: !739, line: 268)
!7260 = !DILocation(line: 0, scope: !7253)
!7261 = !DILocation(line: 234, column: 6, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7253, file: !739, line: 234, column: 6)
!7263 = !DILocation(line: 234, column: 6, scope: !7253)
!7264 = !DILocation(line: 235, column: 16, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !739, line: 235, column: 7)
!7266 = distinct !DILexicalBlock(scope: !7262, file: !739, line: 234, column: 61)
!7267 = !DILocation(line: 235, column: 8, scope: !7265)
!7268 = !DILocation(line: 235, column: 7, scope: !7266)
!7269 = !DILocation(line: 236, column: 13, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7265, file: !739, line: 235, column: 23)
!7271 = !DILocation(line: 237, column: 4, scope: !7270)
!7272 = !DILocation(line: 240, column: 3, scope: !7266)
!7273 = !DILocation(line: 241, column: 19, scope: !7266)
!7274 = !DILocation(line: 241, column: 12, scope: !7266)
!7275 = !DILocation(line: 242, column: 14, scope: !7266)
!7276 = !DILocation(line: 243, column: 3, scope: !7266)
!7277 = !DILocation(line: 246, column: 6, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7253, file: !739, line: 246, column: 6)
!7279 = !DILocation(line: 246, column: 6, scope: !7253)
!7280 = !DILocation(line: 247, column: 15, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !739, line: 247, column: 7)
!7282 = distinct !DILexicalBlock(scope: !7278, file: !739, line: 246, column: 49)
!7283 = !DILocation(line: 247, column: 7, scope: !7281)
!7284 = !DILocation(line: 247, column: 7, scope: !7282)
!7285 = !DILocation(line: 248, column: 8, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7287, file: !739, line: 248, column: 8)
!7287 = distinct !DILexicalBlock(scope: !7281, file: !739, line: 247, column: 22)
!7288 = !DILocation(line: 248, column: 8, scope: !7287)
!7289 = !DILocation(line: 249, column: 16, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7286, file: !739, line: 248, column: 53)
!7291 = !DILocation(line: 250, column: 24, scope: !7290)
!7292 = !DILocation(line: 250, column: 16, scope: !7290)
!7293 = !DILocation(line: 251, column: 4, scope: !7290)
!7294 = !DILocation(line: 252, column: 14, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7286, file: !739, line: 251, column: 11)
!7296 = !DILocation(line: 253, column: 22, scope: !7295)
!7297 = !DILocation(line: 253, column: 14, scope: !7295)
!7298 = !DILocation(line: 259, column: 12, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7282, file: !739, line: 259, column: 7)
!7300 = !DILocation(line: 259, column: 19, scope: !7299)
!7301 = !DILocation(line: 260, column: 8, scope: !7299)
!7302 = !DILocation(line: 259, column: 7, scope: !7282)
!7303 = !DILocation(line: 264, column: 3, scope: !7282)
!7304 = !DILocation(line: 265, column: 3, scope: !7282)
!7305 = !DILocation(line: 266, column: 2, scope: !7282)
!7306 = !DILocation(line: 268, column: 1, scope: !7253)
!7307 = !DILocation(line: 269, column: 2, scope: !7253)
!7308 = !DILocation(line: 271, column: 7, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !739, line: 271, column: 7)
!7310 = distinct !DILexicalBlock(scope: !7253, file: !739, line: 269, column: 16)
!7311 = !DILocation(line: 271, column: 18, scope: !7309)
!7312 = !DILocation(line: 271, column: 16, scope: !7309)
!7313 = !DILocation(line: 271, column: 7, scope: !7310)
!7314 = !DILocation(line: 275, column: 7, scope: !7310)
!7315 = !DILocation(line: 276, column: 7, scope: !7310)
!7316 = !DILocation(line: 277, column: 3, scope: !7310)
!7317 = !DILocation(line: 278, column: 3, scope: !7310)
!7318 = !DILocation(line: 280, column: 7, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7310, file: !739, line: 280, column: 7)
!7320 = !DILocation(line: 280, column: 18, scope: !7319)
!7321 = !DILocation(line: 280, column: 16, scope: !7319)
!7322 = !DILocation(line: 280, column: 7, scope: !7310)
!7323 = !DILocation(line: 284, column: 7, scope: !7310)
!7324 = !DILocation(line: 285, column: 7, scope: !7310)
!7325 = !DILocation(line: 286, column: 3, scope: !7310)
!7326 = !DILocation(line: 287, column: 3, scope: !7310)
!7327 = !DILocation(line: 289, column: 8, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7310, file: !739, line: 289, column: 7)
!7329 = !DILocation(line: 289, column: 7, scope: !7310)
!7330 = !DILocation(line: 293, column: 19, scope: !7310)
!7331 = !DILocation(line: 293, column: 3, scope: !7310)
!7332 = !DILocation(line: 294, column: 10, scope: !7310)
!7333 = !DILocation(line: 294, column: 7, scope: !7310)
!7334 = !DILocation(line: 295, column: 7, scope: !7310)
!7335 = !DILocation(line: 296, column: 3, scope: !7310)
!7336 = !DILocation(line: 298, column: 8, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7310, file: !739, line: 298, column: 7)
!7338 = !DILocation(line: 298, column: 7, scope: !7310)
!7339 = !DILocation(line: 302, column: 18, scope: !7310)
!7340 = !DILocation(line: 302, column: 3, scope: !7310)
!7341 = !DILocation(line: 303, column: 10, scope: !7310)
!7342 = !DILocation(line: 303, column: 7, scope: !7310)
!7343 = !DILocation(line: 304, column: 7, scope: !7310)
!7344 = !DILocation(line: 305, column: 3, scope: !7310)
!7345 = !DILocation(line: 307, column: 8, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7310, file: !739, line: 307, column: 7)
!7347 = !DILocation(line: 307, column: 7, scope: !7310)
!7348 = !DILocation(line: 311, column: 3, scope: !7310)
!7349 = !DILocation(line: 312, column: 18, scope: !7310)
!7350 = !DILocation(line: 312, column: 13, scope: !7310)
!7351 = !DILocation(line: 312, column: 24, scope: !7310)
!7352 = !DILocation(line: 312, column: 3, scope: !7310)
!7353 = !DILocation(line: 313, column: 3, scope: !7310)
!7354 = !DILocation(line: 318, column: 2, scope: !7253)
!7355 = !DILocation(line: 319, column: 1, scope: !7253)
!7356 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !904, file: !904, line: 152, type: !7357, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7360)
!7357 = !DISubroutineType(types: !7358)
!7358 = !{!580, !7359, !103}
!7359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!7360 = !{!7361, !7362, !7363, !7364}
!7361 = !DILocalVariable(name: "target", arg: 1, scope: !7356, file: !904, line: 152, type: !7359)
!7362 = !DILocalVariable(name: "bit", arg: 2, scope: !7356, file: !904, line: 152, type: !103)
!7363 = !DILocalVariable(name: "mask", scope: !7356, file: !904, line: 154, type: !7247)
!7364 = !DILocalVariable(name: "old", scope: !7356, file: !904, line: 155, type: !7247)
!7365 = !DILocation(line: 0, scope: !7356)
!7366 = !DILocation(line: 154, column: 22, scope: !7356)
!7367 = !DILocation(line: 157, column: 45, scope: !7356)
!7368 = !DILocation(line: 157, column: 8, scope: !7356)
!7369 = !DILocation(line: 159, column: 14, scope: !7356)
!7370 = !DILocation(line: 159, column: 22, scope: !7356)
!7371 = !DILocation(line: 159, column: 2, scope: !7356)
!7372 = distinct !DISubprogram(name: "atomic_set_bit", scope: !904, file: !904, line: 217, type: !7373, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7375)
!7373 = !DISubroutineType(types: !7374)
!7374 = !{null, !7359, !103}
!7375 = !{!7376, !7377, !7378}
!7376 = !DILocalVariable(name: "target", arg: 1, scope: !7372, file: !904, line: 217, type: !7359)
!7377 = !DILocalVariable(name: "bit", arg: 2, scope: !7372, file: !904, line: 217, type: !103)
!7378 = !DILocalVariable(name: "mask", scope: !7372, file: !904, line: 219, type: !7247)
!7379 = !DILocation(line: 0, scope: !7372)
!7380 = !DILocation(line: 219, column: 22, scope: !7372)
!7381 = !DILocation(line: 221, column: 8, scope: !7372)
!7382 = !DILocation(line: 222, column: 1, scope: !7372)
!7383 = distinct !DISubprogram(name: "isprint", scope: !4681, file: !4681, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7384)
!7384 = !{!7385}
!7385 = !DILocalVariable(name: "c", arg: 1, scope: !7383, file: !4681, line: 37, type: !103)
!7386 = !DILocation(line: 0, scope: !7383)
!7387 = !DILocation(line: 39, column: 38, scope: !7383)
!7388 = !DILocation(line: 39, column: 2, scope: !7383)
!7389 = distinct !DISubprogram(name: "del_char", scope: !739, file: !739, line: 191, type: !7390, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7392)
!7390 = !DISubroutineType(types: !7391)
!7391 = !{null, !702, !410}
!7392 = !{!7393, !7394}
!7393 = !DILocalVariable(name: "pos", arg: 1, scope: !7389, file: !739, line: 191, type: !702)
!7394 = !DILocalVariable(name: "end", arg: 2, scope: !7389, file: !739, line: 191, type: !410)
!7395 = !DILocation(line: 0, scope: !7389)
!7396 = !DILocation(line: 193, column: 2, scope: !7389)
!7397 = !DILocation(line: 195, column: 10, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7389, file: !739, line: 195, column: 6)
!7399 = !DILocation(line: 195, column: 6, scope: !7389)
!7400 = !DILocation(line: 196, column: 3, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7398, file: !739, line: 195, column: 17)
!7402 = !DILocation(line: 197, column: 3, scope: !7401)
!7403 = !DILocation(line: 198, column: 3, scope: !7401)
!7404 = !DILocation(line: 201, column: 2, scope: !7389)
!7405 = !DILocation(line: 203, column: 2, scope: !7389)
!7406 = !DILocation(line: 203, column: 12, scope: !7389)
!7407 = !DILocation(line: 204, column: 16, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7389, file: !739, line: 203, column: 20)
!7409 = !DILocation(line: 204, column: 10, scope: !7408)
!7410 = !DILocation(line: 204, column: 8, scope: !7408)
!7411 = !DILocation(line: 205, column: 3, scope: !7408)
!7412 = !DILocation(line: 203, column: 15, scope: !7389)
!7413 = distinct !{!7413, !7405, !7414}
!7414 = !DILocation(line: 206, column: 2, scope: !7389)
!7415 = !DILocation(line: 208, column: 2, scope: !7389)
!7416 = !DILocation(line: 211, column: 2, scope: !7389)
!7417 = !DILocation(line: 212, column: 1, scope: !7389)
!7418 = distinct !DISubprogram(name: "insert_char", scope: !739, file: !739, line: 163, type: !7419, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7421)
!7419 = !DISubroutineType(types: !7420)
!7420 = !{null, !702, !571, !410}
!7421 = !{!7422, !7423, !7424, !7425}
!7422 = !DILocalVariable(name: "pos", arg: 1, scope: !7418, file: !739, line: 163, type: !702)
!7423 = !DILocalVariable(name: "c", arg: 2, scope: !7418, file: !739, line: 163, type: !571)
!7424 = !DILocalVariable(name: "end", arg: 3, scope: !7418, file: !739, line: 163, type: !410)
!7425 = !DILocalVariable(name: "tmp", scope: !7418, file: !739, line: 165, type: !571)
!7426 = !DILocation(line: 0, scope: !7418)
!7427 = !DILocation(line: 168, column: 2, scope: !7418)
!7428 = !DILocation(line: 170, column: 10, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7418, file: !739, line: 170, column: 6)
!7430 = !DILocation(line: 170, column: 6, scope: !7418)
!7431 = !DILocation(line: 171, column: 8, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7429, file: !739, line: 170, column: 17)
!7433 = !DILocation(line: 172, column: 3, scope: !7432)
!7434 = !DILocation(line: 175, column: 8, scope: !7418)
!7435 = !DILocation(line: 176, column: 11, scope: !7418)
!7436 = !DILocation(line: 178, column: 2, scope: !7418)
!7437 = !DILocation(line: 180, column: 2, scope: !7418)
!7438 = !DILocation(line: 180, column: 12, scope: !7418)
!7439 = !DILocation(line: 181, column: 3, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7418, file: !739, line: 180, column: 20)
!7441 = !DILocation(line: 182, column: 7, scope: !7440)
!7442 = !DILocation(line: 183, column: 12, scope: !7440)
!7443 = !DILocation(line: 180, column: 15, scope: !7418)
!7444 = distinct !{!7444, !7437, !7445}
!7445 = !DILocation(line: 185, column: 2, scope: !7418)
!7446 = !DILocation(line: 188, column: 2, scope: !7418)
!7447 = !DILocation(line: 189, column: 1, scope: !7418)
!7448 = distinct !DISubprogram(name: "cursor_save", scope: !739, file: !739, line: 153, type: !2944, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !675)
!7449 = !DILocation(line: 155, column: 2, scope: !7448)
!7450 = !DILocation(line: 156, column: 1, scope: !7448)
!7451 = distinct !DISubprogram(name: "cursor_restore", scope: !739, file: !739, line: 158, type: !2944, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !675)
!7452 = !DILocation(line: 160, column: 2, scope: !7451)
!7453 = !DILocation(line: 161, column: 1, scope: !7451)
!7454 = distinct !DISubprogram(name: "atomic_or", scope: !7455, file: !7455, line: 279, type: !7456, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7458)
!7455 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7456 = !DISubroutineType(types: !7457)
!7457 = !{!7247, !7359, !7247}
!7458 = !{!7459, !7460}
!7459 = !DILocalVariable(name: "target", arg: 1, scope: !7454, file: !7455, line: 279, type: !7359)
!7460 = !DILocalVariable(name: "value", arg: 2, scope: !7454, file: !7455, line: 279, type: !7247)
!7461 = !DILocation(line: 0, scope: !7454)
!7462 = !DILocation(line: 281, column: 9, scope: !7454)
!7463 = !DILocation(line: 281, column: 2, scope: !7454)
!7464 = distinct !DISubprogram(name: "atomic_and", scope: !7455, file: !7455, line: 319, type: !7456, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7465)
!7465 = !{!7466, !7467}
!7466 = !DILocalVariable(name: "target", arg: 1, scope: !7464, file: !7455, line: 319, type: !7359)
!7467 = !DILocalVariable(name: "value", arg: 2, scope: !7464, file: !7455, line: 319, type: !7247)
!7468 = !DILocation(line: 0, scope: !7464)
!7469 = !DILocation(line: 321, column: 9, scope: !7464)
!7470 = !DILocation(line: 321, column: 2, scope: !7464)
!7471 = distinct !DISubprogram(name: "isdigit", scope: !4681, file: !4681, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7472)
!7472 = !{!7473}
!7473 = !DILocalVariable(name: "a", arg: 1, scope: !7471, file: !4681, line: 43, type: !103)
!7474 = !DILocation(line: 0, scope: !7471)
!7475 = !DILocation(line: 45, column: 29, scope: !7471)
!7476 = !DILocation(line: 45, column: 45, scope: !7471)
!7477 = !DILocation(line: 45, column: 2, scope: !7471)
!7478 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !904, file: !904, line: 176, type: !7357, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7479)
!7479 = !{!7480, !7481, !7482, !7483}
!7480 = !DILocalVariable(name: "target", arg: 1, scope: !7478, file: !904, line: 176, type: !7359)
!7481 = !DILocalVariable(name: "bit", arg: 2, scope: !7478, file: !904, line: 176, type: !103)
!7482 = !DILocalVariable(name: "mask", scope: !7478, file: !904, line: 178, type: !7247)
!7483 = !DILocalVariable(name: "old", scope: !7478, file: !904, line: 179, type: !7247)
!7484 = !DILocation(line: 0, scope: !7478)
!7485 = !DILocation(line: 181, column: 8, scope: !7478)
!7486 = !DILocation(line: 183, column: 14, scope: !7478)
!7487 = !DILocation(line: 183, column: 22, scope: !7478)
!7488 = !DILocation(line: 183, column: 2, scope: !7478)
!7489 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !904, file: !904, line: 198, type: !7373, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7490)
!7490 = !{!7491, !7492, !7493}
!7491 = !DILocalVariable(name: "target", arg: 1, scope: !7489, file: !904, line: 198, type: !7359)
!7492 = !DILocalVariable(name: "bit", arg: 2, scope: !7489, file: !904, line: 198, type: !103)
!7493 = !DILocalVariable(name: "mask", scope: !7489, file: !904, line: 200, type: !7247)
!7494 = !DILocation(line: 0, scope: !7489)
!7495 = !DILocation(line: 200, column: 22, scope: !7489)
!7496 = !DILocation(line: 202, column: 45, scope: !7489)
!7497 = !DILocation(line: 202, column: 8, scope: !7489)
!7498 = !DILocation(line: 203, column: 1, scope: !7489)
!7499 = distinct !DISubprogram(name: "cursor_backward", scope: !739, file: !739, line: 148, type: !5598, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7500)
!7500 = !{!7501}
!7501 = !DILocalVariable(name: "count", arg: 1, scope: !7499, file: !739, line: 148, type: !32)
!7502 = !DILocation(line: 0, scope: !7499)
!7503 = !DILocation(line: 150, column: 2, scope: !7499)
!7504 = !DILocation(line: 151, column: 1, scope: !7499)
!7505 = distinct !DISubprogram(name: "cursor_forward", scope: !739, file: !739, line: 143, type: !5598, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7506)
!7506 = !{!7507}
!7507 = !DILocalVariable(name: "count", arg: 1, scope: !7505, file: !739, line: 143, type: !32)
!7508 = !DILocation(line: 0, scope: !7505)
!7509 = !DILocation(line: 145, column: 2, scope: !7505)
!7510 = !DILocation(line: 146, column: 1, scope: !7505)
!7511 = distinct !DISubprogram(name: "atomic_get", scope: !7455, file: !7455, line: 159, type: !7512, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7514)
!7512 = !DISubroutineType(types: !7513)
!7513 = !{!7247, !7241}
!7514 = !{!7515}
!7515 = !DILocalVariable(name: "target", arg: 1, scope: !7511, file: !7455, line: 159, type: !7241)
!7516 = !DILocation(line: 0, scope: !7511)
!7517 = !DILocation(line: 161, column: 9, scope: !7511)
!7518 = !DILocation(line: 161, column: 2, scope: !7511)
!7519 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !557, file: !557, line: 1093, type: !776, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7520)
!7520 = !{!7521, !7522}
!7521 = !DILocalVariable(name: "dev", arg: 1, scope: !7519, file: !557, line: 1093, type: !755)
!7522 = !DILocalVariable(name: "api", scope: !7519, file: !557, line: 1096, type: !747)
!7523 = !DILocation(line: 0, scope: !7519)
!7524 = !DILocation(line: 1097, column: 40, scope: !7519)
!7525 = !DILocation(line: 1099, column: 11, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7519, file: !557, line: 1099, column: 6)
!7527 = !DILocation(line: 1099, column: 26, scope: !7526)
!7528 = !DILocation(line: 1099, column: 6, scope: !7519)
!7529 = !DILocation(line: 1102, column: 9, scope: !7519)
!7530 = !DILocation(line: 1102, column: 2, scope: !7519)
!7531 = !DILocation(line: 1107, column: 1, scope: !7519)
!7532 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !557, file: !557, line: 1136, type: !776, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7533)
!7533 = !{!7534, !7535}
!7534 = !DILocalVariable(name: "dev", arg: 1, scope: !7532, file: !557, line: 1136, type: !755)
!7535 = !DILocalVariable(name: "api", scope: !7532, file: !557, line: 1139, type: !747)
!7536 = !DILocation(line: 0, scope: !7532)
!7537 = !DILocation(line: 1140, column: 40, scope: !7532)
!7538 = !DILocation(line: 1142, column: 11, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7532, file: !557, line: 1142, column: 6)
!7540 = !DILocation(line: 1142, column: 22, scope: !7539)
!7541 = !DILocation(line: 1142, column: 6, scope: !7532)
!7542 = !DILocation(line: 1145, column: 9, scope: !7532)
!7543 = !DILocation(line: 1145, column: 2, scope: !7532)
!7544 = !DILocation(line: 1150, column: 1, scope: !7532)
!7545 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !557, file: !557, line: 878, type: !806, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7546)
!7546 = !{!7547, !7548}
!7547 = !DILocalVariable(name: "dev", arg: 1, scope: !7545, file: !557, line: 878, type: !755)
!7548 = !DILocalVariable(name: "api", scope: !7545, file: !557, line: 881, type: !747)
!7549 = !DILocation(line: 0, scope: !7545)
!7550 = !DILocation(line: 882, column: 40, scope: !7545)
!7551 = !DILocation(line: 884, column: 11, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7545, file: !557, line: 884, column: 6)
!7553 = !DILocation(line: 884, column: 26, scope: !7552)
!7554 = !DILocation(line: 884, column: 6, scope: !7545)
!7555 = !DILocation(line: 885, column: 3, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7552, file: !557, line: 884, column: 35)
!7557 = !DILocation(line: 886, column: 2, scope: !7556)
!7558 = !DILocation(line: 890, column: 1, scope: !7545)
!7559 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !557, file: !557, line: 955, type: !806, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !735, retainedNodes: !7560)
!7560 = !{!7561, !7562}
!7561 = !DILocalVariable(name: "dev", arg: 1, scope: !7559, file: !557, line: 955, type: !755)
!7562 = !DILocalVariable(name: "api", scope: !7559, file: !557, line: 958, type: !747)
!7563 = !DILocation(line: 0, scope: !7559)
!7564 = !DILocation(line: 959, column: 40, scope: !7559)
!7565 = !DILocation(line: 961, column: 11, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7559, file: !557, line: 961, column: 6)
!7567 = !DILocation(line: 961, column: 26, scope: !7566)
!7568 = !DILocation(line: 961, column: 6, scope: !7559)
!7569 = !DILocation(line: 962, column: 3, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7566, file: !557, line: 961, column: 35)
!7571 = !DILocation(line: 963, column: 2, scope: !7570)
!7572 = !DILocation(line: 967, column: 1, scope: !7559)
!7573 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1019, file: !1019, line: 40, type: !941, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7574)
!7574 = !{!7575, !7576, !7577, !7578, !7580, !7581, !7586, !7587}
!7575 = !DILocalVariable(name: "port", arg: 1, scope: !7573, file: !1019, line: 40, type: !943)
!7576 = !DILocalVariable(name: "pin", arg: 2, scope: !7573, file: !1019, line: 40, type: !958)
!7577 = !DILocalVariable(name: "flags", arg: 3, scope: !7573, file: !1019, line: 41, type: !959)
!7578 = !DILocalVariable(name: "config", scope: !7573, file: !1019, line: 43, type: !7579)
!7579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!7580 = !DILocalVariable(name: "base", scope: !7573, file: !1019, line: 44, type: !1056)
!7581 = !DILocalVariable(name: "pin_cfg", scope: !7573, file: !1019, line: 52, type: !7582)
!7582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1072, line: 59, size: 160, elements: !7583)
!7583 = !{!7584, !7585}
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !7582, file: !1072, line: 60, baseType: !1071, size: 128)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !7582, file: !1072, line: 61, baseType: !404, size: 32, offset: 128)
!7586 = !DILocalVariable(name: "gpio_cfg_reg", scope: !7573, file: !1019, line: 54, type: !528)
!7587 = !DILocalVariable(name: "reg", scope: !7573, file: !1019, line: 56, type: !404)
!7588 = !DILocation(line: 0, scope: !7573)
!7589 = !DILocation(line: 43, column: 47, scope: !7573)
!7590 = !DILocation(line: 44, column: 28, scope: !7573)
!7591 = !DILocation(line: 46, column: 35, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7573, file: !1019, line: 46, column: 6)
!7593 = !DILocation(line: 52, column: 2, scope: !7573)
!7594 = !DILocation(line: 52, column: 25, scope: !7573)
!7595 = !DILocation(line: 55, column: 32, scope: !7573)
!7596 = !DILocation(line: 55, column: 24, scope: !7573)
!7597 = !DILocation(line: 55, column: 47, scope: !7573)
!7598 = !DILocation(line: 55, column: 3, scope: !7573)
!7599 = !DILocation(line: 56, column: 17, scope: !7573)
!7600 = !DILocation(line: 66, column: 13, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7573, file: !1019, line: 66, column: 6)
!7602 = !DILocation(line: 66, column: 34, scope: !7601)
!7603 = !DILocation(line: 66, column: 6, scope: !7573)
!7604 = !DILocation(line: 70, column: 36, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7573, file: !1019, line: 70, column: 6)
!7606 = !DILocation(line: 70, column: 14, scope: !7605)
!7607 = !DILocation(line: 70, column: 30, scope: !7605)
!7608 = !DILocation(line: 72, column: 7, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7605, file: !1019, line: 70, column: 72)
!7610 = !DILocation(line: 73, column: 8, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !1019, line: 72, column: 38)
!7612 = distinct !DILexicalBlock(scope: !7609, file: !1019, line: 72, column: 7)
!7613 = !DILocation(line: 74, column: 3, scope: !7611)
!7614 = !DILocation(line: 75, column: 8, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7612, file: !1019, line: 74, column: 10)
!7616 = !DILocation(line: 79, column: 7, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7605, file: !1019, line: 77, column: 9)
!7618 = !DILocation(line: 0, scope: !7605)
!7619 = !DILocation(line: 84, column: 27, scope: !7573)
!7620 = !DILocation(line: 84, column: 26, scope: !7573)
!7621 = !DILocation(line: 84, column: 2, scope: !7573)
!7622 = !DILocation(line: 86, column: 10, scope: !7573)
!7623 = !DILocation(line: 86, column: 25, scope: !7573)
!7624 = !DILocation(line: 87, column: 2, scope: !7573)
!7625 = !DILocation(line: 98, column: 2, scope: !7573)
!7626 = !DILocation(line: 99, column: 2, scope: !7573)
!7627 = !DILocation(line: 101, column: 6, scope: !7573)
!7628 = !DILocation(line: 103, column: 14, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !1019, line: 103, column: 7)
!7630 = distinct !DILexicalBlock(scope: !7631, file: !1019, line: 101, column: 35)
!7631 = distinct !DILexicalBlock(scope: !7573, file: !1019, line: 101, column: 6)
!7632 = !DILocation(line: 103, column: 38, scope: !7629)
!7633 = !DILocation(line: 103, column: 7, scope: !7630)
!7634 = !DILocation(line: 105, column: 21, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7629, file: !1019, line: 105, column: 14)
!7636 = !DILocation(line: 105, column: 46, scope: !7635)
!7637 = !DILocation(line: 105, column: 14, scope: !7629)
!7638 = !DILocation(line: 0, scope: !7629)
!7639 = !DILocation(line: 110, column: 3, scope: !7630)
!7640 = !DILocation(line: 111, column: 2, scope: !7630)
!7641 = !DILocation(line: 113, column: 3, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7631, file: !1019, line: 111, column: 9)
!7643 = !DILocation(line: 117, column: 1, scope: !7573)
!7644 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1019, file: !1019, line: 119, type: !7645, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7647)
!7645 = !DISubroutineType(types: !7646)
!7646 = !{!103, !943, !1344}
!7647 = !{!7648, !7649, !7650, !7651}
!7648 = !DILocalVariable(name: "port", arg: 1, scope: !7644, file: !1019, line: 119, type: !943)
!7649 = !DILocalVariable(name: "value", arg: 2, scope: !7644, file: !1019, line: 119, type: !1344)
!7650 = !DILocalVariable(name: "config", scope: !7644, file: !1019, line: 121, type: !7579)
!7651 = !DILocalVariable(name: "base", scope: !7644, file: !1019, line: 122, type: !1056)
!7652 = !DILocation(line: 0, scope: !7644)
!7653 = !DILocation(line: 121, column: 47, scope: !7644)
!7654 = !DILocation(line: 122, column: 28, scope: !7644)
!7655 = !DILocation(line: 124, column: 11, scope: !7644)
!7656 = !DILocation(line: 124, column: 9, scope: !7644)
!7657 = !DILocation(line: 126, column: 2, scope: !7644)
!7658 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1019, file: !1019, line: 129, type: !968, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7659)
!7659 = !{!7660, !7661, !7662, !7663, !7664}
!7660 = !DILocalVariable(name: "port", arg: 1, scope: !7658, file: !1019, line: 129, type: !943)
!7661 = !DILocalVariable(name: "mask", arg: 2, scope: !7658, file: !1019, line: 130, type: !970)
!7662 = !DILocalVariable(name: "value", arg: 3, scope: !7658, file: !1019, line: 131, type: !965)
!7663 = !DILocalVariable(name: "config", scope: !7658, file: !1019, line: 133, type: !7579)
!7664 = !DILocalVariable(name: "base", scope: !7658, file: !1019, line: 134, type: !1056)
!7665 = !DILocation(line: 0, scope: !7658)
!7666 = !DILocation(line: 133, column: 47, scope: !7658)
!7667 = !DILocation(line: 134, column: 28, scope: !7658)
!7668 = !DILocation(line: 137, column: 5, scope: !7658)
!7669 = !DILocation(line: 137, column: 32, scope: !7658)
!7670 = !DILocation(line: 137, column: 30, scope: !7658)
!7671 = !DILocation(line: 137, column: 48, scope: !7658)
!7672 = !DILocation(line: 137, column: 39, scope: !7658)
!7673 = !DILocation(line: 136, column: 2, scope: !7658)
!7674 = !DILocation(line: 139, column: 2, scope: !7658)
!7675 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1019, file: !1019, line: 142, type: !973, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7676)
!7676 = !{!7677, !7678, !7679, !7680}
!7677 = !DILocalVariable(name: "port", arg: 1, scope: !7675, file: !1019, line: 142, type: !943)
!7678 = !DILocalVariable(name: "pins", arg: 2, scope: !7675, file: !1019, line: 143, type: !970)
!7679 = !DILocalVariable(name: "config", scope: !7675, file: !1019, line: 145, type: !7579)
!7680 = !DILocalVariable(name: "base", scope: !7675, file: !1019, line: 146, type: !1056)
!7681 = !DILocation(line: 0, scope: !7675)
!7682 = !DILocation(line: 145, column: 47, scope: !7675)
!7683 = !DILocation(line: 146, column: 28, scope: !7675)
!7684 = !DILocation(line: 148, column: 29, scope: !7675)
!7685 = !DILocation(line: 148, column: 54, scope: !7675)
!7686 = !DILocation(line: 148, column: 2, scope: !7675)
!7687 = !DILocation(line: 150, column: 2, scope: !7675)
!7688 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1019, file: !1019, line: 153, type: !973, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7689)
!7689 = !{!7690, !7691, !7692, !7693}
!7690 = !DILocalVariable(name: "port", arg: 1, scope: !7688, file: !1019, line: 153, type: !943)
!7691 = !DILocalVariable(name: "pins", arg: 2, scope: !7688, file: !1019, line: 154, type: !970)
!7692 = !DILocalVariable(name: "config", scope: !7688, file: !1019, line: 156, type: !7579)
!7693 = !DILocalVariable(name: "base", scope: !7688, file: !1019, line: 157, type: !1056)
!7694 = !DILocation(line: 0, scope: !7688)
!7695 = !DILocation(line: 156, column: 47, scope: !7688)
!7696 = !DILocation(line: 157, column: 28, scope: !7688)
!7697 = !DILocation(line: 159, column: 29, scope: !7688)
!7698 = !DILocation(line: 159, column: 56, scope: !7688)
!7699 = !DILocation(line: 159, column: 54, scope: !7688)
!7700 = !DILocation(line: 159, column: 2, scope: !7688)
!7701 = !DILocation(line: 161, column: 2, scope: !7688)
!7702 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1019, file: !1019, line: 164, type: !973, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7703)
!7703 = !{!7704, !7705, !7706, !7707}
!7704 = !DILocalVariable(name: "port", arg: 1, scope: !7702, file: !1019, line: 164, type: !943)
!7705 = !DILocalVariable(name: "pins", arg: 2, scope: !7702, file: !1019, line: 165, type: !970)
!7706 = !DILocalVariable(name: "config", scope: !7702, file: !1019, line: 167, type: !7579)
!7707 = !DILocalVariable(name: "base", scope: !7702, file: !1019, line: 168, type: !1056)
!7708 = !DILocation(line: 0, scope: !7702)
!7709 = !DILocation(line: 167, column: 47, scope: !7702)
!7710 = !DILocation(line: 168, column: 28, scope: !7702)
!7711 = !DILocation(line: 170, column: 29, scope: !7702)
!7712 = !DILocation(line: 170, column: 54, scope: !7702)
!7713 = !DILocation(line: 170, column: 2, scope: !7702)
!7714 = !DILocation(line: 172, column: 2, scope: !7702)
!7715 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1019, file: !1019, line: 175, type: !979, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7716)
!7716 = !{!7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7725, !7726}
!7717 = !DILocalVariable(name: "port", arg: 1, scope: !7715, file: !1019, line: 175, type: !943)
!7718 = !DILocalVariable(name: "pin", arg: 2, scope: !7715, file: !1019, line: 176, type: !958)
!7719 = !DILocalVariable(name: "mode", arg: 3, scope: !7715, file: !1019, line: 177, type: !918)
!7720 = !DILocalVariable(name: "trig", arg: 4, scope: !7715, file: !1019, line: 178, type: !924)
!7721 = !DILocalVariable(name: "config", scope: !7715, file: !1019, line: 180, type: !7579)
!7722 = !DILocalVariable(name: "base", scope: !7715, file: !1019, line: 181, type: !1056)
!7723 = !DILocalVariable(name: "icr_reg", scope: !7715, file: !1019, line: 182, type: !528)
!7724 = !DILocalVariable(name: "key", scope: !7715, file: !1019, line: 183, type: !32)
!7725 = !DILocalVariable(name: "icr_val", scope: !7715, file: !1019, line: 184, type: !404)
!7726 = !DILocalVariable(name: "shift", scope: !7715, file: !1019, line: 185, type: !410)
!7727 = !DILocation(line: 0, scope: !7715)
!7728 = !DILocation(line: 180, column: 47, scope: !7715)
!7729 = !DILocation(line: 181, column: 28, scope: !7715)
!7730 = !DILocation(line: 187, column: 14, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7715, file: !1019, line: 187, column: 6)
!7732 = !DILocation(line: 187, column: 21, scope: !7731)
!7733 = !DILocation(line: 187, column: 19, scope: !7731)
!7734 = !DILocation(line: 187, column: 31, scope: !7731)
!7735 = !DILocation(line: 188, column: 6, scope: !7731)
!7736 = !DILocation(line: 193, column: 12, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7715, file: !1019, line: 193, column: 6)
!7738 = !DILocation(line: 193, column: 35, scope: !7737)
!7739 = !DILocation(line: 195, column: 42, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7737, file: !1019, line: 195, column: 13)
!7741 = !DILocation(line: 198, column: 19, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7740, file: !1019, line: 198, column: 13)
!7743 = !DILocation(line: 198, column: 43, scope: !7742)
!7744 = !DILocation(line: 0, scope: !7737)
!7745 = !DILocation(line: 205, column: 10, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7715, file: !1019, line: 205, column: 6)
!7747 = !DILocation(line: 205, column: 6, scope: !7715)
!7748 = !DILocation(line: 206, column: 14, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7746, file: !1019, line: 205, column: 17)
!7750 = !DILocation(line: 207, column: 21, scope: !7749)
!7751 = !DILocation(line: 208, column: 2, scope: !7749)
!7752 = !DILocation(line: 208, column: 17, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7746, file: !1019, line: 208, column: 13)
!7754 = !DILocation(line: 208, column: 13, scope: !7746)
!7755 = !DILocation(line: 209, column: 14, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7753, file: !1019, line: 208, column: 24)
!7757 = !DILocation(line: 210, column: 21, scope: !7756)
!7758 = !DILocation(line: 0, scope: !7746)
!7759 = !DILocation(line: 55, column: 2, scope: !7760, inlinedAt: !7766)
!7760 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5762, file: !5762, line: 42, type: !7761, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7763)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{!32}
!7763 = !{!7764, !7765}
!7764 = !DILocalVariable(name: "key", scope: !7760, file: !5762, line: 44, type: !32)
!7765 = !DILocalVariable(name: "tmp", scope: !7760, file: !5762, line: 53, type: !32)
!7766 = distinct !DILocation(line: 215, column: 8, scope: !7715)
!7767 = !{i64 3015091}
!7768 = !DILocation(line: 0, scope: !7760, inlinedAt: !7766)
!7769 = !DILocation(line: 217, column: 14, scope: !7715)
!7770 = !DILocation(line: 217, column: 33, scope: !7715)
!7771 = !DILocation(line: 217, column: 30, scope: !7715)
!7772 = !DILocation(line: 217, column: 25, scope: !7715)
!7773 = !DILocation(line: 217, column: 23, scope: !7715)
!7774 = !DILocation(line: 217, column: 52, scope: !7715)
!7775 = !DILocation(line: 217, column: 41, scope: !7715)
!7776 = !DILocation(line: 217, column: 11, scope: !7715)
!7777 = !DILocation(line: 219, column: 2, scope: !7715)
!7778 = !DILocation(line: 220, column: 2, scope: !7715)
!7779 = !DILocation(line: 221, column: 2, scope: !7715)
!7780 = !DILocalVariable(name: "key", arg: 1, scope: !7781, file: !5762, line: 84, type: !32)
!7781 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5762, file: !5762, line: 84, type: !5598, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7782)
!7782 = !{!7780}
!7783 = !DILocation(line: 0, scope: !7781, inlinedAt: !7784)
!7784 = distinct !DILocation(line: 223, column: 2, scope: !7715)
!7785 = !DILocation(line: 95, column: 2, scope: !7781, inlinedAt: !7784)
!7786 = !{i64 3015908}
!7787 = !DILocation(line: 225, column: 2, scope: !7715)
!7788 = !DILocation(line: 226, column: 1, scope: !7715)
!7789 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1019, file: !1019, line: 228, type: !983, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7790)
!7790 = !{!7791, !7792, !7793, !7794}
!7791 = !DILocalVariable(name: "port", arg: 1, scope: !7789, file: !1019, line: 228, type: !943)
!7792 = !DILocalVariable(name: "cb", arg: 2, scope: !7789, file: !1019, line: 229, type: !985)
!7793 = !DILocalVariable(name: "set", arg: 3, scope: !7789, file: !1019, line: 229, type: !580)
!7794 = !DILocalVariable(name: "data", scope: !7789, file: !1019, line: 231, type: !7795)
!7795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!7796 = !DILocation(line: 0, scope: !7789)
!7797 = !DILocation(line: 231, column: 37, scope: !7789)
!7798 = !DILocation(line: 233, column: 37, scope: !7789)
!7799 = !DILocation(line: 233, column: 9, scope: !7789)
!7800 = !DILocation(line: 233, column: 2, scope: !7789)
!7801 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7802, file: !7802, line: 38, type: !7803, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7806)
!7802 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7803 = !DISubroutineType(types: !7804)
!7804 = !{!103, !7805, !985, !580}
!7805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!7806 = !{!7807, !7808, !7809}
!7807 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7801, file: !7802, line: 38, type: !7805)
!7808 = !DILocalVariable(name: "callback", arg: 2, scope: !7801, file: !7802, line: 39, type: !985)
!7809 = !DILocalVariable(name: "set", arg: 3, scope: !7801, file: !7802, line: 40, type: !580)
!7810 = !DILocation(line: 0, scope: !7801)
!7811 = !DILocation(line: 45, column: 7, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7801, file: !7802, line: 45, column: 6)
!7813 = !DILocation(line: 45, column: 6, scope: !7801)
!7814 = !DILocation(line: 46, column: 56, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !7802, line: 46, column: 7)
!7816 = distinct !DILexicalBlock(scope: !7812, file: !7802, line: 45, column: 38)
!7817 = !DILocation(line: 46, column: 8, scope: !7815)
!7818 = !DILocation(line: 46, column: 7, scope: !7816)
!7819 = !DILocation(line: 51, column: 13, scope: !7812)
!7820 = !DILocation(line: 56, column: 43, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !7802, line: 55, column: 11)
!7822 = distinct !DILexicalBlock(scope: !7801, file: !7802, line: 55, column: 6)
!7823 = !DILocation(line: 56, column: 3, scope: !7821)
!7824 = !DILocation(line: 57, column: 2, scope: !7821)
!7825 = !DILocation(line: 60, column: 1, scope: !7801)
!7826 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !990, file: !990, line: 261, type: !7827, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7829)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{!580, !7805}
!7829 = !{!7830}
!7830 = !DILocalVariable(name: "list", arg: 1, scope: !7826, file: !990, line: 261, type: !7805)
!7831 = !DILocation(line: 0, scope: !7826)
!7832 = !DILocation(line: 261, column: 1, scope: !7826)
!7833 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !990, file: !990, line: 417, type: !7834, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7836)
!7834 = !DISubroutineType(types: !7835)
!7835 = !{!580, !7805, !1045}
!7836 = !{!7837, !7838, !7839, !7840}
!7837 = !DILocalVariable(name: "list", arg: 1, scope: !7833, file: !990, line: 417, type: !7805)
!7838 = !DILocalVariable(name: "node", arg: 2, scope: !7833, file: !990, line: 417, type: !1045)
!7839 = !DILocalVariable(name: "prev", scope: !7833, file: !990, line: 417, type: !1045)
!7840 = !DILocalVariable(name: "test", scope: !7833, file: !990, line: 417, type: !1045)
!7841 = !DILocation(line: 0, scope: !7833)
!7842 = !DILocation(line: 417, column: 1, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7833, file: !990, line: 417, column: 1)
!7844 = !DILocation(line: 417, column: 1, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7843, file: !990, line: 417, column: 1)
!7846 = !DILocation(line: 417, column: 1, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !990, line: 417, column: 1)
!7848 = distinct !DILexicalBlock(scope: !7845, file: !990, line: 417, column: 1)
!7849 = !DILocation(line: 417, column: 1, scope: !7848)
!7850 = distinct !{!7850, !7842, !7842}
!7851 = !DILocation(line: 417, column: 1, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7847, file: !990, line: 417, column: 1)
!7853 = !DILocation(line: 417, column: 1, scope: !7833)
!7854 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !990, file: !990, line: 298, type: !7855, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7857)
!7855 = !DISubroutineType(types: !7856)
!7856 = !{null, !7805, !1045}
!7857 = !{!7858, !7859}
!7858 = !DILocalVariable(name: "list", arg: 1, scope: !7854, file: !990, line: 298, type: !7805)
!7859 = !DILocalVariable(name: "node", arg: 2, scope: !7854, file: !990, line: 298, type: !1045)
!7860 = !DILocation(line: 0, scope: !7854)
!7861 = !DILocation(line: 298, column: 1, scope: !7854)
!7862 = !DILocation(line: 298, column: 1, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7854, file: !990, line: 298, column: 1)
!7864 = !DILocation(line: 298, column: 1, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7863, file: !990, line: 298, column: 1)
!7866 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !990, file: !990, line: 231, type: !7867, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7869)
!7867 = !DISubroutineType(types: !7868)
!7868 = !{!1045, !7805}
!7869 = !{!7870}
!7870 = !DILocalVariable(name: "list", arg: 1, scope: !7866, file: !990, line: 231, type: !7805)
!7871 = !DILocation(line: 0, scope: !7866)
!7872 = !DILocation(line: 233, column: 15, scope: !7866)
!7873 = !DILocation(line: 233, column: 2, scope: !7866)
!7874 = distinct !DISubprogram(name: "z_snode_next_set", scope: !990, file: !990, line: 209, type: !7875, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7877)
!7875 = !DISubroutineType(types: !7876)
!7876 = !{null, !1045, !1045}
!7877 = !{!7878, !7879}
!7878 = !DILocalVariable(name: "parent", arg: 1, scope: !7874, file: !990, line: 209, type: !1045)
!7879 = !DILocalVariable(name: "child", arg: 2, scope: !7874, file: !990, line: 209, type: !1045)
!7880 = !DILocation(line: 0, scope: !7874)
!7881 = !DILocation(line: 211, column: 10, scope: !7874)
!7882 = !DILocation(line: 211, column: 15, scope: !7874)
!7883 = !DILocation(line: 212, column: 1, scope: !7874)
!7884 = distinct !DISubprogram(name: "z_slist_head_set", scope: !990, file: !990, line: 214, type: !7855, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7885)
!7885 = !{!7886, !7887}
!7886 = !DILocalVariable(name: "list", arg: 1, scope: !7884, file: !990, line: 214, type: !7805)
!7887 = !DILocalVariable(name: "node", arg: 2, scope: !7884, file: !990, line: 214, type: !1045)
!7888 = !DILocation(line: 0, scope: !7884)
!7889 = !DILocation(line: 216, column: 8, scope: !7884)
!7890 = !DILocation(line: 216, column: 13, scope: !7884)
!7891 = !DILocation(line: 217, column: 1, scope: !7884)
!7892 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !990, file: !990, line: 243, type: !7867, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7893)
!7893 = !{!7894}
!7894 = !DILocalVariable(name: "list", arg: 1, scope: !7892, file: !990, line: 243, type: !7805)
!7895 = !DILocation(line: 0, scope: !7892)
!7896 = !DILocation(line: 245, column: 15, scope: !7892)
!7897 = !DILocation(line: 245, column: 2, scope: !7892)
!7898 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !990, file: !990, line: 219, type: !7855, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7899)
!7899 = !{!7900, !7901}
!7900 = !DILocalVariable(name: "list", arg: 1, scope: !7898, file: !990, line: 219, type: !7805)
!7901 = !DILocalVariable(name: "node", arg: 2, scope: !7898, file: !990, line: 219, type: !1045)
!7902 = !DILocation(line: 0, scope: !7898)
!7903 = !DILocation(line: 221, column: 8, scope: !7898)
!7904 = !DILocation(line: 221, column: 13, scope: !7898)
!7905 = !DILocation(line: 222, column: 1, scope: !7898)
!7906 = distinct !DISubprogram(name: "sys_slist_remove", scope: !990, file: !990, line: 401, type: !7907, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7909)
!7907 = !DISubroutineType(types: !7908)
!7908 = !{null, !7805, !1045, !1045}
!7909 = !{!7910, !7911, !7912}
!7910 = !DILocalVariable(name: "list", arg: 1, scope: !7906, file: !990, line: 401, type: !7805)
!7911 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7906, file: !990, line: 401, type: !1045)
!7912 = !DILocalVariable(name: "node", arg: 3, scope: !7906, file: !990, line: 401, type: !1045)
!7913 = !DILocation(line: 0, scope: !7906)
!7914 = !DILocation(line: 401, column: 1, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7906, file: !990, line: 401, column: 1)
!7916 = !DILocation(line: 0, scope: !7915)
!7917 = !DILocation(line: 401, column: 1, scope: !7906)
!7918 = !DILocation(line: 401, column: 1, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7915, file: !990, line: 401, column: 1)
!7920 = !DILocation(line: 401, column: 1, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7919, file: !990, line: 401, column: 1)
!7922 = !DILocation(line: 401, column: 1, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7921, file: !990, line: 401, column: 1)
!7924 = !DILocation(line: 401, column: 1, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7915, file: !990, line: 401, column: 1)
!7926 = !DILocation(line: 401, column: 1, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7925, file: !990, line: 401, column: 1)
!7928 = !DILocation(line: 401, column: 1, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7927, file: !990, line: 401, column: 1)
!7930 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !990, file: !990, line: 285, type: !7931, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7933)
!7931 = !DISubroutineType(types: !7932)
!7932 = !{!1045, !1045}
!7933 = !{!7934}
!7934 = !DILocalVariable(name: "node", arg: 1, scope: !7930, file: !990, line: 285, type: !1045)
!7935 = !DILocation(line: 0, scope: !7930)
!7936 = !DILocation(line: 285, column: 1, scope: !7930)
!7937 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !990, file: !990, line: 274, type: !7931, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7938)
!7938 = !{!7939}
!7939 = !DILocalVariable(name: "node", arg: 1, scope: !7937, file: !990, line: 274, type: !1045)
!7940 = !DILocation(line: 0, scope: !7937)
!7941 = !DILocation(line: 274, column: 1, scope: !7937)
!7942 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !990, file: !990, line: 204, type: !7931, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7943)
!7943 = !{!7944}
!7944 = !DILocalVariable(name: "node", arg: 1, scope: !7942, file: !990, line: 204, type: !1045)
!7945 = !DILocation(line: 0, scope: !7942)
!7946 = !DILocation(line: 206, column: 15, scope: !7942)
!7947 = !DILocation(line: 206, column: 2, scope: !7942)
!7948 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !930, file: !930, line: 131, type: !7949, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7951)
!7949 = !DISubroutineType(types: !7950)
!7950 = !{!404, !1056}
!7951 = !{!7952}
!7952 = !DILocalVariable(name: "base", arg: 1, scope: !7948, file: !930, line: 131, type: !1056)
!7953 = !DILocation(line: 0, scope: !7948)
!7954 = !DILocation(line: 133, column: 12, scope: !7948)
!7955 = !DILocation(line: 133, column: 5, scope: !7948)
!7956 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !930, file: !930, line: 178, type: !7957, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7959)
!7957 = !DISubroutineType(types: !7958)
!7958 = !{null, !1056, !404}
!7959 = !{!7960, !7961}
!7960 = !DILocalVariable(name: "base", arg: 1, scope: !7956, file: !930, line: 178, type: !1056)
!7961 = !DILocalVariable(name: "portVal", arg: 2, scope: !7956, file: !930, line: 178, type: !404)
!7962 = !DILocation(line: 0, scope: !7956)
!7963 = !DILocation(line: 180, column: 5, scope: !7956)
!7964 = !DILocation(line: 180, column: 23, scope: !7956)
!7965 = !DILocation(line: 181, column: 1, scope: !7956)
!7966 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1019, file: !1019, line: 236, type: !7967, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7969)
!7967 = !DISubroutineType(types: !7968)
!7968 = !{null, !943}
!7969 = !{!7970, !7971, !7972, !7973}
!7970 = !DILocalVariable(name: "port", arg: 1, scope: !7966, file: !1019, line: 236, type: !943)
!7971 = !DILocalVariable(name: "config", scope: !7966, file: !1019, line: 238, type: !7579)
!7972 = !DILocalVariable(name: "data", scope: !7966, file: !1019, line: 239, type: !7795)
!7973 = !DILocalVariable(name: "int_status", scope: !7966, file: !1019, line: 240, type: !404)
!7974 = !DILocation(line: 0, scope: !7966)
!7975 = !DILocation(line: 238, column: 47, scope: !7966)
!7976 = !DILocation(line: 239, column: 37, scope: !7966)
!7977 = !DILocation(line: 242, column: 23, scope: !7966)
!7978 = !DILocation(line: 242, column: 29, scope: !7966)
!7979 = !DILocation(line: 244, column: 20, scope: !7966)
!7980 = !DILocation(line: 246, column: 29, scope: !7966)
!7981 = !DILocation(line: 246, column: 2, scope: !7966)
!7982 = !DILocation(line: 247, column: 1, scope: !7966)
!7983 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7802, file: !7802, line: 69, type: !7984, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !7986)
!7984 = !DISubroutineType(types: !7985)
!7985 = !{null, !7805, !943, !404}
!7986 = !{!7987, !7988, !7989, !7990, !7991}
!7987 = !DILocalVariable(name: "list", arg: 1, scope: !7983, file: !7802, line: 69, type: !7805)
!7988 = !DILocalVariable(name: "port", arg: 2, scope: !7983, file: !7802, line: 70, type: !943)
!7989 = !DILocalVariable(name: "pins", arg: 3, scope: !7983, file: !7802, line: 71, type: !404)
!7990 = !DILocalVariable(name: "cb", scope: !7983, file: !7802, line: 73, type: !985)
!7991 = !DILocalVariable(name: "tmp", scope: !7983, file: !7802, line: 73, type: !985)
!7992 = !DILocation(line: 0, scope: !7983)
!7993 = !DILocation(line: 75, column: 2, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7983, file: !7802, line: 75, column: 2)
!7995 = !DILocation(line: 0, scope: !7994)
!7996 = !DILocation(line: 76, column: 11, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !7802, line: 76, column: 7)
!7998 = distinct !DILexicalBlock(scope: !7999, file: !7802, line: 75, column: 57)
!7999 = distinct !DILexicalBlock(scope: !7994, file: !7802, line: 75, column: 2)
!8000 = !DILocation(line: 76, column: 20, scope: !7997)
!8001 = !DILocation(line: 76, column: 7, scope: !7998)
!8002 = !DILocation(line: 78, column: 8, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7997, file: !7802, line: 76, column: 28)
!8004 = !DILocation(line: 78, column: 4, scope: !8003)
!8005 = !DILocation(line: 79, column: 3, scope: !8003)
!8006 = !DILocation(line: 75, column: 2, scope: !7999)
!8007 = !DILocation(line: 81, column: 1, scope: !7983)
!8008 = !DILocation(line: 0, scope: !1084)
!8009 = !DILocation(line: 318, column: 1, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !1084, file: !1019, line: 318, column: 1)
!8011 = !DILocation(line: 318, column: 1, scope: !1084)
!8012 = !DILocation(line: 318, column: 1, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !1084, file: !1019, line: 318, column: 1)
!8014 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1309, file: !1309, line: 114, type: !1207, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8015)
!8015 = !{!8016, !8017, !8018, !8019}
!8016 = !DILocalVariable(name: "dev", arg: 1, scope: !8014, file: !1309, line: 114, type: !1209)
!8017 = !DILocalVariable(name: "c", arg: 2, scope: !8014, file: !1309, line: 114, type: !588)
!8018 = !DILocalVariable(name: "uart", scope: !8014, file: !1309, line: 116, type: !1280)
!8019 = !DILocalVariable(name: "ret", scope: !8014, file: !1309, line: 117, type: !103)
!8020 = !DILocation(line: 0, scope: !8014)
!8021 = !DILocation(line: 116, column: 20, scope: !8014)
!8022 = !DILocation(line: 119, column: 6, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8014, file: !1309, line: 119, column: 6)
!8024 = !DILocation(line: 119, column: 6, scope: !8014)
!8025 = !DILocation(line: 120, column: 8, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8023, file: !1309, line: 119, column: 55)
!8027 = !DILocation(line: 120, column: 6, scope: !8026)
!8028 = !DILocation(line: 122, column: 7, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8026, file: !1309, line: 122, column: 7)
!8030 = !DILocation(line: 122, column: 7, scope: !8026)
!8031 = !DILocation(line: 123, column: 4, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8029, file: !1309, line: 122, column: 54)
!8033 = !DILocation(line: 124, column: 3, scope: !8032)
!8034 = !DILocation(line: 128, column: 2, scope: !8014)
!8035 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1309, file: !1309, line: 105, type: !1226, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8036)
!8036 = !{!8037, !8038, !8039}
!8037 = !DILocalVariable(name: "dev", arg: 1, scope: !8035, file: !1309, line: 105, type: !1209)
!8038 = !DILocalVariable(name: "c", arg: 2, scope: !8035, file: !1309, line: 105, type: !411)
!8039 = !DILocalVariable(name: "uart", scope: !8035, file: !1309, line: 107, type: !1280)
!8040 = !DILocation(line: 0, scope: !8035)
!8041 = !DILocation(line: 107, column: 20, scope: !8035)
!8042 = !DILocation(line: 109, column: 2, scope: !8035)
!8043 = !DILocation(line: 109, column: 10, scope: !8035)
!8044 = distinct !{!8044, !8042, !8045}
!8045 = !DILocation(line: 110, column: 2, scope: !8035)
!8046 = !DILocation(line: 111, column: 2, scope: !8035)
!8047 = !DILocation(line: 112, column: 1, scope: !8035)
!8048 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1309, file: !1309, line: 133, type: !1252, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8049)
!8049 = !{!8050, !8051, !8052, !8053, !8054}
!8050 = !DILocalVariable(name: "dev", arg: 1, scope: !8048, file: !1309, line: 133, type: !1209)
!8051 = !DILocalVariable(name: "tx_data", arg: 2, scope: !8048, file: !1309, line: 134, type: !619)
!8052 = !DILocalVariable(name: "size", arg: 3, scope: !8048, file: !1309, line: 135, type: !103)
!8053 = !DILocalVariable(name: "uart", scope: !8048, file: !1309, line: 137, type: !1280)
!8054 = !DILocalVariable(name: "num_tx", scope: !8048, file: !1309, line: 138, type: !32)
!8055 = !DILocation(line: 0, scope: !8048)
!8056 = !DILocation(line: 137, column: 20, scope: !8048)
!8057 = !DILocation(line: 140, column: 26, scope: !8048)
!8058 = !DILocation(line: 140, column: 31, scope: !8048)
!8059 = !DILocation(line: 141, column: 6, scope: !8048)
!8060 = !DILocation(line: 140, column: 2, scope: !8048)
!8061 = !DILocation(line: 143, column: 22, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8048, file: !1309, line: 141, column: 51)
!8063 = !DILocation(line: 143, column: 3, scope: !8062)
!8064 = !DILocation(line: 144, column: 9, scope: !8062)
!8065 = distinct !{!8065, !8060, !8066}
!8066 = !DILocation(line: 145, column: 2, scope: !8048)
!8067 = !DILocation(line: 147, column: 2, scope: !8048)
!8068 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1309, file: !1309, line: 150, type: !1256, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8069)
!8069 = !{!8070, !8071, !8072, !8073, !8074}
!8070 = !DILocalVariable(name: "dev", arg: 1, scope: !8068, file: !1309, line: 150, type: !1209)
!8071 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8068, file: !1309, line: 150, type: !625)
!8072 = !DILocalVariable(name: "size", arg: 3, scope: !8068, file: !1309, line: 151, type: !626)
!8073 = !DILocalVariable(name: "uart", scope: !8068, file: !1309, line: 153, type: !1280)
!8074 = !DILocalVariable(name: "num_rx", scope: !8068, file: !1309, line: 154, type: !32)
!8075 = !DILocation(line: 0, scope: !8068)
!8076 = !DILocation(line: 153, column: 20, scope: !8068)
!8077 = !DILocation(line: 156, column: 26, scope: !8068)
!8078 = !DILocation(line: 156, column: 31, scope: !8068)
!8079 = !DILocation(line: 157, column: 6, scope: !8068)
!8080 = !DILocation(line: 156, column: 2, scope: !8068)
!8081 = !DILocation(line: 159, column: 23, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8068, file: !1309, line: 157, column: 51)
!8083 = !DILocation(line: 159, column: 17, scope: !8082)
!8084 = !DILocation(line: 159, column: 3, scope: !8082)
!8085 = !DILocation(line: 159, column: 21, scope: !8082)
!8086 = distinct !{!8086, !8080, !8087}
!8087 = !DILocation(line: 160, column: 2, scope: !8068)
!8088 = !DILocation(line: 162, column: 6, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8068, file: !1309, line: 162, column: 6)
!8090 = !DILocation(line: 162, column: 6, scope: !8068)
!8091 = !DILocation(line: 163, column: 3, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8089, file: !1309, line: 162, column: 53)
!8093 = !DILocation(line: 164, column: 2, scope: !8092)
!8094 = !DILocation(line: 166, column: 2, scope: !8068)
!8095 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1309, file: !1309, line: 169, type: !1260, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8096)
!8096 = !{!8097, !8098}
!8097 = !DILocalVariable(name: "dev", arg: 1, scope: !8095, file: !1309, line: 169, type: !1209)
!8098 = !DILocalVariable(name: "uart", scope: !8095, file: !1309, line: 171, type: !1280)
!8099 = !DILocation(line: 0, scope: !8095)
!8100 = !DILocation(line: 171, column: 20, scope: !8095)
!8101 = !DILocation(line: 173, column: 2, scope: !8095)
!8102 = !DILocation(line: 174, column: 1, scope: !8095)
!8103 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1309, file: !1309, line: 176, type: !1260, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8104)
!8104 = !{!8105, !8106}
!8105 = !DILocalVariable(name: "dev", arg: 1, scope: !8103, file: !1309, line: 176, type: !1209)
!8106 = !DILocalVariable(name: "uart", scope: !8103, file: !1309, line: 178, type: !1280)
!8107 = !DILocation(line: 0, scope: !8103)
!8108 = !DILocation(line: 178, column: 20, scope: !8103)
!8109 = !DILocation(line: 180, column: 2, scope: !8103)
!8110 = !DILocation(line: 181, column: 1, scope: !8103)
!8111 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1309, file: !1309, line: 183, type: !1230, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8112)
!8112 = !{!8113, !8114}
!8113 = !DILocalVariable(name: "dev", arg: 1, scope: !8111, file: !1309, line: 183, type: !1209)
!8114 = !DILocalVariable(name: "uart", scope: !8111, file: !1309, line: 185, type: !1280)
!8115 = !DILocation(line: 0, scope: !8111)
!8116 = !DILocation(line: 185, column: 20, scope: !8111)
!8117 = !DILocation(line: 187, column: 9, scope: !8111)
!8118 = !DILocation(line: 187, column: 2, scope: !8111)
!8119 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1309, file: !1309, line: 190, type: !1260, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8120)
!8120 = !{!8121, !8122}
!8121 = !DILocalVariable(name: "dev", arg: 1, scope: !8119, file: !1309, line: 190, type: !1209)
!8122 = !DILocalVariable(name: "uart", scope: !8119, file: !1309, line: 192, type: !1280)
!8123 = !DILocation(line: 0, scope: !8119)
!8124 = !DILocation(line: 192, column: 20, scope: !8119)
!8125 = !DILocation(line: 194, column: 2, scope: !8119)
!8126 = !DILocation(line: 195, column: 1, scope: !8119)
!8127 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1309, file: !1309, line: 197, type: !1260, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8128)
!8128 = !{!8129, !8130}
!8129 = !DILocalVariable(name: "dev", arg: 1, scope: !8127, file: !1309, line: 197, type: !1209)
!8130 = !DILocalVariable(name: "uart", scope: !8127, file: !1309, line: 199, type: !1280)
!8131 = !DILocation(line: 0, scope: !8127)
!8132 = !DILocation(line: 199, column: 20, scope: !8127)
!8133 = !DILocation(line: 201, column: 2, scope: !8127)
!8134 = !DILocation(line: 202, column: 1, scope: !8127)
!8135 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1309, file: !1309, line: 204, type: !1230, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8136)
!8136 = !{!8137, !8138}
!8137 = !DILocalVariable(name: "dev", arg: 1, scope: !8135, file: !1309, line: 204, type: !1209)
!8138 = !DILocalVariable(name: "uart", scope: !8135, file: !1309, line: 206, type: !1280)
!8139 = !DILocation(line: 0, scope: !8135)
!8140 = !DILocation(line: 206, column: 20, scope: !8135)
!8141 = !DILocation(line: 208, column: 9, scope: !8135)
!8142 = !DILocation(line: 208, column: 2, scope: !8135)
!8143 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1309, file: !1309, line: 211, type: !1260, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8144)
!8144 = !{!8145, !8146}
!8145 = !DILocalVariable(name: "dev", arg: 1, scope: !8143, file: !1309, line: 211, type: !1209)
!8146 = !DILocalVariable(name: "uart", scope: !8143, file: !1309, line: 213, type: !1280)
!8147 = !DILocation(line: 0, scope: !8143)
!8148 = !DILocation(line: 213, column: 20, scope: !8143)
!8149 = !DILocation(line: 215, column: 2, scope: !8143)
!8150 = !DILocation(line: 216, column: 2, scope: !8143)
!8151 = !DILocation(line: 217, column: 1, scope: !8143)
!8152 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1309, file: !1309, line: 219, type: !1260, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8153)
!8153 = !{!8154, !8155}
!8154 = !DILocalVariable(name: "dev", arg: 1, scope: !8152, file: !1309, line: 219, type: !1209)
!8155 = !DILocalVariable(name: "uart", scope: !8152, file: !1309, line: 221, type: !1280)
!8156 = !DILocation(line: 0, scope: !8152)
!8157 = !DILocation(line: 221, column: 20, scope: !8152)
!8158 = !DILocation(line: 223, column: 2, scope: !8152)
!8159 = !DILocation(line: 224, column: 2, scope: !8152)
!8160 = !DILocation(line: 225, column: 1, scope: !8152)
!8161 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1309, file: !1309, line: 227, type: !1230, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8162)
!8162 = !{!8163, !8164}
!8163 = !DILocalVariable(name: "dev", arg: 1, scope: !8161, file: !1309, line: 227, type: !1209)
!8164 = !DILocalVariable(name: "uart", scope: !8161, file: !1309, line: 229, type: !1280)
!8165 = !DILocation(line: 0, scope: !8161)
!8166 = !DILocation(line: 229, column: 20, scope: !8161)
!8167 = !DILocation(line: 231, column: 9, scope: !8161)
!8168 = !DILocation(line: 231, column: 53, scope: !8161)
!8169 = !DILocation(line: 232, column: 3, scope: !8161)
!8170 = !DILocation(line: 231, column: 2, scope: !8161)
!8171 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1309, file: !1309, line: 235, type: !1230, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8172)
!8172 = !{!8173}
!8173 = !DILocalVariable(name: "dev", arg: 1, scope: !8171, file: !1309, line: 235, type: !1209)
!8174 = !DILocation(line: 0, scope: !8171)
!8175 = !DILocation(line: 237, column: 2, scope: !8171)
!8176 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1309, file: !1309, line: 240, type: !1274, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8177)
!8177 = !{!8178, !8179, !8180, !8181}
!8178 = !DILocalVariable(name: "dev", arg: 1, scope: !8176, file: !1309, line: 240, type: !1209)
!8179 = !DILocalVariable(name: "cb", arg: 2, scope: !8176, file: !1309, line: 241, type: !1276)
!8180 = !DILocalVariable(name: "cb_data", arg: 3, scope: !8176, file: !1309, line: 242, type: !102)
!8181 = !DILocalVariable(name: "data", scope: !8176, file: !1309, line: 244, type: !8182)
!8182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!8183 = !DILocation(line: 0, scope: !8176)
!8184 = !DILocation(line: 244, column: 36, scope: !8176)
!8185 = !DILocation(line: 246, column: 8, scope: !8176)
!8186 = !DILocation(line: 246, column: 17, scope: !8176)
!8187 = !DILocation(line: 247, column: 8, scope: !8176)
!8188 = !DILocation(line: 247, column: 16, scope: !8176)
!8189 = !DILocation(line: 248, column: 1, scope: !8176)
!8190 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1116, file: !1116, line: 392, type: !8191, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8193)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{!580, !1280, !404}
!8193 = !{!8194, !8195, !8196}
!8194 = !DILocalVariable(name: "base", arg: 1, scope: !8190, file: !1116, line: 392, type: !1280)
!8195 = !DILocalVariable(name: "flag", arg: 2, scope: !8190, file: !1116, line: 392, type: !404)
!8196 = !DILocalVariable(name: "uart_reg", scope: !8190, file: !1116, line: 393, type: !528)
!8197 = !DILocation(line: 0, scope: !8190)
!8198 = !DILocation(line: 395, column: 29, scope: !8190)
!8199 = !DILocation(line: 395, column: 52, scope: !8190)
!8200 = !DILocation(line: 395, column: 44, scope: !8190)
!8201 = !DILocation(line: 395, column: 16, scope: !8190)
!8202 = !DILocation(line: 396, column: 20, scope: !8190)
!8203 = !DILocation(line: 396, column: 39, scope: !8190)
!8204 = !DILocation(line: 396, column: 12, scope: !8190)
!8205 = !DILocation(line: 396, column: 5, scope: !8190)
!8206 = distinct !DISubprogram(name: "UART_Getchar", scope: !1116, file: !1116, line: 358, type: !8207, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8209)
!8207 = !DISubroutineType(types: !8208)
!8208 = !{!410, !1280}
!8209 = !{!8210}
!8210 = !DILocalVariable(name: "base", arg: 1, scope: !8206, file: !1116, line: 358, type: !1280)
!8211 = !DILocation(line: 0, scope: !8206)
!8212 = !DILocation(line: 360, column: 22, scope: !8206)
!8213 = !DILocation(line: 360, column: 12, scope: !8206)
!8214 = !DILocation(line: 360, column: 5, scope: !8206)
!8215 = distinct !DISubprogram(name: "UART_Putchar", scope: !1116, file: !1116, line: 346, type: !8216, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8218)
!8216 = !DISubroutineType(types: !8217)
!8217 = !{null, !1280, !410}
!8218 = !{!8219, !8220}
!8219 = !DILocalVariable(name: "base", arg: 1, scope: !8215, file: !1116, line: 346, type: !1280)
!8220 = !DILocalVariable(name: "data", arg: 2, scope: !8215, file: !1116, line: 346, type: !410)
!8221 = !DILocation(line: 0, scope: !8215)
!8222 = !DILocation(line: 348, column: 28, scope: !8215)
!8223 = !DILocation(line: 348, column: 5, scope: !8215)
!8224 = !DILocation(line: 348, column: 25, scope: !8215)
!8225 = !DILocation(line: 349, column: 1, scope: !8215)
!8226 = !DILocation(line: 0, scope: !1382)
!8227 = !DILocation(line: 339, column: 1, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !1382, file: !1309, line: 339, column: 1)
!8229 = !DILocation(line: 339, column: 1, scope: !1382)
!8230 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1309, file: !1309, line: 260, type: !1260, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8231)
!8231 = !{!8232, !8233}
!8232 = !DILocalVariable(name: "dev", arg: 1, scope: !8230, file: !1309, line: 260, type: !1209)
!8233 = !DILocalVariable(name: "data", scope: !8230, file: !1309, line: 262, type: !8182)
!8234 = !DILocation(line: 0, scope: !8230)
!8235 = !DILocation(line: 262, column: 36, scope: !8230)
!8236 = !DILocation(line: 264, column: 12, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8230, file: !1309, line: 264, column: 6)
!8238 = !DILocation(line: 264, column: 6, scope: !8237)
!8239 = !DILocation(line: 264, column: 6, scope: !8230)
!8240 = !DILocation(line: 265, column: 29, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8237, file: !1309, line: 264, column: 22)
!8242 = !DILocation(line: 265, column: 3, scope: !8241)
!8243 = !DILocation(line: 266, column: 2, scope: !8241)
!8244 = !DILocation(line: 267, column: 1, scope: !8230)
!8245 = distinct !DISubprogram(name: "uart_imx_init", scope: !1309, file: !1309, line: 56, type: !1230, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8246)
!8246 = !{!8247, !8248, !8249, !8250, !8251, !8252}
!8247 = !DILocalVariable(name: "dev", arg: 1, scope: !8245, file: !1309, line: 56, type: !1209)
!8248 = !DILocalVariable(name: "uart", scope: !8245, file: !1309, line: 58, type: !1280)
!8249 = !DILocalVariable(name: "config", scope: !8245, file: !1309, line: 59, type: !1306)
!8250 = !DILocalVariable(name: "old_level", scope: !8245, file: !1309, line: 60, type: !32)
!8251 = !DILocalVariable(name: "err", scope: !8245, file: !1309, line: 61, type: !103)
!8252 = !DILocalVariable(name: "initConfig", scope: !8245, file: !1309, line: 67, type: !8253)
!8253 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1116, line: 57, baseType: !8254)
!8254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1116, line: 49, size: 192, elements: !8255)
!8255 = !{!8256, !8257, !8258, !8259, !8260, !8261}
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !8254, file: !1116, line: 51, baseType: !404, size: 32)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !8254, file: !1116, line: 52, baseType: !404, size: 32, offset: 32)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !8254, file: !1116, line: 53, baseType: !404, size: 32, offset: 64)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !8254, file: !1116, line: 54, baseType: !404, size: 32, offset: 96)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !8254, file: !1116, line: 55, baseType: !404, size: 32, offset: 128)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !8254, file: !1116, line: 56, baseType: !404, size: 32, offset: 160)
!8262 = !DILocation(line: 0, scope: !8245)
!8263 = !DILocation(line: 58, column: 20, scope: !8245)
!8264 = !DILocation(line: 55, column: 2, scope: !8265, inlinedAt: !8269)
!8265 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5762, file: !5762, line: 42, type: !7761, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8266)
!8266 = !{!8267, !8268}
!8267 = !DILocalVariable(name: "key", scope: !8265, file: !5762, line: 44, type: !32)
!8268 = !DILocalVariable(name: "tmp", scope: !8265, file: !5762, line: 53, type: !32)
!8269 = distinct !DILocation(line: 64, column: 14, scope: !8245)
!8270 = !{i64 2846120}
!8271 = !DILocation(line: 0, scope: !8265, inlinedAt: !8269)
!8272 = !DILocation(line: 67, column: 2, scope: !8245)
!8273 = !DILocation(line: 67, column: 21, scope: !8245)
!8274 = !DILocation(line: 67, column: 34, scope: !8245)
!8275 = !DILocation(line: 68, column: 23, scope: !8245)
!8276 = !DILocation(line: 75, column: 36, scope: !8245)
!8277 = !DILocation(line: 75, column: 8, scope: !8245)
!8278 = !DILocation(line: 76, column: 6, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8245, file: !1309, line: 76, column: 6)
!8280 = !DILocation(line: 76, column: 6, scope: !8245)
!8281 = !DILocation(line: 81, column: 26, scope: !8245)
!8282 = !DILocation(line: 81, column: 24, scope: !8245)
!8283 = !DILocation(line: 83, column: 2, scope: !8245)
!8284 = !DILocation(line: 86, column: 2, scope: !8245)
!8285 = !DILocation(line: 87, column: 2, scope: !8245)
!8286 = !DILocalVariable(name: "key", arg: 1, scope: !8287, file: !5762, line: 84, type: !32)
!8287 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5762, file: !5762, line: 84, type: !5598, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8288)
!8288 = !{!8286}
!8289 = !DILocation(line: 0, scope: !8287, inlinedAt: !8290)
!8290 = distinct !DILocation(line: 90, column: 2, scope: !8245)
!8291 = !DILocation(line: 95, column: 2, scope: !8287, inlinedAt: !8290)
!8292 = !{i64 2846937}
!8293 = !DILocation(line: 93, column: 10, scope: !8245)
!8294 = !DILocation(line: 93, column: 2, scope: !8245)
!8295 = !DILocation(line: 97, column: 34, scope: !8245)
!8296 = !DILocation(line: 97, column: 26, scope: !8245)
!8297 = !DILocation(line: 97, column: 2, scope: !8245)
!8298 = !DILocation(line: 100, column: 2, scope: !8245)
!8299 = !DILocation(line: 102, column: 2, scope: !8245)
!8300 = !DILocation(line: 103, column: 1, scope: !8245)
!8301 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1318, file: !1318, line: 342, type: !8302, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8304)
!8302 = !DISubroutineType(types: !8303)
!8303 = !{!103, !1315, !410}
!8304 = !{!8305, !8306, !8307, !8308}
!8305 = !DILocalVariable(name: "config", arg: 1, scope: !8301, file: !1318, line: 342, type: !1315)
!8306 = !DILocalVariable(name: "id", arg: 2, scope: !8301, file: !1318, line: 343, type: !410)
!8307 = !DILocalVariable(name: "ret", scope: !8301, file: !1318, line: 345, type: !103)
!8308 = !DILocalVariable(name: "state", scope: !8301, file: !1318, line: 346, type: !1321)
!8309 = !DILocation(line: 0, scope: !8301)
!8310 = !DILocation(line: 346, column: 2, scope: !8301)
!8311 = !DILocation(line: 348, column: 8, scope: !8301)
!8312 = !DILocation(line: 349, column: 10, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8301, file: !1318, line: 349, column: 6)
!8314 = !DILocation(line: 349, column: 6, scope: !8301)
!8315 = !DILocation(line: 353, column: 44, scope: !8301)
!8316 = !DILocation(line: 353, column: 9, scope: !8301)
!8317 = !DILocation(line: 353, column: 2, scope: !8301)
!8318 = !DILocation(line: 354, column: 1, scope: !8301)
!8319 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1116, file: !1116, line: 444, type: !8216, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8320)
!8320 = !{!8321, !8322}
!8321 = !DILocalVariable(name: "base", arg: 1, scope: !8319, file: !1116, line: 444, type: !1280)
!8322 = !DILocalVariable(name: "watermark", arg: 2, scope: !8319, file: !1116, line: 444, type: !410)
!8323 = !DILocation(line: 0, scope: !8319)
!8324 = !DILocation(line: 447, column: 28, scope: !8319)
!8325 = !DILocation(line: 447, column: 48, scope: !8319)
!8326 = !DILocation(line: 447, column: 72, scope: !8319)
!8327 = !DILocation(line: 447, column: 25, scope: !8319)
!8328 = !DILocation(line: 448, column: 1, scope: !8319)
!8329 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1116, file: !1116, line: 458, type: !8216, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8330)
!8330 = !{!8331, !8332}
!8331 = !DILocalVariable(name: "base", arg: 1, scope: !8329, file: !1116, line: 458, type: !1280)
!8332 = !DILocalVariable(name: "watermark", arg: 2, scope: !8329, file: !1116, line: 458, type: !410)
!8333 = !DILocation(line: 0, scope: !8329)
!8334 = !DILocation(line: 461, column: 28, scope: !8329)
!8335 = !DILocation(line: 461, column: 48, scope: !8329)
!8336 = !DILocation(line: 461, column: 72, scope: !8329)
!8337 = !DILocation(line: 461, column: 25, scope: !8329)
!8338 = !DILocation(line: 462, column: 1, scope: !8329)
!8339 = distinct !DISubprogram(name: "UART_Enable", scope: !1116, file: !1116, line: 242, type: !8340, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8342)
!8340 = !DISubroutineType(types: !8341)
!8341 = !{null, !1280}
!8342 = !{!8343}
!8343 = !DILocalVariable(name: "base", arg: 1, scope: !8339, file: !1116, line: 242, type: !1280)
!8344 = !DILocation(line: 0, scope: !8339)
!8345 = !DILocation(line: 244, column: 5, scope: !8339)
!8346 = !DILocation(line: 244, column: 25, scope: !8339)
!8347 = !DILocation(line: 245, column: 1, scope: !8339)
!8348 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1318, file: !1318, line: 316, type: !8349, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1112, retainedNodes: !8351)
!8349 = !DISubroutineType(types: !8350)
!8350 = !{!103, !1315, !1321}
!8351 = !{!8352, !8353, !8354}
!8352 = !DILocalVariable(name: "config", arg: 1, scope: !8348, file: !1318, line: 317, type: !1315)
!8353 = !DILocalVariable(name: "state", arg: 2, scope: !8348, file: !1318, line: 318, type: !1321)
!8354 = !DILocalVariable(name: "reg", scope: !8348, file: !1318, line: 320, type: !22)
!8355 = !DILocation(line: 0, scope: !8348)
!8356 = !DILocation(line: 329, column: 39, scope: !8348)
!8357 = !DILocation(line: 329, column: 52, scope: !8348)
!8358 = !DILocation(line: 329, column: 9, scope: !8348)
!8359 = !DILocation(line: 329, column: 2, scope: !8348)
!8360 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1618, file: !1618, line: 270, type: !1624, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8361)
!8361 = !{!8362}
!8362 = !DILocalVariable(name: "dev", arg: 1, scope: !8360, file: !1618, line: 270, type: !1626)
!8363 = !DILocation(line: 0, scope: !8360)
!8364 = !DILocation(line: 274, column: 2, scope: !8360)
!8365 = !DILocation(line: 275, column: 12, scope: !8360)
!8366 = !DILocation(line: 276, column: 15, scope: !8360)
!8367 = !DILocation(line: 277, column: 16, scope: !8360)
!8368 = !DILocation(line: 278, column: 15, scope: !8360)
!8369 = !DILocation(line: 279, column: 16, scope: !8360)
!8370 = !DILocation(line: 282, column: 2, scope: !8360)
!8371 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1539, file: !1539, line: 1814, type: !5681, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8372)
!8372 = !{!8373, !8374}
!8373 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8371, file: !1539, line: 1814, type: !2335)
!8374 = !DILocalVariable(name: "priority", arg: 2, scope: !8371, file: !1539, line: 1814, type: !404)
!8375 = !DILocation(line: 0, scope: !8371)
!8376 = !DILocation(line: 1822, column: 46, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !1539, line: 1821, column: 3)
!8378 = distinct !DILexicalBlock(scope: !8371, file: !1539, line: 1816, column: 7)
!8379 = !DILocation(line: 1824, column: 1, scope: !8371)
!8380 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1618, file: !1618, line: 118, type: !5582, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8381)
!8381 = !{!8382, !8383}
!8382 = !DILocalVariable(name: "arg", arg: 1, scope: !8380, file: !1618, line: 118, type: !102)
!8383 = !DILocalVariable(name: "dticks", scope: !8380, file: !1618, line: 121, type: !404)
!8384 = !DILocation(line: 0, scope: !8380)
!8385 = !DILocation(line: 124, column: 2, scope: !8380)
!8386 = !DILocation(line: 129, column: 17, scope: !8380)
!8387 = !DILocation(line: 129, column: 14, scope: !8380)
!8388 = !DILocation(line: 130, column: 15, scope: !8380)
!8389 = !DILocation(line: 145, column: 27, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !1618, line: 132, column: 16)
!8391 = distinct !DILexicalBlock(scope: !8380, file: !1618, line: 132, column: 6)
!8392 = !DILocation(line: 145, column: 25, scope: !8390)
!8393 = !DILocation(line: 145, column: 45, scope: !8390)
!8394 = !DILocation(line: 146, column: 30, scope: !8390)
!8395 = !DILocation(line: 146, column: 20, scope: !8390)
!8396 = !DILocation(line: 147, column: 3, scope: !8390)
!8397 = !DILocation(line: 151, column: 2, scope: !8380)
!8398 = !DILocation(line: 152, column: 1, scope: !8380)
!8399 = distinct !DISubprogram(name: "elapsed", scope: !1618, file: !1618, line: 85, type: !5728, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8400)
!8400 = !{!8401, !8402, !8403}
!8401 = !DILocalVariable(name: "val1", scope: !8399, file: !1618, line: 87, type: !404)
!8402 = !DILocalVariable(name: "ctrl", scope: !8399, file: !1618, line: 88, type: !404)
!8403 = !DILocalVariable(name: "val2", scope: !8399, file: !1618, line: 89, type: !404)
!8404 = !DILocation(line: 87, column: 27, scope: !8399)
!8405 = !DILocation(line: 0, scope: !8399)
!8406 = !DILocation(line: 88, column: 27, scope: !8399)
!8407 = !DILocation(line: 89, column: 27, scope: !8399)
!8408 = !DILocation(line: 105, column: 12, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8399, file: !1618, line: 105, column: 6)
!8410 = !DILocation(line: 106, column: 6, scope: !8409)
!8411 = !DILocation(line: 107, column: 16, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8409, file: !1618, line: 106, column: 24)
!8413 = !DILocation(line: 111, column: 18, scope: !8412)
!8414 = !DILocation(line: 112, column: 2, scope: !8412)
!8415 = !DILocation(line: 114, column: 20, scope: !8399)
!8416 = !DILocation(line: 114, column: 30, scope: !8399)
!8417 = !DILocation(line: 114, column: 28, scope: !8399)
!8418 = !DILocation(line: 114, column: 2, scope: !8399)
!8419 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1618, file: !1618, line: 154, type: !8420, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8422)
!8420 = !DISubroutineType(types: !8421)
!8421 = !{null, !1090, !580}
!8422 = !{!8423, !8424, !8425, !8426, !8427, !8428, !8429, !8434, !8435}
!8423 = !DILocalVariable(name: "ticks", arg: 1, scope: !8419, file: !1618, line: 154, type: !1090)
!8424 = !DILocalVariable(name: "idle", arg: 2, scope: !8419, file: !1618, line: 154, type: !580)
!8425 = !DILocalVariable(name: "delay", scope: !8419, file: !1618, line: 169, type: !404)
!8426 = !DILocalVariable(name: "val1", scope: !8419, file: !1618, line: 170, type: !404)
!8427 = !DILocalVariable(name: "val2", scope: !8419, file: !1618, line: 170, type: !404)
!8428 = !DILocalVariable(name: "last_load_", scope: !8419, file: !1618, line: 171, type: !404)
!8429 = !DILocalVariable(name: "key", scope: !8419, file: !1618, line: 176, type: !8430)
!8430 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !674, line: 106, baseType: !8431)
!8431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !674, line: 32, size: 32, elements: !8432)
!8432 = !{!8433}
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8431, file: !674, line: 33, baseType: !103, size: 32)
!8434 = !DILocalVariable(name: "pending", scope: !8419, file: !1618, line: 178, type: !404)
!8435 = !DILocalVariable(name: "unannounced", scope: !8419, file: !1618, line: 185, type: !404)
!8436 = !DILocation(line: 0, scope: !8419)
!8437 = !DILocation(line: 162, column: 49, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8419, file: !1618, line: 162, column: 6)
!8439 = !DILocation(line: 163, column: 17, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8438, file: !1618, line: 162, column: 78)
!8441 = !DILocation(line: 164, column: 13, scope: !8440)
!8442 = !DILocation(line: 165, column: 3, scope: !8440)
!8443 = !DILocation(line: 171, column: 24, scope: !8419)
!8444 = !DILocation(line: 173, column: 10, scope: !8419)
!8445 = !DILocation(line: 174, column: 10, scope: !8419)
!8446 = !DILocalVariable(name: "l", arg: 1, scope: !8447, file: !674, line: 136, type: !8450)
!8447 = distinct !DISubprogram(name: "k_spin_lock", scope: !674, file: !674, line: 136, type: !8448, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8451)
!8448 = !DISubroutineType(types: !8449)
!8449 = !{!8430, !8450}
!8450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 32)
!8451 = !{!8446, !8452}
!8452 = !DILocalVariable(name: "k", scope: !8447, file: !674, line: 139, type: !8430)
!8453 = !DILocation(line: 0, scope: !8447, inlinedAt: !8454)
!8454 = distinct !DILocation(line: 176, column: 25, scope: !8419)
!8455 = !DILocation(line: 55, column: 2, scope: !8456, inlinedAt: !8460)
!8456 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5762, file: !5762, line: 42, type: !7761, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8457)
!8457 = !{!8458, !8459}
!8458 = !DILocalVariable(name: "key", scope: !8456, file: !5762, line: 44, type: !32)
!8459 = !DILocalVariable(name: "tmp", scope: !8456, file: !5762, line: 53, type: !32)
!8460 = distinct !DILocation(line: 145, column: 10, scope: !8447, inlinedAt: !8454)
!8461 = !{i64 2948124}
!8462 = !DILocation(line: 0, scope: !8456, inlinedAt: !8460)
!8463 = !DILocation(line: 178, column: 21, scope: !8419)
!8464 = !DILocation(line: 180, column: 18, scope: !8419)
!8465 = !DILocation(line: 182, column: 14, scope: !8419)
!8466 = !DILocation(line: 183, column: 15, scope: !8419)
!8467 = !DILocation(line: 185, column: 39, scope: !8419)
!8468 = !DILocation(line: 185, column: 37, scope: !8419)
!8469 = !DILocation(line: 187, column: 27, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8419, file: !1618, line: 187, column: 6)
!8471 = !DILocation(line: 187, column: 6, scope: !8419)
!8472 = !DILocation(line: 202, column: 27, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8470, file: !1618, line: 195, column: 9)
!8474 = !DILocation(line: 202, column: 48, scope: !8473)
!8475 = !DILocation(line: 203, column: 9, scope: !8473)
!8476 = !DILocation(line: 204, column: 11, scope: !8473)
!8477 = !DILocation(line: 205, column: 13, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8473, file: !1618, line: 205, column: 7)
!8479 = !DILocation(line: 205, column: 7, scope: !8473)
!8480 = !DILocation(line: 0, scope: !8470)
!8481 = !DILocation(line: 212, column: 18, scope: !8419)
!8482 = !DILocation(line: 214, column: 28, scope: !8419)
!8483 = !DILocation(line: 214, column: 16, scope: !8419)
!8484 = !DILocation(line: 215, column: 15, scope: !8419)
!8485 = !DILocation(line: 227, column: 11, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8419, file: !1618, line: 227, column: 6)
!8487 = !DILocation(line: 227, column: 6, scope: !8419)
!8488 = !DILocation(line: 228, column: 15, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8486, file: !1618, line: 227, column: 19)
!8490 = !DILocation(line: 228, column: 38, scope: !8489)
!8491 = !DILocation(line: 228, column: 24, scope: !8489)
!8492 = !DILocation(line: 229, column: 2, scope: !8489)
!8493 = !DILocation(line: 230, column: 24, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8486, file: !1618, line: 229, column: 9)
!8495 = !DILocation(line: 230, column: 15, scope: !8494)
!8496 = !DILocation(line: 0, scope: !8486)
!8497 = !DILocalVariable(name: "key", arg: 2, scope: !8498, file: !674, line: 190, type: !8430)
!8498 = distinct !DISubprogram(name: "k_spin_unlock", scope: !674, file: !674, line: 189, type: !8499, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8501)
!8499 = !DISubroutineType(types: !8500)
!8500 = !{null, !8450, !8430}
!8501 = !{!8502, !8497}
!8502 = !DILocalVariable(name: "l", arg: 1, scope: !8498, file: !674, line: 189, type: !8450)
!8503 = !DILocation(line: 0, scope: !8498, inlinedAt: !8504)
!8504 = distinct !DILocation(line: 232, column: 2, scope: !8419)
!8505 = !DILocalVariable(name: "key", arg: 1, scope: !8506, file: !5762, line: 84, type: !32)
!8506 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5762, file: !5762, line: 84, type: !5598, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8507)
!8507 = !{!8505}
!8508 = !DILocation(line: 0, scope: !8506, inlinedAt: !8509)
!8509 = distinct !DILocation(line: 215, column: 2, scope: !8498, inlinedAt: !8504)
!8510 = !DILocation(line: 95, column: 2, scope: !8506, inlinedAt: !8509)
!8511 = !{i64 2948941}
!8512 = !DILocation(line: 234, column: 1, scope: !8419)
!8513 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1618, file: !1618, line: 236, type: !5728, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8514)
!8514 = !{!8515, !8516}
!8515 = !DILocalVariable(name: "key", scope: !8513, file: !1618, line: 242, type: !8430)
!8516 = !DILocalVariable(name: "cyc", scope: !8513, file: !1618, line: 243, type: !404)
!8517 = !DILocation(line: 0, scope: !8447, inlinedAt: !8518)
!8518 = distinct !DILocation(line: 242, column: 25, scope: !8513)
!8519 = !DILocation(line: 55, column: 2, scope: !8456, inlinedAt: !8520)
!8520 = distinct !DILocation(line: 145, column: 10, scope: !8447, inlinedAt: !8518)
!8521 = !DILocation(line: 0, scope: !8456, inlinedAt: !8520)
!8522 = !DILocation(line: 0, scope: !8513)
!8523 = !DILocation(line: 243, column: 17, scope: !8513)
!8524 = !DILocation(line: 243, column: 29, scope: !8513)
!8525 = !DILocation(line: 243, column: 27, scope: !8513)
!8526 = !DILocation(line: 243, column: 43, scope: !8513)
!8527 = !DILocation(line: 243, column: 41, scope: !8513)
!8528 = !DILocation(line: 0, scope: !8498, inlinedAt: !8529)
!8529 = distinct !DILocation(line: 245, column: 2, scope: !8513)
!8530 = !DILocation(line: 0, scope: !8506, inlinedAt: !8531)
!8531 = distinct !DILocation(line: 215, column: 2, scope: !8498, inlinedAt: !8529)
!8532 = !DILocation(line: 95, column: 2, scope: !8506, inlinedAt: !8531)
!8533 = !DILocation(line: 246, column: 13, scope: !8513)
!8534 = !DILocation(line: 246, column: 2, scope: !8513)
!8535 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1618, file: !1618, line: 249, type: !5728, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !8536)
!8536 = !{!8537, !8538}
!8537 = !DILocalVariable(name: "key", scope: !8535, file: !1618, line: 251, type: !8430)
!8538 = !DILocalVariable(name: "ret", scope: !8535, file: !1618, line: 252, type: !404)
!8539 = !DILocation(line: 0, scope: !8447, inlinedAt: !8540)
!8540 = distinct !DILocation(line: 251, column: 25, scope: !8535)
!8541 = !DILocation(line: 55, column: 2, scope: !8456, inlinedAt: !8542)
!8542 = distinct !DILocation(line: 145, column: 10, scope: !8447, inlinedAt: !8540)
!8543 = !DILocation(line: 0, scope: !8456, inlinedAt: !8542)
!8544 = !DILocation(line: 0, scope: !8535)
!8545 = !DILocation(line: 252, column: 17, scope: !8535)
!8546 = !DILocation(line: 252, column: 29, scope: !8535)
!8547 = !DILocation(line: 252, column: 27, scope: !8535)
!8548 = !DILocation(line: 0, scope: !8498, inlinedAt: !8549)
!8549 = distinct !DILocation(line: 254, column: 2, scope: !8535)
!8550 = !DILocation(line: 0, scope: !8506, inlinedAt: !8551)
!8551 = distinct !DILocation(line: 215, column: 2, scope: !8498, inlinedAt: !8549)
!8552 = !DILocation(line: 95, column: 2, scope: !8506, inlinedAt: !8551)
!8553 = !DILocation(line: 255, column: 2, scope: !8535)
!8554 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1618, file: !1618, line: 258, type: !2944, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !675)
!8555 = !DILocation(line: 260, column: 6, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8554, file: !1618, line: 260, column: 6)
!8557 = !DILocation(line: 260, column: 16, scope: !8556)
!8558 = !DILocation(line: 260, column: 6, scope: !8554)
!8559 = !DILocation(line: 261, column: 17, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8556, file: !1618, line: 260, column: 34)
!8561 = !DILocation(line: 262, column: 2, scope: !8560)
!8562 = !DILocation(line: 263, column: 1, scope: !8554)
!8563 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1618, file: !1618, line: 265, type: !2944, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1393, retainedNodes: !675)
!8564 = !DILocation(line: 267, column: 16, scope: !8563)
!8565 = !DILocation(line: 268, column: 1, scope: !8563)
!8566 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !8567, file: !8567, line: 9, type: !8568, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !8598)
!8567 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8568 = !DISubroutineType(types: !8569)
!8569 = !{!103, !8570, !410, !8597}
!8570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8571, size: 32)
!8571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8572)
!8572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1318, line: 60, size: 64, elements: !8573)
!8573 = !{!8574, !8596}
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8572, file: !1318, line: 69, baseType: !8575, size: 32)
!8575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8576, size: 32)
!8576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8577)
!8577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1318, line: 50, size: 64, elements: !8578)
!8578 = !{!8579, !8594, !8595}
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !8577, file: !1318, line: 52, baseType: !8580, size: 32)
!8580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8581, size: 32)
!8581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8582)
!8582 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1072, line: 64, baseType: !8583)
!8583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1072, line: 59, size: 160, elements: !8584)
!8584 = !{!8585, !8593}
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8583, file: !1072, line: 60, baseType: !8586, size: 128)
!8586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1072, line: 51, size: 128, elements: !8587)
!8587 = !{!8588, !8589, !8590, !8591, !8592}
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !8586, file: !1072, line: 52, baseType: !404, size: 32)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !8586, file: !1072, line: 53, baseType: !404, size: 32, offset: 32)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !8586, file: !1072, line: 54, baseType: !404, size: 32, offset: 64)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !8586, file: !1072, line: 55, baseType: !410, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !8586, file: !1072, line: 56, baseType: !404, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8583, file: !1072, line: 61, baseType: !404, size: 32, offset: 128)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !8577, file: !1318, line: 54, baseType: !410, size: 8, offset: 32)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8577, file: !1318, line: 56, baseType: !410, size: 8, offset: 40)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !8572, file: !1318, line: 71, baseType: !410, size: 8, offset: 32)
!8597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8575, size: 32)
!8598 = !{!8599, !8600, !8601}
!8599 = !DILocalVariable(name: "config", arg: 1, scope: !8566, file: !8567, line: 9, type: !8570)
!8600 = !DILocalVariable(name: "id", arg: 2, scope: !8566, file: !8567, line: 9, type: !410)
!8601 = !DILocalVariable(name: "state", arg: 3, scope: !8566, file: !8567, line: 10, type: !8597)
!8602 = !DILocation(line: 0, scope: !8566)
!8603 = !DILocation(line: 12, column: 20, scope: !8566)
!8604 = !DILocation(line: 13, column: 27, scope: !8566)
!8605 = !DILocation(line: 13, column: 42, scope: !8566)
!8606 = !DILocation(line: 13, column: 19, scope: !8566)
!8607 = !DILocation(line: 13, column: 16, scope: !8566)
!8608 = !DILocation(line: 13, column: 2, scope: !8566)
!8609 = distinct !{!8609, !8608, !8610}
!8610 = !DILocation(line: 19, column: 2, scope: !8566)
!8611 = !DILocation(line: 14, column: 23, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8613, file: !8567, line: 14, column: 7)
!8613 = distinct !DILexicalBlock(scope: !8566, file: !8567, line: 13, column: 54)
!8614 = !DILocation(line: 14, column: 10, scope: !8612)
!8615 = !DILocation(line: 18, column: 11, scope: !8613)
!8616 = !DILocation(line: 14, column: 7, scope: !8613)
!8617 = !DILocation(line: 22, column: 1, scope: !8566)
!8618 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1657, file: !1657, line: 51, type: !1663, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !8619)
!8619 = !{!8620}
!8620 = !DILocalVariable(name: "dev", arg: 1, scope: !8618, file: !1657, line: 51, type: !1665)
!8621 = !DILocation(line: 0, scope: !8618)
!8622 = !DILocation(line: 66, column: 2, scope: !8618)
!8623 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1657, file: !1657, line: 10, type: !8624, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !8640)
!8624 = !DISubroutineType(types: !8625)
!8625 = !{!103, !8626, !410, !22}
!8626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8627, size: 32)
!8627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8628)
!8628 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1072, line: 64, baseType: !8629)
!8629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1072, line: 59, size: 160, elements: !8630)
!8630 = !{!8631, !8639}
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8629, file: !1072, line: 60, baseType: !8632, size: 128)
!8632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1072, line: 51, size: 128, elements: !8633)
!8633 = !{!8634, !8635, !8636, !8637, !8638}
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !8632, file: !1072, line: 52, baseType: !404, size: 32)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !8632, file: !1072, line: 53, baseType: !404, size: 32, offset: 32)
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !8632, file: !1072, line: 54, baseType: !404, size: 32, offset: 64)
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !8632, file: !1072, line: 55, baseType: !410, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !8632, file: !1072, line: 56, baseType: !404, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8629, file: !1072, line: 61, baseType: !404, size: 32, offset: 128)
!8640 = !{!8641, !8642, !8643, !8644, !8646, !8649, !8650, !8651, !8652, !8653}
!8641 = !DILocalVariable(name: "pins", arg: 1, scope: !8623, file: !1657, line: 10, type: !8626)
!8642 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !8623, file: !1657, line: 10, type: !410)
!8643 = !DILocalVariable(name: "reg", arg: 3, scope: !8623, file: !1657, line: 11, type: !22)
!8644 = !DILocalVariable(name: "i", scope: !8645, file: !1657, line: 14, type: !410)
!8645 = distinct !DILexicalBlock(scope: !8623, file: !1657, line: 14, column: 2)
!8646 = !DILocalVariable(name: "mux_register", scope: !8647, file: !1657, line: 15, type: !404)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !1657, line: 14, column: 41)
!8648 = distinct !DILexicalBlock(scope: !8645, file: !1657, line: 14, column: 2)
!8649 = !DILocalVariable(name: "mux_mode", scope: !8647, file: !1657, line: 16, type: !404)
!8650 = !DILocalVariable(name: "input_register", scope: !8647, file: !1657, line: 17, type: !404)
!8651 = !DILocalVariable(name: "input_daisy", scope: !8647, file: !1657, line: 18, type: !404)
!8652 = !DILocalVariable(name: "config_register", scope: !8647, file: !1657, line: 19, type: !404)
!8653 = !DILocalVariable(name: "pin_ctrl_flags", scope: !8647, file: !1657, line: 20, type: !404)
!8654 = !DILocation(line: 0, scope: !8623)
!8655 = !DILocation(line: 0, scope: !8645)
!8656 = !DILocation(line: 14, column: 25, scope: !8648)
!8657 = !DILocation(line: 14, column: 2, scope: !8645)
!8658 = !DILocation(line: 48, column: 2, scope: !8623)
!8659 = !DILocation(line: 15, column: 42, scope: !8647)
!8660 = !DILocation(line: 0, scope: !8647)
!8661 = !DILocation(line: 16, column: 38, scope: !8647)
!8662 = !DILocation(line: 17, column: 44, scope: !8647)
!8663 = !DILocation(line: 19, column: 45, scope: !8647)
!8664 = !DILocation(line: 20, column: 37, scope: !8647)
!8665 = !DILocation(line: 35, column: 4, scope: !8647)
!8666 = !DILocation(line: 36, column: 4, scope: !8647)
!8667 = !DILocation(line: 35, column: 45, scope: !8647)
!8668 = !DILocation(line: 34, column: 5, scope: !8647)
!8669 = !DILocation(line: 34, column: 53, scope: !8647)
!8670 = !DILocation(line: 37, column: 7, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8647, file: !1657, line: 37, column: 7)
!8672 = !DILocation(line: 37, column: 7, scope: !8647)
!8673 = !DILocation(line: 18, column: 41, scope: !8647)
!8674 = !DILocation(line: 39, column: 5, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8671, file: !1657, line: 37, column: 23)
!8676 = !DILocation(line: 38, column: 6, scope: !8675)
!8677 = !DILocation(line: 38, column: 56, scope: !8675)
!8678 = !DILocation(line: 40, column: 3, scope: !8675)
!8679 = !DILocation(line: 41, column: 7, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8647, file: !1657, line: 41, column: 7)
!8681 = !DILocation(line: 41, column: 7, scope: !8647)
!8682 = !DILocation(line: 43, column: 20, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8680, file: !1657, line: 41, column: 24)
!8684 = !DILocation(line: 42, column: 6, scope: !8683)
!8685 = !DILocation(line: 42, column: 57, scope: !8683)
!8686 = !DILocation(line: 44, column: 3, scope: !8683)
!8687 = !DILocation(line: 14, column: 37, scope: !8648)
!8688 = distinct !{!8688, !8657, !8689}
!8689 = !DILocation(line: 47, column: 2, scope: !8645)
!8690 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !8691, file: !8691, line: 43, type: !8692, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !8746)
!8691 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8692 = !DISubroutineType(types: !8693)
!8693 = !{null, !8694, !404, !404, !404}
!8694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8695, size: 32)
!8695 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !399, line: 4575, baseType: !8696)
!8696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 4532, size: 390144, elements: !8697)
!8697 = !{!8698, !8699, !8700, !8701, !8702, !8703, !8711, !8712, !8720, !8721}
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !8696, file: !399, line: 4533, baseType: !403, size: 32)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !8696, file: !399, line: 4534, baseType: !403, size: 32, offset: 32)
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !8696, file: !399, line: 4535, baseType: !403, size: 32, offset: 64)
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !8696, file: !399, line: 4536, baseType: !403, size: 32, offset: 96)
!8702 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !8696, file: !399, line: 4537, baseType: !409, size: 16256, offset: 128)
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !8696, file: !399, line: 4543, baseType: !8704, size: 4224, offset: 16384)
!8704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8705, size: 4224, elements: !422)
!8705 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8696, file: !399, line: 4538, size: 128, elements: !8706)
!8706 = !{!8707, !8708, !8709, !8710}
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !8705, file: !399, line: 4539, baseType: !403, size: 32)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !8705, file: !399, line: 4540, baseType: !403, size: 32, offset: 32)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !8705, file: !399, line: 4541, baseType: !403, size: 32, offset: 64)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !8705, file: !399, line: 4542, baseType: !403, size: 32, offset: 96)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !8696, file: !399, line: 4544, baseType: !425, size: 110464, offset: 20608)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !8696, file: !399, line: 4550, baseType: !8713, size: 24448, offset: 131072)
!8713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8714, size: 24448, elements: !436)
!8714 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8696, file: !399, line: 4545, size: 128, elements: !8715)
!8715 = !{!8716, !8717, !8718, !8719}
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !8714, file: !399, line: 4546, baseType: !403, size: 32)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !8714, file: !399, line: 4547, baseType: !403, size: 32, offset: 32)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !8714, file: !399, line: 4548, baseType: !403, size: 32, offset: 64)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !8714, file: !399, line: 4549, baseType: !403, size: 32, offset: 96)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !8696, file: !399, line: 4551, baseType: !439, size: 106624, offset: 155520)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !8696, file: !399, line: 4574, baseType: !8722, size: 128000, offset: 262144)
!8722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8723, size: 128000, elements: !470)
!8723 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8696, file: !399, line: 4552, size: 1024, elements: !8724)
!8724 = !{!8725, !8726, !8727, !8728, !8729, !8730, !8731, !8732, !8733, !8734, !8735, !8736, !8737, !8738, !8739, !8740, !8741, !8742, !8743, !8744, !8745}
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !8723, file: !399, line: 4553, baseType: !403, size: 32)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !8723, file: !399, line: 4554, baseType: !403, size: 32, offset: 32)
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !8723, file: !399, line: 4555, baseType: !403, size: 32, offset: 64)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !8723, file: !399, line: 4556, baseType: !403, size: 32, offset: 96)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !8723, file: !399, line: 4557, baseType: !403, size: 32, offset: 128)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !8723, file: !399, line: 4558, baseType: !403, size: 32, offset: 160)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !8723, file: !399, line: 4559, baseType: !403, size: 32, offset: 192)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !8723, file: !399, line: 4560, baseType: !403, size: 32, offset: 224)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !8723, file: !399, line: 4561, baseType: !403, size: 32, offset: 256)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !8723, file: !399, line: 4562, baseType: !403, size: 32, offset: 288)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !8723, file: !399, line: 4563, baseType: !403, size: 32, offset: 320)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !8723, file: !399, line: 4564, baseType: !403, size: 32, offset: 352)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !8723, file: !399, line: 4565, baseType: !403, size: 32, offset: 384)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !8723, file: !399, line: 4566, baseType: !403, size: 32, offset: 416)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !8723, file: !399, line: 4567, baseType: !403, size: 32, offset: 448)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !8723, file: !399, line: 4568, baseType: !403, size: 32, offset: 480)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !8723, file: !399, line: 4569, baseType: !463, size: 384, offset: 512)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !8723, file: !399, line: 4570, baseType: !403, size: 32, offset: 896)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !8723, file: !399, line: 4571, baseType: !403, size: 32, offset: 928)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !8723, file: !399, line: 4572, baseType: !403, size: 32, offset: 960)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !8723, file: !399, line: 4573, baseType: !403, size: 32, offset: 992)
!8746 = !{!8747, !8748, !8749, !8750}
!8747 = !DILocalVariable(name: "base", arg: 1, scope: !8690, file: !8691, line: 43, type: !8694)
!8748 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8690, file: !8691, line: 43, type: !404)
!8749 = !DILocalVariable(name: "pre", arg: 3, scope: !8690, file: !8691, line: 43, type: !404)
!8750 = !DILocalVariable(name: "post", arg: 4, scope: !8690, file: !8691, line: 43, type: !404)
!8751 = !DILocation(line: 0, scope: !8690)
!8752 = !DILocation(line: 48, column: 25, scope: !8690)
!8753 = !DILocation(line: 48, column: 42, scope: !8690)
!8754 = !DILocation(line: 50, column: 24, scope: !8690)
!8755 = !DILocation(line: 50, column: 56, scope: !8690)
!8756 = !DILocation(line: 49, column: 94, scope: !8690)
!8757 = !DILocation(line: 50, column: 54, scope: !8690)
!8758 = !DILocation(line: 48, column: 22, scope: !8690)
!8759 = !DILocation(line: 51, column: 1, scope: !8690)
!8760 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !8691, file: !8691, line: 59, type: !8761, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !8763)
!8761 = !DISubroutineType(types: !8762)
!8762 = !{null, !8694, !404, !1344, !1344}
!8763 = !{!8764, !8765, !8766, !8767}
!8764 = !DILocalVariable(name: "base", arg: 1, scope: !8760, file: !8691, line: 59, type: !8694)
!8765 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8760, file: !8691, line: 59, type: !404)
!8766 = !DILocalVariable(name: "pre", arg: 3, scope: !8760, file: !8691, line: 59, type: !1344)
!8767 = !DILocalVariable(name: "post", arg: 4, scope: !8760, file: !8691, line: 59, type: !1344)
!8768 = !DILocation(line: 0, scope: !8760)
!8769 = !DILocation(line: 63, column: 13, scope: !8760)
!8770 = !DILocation(line: 63, column: 63, scope: !8760)
!8771 = !DILocation(line: 63, column: 10, scope: !8760)
!8772 = !DILocation(line: 64, column: 14, scope: !8760)
!8773 = !DILocation(line: 64, column: 31, scope: !8760)
!8774 = !DILocation(line: 64, column: 11, scope: !8760)
!8775 = !DILocation(line: 65, column: 1, scope: !8760)
!8776 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !8691, file: !8691, line: 73, type: !8777, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !8779)
!8777 = !DISubroutineType(types: !8778)
!8778 = !{null, !8694, !404, !404, !404, !404}
!8779 = !{!8780, !8781, !8782, !8783, !8784}
!8780 = !DILocalVariable(name: "base", arg: 1, scope: !8776, file: !8691, line: 73, type: !8694)
!8781 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8776, file: !8691, line: 73, type: !404)
!8782 = !DILocalVariable(name: "mux", arg: 3, scope: !8776, file: !8691, line: 73, type: !404)
!8783 = !DILocalVariable(name: "pre", arg: 4, scope: !8776, file: !8691, line: 73, type: !404)
!8784 = !DILocalVariable(name: "post", arg: 5, scope: !8776, file: !8691, line: 73, type: !404)
!8785 = !DILocation(line: 0, scope: !8776)
!8786 = !DILocation(line: 78, column: 25, scope: !8776)
!8787 = !DILocation(line: 78, column: 42, scope: !8776)
!8788 = !DILocation(line: 80, column: 24, scope: !8776)
!8789 = !DILocation(line: 80, column: 51, scope: !8776)
!8790 = !DILocation(line: 80, column: 83, scope: !8776)
!8791 = !DILocation(line: 79, column: 121, scope: !8776)
!8792 = !DILocation(line: 80, column: 49, scope: !8776)
!8793 = !DILocation(line: 80, column: 81, scope: !8776)
!8794 = !DILocation(line: 78, column: 22, scope: !8776)
!8795 = !DILocation(line: 81, column: 1, scope: !8776)
!8796 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !8797, file: !8797, line: 43, type: !8798, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !8800)
!8797 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8798 = !DISubroutineType(types: !8799)
!8799 = !{!404, !2646}
!8800 = !{!8801}
!8801 = !DILocalVariable(name: "base", arg: 1, scope: !8796, file: !8797, line: 43, type: !2646)
!8802 = !DILocation(line: 0, scope: !8796)
!8803 = !DILocation(line: 45, column: 9, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8796, file: !8797, line: 45, column: 9)
!8805 = !DILocation(line: 45, column: 9, scope: !8796)
!8806 = !DILocation(line: 48, column: 26, scope: !8796)
!8807 = !DILocation(line: 48, column: 45, scope: !8796)
!8808 = !DILocation(line: 48, column: 23, scope: !8796)
!8809 = !DILocation(line: 48, column: 5, scope: !8796)
!8810 = !DILocation(line: 49, column: 1, scope: !8796)
!8811 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2637, file: !2637, line: 220, type: !8812, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !8814)
!8812 = !DISubroutineType(types: !8813)
!8813 = !{!580, !2646, !404}
!8814 = !{!8815, !8816}
!8815 = !DILocalVariable(name: "base", arg: 1, scope: !8811, file: !2637, line: 220, type: !2646)
!8816 = !DILocalVariable(name: "pllControl", arg: 2, scope: !8811, file: !2637, line: 220, type: !404)
!8817 = !DILocation(line: 0, scope: !8811)
!8818 = !DILocation(line: 222, column: 19, scope: !8811)
!8819 = !DILocation(line: 222, column: 58, scope: !8811)
!8820 = !DILocation(line: 222, column: 12, scope: !8811)
!8821 = !DILocation(line: 222, column: 5, scope: !8811)
!8822 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !8797, file: !8797, line: 57, type: !8798, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !8823)
!8823 = !{!8824}
!8824 = !DILocalVariable(name: "base", arg: 1, scope: !8822, file: !8797, line: 57, type: !2646)
!8825 = !DILocation(line: 0, scope: !8822)
!8826 = !DILocation(line: 59, column: 9, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8822, file: !8797, line: 59, column: 9)
!8828 = !DILocation(line: 59, column: 9, scope: !8822)
!8829 = !DILocation(line: 62, column: 9, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8822, file: !8797, line: 62, column: 9)
!8831 = !DILocation(line: 62, column: 28, scope: !8830)
!8832 = !DILocation(line: 0, scope: !8830)
!8833 = !DILocation(line: 66, column: 1, scope: !8822)
!8834 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !8797, file: !8797, line: 74, type: !8798, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !8835)
!8835 = !{!8836, !8837, !8838, !8839}
!8836 = !DILocalVariable(name: "base", arg: 1, scope: !8834, file: !8797, line: 74, type: !2646)
!8837 = !DILocalVariable(name: "divSelect", scope: !8834, file: !8797, line: 76, type: !410)
!8838 = !DILocalVariable(name: "divTestSelect", scope: !8834, file: !8797, line: 76, type: !410)
!8839 = !DILocalVariable(name: "factor", scope: !8834, file: !8797, line: 77, type: !2709)
!8840 = !DILocation(line: 0, scope: !8834)
!8841 = !DILocation(line: 79, column: 9, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8834, file: !8797, line: 79, column: 9)
!8843 = !DILocation(line: 79, column: 9, scope: !8834)
!8844 = !DILocation(line: 82, column: 17, scope: !8834)
!8845 = !DILocation(line: 83, column: 22, scope: !8834)
!8846 = !DILocation(line: 83, column: 100, scope: !8834)
!8847 = !DILocation(line: 83, column: 21, scope: !8834)
!8848 = !DILocation(line: 86, column: 5, scope: !8834)
!8849 = !DILocation(line: 100, column: 9, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8834, file: !8797, line: 100, column: 9)
!8851 = !DILocation(line: 100, column: 41, scope: !8850)
!8852 = !DILocation(line: 100, column: 9, scope: !8834)
!8853 = !DILocation(line: 102, column: 27, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8850, file: !8797, line: 101, column: 5)
!8855 = !DILocation(line: 102, column: 59, scope: !8854)
!8856 = !DILocation(line: 102, column: 19, scope: !8854)
!8857 = !DILocation(line: 103, column: 27, scope: !8854)
!8858 = !DILocation(line: 103, column: 62, scope: !8854)
!8859 = !DILocation(line: 103, column: 19, scope: !8854)
!8860 = !DILocation(line: 102, column: 95, scope: !8854)
!8861 = !DILocation(line: 104, column: 27, scope: !8854)
!8862 = !DILocation(line: 104, column: 60, scope: !8854)
!8863 = !DILocation(line: 104, column: 19, scope: !8854)
!8864 = !DILocation(line: 103, column: 98, scope: !8854)
!8865 = !DILocation(line: 105, column: 39, scope: !8854)
!8866 = !DILocation(line: 105, column: 27, scope: !8854)
!8867 = !DILocation(line: 105, column: 60, scope: !8854)
!8868 = !DILocation(line: 105, column: 70, scope: !8854)
!8869 = !DILocation(line: 105, column: 57, scope: !8854)
!8870 = !DILocation(line: 105, column: 16, scope: !8854)
!8871 = !DILocation(line: 105, column: 9, scope: !8854)
!8872 = !DILocation(line: 109, column: 28, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8850, file: !8797, line: 108, column: 5)
!8874 = !DILocation(line: 109, column: 48, scope: !8873)
!8875 = !DILocation(line: 109, column: 46, scope: !8873)
!8876 = !DILocation(line: 109, column: 9, scope: !8873)
!8877 = !DILocation(line: 111, column: 1, scope: !8834)
!8878 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !8797, file: !8797, line: 119, type: !8798, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !8879)
!8879 = !{!8880}
!8880 = !DILocalVariable(name: "base", arg: 1, scope: !8878, file: !8797, line: 119, type: !2646)
!8881 = !DILocation(line: 0, scope: !8878)
!8882 = !DILocation(line: 121, column: 9, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8878, file: !8797, line: 121, column: 9)
!8884 = !DILocation(line: 125, column: 1, scope: !8878)
!8885 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !8797, file: !8797, line: 133, type: !8798, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !8886)
!8886 = !{!8887, !8888, !8889, !8890, !8891}
!8887 = !DILocalVariable(name: "base", arg: 1, scope: !8885, file: !8797, line: 133, type: !2646)
!8888 = !DILocalVariable(name: "divSelect", scope: !8885, file: !8797, line: 135, type: !410)
!8889 = !DILocalVariable(name: "divPostSelect", scope: !8885, file: !8797, line: 135, type: !410)
!8890 = !DILocalVariable(name: "divTestSelect", scope: !8885, file: !8797, line: 135, type: !410)
!8891 = !DILocalVariable(name: "factor", scope: !8885, file: !8797, line: 136, type: !2709)
!8892 = !DILocation(line: 0, scope: !8885)
!8893 = !DILocation(line: 138, column: 9, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8885, file: !8797, line: 138, column: 9)
!8895 = !DILocation(line: 138, column: 9, scope: !8885)
!8896 = !DILocation(line: 141, column: 17, scope: !8885)
!8897 = !DILocation(line: 142, column: 22, scope: !8885)
!8898 = !DILocation(line: 142, column: 101, scope: !8885)
!8899 = !DILocation(line: 142, column: 21, scope: !8885)
!8900 = !DILocation(line: 144, column: 22, scope: !8885)
!8901 = !DILocation(line: 144, column: 104, scope: !8885)
!8902 = !DILocation(line: 144, column: 21, scope: !8885)
!8903 = !DILocation(line: 147, column: 5, scope: !8885)
!8904 = !DILocation(line: 161, column: 5, scope: !8885)
!8905 = !DILocation(line: 175, column: 9, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8885, file: !8797, line: 175, column: 9)
!8907 = !DILocation(line: 175, column: 43, scope: !8906)
!8908 = !DILocation(line: 175, column: 9, scope: !8885)
!8909 = !DILocation(line: 177, column: 27, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8906, file: !8797, line: 176, column: 5)
!8911 = !DILocation(line: 177, column: 61, scope: !8910)
!8912 = !DILocation(line: 177, column: 19, scope: !8910)
!8913 = !DILocation(line: 178, column: 27, scope: !8910)
!8914 = !DILocation(line: 178, column: 64, scope: !8910)
!8915 = !DILocation(line: 178, column: 19, scope: !8910)
!8916 = !DILocation(line: 177, column: 99, scope: !8910)
!8917 = !DILocation(line: 179, column: 27, scope: !8910)
!8918 = !DILocation(line: 179, column: 62, scope: !8910)
!8919 = !DILocation(line: 179, column: 19, scope: !8910)
!8920 = !DILocation(line: 178, column: 102, scope: !8910)
!8921 = !DILocation(line: 180, column: 40, scope: !8910)
!8922 = !DILocation(line: 180, column: 58, scope: !8910)
!8923 = !DILocation(line: 180, column: 27, scope: !8910)
!8924 = !DILocation(line: 180, column: 79, scope: !8910)
!8925 = !DILocation(line: 180, column: 89, scope: !8910)
!8926 = !DILocation(line: 180, column: 76, scope: !8910)
!8927 = !DILocation(line: 180, column: 16, scope: !8910)
!8928 = !DILocation(line: 180, column: 9, scope: !8910)
!8929 = !DILocation(line: 184, column: 29, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8906, file: !8797, line: 183, column: 5)
!8931 = !DILocation(line: 184, column: 47, scope: !8930)
!8932 = !DILocation(line: 184, column: 67, scope: !8930)
!8933 = !DILocation(line: 184, column: 65, scope: !8930)
!8934 = !DILocation(line: 184, column: 9, scope: !8930)
!8935 = !DILocation(line: 186, column: 1, scope: !8885)
!8936 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !8797, file: !8797, line: 194, type: !8798, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !8937)
!8937 = !{!8938, !8939, !8940, !8941, !8942}
!8938 = !DILocalVariable(name: "base", arg: 1, scope: !8936, file: !8797, line: 194, type: !2646)
!8939 = !DILocalVariable(name: "divSelect", scope: !8936, file: !8797, line: 196, type: !410)
!8940 = !DILocalVariable(name: "divPostSelect", scope: !8936, file: !8797, line: 196, type: !410)
!8941 = !DILocalVariable(name: "divTestSelect", scope: !8936, file: !8797, line: 196, type: !410)
!8942 = !DILocalVariable(name: "factor", scope: !8936, file: !8797, line: 197, type: !2709)
!8943 = !DILocation(line: 0, scope: !8936)
!8944 = !DILocation(line: 199, column: 9, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8936, file: !8797, line: 199, column: 9)
!8946 = !DILocation(line: 199, column: 9, scope: !8936)
!8947 = !DILocation(line: 202, column: 17, scope: !8936)
!8948 = !DILocation(line: 203, column: 22, scope: !8936)
!8949 = !DILocation(line: 203, column: 101, scope: !8936)
!8950 = !DILocation(line: 203, column: 21, scope: !8936)
!8951 = !DILocation(line: 205, column: 22, scope: !8936)
!8952 = !DILocation(line: 205, column: 104, scope: !8936)
!8953 = !DILocation(line: 205, column: 21, scope: !8936)
!8954 = !DILocation(line: 208, column: 5, scope: !8936)
!8955 = !DILocation(line: 222, column: 5, scope: !8936)
!8956 = !DILocation(line: 236, column: 9, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8936, file: !8797, line: 236, column: 9)
!8958 = !DILocation(line: 236, column: 43, scope: !8957)
!8959 = !DILocation(line: 236, column: 9, scope: !8936)
!8960 = !DILocation(line: 238, column: 27, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8957, file: !8797, line: 237, column: 5)
!8962 = !DILocation(line: 238, column: 61, scope: !8961)
!8963 = !DILocation(line: 238, column: 19, scope: !8961)
!8964 = !DILocation(line: 239, column: 27, scope: !8961)
!8965 = !DILocation(line: 239, column: 64, scope: !8961)
!8966 = !DILocation(line: 239, column: 19, scope: !8961)
!8967 = !DILocation(line: 238, column: 99, scope: !8961)
!8968 = !DILocation(line: 240, column: 27, scope: !8961)
!8969 = !DILocation(line: 240, column: 62, scope: !8961)
!8970 = !DILocation(line: 240, column: 19, scope: !8961)
!8971 = !DILocation(line: 239, column: 102, scope: !8961)
!8972 = !DILocation(line: 241, column: 40, scope: !8961)
!8973 = !DILocation(line: 241, column: 58, scope: !8961)
!8974 = !DILocation(line: 241, column: 27, scope: !8961)
!8975 = !DILocation(line: 241, column: 79, scope: !8961)
!8976 = !DILocation(line: 241, column: 89, scope: !8961)
!8977 = !DILocation(line: 241, column: 76, scope: !8961)
!8978 = !DILocation(line: 241, column: 16, scope: !8961)
!8979 = !DILocation(line: 241, column: 9, scope: !8961)
!8980 = !DILocation(line: 245, column: 29, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8957, file: !8797, line: 244, column: 5)
!8982 = !DILocation(line: 245, column: 47, scope: !8981)
!8983 = !DILocation(line: 245, column: 67, scope: !8981)
!8984 = !DILocation(line: 245, column: 65, scope: !8981)
!8985 = !DILocation(line: 245, column: 9, scope: !8981)
!8986 = !DILocation(line: 247, column: 1, scope: !8936)
!8987 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !8797, file: !8797, line: 255, type: !8988, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !8990)
!8988 = !DISubroutineType(types: !8989)
!8989 = !{!404, !2646, !404}
!8990 = !{!8991, !8992, !8993, !8994}
!8991 = !DILocalVariable(name: "base", arg: 1, scope: !8987, file: !8797, line: 255, type: !2646)
!8992 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !8987, file: !8797, line: 255, type: !404)
!8993 = !DILocalVariable(name: "main", scope: !8987, file: !8797, line: 257, type: !404)
!8994 = !DILocalVariable(name: "frac", scope: !8987, file: !8797, line: 257, type: !404)
!8995 = !DILocation(line: 0, scope: !8987)
!8996 = !DILocation(line: 262, column: 12, scope: !8987)
!8997 = !DILocation(line: 263, column: 12, scope: !8987)
!8998 = !DILocation(line: 265, column: 17, scope: !8987)
!8999 = !DILocation(line: 265, column: 24, scope: !8987)
!9000 = !DILocation(line: 265, column: 5, scope: !8987)
!9001 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2637, file: !2637, line: 373, type: !8988, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9002)
!9002 = !{!9003, !9004}
!9003 = !DILocalVariable(name: "base", arg: 1, scope: !9001, file: !2637, line: 373, type: !2646)
!9004 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !9001, file: !2637, line: 373, type: !404)
!9005 = !DILocation(line: 0, scope: !9001)
!9006 = !DILocation(line: 375, column: 13, scope: !9001)
!9007 = !DILocation(line: 375, column: 52, scope: !9001)
!9008 = !DILocation(line: 375, column: 49, scope: !9001)
!9009 = !DILocation(line: 375, column: 85, scope: !9001)
!9010 = !DILocation(line: 375, column: 5, scope: !9001)
!9011 = distinct !DISubprogram(name: "GPIO_Init", scope: !9012, file: !9012, line: 47, type: !9013, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !9037)
!9012 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9013 = !DISubroutineType(types: !9014)
!9014 = !{null, !9015, !9027}
!9015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9016, size: 32)
!9016 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !399, line: 19729, baseType: !9017)
!9017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 19720, size: 256, elements: !9018)
!9018 = !{!9019, !9020, !9021, !9022, !9023, !9024, !9025, !9026}
!9019 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !9017, file: !399, line: 19721, baseType: !403, size: 32)
!9020 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !9017, file: !399, line: 19722, baseType: !403, size: 32, offset: 32)
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !9017, file: !399, line: 19723, baseType: !477, size: 32, offset: 64)
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !9017, file: !399, line: 19724, baseType: !403, size: 32, offset: 96)
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !9017, file: !399, line: 19725, baseType: !403, size: 32, offset: 128)
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !9017, file: !399, line: 19726, baseType: !403, size: 32, offset: 160)
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !9017, file: !399, line: 19727, baseType: !403, size: 32, offset: 192)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !9017, file: !399, line: 19728, baseType: !403, size: 32, offset: 224)
!9027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9028, size: 32)
!9028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9029)
!9029 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !930, line: 78, baseType: !9030)
!9030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !930, line: 73, size: 96, elements: !9031)
!9031 = !{!9032, !9033, !9035}
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !9030, file: !930, line: 75, baseType: !404, size: 32)
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9030, file: !930, line: 76, baseType: !9034, size: 32, offset: 32)
!9034 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !930, line: 53, baseType: !2713)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !9030, file: !930, line: 77, baseType: !9036, size: 32, offset: 64)
!9036 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !930, line: 63, baseType: !2717)
!9037 = !{!9038, !9039, !9040, !9041}
!9038 = !DILocalVariable(name: "base", arg: 1, scope: !9011, file: !9012, line: 47, type: !9015)
!9039 = !DILocalVariable(name: "initConfig", arg: 2, scope: !9011, file: !9012, line: 47, type: !9027)
!9040 = !DILocalVariable(name: "pin", scope: !9011, file: !9012, line: 49, type: !404)
!9041 = !DILocalVariable(name: "icr", scope: !9011, file: !9012, line: 50, type: !528)
!9042 = !DILocation(line: 0, scope: !9011)
!9043 = !DILocation(line: 53, column: 5, scope: !9011)
!9044 = !DILocation(line: 53, column: 24, scope: !9011)
!9045 = !DILocation(line: 54, column: 2, scope: !9011)
!9046 = !DILocation(line: 54, column: 26, scope: !9011)
!9047 = !DILocation(line: 57, column: 23, scope: !9011)
!9048 = !DILocation(line: 60, column: 21, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9011, file: !9012, line: 60, column: 9)
!9050 = !DILocation(line: 60, column: 31, scope: !9049)
!9051 = !DILocation(line: 0, scope: !9049)
!9052 = !DILocation(line: 60, column: 9, scope: !9011)
!9053 = !DILocation(line: 61, column: 9, scope: !9049)
!9054 = !DILocation(line: 61, column: 29, scope: !9049)
!9055 = !DILocation(line: 63, column: 32, scope: !9049)
!9056 = !DILocation(line: 63, column: 9, scope: !9049)
!9057 = !DILocation(line: 63, column: 29, scope: !9049)
!9058 = !DILocation(line: 66, column: 12, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9011, file: !9012, line: 66, column: 8)
!9060 = !DILocation(line: 66, column: 8, scope: !9011)
!9061 = !DILocation(line: 73, column: 24, scope: !9011)
!9062 = !DILocation(line: 73, column: 5, scope: !9011)
!9063 = !DILocation(line: 77, column: 30, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9065, file: !9012, line: 76, column: 9)
!9065 = distinct !DILexicalBlock(scope: !9011, file: !9012, line: 74, column: 5)
!9066 = !DILocation(line: 77, column: 26, scope: !9064)
!9067 = !DILocation(line: 77, column: 21, scope: !9064)
!9068 = !DILocation(line: 77, column: 18, scope: !9064)
!9069 = !DILocation(line: 78, column: 13, scope: !9064)
!9070 = !DILocation(line: 82, column: 21, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9065, file: !9012, line: 81, column: 9)
!9072 = !DILocation(line: 82, column: 38, scope: !9071)
!9073 = !DILocation(line: 82, column: 34, scope: !9071)
!9074 = !DILocation(line: 82, column: 29, scope: !9071)
!9075 = !DILocation(line: 82, column: 26, scope: !9071)
!9076 = !DILocation(line: 82, column: 53, scope: !9071)
!9077 = !DILocation(line: 82, column: 47, scope: !9071)
!9078 = !DILocation(line: 83, column: 13, scope: !9071)
!9079 = !DILocation(line: 87, column: 21, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9065, file: !9012, line: 86, column: 9)
!9081 = !DILocation(line: 87, column: 38, scope: !9080)
!9082 = !DILocation(line: 87, column: 34, scope: !9080)
!9083 = !DILocation(line: 87, column: 29, scope: !9080)
!9084 = !DILocation(line: 87, column: 26, scope: !9080)
!9085 = !DILocation(line: 87, column: 53, scope: !9080)
!9086 = !DILocation(line: 87, column: 47, scope: !9080)
!9087 = !DILocation(line: 88, column: 13, scope: !9080)
!9088 = !DILocation(line: 92, column: 29, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9065, file: !9012, line: 91, column: 9)
!9090 = !DILocation(line: 92, column: 25, scope: !9089)
!9091 = !DILocation(line: 92, column: 18, scope: !9089)
!9092 = !DILocation(line: 93, column: 13, scope: !9089)
!9093 = !DILocation(line: 0, scope: !9065)
!9094 = !DILocation(line: 100, column: 1, scope: !9011)
!9095 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !9012, file: !9012, line: 111, type: !9096, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !9099)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{null, !9015, !404, !9098}
!9098 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !930, line: 70, baseType: !929)
!9099 = !{!9100, !9101, !9102}
!9100 = !DILocalVariable(name: "base", arg: 1, scope: !9095, file: !9012, line: 111, type: !9015)
!9101 = !DILocalVariable(name: "pin", arg: 2, scope: !9095, file: !9012, line: 111, type: !404)
!9102 = !DILocalVariable(name: "pinVal", arg: 3, scope: !9095, file: !9012, line: 111, type: !9098)
!9103 = !DILocation(line: 0, scope: !9095)
!9104 = !DILocation(line: 114, column: 16, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9095, file: !9012, line: 114, column: 9)
!9106 = !DILocation(line: 0, scope: !9105)
!9107 = !DILocation(line: 114, column: 9, scope: !9095)
!9108 = !DILocation(line: 116, column: 9, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9105, file: !9012, line: 115, column: 5)
!9110 = !DILocation(line: 116, column: 27, scope: !9109)
!9111 = !DILocation(line: 117, column: 5, scope: !9109)
!9112 = !DILocation(line: 120, column: 30, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9105, file: !9012, line: 119, column: 5)
!9114 = !DILocation(line: 120, column: 9, scope: !9113)
!9115 = !DILocation(line: 120, column: 27, scope: !9113)
!9116 = !DILocation(line: 122, column: 1, scope: !9095)
!9117 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !9012, file: !9012, line: 133, type: !9118, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !9120)
!9118 = !DISubroutineType(types: !9119)
!9119 = !{null, !9015, !404, !580}
!9120 = !{!9121, !9122, !9123}
!9121 = !DILocalVariable(name: "base", arg: 1, scope: !9117, file: !9012, line: 133, type: !9015)
!9122 = !DILocalVariable(name: "pin", arg: 2, scope: !9117, file: !9012, line: 133, type: !404)
!9123 = !DILocalVariable(name: "enable", arg: 3, scope: !9117, file: !9012, line: 133, type: !580)
!9124 = !DILocation(line: 0, scope: !9117)
!9125 = !DILocation(line: 0, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9117, file: !9012, line: 137, column: 8)
!9127 = !DILocation(line: 137, column: 8, scope: !9117)
!9128 = !DILocation(line: 138, column: 9, scope: !9126)
!9129 = !DILocation(line: 138, column: 28, scope: !9126)
!9130 = !DILocation(line: 140, column: 31, scope: !9126)
!9131 = !DILocation(line: 140, column: 9, scope: !9126)
!9132 = !DILocation(line: 140, column: 28, scope: !9126)
!9133 = !DILocation(line: 141, column: 1, scope: !9117)
!9134 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !9012, file: !9012, line: 150, type: !9118, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !9135)
!9135 = !{!9136, !9137, !9138}
!9136 = !DILocalVariable(name: "base", arg: 1, scope: !9134, file: !9012, line: 150, type: !9015)
!9137 = !DILocalVariable(name: "pin", arg: 2, scope: !9134, file: !9012, line: 150, type: !404)
!9138 = !DILocalVariable(name: "enable", arg: 3, scope: !9134, file: !9012, line: 150, type: !580)
!9139 = !DILocation(line: 0, scope: !9134)
!9140 = !DILocation(line: 0, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9134, file: !9012, line: 154, column: 8)
!9142 = !DILocation(line: 154, column: 8, scope: !9134)
!9143 = !DILocation(line: 155, column: 9, scope: !9141)
!9144 = !DILocation(line: 155, column: 33, scope: !9141)
!9145 = !DILocation(line: 157, column: 36, scope: !9141)
!9146 = !DILocation(line: 157, column: 9, scope: !9141)
!9147 = !DILocation(line: 157, column: 33, scope: !9141)
!9148 = !DILocation(line: 158, column: 1, scope: !9134)
!9149 = distinct !DISubprogram(name: "UART_Init", scope: !9150, file: !9150, line: 47, type: !9151, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9187)
!9150 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9151 = !DISubroutineType(types: !9152)
!9152 = !{null, !9153, !9176}
!9153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9154, size: 32)
!9154 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !399, line: 41342, baseType: !9155)
!9155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 41322, size: 1504, elements: !9156)
!9156 = !{!9157, !9158, !9159, !9160, !9161, !9162, !9163, !9164, !9165, !9166, !9167, !9168, !9169, !9170, !9171, !9172, !9173, !9174, !9175}
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !9155, file: !399, line: 41323, baseType: !477, size: 32)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9155, file: !399, line: 41324, baseType: !1286, size: 480, offset: 32)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !9155, file: !399, line: 41325, baseType: !403, size: 32, offset: 512)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9155, file: !399, line: 41326, baseType: !1286, size: 480, offset: 544)
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !9155, file: !399, line: 41327, baseType: !403, size: 32, offset: 1024)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !9155, file: !399, line: 41328, baseType: !403, size: 32, offset: 1056)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !9155, file: !399, line: 41329, baseType: !403, size: 32, offset: 1088)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !9155, file: !399, line: 41330, baseType: !403, size: 32, offset: 1120)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !9155, file: !399, line: 41331, baseType: !403, size: 32, offset: 1152)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !9155, file: !399, line: 41332, baseType: !403, size: 32, offset: 1184)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !9155, file: !399, line: 41333, baseType: !403, size: 32, offset: 1216)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !9155, file: !399, line: 41334, baseType: !403, size: 32, offset: 1248)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !9155, file: !399, line: 41335, baseType: !403, size: 32, offset: 1280)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !9155, file: !399, line: 41336, baseType: !403, size: 32, offset: 1312)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !9155, file: !399, line: 41337, baseType: !403, size: 32, offset: 1344)
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !9155, file: !399, line: 41338, baseType: !477, size: 32, offset: 1376)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !9155, file: !399, line: 41339, baseType: !403, size: 32, offset: 1408)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !9155, file: !399, line: 41340, baseType: !403, size: 32, offset: 1440)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !9155, file: !399, line: 41341, baseType: !403, size: 32, offset: 1472)
!9176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9177, size: 32)
!9177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9178)
!9178 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1116, line: 57, baseType: !9179)
!9179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1116, line: 49, size: 192, elements: !9180)
!9180 = !{!9181, !9182, !9183, !9184, !9185, !9186}
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !9179, file: !1116, line: 51, baseType: !404, size: 32)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !9179, file: !1116, line: 52, baseType: !404, size: 32, offset: 32)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !9179, file: !1116, line: 53, baseType: !404, size: 32, offset: 64)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !9179, file: !1116, line: 54, baseType: !404, size: 32, offset: 96)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !9179, file: !1116, line: 55, baseType: !404, size: 32, offset: 128)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9179, file: !1116, line: 56, baseType: !404, size: 32, offset: 160)
!9187 = !{!9188, !9189}
!9188 = !DILocalVariable(name: "base", arg: 1, scope: !9149, file: !9150, line: 47, type: !9153)
!9189 = !DILocalVariable(name: "initConfig", arg: 2, scope: !9149, file: !9150, line: 47, type: !9176)
!9190 = !DILocation(line: 0, scope: !9149)
!9191 = !DILocation(line: 52, column: 5, scope: !9149)
!9192 = !DILocation(line: 52, column: 25, scope: !9149)
!9193 = !DILocation(line: 55, column: 5, scope: !9149)
!9194 = !DILocation(line: 60, column: 41, scope: !9149)
!9195 = !DILocation(line: 61, column: 41, scope: !9149)
!9196 = !DILocation(line: 62, column: 41, scope: !9149)
!9197 = !DILocation(line: 63, column: 41, scope: !9149)
!9198 = !DILocation(line: 60, column: 5, scope: !9149)
!9199 = !DILocation(line: 60, column: 25, scope: !9149)
!9200 = !DILocation(line: 61, column: 52, scope: !9149)
!9201 = !DILocation(line: 62, column: 52, scope: !9149)
!9202 = !DILocation(line: 63, column: 52, scope: !9149)
!9203 = !DILocation(line: 68, column: 5, scope: !9149)
!9204 = !DILocation(line: 68, column: 25, scope: !9149)
!9205 = !DILocation(line: 72, column: 40, scope: !9149)
!9206 = !DILocation(line: 72, column: 63, scope: !9149)
!9207 = !DILocation(line: 72, column: 5, scope: !9149)
!9208 = !DILocation(line: 73, column: 1, scope: !9149)
!9209 = distinct !DISubprogram(name: "UART_Deinit", scope: !9150, file: !9150, line: 82, type: !9210, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9212)
!9210 = !DISubroutineType(types: !9211)
!9211 = !{null, !9153}
!9212 = !{!9213}
!9213 = !DILocalVariable(name: "base", arg: 1, scope: !9209, file: !9150, line: 82, type: !9153)
!9214 = !DILocation(line: 0, scope: !9209)
!9215 = !DILocation(line: 85, column: 5, scope: !9209)
!9216 = !DILocation(line: 85, column: 25, scope: !9209)
!9217 = !DILocation(line: 88, column: 26, scope: !9209)
!9218 = !DILocation(line: 89, column: 5, scope: !9209)
!9219 = !DILocation(line: 89, column: 26, scope: !9209)
!9220 = !DILocation(line: 90, column: 5, scope: !9209)
!9221 = !DILocation(line: 90, column: 26, scope: !9209)
!9222 = !DILocation(line: 93, column: 5, scope: !9209)
!9223 = !DILocation(line: 93, column: 26, scope: !9209)
!9224 = !DILocation(line: 94, column: 5, scope: !9209)
!9225 = !DILocation(line: 94, column: 26, scope: !9209)
!9226 = !DILocation(line: 95, column: 5, scope: !9209)
!9227 = !DILocation(line: 95, column: 26, scope: !9209)
!9228 = !DILocation(line: 96, column: 5, scope: !9209)
!9229 = !DILocation(line: 96, column: 26, scope: !9209)
!9230 = !DILocation(line: 97, column: 5, scope: !9209)
!9231 = !DILocation(line: 97, column: 26, scope: !9209)
!9232 = !DILocation(line: 98, column: 5, scope: !9209)
!9233 = !DILocation(line: 98, column: 26, scope: !9209)
!9234 = !DILocation(line: 99, column: 5, scope: !9209)
!9235 = !DILocation(line: 99, column: 26, scope: !9209)
!9236 = !DILocation(line: 103, column: 25, scope: !9209)
!9237 = !DILocation(line: 104, column: 5, scope: !9209)
!9238 = !DILocation(line: 104, column: 14, scope: !9209)
!9239 = !DILocation(line: 104, column: 34, scope: !9209)
!9240 = !DILocation(line: 104, column: 12, scope: !9209)
!9241 = distinct !{!9241, !9237, !9242}
!9242 = !DILocation(line: 104, column: 57, scope: !9209)
!9243 = !DILocation(line: 105, column: 1, scope: !9209)
!9244 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !9150, file: !9150, line: 113, type: !9245, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9247)
!9245 = !DISubroutineType(types: !9246)
!9246 = !{null, !9153, !404, !404}
!9247 = !{!9248, !9249, !9250, !9251, !9252, !9253, !9254, !9255, !9256, !9259, !9260}
!9248 = !DILocalVariable(name: "base", arg: 1, scope: !9244, file: !9150, line: 113, type: !9153)
!9249 = !DILocalVariable(name: "clockRate", arg: 2, scope: !9244, file: !9150, line: 113, type: !404)
!9250 = !DILocalVariable(name: "baudRate", arg: 3, scope: !9244, file: !9150, line: 113, type: !404)
!9251 = !DILocalVariable(name: "numerator", scope: !9244, file: !9150, line: 115, type: !404)
!9252 = !DILocalVariable(name: "denominator", scope: !9244, file: !9150, line: 116, type: !404)
!9253 = !DILocalVariable(name: "divisor", scope: !9244, file: !9150, line: 117, type: !404)
!9254 = !DILocalVariable(name: "refFreqDiv", scope: !9244, file: !9150, line: 118, type: !404)
!9255 = !DILocalVariable(name: "divider", scope: !9244, file: !9150, line: 119, type: !404)
!9256 = !DILocalVariable(name: "m", scope: !9257, file: !9150, line: 141, type: !404)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !9150, line: 140, column: 5)
!9258 = distinct !DILexicalBlock(scope: !9244, file: !9150, line: 138, column: 9)
!9259 = !DILocalVariable(name: "n", scope: !9257, file: !9150, line: 142, type: !404)
!9260 = !DILocalVariable(name: "max", scope: !9257, file: !9150, line: 143, type: !404)
!9261 = !DILocation(line: 0, scope: !9244)
!9262 = !DILocation(line: 123, column: 28, scope: !9244)
!9263 = !DILocation(line: 126, column: 24, scope: !9244)
!9264 = !DILocation(line: 126, column: 5, scope: !9244)
!9265 = !DILocation(line: 129, column: 33, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9244, file: !9150, line: 127, column: 5)
!9267 = distinct !{!9267, !9264, !9268}
!9268 = !DILocation(line: 131, column: 5, scope: !9244)
!9269 = !DILocation(line: 133, column: 27, scope: !9244)
!9270 = !DILocation(line: 134, column: 35, scope: !9244)
!9271 = !DILocation(line: 138, column: 20, scope: !9258)
!9272 = !DILocation(line: 138, column: 48, scope: !9258)
!9273 = !DILocation(line: 141, column: 33, scope: !9257)
!9274 = !DILocation(line: 141, column: 38, scope: !9257)
!9275 = !DILocation(line: 141, column: 65, scope: !9257)
!9276 = !DILocation(line: 0, scope: !9257)
!9277 = !DILocation(line: 142, column: 35, scope: !9257)
!9278 = !DILocation(line: 142, column: 40, scope: !9257)
!9279 = !DILocation(line: 142, column: 61, scope: !9257)
!9280 = !DILocation(line: 143, column: 26, scope: !9257)
!9281 = !DILocation(line: 143, column: 24, scope: !9257)
!9282 = !DILocation(line: 144, column: 19, scope: !9257)
!9283 = !DILocation(line: 145, column: 21, scope: !9257)
!9284 = !DILocation(line: 146, column: 15, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9257, file: !9150, line: 146, column: 13)
!9286 = !DILocation(line: 146, column: 13, scope: !9257)
!9287 = !DILocation(line: 148, column: 15, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9257, file: !9150, line: 148, column: 13)
!9289 = !DILocation(line: 148, column: 13, scope: !9257)
!9290 = !DILocation(line: 150, column: 5, scope: !9257)
!9291 = !DILocation(line: 151, column: 26, scope: !9244)
!9292 = !DILocation(line: 151, column: 31, scope: !9244)
!9293 = !DILocation(line: 151, column: 52, scope: !9244)
!9294 = !DILocation(line: 153, column: 5, scope: !9244)
!9295 = !DILocation(line: 0, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9244, file: !9150, line: 154, column: 5)
!9297 = !DILocation(line: 180, column: 5, scope: !9244)
!9298 = !DILocation(line: 180, column: 25, scope: !9244)
!9299 = !DILocation(line: 181, column: 25, scope: !9244)
!9300 = !DILocation(line: 182, column: 27, scope: !9244)
!9301 = !DILocation(line: 182, column: 5, scope: !9244)
!9302 = !DILocation(line: 182, column: 25, scope: !9244)
!9303 = !DILocation(line: 183, column: 27, scope: !9244)
!9304 = !DILocation(line: 183, column: 5, scope: !9244)
!9305 = !DILocation(line: 183, column: 25, scope: !9244)
!9306 = !DILocation(line: 184, column: 28, scope: !9244)
!9307 = !DILocation(line: 184, column: 5, scope: !9244)
!9308 = !DILocation(line: 184, column: 26, scope: !9244)
!9309 = !DILocation(line: 185, column: 1, scope: !9244)
!9310 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !9150, file: !9150, line: 194, type: !9311, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9313)
!9311 = !DISubroutineType(types: !9312)
!9312 = !{null, !9153, !404, !580}
!9313 = !{!9314, !9315, !9316}
!9314 = !DILocalVariable(name: "base", arg: 1, scope: !9310, file: !9150, line: 194, type: !9153)
!9315 = !DILocalVariable(name: "direction", arg: 2, scope: !9310, file: !9150, line: 194, type: !404)
!9316 = !DILocalVariable(name: "invert", arg: 3, scope: !9310, file: !9150, line: 194, type: !580)
!9317 = !DILocation(line: 0, scope: !9310)
!9318 = !DILocation(line: 0, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9310, file: !9150, line: 198, column: 9)
!9320 = !DILocation(line: 198, column: 9, scope: !9310)
!9321 = !DILocation(line: 200, column: 13, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9319, file: !9150, line: 199, column: 5)
!9323 = !DILocation(line: 201, column: 13, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9322, file: !9150, line: 200, column: 13)
!9325 = !DILocation(line: 201, column: 33, scope: !9324)
!9326 = !DILocation(line: 202, column: 23, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9322, file: !9150, line: 202, column: 13)
!9328 = !DILocation(line: 202, column: 13, scope: !9322)
!9329 = !DILocation(line: 203, column: 13, scope: !9327)
!9330 = !DILocation(line: 203, column: 33, scope: !9327)
!9331 = !DILocation(line: 207, column: 13, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9319, file: !9150, line: 206, column: 5)
!9333 = !DILocation(line: 208, column: 13, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9332, file: !9150, line: 207, column: 13)
!9335 = !DILocation(line: 208, column: 33, scope: !9334)
!9336 = !DILocation(line: 209, column: 23, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9332, file: !9150, line: 209, column: 13)
!9338 = !DILocation(line: 209, column: 13, scope: !9332)
!9339 = !DILocation(line: 210, column: 13, scope: !9337)
!9340 = !DILocation(line: 210, column: 33, scope: !9337)
!9341 = !DILocation(line: 212, column: 1, scope: !9310)
!9342 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !9150, file: !9150, line: 224, type: !9343, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9345)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{null, !9153, !580}
!9345 = !{!9346, !9347}
!9346 = !DILocalVariable(name: "base", arg: 1, scope: !9342, file: !9150, line: 224, type: !9153)
!9347 = !DILocalVariable(name: "enable", arg: 2, scope: !9342, file: !9150, line: 224, type: !580)
!9348 = !DILocation(line: 0, scope: !9342)
!9349 = !DILocation(line: 0, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9342, file: !9150, line: 226, column: 9)
!9351 = !DILocation(line: 226, column: 9, scope: !9342)
!9352 = !DILocation(line: 230, column: 1, scope: !9342)
!9353 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !9150, file: !9150, line: 239, type: !9343, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9354)
!9354 = !{!9355, !9356}
!9355 = !DILocalVariable(name: "base", arg: 1, scope: !9353, file: !9150, line: 239, type: !9153)
!9356 = !DILocalVariable(name: "enable", arg: 2, scope: !9353, file: !9150, line: 239, type: !580)
!9357 = !DILocation(line: 0, scope: !9353)
!9358 = !DILocation(line: 0, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9353, file: !9150, line: 241, column: 9)
!9360 = !DILocation(line: 241, column: 9, scope: !9353)
!9361 = !DILocation(line: 245, column: 1, scope: !9353)
!9362 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !9150, file: !9150, line: 258, type: !9311, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9363)
!9363 = !{!9364, !9365, !9366, !9367, !9368}
!9364 = !DILocalVariable(name: "base", arg: 1, scope: !9362, file: !9150, line: 258, type: !9153)
!9365 = !DILocalVariable(name: "intSource", arg: 2, scope: !9362, file: !9150, line: 258, type: !404)
!9366 = !DILocalVariable(name: "enable", arg: 3, scope: !9362, file: !9150, line: 258, type: !580)
!9367 = !DILocalVariable(name: "uart_reg", scope: !9362, file: !9150, line: 260, type: !528)
!9368 = !DILocalVariable(name: "uart_mask", scope: !9362, file: !9150, line: 261, type: !404)
!9369 = !DILocation(line: 0, scope: !9362)
!9370 = !DILocation(line: 263, column: 29, scope: !9362)
!9371 = !DILocation(line: 263, column: 57, scope: !9362)
!9372 = !DILocation(line: 263, column: 44, scope: !9362)
!9373 = !DILocation(line: 263, column: 16, scope: !9362)
!9374 = !DILocation(line: 264, column: 34, scope: !9362)
!9375 = !DILocation(line: 264, column: 20, scope: !9362)
!9376 = !DILocation(line: 266, column: 9, scope: !9362)
!9377 = !DILocation(line: 267, column: 19, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9362, file: !9150, line: 266, column: 9)
!9379 = !DILocation(line: 267, column: 9, scope: !9378)
!9380 = !DILocation(line: 269, column: 22, scope: !9378)
!9381 = !DILocation(line: 269, column: 19, scope: !9378)
!9382 = !DILocation(line: 0, scope: !9378)
!9383 = !DILocation(line: 270, column: 1, scope: !9362)
!9384 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !9150, file: !9150, line: 299, type: !9385, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9387)
!9385 = !DISubroutineType(types: !9386)
!9386 = !{null, !9153, !404}
!9387 = !{!9388, !9389, !9390, !9391}
!9388 = !DILocalVariable(name: "base", arg: 1, scope: !9384, file: !9150, line: 299, type: !9153)
!9389 = !DILocalVariable(name: "flag", arg: 2, scope: !9384, file: !9150, line: 299, type: !404)
!9390 = !DILocalVariable(name: "uart_reg", scope: !9384, file: !9150, line: 301, type: !528)
!9391 = !DILocalVariable(name: "uart_mask", scope: !9384, file: !9150, line: 302, type: !404)
!9392 = !DILocation(line: 0, scope: !9384)
!9393 = !DILocation(line: 304, column: 29, scope: !9384)
!9394 = !DILocation(line: 304, column: 52, scope: !9384)
!9395 = !DILocation(line: 304, column: 44, scope: !9384)
!9396 = !DILocation(line: 304, column: 16, scope: !9384)
!9397 = !DILocation(line: 305, column: 29, scope: !9384)
!9398 = !DILocation(line: 305, column: 20, scope: !9384)
!9399 = !DILocation(line: 308, column: 15, scope: !9384)
!9400 = !DILocation(line: 309, column: 1, scope: !9384)
!9401 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !9150, file: !9150, line: 322, type: !9311, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9402)
!9402 = !{!9403, !9404, !9405, !9406, !9407}
!9403 = !DILocalVariable(name: "base", arg: 1, scope: !9401, file: !9150, line: 322, type: !9153)
!9404 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !9401, file: !9150, line: 322, type: !404)
!9405 = !DILocalVariable(name: "enable", arg: 3, scope: !9401, file: !9150, line: 322, type: !580)
!9406 = !DILocalVariable(name: "uart_reg", scope: !9401, file: !9150, line: 324, type: !528)
!9407 = !DILocalVariable(name: "uart_mask", scope: !9401, file: !9150, line: 325, type: !404)
!9408 = !DILocation(line: 0, scope: !9401)
!9409 = !DILocation(line: 327, column: 29, scope: !9401)
!9410 = !DILocation(line: 327, column: 57, scope: !9401)
!9411 = !DILocation(line: 327, column: 44, scope: !9401)
!9412 = !DILocation(line: 327, column: 16, scope: !9401)
!9413 = !DILocation(line: 328, column: 34, scope: !9401)
!9414 = !DILocation(line: 328, column: 20, scope: !9401)
!9415 = !DILocation(line: 329, column: 9, scope: !9401)
!9416 = !DILocation(line: 330, column: 19, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9401, file: !9150, line: 329, column: 9)
!9418 = !DILocation(line: 330, column: 9, scope: !9417)
!9419 = !DILocation(line: 332, column: 22, scope: !9417)
!9420 = !DILocation(line: 332, column: 19, scope: !9417)
!9421 = !DILocation(line: 0, scope: !9417)
!9422 = !DILocation(line: 333, column: 1, scope: !9401)
!9423 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !9150, file: !9150, line: 345, type: !9343, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9424)
!9424 = !{!9425, !9426}
!9425 = !DILocalVariable(name: "base", arg: 1, scope: !9423, file: !9150, line: 345, type: !9153)
!9426 = !DILocalVariable(name: "enable", arg: 2, scope: !9423, file: !9150, line: 345, type: !580)
!9427 = !DILocation(line: 0, scope: !9423)
!9428 = !DILocation(line: 0, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9423, file: !9150, line: 347, column: 9)
!9430 = !DILocation(line: 347, column: 9, scope: !9423)
!9431 = !DILocation(line: 351, column: 1, scope: !9423)
!9432 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !9150, file: !9150, line: 362, type: !9343, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9433)
!9433 = !{!9434, !9435}
!9434 = !DILocalVariable(name: "base", arg: 1, scope: !9432, file: !9150, line: 362, type: !9153)
!9435 = !DILocalVariable(name: "enable", arg: 2, scope: !9432, file: !9150, line: 362, type: !580)
!9436 = !DILocation(line: 0, scope: !9432)
!9437 = !DILocation(line: 0, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9432, file: !9150, line: 364, column: 9)
!9439 = !DILocation(line: 364, column: 9, scope: !9432)
!9440 = !DILocation(line: 368, column: 1, scope: !9432)
!9441 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !9150, file: !9150, line: 379, type: !9343, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9442)
!9442 = !{!9443, !9444}
!9443 = !DILocalVariable(name: "base", arg: 1, scope: !9441, file: !9150, line: 379, type: !9153)
!9444 = !DILocalVariable(name: "active", arg: 2, scope: !9441, file: !9150, line: 379, type: !580)
!9445 = !DILocation(line: 0, scope: !9441)
!9446 = !DILocation(line: 0, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9441, file: !9150, line: 381, column: 9)
!9448 = !DILocation(line: 381, column: 9, scope: !9441)
!9449 = !DILocation(line: 385, column: 1, scope: !9441)
!9450 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !9150, file: !9150, line: 394, type: !9385, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9451)
!9451 = !{!9452, !9453}
!9452 = !DILocalVariable(name: "base", arg: 1, scope: !9450, file: !9150, line: 394, type: !9153)
!9453 = !DILocalVariable(name: "mode", arg: 2, scope: !9450, file: !9150, line: 394, type: !404)
!9454 = !DILocation(line: 0, scope: !9450)
!9455 = !DILocation(line: 398, column: 26, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9450, file: !9150, line: 398, column: 9)
!9457 = !DILocation(line: 0, scope: !9456)
!9458 = !DILocation(line: 398, column: 9, scope: !9450)
!9459 = !DILocation(line: 402, column: 1, scope: !9450)
!9460 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !9150, file: !9150, line: 412, type: !9343, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9461)
!9461 = !{!9462, !9463}
!9462 = !DILocalVariable(name: "base", arg: 1, scope: !9460, file: !9150, line: 412, type: !9153)
!9463 = !DILocalVariable(name: "active", arg: 2, scope: !9460, file: !9150, line: 412, type: !580)
!9464 = !DILocation(line: 0, scope: !9460)
!9465 = !DILocation(line: 0, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9460, file: !9150, line: 414, column: 9)
!9467 = !DILocation(line: 414, column: 9, scope: !9460)
!9468 = !DILocation(line: 418, column: 1, scope: !9460)
!9469 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !9150, file: !9150, line: 427, type: !9343, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9470)
!9470 = !{!9471, !9472}
!9471 = !DILocalVariable(name: "base", arg: 1, scope: !9469, file: !9150, line: 427, type: !9153)
!9472 = !DILocalVariable(name: "active", arg: 2, scope: !9469, file: !9150, line: 427, type: !580)
!9473 = !DILocation(line: 0, scope: !9469)
!9474 = !DILocation(line: 0, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9469, file: !9150, line: 429, column: 9)
!9476 = !DILocation(line: 429, column: 9, scope: !9469)
!9477 = !DILocation(line: 433, column: 1, scope: !9469)
!9478 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !9150, file: !9150, line: 442, type: !9343, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9479)
!9479 = !{!9480, !9481}
!9480 = !DILocalVariable(name: "base", arg: 1, scope: !9478, file: !9150, line: 442, type: !9153)
!9481 = !DILocalVariable(name: "active", arg: 2, scope: !9478, file: !9150, line: 442, type: !580)
!9482 = !DILocation(line: 0, scope: !9478)
!9483 = !DILocation(line: 0, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9478, file: !9150, line: 444, column: 9)
!9485 = !DILocation(line: 444, column: 9, scope: !9478)
!9486 = !DILocation(line: 448, column: 1, scope: !9478)
!9487 = distinct !DISubprogram(name: "UART_Putchar9", scope: !9150, file: !9150, line: 460, type: !9488, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9490)
!9488 = !DISubroutineType(types: !9489)
!9489 = !{null, !9153, !521}
!9490 = !{!9491, !9492}
!9491 = !DILocalVariable(name: "base", arg: 1, scope: !9487, file: !9150, line: 460, type: !9153)
!9492 = !DILocalVariable(name: "data", arg: 2, scope: !9487, file: !9150, line: 460, type: !521)
!9493 = !DILocation(line: 0, scope: !9487)
!9494 = !DILocation(line: 464, column: 9, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9487, file: !9150, line: 464, column: 9)
!9496 = !DILocation(line: 0, scope: !9495)
!9497 = !DILocation(line: 464, column: 9, scope: !9487)
!9498 = !DILocation(line: 468, column: 33, scope: !9487)
!9499 = !DILocation(line: 468, column: 5, scope: !9487)
!9500 = !DILocation(line: 468, column: 25, scope: !9487)
!9501 = !DILocation(line: 469, column: 1, scope: !9487)
!9502 = distinct !DISubprogram(name: "UART_Getchar9", scope: !9150, file: !9150, line: 478, type: !9503, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9505)
!9503 = !DISubroutineType(types: !9504)
!9504 = !{!521, !9153}
!9505 = !{!9506, !9507}
!9506 = !DILocalVariable(name: "base", arg: 1, scope: !9502, file: !9150, line: 478, type: !9153)
!9507 = !DILocalVariable(name: "rxData", scope: !9502, file: !9150, line: 480, type: !521)
!9508 = !DILocation(line: 0, scope: !9502)
!9509 = !DILocation(line: 480, column: 23, scope: !9502)
!9510 = !DILocation(line: 482, column: 9, scope: !9502)
!9511 = !DILocation(line: 491, column: 5, scope: !9502)
!9512 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !9150, file: !9150, line: 501, type: !9343, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9513)
!9513 = !{!9514, !9515}
!9514 = !DILocalVariable(name: "base", arg: 1, scope: !9512, file: !9150, line: 501, type: !9153)
!9515 = !DILocalVariable(name: "enable", arg: 2, scope: !9512, file: !9150, line: 501, type: !580)
!9516 = !DILocation(line: 0, scope: !9512)
!9517 = !DILocation(line: 0, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9512, file: !9150, line: 503, column: 9)
!9519 = !DILocation(line: 503, column: 9, scope: !9512)
!9520 = !DILocation(line: 507, column: 1, scope: !9512)
!9521 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !9150, file: !9150, line: 516, type: !9343, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9522)
!9522 = !{!9523, !9524}
!9523 = !DILocalVariable(name: "base", arg: 1, scope: !9521, file: !9150, line: 516, type: !9153)
!9524 = !DILocalVariable(name: "enable", arg: 2, scope: !9521, file: !9150, line: 516, type: !580)
!9525 = !DILocation(line: 0, scope: !9521)
!9526 = !DILocation(line: 0, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9521, file: !9150, line: 518, column: 9)
!9528 = !DILocation(line: 518, column: 9, scope: !9521)
!9529 = !DILocation(line: 522, column: 1, scope: !9521)
!9530 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !9150, file: !9150, line: 534, type: !9343, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9531)
!9531 = !{!9532, !9533}
!9532 = !DILocalVariable(name: "base", arg: 1, scope: !9530, file: !9150, line: 534, type: !9153)
!9533 = !DILocalVariable(name: "enable", arg: 2, scope: !9530, file: !9150, line: 534, type: !580)
!9534 = !DILocation(line: 0, scope: !9530)
!9535 = !DILocation(line: 0, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9530, file: !9150, line: 536, column: 9)
!9537 = !DILocation(line: 536, column: 9, scope: !9530)
!9538 = !DILocation(line: 540, column: 1, scope: !9530)
!9539 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !9150, file: !9150, line: 550, type: !9385, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9540)
!9540 = !{!9541, !9542}
!9541 = !DILocalVariable(name: "base", arg: 1, scope: !9539, file: !9150, line: 550, type: !9153)
!9542 = !DILocalVariable(name: "voteClock", arg: 2, scope: !9539, file: !9150, line: 550, type: !404)
!9543 = !DILocation(line: 0, scope: !9539)
!9544 = !DILocation(line: 555, column: 35, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9539, file: !9150, line: 555, column: 9)
!9546 = !DILocation(line: 0, scope: !9545)
!9547 = !DILocation(line: 555, column: 9, scope: !9539)
!9548 = !DILocation(line: 559, column: 1, scope: !9539)
!9549 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !9150, file: !9150, line: 571, type: !9343, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9550)
!9550 = !{!9551, !9552}
!9551 = !DILocalVariable(name: "base", arg: 1, scope: !9549, file: !9150, line: 571, type: !9153)
!9552 = !DILocalVariable(name: "enable", arg: 2, scope: !9549, file: !9150, line: 571, type: !580)
!9553 = !DILocation(line: 0, scope: !9549)
!9554 = !DILocation(line: 0, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9549, file: !9150, line: 573, column: 9)
!9556 = !DILocation(line: 573, column: 9, scope: !9549)
!9557 = !DILocation(line: 577, column: 1, scope: !9549)
!9558 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !9150, file: !9150, line: 587, type: !9343, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9559)
!9559 = !{!9560, !9561}
!9560 = !DILocalVariable(name: "base", arg: 1, scope: !9558, file: !9150, line: 587, type: !9153)
!9561 = !DILocalVariable(name: "active", arg: 2, scope: !9558, file: !9150, line: 587, type: !580)
!9562 = !DILocation(line: 0, scope: !9558)
!9563 = !DILocation(line: 0, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9558, file: !9150, line: 589, column: 9)
!9565 = !DILocation(line: 589, column: 9, scope: !9558)
!9566 = !DILocation(line: 593, column: 1, scope: !9558)
!9567 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !9150, file: !9150, line: 602, type: !9343, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !9568)
!9568 = !{!9569, !9570}
!9569 = !DILocalVariable(name: "base", arg: 1, scope: !9567, file: !9150, line: 602, type: !9153)
!9570 = !DILocalVariable(name: "enable", arg: 2, scope: !9567, file: !9150, line: 602, type: !580)
!9571 = !DILocation(line: 0, scope: !9567)
!9572 = !DILocation(line: 0, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9567, file: !9150, line: 604, column: 9)
!9574 = !DILocation(line: 604, column: 9, scope: !9567)
!9575 = !DILocation(line: 608, column: 1, scope: !9567)
!9576 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !9577, file: !9577, line: 42, type: !9578, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !9594)
!9577 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9578 = !DISubroutineType(types: !9579)
!9579 = !{!404, !9580}
!9580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9581, size: 32)
!9581 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !399, line: 20831, baseType: !9582)
!9582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 20820, size: 320, elements: !9583)
!9583 = !{!9584, !9585, !9586, !9587, !9588, !9589, !9590, !9591, !9592, !9593}
!9584 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !9582, file: !399, line: 20821, baseType: !403, size: 32)
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !9582, file: !399, line: 20822, baseType: !403, size: 32, offset: 32)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !9582, file: !399, line: 20823, baseType: !403, size: 32, offset: 64)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !9582, file: !399, line: 20824, baseType: !403, size: 32, offset: 96)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !9582, file: !399, line: 20825, baseType: !403, size: 32, offset: 128)
!9589 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !9582, file: !399, line: 20826, baseType: !403, size: 32, offset: 160)
!9590 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !9582, file: !399, line: 20827, baseType: !403, size: 32, offset: 192)
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !9582, file: !399, line: 20828, baseType: !477, size: 32, offset: 224)
!9592 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !9582, file: !399, line: 20829, baseType: !477, size: 32, offset: 256)
!9593 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !9582, file: !399, line: 20830, baseType: !477, size: 32, offset: 288)
!9594 = !{!9595, !9596, !9597, !9598, !9599}
!9595 = !DILocalVariable(name: "base", arg: 1, scope: !9576, file: !9577, line: 42, type: !9580)
!9596 = !DILocalVariable(name: "root", scope: !9576, file: !9577, line: 44, type: !404)
!9597 = !DILocalVariable(name: "hz", scope: !9576, file: !9577, line: 45, type: !404)
!9598 = !DILocalVariable(name: "pre", scope: !9576, file: !9577, line: 46, type: !404)
!9599 = !DILocalVariable(name: "post", scope: !9576, file: !9577, line: 46, type: !404)
!9600 = !DILocation(line: 0, scope: !9576)
!9601 = !DILocation(line: 46, column: 2, scope: !9576)
!9602 = !DILocation(line: 48, column: 10, scope: !9576)
!9603 = !DILocation(line: 48, column: 2, scope: !9576)
!9604 = !DILocation(line: 56, column: 3, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9576, file: !9577, line: 48, column: 26)
!9606 = !DILocation(line: 0, scope: !9605)
!9607 = !DILocation(line: 61, column: 2, scope: !9576)
!9608 = !DILocation(line: 66, column: 8, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9576, file: !9577, line: 61, column: 16)
!9610 = !DILocation(line: 67, column: 3, scope: !9609)
!9611 = !DILocation(line: 0, scope: !9609)
!9612 = !DILocation(line: 72, column: 15, scope: !9576)
!9613 = !DILocation(line: 72, column: 19, scope: !9576)
!9614 = !DILocation(line: 72, column: 12, scope: !9576)
!9615 = !DILocation(line: 72, column: 27, scope: !9576)
!9616 = !DILocation(line: 72, column: 32, scope: !9576)
!9617 = !DILocation(line: 72, column: 24, scope: !9576)
!9618 = !DILocation(line: 72, column: 2, scope: !9576)
!9619 = !DILocation(line: 73, column: 1, scope: !9576)
!9620 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !115, file: !115, line: 368, type: !9621, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !9623)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{!404, !2750, !404}
!9623 = !{!9624, !9625}
!9624 = !DILocalVariable(name: "base", arg: 1, scope: !9620, file: !115, line: 368, type: !2750)
!9625 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9620, file: !115, line: 368, type: !404)
!9626 = !DILocation(line: 0, scope: !9620)
!9627 = !DILocation(line: 370, column: 13, scope: !9620)
!9628 = !DILocation(line: 370, column: 58, scope: !9620)
!9629 = !DILocation(line: 370, column: 5, scope: !9620)
!9630 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !9577, file: !9577, line: 81, type: !9631, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !9651)
!9631 = !DISubroutineType(types: !9632)
!9632 = !{!404, !9633}
!9633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9634, size: 32)
!9634 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !399, line: 12462, baseType: !9635)
!9635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 12450, size: 544, elements: !9636)
!9636 = !{!9637, !9638, !9639, !9640, !9641, !9642, !9643, !9644, !9645, !9646, !9650}
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !9635, file: !399, line: 12451, baseType: !477, size: 32)
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !9635, file: !399, line: 12452, baseType: !403, size: 32, offset: 32)
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !9635, file: !399, line: 12453, baseType: !403, size: 32, offset: 64)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !9635, file: !399, line: 12454, baseType: !403, size: 32, offset: 96)
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !9635, file: !399, line: 12455, baseType: !403, size: 32, offset: 128)
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !9635, file: !399, line: 12456, baseType: !403, size: 32, offset: 160)
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !9635, file: !399, line: 12457, baseType: !403, size: 32, offset: 192)
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !9635, file: !399, line: 12458, baseType: !403, size: 32, offset: 224)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !9635, file: !399, line: 12459, baseType: !403, size: 32, offset: 256)
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9635, file: !399, line: 12460, baseType: !9647, size: 224, offset: 288)
!9647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 224, elements: !9648)
!9648 = !{!9649}
!9649 = !DISubrange(count: 28)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !9635, file: !399, line: 12461, baseType: !403, size: 32, offset: 512)
!9651 = !{!9652, !9653, !9654, !9655, !9656}
!9652 = !DILocalVariable(name: "base", arg: 1, scope: !9630, file: !9577, line: 81, type: !9633)
!9653 = !DILocalVariable(name: "root", scope: !9630, file: !9577, line: 83, type: !404)
!9654 = !DILocalVariable(name: "hz", scope: !9630, file: !9577, line: 84, type: !404)
!9655 = !DILocalVariable(name: "pre", scope: !9630, file: !9577, line: 85, type: !404)
!9656 = !DILocalVariable(name: "post", scope: !9630, file: !9577, line: 85, type: !404)
!9657 = !DILocation(line: 0, scope: !9630)
!9658 = !DILocation(line: 85, column: 2, scope: !9630)
!9659 = !DILocation(line: 87, column: 10, scope: !9630)
!9660 = !DILocation(line: 87, column: 2, scope: !9630)
!9661 = !DILocation(line: 95, column: 3, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9630, file: !9577, line: 87, column: 26)
!9663 = !DILocation(line: 0, scope: !9662)
!9664 = !DILocation(line: 100, column: 2, scope: !9630)
!9665 = !DILocation(line: 105, column: 8, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9630, file: !9577, line: 100, column: 16)
!9667 = !DILocation(line: 106, column: 3, scope: !9666)
!9668 = !DILocation(line: 0, scope: !9666)
!9669 = !DILocation(line: 111, column: 15, scope: !9630)
!9670 = !DILocation(line: 111, column: 19, scope: !9630)
!9671 = !DILocation(line: 111, column: 12, scope: !9630)
!9672 = !DILocation(line: 111, column: 27, scope: !9630)
!9673 = !DILocation(line: 111, column: 32, scope: !9630)
!9674 = !DILocation(line: 111, column: 24, scope: !9630)
!9675 = !DILocation(line: 111, column: 2, scope: !9630)
!9676 = !DILocation(line: 112, column: 1, scope: !9630)
!9677 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !9577, file: !9577, line: 120, type: !9678, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !9722)
!9678 = !DISubroutineType(types: !9679)
!9679 = !{!404, !9680}
!9680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9681, size: 32)
!9681 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !399, line: 3477, baseType: !9682)
!9682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 3446, size: 20256, elements: !9683)
!9683 = !{!9684, !9685, !9686, !9687, !9689, !9690, !9691, !9692, !9693, !9694, !9695, !9696, !9697, !9698, !9699, !9700, !9702, !9703, !9704, !9705, !9706, !9716, !9718, !9720, !9721}
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !9682, file: !399, line: 3447, baseType: !403, size: 32)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !9682, file: !399, line: 3448, baseType: !403, size: 32, offset: 32)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !9682, file: !399, line: 3449, baseType: !403, size: 32, offset: 64)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9682, file: !399, line: 3450, baseType: !9688, size: 32, offset: 96)
!9688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 32, elements: !1606)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !9682, file: !399, line: 3451, baseType: !403, size: 32, offset: 128)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !9682, file: !399, line: 3452, baseType: !403, size: 32, offset: 160)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !9682, file: !399, line: 3453, baseType: !403, size: 32, offset: 192)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !9682, file: !399, line: 3454, baseType: !403, size: 32, offset: 224)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !9682, file: !399, line: 3455, baseType: !403, size: 32, offset: 256)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !9682, file: !399, line: 3456, baseType: !403, size: 32, offset: 288)
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !9682, file: !399, line: 3457, baseType: !403, size: 32, offset: 320)
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !9682, file: !399, line: 3458, baseType: !403, size: 32, offset: 352)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !9682, file: !399, line: 3459, baseType: !403, size: 32, offset: 384)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !9682, file: !399, line: 3460, baseType: !403, size: 32, offset: 416)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !9682, file: !399, line: 3461, baseType: !477, size: 32, offset: 448)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9682, file: !399, line: 3462, baseType: !9701, size: 64, offset: 480)
!9701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 64, elements: !1552)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !9682, file: !399, line: 3463, baseType: !477, size: 32, offset: 544)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !9682, file: !399, line: 3464, baseType: !403, size: 32, offset: 576)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !9682, file: !399, line: 3465, baseType: !477, size: 32, offset: 608)
!9705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9682, file: !399, line: 3466, baseType: !463, size: 384, offset: 640)
!9706 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !9682, file: !399, line: 3472, baseType: !9707, size: 8192, offset: 1024)
!9707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9708, size: 8192, elements: !9714)
!9708 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9682, file: !399, line: 3467, size: 128, elements: !9709)
!9709 = !{!9710, !9711, !9712, !9713}
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !9708, file: !399, line: 3468, baseType: !403, size: 32)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !9708, file: !399, line: 3469, baseType: !403, size: 32, offset: 32)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !9708, file: !399, line: 3470, baseType: !403, size: 32, offset: 64)
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !9708, file: !399, line: 3471, baseType: !403, size: 32, offset: 96)
!9714 = !{!9715}
!9715 = !DISubrange(count: 64)
!9716 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !9682, file: !399, line: 3473, baseType: !9717, size: 8192, offset: 9216)
!9717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 8192, elements: !1905)
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !9682, file: !399, line: 3474, baseType: !9719, size: 2048, offset: 17408)
!9719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 2048, elements: !9714)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !9682, file: !399, line: 3475, baseType: !2651, size: 768, offset: 19456)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !9682, file: !399, line: 3476, baseType: !403, size: 32, offset: 20224)
!9722 = !{!9723, !9724, !9725, !9726, !9727}
!9723 = !DILocalVariable(name: "base", arg: 1, scope: !9677, file: !9577, line: 120, type: !9680)
!9724 = !DILocalVariable(name: "root", scope: !9677, file: !9577, line: 122, type: !404)
!9725 = !DILocalVariable(name: "hz", scope: !9677, file: !9577, line: 123, type: !404)
!9726 = !DILocalVariable(name: "pre", scope: !9677, file: !9577, line: 124, type: !404)
!9727 = !DILocalVariable(name: "post", scope: !9677, file: !9577, line: 124, type: !404)
!9728 = !DILocation(line: 0, scope: !9677)
!9729 = !DILocation(line: 124, column: 2, scope: !9677)
!9730 = !DILocation(line: 126, column: 10, scope: !9677)
!9731 = !DILocation(line: 126, column: 2, scope: !9677)
!9732 = !DILocation(line: 134, column: 3, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9677, file: !9577, line: 126, column: 26)
!9734 = !DILocation(line: 0, scope: !9733)
!9735 = !DILocation(line: 139, column: 2, scope: !9677)
!9736 = !DILocation(line: 144, column: 8, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9677, file: !9577, line: 139, column: 16)
!9738 = !DILocation(line: 144, column: 45, scope: !9737)
!9739 = !DILocation(line: 145, column: 3, scope: !9737)
!9740 = !DILocation(line: 147, column: 8, scope: !9737)
!9741 = !DILocation(line: 148, column: 3, scope: !9737)
!9742 = !DILocation(line: 0, scope: !9737)
!9743 = !DILocation(line: 153, column: 15, scope: !9677)
!9744 = !DILocation(line: 153, column: 19, scope: !9677)
!9745 = !DILocation(line: 153, column: 12, scope: !9677)
!9746 = !DILocation(line: 153, column: 27, scope: !9677)
!9747 = !DILocation(line: 153, column: 32, scope: !9677)
!9748 = !DILocation(line: 153, column: 24, scope: !9677)
!9749 = !DILocation(line: 153, column: 2, scope: !9677)
!9750 = !DILocation(line: 154, column: 1, scope: !9677)
!9751 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !9577, file: !9577, line: 162, type: !9752, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !9768)
!9752 = !DISubroutineType(types: !9753)
!9753 = !{!404, !9754}
!9754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9755, size: 32)
!9755 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !399, line: 21082, baseType: !9756)
!9756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 21072, size: 144, elements: !9757)
!9757 = !{!9758, !9759, !9761, !9762, !9763, !9764, !9765, !9766, !9767}
!9758 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !9756, file: !399, line: 21073, baseType: !520, size: 16)
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9756, file: !399, line: 21074, baseType: !9760, size: 16, offset: 16)
!9760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 16, elements: !721)
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !9756, file: !399, line: 21075, baseType: !520, size: 16, offset: 32)
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9756, file: !399, line: 21076, baseType: !9760, size: 16, offset: 48)
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !9756, file: !399, line: 21077, baseType: !520, size: 16, offset: 64)
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9756, file: !399, line: 21078, baseType: !9760, size: 16, offset: 80)
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !9756, file: !399, line: 21079, baseType: !520, size: 16, offset: 96)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !9756, file: !399, line: 21080, baseType: !9760, size: 16, offset: 112)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !9756, file: !399, line: 21081, baseType: !520, size: 16, offset: 128)
!9768 = !{!9769, !9770, !9771, !9772, !9773}
!9769 = !DILocalVariable(name: "base", arg: 1, scope: !9751, file: !9577, line: 162, type: !9754)
!9770 = !DILocalVariable(name: "root", scope: !9751, file: !9577, line: 164, type: !404)
!9771 = !DILocalVariable(name: "hz", scope: !9751, file: !9577, line: 165, type: !404)
!9772 = !DILocalVariable(name: "pre", scope: !9751, file: !9577, line: 166, type: !404)
!9773 = !DILocalVariable(name: "post", scope: !9751, file: !9577, line: 166, type: !404)
!9774 = !DILocation(line: 0, scope: !9751)
!9775 = !DILocation(line: 166, column: 2, scope: !9751)
!9776 = !DILocation(line: 168, column: 10, scope: !9751)
!9777 = !DILocation(line: 168, column: 2, scope: !9751)
!9778 = !DILocation(line: 0, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9751, file: !9577, line: 168, column: 26)
!9780 = !DILocation(line: 189, column: 2, scope: !9751)
!9781 = !DILocation(line: 194, column: 8, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9751, file: !9577, line: 189, column: 16)
!9783 = !DILocation(line: 194, column: 45, scope: !9782)
!9784 = !DILocation(line: 195, column: 3, scope: !9782)
!9785 = !DILocation(line: 0, scope: !9782)
!9786 = !DILocation(line: 200, column: 15, scope: !9751)
!9787 = !DILocation(line: 200, column: 19, scope: !9751)
!9788 = !DILocation(line: 200, column: 12, scope: !9751)
!9789 = !DILocation(line: 200, column: 27, scope: !9751)
!9790 = !DILocation(line: 200, column: 32, scope: !9751)
!9791 = !DILocation(line: 200, column: 24, scope: !9751)
!9792 = !DILocation(line: 200, column: 2, scope: !9751)
!9793 = !DILocation(line: 201, column: 1, scope: !9751)
!9794 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !9577, file: !9577, line: 209, type: !9795, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !9820)
!9795 = !DISubroutineType(types: !9796)
!9796 = !{!404, !9797}
!9797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9798, size: 32)
!9798 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !399, line: 41342, baseType: !9799)
!9799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 41322, size: 1504, elements: !9800)
!9800 = !{!9801, !9802, !9803, !9804, !9805, !9806, !9807, !9808, !9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819}
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !9799, file: !399, line: 41323, baseType: !477, size: 32)
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9799, file: !399, line: 41324, baseType: !1286, size: 480, offset: 32)
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !9799, file: !399, line: 41325, baseType: !403, size: 32, offset: 512)
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9799, file: !399, line: 41326, baseType: !1286, size: 480, offset: 544)
!9805 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !9799, file: !399, line: 41327, baseType: !403, size: 32, offset: 1024)
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !9799, file: !399, line: 41328, baseType: !403, size: 32, offset: 1056)
!9807 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !9799, file: !399, line: 41329, baseType: !403, size: 32, offset: 1088)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !9799, file: !399, line: 41330, baseType: !403, size: 32, offset: 1120)
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !9799, file: !399, line: 41331, baseType: !403, size: 32, offset: 1152)
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !9799, file: !399, line: 41332, baseType: !403, size: 32, offset: 1184)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !9799, file: !399, line: 41333, baseType: !403, size: 32, offset: 1216)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !9799, file: !399, line: 41334, baseType: !403, size: 32, offset: 1248)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !9799, file: !399, line: 41335, baseType: !403, size: 32, offset: 1280)
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !9799, file: !399, line: 41336, baseType: !403, size: 32, offset: 1312)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !9799, file: !399, line: 41337, baseType: !403, size: 32, offset: 1344)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !9799, file: !399, line: 41338, baseType: !477, size: 32, offset: 1376)
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !9799, file: !399, line: 41339, baseType: !403, size: 32, offset: 1408)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !9799, file: !399, line: 41340, baseType: !403, size: 32, offset: 1440)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !9799, file: !399, line: 41341, baseType: !403, size: 32, offset: 1472)
!9820 = !{!9821, !9822, !9823, !9824, !9825}
!9821 = !DILocalVariable(name: "base", arg: 1, scope: !9794, file: !9577, line: 209, type: !9797)
!9822 = !DILocalVariable(name: "root", scope: !9794, file: !9577, line: 211, type: !404)
!9823 = !DILocalVariable(name: "hz", scope: !9794, file: !9577, line: 212, type: !404)
!9824 = !DILocalVariable(name: "pre", scope: !9794, file: !9577, line: 213, type: !404)
!9825 = !DILocalVariable(name: "post", scope: !9794, file: !9577, line: 213, type: !404)
!9826 = !DILocation(line: 0, scope: !9794)
!9827 = !DILocation(line: 213, column: 2, scope: !9794)
!9828 = !DILocation(line: 215, column: 10, scope: !9794)
!9829 = !DILocation(line: 215, column: 2, scope: !9794)
!9830 = !DILocation(line: 223, column: 3, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9794, file: !9577, line: 215, column: 26)
!9832 = !DILocation(line: 227, column: 3, scope: !9831)
!9833 = !DILocation(line: 231, column: 3, scope: !9831)
!9834 = !DILocation(line: 235, column: 3, scope: !9831)
!9835 = !DILocation(line: 239, column: 3, scope: !9831)
!9836 = !DILocation(line: 243, column: 3, scope: !9831)
!9837 = !DILocation(line: 0, scope: !9831)
!9838 = !DILocation(line: 248, column: 2, scope: !9794)
!9839 = !DILocation(line: 253, column: 8, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9794, file: !9577, line: 248, column: 16)
!9841 = !DILocation(line: 253, column: 45, scope: !9840)
!9842 = !DILocation(line: 254, column: 3, scope: !9840)
!9843 = !DILocation(line: 256, column: 8, scope: !9840)
!9844 = !DILocation(line: 257, column: 3, scope: !9840)
!9845 = !DILocation(line: 0, scope: !9840)
!9846 = !DILocation(line: 262, column: 15, scope: !9794)
!9847 = !DILocation(line: 262, column: 19, scope: !9794)
!9848 = !DILocation(line: 262, column: 12, scope: !9794)
!9849 = !DILocation(line: 262, column: 27, scope: !9794)
!9850 = !DILocation(line: 262, column: 32, scope: !9794)
!9851 = !DILocation(line: 262, column: 24, scope: !9794)
!9852 = !DILocation(line: 262, column: 2, scope: !9794)
!9853 = !DILocation(line: 263, column: 1, scope: !9794)
!9854 = distinct !DISubprogram(name: "z_device_state_init", scope: !9855, file: !9855, line: 23, type: !2944, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !9856)
!9855 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9856 = !{!9857}
!9857 = !DILocalVariable(name: "dev", scope: !9854, file: !9855, line: 25, type: !9858)
!9858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9859, size: 32)
!9859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9860)
!9860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !566, line: 378, size: 192, elements: !9861)
!9861 = !{!9862, !9863, !9864, !9865, !9871, !9872}
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9860, file: !566, line: 380, baseType: !569, size: 32)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !9860, file: !566, line: 382, baseType: !13, size: 32, offset: 32)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !9860, file: !566, line: 384, baseType: !13, size: 32, offset: 64)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9860, file: !566, line: 386, baseType: !9866, size: 32, offset: 96)
!9866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9867, size: 32)
!9867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !566, line: 351, size: 16, elements: !9868)
!9868 = !{!9869, !9870}
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !9867, file: !566, line: 359, baseType: !410, size: 8)
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !9867, file: !566, line: 364, baseType: !580, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9860, file: !566, line: 388, baseType: !102, size: 32, offset: 128)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !9860, file: !566, line: 396, baseType: !583, size: 32, offset: 160)
!9873 = !DILocation(line: 0, scope: !9854)
!9874 = !DILocation(line: 31, column: 1, scope: !9854)
!9875 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !9855, file: !9855, line: 33, type: !9876, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !9878)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{!9858, !569}
!9878 = !{!9879, !9880}
!9879 = !DILocalVariable(name: "name", arg: 1, scope: !9875, file: !9855, line: 33, type: !569)
!9880 = !DILocalVariable(name: "dev", scope: !9875, file: !9855, line: 35, type: !9858)
!9881 = !DILocation(line: 0, scope: !9875)
!9882 = !DILocation(line: 40, column: 12, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9875, file: !9855, line: 40, column: 6)
!9884 = !DILocation(line: 40, column: 21, scope: !9883)
!9885 = !DILocation(line: 40, column: 25, scope: !9883)
!9886 = !DILocation(line: 40, column: 33, scope: !9883)
!9887 = !DILocation(line: 40, column: 6, scope: !9875)
!9888 = !DILocation(line: 55, column: 2, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9875, file: !9855, line: 55, column: 2)
!9890 = !DILocation(line: 50, column: 7, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9892, file: !9855, line: 50, column: 7)
!9892 = distinct !DILexicalBlock(scope: !9893, file: !9855, line: 49, column: 57)
!9893 = distinct !DILexicalBlock(scope: !9894, file: !9855, line: 49, column: 2)
!9894 = distinct !DILexicalBlock(scope: !9875, file: !9855, line: 49, column: 2)
!9895 = !DILocation(line: 50, column: 30, scope: !9891)
!9896 = !DILocation(line: 50, column: 39, scope: !9891)
!9897 = !DILocation(line: 50, column: 44, scope: !9891)
!9898 = !DILocation(line: 50, column: 7, scope: !9892)
!9899 = !DILocation(line: 49, column: 53, scope: !9893)
!9900 = !DILocation(line: 49, column: 33, scope: !9893)
!9901 = !DILocation(line: 49, column: 2, scope: !9894)
!9902 = distinct !{!9902, !9901, !9903}
!9903 = !DILocation(line: 53, column: 2, scope: !9894)
!9904 = !DILocation(line: 56, column: 7, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !9855, line: 56, column: 7)
!9906 = distinct !DILexicalBlock(scope: !9907, file: !9855, line: 55, column: 57)
!9907 = distinct !DILexicalBlock(scope: !9889, file: !9855, line: 55, column: 2)
!9908 = !DILocation(line: 56, column: 30, scope: !9905)
!9909 = !DILocation(line: 56, column: 52, scope: !9905)
!9910 = !DILocation(line: 56, column: 34, scope: !9905)
!9911 = !DILocation(line: 56, column: 58, scope: !9905)
!9912 = !DILocation(line: 56, column: 7, scope: !9906)
!9913 = !DILocation(line: 55, column: 53, scope: !9907)
!9914 = !DILocation(line: 55, column: 33, scope: !9907)
!9915 = distinct !{!9915, !9888, !9916}
!9916 = !DILocation(line: 59, column: 2, scope: !9889)
!9917 = !DILocation(line: 62, column: 1, scope: !9875)
!9918 = distinct !DISubprogram(name: "z_device_is_ready", scope: !9855, file: !9855, line: 93, type: !9919, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !9921)
!9919 = !DISubroutineType(types: !9920)
!9920 = !{!580, !9858}
!9921 = !{!9922}
!9922 = !DILocalVariable(name: "dev", arg: 1, scope: !9918, file: !9855, line: 93, type: !9858)
!9923 = !DILocation(line: 0, scope: !9918)
!9924 = !DILocation(line: 99, column: 10, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9918, file: !9855, line: 99, column: 6)
!9926 = !DILocation(line: 99, column: 6, scope: !9918)
!9927 = !DILocation(line: 103, column: 14, scope: !9918)
!9928 = !DILocation(line: 103, column: 21, scope: !9918)
!9929 = !DILocation(line: 103, column: 33, scope: !9918)
!9930 = !DILocation(line: 103, column: 49, scope: !9918)
!9931 = !DILocation(line: 103, column: 58, scope: !9918)
!9932 = !DILocation(line: 104, column: 1, scope: !9918)
!9933 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !9855, file: !9855, line: 87, type: !9934, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !9937)
!9934 = !DISubroutineType(types: !9935)
!9935 = !{!552, !9936}
!9936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9858, size: 32)
!9937 = !{!9938}
!9938 = !DILocalVariable(name: "devices", arg: 1, scope: !9933, file: !9855, line: 87, type: !9936)
!9939 = !DILocation(line: 0, scope: !9933)
!9940 = !DILocation(line: 89, column: 11, scope: !9933)
!9941 = !DILocation(line: 90, column: 2, scope: !9933)
!9942 = distinct !DISubprogram(name: "device_required_foreach", scope: !9855, file: !9855, line: 125, type: !9943, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !9949)
!9943 = !DISubroutineType(types: !9944)
!9944 = !{!103, !9858, !9945, !102}
!9945 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !566, line: 471, baseType: !9946)
!9946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9947, size: 32)
!9947 = !DISubroutineType(types: !9948)
!9948 = !{!103, !9858, !102}
!9949 = !{!9950, !9951, !9952, !9953, !9954}
!9950 = !DILocalVariable(name: "dev", arg: 1, scope: !9942, file: !9855, line: 125, type: !9858)
!9951 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !9942, file: !9855, line: 126, type: !9945)
!9952 = !DILocalVariable(name: "context", arg: 3, scope: !9942, file: !9855, line: 127, type: !102)
!9953 = !DILocalVariable(name: "handle_count", scope: !9942, file: !9855, line: 129, type: !552)
!9954 = !DILocalVariable(name: "handles", scope: !9942, file: !9855, line: 130, type: !583)
!9955 = !DILocation(line: 0, scope: !9942)
!9956 = !DILocation(line: 129, column: 2, scope: !9942)
!9957 = !DILocation(line: 129, column: 9, scope: !9942)
!9958 = !DILocation(line: 130, column: 35, scope: !9942)
!9959 = !DILocation(line: 132, column: 33, scope: !9942)
!9960 = !DILocation(line: 132, column: 9, scope: !9942)
!9961 = !DILocation(line: 133, column: 1, scope: !9942)
!9962 = !DILocation(line: 132, column: 2, scope: !9942)
!9963 = distinct !DISubprogram(name: "device_required_handles_get", scope: !566, file: !566, line: 493, type: !9964, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !9966)
!9964 = !DISubroutineType(types: !9965)
!9965 = !{!583, !9858, !2315}
!9966 = !{!9967, !9968, !9969, !9970}
!9967 = !DILocalVariable(name: "dev", arg: 1, scope: !9963, file: !566, line: 493, type: !9858)
!9968 = !DILocalVariable(name: "count", arg: 2, scope: !9963, file: !566, line: 493, type: !2315)
!9969 = !DILocalVariable(name: "rv", scope: !9963, file: !566, line: 495, type: !583)
!9970 = !DILocalVariable(name: "i", scope: !9971, file: !566, line: 498, type: !552)
!9971 = distinct !DILexicalBlock(scope: !9972, file: !566, line: 497, column: 18)
!9972 = distinct !DILexicalBlock(scope: !9963, file: !566, line: 497, column: 6)
!9973 = !DILocation(line: 0, scope: !9963)
!9974 = !DILocation(line: 495, column: 35, scope: !9963)
!9975 = !DILocation(line: 497, column: 9, scope: !9972)
!9976 = !DILocation(line: 497, column: 6, scope: !9963)
!9977 = !DILocation(line: 0, scope: !9971)
!9978 = !DILocation(line: 500, column: 11, scope: !9971)
!9979 = !DILocation(line: 500, column: 40, scope: !9971)
!9980 = !DILocation(line: 502, column: 4, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9971, file: !566, line: 501, column: 40)
!9982 = distinct !{!9982, !9983, !9984}
!9983 = !DILocation(line: 500, column: 3, scope: !9971)
!9984 = !DILocation(line: 503, column: 3, scope: !9971)
!9985 = !DILocation(line: 504, column: 10, scope: !9971)
!9986 = !DILocation(line: 505, column: 2, scope: !9971)
!9987 = !DILocation(line: 507, column: 2, scope: !9963)
!9988 = distinct !DISubprogram(name: "device_visitor", scope: !9855, file: !9855, line: 106, type: !9989, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !9991)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{!103, !583, !552, !9945, !102}
!9991 = !{!9992, !9993, !9994, !9995, !9996, !9998, !10001, !10002}
!9992 = !DILocalVariable(name: "handles", arg: 1, scope: !9988, file: !9855, line: 106, type: !583)
!9993 = !DILocalVariable(name: "handle_count", arg: 2, scope: !9988, file: !9855, line: 107, type: !552)
!9994 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !9988, file: !9855, line: 108, type: !9945)
!9995 = !DILocalVariable(name: "context", arg: 4, scope: !9988, file: !9855, line: 109, type: !102)
!9996 = !DILocalVariable(name: "i", scope: !9997, file: !9855, line: 112, type: !552)
!9997 = distinct !DILexicalBlock(scope: !9988, file: !9855, line: 112, column: 2)
!9998 = !DILocalVariable(name: "dh", scope: !9999, file: !9855, line: 113, type: !585)
!9999 = distinct !DILexicalBlock(scope: !10000, file: !9855, line: 112, column: 44)
!10000 = distinct !DILexicalBlock(scope: !9997, file: !9855, line: 112, column: 2)
!10001 = !DILocalVariable(name: "rdev", scope: !9999, file: !9855, line: 114, type: !9858)
!10002 = !DILocalVariable(name: "rc", scope: !9999, file: !9855, line: 115, type: !103)
!10003 = !DILocation(line: 0, scope: !9988)
!10004 = !DILocation(line: 0, scope: !9997)
!10005 = !DILocation(line: 112, column: 23, scope: !10000)
!10006 = !DILocation(line: 112, column: 2, scope: !9997)
!10007 = distinct !{!10007, !10006, !10008}
!10008 = !DILocation(line: 120, column: 2, scope: !9997)
!10009 = !DILocation(line: 113, column: 24, scope: !9999)
!10010 = !DILocation(line: 0, scope: !9999)
!10011 = !DILocation(line: 114, column: 31, scope: !9999)
!10012 = !DILocation(line: 115, column: 12, scope: !9999)
!10013 = !DILocation(line: 117, column: 10, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !9999, file: !9855, line: 117, column: 7)
!10015 = !DILocation(line: 112, column: 39, scope: !10000)
!10016 = !DILocation(line: 123, column: 1, scope: !9988)
!10017 = distinct !DISubprogram(name: "device_from_handle", scope: !566, file: !566, line: 439, type: !10018, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !10020)
!10018 = !DISubroutineType(types: !10019)
!10019 = !{!9858, !585}
!10020 = !{!10021, !10022, !10023}
!10021 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10017, file: !566, line: 439, type: !585)
!10022 = !DILocalVariable(name: "dev", scope: !10017, file: !566, line: 443, type: !9858)
!10023 = !DILocalVariable(name: "numdev", scope: !10017, file: !566, line: 444, type: !552)
!10024 = !DILocation(line: 0, scope: !10017)
!10025 = !DILocation(line: 446, column: 7, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10017, file: !566, line: 446, column: 6)
!10027 = !DILocation(line: 446, column: 18, scope: !10026)
!10028 = !DILocation(line: 446, column: 23, scope: !10026)
!10029 = !DILocation(line: 450, column: 2, scope: !10017)
!10030 = distinct !DISubprogram(name: "device_supported_foreach", scope: !9855, file: !9855, line: 135, type: !9943, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !10031)
!10031 = !{!10032, !10033, !10034, !10035, !10036}
!10032 = !DILocalVariable(name: "dev", arg: 1, scope: !10030, file: !9855, line: 135, type: !9858)
!10033 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10030, file: !9855, line: 136, type: !9945)
!10034 = !DILocalVariable(name: "context", arg: 3, scope: !10030, file: !9855, line: 137, type: !102)
!10035 = !DILocalVariable(name: "handle_count", scope: !10030, file: !9855, line: 139, type: !552)
!10036 = !DILocalVariable(name: "handles", scope: !10030, file: !9855, line: 140, type: !583)
!10037 = !DILocation(line: 0, scope: !10030)
!10038 = !DILocation(line: 139, column: 2, scope: !10030)
!10039 = !DILocation(line: 139, column: 9, scope: !10030)
!10040 = !DILocation(line: 140, column: 35, scope: !10030)
!10041 = !DILocation(line: 142, column: 33, scope: !10030)
!10042 = !DILocation(line: 142, column: 9, scope: !10030)
!10043 = !DILocation(line: 143, column: 1, scope: !10030)
!10044 = !DILocation(line: 142, column: 2, scope: !10030)
!10045 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !566, file: !566, line: 573, type: !9964, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !10046)
!10046 = !{!10047, !10048, !10049, !10050, !10051}
!10047 = !DILocalVariable(name: "dev", arg: 1, scope: !10045, file: !566, line: 573, type: !9858)
!10048 = !DILocalVariable(name: "count", arg: 2, scope: !10045, file: !566, line: 573, type: !2315)
!10049 = !DILocalVariable(name: "rv", scope: !10045, file: !566, line: 575, type: !583)
!10050 = !DILocalVariable(name: "region", scope: !10045, file: !566, line: 576, type: !552)
!10051 = !DILocalVariable(name: "i", scope: !10045, file: !566, line: 577, type: !552)
!10052 = !DILocation(line: 0, scope: !10045)
!10053 = !DILocation(line: 575, column: 35, scope: !10045)
!10054 = !DILocation(line: 579, column: 9, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10045, file: !566, line: 579, column: 6)
!10056 = !DILocation(line: 579, column: 6, scope: !10045)
!10057 = !DILocation(line: 582, column: 8, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10059, file: !566, line: 582, column: 8)
!10059 = distinct !DILexicalBlock(scope: !10060, file: !566, line: 581, column: 23)
!10060 = distinct !DILexicalBlock(scope: !10055, file: !566, line: 579, column: 18)
!10061 = !DILocation(line: 582, column: 12, scope: !10058)
!10062 = !DILocation(line: 585, column: 6, scope: !10059)
!10063 = !DILocation(line: 0, scope: !10060)
!10064 = !DILocation(line: 581, column: 17, scope: !10060)
!10065 = !DILocation(line: 581, column: 3, scope: !10060)
!10066 = !DILocation(line: 588, column: 10, scope: !10060)
!10067 = !DILocation(line: 588, column: 16, scope: !10060)
!10068 = !DILocation(line: 589, column: 4, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10060, file: !566, line: 588, column: 39)
!10070 = !DILocation(line: 588, column: 3, scope: !10060)
!10071 = distinct !{!10071, !10070, !10072}
!10072 = !DILocation(line: 590, column: 3, scope: !10060)
!10073 = !DILocation(line: 591, column: 10, scope: !10060)
!10074 = !DILocation(line: 592, column: 2, scope: !10060)
!10075 = !DILocation(line: 575, column: 25, scope: !10045)
!10076 = !DILocation(line: 594, column: 2, scope: !10045)
!10077 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1686, file: !1686, line: 49, type: !10078, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !675)
!10078 = !DISubroutineType(types: !10079)
!10079 = !{!2309}
!10080 = !DILocation(line: 51, column: 10, scope: !10077)
!10081 = !DILocation(line: 51, column: 20, scope: !10077)
!10082 = !DILocation(line: 51, column: 2, scope: !10077)
!10083 = distinct !DISubprogram(name: "coredump", scope: !2868, file: !2868, line: 209, type: !10084, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10224)
!10084 = !DISubroutineType(types: !10085)
!10085 = !{null, !32, !10086, !10130}
!10086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10087, size: 32)
!10087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10088)
!10088 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2441, line: 141, baseType: !10089)
!10089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2441, line: 97, size: 256, elements: !10090)
!10090 = !{!10091}
!10091 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10089, file: !2441, line: 107, baseType: !10092, size: 256)
!10092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2441, line: 98, size: 256, elements: !10093)
!10093 = !{!10094, !10099, !10104, !10109, !10114, !10119, !10124, !10129}
!10094 = !DIDerivedType(tag: DW_TAG_member, scope: !10092, file: !2441, line: 99, baseType: !10095, size: 32)
!10095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10092, file: !2441, line: 99, size: 32, elements: !10096)
!10096 = !{!10097, !10098}
!10097 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10095, file: !2441, line: 99, baseType: !404, size: 32)
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10095, file: !2441, line: 99, baseType: !404, size: 32)
!10099 = !DIDerivedType(tag: DW_TAG_member, scope: !10092, file: !2441, line: 100, baseType: !10100, size: 32, offset: 32)
!10100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10092, file: !2441, line: 100, size: 32, elements: !10101)
!10101 = !{!10102, !10103}
!10102 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10100, file: !2441, line: 100, baseType: !404, size: 32)
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10100, file: !2441, line: 100, baseType: !404, size: 32)
!10104 = !DIDerivedType(tag: DW_TAG_member, scope: !10092, file: !2441, line: 101, baseType: !10105, size: 32, offset: 64)
!10105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10092, file: !2441, line: 101, size: 32, elements: !10106)
!10106 = !{!10107, !10108}
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10105, file: !2441, line: 101, baseType: !404, size: 32)
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10105, file: !2441, line: 101, baseType: !404, size: 32)
!10109 = !DIDerivedType(tag: DW_TAG_member, scope: !10092, file: !2441, line: 102, baseType: !10110, size: 32, offset: 96)
!10110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10092, file: !2441, line: 102, size: 32, elements: !10111)
!10111 = !{!10112, !10113}
!10112 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10110, file: !2441, line: 102, baseType: !404, size: 32)
!10113 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10110, file: !2441, line: 102, baseType: !404, size: 32)
!10114 = !DIDerivedType(tag: DW_TAG_member, scope: !10092, file: !2441, line: 103, baseType: !10115, size: 32, offset: 128)
!10115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10092, file: !2441, line: 103, size: 32, elements: !10116)
!10116 = !{!10117, !10118}
!10117 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10115, file: !2441, line: 103, baseType: !404, size: 32)
!10118 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10115, file: !2441, line: 103, baseType: !404, size: 32)
!10119 = !DIDerivedType(tag: DW_TAG_member, scope: !10092, file: !2441, line: 104, baseType: !10120, size: 32, offset: 160)
!10120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10092, file: !2441, line: 104, size: 32, elements: !10121)
!10121 = !{!10122, !10123}
!10122 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10120, file: !2441, line: 104, baseType: !404, size: 32)
!10123 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10120, file: !2441, line: 104, baseType: !404, size: 32)
!10124 = !DIDerivedType(tag: DW_TAG_member, scope: !10092, file: !2441, line: 105, baseType: !10125, size: 32, offset: 192)
!10125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10092, file: !2441, line: 105, size: 32, elements: !10126)
!10126 = !{!10127, !10128}
!10127 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10125, file: !2441, line: 105, baseType: !404, size: 32)
!10128 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10125, file: !2441, line: 105, baseType: !404, size: 32)
!10129 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10092, file: !2441, line: 106, baseType: !404, size: 32, offset: 224)
!10130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10131, size: 32)
!10131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1787, line: 245, size: 896, elements: !10132)
!10132 = !{!10133, !10191, !10203, !10204, !10205, !10206, !10219}
!10133 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10131, file: !1787, line: 247, baseType: !10134, size: 384)
!10134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1787, line: 57, size: 384, elements: !10135)
!10135 = !{!10136, !10160, !10167, !10168, !10169, !10178, !10179, !10180}
!10136 = !DIDerivedType(tag: DW_TAG_member, scope: !10134, file: !1787, line: 60, baseType: !10137, size: 64)
!10137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10134, file: !1787, line: 60, size: 64, elements: !10138)
!10138 = !{!10139, !10154}
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10137, file: !1787, line: 61, baseType: !10140, size: 64)
!10140 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !683, line: 49, baseType: !10141)
!10141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !10142)
!10142 = !{!10143, !10149}
!10143 = !DIDerivedType(tag: DW_TAG_member, scope: !10141, file: !683, line: 38, baseType: !10144, size: 32)
!10144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10141, file: !683, line: 38, size: 32, elements: !10145)
!10145 = !{!10146, !10148}
!10146 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10144, file: !683, line: 39, baseType: !10147, size: 32)
!10147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10141, size: 32)
!10148 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10144, file: !683, line: 40, baseType: !10147, size: 32)
!10149 = !DIDerivedType(tag: DW_TAG_member, scope: !10141, file: !683, line: 42, baseType: !10150, size: 32, offset: 32)
!10150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10141, file: !683, line: 42, size: 32, elements: !10151)
!10151 = !{!10152, !10153}
!10152 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10150, file: !683, line: 43, baseType: !10147, size: 32)
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10150, file: !683, line: 44, baseType: !10147, size: 32)
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10137, file: !1787, line: 62, baseType: !10155, size: 64)
!10155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1812, line: 49, size: 64, elements: !10156)
!10156 = !{!10157}
!10157 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10155, file: !1812, line: 50, baseType: !10158, size: 64)
!10158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10159, size: 64, elements: !721)
!10159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10155, size: 32)
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10134, file: !1787, line: 68, baseType: !10161, size: 32, offset: 64)
!10161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10162, size: 32)
!10162 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !10163)
!10163 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !10164)
!10164 = !{!10165}
!10165 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10163, file: !678, line: 232, baseType: !10166, size: 64)
!10166 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !10141)
!10167 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10134, file: !1787, line: 71, baseType: !410, size: 8, offset: 96)
!10168 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10134, file: !1787, line: 74, baseType: !410, size: 8, offset: 104)
!10169 = !DIDerivedType(tag: DW_TAG_member, scope: !10134, file: !1787, line: 90, baseType: !10170, size: 16, offset: 112)
!10170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10134, file: !1787, line: 90, size: 16, elements: !10171)
!10171 = !{!10172, !10177}
!10172 = !DIDerivedType(tag: DW_TAG_member, scope: !10170, file: !1787, line: 91, baseType: !10173, size: 16)
!10173 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10170, file: !1787, line: 91, size: 16, elements: !10174)
!10174 = !{!10175, !10176}
!10175 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10173, file: !1787, line: 96, baseType: !1833, size: 8)
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10173, file: !1787, line: 97, baseType: !410, size: 8, offset: 8)
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10170, file: !1787, line: 100, baseType: !521, size: 16)
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10134, file: !1787, line: 107, baseType: !404, size: 32, offset: 128)
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10134, file: !1787, line: 127, baseType: !102, size: 32, offset: 160)
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10134, file: !1787, line: 131, baseType: !10181, size: 192, offset: 192)
!10181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !678, line: 244, size: 192, elements: !10182)
!10182 = !{!10183, !10184, !10190}
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10181, file: !678, line: 245, baseType: !10140, size: 64)
!10184 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10181, file: !678, line: 246, baseType: !10185, size: 32, offset: 64)
!10185 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !678, line: 242, baseType: !10186)
!10186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10187, size: 32)
!10187 = !DISubroutineType(types: !10188)
!10188 = !{null, !10189}
!10189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10181, size: 32)
!10190 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10181, file: !678, line: 249, baseType: !550, size: 64, offset: 128)
!10191 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10131, file: !1787, line: 250, baseType: !10192, size: 288, offset: 384)
!10192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1852, line: 25, size: 288, elements: !10193)
!10193 = !{!10194, !10195, !10196, !10197, !10198, !10199, !10200, !10201, !10202}
!10194 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10192, file: !1852, line: 26, baseType: !404, size: 32)
!10195 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10192, file: !1852, line: 27, baseType: !404, size: 32, offset: 32)
!10196 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10192, file: !1852, line: 28, baseType: !404, size: 32, offset: 64)
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10192, file: !1852, line: 29, baseType: !404, size: 32, offset: 96)
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10192, file: !1852, line: 30, baseType: !404, size: 32, offset: 128)
!10199 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10192, file: !1852, line: 31, baseType: !404, size: 32, offset: 160)
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10192, file: !1852, line: 32, baseType: !404, size: 32, offset: 192)
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10192, file: !1852, line: 33, baseType: !404, size: 32, offset: 224)
!10202 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10192, file: !1852, line: 34, baseType: !404, size: 32, offset: 256)
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10131, file: !1787, line: 253, baseType: !102, size: 32, offset: 672)
!10204 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10131, file: !1787, line: 256, baseType: !10162, size: 64, offset: 704)
!10205 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10131, file: !1787, line: 294, baseType: !103, size: 32, offset: 768)
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10131, file: !1787, line: 325, baseType: !10207, size: 32, offset: 800)
!10207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10208, size: 32)
!10208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !654, line: 5073, size: 160, elements: !10209)
!10209 = !{!10210, !10216, !10217}
!10210 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10208, file: !654, line: 5074, baseType: !10211, size: 96)
!10211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !10212)
!10212 = !{!10213, !10214, !10215}
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10211, file: !1872, line: 57, baseType: !1875, size: 32)
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10211, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!10215 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10211, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10208, file: !654, line: 5075, baseType: !10162, size: 64, offset: 96)
!10217 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10208, file: !654, line: 5076, baseType: !10218, offset: 160)
!10218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!10219 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10131, file: !1787, line: 343, baseType: !10220, size: 64, offset: 832)
!10220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1852, line: 60, size: 64, elements: !10221)
!10221 = !{!10222, !10223}
!10222 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10220, file: !1852, line: 63, baseType: !404, size: 32)
!10223 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10220, file: !1852, line: 66, baseType: !404, size: 32, offset: 32)
!10224 = !{!10225, !10226, !10227}
!10225 = !DILocalVariable(name: "reason", arg: 1, scope: !10083, file: !2868, line: 209, type: !32)
!10226 = !DILocalVariable(name: "esf", arg: 2, scope: !10083, file: !2868, line: 209, type: !10086)
!10227 = !DILocalVariable(name: "thread", arg: 3, scope: !10083, file: !2868, line: 210, type: !10130)
!10228 = !DILocation(line: 0, scope: !10083)
!10229 = !DILocation(line: 212, column: 1, scope: !10083)
!10230 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2868, file: !2868, line: 214, type: !10231, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10233)
!10231 = !DISubroutineType(types: !10232)
!10232 = !{null, !22, !22}
!10233 = !{!10234, !10235}
!10234 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10230, file: !2868, line: 214, type: !22)
!10235 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10230, file: !2868, line: 214, type: !22)
!10236 = !DILocation(line: 0, scope: !10230)
!10237 = !DILocation(line: 216, column: 1, scope: !10230)
!10238 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2868, file: !2868, line: 218, type: !10239, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10241)
!10239 = !DISubroutineType(types: !10240)
!10240 = !{null, !625, !552}
!10241 = !{!10242, !10243}
!10242 = !DILocalVariable(name: "buf", arg: 1, scope: !10238, file: !2868, line: 218, type: !625)
!10243 = !DILocalVariable(name: "buflen", arg: 2, scope: !10238, file: !2868, line: 218, type: !552)
!10244 = !DILocation(line: 0, scope: !10238)
!10245 = !DILocation(line: 220, column: 1, scope: !10238)
!10246 = distinct !DISubprogram(name: "coredump_query", scope: !2868, file: !2868, line: 222, type: !10247, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10249)
!10247 = !DISubroutineType(types: !10248)
!10248 = !{!103, !2867, !102}
!10249 = !{!10250, !10251}
!10250 = !DILocalVariable(name: "query_id", arg: 1, scope: !10246, file: !2868, line: 222, type: !2867)
!10251 = !DILocalVariable(name: "arg", arg: 2, scope: !10246, file: !2868, line: 222, type: !102)
!10252 = !DILocation(line: 0, scope: !10246)
!10253 = !DILocation(line: 224, column: 2, scope: !10246)
!10254 = distinct !DISubprogram(name: "coredump_cmd", scope: !2868, file: !2868, line: 227, type: !10255, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10257)
!10255 = !DISubroutineType(types: !10256)
!10256 = !{!103, !2874, !102}
!10257 = !{!10258, !10259}
!10258 = !DILocalVariable(name: "query_id", arg: 1, scope: !10254, file: !2868, line: 227, type: !2874)
!10259 = !DILocalVariable(name: "arg", arg: 2, scope: !10254, file: !2868, line: 227, type: !102)
!10260 = !DILocation(line: 0, scope: !10254)
!10261 = !DILocation(line: 229, column: 2, scope: !10254)
!10262 = distinct !DISubprogram(name: "arch_system_halt", scope: !10263, file: !10263, line: 23, type: !5598, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10264)
!10263 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10264 = !{!10265}
!10265 = !DILocalVariable(name: "reason", arg: 1, scope: !10262, file: !10263, line: 23, type: !32)
!10266 = !DILocation(line: 0, scope: !10262)
!10267 = !DILocation(line: 55, column: 2, scope: !10268, inlinedAt: !10272)
!10268 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5762, file: !5762, line: 42, type: !7761, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10269)
!10269 = !{!10270, !10271}
!10270 = !DILocalVariable(name: "key", scope: !10268, file: !5762, line: 44, type: !32)
!10271 = !DILocalVariable(name: "tmp", scope: !10268, file: !5762, line: 53, type: !32)
!10272 = distinct !DILocation(line: 31, column: 8, scope: !10262)
!10273 = !{i64 2842671}
!10274 = !DILocation(line: 0, scope: !10268, inlinedAt: !10272)
!10275 = !DILocation(line: 32, column: 2, scope: !10262)
!10276 = !DILocation(line: 32, column: 2, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10278, file: !10263, line: 32, column: 2)
!10278 = distinct !DILexicalBlock(scope: !10262, file: !10263, line: 32, column: 2)
!10279 = distinct !{!10279, !10280, !10281}
!10280 = !DILocation(line: 32, column: 2, scope: !10278)
!10281 = !DILocation(line: 34, column: 2, scope: !10278)
!10282 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10263, file: !10263, line: 39, type: !10283, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10285)
!10283 = !DISubroutineType(types: !10284)
!10284 = !{null, !32, !10086}
!10285 = !{!10286, !10287}
!10286 = !DILocalVariable(name: "reason", arg: 1, scope: !10282, file: !10263, line: 39, type: !32)
!10287 = !DILocalVariable(name: "esf", arg: 2, scope: !10282, file: !10263, line: 40, type: !10086)
!10288 = !DILocation(line: 0, scope: !10282)
!10289 = !DILocation(line: 46, column: 2, scope: !10282)
!10290 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10263, file: !10263, line: 81, type: !5598, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10291)
!10291 = !{!10292}
!10292 = !DILocalVariable(name: "reason", arg: 1, scope: !10290, file: !10263, line: 81, type: !32)
!10293 = !DILocation(line: 0, scope: !10290)
!10294 = !DILocation(line: 83, column: 2, scope: !10290)
!10295 = distinct !DISubprogram(name: "z_fatal_error", scope: !10263, file: !10263, line: 96, type: !10283, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10296)
!10296 = !{!10297, !10298, !10299, !10300}
!10297 = !DILocalVariable(name: "reason", arg: 1, scope: !10295, file: !10263, line: 96, type: !32)
!10298 = !DILocalVariable(name: "esf", arg: 2, scope: !10295, file: !10263, line: 96, type: !10086)
!10299 = !DILocalVariable(name: "key", scope: !10295, file: !10263, line: 102, type: !32)
!10300 = !DILocalVariable(name: "thread", scope: !10295, file: !10263, line: 103, type: !10130)
!10301 = !DILocation(line: 0, scope: !10295)
!10302 = !DILocation(line: 55, column: 2, scope: !10268, inlinedAt: !10303)
!10303 = distinct !DILocation(line: 102, column: 21, scope: !10295)
!10304 = !DILocation(line: 0, scope: !10268, inlinedAt: !10303)
!10305 = !DILocation(line: 119, column: 11, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10295, file: !10263, line: 119, column: 6)
!10307 = !DILocation(line: 119, column: 20, scope: !10306)
!10308 = !DILocation(line: 131, column: 2, scope: !10295)
!10309 = !DILocation(line: 151, column: 7, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10311, file: !10263, line: 146, column: 32)
!10311 = distinct !DILexicalBlock(scope: !10295, file: !10263, line: 146, column: 6)
!10312 = !DILocation(line: 151, column: 21, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10310, file: !10263, line: 151, column: 7)
!10314 = !DILocation(line: 104, column: 4, scope: !10295)
!10315 = !DILocalVariable(name: "key", arg: 1, scope: !10316, file: !5762, line: 84, type: !32)
!10316 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5762, file: !5762, line: 84, type: !5598, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10317)
!10317 = !{!10315}
!10318 = !DILocation(line: 0, scope: !10316, inlinedAt: !10319)
!10319 = distinct !DILocation(line: 186, column: 2, scope: !10295)
!10320 = !DILocation(line: 95, column: 2, scope: !10316, inlinedAt: !10319)
!10321 = !{i64 2843488}
!10322 = !DILocation(line: 189, column: 3, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10324, file: !10263, line: 188, column: 41)
!10324 = distinct !DILexicalBlock(scope: !10295, file: !10263, line: 188, column: 6)
!10325 = !DILocation(line: 191, column: 1, scope: !10295)
!10326 = distinct !DISubprogram(name: "k_current_get", scope: !654, file: !654, line: 530, type: !10327, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !675)
!10327 = !DISubroutineType(types: !10328)
!10328 = !{!10329}
!10329 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1787, line: 347, baseType: !10130)
!10330 = !DILocation(line: 535, column: 9, scope: !10326)
!10331 = !DILocation(line: 535, column: 2, scope: !10326)
!10332 = distinct !DISubprogram(name: "k_thread_abort", scope: !3364, file: !3364, line: 188, type: !10333, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10335)
!10333 = !DISubroutineType(types: !10334)
!10334 = !{null, !10329}
!10335 = !{!10336}
!10336 = !DILocalVariable(name: "thread", arg: 1, scope: !10332, file: !3364, line: 188, type: !10329)
!10337 = !DILocation(line: 0, scope: !10332)
!10338 = !DILocation(line: 197, column: 2, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10332, file: !3364, line: 197, column: 2)
!10340 = !{i64 2151037221}
!10341 = !DILocation(line: 198, column: 2, scope: !10332)
!10342 = !DILocation(line: 199, column: 1, scope: !10332)
!10343 = distinct !DISubprogram(name: "z_current_get", scope: !3364, file: !3364, line: 173, type: !10327, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !675)
!10344 = !DILocation(line: 180, column: 2, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10343, file: !3364, line: 180, column: 2)
!10346 = !{i64 2151037153}
!10347 = !DILocation(line: 181, column: 9, scope: !10343)
!10348 = !DILocation(line: 181, column: 2, scope: !10343)
!10349 = distinct !DISubprogram(name: "z_early_memset", scope: !1693, file: !1693, line: 108, type: !10350, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10352)
!10350 = !DISubroutineType(types: !10351)
!10351 = !{null, !102, !103, !552}
!10352 = !{!10353, !10354, !10355}
!10353 = !DILocalVariable(name: "dst", arg: 1, scope: !10349, file: !1693, line: 108, type: !102)
!10354 = !DILocalVariable(name: "c", arg: 2, scope: !10349, file: !1693, line: 108, type: !103)
!10355 = !DILocalVariable(name: "n", arg: 3, scope: !10349, file: !1693, line: 108, type: !552)
!10356 = !DILocation(line: 0, scope: !10349)
!10357 = !DILocation(line: 110, column: 9, scope: !10349)
!10358 = !DILocation(line: 111, column: 1, scope: !10349)
!10359 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1693, file: !1693, line: 121, type: !10360, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10362)
!10360 = !DISubroutineType(types: !10361)
!10361 = !{null, !102, !13, !552}
!10362 = !{!10363, !10364, !10365}
!10363 = !DILocalVariable(name: "dst", arg: 1, scope: !10359, file: !1693, line: 121, type: !102)
!10364 = !DILocalVariable(name: "src", arg: 2, scope: !10359, file: !1693, line: 121, type: !13)
!10365 = !DILocalVariable(name: "n", arg: 3, scope: !10359, file: !1693, line: 121, type: !552)
!10366 = !DILocation(line: 0, scope: !10359)
!10367 = !DILocation(line: 123, column: 9, scope: !10359)
!10368 = !DILocation(line: 124, column: 1, scope: !10359)
!10369 = distinct !DISubprogram(name: "z_bss_zero", scope: !1693, file: !1693, line: 132, type: !2944, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !675)
!10370 = !DILocation(line: 143, column: 2, scope: !10369)
!10371 = !DILocation(line: 168, column: 1, scope: !10369)
!10372 = distinct !DISubprogram(name: "z_init_cpu", scope: !1693, file: !1693, line: 372, type: !10373, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10375)
!10373 = !DISubroutineType(types: !10374)
!10374 = !{null, !103}
!10375 = !{!10376}
!10376 = !DILocalVariable(name: "id", arg: 1, scope: !10372, file: !1693, line: 372, type: !103)
!10377 = !DILocation(line: 0, scope: !10372)
!10378 = !DILocation(line: 374, column: 2, scope: !10372)
!10379 = !DILocation(line: 375, column: 34, scope: !10372)
!10380 = !DILocation(line: 375, column: 19, scope: !10372)
!10381 = !DILocation(line: 375, column: 31, scope: !10372)
!10382 = !DILocation(line: 376, column: 24, scope: !10372)
!10383 = !DILocation(line: 376, column: 19, scope: !10372)
!10384 = !DILocation(line: 376, column: 22, scope: !10372)
!10385 = !DILocation(line: 378, column: 26, scope: !10372)
!10386 = !DILocation(line: 378, column: 4, scope: !10372)
!10387 = !DILocation(line: 378, column: 50, scope: !10372)
!10388 = !DILocation(line: 377, column: 19, scope: !10372)
!10389 = !DILocation(line: 377, column: 29, scope: !10372)
!10390 = !DILocation(line: 384, column: 1, scope: !10372)
!10391 = distinct !DISubprogram(name: "init_idle_thread", scope: !1693, file: !1693, line: 343, type: !10373, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10392)
!10392 = !{!10393, !10394, !10395, !10398}
!10393 = !DILocalVariable(name: "i", arg: 1, scope: !10391, file: !1693, line: 343, type: !103)
!10394 = !DILocalVariable(name: "thread", scope: !10391, file: !1693, line: 345, type: !1785)
!10395 = !DILocalVariable(name: "stack", scope: !10391, file: !1693, line: 346, type: !10396)
!10396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10397, size: 32)
!10397 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3249, line: 44, baseType: !1901)
!10398 = !DILocalVariable(name: "tname", scope: !10391, file: !1693, line: 358, type: !702)
!10399 = !DILocation(line: 0, scope: !10391)
!10400 = !DILocation(line: 345, column: 29, scope: !10391)
!10401 = !DILocation(line: 346, column: 28, scope: !10391)
!10402 = !DILocation(line: 362, column: 37, scope: !10391)
!10403 = !DILocation(line: 362, column: 36, scope: !10391)
!10404 = !DILocation(line: 361, column: 2, scope: !10391)
!10405 = !DILocation(line: 365, column: 2, scope: !10391)
!10406 = !DILocation(line: 370, column: 1, scope: !10391)
!10407 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1902, file: !1902, line: 331, type: !10408, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10410)
!10408 = !DISubroutineType(types: !10409)
!10409 = !{!702, !10396}
!10410 = !{!10411}
!10411 = !DILocalVariable(name: "sym", arg: 1, scope: !10407, file: !1902, line: 331, type: !10396)
!10412 = !DILocation(line: 0, scope: !10407)
!10413 = !DILocation(line: 333, column: 9, scope: !10407)
!10414 = !DILocation(line: 333, column: 2, scope: !10407)
!10415 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10416, file: !10416, line: 155, type: !10417, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10419)
!10416 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10417 = !DISubroutineType(types: !10418)
!10418 = !{null, !1785}
!10419 = !{!10420}
!10420 = !DILocalVariable(name: "thread", arg: 1, scope: !10415, file: !10416, line: 155, type: !1785)
!10421 = !DILocation(line: 0, scope: !10415)
!10422 = !DILocation(line: 157, column: 15, scope: !10415)
!10423 = !DILocation(line: 157, column: 28, scope: !10415)
!10424 = !DILocation(line: 158, column: 1, scope: !10415)
!10425 = distinct !DISubprogram(name: "z_cstart", scope: !1693, file: !1693, line: 501, type: !2944, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10426)
!10426 = !{!10427}
!10427 = !DILocalVariable(name: "dummy_thread", scope: !10425, file: !1693, line: 518, type: !1786)
!10428 = !DILocation(line: 507, column: 2, scope: !10425)
!10429 = !DILocation(line: 43, column: 14, scope: !10430, inlinedAt: !10434)
!10430 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10431, file: !10431, line: 40, type: !2944, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10432)
!10431 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10432 = !{!10433}
!10433 = !DILocalVariable(name: "msp", scope: !10430, file: !10431, line: 42, type: !404)
!10434 = distinct !DILocation(line: 44, column: 2, scope: !10435, inlinedAt: !10437)
!10435 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10436, file: !10436, line: 42, type: !2944, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !675)
!10436 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10437 = distinct !DILocation(line: 510, column: 2, scope: !10425)
!10438 = !DILocation(line: 43, column: 3, scope: !10430, inlinedAt: !10434)
!10439 = !DILocation(line: 43, column: 60, scope: !10430, inlinedAt: !10434)
!10440 = !DILocation(line: 0, scope: !10430, inlinedAt: !10434)
!10441 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10442, file: !5647, line: 1153, type: !404)
!10442 = distinct !DISubprogram(name: "__set_MSP", scope: !5647, file: !5647, line: 1153, type: !5738, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10443)
!10443 = !{!10441}
!10444 = !DILocation(line: 0, scope: !10442, inlinedAt: !10445)
!10445 = distinct !DILocation(line: 46, column: 2, scope: !10430, inlinedAt: !10434)
!10446 = !DILocation(line: 1155, column: 3, scope: !10442, inlinedAt: !10445)
!10447 = !{i64 7497861}
!10448 = !DILocation(line: 62, column: 11, scope: !10430, inlinedAt: !10434)
!10449 = !DILocation(line: 102, column: 2, scope: !10450, inlinedAt: !10451)
!10450 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6382, file: !6382, line: 97, type: !2944, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !675)
!10451 = distinct !DILocation(line: 45, column: 2, scope: !10435, inlinedAt: !10437)
!10452 = !DILocation(line: 108, column: 2, scope: !10450, inlinedAt: !10451)
!10453 = !DILocation(line: 112, column: 2, scope: !10450, inlinedAt: !10451)
!10454 = !DILocation(line: 113, column: 2, scope: !10450, inlinedAt: !10451)
!10455 = !DILocation(line: 114, column: 2, scope: !10450, inlinedAt: !10451)
!10456 = !DILocation(line: 116, column: 2, scope: !10450, inlinedAt: !10451)
!10457 = !DILocation(line: 123, column: 13, scope: !10450, inlinedAt: !10451)
!10458 = !DILocation(line: 46, column: 2, scope: !10435, inlinedAt: !10437)
!10459 = !DILocation(line: 47, column: 2, scope: !10435, inlinedAt: !10437)
!10460 = !DILocation(line: 174, column: 12, scope: !10461, inlinedAt: !10462)
!10461 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6382, file: !6382, line: 169, type: !2944, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !675)
!10462 = distinct !DILocation(line: 48, column: 2, scope: !10435, inlinedAt: !10437)
!10463 = !DILocation(line: 179, column: 12, scope: !10461, inlinedAt: !10462)
!10464 = !DILocation(line: 518, column: 2, scope: !10425)
!10465 = !DILocation(line: 518, column: 18, scope: !10425)
!10466 = !DILocation(line: 520, column: 2, scope: !10425)
!10467 = !DILocation(line: 523, column: 2, scope: !10425)
!10468 = !DILocation(line: 526, column: 2, scope: !10425)
!10469 = !DILocation(line: 527, column: 2, scope: !10425)
!10470 = !DILocation(line: 543, column: 24, scope: !10425)
!10471 = !DILocation(line: 543, column: 2, scope: !10425)
!10472 = !DILocation(line: 0, scope: !1921)
!10473 = !DILocation(line: 246, column: 15, scope: !1939)
!10474 = !DILocation(line: 246, column: 36, scope: !1938)
!10475 = !DILocation(line: 246, column: 2, scope: !1939)
!10476 = !DILocation(line: 247, column: 37, scope: !1937)
!10477 = !DILocation(line: 0, scope: !1937)
!10478 = !DILocation(line: 248, column: 19, scope: !1937)
!10479 = !DILocation(line: 248, column: 12, scope: !1937)
!10480 = !DILocation(line: 250, column: 11, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !1937, file: !1693, line: 250, column: 7)
!10482 = !DILocation(line: 250, column: 7, scope: !1937)
!10483 = !DILocation(line: 254, column: 11, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !1693, line: 254, column: 8)
!10485 = distinct !DILexicalBlock(scope: !10481, file: !1693, line: 250, column: 20)
!10486 = !DILocation(line: 254, column: 8, scope: !10485)
!10487 = !DILocation(line: 255, column: 9, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10484, file: !1693, line: 254, column: 17)
!10489 = !DILocation(line: 258, column: 9, scope: !10488)
!10490 = !DILocation(line: 261, column: 28, scope: !10488)
!10491 = !DILocation(line: 261, column: 10, scope: !10488)
!10492 = !DILocation(line: 261, column: 17, scope: !10488)
!10493 = !DILocation(line: 261, column: 26, scope: !10488)
!10494 = !DILocation(line: 262, column: 4, scope: !10488)
!10495 = !DILocation(line: 263, column: 9, scope: !10485)
!10496 = !DILocation(line: 263, column: 16, scope: !10485)
!10497 = !DILocation(line: 263, column: 28, scope: !10485)
!10498 = !DILocation(line: 264, column: 3, scope: !10485)
!10499 = !DILocation(line: 246, column: 60, scope: !1938)
!10500 = distinct !{!10500, !10475, !10501}
!10501 = !DILocation(line: 265, column: 2, scope: !1939)
!10502 = !DILocation(line: 266, column: 1, scope: !1921)
!10503 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1539, file: !1539, line: 1814, type: !5681, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10504)
!10504 = !{!10505, !10506}
!10505 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10503, file: !1539, line: 1814, type: !2335)
!10506 = !DILocalVariable(name: "priority", arg: 2, scope: !10503, file: !1539, line: 1814, type: !404)
!10507 = !DILocation(line: 0, scope: !10503)
!10508 = !DILocation(line: 1822, column: 48, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !1539, line: 1821, column: 3)
!10510 = distinct !DILexicalBlock(scope: !10503, file: !1539, line: 1816, column: 7)
!10511 = !DILocation(line: 1822, column: 32, scope: !10509)
!10512 = !DILocation(line: 1822, column: 40, scope: !10509)
!10513 = !DILocation(line: 1822, column: 5, scope: !10509)
!10514 = !DILocation(line: 1822, column: 46, scope: !10509)
!10515 = !DILocation(line: 1824, column: 1, scope: !10503)
!10516 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10436, file: !10436, line: 32, type: !2944, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !675)
!10517 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10518, file: !10518, line: 215, type: !10417, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10519)
!10518 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10519 = !{!10520}
!10520 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10517, file: !10518, line: 215, type: !1785)
!10521 = !DILocation(line: 0, scope: !10517)
!10522 = !DILocation(line: 217, column: 21, scope: !10517)
!10523 = !DILocation(line: 217, column: 34, scope: !10517)
!10524 = !DILocation(line: 221, column: 21, scope: !10517)
!10525 = !DILocation(line: 221, column: 34, scope: !10517)
!10526 = !DILocation(line: 232, column: 16, scope: !10517)
!10527 = !DILocation(line: 232, column: 30, scope: !10517)
!10528 = !DILocation(line: 239, column: 24, scope: !10517)
!10529 = !DILocation(line: 240, column: 1, scope: !10517)
!10530 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1693, file: !1693, line: 399, type: !700, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10531)
!10531 = !{!10532}
!10532 = !DILocalVariable(name: "stack_ptr", scope: !10530, file: !1693, line: 401, type: !702)
!10533 = !DILocation(line: 404, column: 2, scope: !10530)
!10534 = !DILocation(line: 416, column: 24, scope: !10530)
!10535 = !DILocation(line: 418, column: 14, scope: !10530)
!10536 = !DILocation(line: 0, scope: !10530)
!10537 = !DILocation(line: 423, column: 2, scope: !10530)
!10538 = !DILocation(line: 424, column: 2, scope: !10530)
!10539 = !DILocation(line: 426, column: 2, scope: !10530)
!10540 = !DILocation(line: 428, column: 2, scope: !10530)
!10541 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1693, file: !1693, line: 432, type: !10542, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10544)
!10542 = !DISubroutineType(types: !10543)
!10543 = !{null, !702}
!10544 = !{!10545}
!10545 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !10541, file: !1693, line: 432, type: !702)
!10546 = !DILocation(line: 0, scope: !10541)
!10547 = !DILocation(line: 435, column: 2, scope: !10541)
!10548 = !DILocation(line: 445, column: 2, scope: !10541)
!10549 = distinct !DISubprogram(name: "bg_thread_main", scope: !1693, file: !1693, line: 277, type: !3251, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !10550)
!10550 = !{!10551, !10552, !10553}
!10551 = !DILocalVariable(name: "unused1", arg: 1, scope: !10549, file: !1693, line: 277, type: !102)
!10552 = !DILocalVariable(name: "unused2", arg: 2, scope: !10549, file: !1693, line: 277, type: !102)
!10553 = !DILocalVariable(name: "unused3", arg: 3, scope: !10549, file: !1693, line: 277, type: !102)
!10554 = !DILocation(line: 0, scope: !10549)
!10555 = !DILocation(line: 291, column: 20, scope: !10549)
!10556 = !DILocation(line: 293, column: 2, scope: !10549)
!10557 = !DILocation(line: 297, column: 2, scope: !10549)
!10558 = !DILocation(line: 305, column: 2, scope: !10549)
!10559 = !DILocation(line: 307, column: 2, scope: !10549)
!10560 = !DILocation(line: 330, column: 8, scope: !10549)
!10561 = !DILocation(line: 333, column: 34, scope: !10549)
!10562 = !DILocation(line: 339, column: 1, scope: !10549)
!10563 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1948, file: !1948, line: 45, type: !10564, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10572)
!10564 = !DISubroutineType(types: !10565)
!10565 = !{null, !10566, !102}
!10566 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !654, line: 103, baseType: !10567)
!10567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10568, size: 32)
!10568 = !DISubroutineType(types: !10569)
!10569 = !{null, !10570, !102}
!10570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10571, size: 32)
!10571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!10572 = !{!10573, !10574}
!10573 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10563, file: !1948, line: 45, type: !10566)
!10574 = !DILocalVariable(name: "user_data", arg: 2, scope: !10563, file: !1948, line: 45, type: !102)
!10575 = !DILocation(line: 0, scope: !10563)
!10576 = !DILocation(line: 71, column: 1, scope: !10563)
!10577 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1948, file: !1948, line: 73, type: !10564, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10578)
!10578 = !{!10579, !10580}
!10579 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10577, file: !1948, line: 73, type: !10566)
!10580 = !DILocalVariable(name: "user_data", arg: 2, scope: !10577, file: !1948, line: 73, type: !102)
!10581 = !DILocation(line: 0, scope: !10577)
!10582 = !DILocation(line: 95, column: 1, scope: !10577)
!10583 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1948, file: !1948, line: 97, type: !6383, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !675)
!10584 = !DILocation(line: 1031, column: 3, scope: !10585, inlinedAt: !10588)
!10585 = distinct !DISubprogram(name: "__get_IPSR", scope: !5647, file: !5647, line: 1027, type: !5728, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10586)
!10586 = !{!10587}
!10587 = !DILocalVariable(name: "result", scope: !10585, file: !5647, line: 1029, type: !404)
!10588 = distinct !DILocation(line: 48, column: 10, scope: !10589, inlinedAt: !10590)
!10589 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6382, file: !6382, line: 46, type: !6383, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !675)
!10590 = distinct !DILocation(line: 99, column: 9, scope: !10583)
!10591 = !{i64 7012681}
!10592 = !DILocation(line: 0, scope: !10585, inlinedAt: !10588)
!10593 = !DILocation(line: 48, column: 9, scope: !10589, inlinedAt: !10590)
!10594 = !DILocation(line: 99, column: 2, scope: !10583)
!10595 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1948, file: !1948, line: 106, type: !2944, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !675)
!10596 = !DILocation(line: 108, column: 2, scope: !10595)
!10597 = !DILocation(line: 108, column: 17, scope: !10595)
!10598 = !DILocation(line: 108, column: 30, scope: !10595)
!10599 = !DILocation(line: 109, column: 1, scope: !10595)
!10600 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1948, file: !1948, line: 116, type: !2944, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !675)
!10601 = !DILocation(line: 118, column: 2, scope: !10600)
!10602 = !DILocation(line: 118, column: 17, scope: !10600)
!10603 = !DILocation(line: 118, column: 30, scope: !10600)
!10604 = !DILocation(line: 119, column: 1, scope: !10600)
!10605 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1948, file: !1948, line: 126, type: !6383, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !675)
!10606 = !DILocation(line: 128, column: 10, scope: !10605)
!10607 = !DILocation(line: 128, column: 25, scope: !10605)
!10608 = !DILocation(line: 128, column: 38, scope: !10605)
!10609 = !DILocation(line: 128, column: 53, scope: !10605)
!10610 = !DILocation(line: 128, column: 2, scope: !10605)
!10611 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1948, file: !1948, line: 187, type: !10612, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10614)
!10612 = !DISubroutineType(types: !10613)
!10613 = !{!103, !1952, !569}
!10614 = !{!10615, !10616}
!10615 = !DILocalVariable(name: "thread", arg: 1, scope: !10611, file: !1948, line: 187, type: !1952)
!10616 = !DILocalVariable(name: "value", arg: 2, scope: !10611, file: !1948, line: 187, type: !569)
!10617 = !DILocation(line: 0, scope: !10611)
!10618 = !DILocation(line: 206, column: 2, scope: !10611)
!10619 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1948, file: !1948, line: 238, type: !10620, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10622)
!10620 = !DISubroutineType(types: !10621)
!10621 = !{!569, !1952}
!10622 = !{!10623}
!10623 = !DILocalVariable(name: "thread", arg: 1, scope: !10619, file: !1948, line: 238, type: !1952)
!10624 = !DILocation(line: 0, scope: !10619)
!10625 = !DILocation(line: 244, column: 2, scope: !10619)
!10626 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1948, file: !1948, line: 248, type: !10627, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10629)
!10627 = !DISubroutineType(types: !10628)
!10628 = !{!103, !1951, !702, !552}
!10629 = !{!10630, !10631, !10632}
!10630 = !DILocalVariable(name: "thread", arg: 1, scope: !10626, file: !1948, line: 248, type: !1951)
!10631 = !DILocalVariable(name: "buf", arg: 2, scope: !10626, file: !1948, line: 248, type: !702)
!10632 = !DILocalVariable(name: "size", arg: 3, scope: !10626, file: !1948, line: 248, type: !552)
!10633 = !DILocation(line: 0, scope: !10626)
!10634 = !DILocation(line: 257, column: 2, scope: !10626)
!10635 = !DILocation(line: 0, scope: !1947)
!10636 = !DILocation(line: 281, column: 11, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !1947, file: !1948, line: 281, column: 6)
!10638 = !DILocation(line: 281, column: 20, scope: !10637)
!10639 = !DILocation(line: 275, column: 45, scope: !1947)
!10640 = !DILocation(line: 285, column: 10, scope: !1947)
!10641 = !DILocation(line: 0, scope: !2065)
!10642 = !DILocation(line: 293, column: 39, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !2065, file: !1948, line: 293, column: 2)
!10644 = !DILocation(line: 293, column: 2, scope: !2065)
!10645 = !DILocation(line: 273, column: 14, scope: !1947)
!10646 = !DILocation(line: 309, column: 2, scope: !1947)
!10647 = !DILocation(line: 309, column: 11, scope: !1947)
!10648 = !DILocation(line: 311, column: 2, scope: !1947)
!10649 = !DILocation(line: 293, column: 26, scope: !10643)
!10650 = !DILocation(line: 294, column: 9, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10643, file: !1948, line: 293, column: 54)
!10652 = !DILocation(line: 295, column: 21, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10651, file: !1948, line: 295, column: 7)
!10654 = !DILocation(line: 295, column: 28, scope: !10653)
!10655 = !DILocation(line: 295, column: 7, scope: !10651)
!10656 = !DILocation(line: 299, column: 25, scope: !10651)
!10657 = !DILocation(line: 299, column: 41, scope: !10651)
!10658 = !DILocation(line: 300, column: 7, scope: !10651)
!10659 = !DILocation(line: 300, column: 26, scope: !10651)
!10660 = !DILocation(line: 299, column: 10, scope: !10651)
!10661 = !DILocation(line: 299, column: 7, scope: !10651)
!10662 = !DILocation(line: 302, column: 16, scope: !10651)
!10663 = !DILocation(line: 304, column: 20, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10651, file: !1948, line: 304, column: 7)
!10665 = !DILocation(line: 304, column: 7, scope: !10651)
!10666 = !DILocation(line: 305, column: 26, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10664, file: !1948, line: 304, column: 26)
!10668 = !DILocation(line: 305, column: 42, scope: !10667)
!10669 = !DILocation(line: 305, column: 11, scope: !10667)
!10670 = !DILocation(line: 305, column: 8, scope: !10667)
!10671 = !DILocation(line: 306, column: 3, scope: !10667)
!10672 = !DILocation(line: 293, column: 50, scope: !10643)
!10673 = !DILocation(line: 312, column: 1, scope: !1947)
!10674 = distinct !DISubprogram(name: "copy_bytes", scope: !1948, file: !1948, line: 261, type: !10675, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10677)
!10675 = !DISubroutineType(types: !10676)
!10676 = !{!552, !702, !552, !569, !552}
!10677 = !{!10678, !10679, !10680, !10681, !10682}
!10678 = !DILocalVariable(name: "dest", arg: 1, scope: !10674, file: !1948, line: 261, type: !702)
!10679 = !DILocalVariable(name: "dest_size", arg: 2, scope: !10674, file: !1948, line: 261, type: !552)
!10680 = !DILocalVariable(name: "src", arg: 3, scope: !10674, file: !1948, line: 261, type: !569)
!10681 = !DILocalVariable(name: "src_size", arg: 4, scope: !10674, file: !1948, line: 261, type: !552)
!10682 = !DILocalVariable(name: "bytes_to_copy", scope: !10674, file: !1948, line: 263, type: !552)
!10683 = !DILocation(line: 0, scope: !10674)
!10684 = !DILocation(line: 265, column: 18, scope: !10674)
!10685 = !DILocation(line: 266, column: 2, scope: !10674)
!10686 = !DILocation(line: 268, column: 2, scope: !10674)
!10687 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1948, file: !1948, line: 383, type: !10688, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10690)
!10688 = !DISubroutineType(types: !10689)
!10689 = !{null, !1952}
!10690 = !{!10691}
!10691 = !DILocalVariable(name: "thread", arg: 1, scope: !10687, file: !1948, line: 383, type: !1952)
!10692 = !DILocation(line: 0, scope: !10687)
!10693 = !DILocation(line: 387, column: 2, scope: !10687)
!10694 = !DILocation(line: 388, column: 1, scope: !10687)
!10695 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1948, file: !1948, line: 528, type: !10696, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10703)
!10696 = !DISubroutineType(types: !10697)
!10697 = !{!702, !1952, !10698, !552, !3248, !102, !102, !102, !103, !404, !569}
!10698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10699, size: 32)
!10699 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3249, line: 44, baseType: !10700)
!10700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1902, line: 47, size: 8, elements: !10701)
!10701 = !{!10702}
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10700, file: !1902, line: 48, baseType: !571, size: 8)
!10703 = !{!10704, !10705, !10706, !10707, !10708, !10709, !10710, !10711, !10712, !10713, !10714}
!10704 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10695, file: !1948, line: 528, type: !1952)
!10705 = !DILocalVariable(name: "stack", arg: 2, scope: !10695, file: !1948, line: 529, type: !10698)
!10706 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10695, file: !1948, line: 529, type: !552)
!10707 = !DILocalVariable(name: "entry", arg: 4, scope: !10695, file: !1948, line: 530, type: !3248)
!10708 = !DILocalVariable(name: "p1", arg: 5, scope: !10695, file: !1948, line: 531, type: !102)
!10709 = !DILocalVariable(name: "p2", arg: 6, scope: !10695, file: !1948, line: 531, type: !102)
!10710 = !DILocalVariable(name: "p3", arg: 7, scope: !10695, file: !1948, line: 531, type: !102)
!10711 = !DILocalVariable(name: "prio", arg: 8, scope: !10695, file: !1948, line: 532, type: !103)
!10712 = !DILocalVariable(name: "options", arg: 9, scope: !10695, file: !1948, line: 532, type: !404)
!10713 = !DILocalVariable(name: "name", arg: 10, scope: !10695, file: !1948, line: 532, type: !569)
!10714 = !DILocalVariable(name: "stack_ptr", scope: !10695, file: !1948, line: 534, type: !702)
!10715 = !DILocation(line: 0, scope: !10695)
!10716 = !DILocation(line: 550, column: 28, scope: !10695)
!10717 = !DILocation(line: 550, column: 2, scope: !10695)
!10718 = !DILocation(line: 553, column: 34, scope: !10695)
!10719 = !DILocation(line: 553, column: 2, scope: !10695)
!10720 = !DILocation(line: 554, column: 14, scope: !10695)
!10721 = !DILocation(line: 564, column: 2, scope: !10695)
!10722 = !DILocation(line: 567, column: 14, scope: !10695)
!10723 = !DILocation(line: 567, column: 24, scope: !10695)
!10724 = !DILocation(line: 612, column: 7, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10695, file: !1948, line: 612, column: 6)
!10726 = !DILocation(line: 612, column: 6, scope: !10695)
!10727 = !DILocation(line: 627, column: 40, scope: !10695)
!10728 = !DILocation(line: 637, column: 2, scope: !10695)
!10729 = !DILocation(line: 613, column: 15, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10725, file: !1948, line: 612, column: 17)
!10731 = !DILocation(line: 613, column: 29, scope: !10730)
!10732 = !DILocation(line: 638, column: 1, scope: !10695)
!10733 = distinct !DISubprogram(name: "z_waitq_init", scope: !10734, file: !10734, line: 47, type: !10735, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10737)
!10734 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10735 = !DISubroutineType(types: !10736)
!10736 = !{null, !1983}
!10737 = !{!10738}
!10738 = !DILocalVariable(name: "w", arg: 1, scope: !10733, file: !10734, line: 47, type: !1983)
!10739 = !DILocation(line: 0, scope: !10733)
!10740 = !DILocation(line: 49, column: 21, scope: !10733)
!10741 = !DILocation(line: 49, column: 2, scope: !10733)
!10742 = !DILocation(line: 50, column: 1, scope: !10733)
!10743 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1948, file: !1948, line: 791, type: !10744, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10747)
!10744 = !DISubroutineType(types: !10745)
!10745 = !{null, !10746, !103, !404, !32}
!10746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!10747 = !{!10748, !10749, !10750, !10751}
!10748 = !DILocalVariable(name: "thread_base", arg: 1, scope: !10743, file: !1948, line: 791, type: !10746)
!10749 = !DILocalVariable(name: "priority", arg: 2, scope: !10743, file: !1948, line: 791, type: !103)
!10750 = !DILocalVariable(name: "initial_state", arg: 3, scope: !10743, file: !1948, line: 792, type: !404)
!10751 = !DILocalVariable(name: "options", arg: 4, scope: !10743, file: !1948, line: 792, type: !32)
!10752 = !DILocation(line: 0, scope: !10743)
!10753 = !DILocation(line: 795, column: 15, scope: !10743)
!10754 = !DILocation(line: 795, column: 25, scope: !10743)
!10755 = !DILocation(line: 796, column: 30, scope: !10743)
!10756 = !DILocation(line: 796, column: 15, scope: !10743)
!10757 = !DILocation(line: 796, column: 28, scope: !10743)
!10758 = !DILocation(line: 797, column: 30, scope: !10743)
!10759 = !DILocation(line: 797, column: 15, scope: !10743)
!10760 = !DILocation(line: 797, column: 28, scope: !10743)
!10761 = !DILocation(line: 799, column: 22, scope: !10743)
!10762 = !DILocation(line: 799, column: 15, scope: !10743)
!10763 = !DILocation(line: 799, column: 20, scope: !10743)
!10764 = !DILocation(line: 801, column: 15, scope: !10743)
!10765 = !DILocation(line: 801, column: 28, scope: !10743)
!10766 = !DILocation(line: 814, column: 2, scope: !10743)
!10767 = !DILocation(line: 815, column: 1, scope: !10743)
!10768 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1948, file: !1948, line: 449, type: !10769, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10771)
!10769 = !DISubroutineType(types: !10770)
!10770 = !{!702, !1952, !10698, !552}
!10771 = !{!10772, !10773, !10774, !10775, !10776, !10777, !10778, !10779}
!10772 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10768, file: !1948, line: 449, type: !1952)
!10773 = !DILocalVariable(name: "stack", arg: 2, scope: !10768, file: !1948, line: 450, type: !10698)
!10774 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10768, file: !1948, line: 450, type: !552)
!10775 = !DILocalVariable(name: "stack_obj_size", scope: !10768, file: !1948, line: 452, type: !552)
!10776 = !DILocalVariable(name: "stack_buf_size", scope: !10768, file: !1948, line: 452, type: !552)
!10777 = !DILocalVariable(name: "stack_ptr", scope: !10768, file: !1948, line: 453, type: !702)
!10778 = !DILocalVariable(name: "stack_buf_start", scope: !10768, file: !1948, line: 453, type: !702)
!10779 = !DILocalVariable(name: "delta", scope: !10768, file: !1948, line: 454, type: !552)
!10780 = !DILocation(line: 0, scope: !10768)
!10781 = !DILocation(line: 465, column: 20, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10768, file: !1948, line: 463, column: 2)
!10783 = !DILocation(line: 473, column: 28, scope: !10768)
!10784 = !DILocation(line: 520, column: 2, scope: !10768)
!10785 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !10786, file: !10786, line: 40, type: !10787, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10789)
!10786 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10787 = !DISubroutineType(types: !10788)
!10788 = !{null, !10746}
!10789 = !{!10790}
!10790 = !DILocalVariable(name: "thread_base", arg: 1, scope: !10785, file: !10786, line: 40, type: !10746)
!10791 = !DILocation(line: 0, scope: !10785)
!10792 = !DILocation(line: 42, column: 31, scope: !10785)
!10793 = !DILocation(line: 42, column: 2, scope: !10785)
!10794 = !DILocation(line: 43, column: 1, scope: !10785)
!10795 = distinct !DISubprogram(name: "z_init_timeout", scope: !10786, file: !10786, line: 25, type: !2009, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10796)
!10796 = !{!10797}
!10797 = !DILocalVariable(name: "to", arg: 1, scope: !10795, file: !10786, line: 25, type: !2011)
!10798 = !DILocation(line: 0, scope: !10795)
!10799 = !DILocation(line: 27, column: 22, scope: !10795)
!10800 = !DILocation(line: 27, column: 2, scope: !10795)
!10801 = !DILocation(line: 28, column: 1, scope: !10795)
!10802 = distinct !DISubprogram(name: "sys_dnode_init", scope: !683, file: !683, line: 211, type: !10803, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10805)
!10803 = !DISubroutineType(types: !10804)
!10804 = !{null, !2049}
!10805 = !{!10806}
!10806 = !DILocalVariable(name: "node", arg: 1, scope: !10802, file: !683, line: 211, type: !2049)
!10807 = !DILocation(line: 0, scope: !10802)
!10808 = !DILocation(line: 213, column: 8, scope: !10802)
!10809 = !DILocation(line: 213, column: 13, scope: !10802)
!10810 = !DILocation(line: 214, column: 8, scope: !10802)
!10811 = !DILocation(line: 214, column: 13, scope: !10802)
!10812 = !DILocation(line: 215, column: 1, scope: !10802)
!10813 = distinct !DISubprogram(name: "sys_dlist_init", scope: !683, file: !683, line: 197, type: !10814, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10817)
!10814 = !DISubroutineType(types: !10815)
!10815 = !{null, !10816}
!10816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!10817 = !{!10818}
!10818 = !DILocalVariable(name: "list", arg: 1, scope: !10813, file: !683, line: 197, type: !10816)
!10819 = !DILocation(line: 0, scope: !10813)
!10820 = !DILocation(line: 199, column: 8, scope: !10813)
!10821 = !DILocation(line: 199, column: 13, scope: !10813)
!10822 = !DILocation(line: 200, column: 8, scope: !10813)
!10823 = !DILocation(line: 200, column: 13, scope: !10813)
!10824 = !DILocation(line: 201, column: 1, scope: !10813)
!10825 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1948, file: !1948, line: 641, type: !10826, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10832)
!10826 = !DISubroutineType(types: !10827)
!10827 = !{!1951, !1952, !10698, !552, !3248, !102, !102, !102, !103, !404, !10828}
!10828 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !549, line: 67, baseType: !10829)
!10829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 65, size: 64, elements: !10830)
!10830 = !{!10831}
!10831 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10829, file: !549, line: 66, baseType: !548, size: 64)
!10832 = !{!10833, !10834, !10835, !10836, !10837, !10838, !10839, !10840, !10841, !10842}
!10833 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10825, file: !1948, line: 641, type: !1952)
!10834 = !DILocalVariable(name: "stack", arg: 2, scope: !10825, file: !1948, line: 642, type: !10698)
!10835 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10825, file: !1948, line: 643, type: !552)
!10836 = !DILocalVariable(name: "entry", arg: 4, scope: !10825, file: !1948, line: 643, type: !3248)
!10837 = !DILocalVariable(name: "p1", arg: 5, scope: !10825, file: !1948, line: 644, type: !102)
!10838 = !DILocalVariable(name: "p2", arg: 6, scope: !10825, file: !1948, line: 644, type: !102)
!10839 = !DILocalVariable(name: "p3", arg: 7, scope: !10825, file: !1948, line: 644, type: !102)
!10840 = !DILocalVariable(name: "prio", arg: 8, scope: !10825, file: !1948, line: 645, type: !103)
!10841 = !DILocalVariable(name: "options", arg: 9, scope: !10825, file: !1948, line: 645, type: !404)
!10842 = !DILocalVariable(name: "delay", arg: 10, scope: !10825, file: !1948, line: 645, type: !10828)
!10843 = !DILocation(line: 0, scope: !10825)
!10844 = !DILocation(line: 649, column: 2, scope: !10825)
!10845 = !DILocation(line: 652, column: 7, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10825, file: !1948, line: 652, column: 6)
!10847 = !DILocation(line: 652, column: 6, scope: !10825)
!10848 = !DILocation(line: 653, column: 3, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10846, file: !1948, line: 652, column: 39)
!10850 = !DILocation(line: 654, column: 2, scope: !10849)
!10851 = !DILocation(line: 656, column: 2, scope: !10825)
!10852 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1948, file: !1948, line: 401, type: !10853, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10855)
!10853 = !DISubroutineType(types: !10854)
!10854 = !{null, !1952, !10828}
!10855 = !{!10856, !10857}
!10856 = !DILocalVariable(name: "thread", arg: 1, scope: !10852, file: !1948, line: 401, type: !1952)
!10857 = !DILocalVariable(name: "delay", arg: 2, scope: !10852, file: !1948, line: 401, type: !10828)
!10858 = !DILocation(line: 0, scope: !10852)
!10859 = !DILocation(line: 404, column: 6, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10852, file: !1948, line: 404, column: 6)
!10861 = !DILocation(line: 404, column: 6, scope: !10852)
!10862 = !DILocation(line: 405, column: 3, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10860, file: !1948, line: 404, column: 38)
!10864 = !DILocation(line: 406, column: 2, scope: !10863)
!10865 = !DILocation(line: 407, column: 3, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10860, file: !1948, line: 406, column: 9)
!10867 = !DILocation(line: 413, column: 1, scope: !10852)
!10868 = distinct !DISubprogram(name: "k_thread_start", scope: !3364, file: !3364, line: 205, type: !10869, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10871)
!10869 = !DISubroutineType(types: !10870)
!10870 = !{null, !1951}
!10871 = !{!10872}
!10872 = !DILocalVariable(name: "thread", arg: 1, scope: !10868, file: !3364, line: 205, type: !1951)
!10873 = !DILocation(line: 0, scope: !10868)
!10874 = !DILocation(line: 214, column: 2, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10868, file: !3364, line: 214, column: 2)
!10876 = !{i64 2151062445}
!10877 = !DILocation(line: 215, column: 2, scope: !10868)
!10878 = !DILocation(line: 216, column: 1, scope: !10868)
!10879 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !10786, file: !10786, line: 47, type: !10853, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10880)
!10880 = !{!10881, !10882}
!10881 = !DILocalVariable(name: "thread", arg: 1, scope: !10879, file: !10786, line: 47, type: !1952)
!10882 = !DILocalVariable(name: "ticks", arg: 2, scope: !10879, file: !10786, line: 47, type: !10828)
!10883 = !DILocation(line: 0, scope: !10879)
!10884 = !DILocation(line: 49, column: 30, scope: !10879)
!10885 = !DILocation(line: 49, column: 2, scope: !10879)
!10886 = !DILocation(line: 50, column: 1, scope: !10879)
!10887 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1948, file: !1948, line: 748, type: !2944, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10888)
!10888 = !{!10889, !10907}
!10889 = !DILocalVariable(name: "thread_data", scope: !10890, file: !1948, line: 750, type: !10891)
!10890 = distinct !DILexicalBlock(scope: !10887, file: !1948, line: 750, column: 2)
!10891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10892, size: 32)
!10892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !654, line: 620, size: 384, elements: !10893)
!10893 = !{!10894, !10895, !10896, !10897, !10898, !10899, !10900, !10901, !10902, !10903, !10904, !10906}
!10894 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !10892, file: !654, line: 621, baseType: !1952, size: 32)
!10895 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !10892, file: !654, line: 622, baseType: !10698, size: 32, offset: 32)
!10896 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !10892, file: !654, line: 623, baseType: !32, size: 32, offset: 64)
!10897 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !10892, file: !654, line: 624, baseType: !3248, size: 32, offset: 96)
!10898 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !10892, file: !654, line: 625, baseType: !102, size: 32, offset: 128)
!10899 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !10892, file: !654, line: 626, baseType: !102, size: 32, offset: 160)
!10900 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !10892, file: !654, line: 627, baseType: !102, size: 32, offset: 192)
!10901 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !10892, file: !654, line: 628, baseType: !103, size: 32, offset: 224)
!10902 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !10892, file: !654, line: 629, baseType: !404, size: 32, offset: 256)
!10903 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !10892, file: !654, line: 630, baseType: !1090, size: 32, offset: 288)
!10904 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !10892, file: !654, line: 631, baseType: !10905, size: 32, offset: 320)
!10905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 32)
!10906 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !10892, file: !654, line: 632, baseType: !569, size: 32, offset: 352)
!10907 = !DILocalVariable(name: "thread_data", scope: !10908, file: !1948, line: 781, type: !10891)
!10908 = distinct !DILexicalBlock(scope: !10887, file: !1948, line: 781, column: 2)
!10909 = !DILocation(line: 0, scope: !10890)
!10910 = !DILocation(line: 750, column: 2, scope: !10890)
!10911 = !DILocation(line: 780, column: 2, scope: !10887)
!10912 = !DILocation(line: 0, scope: !10908)
!10913 = !DILocation(line: 781, column: 2, scope: !10908)
!10914 = !DILocation(line: 752, column: 17, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !1948, line: 750, column: 38)
!10916 = distinct !DILexicalBlock(scope: !10890, file: !1948, line: 750, column: 2)
!10917 = !DILocation(line: 753, column: 17, scope: !10915)
!10918 = !DILocation(line: 754, column: 17, scope: !10915)
!10919 = !DILocation(line: 755, column: 17, scope: !10915)
!10920 = !DILocation(line: 756, column: 17, scope: !10915)
!10921 = !DILocation(line: 757, column: 17, scope: !10915)
!10922 = !DILocation(line: 758, column: 17, scope: !10915)
!10923 = !DILocation(line: 759, column: 17, scope: !10915)
!10924 = !DILocation(line: 760, column: 17, scope: !10915)
!10925 = !DILocation(line: 751, column: 3, scope: !10915)
!10926 = !DILocation(line: 763, column: 16, scope: !10915)
!10927 = !DILocation(line: 763, column: 29, scope: !10915)
!10928 = !DILocation(line: 763, column: 39, scope: !10915)
!10929 = !DILocation(line: 750, column: 2, scope: !10916)
!10930 = !DILocation(line: 750, column: 2, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10916, file: !1948, line: 750, column: 2)
!10932 = distinct !{!10932, !10910, !10933}
!10933 = !DILocation(line: 764, column: 2, scope: !10890)
!10934 = !DILocation(line: 787, column: 2, scope: !10887)
!10935 = !DILocation(line: 788, column: 1, scope: !10887)
!10936 = !DILocation(line: 782, column: 20, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10938, file: !1948, line: 782, column: 7)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !1948, line: 781, column: 38)
!10939 = distinct !DILexicalBlock(scope: !10908, file: !1948, line: 781, column: 2)
!10940 = !DILocation(line: 782, column: 31, scope: !10937)
!10941 = !DILocation(line: 782, column: 7, scope: !10938)
!10942 = !DILocation(line: 783, column: 37, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10937, file: !1948, line: 782, column: 51)
!10944 = !DILocation(line: 784, column: 10, scope: !10943)
!10945 = !DILocation(line: 783, column: 4, scope: !10943)
!10946 = !DILocation(line: 785, column: 3, scope: !10943)
!10947 = !DILocation(line: 781, column: 2, scope: !10939)
!10948 = !DILocation(line: 781, column: 2, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10939, file: !1948, line: 781, column: 2)
!10950 = distinct !{!10950, !10913, !10951}
!10951 = !DILocation(line: 786, column: 2, scope: !10908)
!10952 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !10953, file: !10953, line: 403, type: !10954, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10956)
!10953 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10954 = !DISubroutineType(types: !10955)
!10955 = !{!2050, !2050}
!10956 = !{!10957}
!10957 = !DILocalVariable(name: "t", arg: 1, scope: !10952, file: !10953, line: 403, type: !2050)
!10958 = !DILocation(line: 0, scope: !10952)
!10959 = !DILocalVariable(name: "t", arg: 1, scope: !10960, file: !10953, line: 102, type: !2050)
!10960 = distinct !DISubprogram(name: "z_tmcvt", scope: !10953, file: !10953, line: 102, type: !10961, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10963)
!10961 = !DISubroutineType(types: !10962)
!10962 = !{!2050, !2050, !404, !404, !580, !580, !580, !580}
!10963 = !{!10959, !10964, !10965, !10966, !10967, !10968, !10969, !10970, !10971, !10972, !10973}
!10964 = !DILocalVariable(name: "from_hz", arg: 2, scope: !10960, file: !10953, line: 102, type: !404)
!10965 = !DILocalVariable(name: "to_hz", arg: 3, scope: !10960, file: !10953, line: 103, type: !404)
!10966 = !DILocalVariable(name: "const_hz", arg: 4, scope: !10960, file: !10953, line: 103, type: !580)
!10967 = !DILocalVariable(name: "result32", arg: 5, scope: !10960, file: !10953, line: 104, type: !580)
!10968 = !DILocalVariable(name: "round_up", arg: 6, scope: !10960, file: !10953, line: 104, type: !580)
!10969 = !DILocalVariable(name: "round_off", arg: 7, scope: !10960, file: !10953, line: 105, type: !580)
!10970 = !DILocalVariable(name: "mul_ratio", scope: !10960, file: !10953, line: 107, type: !580)
!10971 = !DILocalVariable(name: "div_ratio", scope: !10960, file: !10953, line: 109, type: !580)
!10972 = !DILocalVariable(name: "off", scope: !10960, file: !10953, line: 116, type: !2050)
!10973 = !DILocalVariable(name: "rdivisor", scope: !10974, file: !10953, line: 119, type: !404)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !10953, line: 118, column: 18)
!10975 = distinct !DILexicalBlock(scope: !10960, file: !10953, line: 118, column: 6)
!10976 = !DILocation(line: 0, scope: !10960, inlinedAt: !10977)
!10977 = distinct !DILocation(line: 406, column: 9, scope: !10952)
!10978 = !DILocation(line: 145, column: 13, scope: !10979, inlinedAt: !10977)
!10979 = distinct !DILexicalBlock(scope: !10980, file: !10953, line: 144, column: 10)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !10953, line: 142, column: 7)
!10981 = distinct !DILexicalBlock(scope: !10982, file: !10953, line: 141, column: 24)
!10982 = distinct !DILexicalBlock(scope: !10983, file: !10953, line: 141, column: 13)
!10983 = distinct !DILexicalBlock(scope: !10960, file: !10953, line: 134, column: 6)
!10984 = !DILocation(line: 406, column: 2, scope: !10952)
!10985 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1948, file: !1948, line: 817, type: !3246, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10986)
!10986 = !{!10987, !10988, !10989, !10990}
!10987 = !DILocalVariable(name: "entry", arg: 1, scope: !10985, file: !1948, line: 817, type: !3248)
!10988 = !DILocalVariable(name: "p1", arg: 2, scope: !10985, file: !1948, line: 818, type: !102)
!10989 = !DILocalVariable(name: "p2", arg: 3, scope: !10985, file: !1948, line: 818, type: !102)
!10990 = !DILocalVariable(name: "p3", arg: 4, scope: !10985, file: !1948, line: 818, type: !102)
!10991 = !DILocation(line: 0, scope: !10985)
!10992 = !DILocation(line: 822, column: 2, scope: !10985)
!10993 = !DILocation(line: 822, column: 17, scope: !10985)
!10994 = !DILocation(line: 822, column: 30, scope: !10985)
!10995 = !DILocation(line: 823, column: 2, scope: !10985)
!10996 = !DILocation(line: 845, column: 2, scope: !10985)
!10997 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1948, file: !1948, line: 888, type: !10998, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11000)
!10998 = !DISubroutineType(types: !10999)
!10999 = !{!103, !1952}
!11000 = !{!11001}
!11001 = !DILocalVariable(name: "thread", arg: 1, scope: !10997, file: !1948, line: 888, type: !1952)
!11002 = !DILocation(line: 0, scope: !10997)
!11003 = !DILocation(line: 893, column: 2, scope: !10997)
!11004 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1948, file: !1948, line: 897, type: !11005, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11007)
!11005 = !DISubroutineType(types: !11006)
!11006 = !{!103, !1952, !32}
!11007 = !{!11008, !11009}
!11008 = !DILocalVariable(name: "thread", arg: 1, scope: !11004, file: !1948, line: 897, type: !1952)
!11009 = !DILocalVariable(name: "options", arg: 2, scope: !11004, file: !1948, line: 897, type: !32)
!11010 = !DILocation(line: 0, scope: !11004)
!11011 = !DILocation(line: 902, column: 2, scope: !11004)
!11012 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1948, file: !1948, line: 1072, type: !11013, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11018)
!11013 = !DISubroutineType(types: !11014)
!11014 = !{!103, !1951, !11015}
!11015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11016, size: 32)
!11016 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !1787, line: 234, baseType: !11017)
!11017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !1787, line: 192, elements: !675)
!11018 = !{!11019, !11020}
!11019 = !DILocalVariable(name: "thread", arg: 1, scope: !11012, file: !1948, line: 1072, type: !1951)
!11020 = !DILocalVariable(name: "stats", arg: 2, scope: !11012, file: !1948, line: 1073, type: !11015)
!11021 = !DILocation(line: 0, scope: !11012)
!11022 = !DILocation(line: 1075, column: 14, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11012, file: !1948, line: 1075, column: 6)
!11024 = !DILocation(line: 1075, column: 23, scope: !11023)
!11025 = !DILocation(line: 1086, column: 1, scope: !11012)
!11026 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1948, file: !1948, line: 1088, type: !11027, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11029)
!11027 = !DISubroutineType(types: !11028)
!11028 = !{!103, !11015}
!11029 = !{!11030}
!11030 = !DILocalVariable(name: "stats", arg: 1, scope: !11026, file: !1948, line: 1088, type: !11015)
!11031 = !DILocation(line: 0, scope: !11026)
!11032 = !DILocation(line: 1094, column: 12, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11026, file: !1948, line: 1094, column: 6)
!11034 = !DILocation(line: 1120, column: 1, scope: !11026)
!11035 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11036, file: !11036, line: 20, type: !2944, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !675)
!11036 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11037 = !DILocation(line: 30, column: 2, scope: !11035)
!11038 = !DILocation(line: 31, column: 1, scope: !11035)
!11039 = distinct !DISubprogram(name: "idle", scope: !11036, file: !11036, line: 33, type: !3251, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !11040)
!11040 = !{!11041, !11042, !11043}
!11041 = !DILocalVariable(name: "unused1", arg: 1, scope: !11039, file: !11036, line: 33, type: !102)
!11042 = !DILocalVariable(name: "unused2", arg: 2, scope: !11039, file: !11036, line: 33, type: !102)
!11043 = !DILocalVariable(name: "unused3", arg: 3, scope: !11039, file: !11036, line: 33, type: !102)
!11044 = !DILocation(line: 0, scope: !11039)
!11045 = !DILocation(line: 41, column: 2, scope: !11039)
!11046 = !DILocation(line: 55, column: 2, scope: !11047, inlinedAt: !11051)
!11047 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5762, file: !5762, line: 42, type: !7761, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !11048)
!11048 = !{!11049, !11050}
!11049 = !DILocalVariable(name: "key", scope: !11047, file: !5762, line: 44, type: !32)
!11050 = !DILocalVariable(name: "tmp", scope: !11047, file: !5762, line: 53, type: !32)
!11051 = distinct !DILocation(line: 62, column: 10, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11039, file: !11036, line: 41, column: 15)
!11053 = !{i64 2841013}
!11054 = !DILocation(line: 0, scope: !11047, inlinedAt: !11051)
!11055 = !DILocation(line: 86, column: 3, scope: !11052)
!11056 = distinct !{!11056, !11045, !11057}
!11057 = !DILocation(line: 105, column: 2, scope: !11039)
!11058 = distinct !DISubprogram(name: "k_cpu_idle", scope: !654, file: !654, line: 5627, type: !2944, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !675)
!11059 = !DILocation(line: 5629, column: 2, scope: !11058)
!11060 = !DILocation(line: 5630, column: 1, scope: !11058)
!11061 = !DISubprogram(name: "arch_cpu_idle", scope: !3249, file: !3249, line: 167, type: !2944, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !675)
!11062 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !2900, file: !2900, line: 30, type: !11063, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11065)
!11063 = !DISubroutineType(types: !11064)
!11064 = !{!102, !2909, !580}
!11065 = !{!11066, !11067, !11068, !11069}
!11066 = !DILocalVariable(name: "node", arg: 1, scope: !11062, file: !2900, line: 30, type: !2909)
!11067 = !DILocalVariable(name: "needs_free", arg: 2, scope: !11062, file: !2900, line: 30, type: !580)
!11068 = !DILocalVariable(name: "ret", scope: !11062, file: !2900, line: 32, type: !102)
!11069 = !DILocalVariable(name: "anode", scope: !11070, file: !2900, line: 40, type: !2898)
!11070 = distinct !DILexicalBlock(scope: !11071, file: !2900, line: 34, column: 68)
!11071 = distinct !DILexicalBlock(scope: !11062, file: !2900, line: 34, column: 6)
!11072 = !DILocation(line: 0, scope: !11062)
!11073 = !DILocation(line: 34, column: 12, scope: !11071)
!11074 = !DILocation(line: 34, column: 21, scope: !11071)
!11075 = !DILocation(line: 34, column: 25, scope: !11071)
!11076 = !DILocation(line: 34, column: 52, scope: !11071)
!11077 = !DILocation(line: 34, column: 6, scope: !11062)
!11078 = !DILocation(line: 0, scope: !11070)
!11079 = !DILocation(line: 43, column: 16, scope: !11070)
!11080 = !DILocation(line: 44, column: 7, scope: !11070)
!11081 = !DILocation(line: 42, column: 11, scope: !11070)
!11082 = !DILocation(line: 45, column: 4, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11084, file: !2900, line: 44, column: 19)
!11084 = distinct !DILexicalBlock(scope: !11070, file: !2900, line: 44, column: 7)
!11085 = !DILocation(line: 46, column: 3, scope: !11083)
!11086 = !DILocation(line: 52, column: 9, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11071, file: !2900, line: 47, column: 9)
!11088 = !DILocation(line: 0, scope: !11071)
!11089 = !DILocation(line: 55, column: 2, scope: !11062)
!11090 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !661, file: !661, line: 270, type: !11091, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11093)
!11091 = !DISubroutineType(types: !11092)
!11092 = !{!410, !2909}
!11093 = !{!11094}
!11094 = !DILocalVariable(name: "node", arg: 1, scope: !11090, file: !661, line: 270, type: !2909)
!11095 = !DILocation(line: 0, scope: !11090)
!11096 = !DILocation(line: 272, column: 15, scope: !11090)
!11097 = !DILocation(line: 272, column: 9, scope: !11090)
!11098 = !DILocation(line: 272, column: 2, scope: !11090)
!11099 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !2900, file: !2900, line: 58, type: !11100, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11119)
!11100 = !DISubroutineType(types: !11101)
!11101 = !{null, !11102}
!11102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11103, size: 32)
!11103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !654, line: 1709, size: 128, elements: !11104)
!11104 = !{!11105, !11111, !11113}
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !11103, file: !654, line: 1710, baseType: !11106, size: 64)
!11106 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !661, line: 46, baseType: !11107)
!11107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !661, line: 41, size: 64, elements: !11108)
!11108 = !{!11109, !11110}
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11107, file: !661, line: 42, baseType: !2909, size: 32)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11107, file: !661, line: 43, baseType: !2909, size: 32, offset: 32)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11103, file: !654, line: 1711, baseType: !11112, offset: 64)
!11112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11103, file: !654, line: 1712, baseType: !11114, size: 64, offset: 64)
!11114 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !11115)
!11115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !11116)
!11116 = !{!11117}
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11115, file: !678, line: 232, baseType: !11118, size: 64)
!11118 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !2912)
!11119 = !{!11120}
!11120 = !DILocalVariable(name: "queue", arg: 1, scope: !11099, file: !2900, line: 58, type: !11102)
!11121 = !DILocation(line: 0, scope: !11099)
!11122 = !DILocation(line: 60, column: 26, scope: !11099)
!11123 = !DILocation(line: 60, column: 2, scope: !11099)
!11124 = !DILocation(line: 62, column: 23, scope: !11099)
!11125 = !DILocation(line: 62, column: 2, scope: !11099)
!11126 = !DILocation(line: 70, column: 1, scope: !11099)
!11127 = distinct !DISubprogram(name: "sys_sflist_init", scope: !661, file: !661, line: 202, type: !11128, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11131)
!11128 = !DISubroutineType(types: !11129)
!11129 = !{null, !11130}
!11130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11106, size: 32)
!11131 = !{!11132}
!11132 = !DILocalVariable(name: "list", arg: 1, scope: !11127, file: !661, line: 202, type: !11130)
!11133 = !DILocation(line: 0, scope: !11127)
!11134 = !DILocation(line: 204, column: 8, scope: !11127)
!11135 = !DILocation(line: 204, column: 13, scope: !11127)
!11136 = !DILocation(line: 205, column: 8, scope: !11127)
!11137 = !DILocation(line: 205, column: 13, scope: !11127)
!11138 = !DILocation(line: 206, column: 1, scope: !11127)
!11139 = distinct !DISubprogram(name: "z_waitq_init", scope: !10734, file: !10734, line: 47, type: !11140, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11143)
!11140 = !DISubroutineType(types: !11141)
!11141 = !{null, !11142}
!11142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11114, size: 32)
!11143 = !{!11144}
!11144 = !DILocalVariable(name: "w", arg: 1, scope: !11139, file: !10734, line: 47, type: !11142)
!11145 = !DILocation(line: 0, scope: !11139)
!11146 = !DILocation(line: 49, column: 21, scope: !11139)
!11147 = !DILocation(line: 49, column: 2, scope: !11139)
!11148 = !DILocation(line: 50, column: 1, scope: !11139)
!11149 = distinct !DISubprogram(name: "sys_dlist_init", scope: !683, file: !683, line: 197, type: !11150, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11153)
!11150 = !DISubroutineType(types: !11151)
!11151 = !{null, !11152}
!11152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11118, size: 32)
!11153 = !{!11154}
!11154 = !DILocalVariable(name: "list", arg: 1, scope: !11149, file: !683, line: 197, type: !11152)
!11155 = !DILocation(line: 0, scope: !11149)
!11156 = !DILocation(line: 199, column: 8, scope: !11149)
!11157 = !DILocation(line: 199, column: 13, scope: !11149)
!11158 = !DILocation(line: 200, column: 8, scope: !11149)
!11159 = !DILocation(line: 200, column: 13, scope: !11149)
!11160 = !DILocation(line: 201, column: 1, scope: !11149)
!11161 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !2900, file: !2900, line: 94, type: !11100, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11162)
!11162 = !{!11163, !11164, !11169}
!11163 = !DILocalVariable(name: "queue", arg: 1, scope: !11161, file: !2900, line: 94, type: !11102)
!11164 = !DILocalVariable(name: "key", scope: !11161, file: !2900, line: 98, type: !11165)
!11165 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !674, line: 106, baseType: !11166)
!11166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !674, line: 32, size: 32, elements: !11167)
!11167 = !{!11168}
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11166, file: !674, line: 33, baseType: !103, size: 32)
!11169 = !DILocalVariable(name: "first_pending_thread", scope: !11161, file: !2900, line: 99, type: !11170)
!11170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11171, size: 32)
!11171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !1787, line: 245, size: 896, elements: !11172)
!11172 = !{!11173, !11211, !11223, !11224, !11225, !11226, !11238}
!11173 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11171, file: !1787, line: 247, baseType: !11174, size: 384)
!11174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !1787, line: 57, size: 384, elements: !11175)
!11175 = !{!11176, !11186, !11187, !11188, !11189, !11198, !11199, !11200}
!11176 = !DIDerivedType(tag: DW_TAG_member, scope: !11174, file: !1787, line: 60, baseType: !11177, size: 64)
!11177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11174, file: !1787, line: 60, size: 64, elements: !11178)
!11178 = !{!11179, !11180}
!11179 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11177, file: !1787, line: 61, baseType: !2911, size: 64)
!11180 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11177, file: !1787, line: 62, baseType: !11181, size: 64)
!11181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !1812, line: 49, size: 64, elements: !11182)
!11182 = !{!11183}
!11183 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11181, file: !1812, line: 50, baseType: !11184, size: 64)
!11184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11185, size: 64, elements: !721)
!11185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11181, size: 32)
!11186 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11174, file: !1787, line: 68, baseType: !11142, size: 32, offset: 64)
!11187 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11174, file: !1787, line: 71, baseType: !410, size: 8, offset: 96)
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11174, file: !1787, line: 74, baseType: !410, size: 8, offset: 104)
!11189 = !DIDerivedType(tag: DW_TAG_member, scope: !11174, file: !1787, line: 90, baseType: !11190, size: 16, offset: 112)
!11190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11174, file: !1787, line: 90, size: 16, elements: !11191)
!11191 = !{!11192, !11197}
!11192 = !DIDerivedType(tag: DW_TAG_member, scope: !11190, file: !1787, line: 91, baseType: !11193, size: 16)
!11193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11190, file: !1787, line: 91, size: 16, elements: !11194)
!11194 = !{!11195, !11196}
!11195 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11193, file: !1787, line: 96, baseType: !1833, size: 8)
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11193, file: !1787, line: 97, baseType: !410, size: 8, offset: 8)
!11197 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11190, file: !1787, line: 100, baseType: !521, size: 16)
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11174, file: !1787, line: 107, baseType: !404, size: 32, offset: 128)
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11174, file: !1787, line: 127, baseType: !102, size: 32, offset: 160)
!11200 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11174, file: !1787, line: 131, baseType: !11201, size: 192, offset: 192)
!11201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !678, line: 244, size: 192, elements: !11202)
!11202 = !{!11203, !11204, !11210}
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11201, file: !678, line: 245, baseType: !2911, size: 64)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11201, file: !678, line: 246, baseType: !11205, size: 32, offset: 64)
!11205 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !678, line: 242, baseType: !11206)
!11206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11207, size: 32)
!11207 = !DISubroutineType(types: !11208)
!11208 = !{null, !11209}
!11209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11201, size: 32)
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11201, file: !678, line: 249, baseType: !550, size: 64, offset: 128)
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11171, file: !1787, line: 250, baseType: !11212, size: 288, offset: 384)
!11212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !1852, line: 25, size: 288, elements: !11213)
!11213 = !{!11214, !11215, !11216, !11217, !11218, !11219, !11220, !11221, !11222}
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11212, file: !1852, line: 26, baseType: !404, size: 32)
!11215 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11212, file: !1852, line: 27, baseType: !404, size: 32, offset: 32)
!11216 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11212, file: !1852, line: 28, baseType: !404, size: 32, offset: 64)
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11212, file: !1852, line: 29, baseType: !404, size: 32, offset: 96)
!11218 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11212, file: !1852, line: 30, baseType: !404, size: 32, offset: 128)
!11219 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11212, file: !1852, line: 31, baseType: !404, size: 32, offset: 160)
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11212, file: !1852, line: 32, baseType: !404, size: 32, offset: 192)
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11212, file: !1852, line: 33, baseType: !404, size: 32, offset: 224)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11212, file: !1852, line: 34, baseType: !404, size: 32, offset: 256)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11171, file: !1787, line: 253, baseType: !102, size: 32, offset: 672)
!11224 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11171, file: !1787, line: 256, baseType: !11114, size: 64, offset: 704)
!11225 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11171, file: !1787, line: 294, baseType: !103, size: 32, offset: 768)
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11171, file: !1787, line: 325, baseType: !11227, size: 32, offset: 800)
!11227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11228, size: 32)
!11228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !654, line: 5073, size: 160, elements: !11229)
!11229 = !{!11230, !11236, !11237}
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11228, file: !654, line: 5074, baseType: !11231, size: 96)
!11231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !11232)
!11232 = !{!11233, !11234, !11235}
!11233 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11231, file: !1872, line: 57, baseType: !1875, size: 32)
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11231, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!11235 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11231, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!11236 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11228, file: !654, line: 5075, baseType: !11114, size: 64, offset: 96)
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11228, file: !654, line: 5076, baseType: !11112, offset: 160)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11171, file: !1787, line: 343, baseType: !11239, size: 64, offset: 832)
!11239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !1852, line: 60, size: 64, elements: !11240)
!11240 = !{!11241, !11242}
!11241 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11239, file: !1852, line: 63, baseType: !404, size: 32)
!11242 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11239, file: !1852, line: 66, baseType: !404, size: 32, offset: 32)
!11243 = !DILocation(line: 0, scope: !11161)
!11244 = !DILocalVariable(name: "l", arg: 1, scope: !11245, file: !674, line: 136, type: !11248)
!11245 = distinct !DISubprogram(name: "k_spin_lock", scope: !674, file: !674, line: 136, type: !11246, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11249)
!11246 = !DISubroutineType(types: !11247)
!11247 = !{!11165, !11248}
!11248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11112, size: 32)
!11249 = !{!11244, !11250}
!11250 = !DILocalVariable(name: "k", scope: !11245, file: !674, line: 139, type: !11165)
!11251 = !DILocation(line: 0, scope: !11245, inlinedAt: !11252)
!11252 = distinct !DILocation(line: 98, column: 25, scope: !11161)
!11253 = !DILocation(line: 55, column: 2, scope: !11254, inlinedAt: !11258)
!11254 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5762, file: !5762, line: 42, type: !7761, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11255)
!11255 = !{!11256, !11257}
!11256 = !DILocalVariable(name: "key", scope: !11254, file: !5762, line: 44, type: !32)
!11257 = !DILocalVariable(name: "tmp", scope: !11254, file: !5762, line: 53, type: !32)
!11258 = distinct !DILocation(line: 145, column: 10, scope: !11245, inlinedAt: !11252)
!11259 = !{i64 2848754}
!11260 = !DILocation(line: 0, scope: !11254, inlinedAt: !11258)
!11261 = !DILocation(line: 101, column: 55, scope: !11161)
!11262 = !DILocation(line: 101, column: 25, scope: !11161)
!11263 = !DILocation(line: 103, column: 27, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11161, file: !2900, line: 103, column: 6)
!11265 = !DILocation(line: 103, column: 6, scope: !11161)
!11266 = !DILocation(line: 104, column: 3, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11264, file: !2900, line: 103, column: 36)
!11268 = !DILocation(line: 105, column: 2, scope: !11267)
!11269 = !DILocation(line: 98, column: 45, scope: !11161)
!11270 = !DILocation(line: 108, column: 2, scope: !11161)
!11271 = !DILocation(line: 109, column: 1, scope: !11161)
!11272 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !2900, file: !2900, line: 81, type: !11273, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11275)
!11273 = !DISubroutineType(types: !11274)
!11274 = !{null, !11170, !102}
!11275 = !{!11276, !11277}
!11276 = !DILocalVariable(name: "thread", arg: 1, scope: !11272, file: !2900, line: 81, type: !11170)
!11277 = !DILocalVariable(name: "data", arg: 2, scope: !11272, file: !2900, line: 81, type: !102)
!11278 = !DILocation(line: 0, scope: !11272)
!11279 = !DILocalVariable(name: "thread", arg: 1, scope: !11280, file: !11281, line: 134, type: !11170)
!11280 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !11281, file: !11281, line: 134, type: !11282, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11284)
!11281 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11282 = !DISubroutineType(types: !11283)
!11283 = !{null, !11170, !32, !102}
!11284 = !{!11279, !11285, !11286}
!11285 = !DILocalVariable(name: "value", arg: 2, scope: !11280, file: !11281, line: 135, type: !32)
!11286 = !DILocalVariable(name: "data", arg: 3, scope: !11280, file: !11281, line: 136, type: !102)
!11287 = !DILocation(line: 0, scope: !11280, inlinedAt: !11288)
!11288 = distinct !DILocation(line: 83, column: 2, scope: !11272)
!11289 = !DILocalVariable(name: "thread", arg: 1, scope: !11290, file: !10436, line: 65, type: !11170)
!11290 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10436, file: !10436, line: 65, type: !11291, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11293)
!11291 = !DISubroutineType(types: !11292)
!11292 = !{null, !11170, !32}
!11293 = !{!11289, !11294}
!11294 = !DILocalVariable(name: "value", arg: 2, scope: !11290, file: !10436, line: 65, type: !32)
!11295 = !DILocation(line: 0, scope: !11290, inlinedAt: !11296)
!11296 = distinct !DILocation(line: 138, column: 2, scope: !11280, inlinedAt: !11288)
!11297 = !DILocation(line: 67, column: 15, scope: !11290, inlinedAt: !11296)
!11298 = !DILocation(line: 67, column: 33, scope: !11290, inlinedAt: !11296)
!11299 = !DILocation(line: 139, column: 15, scope: !11280, inlinedAt: !11288)
!11300 = !DILocation(line: 139, column: 25, scope: !11280, inlinedAt: !11288)
!11301 = !DILocation(line: 84, column: 2, scope: !11272)
!11302 = !DILocation(line: 85, column: 1, scope: !11272)
!11303 = distinct !DISubprogram(name: "k_queue_insert", scope: !2900, file: !2900, line: 175, type: !11304, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11306)
!11304 = !DISubroutineType(types: !11305)
!11305 = !{null, !11102, !102, !102}
!11306 = !{!11307, !11308, !11309}
!11307 = !DILocalVariable(name: "queue", arg: 1, scope: !11303, file: !2900, line: 175, type: !11102)
!11308 = !DILocalVariable(name: "prev", arg: 2, scope: !11303, file: !2900, line: 175, type: !102)
!11309 = !DILocalVariable(name: "data", arg: 3, scope: !11303, file: !2900, line: 175, type: !102)
!11310 = !DILocation(line: 0, scope: !11303)
!11311 = !DILocation(line: 179, column: 8, scope: !11303)
!11312 = !DILocation(line: 182, column: 1, scope: !11303)
!11313 = distinct !DISubprogram(name: "queue_insert", scope: !2900, file: !2900, line: 120, type: !11314, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11316)
!11314 = !DISubroutineType(types: !11315)
!11315 = !{!1090, !11102, !102, !102, !580, !580}
!11316 = !{!11317, !11318, !11319, !11320, !11321, !11322, !11323, !11324}
!11317 = !DILocalVariable(name: "queue", arg: 1, scope: !11313, file: !2900, line: 120, type: !11102)
!11318 = !DILocalVariable(name: "prev", arg: 2, scope: !11313, file: !2900, line: 120, type: !102)
!11319 = !DILocalVariable(name: "data", arg: 3, scope: !11313, file: !2900, line: 120, type: !102)
!11320 = !DILocalVariable(name: "alloc", arg: 4, scope: !11313, file: !2900, line: 121, type: !580)
!11321 = !DILocalVariable(name: "is_append", arg: 5, scope: !11313, file: !2900, line: 121, type: !580)
!11322 = !DILocalVariable(name: "first_pending_thread", scope: !11313, file: !2900, line: 123, type: !11170)
!11323 = !DILocalVariable(name: "key", scope: !11313, file: !2900, line: 124, type: !11165)
!11324 = !DILocalVariable(name: "anode", scope: !11325, file: !2900, line: 146, type: !2898)
!11325 = distinct !DILexicalBlock(scope: !11326, file: !2900, line: 145, column: 13)
!11326 = distinct !DILexicalBlock(scope: !11313, file: !2900, line: 145, column: 6)
!11327 = !DILocation(line: 0, scope: !11313)
!11328 = !DILocation(line: 124, column: 45, scope: !11313)
!11329 = !DILocation(line: 0, scope: !11245, inlinedAt: !11330)
!11330 = distinct !DILocation(line: 124, column: 25, scope: !11313)
!11331 = !DILocation(line: 55, column: 2, scope: !11254, inlinedAt: !11332)
!11332 = distinct !DILocation(line: 145, column: 10, scope: !11245, inlinedAt: !11330)
!11333 = !DILocation(line: 0, scope: !11254, inlinedAt: !11332)
!11334 = !DILocation(line: 128, column: 6, scope: !11313)
!11335 = !DILocation(line: 129, column: 39, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !2900, line: 128, column: 17)
!11337 = distinct !DILexicalBlock(scope: !11313, file: !2900, line: 128, column: 6)
!11338 = !DILocation(line: 129, column: 10, scope: !11336)
!11339 = !DILocation(line: 130, column: 2, scope: !11336)
!11340 = !DILocation(line: 131, column: 55, scope: !11313)
!11341 = !DILocation(line: 131, column: 25, scope: !11313)
!11342 = !DILocation(line: 133, column: 27, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11313, file: !2900, line: 133, column: 6)
!11344 = !DILocation(line: 133, column: 6, scope: !11313)
!11345 = !DILocation(line: 136, column: 3, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11343, file: !2900, line: 133, column: 36)
!11347 = !DILocation(line: 137, column: 3, scope: !11346)
!11348 = !DILocation(line: 141, column: 3, scope: !11346)
!11349 = !DILocation(line: 145, column: 6, scope: !11313)
!11350 = !DILocation(line: 148, column: 11, scope: !11325)
!11351 = !DILocation(line: 0, scope: !11325)
!11352 = !DILocation(line: 149, column: 13, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11325, file: !2900, line: 149, column: 7)
!11354 = !DILocation(line: 149, column: 7, scope: !11325)
!11355 = !DILocalVariable(name: "key", arg: 2, scope: !11356, file: !674, line: 190, type: !11165)
!11356 = distinct !DISubprogram(name: "k_spin_unlock", scope: !674, file: !674, line: 189, type: !11357, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11359)
!11357 = !DISubroutineType(types: !11358)
!11358 = !{null, !11248, !11165}
!11359 = !{!11360, !11355}
!11360 = !DILocalVariable(name: "l", arg: 1, scope: !11356, file: !674, line: 189, type: !11248)
!11361 = !DILocation(line: 0, scope: !11356, inlinedAt: !11362)
!11362 = distinct !DILocation(line: 150, column: 4, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11353, file: !2900, line: 149, column: 22)
!11364 = !DILocalVariable(name: "key", arg: 1, scope: !11365, file: !5762, line: 84, type: !32)
!11365 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5762, file: !5762, line: 84, type: !5598, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11366)
!11366 = !{!11364}
!11367 = !DILocation(line: 0, scope: !11365, inlinedAt: !11368)
!11368 = distinct !DILocation(line: 215, column: 2, scope: !11356, inlinedAt: !11362)
!11369 = !DILocation(line: 95, column: 2, scope: !11365, inlinedAt: !11368)
!11370 = !{i64 2849571}
!11371 = !DILocation(line: 157, column: 10, scope: !11325)
!11372 = !DILocation(line: 157, column: 15, scope: !11325)
!11373 = !DILocation(line: 158, column: 27, scope: !11325)
!11374 = !DILocation(line: 158, column: 3, scope: !11325)
!11375 = !DILocation(line: 161, column: 19, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11326, file: !2900, line: 160, column: 9)
!11377 = !DILocation(line: 161, column: 3, scope: !11376)
!11378 = !DILocation(line: 166, column: 42, scope: !11313)
!11379 = !DILocation(line: 166, column: 28, scope: !11313)
!11380 = !DILocation(line: 166, column: 36, scope: !11313)
!11381 = !DILocation(line: 166, column: 2, scope: !11313)
!11382 = !DILocation(line: 168, column: 2, scope: !11313)
!11383 = !DILocation(line: 172, column: 2, scope: !11313)
!11384 = !DILocation(line: 173, column: 1, scope: !11313)
!11385 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !661, file: !661, line: 255, type: !11386, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11388)
!11386 = !DISubroutineType(types: !11387)
!11387 = !{!2909, !11130}
!11388 = !{!11389}
!11389 = !DILocalVariable(name: "list", arg: 1, scope: !11385, file: !661, line: 255, type: !11130)
!11390 = !DILocation(line: 0, scope: !11385)
!11391 = !DILocation(line: 257, column: 15, scope: !11385)
!11392 = !DILocation(line: 257, column: 2, scope: !11385)
!11393 = distinct !DISubprogram(name: "z_thread_malloc", scope: !11281, file: !11281, line: 102, type: !11394, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11395)
!11394 = !DISubroutineType(types: !2863)
!11395 = !{!11396}
!11396 = !DILocalVariable(name: "size", arg: 1, scope: !11393, file: !11281, line: 102, type: !552)
!11397 = !DILocation(line: 0, scope: !11393)
!11398 = !DILocation(line: 104, column: 9, scope: !11393)
!11399 = !DILocation(line: 104, column: 2, scope: !11393)
!11400 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !661, file: !661, line: 288, type: !11401, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11403)
!11401 = !DISubroutineType(types: !11402)
!11402 = !{null, !2909, !410}
!11403 = !{!11404, !11405}
!11404 = !DILocalVariable(name: "node", arg: 1, scope: !11400, file: !661, line: 288, type: !2909)
!11405 = !DILocalVariable(name: "flags", arg: 2, scope: !11400, file: !661, line: 288, type: !410)
!11406 = !DILocation(line: 0, scope: !11400)
!11407 = !DILocation(line: 291, column: 25, scope: !11400)
!11408 = !DILocation(line: 291, column: 8, scope: !11400)
!11409 = !DILocation(line: 291, column: 23, scope: !11400)
!11410 = !DILocation(line: 292, column: 1, scope: !11400)
!11411 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !661, file: !661, line: 420, type: !11412, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11414)
!11412 = !DISubroutineType(types: !11413)
!11413 = !{null, !11130, !2909, !2909}
!11414 = !{!11415, !11416, !11417}
!11415 = !DILocalVariable(name: "list", arg: 1, scope: !11411, file: !661, line: 420, type: !11130)
!11416 = !DILocalVariable(name: "prev", arg: 2, scope: !11411, file: !661, line: 420, type: !2909)
!11417 = !DILocalVariable(name: "node", arg: 3, scope: !11411, file: !661, line: 420, type: !2909)
!11418 = !DILocation(line: 0, scope: !11411)
!11419 = !DILocation(line: 420, column: 1, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11411, file: !661, line: 420, column: 1)
!11421 = !DILocation(line: 420, column: 1, scope: !11411)
!11422 = !DILocation(line: 420, column: 1, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11420, file: !661, line: 420, column: 1)
!11424 = !DILocation(line: 420, column: 1, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11420, file: !661, line: 420, column: 1)
!11426 = !DILocation(line: 420, column: 1, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11425, file: !661, line: 420, column: 1)
!11428 = !DILocation(line: 420, column: 1, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11425, file: !661, line: 420, column: 1)
!11430 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !661, file: !661, line: 360, type: !11431, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11433)
!11431 = !DISubroutineType(types: !11432)
!11432 = !{null, !11130, !2909}
!11433 = !{!11434, !11435}
!11434 = !DILocalVariable(name: "list", arg: 1, scope: !11430, file: !661, line: 360, type: !11130)
!11435 = !DILocalVariable(name: "node", arg: 2, scope: !11430, file: !661, line: 360, type: !2909)
!11436 = !DILocation(line: 0, scope: !11430)
!11437 = !DILocation(line: 360, column: 1, scope: !11430)
!11438 = !DILocation(line: 360, column: 1, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11430, file: !661, line: 360, column: 1)
!11440 = !DILocation(line: 360, column: 1, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11439, file: !661, line: 360, column: 1)
!11442 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !661, file: !661, line: 211, type: !11443, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11445)
!11443 = !DISubroutineType(types: !11444)
!11444 = !{!2909, !2909}
!11445 = !{!11446}
!11446 = !DILocalVariable(name: "node", arg: 1, scope: !11442, file: !661, line: 211, type: !2909)
!11447 = !DILocation(line: 0, scope: !11442)
!11448 = !DILocation(line: 213, column: 32, scope: !11442)
!11449 = !DILocation(line: 213, column: 47, scope: !11442)
!11450 = !DILocation(line: 213, column: 9, scope: !11442)
!11451 = !DILocation(line: 213, column: 2, scope: !11442)
!11452 = distinct !DISubprogram(name: "sys_sflist_append", scope: !661, file: !661, line: 373, type: !11431, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11453)
!11453 = !{!11454, !11455}
!11454 = !DILocalVariable(name: "list", arg: 1, scope: !11452, file: !661, line: 373, type: !11130)
!11455 = !DILocalVariable(name: "node", arg: 2, scope: !11452, file: !661, line: 373, type: !2909)
!11456 = !DILocation(line: 0, scope: !11452)
!11457 = !DILocation(line: 373, column: 1, scope: !11452)
!11458 = !DILocation(line: 373, column: 1, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11452, file: !661, line: 373, column: 1)
!11460 = !DILocation(line: 373, column: 1, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11459, file: !661, line: 373, column: 1)
!11462 = !DILocation(line: 373, column: 1, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11459, file: !661, line: 373, column: 1)
!11464 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !661, file: !661, line: 218, type: !11465, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11467)
!11465 = !DISubroutineType(types: !11466)
!11466 = !{null, !2909, !2909}
!11467 = !{!11468, !11469, !11470}
!11468 = !DILocalVariable(name: "parent", arg: 1, scope: !11464, file: !661, line: 218, type: !2909)
!11469 = !DILocalVariable(name: "child", arg: 2, scope: !11464, file: !661, line: 219, type: !2909)
!11470 = !DILocalVariable(name: "cur_flags", scope: !11464, file: !661, line: 221, type: !410)
!11471 = !DILocation(line: 0, scope: !11464)
!11472 = !DILocation(line: 221, column: 22, scope: !11464)
!11473 = !DILocation(line: 223, column: 27, scope: !11464)
!11474 = !DILocation(line: 223, column: 39, scope: !11464)
!11475 = !DILocation(line: 223, column: 37, scope: !11464)
!11476 = !DILocation(line: 223, column: 10, scope: !11464)
!11477 = !DILocation(line: 223, column: 25, scope: !11464)
!11478 = !DILocation(line: 224, column: 1, scope: !11464)
!11479 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !661, file: !661, line: 231, type: !11431, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11480)
!11480 = !{!11481, !11482}
!11481 = !DILocalVariable(name: "list", arg: 1, scope: !11479, file: !661, line: 231, type: !11130)
!11482 = !DILocalVariable(name: "node", arg: 2, scope: !11479, file: !661, line: 231, type: !2909)
!11483 = !DILocation(line: 0, scope: !11479)
!11484 = !DILocation(line: 233, column: 8, scope: !11479)
!11485 = !DILocation(line: 233, column: 13, scope: !11479)
!11486 = !DILocation(line: 234, column: 1, scope: !11479)
!11487 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !661, file: !661, line: 226, type: !11431, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11488)
!11488 = !{!11489, !11490}
!11489 = !DILocalVariable(name: "list", arg: 1, scope: !11487, file: !661, line: 226, type: !11130)
!11490 = !DILocalVariable(name: "node", arg: 2, scope: !11487, file: !661, line: 226, type: !2909)
!11491 = !DILocation(line: 0, scope: !11487)
!11492 = !DILocation(line: 228, column: 8, scope: !11487)
!11493 = !DILocation(line: 228, column: 13, scope: !11487)
!11494 = !DILocation(line: 229, column: 1, scope: !11487)
!11495 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !661, file: !661, line: 243, type: !11386, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11496)
!11496 = !{!11497}
!11497 = !DILocalVariable(name: "list", arg: 1, scope: !11495, file: !661, line: 243, type: !11130)
!11498 = !DILocation(line: 0, scope: !11495)
!11499 = !DILocation(line: 245, column: 15, scope: !11495)
!11500 = !DILocation(line: 245, column: 2, scope: !11495)
!11501 = distinct !DISubprogram(name: "k_queue_append", scope: !2900, file: !2900, line: 184, type: !11502, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11504)
!11502 = !DISubroutineType(types: !11503)
!11503 = !{null, !11102, !102}
!11504 = !{!11505, !11506}
!11505 = !DILocalVariable(name: "queue", arg: 1, scope: !11501, file: !2900, line: 184, type: !11102)
!11506 = !DILocalVariable(name: "data", arg: 2, scope: !11501, file: !2900, line: 184, type: !102)
!11507 = !DILocation(line: 0, scope: !11501)
!11508 = !DILocation(line: 188, column: 8, scope: !11501)
!11509 = !DILocation(line: 191, column: 1, scope: !11501)
!11510 = distinct !DISubprogram(name: "k_queue_prepend", scope: !2900, file: !2900, line: 193, type: !11502, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11511)
!11511 = !{!11512, !11513}
!11512 = !DILocalVariable(name: "queue", arg: 1, scope: !11510, file: !2900, line: 193, type: !11102)
!11513 = !DILocalVariable(name: "data", arg: 2, scope: !11510, file: !2900, line: 193, type: !102)
!11514 = !DILocation(line: 0, scope: !11510)
!11515 = !DILocation(line: 197, column: 8, scope: !11510)
!11516 = !DILocation(line: 200, column: 1, scope: !11510)
!11517 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !2900, file: !2900, line: 202, type: !11518, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11520)
!11518 = !DISubroutineType(types: !11519)
!11519 = !{!1090, !11102, !102}
!11520 = !{!11521, !11522, !11523}
!11521 = !DILocalVariable(name: "queue", arg: 1, scope: !11517, file: !2900, line: 202, type: !11102)
!11522 = !DILocalVariable(name: "data", arg: 2, scope: !11517, file: !2900, line: 202, type: !102)
!11523 = !DILocalVariable(name: "ret", scope: !11517, file: !2900, line: 206, type: !1090)
!11524 = !DILocation(line: 0, scope: !11517)
!11525 = !DILocation(line: 206, column: 16, scope: !11517)
!11526 = !DILocation(line: 210, column: 2, scope: !11517)
!11527 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !2900, file: !2900, line: 223, type: !11518, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11528)
!11528 = !{!11529, !11530, !11531}
!11529 = !DILocalVariable(name: "queue", arg: 1, scope: !11527, file: !2900, line: 223, type: !11102)
!11530 = !DILocalVariable(name: "data", arg: 2, scope: !11527, file: !2900, line: 223, type: !102)
!11531 = !DILocalVariable(name: "ret", scope: !11527, file: !2900, line: 227, type: !1090)
!11532 = !DILocation(line: 0, scope: !11527)
!11533 = !DILocation(line: 227, column: 16, scope: !11527)
!11534 = !DILocation(line: 231, column: 2, scope: !11527)
!11535 = distinct !DISubprogram(name: "k_queue_append_list", scope: !2900, file: !2900, line: 244, type: !11536, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11538)
!11536 = !DISubroutineType(types: !11537)
!11537 = !{!103, !11102, !102, !102}
!11538 = !{!11539, !11540, !11541, !11542, !11543}
!11539 = !DILocalVariable(name: "queue", arg: 1, scope: !11535, file: !2900, line: 244, type: !11102)
!11540 = !DILocalVariable(name: "head", arg: 2, scope: !11535, file: !2900, line: 244, type: !102)
!11541 = !DILocalVariable(name: "tail", arg: 3, scope: !11535, file: !2900, line: 244, type: !102)
!11542 = !DILocalVariable(name: "key", scope: !11535, file: !2900, line: 255, type: !11165)
!11543 = !DILocalVariable(name: "thread", scope: !11535, file: !2900, line: 256, type: !11170)
!11544 = !DILocation(line: 0, scope: !11535)
!11545 = !DILocation(line: 249, column: 2, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11535, file: !2900, line: 249, column: 2)
!11547 = !DILocation(line: 255, column: 45, scope: !11535)
!11548 = !DILocation(line: 0, scope: !11245, inlinedAt: !11549)
!11549 = distinct !DILocation(line: 255, column: 25, scope: !11535)
!11550 = !DILocation(line: 55, column: 2, scope: !11254, inlinedAt: !11551)
!11551 = distinct !DILocation(line: 145, column: 10, scope: !11245, inlinedAt: !11549)
!11552 = !DILocation(line: 0, scope: !11254, inlinedAt: !11551)
!11553 = !DILocation(line: 259, column: 42, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11555, file: !2900, line: 258, column: 20)
!11555 = distinct !DILexicalBlock(scope: !11535, file: !2900, line: 258, column: 6)
!11556 = !DILocation(line: 259, column: 12, scope: !11554)
!11557 = !DILocation(line: 262, column: 24, scope: !11535)
!11558 = !DILocation(line: 262, column: 2, scope: !11535)
!11559 = !DILocation(line: 263, column: 3, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11535, file: !2900, line: 262, column: 45)
!11561 = !DILocation(line: 264, column: 11, scope: !11560)
!11562 = !DILocation(line: 264, column: 10, scope: !11560)
!11563 = !DILocation(line: 265, column: 12, scope: !11560)
!11564 = !DILocation(line: 262, column: 15, scope: !11535)
!11565 = distinct !{!11565, !11558, !11566}
!11566 = !DILocation(line: 266, column: 2, scope: !11535)
!11567 = !DILocation(line: 268, column: 6, scope: !11535)
!11568 = !DILocation(line: 269, column: 34, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !2900, line: 268, column: 20)
!11570 = distinct !DILexicalBlock(scope: !11535, file: !2900, line: 268, column: 6)
!11571 = !DILocation(line: 269, column: 3, scope: !11569)
!11572 = !DILocation(line: 270, column: 2, scope: !11569)
!11573 = !DILocation(line: 275, column: 2, scope: !11535)
!11574 = !DILocation(line: 277, column: 1, scope: !11535)
!11575 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !661, file: !661, line: 391, type: !11576, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11578)
!11576 = !DISubroutineType(types: !11577)
!11577 = !{null, !11130, !102, !102}
!11578 = !{!11579, !11580, !11581}
!11579 = !DILocalVariable(name: "list", arg: 1, scope: !11575, file: !661, line: 391, type: !11130)
!11580 = !DILocalVariable(name: "head", arg: 2, scope: !11575, file: !661, line: 391, type: !102)
!11581 = !DILocalVariable(name: "tail", arg: 3, scope: !11575, file: !661, line: 391, type: !102)
!11582 = !DILocation(line: 0, scope: !11575)
!11583 = !DILocation(line: 391, column: 1, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11575, file: !661, line: 391, column: 1)
!11585 = !DILocation(line: 391, column: 1, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11587, file: !661, line: 391, column: 1)
!11587 = distinct !DILexicalBlock(scope: !11584, file: !661, line: 391, column: 1)
!11588 = !DILocation(line: 0, scope: !11586)
!11589 = !DILocation(line: 391, column: 1, scope: !11587)
!11590 = !DILocation(line: 391, column: 1, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11586, file: !661, line: 391, column: 1)
!11592 = !DILocation(line: 391, column: 1, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11586, file: !661, line: 391, column: 1)
!11594 = !DILocation(line: 391, column: 1, scope: !11575)
!11595 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !2900, file: !2900, line: 279, type: !11596, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11610)
!11596 = !DISubroutineType(types: !11597)
!11597 = !{!103, !11102, !11598}
!11598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11599, size: 32)
!11599 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !990, line: 40, baseType: !11600)
!11600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !990, line: 35, size: 64, elements: !11601)
!11601 = !{!11602, !11609}
!11602 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11600, file: !990, line: 36, baseType: !11603, size: 32)
!11603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11604, size: 32)
!11604 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !990, line: 33, baseType: !11605)
!11605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !990, line: 29, size: 32, elements: !11606)
!11606 = !{!11607}
!11607 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11605, file: !990, line: 30, baseType: !11608, size: 32)
!11608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11605, size: 32)
!11609 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11600, file: !990, line: 37, baseType: !11603, size: 32, offset: 32)
!11610 = !{!11611, !11612, !11613}
!11611 = !DILocalVariable(name: "queue", arg: 1, scope: !11595, file: !2900, line: 279, type: !11102)
!11612 = !DILocalVariable(name: "list", arg: 2, scope: !11595, file: !2900, line: 279, type: !11598)
!11613 = !DILocalVariable(name: "ret", scope: !11595, file: !2900, line: 281, type: !103)
!11614 = !DILocation(line: 0, scope: !11595)
!11615 = !DILocation(line: 286, column: 2, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11595, file: !2900, line: 286, column: 2)
!11617 = !DILocation(line: 286, column: 2, scope: !11595)
!11618 = !DILocation(line: 301, column: 41, scope: !11595)
!11619 = !DILocation(line: 301, column: 53, scope: !11595)
!11620 = !DILocation(line: 301, column: 8, scope: !11595)
!11621 = !DILocation(line: 302, column: 2, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11595, file: !2900, line: 302, column: 2)
!11623 = !DILocation(line: 302, column: 2, scope: !11595)
!11624 = !DILocation(line: 307, column: 2, scope: !11595)
!11625 = !DILocation(line: 311, column: 2, scope: !11595)
!11626 = !DILocation(line: 312, column: 1, scope: !11595)
!11627 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !990, file: !990, line: 261, type: !11628, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11630)
!11628 = !DISubroutineType(types: !11629)
!11629 = !{!580, !11598}
!11630 = !{!11631}
!11631 = !DILocalVariable(name: "list", arg: 1, scope: !11627, file: !990, line: 261, type: !11598)
!11632 = !DILocation(line: 0, scope: !11627)
!11633 = !DILocation(line: 261, column: 1, scope: !11627)
!11634 = distinct !DISubprogram(name: "sys_slist_init", scope: !990, file: !990, line: 196, type: !11635, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11637)
!11635 = !DISubroutineType(types: !11636)
!11636 = !{null, !11598}
!11637 = !{!11638}
!11638 = !DILocalVariable(name: "list", arg: 1, scope: !11634, file: !990, line: 196, type: !11598)
!11639 = !DILocation(line: 0, scope: !11634)
!11640 = !DILocation(line: 198, column: 8, scope: !11634)
!11641 = !DILocation(line: 198, column: 13, scope: !11634)
!11642 = !DILocation(line: 199, column: 8, scope: !11634)
!11643 = !DILocation(line: 199, column: 13, scope: !11634)
!11644 = !DILocation(line: 200, column: 1, scope: !11634)
!11645 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !990, file: !990, line: 231, type: !11646, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11648)
!11646 = !DISubroutineType(types: !11647)
!11647 = !{!11603, !11598}
!11648 = !{!11649}
!11649 = !DILocalVariable(name: "list", arg: 1, scope: !11645, file: !990, line: 231, type: !11598)
!11650 = !DILocation(line: 0, scope: !11645)
!11651 = !DILocation(line: 233, column: 15, scope: !11645)
!11652 = !DILocation(line: 233, column: 2, scope: !11645)
!11653 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !2900, file: !2900, line: 314, type: !11654, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11660)
!11654 = !DISubroutineType(types: !11655)
!11655 = !{!102, !11102, !11656}
!11656 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !549, line: 67, baseType: !11657)
!11657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 65, size: 64, elements: !11658)
!11658 = !{!11659}
!11659 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11657, file: !549, line: 66, baseType: !548, size: 64)
!11660 = !{!11661, !11662, !11663, !11664, !11665, !11668}
!11661 = !DILocalVariable(name: "queue", arg: 1, scope: !11653, file: !2900, line: 314, type: !11102)
!11662 = !DILocalVariable(name: "timeout", arg: 2, scope: !11653, file: !2900, line: 314, type: !11656)
!11663 = !DILocalVariable(name: "key", scope: !11653, file: !2900, line: 316, type: !11165)
!11664 = !DILocalVariable(name: "data", scope: !11653, file: !2900, line: 317, type: !102)
!11665 = !DILocalVariable(name: "node", scope: !11666, file: !2900, line: 322, type: !2909)
!11666 = distinct !DILexicalBlock(scope: !11667, file: !2900, line: 321, column: 52)
!11667 = distinct !DILexicalBlock(scope: !11653, file: !2900, line: 321, column: 6)
!11668 = !DILocalVariable(name: "ret", scope: !11653, file: !2900, line: 343, type: !103)
!11669 = !DILocation(line: 0, scope: !11653)
!11670 = !DILocation(line: 316, column: 45, scope: !11653)
!11671 = !DILocation(line: 0, scope: !11245, inlinedAt: !11672)
!11672 = distinct !DILocation(line: 316, column: 25, scope: !11653)
!11673 = !DILocation(line: 55, column: 2, scope: !11254, inlinedAt: !11674)
!11674 = distinct !DILocation(line: 145, column: 10, scope: !11245, inlinedAt: !11672)
!11675 = !DILocation(line: 0, scope: !11254, inlinedAt: !11674)
!11676 = !DILocation(line: 321, column: 6, scope: !11667)
!11677 = !DILocation(line: 321, column: 6, scope: !11653)
!11678 = !{!"branch_weights", i32 1, i32 2000}
!11679 = !DILocation(line: 324, column: 10, scope: !11666)
!11680 = !DILocation(line: 0, scope: !11666)
!11681 = !DILocation(line: 325, column: 10, scope: !11666)
!11682 = !DILocation(line: 0, scope: !11356, inlinedAt: !11683)
!11683 = distinct !DILocation(line: 326, column: 3, scope: !11666)
!11684 = !DILocation(line: 0, scope: !11365, inlinedAt: !11685)
!11685 = distinct !DILocation(line: 215, column: 2, scope: !11356, inlinedAt: !11683)
!11686 = !DILocation(line: 95, column: 2, scope: !11365, inlinedAt: !11685)
!11687 = !DILocation(line: 335, column: 6, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11653, file: !2900, line: 335, column: 6)
!11689 = !DILocation(line: 335, column: 6, scope: !11653)
!11690 = !DILocation(line: 0, scope: !11356, inlinedAt: !11691)
!11691 = distinct !DILocation(line: 336, column: 3, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11688, file: !2900, line: 335, column: 40)
!11693 = !DILocation(line: 0, scope: !11365, inlinedAt: !11694)
!11694 = distinct !DILocation(line: 215, column: 2, scope: !11356, inlinedAt: !11691)
!11695 = !DILocation(line: 95, column: 2, scope: !11365, inlinedAt: !11694)
!11696 = !DILocation(line: 340, column: 3, scope: !11692)
!11697 = !DILocation(line: 343, column: 51, scope: !11653)
!11698 = !DILocation(line: 343, column: 12, scope: !11653)
!11699 = !DILocation(line: 348, column: 14, scope: !11653)
!11700 = !DILocation(line: 348, column: 9, scope: !11653)
!11701 = !DILocation(line: 348, column: 29, scope: !11653)
!11702 = !DILocation(line: 348, column: 44, scope: !11653)
!11703 = !DILocation(line: 349, column: 1, scope: !11653)
!11704 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !661, file: !661, line: 323, type: !11705, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11707)
!11705 = !DISubroutineType(types: !11706)
!11706 = !{!580, !11130}
!11707 = !{!11708}
!11708 = !DILocalVariable(name: "list", arg: 1, scope: !11704, file: !661, line: 323, type: !11130)
!11709 = !DILocation(line: 0, scope: !11704)
!11710 = !DILocation(line: 323, column: 1, scope: !11704)
!11711 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !661, file: !661, line: 434, type: !11386, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11712)
!11712 = !{!11713, !11714}
!11713 = !DILocalVariable(name: "list", arg: 1, scope: !11711, file: !661, line: 434, type: !11130)
!11714 = !DILocalVariable(name: "node", scope: !11711, file: !661, line: 434, type: !2909)
!11715 = !DILocation(line: 0, scope: !11711)
!11716 = !DILocation(line: 434, column: 1, scope: !11711)
!11717 = !DILocation(line: 434, column: 1, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11711, file: !661, line: 434, column: 1)
!11719 = !DILocation(line: 434, column: 1, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11718, file: !661, line: 434, column: 1)
!11721 = distinct !DISubprogram(name: "k_queue_remove", scope: !2900, file: !2900, line: 351, type: !11722, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11724)
!11722 = !DISubroutineType(types: !11723)
!11723 = !{!580, !11102, !102}
!11724 = !{!11725, !11726, !11727}
!11725 = !DILocalVariable(name: "queue", arg: 1, scope: !11721, file: !2900, line: 351, type: !11102)
!11726 = !DILocalVariable(name: "data", arg: 2, scope: !11721, file: !2900, line: 351, type: !102)
!11727 = !DILocalVariable(name: "ret", scope: !11721, file: !2900, line: 355, type: !580)
!11728 = !DILocation(line: 0, scope: !11721)
!11729 = !DILocation(line: 355, column: 48, scope: !11721)
!11730 = !DILocation(line: 355, column: 56, scope: !11721)
!11731 = !DILocation(line: 355, column: 13, scope: !11721)
!11732 = !DILocation(line: 359, column: 2, scope: !11721)
!11733 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !661, file: !661, line: 478, type: !11734, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11736)
!11734 = !DISubroutineType(types: !11735)
!11735 = !{!580, !11130, !2909}
!11736 = !{!11737, !11738, !11739, !11740}
!11737 = !DILocalVariable(name: "list", arg: 1, scope: !11733, file: !661, line: 478, type: !11130)
!11738 = !DILocalVariable(name: "node", arg: 2, scope: !11733, file: !661, line: 478, type: !2909)
!11739 = !DILocalVariable(name: "prev", scope: !11733, file: !661, line: 478, type: !2909)
!11740 = !DILocalVariable(name: "test", scope: !11733, file: !661, line: 478, type: !2909)
!11741 = !DILocation(line: 0, scope: !11733)
!11742 = !DILocation(line: 478, column: 1, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11733, file: !661, line: 478, column: 1)
!11744 = !DILocation(line: 478, column: 1, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11743, file: !661, line: 478, column: 1)
!11746 = !DILocation(line: 478, column: 1, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11748, file: !661, line: 478, column: 1)
!11748 = distinct !DILexicalBlock(scope: !11745, file: !661, line: 478, column: 1)
!11749 = !DILocation(line: 478, column: 1, scope: !11748)
!11750 = distinct !{!11750, !11742, !11742}
!11751 = !DILocation(line: 478, column: 1, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11747, file: !661, line: 478, column: 1)
!11753 = !DILocation(line: 478, column: 1, scope: !11733)
!11754 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !661, file: !661, line: 463, type: !11412, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11755)
!11755 = !{!11756, !11757, !11758}
!11756 = !DILocalVariable(name: "list", arg: 1, scope: !11754, file: !661, line: 463, type: !11130)
!11757 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11754, file: !661, line: 463, type: !2909)
!11758 = !DILocalVariable(name: "node", arg: 3, scope: !11754, file: !661, line: 463, type: !2909)
!11759 = !DILocation(line: 0, scope: !11754)
!11760 = !DILocation(line: 463, column: 1, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11754, file: !661, line: 463, column: 1)
!11762 = !DILocation(line: 0, scope: !11761)
!11763 = !DILocation(line: 463, column: 1, scope: !11754)
!11764 = !DILocation(line: 463, column: 1, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11761, file: !661, line: 463, column: 1)
!11766 = !DILocation(line: 463, column: 1, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11765, file: !661, line: 463, column: 1)
!11768 = !DILocation(line: 463, column: 1, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11767, file: !661, line: 463, column: 1)
!11770 = !DILocation(line: 463, column: 1, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11761, file: !661, line: 463, column: 1)
!11772 = !DILocation(line: 463, column: 1, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11771, file: !661, line: 463, column: 1)
!11774 = !DILocation(line: 463, column: 1, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11773, file: !661, line: 463, column: 1)
!11776 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !661, file: !661, line: 347, type: !11443, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11777)
!11777 = !{!11778}
!11778 = !DILocalVariable(name: "node", arg: 1, scope: !11776, file: !661, line: 347, type: !2909)
!11779 = !DILocation(line: 0, scope: !11776)
!11780 = !DILocation(line: 347, column: 1, scope: !11776)
!11781 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !661, file: !661, line: 336, type: !11443, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11782)
!11782 = !{!11783}
!11783 = !DILocalVariable(name: "node", arg: 1, scope: !11781, file: !661, line: 336, type: !2909)
!11784 = !DILocation(line: 0, scope: !11781)
!11785 = !DILocation(line: 336, column: 1, scope: !11781)
!11786 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !2900, file: !2900, line: 362, type: !11722, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11787)
!11787 = !{!11788, !11789, !11790}
!11788 = !DILocalVariable(name: "queue", arg: 1, scope: !11786, file: !2900, line: 362, type: !11102)
!11789 = !DILocalVariable(name: "data", arg: 2, scope: !11786, file: !2900, line: 362, type: !102)
!11790 = !DILocalVariable(name: "test", scope: !11786, file: !2900, line: 366, type: !2909)
!11791 = !DILocation(line: 0, scope: !11786)
!11792 = !DILocation(line: 368, column: 2, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11786, file: !2900, line: 368, column: 2)
!11794 = !DILocation(line: 368, column: 2, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11793, file: !2900, line: 368, column: 2)
!11796 = !DILocation(line: 369, column: 12, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11798, file: !2900, line: 369, column: 7)
!11798 = distinct !DILexicalBlock(scope: !11795, file: !2900, line: 368, column: 49)
!11799 = !DILocation(line: 369, column: 7, scope: !11798)
!11800 = distinct !{!11800, !11792, !11801}
!11801 = !DILocation(line: 374, column: 2, scope: !11793)
!11802 = !DILocation(line: 376, column: 2, scope: !11786)
!11803 = !DILocation(line: 380, column: 2, scope: !11786)
!11804 = !DILocation(line: 381, column: 1, scope: !11786)
!11805 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !2900, file: !2900, line: 383, type: !11806, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11808)
!11806 = !DISubroutineType(types: !11807)
!11807 = !{!102, !11102}
!11808 = !{!11809, !11810}
!11809 = !DILocalVariable(name: "queue", arg: 1, scope: !11805, file: !2900, line: 383, type: !11102)
!11810 = !DILocalVariable(name: "ret", scope: !11805, file: !2900, line: 385, type: !102)
!11811 = !DILocation(line: 0, scope: !11805)
!11812 = !DILocation(line: 385, column: 61, scope: !11805)
!11813 = !DILocation(line: 385, column: 32, scope: !11805)
!11814 = !DILocation(line: 385, column: 14, scope: !11805)
!11815 = !DILocation(line: 389, column: 2, scope: !11805)
!11816 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !2900, file: !2900, line: 392, type: !11806, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !11817)
!11817 = !{!11818, !11819}
!11818 = !DILocalVariable(name: "queue", arg: 1, scope: !11816, file: !2900, line: 392, type: !11102)
!11819 = !DILocalVariable(name: "ret", scope: !11816, file: !2900, line: 394, type: !102)
!11820 = !DILocation(line: 0, scope: !11816)
!11821 = !DILocation(line: 394, column: 61, scope: !11816)
!11822 = !DILocation(line: 394, column: 32, scope: !11816)
!11823 = !DILocation(line: 394, column: 14, scope: !11816)
!11824 = !DILocation(line: 398, column: 2, scope: !11816)
!11825 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2171, file: !2171, line: 93, type: !11826, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11828)
!11826 = !DISubroutineType(types: !11827)
!11827 = !{!1090, !2072, !2072}
!11828 = !{!11829, !11830, !11831, !11832}
!11829 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11825, file: !2171, line: 93, type: !2072)
!11830 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11825, file: !2171, line: 94, type: !2072)
!11831 = !DILocalVariable(name: "b1", scope: !11825, file: !2171, line: 97, type: !1090)
!11832 = !DILocalVariable(name: "b2", scope: !11825, file: !2171, line: 98, type: !1090)
!11833 = !DILocation(line: 0, scope: !11825)
!11834 = !DILocation(line: 97, column: 30, scope: !11825)
!11835 = !DILocation(line: 98, column: 30, scope: !11825)
!11836 = !DILocation(line: 100, column: 9, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11825, file: !2171, line: 100, column: 6)
!11838 = !DILocation(line: 100, column: 6, scope: !11825)
!11839 = !DILocation(line: 125, column: 1, scope: !11825)
!11840 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2171, file: !2171, line: 428, type: !11841, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11843)
!11841 = !DISubroutineType(types: !11842)
!11842 = !{null, !2072}
!11843 = !{!11844}
!11844 = !DILocalVariable(name: "curr", arg: 1, scope: !11840, file: !2171, line: 428, type: !2072)
!11845 = !DILocation(line: 0, scope: !11840)
!11846 = !DILocation(line: 434, column: 6, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11840, file: !2171, line: 434, column: 6)
!11848 = !DILocation(line: 434, column: 23, scope: !11847)
!11849 = !DILocation(line: 434, column: 6, scope: !11840)
!11850 = !DILocation(line: 435, column: 50, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11847, file: !2171, line: 434, column: 29)
!11852 = !DILocation(line: 435, column: 48, scope: !11851)
!11853 = !DILocation(line: 435, column: 29, scope: !11851)
!11854 = !DILocation(line: 436, column: 24, scope: !11851)
!11855 = !DILocation(line: 436, column: 3, scope: !11851)
!11856 = !DILocation(line: 437, column: 2, scope: !11851)
!11857 = !DILocation(line: 438, column: 1, scope: !11840)
!11858 = distinct !DISubprogram(name: "slice_time", scope: !2171, file: !2171, line: 407, type: !11859, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11861)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{!103, !2072}
!11861 = !{!11862, !11863}
!11862 = !DILocalVariable(name: "curr", arg: 1, scope: !11858, file: !2171, line: 407, type: !2072)
!11863 = !DILocalVariable(name: "ret", scope: !11858, file: !2171, line: 409, type: !103)
!11864 = !DILocation(line: 0, scope: !11858)
!11865 = !DILocation(line: 409, column: 12, scope: !11858)
!11866 = !DILocation(line: 416, column: 2, scope: !11858)
!11867 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2171, file: !2171, line: 440, type: !11868, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11870)
!11868 = !DISubroutineType(types: !11869)
!11869 = !{null, !1090, !103}
!11870 = !{!11871, !11872, !11873, !11879}
!11871 = !DILocalVariable(name: "slice", arg: 1, scope: !11867, file: !2171, line: 440, type: !1090)
!11872 = !DILocalVariable(name: "prio", arg: 2, scope: !11867, file: !2171, line: 440, type: !103)
!11873 = !DILocalVariable(name: "__i", scope: !11874, file: !2171, line: 442, type: !11875)
!11874 = distinct !DILexicalBlock(scope: !11867, file: !2171, line: 442, column: 2)
!11875 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !674, line: 106, baseType: !11876)
!11876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !674, line: 32, size: 32, elements: !11877)
!11877 = !{!11878}
!11878 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11876, file: !674, line: 33, baseType: !103, size: 32)
!11879 = !DILocalVariable(name: "__key", scope: !11874, file: !2171, line: 442, type: !11875)
!11880 = !DILocation(line: 0, scope: !11867)
!11881 = !DILocation(line: 0, scope: !11874)
!11882 = !DILocalVariable(name: "l", arg: 1, scope: !11883, file: !674, line: 136, type: !11886)
!11883 = distinct !DISubprogram(name: "k_spin_lock", scope: !674, file: !674, line: 136, type: !11884, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11887)
!11884 = !DISubroutineType(types: !11885)
!11885 = !{!11875, !11886}
!11886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 32)
!11887 = !{!11882, !11888}
!11888 = !DILocalVariable(name: "k", scope: !11883, file: !674, line: 139, type: !11875)
!11889 = !DILocation(line: 0, scope: !11883, inlinedAt: !11890)
!11890 = distinct !DILocation(line: 442, column: 2, scope: !11874)
!11891 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !11896)
!11892 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5762, file: !5762, line: 42, type: !7761, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11893)
!11893 = !{!11894, !11895}
!11894 = !DILocalVariable(name: "key", scope: !11892, file: !5762, line: 44, type: !32)
!11895 = !DILocalVariable(name: "tmp", scope: !11892, file: !5762, line: 53, type: !32)
!11896 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !11890)
!11897 = !{i64 2884984}
!11898 = !DILocation(line: 0, scope: !11892, inlinedAt: !11896)
!11899 = !DILocation(line: 443, column: 29, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11901, file: !2171, line: 442, column: 26)
!11901 = distinct !DILexicalBlock(scope: !11874, file: !2171, line: 442, column: 2)
!11902 = !DILocation(line: 444, column: 17, scope: !11900)
!11903 = !DILocation(line: 445, column: 51, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11900, file: !2171, line: 445, column: 7)
!11905 = !DILocation(line: 445, column: 7, scope: !11900)
!11906 = !DILocation(line: 0, scope: !11900)
!11907 = !DILocation(line: 451, column: 18, scope: !11900)
!11908 = !DILocation(line: 452, column: 3, scope: !11900)
!11909 = !DILocalVariable(name: "key", arg: 2, scope: !11910, file: !674, line: 190, type: !11875)
!11910 = distinct !DISubprogram(name: "k_spin_unlock", scope: !674, file: !674, line: 189, type: !11911, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11913)
!11911 = !DISubroutineType(types: !11912)
!11912 = !{null, !11886, !11875}
!11913 = !{!11914, !11909}
!11914 = !DILocalVariable(name: "l", arg: 1, scope: !11910, file: !674, line: 189, type: !11886)
!11915 = !DILocation(line: 0, scope: !11910, inlinedAt: !11916)
!11916 = distinct !DILocation(line: 442, column: 2, scope: !11901)
!11917 = !DILocalVariable(name: "key", arg: 1, scope: !11918, file: !5762, line: 84, type: !32)
!11918 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5762, file: !5762, line: 84, type: !5598, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11919)
!11919 = !{!11917}
!11920 = !DILocation(line: 0, scope: !11918, inlinedAt: !11921)
!11921 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !11916)
!11922 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !11921)
!11923 = !{i64 2885801}
!11924 = !DILocation(line: 454, column: 1, scope: !11867)
!11925 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !10953, file: !10953, line: 389, type: !11926, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11928)
!11926 = !DISubroutineType(types: !11927)
!11927 = !{!404, !404}
!11928 = !{!11929}
!11929 = !DILocalVariable(name: "t", arg: 1, scope: !11925, file: !10953, line: 389, type: !404)
!11930 = !DILocation(line: 0, scope: !11925)
!11931 = !DILocalVariable(name: "t", arg: 1, scope: !11932, file: !10953, line: 102, type: !2050)
!11932 = distinct !DISubprogram(name: "z_tmcvt", scope: !10953, file: !10953, line: 102, type: !10961, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11933)
!11933 = !{!11931, !11934, !11935, !11936, !11937, !11938, !11939, !11940, !11941, !11942, !11943}
!11934 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11932, file: !10953, line: 102, type: !404)
!11935 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11932, file: !10953, line: 103, type: !404)
!11936 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11932, file: !10953, line: 103, type: !580)
!11937 = !DILocalVariable(name: "result32", arg: 5, scope: !11932, file: !10953, line: 104, type: !580)
!11938 = !DILocalVariable(name: "round_up", arg: 6, scope: !11932, file: !10953, line: 104, type: !580)
!11939 = !DILocalVariable(name: "round_off", arg: 7, scope: !11932, file: !10953, line: 105, type: !580)
!11940 = !DILocalVariable(name: "mul_ratio", scope: !11932, file: !10953, line: 107, type: !580)
!11941 = !DILocalVariable(name: "div_ratio", scope: !11932, file: !10953, line: 109, type: !580)
!11942 = !DILocalVariable(name: "off", scope: !11932, file: !10953, line: 116, type: !2050)
!11943 = !DILocalVariable(name: "rdivisor", scope: !11944, file: !10953, line: 119, type: !404)
!11944 = distinct !DILexicalBlock(scope: !11945, file: !10953, line: 118, column: 18)
!11945 = distinct !DILexicalBlock(scope: !11932, file: !10953, line: 118, column: 6)
!11946 = !DILocation(line: 0, scope: !11932, inlinedAt: !11947)
!11947 = distinct !DILocation(line: 392, column: 9, scope: !11925)
!11948 = !DILocation(line: 143, column: 25, scope: !11949, inlinedAt: !11947)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !10953, line: 142, column: 17)
!11950 = distinct !DILexicalBlock(scope: !11951, file: !10953, line: 142, column: 7)
!11951 = distinct !DILexicalBlock(scope: !11952, file: !10953, line: 141, column: 24)
!11952 = distinct !DILexicalBlock(scope: !11953, file: !10953, line: 141, column: 13)
!11953 = distinct !DILexicalBlock(scope: !11932, file: !10953, line: 134, column: 6)
!11954 = !DILocation(line: 392, column: 2, scope: !11925)
!11955 = distinct !DISubprogram(name: "z_time_slice", scope: !2171, file: !2171, line: 502, type: !10373, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11956)
!11956 = !{!11957, !11958}
!11957 = !DILocalVariable(name: "ticks", arg: 1, scope: !11955, file: !2171, line: 502, type: !103)
!11958 = !DILocalVariable(name: "key", scope: !11955, file: !2171, line: 511, type: !11875)
!11959 = !DILocation(line: 0, scope: !11955)
!11960 = !DILocation(line: 0, scope: !11883, inlinedAt: !11961)
!11961 = distinct !DILocation(line: 511, column: 25, scope: !11955)
!11962 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !11963)
!11963 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !11961)
!11964 = !DILocation(line: 0, scope: !11892, inlinedAt: !11963)
!11965 = !DILocation(line: 514, column: 6, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11955, file: !2171, line: 514, column: 6)
!11967 = !DILocation(line: 514, column: 25, scope: !11966)
!11968 = !DILocation(line: 514, column: 22, scope: !11966)
!11969 = !DILocation(line: 514, column: 6, scope: !11955)
!11970 = !DILocation(line: 515, column: 3, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11966, file: !2171, line: 514, column: 35)
!11972 = !DILocation(line: 0, scope: !11910, inlinedAt: !11973)
!11973 = distinct !DILocation(line: 516, column: 3, scope: !11971)
!11974 = !DILocation(line: 0, scope: !11918, inlinedAt: !11975)
!11975 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !11973)
!11976 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !11975)
!11977 = !DILocation(line: 517, column: 3, scope: !11971)
!11978 = !DILocation(line: 519, column: 18, scope: !11955)
!11979 = !DILocation(line: 522, column: 6, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11955, file: !2171, line: 522, column: 6)
!11981 = !DILocation(line: 522, column: 27, scope: !11980)
!11982 = !DILocation(line: 522, column: 30, scope: !11980)
!11983 = !DILocation(line: 522, column: 6, scope: !11955)
!11984 = !DILocation(line: 523, column: 30, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11986, file: !2171, line: 523, column: 7)
!11986 = distinct !DILexicalBlock(scope: !11980, file: !2171, line: 522, column: 51)
!11987 = !DILocation(line: 523, column: 13, scope: !11985)
!11988 = !DILocation(line: 523, column: 7, scope: !11986)
!11989 = !DILocation(line: 530, column: 10, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11985, file: !2171, line: 523, column: 43)
!11991 = !DILocation(line: 531, column: 3, scope: !11990)
!11992 = !DILocation(line: 532, column: 30, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11985, file: !2171, line: 531, column: 10)
!11994 = !DILocation(line: 535, column: 29, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11980, file: !2171, line: 534, column: 9)
!11996 = !DILocation(line: 0, scope: !11910, inlinedAt: !11997)
!11997 = distinct !DILocation(line: 537, column: 2, scope: !11955)
!11998 = !DILocation(line: 0, scope: !11918, inlinedAt: !11999)
!11999 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !11997)
!12000 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !11999)
!12001 = !DILocation(line: 538, column: 1, scope: !11955)
!12002 = distinct !DISubprogram(name: "sliceable", scope: !2171, file: !2171, line: 468, type: !12003, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12005)
!12003 = !DISubroutineType(types: !12004)
!12004 = !{!580, !2072}
!12005 = !{!12006, !12007}
!12006 = !DILocalVariable(name: "thread", arg: 1, scope: !12002, file: !2171, line: 468, type: !2072)
!12007 = !DILocalVariable(name: "ret", scope: !12002, file: !2171, line: 470, type: !580)
!12008 = !DILocation(line: 0, scope: !12002)
!12009 = !DILocation(line: 470, column: 13, scope: !12002)
!12010 = !DILocation(line: 471, column: 3, scope: !12002)
!12011 = !DILocation(line: 471, column: 7, scope: !12002)
!12012 = !DILocation(line: 472, column: 3, scope: !12002)
!12013 = !DILocation(line: 472, column: 37, scope: !12002)
!12014 = !DILocation(line: 472, column: 24, scope: !12002)
!12015 = !DILocation(line: 472, column: 43, scope: !12002)
!12016 = !DILocation(line: 472, column: 7, scope: !12002)
!12017 = !DILocation(line: 473, column: 3, scope: !12002)
!12018 = !DILocation(line: 473, column: 7, scope: !12002)
!12019 = !DILocation(line: 473, column: 6, scope: !12002)
!12020 = !DILocation(line: 479, column: 2, scope: !12002)
!12021 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2171, file: !2171, line: 482, type: !12022, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12024)
!12022 = !DISubroutineType(types: !12023)
!12023 = !{!11875, !11875}
!12024 = !{!12025, !12026}
!12025 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12021, file: !2171, line: 482, type: !11875)
!12026 = !DILocalVariable(name: "curr", scope: !12021, file: !2171, line: 484, type: !2072)
!12027 = !DILocation(line: 0, scope: !12021)
!12028 = !DILocation(line: 484, column: 26, scope: !12021)
!12029 = !DILocation(line: 493, column: 7, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12021, file: !2171, line: 493, column: 6)
!12031 = !DILocation(line: 493, column: 6, scope: !12021)
!12032 = !DILocation(line: 494, column: 3, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12030, file: !2171, line: 493, column: 49)
!12034 = !DILocation(line: 495, column: 2, scope: !12033)
!12035 = !DILocation(line: 496, column: 2, scope: !12021)
!12036 = !DILocation(line: 499, column: 1, scope: !12021)
!12037 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10416, file: !10416, line: 106, type: !12003, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12038)
!12038 = !{!12039, !12040}
!12039 = !DILocalVariable(name: "thread", arg: 1, scope: !12037, file: !10416, line: 106, type: !2072)
!12040 = !DILocalVariable(name: "state", scope: !12037, file: !10416, line: 108, type: !410)
!12041 = !DILocation(line: 0, scope: !12037)
!12042 = !DILocation(line: 108, column: 31, scope: !12037)
!12043 = !DILocation(line: 110, column: 16, scope: !12037)
!12044 = !DILocation(line: 111, column: 41, scope: !12037)
!12045 = !DILocation(line: 110, column: 2, scope: !12037)
!12046 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2171, file: !2171, line: 393, type: !11841, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12047)
!12047 = !{!12048}
!12048 = !DILocalVariable(name: "thread", arg: 1, scope: !12046, file: !2171, line: 393, type: !2072)
!12049 = !DILocation(line: 0, scope: !12046)
!12050 = !DILocation(line: 395, column: 6, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12046, file: !2171, line: 395, column: 6)
!12052 = !DILocation(line: 395, column: 6, scope: !12046)
!12053 = !DILocalVariable(name: "thread", arg: 1, scope: !12054, file: !2171, line: 264, type: !2072)
!12054 = distinct !DISubprogram(name: "dequeue_thread", scope: !2171, file: !2171, line: 264, type: !11841, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12055)
!12055 = !{!12053}
!12056 = !DILocation(line: 0, scope: !12054, inlinedAt: !12057)
!12057 = distinct !DILocation(line: 396, column: 3, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12051, file: !2171, line: 395, column: 34)
!12059 = !DILocation(line: 266, column: 15, scope: !12054, inlinedAt: !12057)
!12060 = !DILocation(line: 266, column: 28, scope: !12054, inlinedAt: !12057)
!12061 = !DILocalVariable(name: "thread", arg: 1, scope: !12062, file: !2171, line: 232, type: !2072)
!12062 = distinct !DISubprogram(name: "runq_remove", scope: !2171, file: !2171, line: 232, type: !11841, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12063)
!12063 = !{!12061}
!12064 = !DILocation(line: 0, scope: !12062, inlinedAt: !12065)
!12065 = distinct !DILocation(line: 268, column: 3, scope: !12066, inlinedAt: !12057)
!12066 = distinct !DILexicalBlock(scope: !12067, file: !2171, line: 267, column: 35)
!12067 = distinct !DILexicalBlock(scope: !12054, file: !2171, line: 267, column: 6)
!12068 = !DILocation(line: 234, column: 2, scope: !12062, inlinedAt: !12065)
!12069 = !DILocation(line: 397, column: 2, scope: !12058)
!12070 = !DILocalVariable(name: "thread", arg: 1, scope: !12071, file: !2171, line: 250, type: !2072)
!12071 = distinct !DISubprogram(name: "queue_thread", scope: !2171, file: !2171, line: 250, type: !11841, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12072)
!12072 = !{!12070}
!12073 = !DILocation(line: 0, scope: !12071, inlinedAt: !12074)
!12074 = distinct !DILocation(line: 398, column: 2, scope: !12046)
!12075 = !DILocation(line: 252, column: 15, scope: !12071, inlinedAt: !12074)
!12076 = !DILocation(line: 252, column: 28, scope: !12071, inlinedAt: !12074)
!12077 = !DILocalVariable(name: "thread", arg: 1, scope: !12078, file: !2171, line: 227, type: !2072)
!12078 = distinct !DISubprogram(name: "runq_add", scope: !2171, file: !2171, line: 227, type: !11841, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12079)
!12079 = !{!12077}
!12080 = !DILocation(line: 0, scope: !12078, inlinedAt: !12081)
!12081 = distinct !DILocation(line: 254, column: 3, scope: !12082, inlinedAt: !12074)
!12082 = distinct !DILexicalBlock(scope: !12083, file: !2171, line: 253, column: 35)
!12083 = distinct !DILexicalBlock(scope: !12071, file: !2171, line: 253, column: 6)
!12084 = !DILocalVariable(name: "pq", arg: 1, scope: !12085, file: !2171, line: 181, type: !12088)
!12085 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2171, file: !2171, line: 181, type: !12086, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12089)
!12086 = !DISubroutineType(types: !12087)
!12087 = !{null, !12088, !2072}
!12088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!12089 = !{!12084, !12090, !12091}
!12090 = !DILocalVariable(name: "thread", arg: 2, scope: !12085, file: !2171, line: 182, type: !2072)
!12091 = !DILocalVariable(name: "t", scope: !12085, file: !2171, line: 184, type: !2072)
!12092 = !DILocation(line: 0, scope: !12085, inlinedAt: !12093)
!12093 = distinct !DILocation(line: 229, column: 2, scope: !12078, inlinedAt: !12081)
!12094 = !DILocation(line: 188, column: 2, scope: !12095, inlinedAt: !12093)
!12095 = distinct !DILexicalBlock(scope: !12085, file: !2171, line: 188, column: 2)
!12096 = !DILocation(line: 188, column: 2, scope: !12097, inlinedAt: !12093)
!12097 = distinct !DILexicalBlock(scope: !12095, file: !2171, line: 188, column: 2)
!12098 = !DILocation(line: 0, scope: !12095, inlinedAt: !12093)
!12099 = !DILocation(line: 189, column: 7, scope: !12100, inlinedAt: !12093)
!12100 = distinct !DILexicalBlock(scope: !12101, file: !2171, line: 189, column: 7)
!12101 = distinct !DILexicalBlock(scope: !12097, file: !2171, line: 188, column: 56)
!12102 = !DILocation(line: 189, column: 35, scope: !12100, inlinedAt: !12093)
!12103 = !DILocation(line: 189, column: 7, scope: !12101, inlinedAt: !12093)
!12104 = !DILocation(line: 191, column: 21, scope: !12105, inlinedAt: !12093)
!12105 = distinct !DILexicalBlock(scope: !12100, file: !2171, line: 189, column: 40)
!12106 = !DILocation(line: 190, column: 4, scope: !12105, inlinedAt: !12093)
!12107 = !DILocation(line: 192, column: 4, scope: !12105, inlinedAt: !12093)
!12108 = distinct !{!12108, !12094, !12109}
!12109 = !DILocation(line: 194, column: 2, scope: !12095, inlinedAt: !12093)
!12110 = !DILocation(line: 196, column: 37, scope: !12085, inlinedAt: !12093)
!12111 = !DILocation(line: 196, column: 2, scope: !12085, inlinedAt: !12093)
!12112 = !DILocation(line: 197, column: 1, scope: !12085, inlinedAt: !12093)
!12113 = !DILocation(line: 399, column: 25, scope: !12046)
!12114 = !DILocation(line: 399, column: 22, scope: !12046)
!12115 = !DILocation(line: 399, column: 2, scope: !12046)
!12116 = !DILocation(line: 400, column: 1, scope: !12046)
!12117 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10416, file: !10416, line: 136, type: !12003, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12118)
!12118 = !{!12119}
!12119 = !DILocalVariable(name: "thread", arg: 1, scope: !12117, file: !10416, line: 136, type: !2072)
!12120 = !DILocation(line: 0, scope: !12117)
!12121 = !DILocation(line: 138, column: 9, scope: !12117)
!12122 = !DILocation(line: 138, column: 2, scope: !12117)
!12123 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2171, file: !2171, line: 1137, type: !12086, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12124)
!12124 = !{!12125, !12126}
!12125 = !DILocalVariable(name: "pq", arg: 1, scope: !12123, file: !2171, line: 1137, type: !12088)
!12126 = !DILocalVariable(name: "thread", arg: 2, scope: !12123, file: !2171, line: 1137, type: !2072)
!12127 = !DILocation(line: 0, scope: !12123)
!12128 = !DILocation(line: 1141, column: 33, scope: !12123)
!12129 = !DILocation(line: 1141, column: 2, scope: !12123)
!12130 = !DILocation(line: 1142, column: 1, scope: !12123)
!12131 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !683, file: !683, line: 294, type: !12132, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12134)
!12132 = !DISubroutineType(types: !12133)
!12133 = !{!2167, !12088}
!12134 = !{!12135}
!12135 = !DILocalVariable(name: "list", arg: 1, scope: !12131, file: !683, line: 294, type: !12088)
!12136 = !DILocation(line: 0, scope: !12131)
!12137 = !DILocation(line: 296, column: 9, scope: !12131)
!12138 = !DILocation(line: 296, column: 49, scope: !12131)
!12139 = !DILocation(line: 296, column: 2, scope: !12131)
!12140 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !683, file: !683, line: 443, type: !12141, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12143)
!12141 = !DISubroutineType(types: !12142)
!12142 = !{null, !2167, !2167}
!12143 = !{!12144, !12145, !12146}
!12144 = !DILocalVariable(name: "successor", arg: 1, scope: !12140, file: !683, line: 443, type: !2167)
!12145 = !DILocalVariable(name: "node", arg: 2, scope: !12140, file: !683, line: 443, type: !2167)
!12146 = !DILocalVariable(name: "prev", scope: !12140, file: !683, line: 445, type: !12147)
!12147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2167)
!12148 = !DILocation(line: 0, scope: !12140)
!12149 = !DILocation(line: 445, column: 39, scope: !12140)
!12150 = !DILocation(line: 447, column: 8, scope: !12140)
!12151 = !DILocation(line: 447, column: 13, scope: !12140)
!12152 = !DILocation(line: 448, column: 8, scope: !12140)
!12153 = !DILocation(line: 448, column: 13, scope: !12140)
!12154 = !DILocation(line: 449, column: 8, scope: !12140)
!12155 = !DILocation(line: 449, column: 13, scope: !12140)
!12156 = !DILocation(line: 450, column: 18, scope: !12140)
!12157 = !DILocation(line: 451, column: 1, scope: !12140)
!12158 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !683, file: !683, line: 341, type: !12159, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12161)
!12159 = !DISubroutineType(types: !12160)
!12160 = !{!2167, !12088, !2167}
!12161 = !{!12162, !12163}
!12162 = !DILocalVariable(name: "list", arg: 1, scope: !12158, file: !683, line: 341, type: !12088)
!12163 = !DILocalVariable(name: "node", arg: 2, scope: !12158, file: !683, line: 342, type: !2167)
!12164 = !DILocation(line: 0, scope: !12158)
!12165 = !DILocation(line: 344, column: 15, scope: !12158)
!12166 = !DILocation(line: 344, column: 9, scope: !12158)
!12167 = !DILocation(line: 344, column: 26, scope: !12158)
!12168 = !DILocation(line: 344, column: 2, scope: !12158)
!12169 = distinct !DISubprogram(name: "sys_dlist_append", scope: !683, file: !683, line: 404, type: !12170, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12172)
!12170 = !DISubroutineType(types: !12171)
!12171 = !{null, !12088, !2167}
!12172 = !{!12173, !12174, !12175}
!12173 = !DILocalVariable(name: "list", arg: 1, scope: !12169, file: !683, line: 404, type: !12088)
!12174 = !DILocalVariable(name: "node", arg: 2, scope: !12169, file: !683, line: 404, type: !2167)
!12175 = !DILocalVariable(name: "tail", scope: !12169, file: !683, line: 406, type: !12147)
!12176 = !DILocation(line: 0, scope: !12169)
!12177 = !DILocation(line: 406, column: 34, scope: !12169)
!12178 = !DILocation(line: 408, column: 8, scope: !12169)
!12179 = !DILocation(line: 408, column: 13, scope: !12169)
!12180 = !DILocation(line: 409, column: 8, scope: !12169)
!12181 = !DILocation(line: 409, column: 13, scope: !12169)
!12182 = !DILocation(line: 411, column: 8, scope: !12169)
!12183 = !DILocation(line: 411, column: 13, scope: !12169)
!12184 = !DILocation(line: 412, column: 13, scope: !12169)
!12185 = !DILocation(line: 413, column: 1, scope: !12169)
!12186 = distinct !DISubprogram(name: "update_cache", scope: !2171, file: !2171, line: 559, type: !10373, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12187)
!12187 = !{!12188, !12189}
!12188 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12186, file: !2171, line: 559, type: !103)
!12189 = !DILocalVariable(name: "thread", scope: !12186, file: !2171, line: 562, type: !2072)
!12190 = !DILocation(line: 0, scope: !12186)
!12191 = !DILocation(line: 239, column: 9, scope: !12192, inlinedAt: !12195)
!12192 = distinct !DISubprogram(name: "runq_best", scope: !2171, file: !2171, line: 237, type: !12193, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !675)
!12193 = !DISubroutineType(types: !12194)
!12194 = !{!2072}
!12195 = distinct !DILocation(line: 314, column: 28, scope: !12196, inlinedAt: !12199)
!12196 = distinct !DISubprogram(name: "next_up", scope: !2171, file: !2171, line: 312, type: !12193, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12197)
!12197 = !{!12198}
!12198 = !DILocalVariable(name: "thread", scope: !12196, file: !2171, line: 314, type: !2072)
!12199 = distinct !DILocation(line: 562, column: 28, scope: !12186)
!12200 = !DILocation(line: 0, scope: !12196, inlinedAt: !12199)
!12201 = !DILocation(line: 340, column: 17, scope: !12196, inlinedAt: !12199)
!12202 = !DILocation(line: 340, column: 9, scope: !12196, inlinedAt: !12199)
!12203 = !DILocalVariable(name: "thread", arg: 1, scope: !12204, file: !2171, line: 127, type: !2072)
!12204 = distinct !DISubprogram(name: "should_preempt", scope: !2171, file: !2171, line: 127, type: !12205, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12207)
!12205 = !DISubroutineType(types: !12206)
!12206 = !{!580, !2072, !103}
!12207 = !{!12203, !12208}
!12208 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12204, file: !2171, line: 128, type: !103)
!12209 = !DILocation(line: 0, scope: !12204, inlinedAt: !12210)
!12210 = distinct !DILocation(line: 564, column: 6, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12186, file: !2171, line: 564, column: 6)
!12212 = !DILocation(line: 133, column: 17, scope: !12213, inlinedAt: !12210)
!12213 = distinct !DILexicalBlock(scope: !12204, file: !2171, line: 133, column: 6)
!12214 = !DILocation(line: 0, scope: !12211)
!12215 = !DILocation(line: 133, column: 6, scope: !12204, inlinedAt: !12210)
!12216 = !DILocation(line: 140, column: 6, scope: !12217, inlinedAt: !12210)
!12217 = distinct !DILexicalBlock(scope: !12204, file: !2171, line: 140, column: 6)
!12218 = !DILocation(line: 140, column: 6, scope: !12204, inlinedAt: !12210)
!12219 = !DILocation(line: 150, column: 9, scope: !12220, inlinedAt: !12210)
!12220 = distinct !DILexicalBlock(scope: !12204, file: !2171, line: 149, column: 6)
!12221 = !DILocation(line: 149, column: 6, scope: !12204, inlinedAt: !12210)
!12222 = !DILocation(line: 157, column: 6, scope: !12223, inlinedAt: !12210)
!12223 = distinct !DILexicalBlock(scope: !12204, file: !2171, line: 157, column: 6)
!12224 = !DILocation(line: 564, column: 6, scope: !12186)
!12225 = !DILocation(line: 566, column: 14, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12227, file: !2171, line: 566, column: 7)
!12227 = distinct !DILexicalBlock(scope: !12211, file: !2171, line: 564, column: 42)
!12228 = !DILocation(line: 566, column: 7, scope: !12227)
!12229 = !DILocation(line: 567, column: 4, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12226, file: !2171, line: 566, column: 27)
!12231 = !DILocation(line: 568, column: 3, scope: !12230)
!12232 = !DILocation(line: 585, column: 1, scope: !12186)
!12233 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2171, file: !2171, line: 1144, type: !12234, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12236)
!12234 = !DISubroutineType(types: !12235)
!12235 = !{!2072, !12088}
!12236 = !{!12237, !12238, !12239}
!12237 = !DILocalVariable(name: "pq", arg: 1, scope: !12233, file: !2171, line: 1144, type: !12088)
!12238 = !DILocalVariable(name: "thread", scope: !12233, file: !2171, line: 1146, type: !2072)
!12239 = !DILocalVariable(name: "n", scope: !12233, file: !2171, line: 1147, type: !2167)
!12240 = !DILocation(line: 0, scope: !12233)
!12241 = !DILocation(line: 1147, column: 19, scope: !12233)
!12242 = !DILocation(line: 1152, column: 2, scope: !12233)
!12243 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10416, file: !10416, line: 115, type: !12003, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12244)
!12244 = !{!12245}
!12245 = !DILocalVariable(name: "thread", arg: 1, scope: !12243, file: !10416, line: 115, type: !2072)
!12246 = !DILocation(line: 0, scope: !12243)
!12247 = !DILocation(line: 117, column: 46, scope: !12243)
!12248 = !DILocation(line: 117, column: 10, scope: !12243)
!12249 = !DILocation(line: 117, column: 9, scope: !12243)
!12250 = !DILocation(line: 117, column: 2, scope: !12243)
!12251 = distinct !DISubprogram(name: "is_preempt", scope: !2171, file: !2171, line: 62, type: !11859, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12252)
!12252 = !{!12253}
!12253 = !DILocalVariable(name: "thread", arg: 1, scope: !12251, file: !2171, line: 62, type: !2072)
!12254 = !DILocation(line: 0, scope: !12251)
!12255 = !DILocation(line: 65, column: 22, scope: !12251)
!12256 = !DILocation(line: 65, column: 30, scope: !12251)
!12257 = !DILocation(line: 65, column: 2, scope: !12251)
!12258 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !10786, file: !10786, line: 35, type: !12259, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12263)
!12259 = !DISubroutineType(types: !12260)
!12260 = !{!580, !12261}
!12261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12262, size: 32)
!12262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2123)
!12263 = !{!12264}
!12264 = !DILocalVariable(name: "to", arg: 1, scope: !12258, file: !10786, line: 35, type: !12261)
!12265 = !DILocation(line: 0, scope: !12258)
!12266 = !DILocation(line: 37, column: 35, scope: !12258)
!12267 = !DILocation(line: 37, column: 10, scope: !12258)
!12268 = !DILocation(line: 37, column: 9, scope: !12258)
!12269 = !DILocation(line: 37, column: 2, scope: !12258)
!12270 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !683, file: !683, line: 225, type: !12271, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12275)
!12271 = !DISubroutineType(types: !12272)
!12272 = !{!580, !12273}
!12273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12274, size: 32)
!12274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2082)
!12275 = !{!12276}
!12276 = !DILocalVariable(name: "node", arg: 1, scope: !12270, file: !683, line: 225, type: !12273)
!12277 = !DILocation(line: 0, scope: !12270)
!12278 = !DILocation(line: 227, column: 15, scope: !12270)
!12279 = !DILocation(line: 227, column: 20, scope: !12270)
!12280 = !DILocation(line: 227, column: 2, scope: !12270)
!12281 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !683, file: !683, line: 325, type: !12159, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12282)
!12282 = !{!12283, !12284}
!12283 = !DILocalVariable(name: "list", arg: 1, scope: !12281, file: !683, line: 325, type: !12088)
!12284 = !DILocalVariable(name: "node", arg: 2, scope: !12281, file: !683, line: 326, type: !2167)
!12285 = !DILocation(line: 0, scope: !12281)
!12286 = !DILocation(line: 328, column: 24, scope: !12281)
!12287 = !DILocation(line: 328, column: 15, scope: !12281)
!12288 = !DILocation(line: 328, column: 9, scope: !12281)
!12289 = !DILocation(line: 328, column: 45, scope: !12281)
!12290 = !DILocation(line: 328, column: 2, scope: !12281)
!12291 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !683, file: !683, line: 266, type: !12292, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12294)
!12292 = !DISubroutineType(types: !12293)
!12293 = !{!580, !12088}
!12294 = !{!12295}
!12295 = !DILocalVariable(name: "list", arg: 1, scope: !12291, file: !683, line: 266, type: !12088)
!12296 = !DILocation(line: 0, scope: !12291)
!12297 = !DILocation(line: 268, column: 15, scope: !12291)
!12298 = !DILocation(line: 268, column: 20, scope: !12291)
!12299 = !DILocation(line: 268, column: 2, scope: !12291)
!12300 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !683, file: !683, line: 496, type: !12301, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12303)
!12301 = !DISubroutineType(types: !12302)
!12302 = !{null, !2167}
!12303 = !{!12304, !12305, !12306}
!12304 = !DILocalVariable(name: "node", arg: 1, scope: !12300, file: !683, line: 496, type: !2167)
!12305 = !DILocalVariable(name: "prev", scope: !12300, file: !683, line: 498, type: !12147)
!12306 = !DILocalVariable(name: "next", scope: !12300, file: !683, line: 499, type: !12147)
!12307 = !DILocation(line: 0, scope: !12300)
!12308 = !DILocation(line: 498, column: 34, scope: !12300)
!12309 = !DILocation(line: 499, column: 34, scope: !12300)
!12310 = !DILocation(line: 501, column: 8, scope: !12300)
!12311 = !DILocation(line: 501, column: 13, scope: !12300)
!12312 = !DILocation(line: 502, column: 8, scope: !12300)
!12313 = !DILocation(line: 502, column: 13, scope: !12300)
!12314 = !DILocation(line: 503, column: 2, scope: !12300)
!12315 = !DILocation(line: 504, column: 1, scope: !12300)
!12316 = distinct !DISubprogram(name: "sys_dnode_init", scope: !683, file: !683, line: 211, type: !12301, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12317)
!12317 = !{!12318}
!12318 = !DILocalVariable(name: "node", arg: 1, scope: !12316, file: !683, line: 211, type: !2167)
!12319 = !DILocation(line: 0, scope: !12316)
!12320 = !DILocation(line: 213, column: 8, scope: !12316)
!12321 = !DILocation(line: 213, column: 13, scope: !12316)
!12322 = !DILocation(line: 214, column: 8, scope: !12316)
!12323 = !DILocation(line: 214, column: 13, scope: !12316)
!12324 = !DILocation(line: 215, column: 1, scope: !12316)
!12325 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10416, file: !10416, line: 131, type: !12326, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12328)
!12326 = !DISubroutineType(types: !12327)
!12327 = !{!580, !2072, !404}
!12328 = !{!12329, !12330}
!12329 = !DILocalVariable(name: "thread", arg: 1, scope: !12325, file: !10416, line: 131, type: !2072)
!12330 = !DILocalVariable(name: "state", arg: 2, scope: !12325, file: !10416, line: 131, type: !404)
!12331 = !DILocation(line: 0, scope: !12325)
!12332 = !DILocation(line: 133, column: 23, scope: !12325)
!12333 = !DILocation(line: 133, column: 45, scope: !12325)
!12334 = !DILocation(line: 133, column: 2, scope: !12325)
!12335 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10416, file: !10416, line: 211, type: !12336, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12338)
!12336 = !DISubroutineType(types: !12337)
!12337 = !{!580, !103, !103}
!12338 = !{!12339, !12340}
!12339 = !DILocalVariable(name: "prio", arg: 1, scope: !12335, file: !10416, line: 211, type: !103)
!12340 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12335, file: !10416, line: 211, type: !103)
!12341 = !DILocation(line: 0, scope: !12335)
!12342 = !DILocation(line: 213, column: 9, scope: !12335)
!12343 = !DILocation(line: 213, column: 2, scope: !12335)
!12344 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10416, file: !10416, line: 83, type: !12003, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12345)
!12345 = !{!12346}
!12346 = !DILocalVariable(name: "thread", arg: 1, scope: !12344, file: !10416, line: 83, type: !2072)
!12347 = !DILocation(line: 0, scope: !12344)
!12348 = !DILocation(line: 89, column: 16, scope: !12344)
!12349 = !DILocation(line: 89, column: 2, scope: !12344)
!12350 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10416, file: !10416, line: 206, type: !12336, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12351)
!12351 = !{!12352, !12353}
!12352 = !DILocalVariable(name: "prio1", arg: 1, scope: !12350, file: !10416, line: 206, type: !103)
!12353 = !DILocalVariable(name: "prio2", arg: 2, scope: !12350, file: !10416, line: 206, type: !103)
!12354 = !DILocation(line: 0, scope: !12350)
!12355 = !DILocation(line: 208, column: 15, scope: !12350)
!12356 = !DILocation(line: 208, column: 2, scope: !12350)
!12357 = distinct !DISubprogram(name: "z_ready_thread", scope: !2171, file: !2171, line: 635, type: !11841, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12358)
!12358 = !{!12359, !12360, !12362}
!12359 = !DILocalVariable(name: "thread", arg: 1, scope: !12357, file: !2171, line: 635, type: !2072)
!12360 = !DILocalVariable(name: "__i", scope: !12361, file: !2171, line: 637, type: !11875)
!12361 = distinct !DILexicalBlock(scope: !12357, file: !2171, line: 637, column: 2)
!12362 = !DILocalVariable(name: "__key", scope: !12361, file: !2171, line: 637, type: !11875)
!12363 = !DILocation(line: 0, scope: !12357)
!12364 = !DILocation(line: 0, scope: !12361)
!12365 = !DILocation(line: 0, scope: !11883, inlinedAt: !12366)
!12366 = distinct !DILocation(line: 637, column: 2, scope: !12361)
!12367 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12368)
!12368 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12366)
!12369 = !DILocation(line: 0, scope: !11892, inlinedAt: !12368)
!12370 = !DILocation(line: 639, column: 4, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12372, file: !2171, line: 638, column: 41)
!12372 = distinct !DILexicalBlock(scope: !12373, file: !2171, line: 638, column: 7)
!12373 = distinct !DILexicalBlock(scope: !12374, file: !2171, line: 637, column: 26)
!12374 = distinct !DILexicalBlock(scope: !12361, file: !2171, line: 637, column: 2)
!12375 = !DILocation(line: 0, scope: !11910, inlinedAt: !12376)
!12376 = distinct !DILocation(line: 637, column: 2, scope: !12374)
!12377 = !DILocation(line: 0, scope: !11918, inlinedAt: !12378)
!12378 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12376)
!12379 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12378)
!12380 = !DILocation(line: 642, column: 1, scope: !12357)
!12381 = distinct !DISubprogram(name: "ready_thread", scope: !2171, file: !2171, line: 617, type: !11841, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12382)
!12382 = !{!12383}
!12383 = !DILocalVariable(name: "thread", arg: 1, scope: !12381, file: !2171, line: 617, type: !2072)
!12384 = !DILocation(line: 0, scope: !12381)
!12385 = !DILocation(line: 626, column: 7, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12381, file: !2171, line: 626, column: 6)
!12387 = !DILocation(line: 626, column: 34, scope: !12386)
!12388 = !DILocation(line: 626, column: 37, scope: !12386)
!12389 = !DILocation(line: 626, column: 6, scope: !12381)
!12390 = !DILocation(line: 0, scope: !12071, inlinedAt: !12391)
!12391 = distinct !DILocation(line: 629, column: 3, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12386, file: !2171, line: 626, column: 64)
!12393 = !DILocation(line: 252, column: 15, scope: !12071, inlinedAt: !12391)
!12394 = !DILocation(line: 252, column: 28, scope: !12071, inlinedAt: !12391)
!12395 = !DILocation(line: 0, scope: !12078, inlinedAt: !12396)
!12396 = distinct !DILocation(line: 254, column: 3, scope: !12082, inlinedAt: !12391)
!12397 = !DILocation(line: 0, scope: !12085, inlinedAt: !12398)
!12398 = distinct !DILocation(line: 229, column: 2, scope: !12078, inlinedAt: !12396)
!12399 = !DILocation(line: 188, column: 2, scope: !12095, inlinedAt: !12398)
!12400 = !DILocation(line: 188, column: 2, scope: !12097, inlinedAt: !12398)
!12401 = !DILocation(line: 0, scope: !12095, inlinedAt: !12398)
!12402 = !DILocation(line: 189, column: 7, scope: !12100, inlinedAt: !12398)
!12403 = !DILocation(line: 189, column: 35, scope: !12100, inlinedAt: !12398)
!12404 = !DILocation(line: 189, column: 7, scope: !12101, inlinedAt: !12398)
!12405 = !DILocation(line: 191, column: 21, scope: !12105, inlinedAt: !12398)
!12406 = !DILocation(line: 190, column: 4, scope: !12105, inlinedAt: !12398)
!12407 = !DILocation(line: 192, column: 4, scope: !12105, inlinedAt: !12398)
!12408 = distinct !{!12408, !12399, !12409}
!12409 = !DILocation(line: 194, column: 2, scope: !12095, inlinedAt: !12398)
!12410 = !DILocation(line: 196, column: 37, scope: !12085, inlinedAt: !12398)
!12411 = !DILocation(line: 196, column: 2, scope: !12085, inlinedAt: !12398)
!12412 = !DILocation(line: 197, column: 1, scope: !12085, inlinedAt: !12398)
!12413 = !DILocation(line: 630, column: 3, scope: !12392)
!12414 = !DILocation(line: 632, column: 2, scope: !12392)
!12415 = !DILocation(line: 633, column: 1, scope: !12381)
!12416 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10416, file: !10416, line: 120, type: !12003, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12417)
!12417 = !{!12418}
!12418 = !DILocalVariable(name: "thread", arg: 1, scope: !12416, file: !10416, line: 120, type: !2072)
!12419 = !DILocation(line: 0, scope: !12416)
!12420 = !DILocation(line: 122, column: 12, scope: !12416)
!12421 = !DILocation(line: 122, column: 62, scope: !12416)
!12422 = !DILocation(line: 123, column: 4, scope: !12416)
!12423 = !DILocation(line: 122, column: 2, scope: !12416)
!12424 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2171, file: !2171, line: 644, type: !11841, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12425)
!12425 = !{!12426, !12427, !12429}
!12426 = !DILocalVariable(name: "thread", arg: 1, scope: !12424, file: !2171, line: 644, type: !2072)
!12427 = !DILocalVariable(name: "__i", scope: !12428, file: !2171, line: 646, type: !11875)
!12428 = distinct !DILexicalBlock(scope: !12424, file: !2171, line: 646, column: 2)
!12429 = !DILocalVariable(name: "__key", scope: !12428, file: !2171, line: 646, type: !11875)
!12430 = !DILocation(line: 0, scope: !12424)
!12431 = !DILocation(line: 0, scope: !12428)
!12432 = !DILocation(line: 0, scope: !11883, inlinedAt: !12433)
!12433 = distinct !DILocation(line: 646, column: 2, scope: !12428)
!12434 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12435)
!12435 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12433)
!12436 = !DILocation(line: 0, scope: !11892, inlinedAt: !12435)
!12437 = !DILocation(line: 647, column: 3, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12439, file: !2171, line: 646, column: 26)
!12439 = distinct !DILexicalBlock(scope: !12428, file: !2171, line: 646, column: 2)
!12440 = !DILocation(line: 0, scope: !11910, inlinedAt: !12441)
!12441 = distinct !DILocation(line: 646, column: 2, scope: !12439)
!12442 = !DILocation(line: 0, scope: !11918, inlinedAt: !12443)
!12443 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12441)
!12444 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12443)
!12445 = !DILocation(line: 649, column: 1, scope: !12424)
!12446 = distinct !DISubprogram(name: "z_sched_start", scope: !2171, file: !2171, line: 651, type: !11841, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12447)
!12447 = !{!12448, !12449}
!12448 = !DILocalVariable(name: "thread", arg: 1, scope: !12446, file: !2171, line: 651, type: !2072)
!12449 = !DILocalVariable(name: "key", scope: !12446, file: !2171, line: 653, type: !11875)
!12450 = !DILocation(line: 0, scope: !12446)
!12451 = !DILocation(line: 0, scope: !11883, inlinedAt: !12452)
!12452 = distinct !DILocation(line: 653, column: 25, scope: !12446)
!12453 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12454)
!12454 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12452)
!12455 = !DILocation(line: 0, scope: !11892, inlinedAt: !12454)
!12456 = !DILocation(line: 655, column: 6, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12446, file: !2171, line: 655, column: 6)
!12458 = !DILocation(line: 655, column: 6, scope: !12446)
!12459 = !DILocation(line: 0, scope: !11910, inlinedAt: !12460)
!12460 = distinct !DILocation(line: 656, column: 3, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12457, file: !2171, line: 655, column: 36)
!12462 = !DILocation(line: 0, scope: !11918, inlinedAt: !12463)
!12463 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12460)
!12464 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12463)
!12465 = !DILocation(line: 657, column: 3, scope: !12461)
!12466 = !DILocation(line: 660, column: 2, scope: !12446)
!12467 = !DILocation(line: 661, column: 2, scope: !12446)
!12468 = !DILocation(line: 662, column: 2, scope: !12446)
!12469 = !DILocation(line: 663, column: 1, scope: !12446)
!12470 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10416, file: !10416, line: 126, type: !12003, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12471)
!12471 = !{!12472}
!12472 = !DILocalVariable(name: "thread", arg: 1, scope: !12470, file: !10416, line: 126, type: !2072)
!12473 = !DILocation(line: 0, scope: !12470)
!12474 = !DILocation(line: 128, column: 23, scope: !12470)
!12475 = !DILocation(line: 128, column: 36, scope: !12470)
!12476 = !DILocation(line: 128, column: 56, scope: !12470)
!12477 = !DILocation(line: 128, column: 2, scope: !12470)
!12478 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10416, file: !10416, line: 155, type: !11841, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12479)
!12479 = !{!12480}
!12480 = !DILocalVariable(name: "thread", arg: 1, scope: !12478, file: !10416, line: 155, type: !2072)
!12481 = !DILocation(line: 0, scope: !12478)
!12482 = !DILocation(line: 157, column: 15, scope: !12478)
!12483 = !DILocation(line: 157, column: 28, scope: !12478)
!12484 = !DILocation(line: 158, column: 1, scope: !12478)
!12485 = distinct !DISubprogram(name: "z_reschedule", scope: !2171, file: !2171, line: 967, type: !11911, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12486)
!12486 = !{!12487, !12488}
!12487 = !DILocalVariable(name: "lock", arg: 1, scope: !12485, file: !2171, line: 967, type: !11886)
!12488 = !DILocalVariable(name: "key", arg: 2, scope: !12485, file: !2171, line: 967, type: !11875)
!12489 = !DILocation(line: 0, scope: !12485)
!12490 = !DILocation(line: 969, column: 6, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12485, file: !2171, line: 969, column: 6)
!12492 = !DILocation(line: 969, column: 23, scope: !12491)
!12493 = !DILocation(line: 969, column: 26, scope: !12491)
!12494 = !DILocation(line: 969, column: 6, scope: !12485)
!12495 = !DILocalVariable(name: "key", arg: 2, scope: !12496, file: !10518, line: 193, type: !11875)
!12496 = distinct !DISubprogram(name: "z_swap", scope: !10518, file: !10518, line: 193, type: !12497, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12499)
!12497 = !DISubroutineType(types: !12498)
!12498 = !{!103, !11886, !11875}
!12499 = !{!12500, !12495}
!12500 = !DILocalVariable(name: "lock", arg: 1, scope: !12496, file: !10518, line: 193, type: !11886)
!12501 = !DILocation(line: 0, scope: !12496, inlinedAt: !12502)
!12502 = distinct !DILocation(line: 970, column: 3, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12491, file: !2171, line: 969, column: 39)
!12504 = !DILocation(line: 196, column: 9, scope: !12496, inlinedAt: !12502)
!12505 = !DILocation(line: 971, column: 2, scope: !12503)
!12506 = !DILocation(line: 0, scope: !11910, inlinedAt: !12507)
!12507 = distinct !DILocation(line: 972, column: 3, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12491, file: !2171, line: 971, column: 9)
!12509 = !DILocation(line: 0, scope: !11918, inlinedAt: !12510)
!12510 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12507)
!12511 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12510)
!12512 = !DILocation(line: 975, column: 1, scope: !12485)
!12513 = distinct !DISubprogram(name: "resched", scope: !2171, file: !2171, line: 940, type: !12514, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12516)
!12514 = !DISubroutineType(types: !12515)
!12515 = !{!580, !404}
!12516 = !{!12517}
!12517 = !DILocalVariable(name: "key", arg: 1, scope: !12513, file: !2171, line: 940, type: !404)
!12518 = !DILocation(line: 0, scope: !12513)
!12519 = !DILocalVariable(name: "key", arg: 1, scope: !12520, file: !5762, line: 112, type: !32)
!12520 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5762, file: !5762, line: 112, type: !12521, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12523)
!12521 = !DISubroutineType(types: !12522)
!12522 = !{!580, !32}
!12523 = !{!12519}
!12524 = !DILocation(line: 0, scope: !12520, inlinedAt: !12525)
!12525 = distinct !DILocation(line: 946, column: 9, scope: !12513)
!12526 = !DILocation(line: 115, column: 13, scope: !12520, inlinedAt: !12525)
!12527 = !DILocation(line: 946, column: 32, scope: !12513)
!12528 = !DILocation(line: 1031, column: 3, scope: !12529, inlinedAt: !12532)
!12529 = distinct !DISubprogram(name: "__get_IPSR", scope: !5647, file: !5647, line: 1027, type: !5728, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12530)
!12530 = !{!12531}
!12531 = !DILocalVariable(name: "result", scope: !12529, file: !5647, line: 1029, type: !404)
!12532 = distinct !DILocation(line: 48, column: 10, scope: !12533, inlinedAt: !12534)
!12533 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6382, file: !6382, line: 46, type: !6383, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !675)
!12534 = distinct !DILocation(line: 946, column: 36, scope: !12513)
!12535 = !{i64 7007797}
!12536 = !DILocation(line: 0, scope: !12529, inlinedAt: !12532)
!12537 = !DILocation(line: 48, column: 9, scope: !12533, inlinedAt: !12534)
!12538 = !DILocation(line: 946, column: 2, scope: !12513)
!12539 = distinct !DISubprogram(name: "need_swap", scope: !2171, file: !2171, line: 953, type: !6383, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12540)
!12540 = !{!12541}
!12541 = !DILocalVariable(name: "new_thread", scope: !12539, file: !2171, line: 959, type: !2072)
!12542 = !DILocation(line: 962, column: 31, scope: !12539)
!12543 = !DILocation(line: 0, scope: !12539)
!12544 = !DILocation(line: 963, column: 23, scope: !12539)
!12545 = !DILocation(line: 963, column: 20, scope: !12539)
!12546 = !DILocation(line: 963, column: 2, scope: !12539)
!12547 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10518, file: !10518, line: 181, type: !5657, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12548)
!12548 = !{!12549, !12550}
!12549 = !DILocalVariable(name: "key", arg: 1, scope: !12547, file: !10518, line: 181, type: !32)
!12550 = !DILocalVariable(name: "ret", scope: !12547, file: !10518, line: 183, type: !103)
!12551 = !DILocation(line: 0, scope: !12547)
!12552 = !DILocation(line: 185, column: 8, scope: !12547)
!12553 = !DILocation(line: 186, column: 2, scope: !12547)
!12554 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2171, file: !2171, line: 665, type: !11841, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12555)
!12555 = !{!12556, !12557, !12559}
!12556 = !DILocalVariable(name: "thread", arg: 1, scope: !12554, file: !2171, line: 665, type: !2072)
!12557 = !DILocalVariable(name: "__i", scope: !12558, file: !2171, line: 671, type: !11875)
!12558 = distinct !DILexicalBlock(scope: !12554, file: !2171, line: 671, column: 2)
!12559 = !DILocalVariable(name: "__key", scope: !12558, file: !2171, line: 671, type: !11875)
!12560 = !DILocation(line: 0, scope: !12554)
!12561 = !DILocation(line: 669, column: 8, scope: !12554)
!12562 = !DILocation(line: 0, scope: !12558)
!12563 = !DILocation(line: 0, scope: !11883, inlinedAt: !12564)
!12564 = distinct !DILocation(line: 671, column: 2, scope: !12558)
!12565 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12566)
!12566 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12564)
!12567 = !DILocation(line: 0, scope: !11892, inlinedAt: !12566)
!12568 = !DILocation(line: 672, column: 7, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12570, file: !2171, line: 672, column: 7)
!12570 = distinct !DILexicalBlock(scope: !12571, file: !2171, line: 671, column: 26)
!12571 = distinct !DILexicalBlock(scope: !12558, file: !2171, line: 671, column: 2)
!12572 = !DILocation(line: 672, column: 7, scope: !12570)
!12573 = !DILocation(line: 0, scope: !12054, inlinedAt: !12574)
!12574 = distinct !DILocation(line: 673, column: 4, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12569, file: !2171, line: 672, column: 35)
!12576 = !DILocation(line: 266, column: 15, scope: !12054, inlinedAt: !12574)
!12577 = !DILocation(line: 266, column: 28, scope: !12054, inlinedAt: !12574)
!12578 = !DILocation(line: 0, scope: !12062, inlinedAt: !12579)
!12579 = distinct !DILocation(line: 268, column: 3, scope: !12066, inlinedAt: !12574)
!12580 = !DILocation(line: 234, column: 2, scope: !12062, inlinedAt: !12579)
!12581 = !DILocation(line: 674, column: 3, scope: !12575)
!12582 = !DILocation(line: 675, column: 3, scope: !12570)
!12583 = !DILocation(line: 676, column: 26, scope: !12570)
!12584 = !DILocation(line: 676, column: 23, scope: !12570)
!12585 = !DILocation(line: 676, column: 3, scope: !12570)
!12586 = !DILocation(line: 0, scope: !11910, inlinedAt: !12587)
!12587 = distinct !DILocation(line: 671, column: 2, scope: !12571)
!12588 = !DILocation(line: 0, scope: !11918, inlinedAt: !12589)
!12589 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12587)
!12590 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12589)
!12591 = !DILocation(line: 679, column: 16, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12554, file: !2171, line: 679, column: 6)
!12593 = !DILocation(line: 679, column: 13, scope: !12592)
!12594 = !DILocation(line: 679, column: 6, scope: !12554)
!12595 = !DILocation(line: 680, column: 3, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12592, file: !2171, line: 679, column: 26)
!12597 = !DILocation(line: 681, column: 2, scope: !12596)
!12598 = !DILocation(line: 684, column: 1, scope: !12554)
!12599 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !10786, file: !10786, line: 52, type: !11859, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12600)
!12600 = !{!12601}
!12601 = !DILocalVariable(name: "thread", arg: 1, scope: !12599, file: !10786, line: 52, type: !2072)
!12602 = !DILocation(line: 0, scope: !12599)
!12603 = !DILocation(line: 54, column: 39, scope: !12599)
!12604 = !DILocation(line: 54, column: 9, scope: !12599)
!12605 = !DILocation(line: 54, column: 2, scope: !12599)
!12606 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10416, file: !10416, line: 141, type: !11841, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12607)
!12607 = !{!12608}
!12608 = !DILocalVariable(name: "thread", arg: 1, scope: !12606, file: !10416, line: 141, type: !2072)
!12609 = !DILocation(line: 0, scope: !12606)
!12610 = !DILocation(line: 143, column: 15, scope: !12606)
!12611 = !DILocation(line: 143, column: 28, scope: !12606)
!12612 = !DILocation(line: 146, column: 1, scope: !12606)
!12613 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10416, file: !10416, line: 73, type: !2944, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !675)
!12614 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12615)
!12615 = distinct !DILocation(line: 75, column: 30, scope: !12613)
!12616 = !DILocation(line: 0, scope: !11892, inlinedAt: !12615)
!12617 = !DILocation(line: 75, column: 9, scope: !12613)
!12618 = !DILocation(line: 76, column: 1, scope: !12613)
!12619 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2171, file: !2171, line: 977, type: !5738, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12620)
!12620 = !{!12621}
!12621 = !DILocalVariable(name: "key", arg: 1, scope: !12619, file: !2171, line: 977, type: !404)
!12622 = !DILocation(line: 0, scope: !12619)
!12623 = !DILocation(line: 979, column: 6, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12619, file: !2171, line: 979, column: 6)
!12625 = !DILocation(line: 979, column: 6, scope: !12619)
!12626 = !DILocation(line: 980, column: 3, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12624, file: !2171, line: 979, column: 20)
!12628 = !DILocation(line: 981, column: 2, scope: !12627)
!12629 = !DILocation(line: 0, scope: !11918, inlinedAt: !12630)
!12630 = distinct !DILocation(line: 982, column: 3, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12624, file: !2171, line: 981, column: 9)
!12632 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12630)
!12633 = !DILocation(line: 985, column: 1, scope: !12619)
!12634 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2171, file: !2171, line: 695, type: !11841, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12635)
!12635 = !{!12636, !12637}
!12636 = !DILocalVariable(name: "thread", arg: 1, scope: !12634, file: !2171, line: 695, type: !2072)
!12637 = !DILocalVariable(name: "key", scope: !12634, file: !2171, line: 699, type: !11875)
!12638 = !DILocation(line: 0, scope: !12634)
!12639 = !DILocation(line: 0, scope: !11883, inlinedAt: !12640)
!12640 = distinct !DILocation(line: 699, column: 25, scope: !12634)
!12641 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12642)
!12642 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12640)
!12643 = !DILocation(line: 0, scope: !11892, inlinedAt: !12642)
!12644 = !DILocation(line: 702, column: 7, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12634, file: !2171, line: 702, column: 6)
!12646 = !DILocation(line: 702, column: 6, scope: !12634)
!12647 = !DILocation(line: 0, scope: !11910, inlinedAt: !12648)
!12648 = distinct !DILocation(line: 703, column: 3, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12645, file: !2171, line: 702, column: 38)
!12650 = !DILocation(line: 0, scope: !11918, inlinedAt: !12651)
!12651 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12648)
!12652 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12651)
!12653 = !DILocation(line: 704, column: 3, scope: !12649)
!12654 = !DILocation(line: 707, column: 2, scope: !12634)
!12655 = !DILocation(line: 708, column: 2, scope: !12634)
!12656 = !DILocation(line: 710, column: 2, scope: !12634)
!12657 = !DILocation(line: 713, column: 1, scope: !12634)
!12658 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10416, file: !10416, line: 96, type: !12003, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12659)
!12659 = !{!12660}
!12660 = !DILocalVariable(name: "thread", arg: 1, scope: !12658, file: !10416, line: 96, type: !2072)
!12661 = !DILocation(line: 0, scope: !12658)
!12662 = !DILocation(line: 98, column: 23, scope: !12658)
!12663 = !DILocation(line: 98, column: 36, scope: !12658)
!12664 = !DILocation(line: 98, column: 57, scope: !12658)
!12665 = !DILocation(line: 98, column: 2, scope: !12658)
!12666 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10416, file: !10416, line: 148, type: !11841, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12667)
!12667 = !{!12668}
!12668 = !DILocalVariable(name: "thread", arg: 1, scope: !12666, file: !10416, line: 148, type: !2072)
!12669 = !DILocation(line: 0, scope: !12666)
!12670 = !DILocation(line: 150, column: 15, scope: !12666)
!12671 = !DILocation(line: 150, column: 28, scope: !12666)
!12672 = !DILocation(line: 153, column: 1, scope: !12666)
!12673 = distinct !DISubprogram(name: "z_pend_thread", scope: !2171, file: !2171, line: 770, type: !12674, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12680)
!12674 = !DISubroutineType(types: !12675)
!12675 = !{null, !2072, !2103, !12676}
!12676 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !549, line: 67, baseType: !12677)
!12677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 65, size: 64, elements: !12678)
!12678 = !{!12679}
!12679 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12677, file: !549, line: 66, baseType: !548, size: 64)
!12680 = !{!12681, !12682, !12683, !12684, !12686}
!12681 = !DILocalVariable(name: "thread", arg: 1, scope: !12673, file: !2171, line: 770, type: !2072)
!12682 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12673, file: !2171, line: 770, type: !2103)
!12683 = !DILocalVariable(name: "timeout", arg: 3, scope: !12673, file: !2171, line: 771, type: !12676)
!12684 = !DILocalVariable(name: "__i", scope: !12685, file: !2171, line: 774, type: !11875)
!12685 = distinct !DILexicalBlock(scope: !12673, file: !2171, line: 774, column: 2)
!12686 = !DILocalVariable(name: "__key", scope: !12685, file: !2171, line: 774, type: !11875)
!12687 = !DILocation(line: 0, scope: !12673)
!12688 = !DILocation(line: 0, scope: !12685)
!12689 = !DILocation(line: 0, scope: !11883, inlinedAt: !12690)
!12690 = distinct !DILocation(line: 774, column: 2, scope: !12685)
!12691 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12692)
!12692 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12690)
!12693 = !DILocation(line: 0, scope: !11892, inlinedAt: !12692)
!12694 = !DILocation(line: 775, column: 3, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12696, file: !2171, line: 774, column: 26)
!12696 = distinct !DILexicalBlock(scope: !12685, file: !2171, line: 774, column: 2)
!12697 = !DILocation(line: 0, scope: !11910, inlinedAt: !12698)
!12698 = distinct !DILocation(line: 774, column: 2, scope: !12696)
!12699 = !DILocation(line: 0, scope: !11918, inlinedAt: !12700)
!12700 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12698)
!12701 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12700)
!12702 = !DILocation(line: 777, column: 1, scope: !12673)
!12703 = distinct !DISubprogram(name: "pend_locked", scope: !2171, file: !2171, line: 760, type: !12674, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12704)
!12704 = !{!12705, !12706, !12707}
!12705 = !DILocalVariable(name: "thread", arg: 1, scope: !12703, file: !2171, line: 760, type: !2072)
!12706 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12703, file: !2171, line: 760, type: !2103)
!12707 = !DILocalVariable(name: "timeout", arg: 3, scope: !12703, file: !2171, line: 761, type: !12676)
!12708 = !DILocation(line: 0, scope: !12703)
!12709 = !DILocation(line: 766, column: 2, scope: !12703)
!12710 = !DILocation(line: 767, column: 2, scope: !12703)
!12711 = !DILocation(line: 768, column: 1, scope: !12703)
!12712 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2171, file: !2171, line: 740, type: !12713, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12715)
!12713 = !DISubroutineType(types: !12714)
!12714 = !{null, !2072, !2103}
!12715 = !{!12716, !12717}
!12716 = !DILocalVariable(name: "thread", arg: 1, scope: !12712, file: !2171, line: 740, type: !2072)
!12717 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12712, file: !2171, line: 740, type: !2103)
!12718 = !DILocation(line: 0, scope: !12712)
!12719 = !DILocation(line: 742, column: 2, scope: !12712)
!12720 = !DILocation(line: 743, column: 2, scope: !12712)
!12721 = !DILocation(line: 747, column: 13, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12712, file: !2171, line: 747, column: 6)
!12723 = !DILocation(line: 747, column: 6, scope: !12712)
!12724 = !DILocation(line: 748, column: 16, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12722, file: !2171, line: 747, column: 22)
!12726 = !DILocation(line: 748, column: 26, scope: !12725)
!12727 = !DILocation(line: 749, column: 28, scope: !12725)
!12728 = !DILocation(line: 0, scope: !12085, inlinedAt: !12729)
!12729 = distinct !DILocation(line: 749, column: 3, scope: !12725)
!12730 = !DILocation(line: 188, column: 2, scope: !12095, inlinedAt: !12729)
!12731 = !DILocation(line: 188, column: 2, scope: !12097, inlinedAt: !12729)
!12732 = !DILocation(line: 0, scope: !12095, inlinedAt: !12729)
!12733 = !DILocation(line: 189, column: 7, scope: !12100, inlinedAt: !12729)
!12734 = !DILocation(line: 189, column: 35, scope: !12100, inlinedAt: !12729)
!12735 = !DILocation(line: 189, column: 7, scope: !12101, inlinedAt: !12729)
!12736 = !DILocation(line: 191, column: 21, scope: !12105, inlinedAt: !12729)
!12737 = !DILocation(line: 190, column: 4, scope: !12105, inlinedAt: !12729)
!12738 = !DILocation(line: 192, column: 4, scope: !12105, inlinedAt: !12729)
!12739 = distinct !{!12739, !12730, !12740}
!12740 = !DILocation(line: 194, column: 2, scope: !12095, inlinedAt: !12729)
!12741 = !DILocation(line: 196, column: 37, scope: !12085, inlinedAt: !12729)
!12742 = !DILocation(line: 196, column: 2, scope: !12085, inlinedAt: !12729)
!12743 = !DILocation(line: 197, column: 1, scope: !12085, inlinedAt: !12729)
!12744 = !DILocation(line: 751, column: 1, scope: !12712)
!12745 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2171, file: !2171, line: 753, type: !12746, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12748)
!12746 = !DISubroutineType(types: !12747)
!12747 = !{null, !2072, !12676}
!12748 = !{!12749, !12750}
!12749 = !DILocalVariable(name: "thread", arg: 1, scope: !12745, file: !2171, line: 753, type: !2072)
!12750 = !DILocalVariable(name: "timeout", arg: 2, scope: !12745, file: !2171, line: 753, type: !12676)
!12751 = !DILocation(line: 0, scope: !12745)
!12752 = !DILocation(line: 755, column: 7, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12745, file: !2171, line: 755, column: 6)
!12754 = !DILocation(line: 755, column: 6, scope: !12745)
!12755 = !DILocation(line: 756, column: 3, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12753, file: !2171, line: 755, column: 41)
!12757 = !DILocation(line: 757, column: 2, scope: !12756)
!12758 = !DILocation(line: 758, column: 1, scope: !12745)
!12759 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !10786, file: !10786, line: 47, type: !12746, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12760)
!12760 = !{!12761, !12762}
!12761 = !DILocalVariable(name: "thread", arg: 1, scope: !12759, file: !10786, line: 47, type: !2072)
!12762 = !DILocalVariable(name: "ticks", arg: 2, scope: !12759, file: !10786, line: 47, type: !12676)
!12763 = !DILocation(line: 0, scope: !12759)
!12764 = !DILocation(line: 49, column: 30, scope: !12759)
!12765 = !DILocation(line: 49, column: 2, scope: !12759)
!12766 = !DILocation(line: 50, column: 1, scope: !12759)
!12767 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2171, file: !2171, line: 795, type: !2129, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12768)
!12768 = !{!12769, !12770, !12771, !12773, !12774}
!12769 = !DILocalVariable(name: "timeout", arg: 1, scope: !12767, file: !2171, line: 795, type: !2131)
!12770 = !DILocalVariable(name: "thread", scope: !12767, file: !2171, line: 797, type: !2072)
!12771 = !DILocalVariable(name: "__i", scope: !12772, file: !2171, line: 800, type: !11875)
!12772 = distinct !DILexicalBlock(scope: !12767, file: !2171, line: 800, column: 2)
!12773 = !DILocalVariable(name: "__key", scope: !12772, file: !2171, line: 800, type: !11875)
!12774 = !DILocalVariable(name: "killed", scope: !12775, file: !2171, line: 801, type: !580)
!12775 = distinct !DILexicalBlock(scope: !12776, file: !2171, line: 800, column: 26)
!12776 = distinct !DILexicalBlock(scope: !12772, file: !2171, line: 800, column: 2)
!12777 = !DILocation(line: 0, scope: !12767)
!12778 = !DILocation(line: 797, column: 28, scope: !12767)
!12779 = !DILocation(line: 0, scope: !12772)
!12780 = !DILocation(line: 0, scope: !11883, inlinedAt: !12781)
!12781 = distinct !DILocation(line: 800, column: 2, scope: !12772)
!12782 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12783)
!12783 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12781)
!12784 = !DILocation(line: 0, scope: !11892, inlinedAt: !12783)
!12785 = !DILocation(line: 801, column: 27, scope: !12775)
!12786 = !DILocation(line: 801, column: 32, scope: !12775)
!12787 = !DILocation(line: 801, column: 61, scope: !12775)
!12788 = !DILocation(line: 0, scope: !12775)
!12789 = !DILocation(line: 804, column: 7, scope: !12775)
!12790 = !DILocation(line: 805, column: 21, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12792, file: !2171, line: 805, column: 8)
!12792 = distinct !DILexicalBlock(scope: !12793, file: !2171, line: 804, column: 16)
!12793 = distinct !DILexicalBlock(scope: !12775, file: !2171, line: 804, column: 7)
!12794 = !DILocation(line: 805, column: 31, scope: !12791)
!12795 = !DILocation(line: 805, column: 8, scope: !12792)
!12796 = !DILocation(line: 806, column: 5, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12791, file: !2171, line: 805, column: 40)
!12798 = !DILocation(line: 807, column: 4, scope: !12797)
!12799 = !DILocation(line: 808, column: 4, scope: !12792)
!12800 = !DILocation(line: 809, column: 4, scope: !12792)
!12801 = !DILocation(line: 810, column: 4, scope: !12792)
!12802 = !DILocation(line: 811, column: 3, scope: !12792)
!12803 = !DILocation(line: 0, scope: !11910, inlinedAt: !12804)
!12804 = distinct !DILocation(line: 800, column: 2, scope: !12776)
!12805 = !DILocation(line: 0, scope: !11918, inlinedAt: !12806)
!12806 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12804)
!12807 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12806)
!12808 = !DILocation(line: 813, column: 1, scope: !12767)
!12809 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2171, file: !2171, line: 779, type: !11841, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12810)
!12810 = !{!12811}
!12811 = !DILocalVariable(name: "thread", arg: 1, scope: !12809, file: !2171, line: 779, type: !2072)
!12812 = !DILocation(line: 0, scope: !12809)
!12813 = !DILocation(line: 781, column: 2, scope: !12809)
!12814 = !DILocation(line: 782, column: 2, scope: !12809)
!12815 = !DILocation(line: 783, column: 15, scope: !12809)
!12816 = !DILocation(line: 783, column: 25, scope: !12809)
!12817 = !DILocation(line: 784, column: 1, scope: !12809)
!12818 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10416, file: !10416, line: 165, type: !11841, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12819)
!12819 = !{!12820}
!12820 = !DILocalVariable(name: "thread", arg: 1, scope: !12818, file: !10416, line: 165, type: !2072)
!12821 = !DILocation(line: 0, scope: !12818)
!12822 = !DILocation(line: 167, column: 15, scope: !12818)
!12823 = !DILocation(line: 167, column: 28, scope: !12818)
!12824 = !DILocation(line: 168, column: 1, scope: !12818)
!12825 = distinct !DISubprogram(name: "unready_thread", scope: !2171, file: !2171, line: 731, type: !11841, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12826)
!12826 = !{!12827}
!12827 = !DILocalVariable(name: "thread", arg: 1, scope: !12825, file: !2171, line: 731, type: !2072)
!12828 = !DILocation(line: 0, scope: !12825)
!12829 = !DILocation(line: 733, column: 6, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12825, file: !2171, line: 733, column: 6)
!12831 = !DILocation(line: 733, column: 6, scope: !12825)
!12832 = !DILocation(line: 0, scope: !12054, inlinedAt: !12833)
!12833 = distinct !DILocation(line: 734, column: 3, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12830, file: !2171, line: 733, column: 34)
!12835 = !DILocation(line: 266, column: 15, scope: !12054, inlinedAt: !12833)
!12836 = !DILocation(line: 266, column: 28, scope: !12054, inlinedAt: !12833)
!12837 = !DILocation(line: 0, scope: !12062, inlinedAt: !12838)
!12838 = distinct !DILocation(line: 268, column: 3, scope: !12066, inlinedAt: !12833)
!12839 = !DILocation(line: 234, column: 2, scope: !12062, inlinedAt: !12838)
!12840 = !DILocation(line: 735, column: 2, scope: !12834)
!12841 = !DILocation(line: 736, column: 25, scope: !12825)
!12842 = !DILocation(line: 736, column: 22, scope: !12825)
!12843 = !DILocation(line: 736, column: 2, scope: !12825)
!12844 = !DILocation(line: 737, column: 1, scope: !12825)
!12845 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10416, file: !10416, line: 160, type: !11841, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12846)
!12846 = !{!12847}
!12847 = !DILocalVariable(name: "thread", arg: 1, scope: !12845, file: !10416, line: 160, type: !2072)
!12848 = !DILocation(line: 0, scope: !12845)
!12849 = !DILocation(line: 162, column: 15, scope: !12845)
!12850 = !DILocation(line: 162, column: 28, scope: !12845)
!12851 = !DILocation(line: 163, column: 1, scope: !12845)
!12852 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2171, file: !2171, line: 786, type: !11841, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12853)
!12853 = !{!12854, !12855, !12857}
!12854 = !DILocalVariable(name: "thread", arg: 1, scope: !12852, file: !2171, line: 786, type: !2072)
!12855 = !DILocalVariable(name: "__i", scope: !12856, file: !2171, line: 788, type: !11875)
!12856 = distinct !DILexicalBlock(scope: !12852, file: !2171, line: 788, column: 2)
!12857 = !DILocalVariable(name: "__key", scope: !12856, file: !2171, line: 788, type: !11875)
!12858 = !DILocation(line: 0, scope: !12852)
!12859 = !DILocation(line: 0, scope: !12856)
!12860 = !DILocation(line: 0, scope: !11883, inlinedAt: !12861)
!12861 = distinct !DILocation(line: 788, column: 2, scope: !12856)
!12862 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12863)
!12863 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12861)
!12864 = !DILocation(line: 0, scope: !11892, inlinedAt: !12863)
!12865 = !DILocation(line: 789, column: 3, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !2171, line: 788, column: 26)
!12867 = distinct !DILexicalBlock(scope: !12856, file: !2171, line: 788, column: 2)
!12868 = !DILocation(line: 0, scope: !11910, inlinedAt: !12869)
!12869 = distinct !DILocation(line: 788, column: 2, scope: !12867)
!12870 = !DILocation(line: 0, scope: !11918, inlinedAt: !12871)
!12871 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12869)
!12872 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12871)
!12873 = !DILocation(line: 791, column: 1, scope: !12852)
!12874 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2171, file: !2171, line: 816, type: !12875, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12877)
!12875 = !DISubroutineType(types: !12876)
!12876 = !{!103, !404, !2103, !12676}
!12877 = !{!12878, !12879, !12880, !12881, !12882, !12884}
!12878 = !DILocalVariable(name: "key", arg: 1, scope: !12874, file: !2171, line: 816, type: !404)
!12879 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12874, file: !2171, line: 816, type: !2103)
!12880 = !DILocalVariable(name: "timeout", arg: 3, scope: !12874, file: !2171, line: 816, type: !12676)
!12881 = !DILocalVariable(name: "ret", scope: !12874, file: !2171, line: 828, type: !103)
!12882 = !DILocalVariable(name: "__i", scope: !12883, file: !2171, line: 829, type: !11875)
!12883 = distinct !DILexicalBlock(scope: !12874, file: !2171, line: 829, column: 2)
!12884 = !DILocalVariable(name: "__key", scope: !12883, file: !2171, line: 829, type: !11875)
!12885 = !DILocation(line: 0, scope: !12874)
!12886 = !DILocation(line: 823, column: 14, scope: !12874)
!12887 = !DILocation(line: 823, column: 2, scope: !12874)
!12888 = !DILocation(line: 826, column: 20, scope: !12874)
!12889 = !DILocation(line: 826, column: 18, scope: !12874)
!12890 = !DILocation(line: 828, column: 12, scope: !12874)
!12891 = !DILocation(line: 0, scope: !12883)
!12892 = !DILocation(line: 0, scope: !11883, inlinedAt: !12893)
!12893 = distinct !DILocation(line: 829, column: 2, scope: !12883)
!12894 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12895)
!12895 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12893)
!12896 = !DILocation(line: 0, scope: !11892, inlinedAt: !12895)
!12897 = !DILocation(line: 830, column: 7, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12899, file: !2171, line: 830, column: 7)
!12899 = distinct !DILexicalBlock(scope: !12900, file: !2171, line: 829, column: 26)
!12900 = distinct !DILexicalBlock(scope: !12883, file: !2171, line: 829, column: 2)
!12901 = !DILocation(line: 830, column: 26, scope: !12898)
!12902 = !DILocation(line: 830, column: 23, scope: !12898)
!12903 = !DILocation(line: 830, column: 7, scope: !12899)
!12904 = !DILocation(line: 831, column: 20, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12898, file: !2171, line: 830, column: 36)
!12906 = !DILocation(line: 832, column: 3, scope: !12905)
!12907 = !DILocation(line: 0, scope: !11910, inlinedAt: !12908)
!12908 = distinct !DILocation(line: 829, column: 2, scope: !12900)
!12909 = !DILocation(line: 0, scope: !11918, inlinedAt: !12910)
!12910 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12908)
!12911 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12910)
!12912 = !DILocation(line: 834, column: 2, scope: !12874)
!12913 = distinct !DISubprogram(name: "z_pend_curr", scope: !2171, file: !2171, line: 840, type: !12914, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12916)
!12914 = !DISubroutineType(types: !12915)
!12915 = !{!103, !11886, !11875, !2103, !12676}
!12916 = !{!12917, !12918, !12919, !12920}
!12917 = !DILocalVariable(name: "lock", arg: 1, scope: !12913, file: !2171, line: 840, type: !11886)
!12918 = !DILocalVariable(name: "key", arg: 2, scope: !12913, file: !2171, line: 840, type: !11875)
!12919 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12913, file: !2171, line: 841, type: !2103)
!12920 = !DILocalVariable(name: "timeout", arg: 4, scope: !12913, file: !2171, line: 841, type: !12676)
!12921 = !DILocation(line: 0, scope: !12913)
!12922 = !DILocation(line: 844, column: 20, scope: !12913)
!12923 = !DILocation(line: 844, column: 18, scope: !12913)
!12924 = !DILocation(line: 0, scope: !11883, inlinedAt: !12925)
!12925 = distinct !DILocation(line: 856, column: 9, scope: !12913)
!12926 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12927)
!12927 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12925)
!12928 = !DILocation(line: 0, scope: !11892, inlinedAt: !12927)
!12929 = !DILocation(line: 857, column: 14, scope: !12913)
!12930 = !DILocation(line: 857, column: 2, scope: !12913)
!12931 = !DILocation(line: 0, scope: !12496, inlinedAt: !12932)
!12932 = distinct !DILocation(line: 859, column: 9, scope: !12913)
!12933 = !DILocation(line: 196, column: 9, scope: !12496, inlinedAt: !12932)
!12934 = !DILocation(line: 859, column: 2, scope: !12913)
!12935 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2171, file: !2171, line: 862, type: !12936, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12938)
!12936 = !DISubroutineType(types: !12937)
!12937 = !{!2072, !2103}
!12938 = !{!12939, !12940, !12941, !12943}
!12939 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12935, file: !2171, line: 862, type: !2103)
!12940 = !DILocalVariable(name: "thread", scope: !12935, file: !2171, line: 864, type: !2072)
!12941 = !DILocalVariable(name: "__i", scope: !12942, file: !2171, line: 866, type: !11875)
!12942 = distinct !DILexicalBlock(scope: !12935, file: !2171, line: 866, column: 2)
!12943 = !DILocalVariable(name: "__key", scope: !12942, file: !2171, line: 866, type: !11875)
!12944 = !DILocation(line: 0, scope: !12935)
!12945 = !DILocation(line: 0, scope: !12942)
!12946 = !DILocation(line: 0, scope: !11883, inlinedAt: !12947)
!12947 = distinct !DILocation(line: 866, column: 2, scope: !12942)
!12948 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12949)
!12949 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12947)
!12950 = !DILocation(line: 0, scope: !11892, inlinedAt: !12949)
!12951 = !DILocation(line: 867, column: 12, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12953, file: !2171, line: 866, column: 26)
!12953 = distinct !DILexicalBlock(scope: !12942, file: !2171, line: 866, column: 2)
!12954 = !DILocation(line: 869, column: 14, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12952, file: !2171, line: 869, column: 7)
!12956 = !DILocation(line: 869, column: 7, scope: !12952)
!12957 = !DILocation(line: 870, column: 4, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12955, file: !2171, line: 869, column: 23)
!12959 = !DILocation(line: 871, column: 3, scope: !12958)
!12960 = !DILocation(line: 0, scope: !11910, inlinedAt: !12961)
!12961 = distinct !DILocation(line: 866, column: 2, scope: !12953)
!12962 = !DILocation(line: 0, scope: !11918, inlinedAt: !12963)
!12963 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12961)
!12964 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12963)
!12965 = !DILocation(line: 874, column: 2, scope: !12935)
!12966 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2171, file: !2171, line: 877, type: !12936, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12967)
!12967 = !{!12968, !12969, !12970, !12972}
!12968 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12966, file: !2171, line: 877, type: !2103)
!12969 = !DILocalVariable(name: "thread", scope: !12966, file: !2171, line: 879, type: !2072)
!12970 = !DILocalVariable(name: "__i", scope: !12971, file: !2171, line: 881, type: !11875)
!12971 = distinct !DILexicalBlock(scope: !12966, file: !2171, line: 881, column: 2)
!12972 = !DILocalVariable(name: "__key", scope: !12971, file: !2171, line: 881, type: !11875)
!12973 = !DILocation(line: 0, scope: !12966)
!12974 = !DILocation(line: 0, scope: !12971)
!12975 = !DILocation(line: 0, scope: !11883, inlinedAt: !12976)
!12976 = distinct !DILocation(line: 881, column: 2, scope: !12971)
!12977 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !12978)
!12978 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !12976)
!12979 = !DILocation(line: 0, scope: !11892, inlinedAt: !12978)
!12980 = !DILocation(line: 882, column: 12, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12982, file: !2171, line: 881, column: 26)
!12982 = distinct !DILexicalBlock(scope: !12971, file: !2171, line: 881, column: 2)
!12983 = !DILocation(line: 884, column: 14, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12981, file: !2171, line: 884, column: 7)
!12985 = !DILocation(line: 884, column: 7, scope: !12981)
!12986 = !DILocation(line: 885, column: 4, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12984, file: !2171, line: 884, column: 23)
!12988 = !DILocation(line: 886, column: 10, scope: !12987)
!12989 = !DILocation(line: 887, column: 3, scope: !12987)
!12990 = !DILocation(line: 0, scope: !11910, inlinedAt: !12991)
!12991 = distinct !DILocation(line: 881, column: 2, scope: !12982)
!12992 = !DILocation(line: 0, scope: !11918, inlinedAt: !12993)
!12993 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !12991)
!12994 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !12993)
!12995 = !DILocation(line: 890, column: 2, scope: !12966)
!12996 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2171, file: !2171, line: 893, type: !11841, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !12997)
!12997 = !{!12998}
!12998 = !DILocalVariable(name: "thread", arg: 1, scope: !12996, file: !2171, line: 893, type: !2072)
!12999 = !DILocation(line: 0, scope: !12996)
!13000 = !DILocation(line: 0, scope: !12852, inlinedAt: !13001)
!13001 = distinct !DILocation(line: 895, column: 2, scope: !12996)
!13002 = !DILocation(line: 0, scope: !12856, inlinedAt: !13001)
!13003 = !DILocation(line: 0, scope: !11883, inlinedAt: !13004)
!13004 = distinct !DILocation(line: 788, column: 2, scope: !12856, inlinedAt: !13001)
!13005 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !13006)
!13006 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !13004)
!13007 = !DILocation(line: 0, scope: !11892, inlinedAt: !13006)
!13008 = !DILocation(line: 789, column: 3, scope: !12866, inlinedAt: !13001)
!13009 = !DILocation(line: 0, scope: !11910, inlinedAt: !13010)
!13010 = distinct !DILocation(line: 788, column: 2, scope: !12867, inlinedAt: !13001)
!13011 = !DILocation(line: 0, scope: !11918, inlinedAt: !13012)
!13012 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !13010)
!13013 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !13012)
!13014 = !DILocation(line: 896, column: 8, scope: !12996)
!13015 = !DILocation(line: 897, column: 1, scope: !12996)
!13016 = distinct !DISubprogram(name: "z_set_prio", scope: !2171, file: !2171, line: 902, type: !12205, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13017)
!13017 = !{!13018, !13019, !13020, !13021, !13023}
!13018 = !DILocalVariable(name: "thread", arg: 1, scope: !13016, file: !2171, line: 902, type: !2072)
!13019 = !DILocalVariable(name: "prio", arg: 2, scope: !13016, file: !2171, line: 902, type: !103)
!13020 = !DILocalVariable(name: "need_sched", scope: !13016, file: !2171, line: 904, type: !580)
!13021 = !DILocalVariable(name: "__i", scope: !13022, file: !2171, line: 906, type: !11875)
!13022 = distinct !DILexicalBlock(scope: !13016, file: !2171, line: 906, column: 2)
!13023 = !DILocalVariable(name: "__key", scope: !13022, file: !2171, line: 906, type: !11875)
!13024 = !DILocation(line: 0, scope: !13016)
!13025 = !DILocation(line: 0, scope: !13022)
!13026 = !DILocation(line: 0, scope: !11883, inlinedAt: !13027)
!13027 = distinct !DILocation(line: 906, column: 2, scope: !13022)
!13028 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !13029)
!13029 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !13027)
!13030 = !DILocation(line: 0, scope: !11892, inlinedAt: !13029)
!13031 = !DILocation(line: 907, column: 16, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13033, file: !2171, line: 906, column: 26)
!13033 = distinct !DILexicalBlock(scope: !13022, file: !2171, line: 906, column: 2)
!13034 = !DILocation(line: 909, column: 7, scope: !13032)
!13035 = !DILocation(line: 0, scope: !12054, inlinedAt: !13036)
!13036 = distinct !DILocation(line: 912, column: 5, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !13038, file: !2171, line: 911, column: 63)
!13038 = distinct !DILexicalBlock(scope: !13039, file: !2171, line: 911, column: 8)
!13039 = distinct !DILexicalBlock(scope: !13040, file: !2171, line: 909, column: 19)
!13040 = distinct !DILexicalBlock(scope: !13032, file: !2171, line: 909, column: 7)
!13041 = !DILocation(line: 266, column: 28, scope: !12054, inlinedAt: !13036)
!13042 = !DILocation(line: 0, scope: !12062, inlinedAt: !13043)
!13043 = distinct !DILocation(line: 268, column: 3, scope: !12066, inlinedAt: !13036)
!13044 = !DILocation(line: 234, column: 2, scope: !12062, inlinedAt: !13043)
!13045 = !DILocation(line: 913, column: 23, scope: !13037)
!13046 = !DILocation(line: 0, scope: !12071, inlinedAt: !13047)
!13047 = distinct !DILocation(line: 914, column: 5, scope: !13037)
!13048 = !DILocation(line: 252, column: 28, scope: !12071, inlinedAt: !13047)
!13049 = !DILocation(line: 0, scope: !12078, inlinedAt: !13050)
!13050 = distinct !DILocation(line: 254, column: 3, scope: !12082, inlinedAt: !13047)
!13051 = !DILocation(line: 0, scope: !12085, inlinedAt: !13052)
!13052 = distinct !DILocation(line: 229, column: 2, scope: !12078, inlinedAt: !13050)
!13053 = !DILocation(line: 188, column: 2, scope: !12095, inlinedAt: !13052)
!13054 = !DILocation(line: 188, column: 2, scope: !12097, inlinedAt: !13052)
!13055 = !DILocation(line: 0, scope: !12095, inlinedAt: !13052)
!13056 = !DILocation(line: 189, column: 7, scope: !12100, inlinedAt: !13052)
!13057 = !DILocation(line: 189, column: 35, scope: !12100, inlinedAt: !13052)
!13058 = !DILocation(line: 189, column: 7, scope: !12101, inlinedAt: !13052)
!13059 = !DILocation(line: 190, column: 4, scope: !12105, inlinedAt: !13052)
!13060 = !DILocation(line: 192, column: 4, scope: !12105, inlinedAt: !13052)
!13061 = distinct !{!13061, !13053, !13062}
!13062 = !DILocation(line: 194, column: 2, scope: !12095, inlinedAt: !13052)
!13063 = !DILocation(line: 196, column: 2, scope: !12085, inlinedAt: !13052)
!13064 = !DILocation(line: 197, column: 1, scope: !12085, inlinedAt: !13052)
!13065 = !DILocation(line: 918, column: 4, scope: !13039)
!13066 = !DILocation(line: 919, column: 3, scope: !13039)
!13067 = !DILocation(line: 920, column: 22, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13040, file: !2171, line: 919, column: 10)
!13069 = !DILocation(line: 0, scope: !11910, inlinedAt: !13070)
!13070 = distinct !DILocation(line: 906, column: 2, scope: !13033)
!13071 = !DILocation(line: 0, scope: !11918, inlinedAt: !13072)
!13072 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !13070)
!13073 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !13072)
!13074 = !DILocation(line: 926, column: 2, scope: !13016)
!13075 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2171, file: !2171, line: 929, type: !13076, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13078)
!13076 = !DISubroutineType(types: !13077)
!13077 = !{null, !2072, !103}
!13078 = !{!13079, !13080, !13081}
!13079 = !DILocalVariable(name: "thread", arg: 1, scope: !13075, file: !2171, line: 929, type: !2072)
!13080 = !DILocalVariable(name: "prio", arg: 2, scope: !13075, file: !2171, line: 929, type: !103)
!13081 = !DILocalVariable(name: "need_sched", scope: !13075, file: !2171, line: 931, type: !580)
!13082 = !DILocation(line: 0, scope: !13075)
!13083 = !DILocation(line: 931, column: 20, scope: !13075)
!13084 = !DILocation(line: 935, column: 17, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13075, file: !2171, line: 935, column: 6)
!13086 = !DILocation(line: 935, column: 20, scope: !13085)
!13087 = !DILocation(line: 935, column: 35, scope: !13085)
!13088 = !DILocation(line: 935, column: 48, scope: !13085)
!13089 = !DILocation(line: 935, column: 6, scope: !13075)
!13090 = !DILocation(line: 936, column: 3, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13085, file: !2171, line: 935, column: 55)
!13092 = !DILocation(line: 937, column: 2, scope: !13091)
!13093 = !DILocation(line: 938, column: 1, scope: !13075)
!13094 = distinct !DISubprogram(name: "k_sched_lock", scope: !2171, file: !2171, line: 987, type: !2944, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13095)
!13095 = !{!13096, !13098}
!13096 = !DILocalVariable(name: "__i", scope: !13097, file: !2171, line: 989, type: !11875)
!13097 = distinct !DILexicalBlock(scope: !13094, file: !2171, line: 989, column: 2)
!13098 = !DILocalVariable(name: "__key", scope: !13097, file: !2171, line: 989, type: !11875)
!13099 = !DILocation(line: 0, scope: !13097)
!13100 = !DILocation(line: 0, scope: !11883, inlinedAt: !13101)
!13101 = distinct !DILocation(line: 989, column: 2, scope: !13097)
!13102 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !13103)
!13103 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !13101)
!13104 = !DILocation(line: 0, scope: !11892, inlinedAt: !13103)
!13105 = !DILocation(line: 992, column: 3, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13107, file: !2171, line: 989, column: 26)
!13107 = distinct !DILexicalBlock(scope: !13097, file: !2171, line: 989, column: 2)
!13108 = !DILocation(line: 0, scope: !11910, inlinedAt: !13109)
!13109 = distinct !DILocation(line: 989, column: 2, scope: !13107)
!13110 = !DILocation(line: 0, scope: !11918, inlinedAt: !13111)
!13111 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !13109)
!13112 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !13111)
!13113 = !DILocation(line: 994, column: 1, scope: !13094)
!13114 = distinct !DISubprogram(name: "z_sched_lock", scope: !10416, file: !10416, line: 251, type: !2944, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !675)
!13115 = !DILocation(line: 256, column: 4, scope: !13114)
!13116 = !DILocation(line: 256, column: 19, scope: !13114)
!13117 = !DILocation(line: 256, column: 2, scope: !13114)
!13118 = !DILocation(line: 258, column: 2, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13114, file: !10416, line: 258, column: 2)
!13120 = !{i64 2154790396}
!13121 = !DILocation(line: 259, column: 1, scope: !13114)
!13122 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2171, file: !2171, line: 996, type: !2944, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13123)
!13123 = !{!13124, !13126}
!13124 = !DILocalVariable(name: "__i", scope: !13125, file: !2171, line: 998, type: !11875)
!13125 = distinct !DILexicalBlock(scope: !13122, file: !2171, line: 998, column: 2)
!13126 = !DILocalVariable(name: "__key", scope: !13125, file: !2171, line: 998, type: !11875)
!13127 = !DILocation(line: 0, scope: !13125)
!13128 = !DILocation(line: 0, scope: !11883, inlinedAt: !13129)
!13129 = distinct !DILocation(line: 998, column: 2, scope: !13125)
!13130 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !13131)
!13131 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !13129)
!13132 = !DILocation(line: 0, scope: !11892, inlinedAt: !13131)
!13133 = !DILocation(line: 1002, column: 5, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13135, file: !2171, line: 998, column: 26)
!13135 = distinct !DILexicalBlock(scope: !13125, file: !2171, line: 998, column: 2)
!13136 = !DILocation(line: 1002, column: 20, scope: !13134)
!13137 = !DILocation(line: 1002, column: 3, scope: !13134)
!13138 = !DILocation(line: 1003, column: 3, scope: !13134)
!13139 = !DILocation(line: 0, scope: !11910, inlinedAt: !13140)
!13140 = distinct !DILocation(line: 998, column: 2, scope: !13135)
!13141 = !DILocation(line: 0, scope: !11918, inlinedAt: !13142)
!13142 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !13140)
!13143 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !13142)
!13144 = !DILocation(line: 1011, column: 2, scope: !13122)
!13145 = !DILocation(line: 1012, column: 1, scope: !13122)
!13146 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2171, file: !2171, line: 1014, type: !12193, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !675)
!13147 = !DILocation(line: 1028, column: 25, scope: !13146)
!13148 = !DILocation(line: 1028, column: 2, scope: !13146)
!13149 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2171, file: !2171, line: 1155, type: !13150, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13152)
!13150 = !DISubroutineType(types: !13151)
!13151 = !{!580, !2101, !2101}
!13152 = !{!13153, !13154, !13155, !13156, !13157}
!13153 = !DILocalVariable(name: "a", arg: 1, scope: !13149, file: !2171, line: 1155, type: !2101)
!13154 = !DILocalVariable(name: "b", arg: 2, scope: !13149, file: !2171, line: 1155, type: !2101)
!13155 = !DILocalVariable(name: "thread_a", scope: !13149, file: !2171, line: 1157, type: !2072)
!13156 = !DILocalVariable(name: "thread_b", scope: !13149, file: !2171, line: 1157, type: !2072)
!13157 = !DILocalVariable(name: "cmp", scope: !13149, file: !2171, line: 1158, type: !1090)
!13158 = !DILocation(line: 0, scope: !13149)
!13159 = !DILocation(line: 1160, column: 13, scope: !13149)
!13160 = !DILocation(line: 1161, column: 13, scope: !13149)
!13161 = !DILocation(line: 1163, column: 8, scope: !13149)
!13162 = !DILocation(line: 1165, column: 10, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13149, file: !2171, line: 1165, column: 6)
!13164 = !DILocation(line: 1165, column: 6, scope: !13149)
!13165 = !DILocation(line: 1167, column: 17, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13163, file: !2171, line: 1167, column: 13)
!13167 = !DILocation(line: 1167, column: 13, scope: !13163)
!13168 = !DILocation(line: 1170, column: 25, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13166, file: !2171, line: 1169, column: 9)
!13170 = !DILocation(line: 1170, column: 52, scope: !13169)
!13171 = !DILocation(line: 1170, column: 35, scope: !13169)
!13172 = !DILocation(line: 1170, column: 3, scope: !13169)
!13173 = !DILocation(line: 0, scope: !13163)
!13174 = !DILocation(line: 1173, column: 1, scope: !13149)
!13175 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2171, file: !2171, line: 1175, type: !13176, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13191)
!13176 = !DISubroutineType(types: !13177)
!13177 = !{null, !13178, !2072}
!13178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13179, size: 32)
!13179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13180, line: 37, size: 128, elements: !13181)
!13180 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13181 = !{!13182, !13190}
!13182 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13179, file: !13180, line: 38, baseType: !13183, size: 96)
!13183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !1812, line: 83, size: 96, elements: !13184)
!13184 = !{!13185, !13186, !13189}
!13185 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13183, file: !1812, line: 84, baseType: !2101, size: 32)
!13186 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13183, file: !1812, line: 85, baseType: !13187, size: 32, offset: 32)
!13187 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !1812, line: 81, baseType: !13188)
!13188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13150, size: 32)
!13189 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13183, file: !1812, line: 86, baseType: !103, size: 32, offset: 64)
!13190 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13179, file: !13180, line: 39, baseType: !103, size: 32, offset: 96)
!13191 = !{!13192, !13193, !13194, !13195, !13204}
!13192 = !DILocalVariable(name: "pq", arg: 1, scope: !13175, file: !2171, line: 1175, type: !13178)
!13193 = !DILocalVariable(name: "thread", arg: 2, scope: !13175, file: !2171, line: 1175, type: !2072)
!13194 = !DILocalVariable(name: "t", scope: !13175, file: !2171, line: 1177, type: !2072)
!13195 = !DILocalVariable(name: "__f", scope: !13196, file: !2171, line: 1190, type: !13199)
!13196 = distinct !DILexicalBlock(scope: !13197, file: !2171, line: 1190, column: 3)
!13197 = distinct !DILexicalBlock(scope: !13198, file: !2171, line: 1189, column: 27)
!13198 = distinct !DILexicalBlock(scope: !13175, file: !2171, line: 1189, column: 6)
!13199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !1812, line: 155, size: 96, elements: !13200)
!13200 = !{!13201, !13202, !13203}
!13201 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13199, file: !1812, line: 156, baseType: !2166, size: 32)
!13202 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13199, file: !1812, line: 157, baseType: !625, size: 32, offset: 32)
!13203 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13199, file: !1812, line: 158, baseType: !1090, size: 32, offset: 64)
!13204 = !DILocalVariable(name: "n", scope: !13205, file: !2171, line: 1190, type: !2101)
!13205 = distinct !DILexicalBlock(scope: !13206, file: !2171, line: 1190, column: 3)
!13206 = distinct !DILexicalBlock(scope: !13196, file: !2171, line: 1190, column: 3)
!13207 = !DILocation(line: 0, scope: !13175)
!13208 = !DILocation(line: 1181, column: 31, scope: !13175)
!13209 = !DILocation(line: 1181, column: 45, scope: !13175)
!13210 = !DILocation(line: 1181, column: 15, scope: !13175)
!13211 = !DILocation(line: 1181, column: 25, scope: !13175)
!13212 = !DILocation(line: 1189, column: 11, scope: !13198)
!13213 = !DILocation(line: 1189, column: 7, scope: !13198)
!13214 = !DILocation(line: 1189, column: 6, scope: !13175)
!13215 = !DILocation(line: 1190, column: 3, scope: !13196)
!13216 = !DILocation(line: 1190, column: 3, scope: !13205)
!13217 = !DILocation(line: 0, scope: !13205)
!13218 = !DILocation(line: 1190, column: 3, scope: !13206)
!13219 = !DILocation(line: 1193, column: 2, scope: !13197)
!13220 = !DILocation(line: 1191, column: 42, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13206, file: !2171, line: 1190, column: 54)
!13222 = !DILocation(line: 1191, column: 12, scope: !13221)
!13223 = !DILocation(line: 1191, column: 22, scope: !13221)
!13224 = distinct !{!13224, !13215, !13225}
!13225 = !DILocation(line: 1192, column: 3, scope: !13196)
!13226 = !DILocation(line: 1195, column: 17, scope: !13175)
!13227 = !DILocation(line: 1195, column: 37, scope: !13175)
!13228 = !DILocation(line: 1195, column: 2, scope: !13175)
!13229 = !DILocation(line: 1196, column: 1, scope: !13175)
!13230 = !DISubprogram(name: "z_rb_foreach_next", scope: !1812, file: !1812, line: 176, type: !13231, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !675)
!13231 = !DISubroutineType(types: !13232)
!13232 = !{!2101, !13233, !13234}
!13233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13183, size: 32)
!13234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13199, size: 32)
!13235 = !DISubprogram(name: "rb_insert", scope: !1812, file: !1812, line: 105, type: !13236, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !675)
!13236 = !DISubroutineType(types: !13237)
!13237 = !{null, !13233, !2101}
!13238 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2171, file: !2171, line: 1198, type: !13176, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13239)
!13239 = !{!13240, !13241}
!13240 = !DILocalVariable(name: "pq", arg: 1, scope: !13238, file: !2171, line: 1198, type: !13178)
!13241 = !DILocalVariable(name: "thread", arg: 2, scope: !13238, file: !2171, line: 1198, type: !2072)
!13242 = !DILocation(line: 0, scope: !13238)
!13243 = !DILocation(line: 1202, column: 17, scope: !13238)
!13244 = !DILocation(line: 1202, column: 37, scope: !13238)
!13245 = !DILocation(line: 1202, column: 2, scope: !13238)
!13246 = !DILocation(line: 1204, column: 16, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13238, file: !2171, line: 1204, column: 6)
!13248 = !DILocation(line: 1204, column: 7, scope: !13247)
!13249 = !DILocation(line: 1204, column: 6, scope: !13238)
!13250 = !DILocation(line: 1205, column: 7, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13247, file: !2171, line: 1204, column: 22)
!13252 = !DILocation(line: 1205, column: 22, scope: !13251)
!13253 = !DILocation(line: 1206, column: 2, scope: !13251)
!13254 = !DILocation(line: 1207, column: 1, scope: !13238)
!13255 = !DISubprogram(name: "rb_remove", scope: !1812, file: !1812, line: 110, type: !13236, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !675)
!13256 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2171, file: !2171, line: 1209, type: !13257, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13259)
!13257 = !DISubroutineType(types: !13258)
!13258 = !{!2072, !13178}
!13259 = !{!13260, !13261, !13262}
!13260 = !DILocalVariable(name: "pq", arg: 1, scope: !13256, file: !2171, line: 1209, type: !13178)
!13261 = !DILocalVariable(name: "thread", scope: !13256, file: !2171, line: 1211, type: !2072)
!13262 = !DILocalVariable(name: "n", scope: !13256, file: !2171, line: 1212, type: !2101)
!13263 = !DILocation(line: 0, scope: !13256)
!13264 = !DILocation(line: 1212, column: 37, scope: !13256)
!13265 = !DILocation(line: 1212, column: 21, scope: !13256)
!13266 = !DILocation(line: 1217, column: 2, scope: !13256)
!13267 = distinct !DISubprogram(name: "rb_get_min", scope: !1812, file: !1812, line: 115, type: !13268, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13270)
!13268 = !DISubroutineType(types: !13269)
!13269 = !{!2101, !13233}
!13270 = !{!13271}
!13271 = !DILocalVariable(name: "tree", arg: 1, scope: !13267, file: !1812, line: 115, type: !13233)
!13272 = !DILocation(line: 0, scope: !13267)
!13273 = !DILocation(line: 117, column: 9, scope: !13267)
!13274 = !DILocation(line: 117, column: 2, scope: !13267)
!13275 = !DISubprogram(name: "z_rb_get_minmax", scope: !1812, file: !1812, line: 100, type: !13276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !675)
!13276 = !DISubroutineType(types: !13277)
!13277 = !{!2101, !13233, !410}
!13278 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2171, file: !2171, line: 1246, type: !13279, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13287)
!13279 = !DISubroutineType(types: !13280)
!13280 = !{!2072, !13281}
!13281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13282, size: 32)
!13282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13180, line: 53, size: 2080, elements: !13283)
!13283 = !{!13284, !13286}
!13284 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13282, file: !13180, line: 54, baseType: !13285, size: 2048)
!13285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2108, size: 2048, elements: !480)
!13286 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13282, file: !13180, line: 55, baseType: !32, size: 32, offset: 2048)
!13287 = !{!13288, !13289, !13290, !13291}
!13288 = !DILocalVariable(name: "pq", arg: 1, scope: !13278, file: !2171, line: 1246, type: !13281)
!13289 = !DILocalVariable(name: "thread", scope: !13278, file: !2171, line: 1252, type: !2072)
!13290 = !DILocalVariable(name: "l", scope: !13278, file: !2171, line: 1253, type: !12088)
!13291 = !DILocalVariable(name: "n", scope: !13278, file: !2171, line: 1254, type: !2167)
!13292 = !DILocation(line: 0, scope: !13278)
!13293 = !DILocation(line: 1248, column: 11, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13278, file: !2171, line: 1248, column: 6)
!13295 = !DILocation(line: 1248, column: 7, scope: !13294)
!13296 = !DILocation(line: 1248, column: 6, scope: !13278)
!13297 = !DILocation(line: 1253, column: 31, scope: !13278)
!13298 = !DILocation(line: 1253, column: 20, scope: !13278)
!13299 = !DILocation(line: 1254, column: 19, scope: !13278)
!13300 = !DILocation(line: 1260, column: 1, scope: !13278)
!13301 = distinct !DISubprogram(name: "z_unpend_all", scope: !2171, file: !2171, line: 1262, type: !13302, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13304)
!13302 = !DISubroutineType(types: !13303)
!13303 = !{!103, !2103}
!13304 = !{!13305, !13306, !13307}
!13305 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13301, file: !2171, line: 1262, type: !2103)
!13306 = !DILocalVariable(name: "need_sched", scope: !13301, file: !2171, line: 1264, type: !103)
!13307 = !DILocalVariable(name: "thread", scope: !13301, file: !2171, line: 1265, type: !2072)
!13308 = !DILocation(line: 0, scope: !13301)
!13309 = !DILocation(line: 1267, column: 19, scope: !13301)
!13310 = !DILocation(line: 1267, column: 41, scope: !13301)
!13311 = !DILocation(line: 1267, column: 2, scope: !13301)
!13312 = !DILocation(line: 1268, column: 3, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13301, file: !2171, line: 1267, column: 50)
!13314 = !DILocation(line: 1269, column: 3, scope: !13313)
!13315 = distinct !{!13315, !13311, !13316}
!13316 = !DILocation(line: 1271, column: 2, scope: !13301)
!13317 = !DILocation(line: 1273, column: 2, scope: !13301)
!13318 = distinct !DISubprogram(name: "z_waitq_head", scope: !10734, file: !10734, line: 52, type: !12936, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13319)
!13319 = !{!13320}
!13320 = !DILocalVariable(name: "w", arg: 1, scope: !13318, file: !10734, line: 52, type: !2103)
!13321 = !DILocation(line: 0, scope: !13318)
!13322 = !DILocation(line: 54, column: 52, scope: !13318)
!13323 = !DILocation(line: 54, column: 28, scope: !13318)
!13324 = !DILocation(line: 54, column: 9, scope: !13318)
!13325 = !DILocation(line: 54, column: 2, scope: !13318)
!13326 = distinct !DISubprogram(name: "init_ready_q", scope: !2171, file: !2171, line: 1276, type: !13327, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13334)
!13327 = !DISubroutineType(types: !13328)
!13328 = !{null, !13329}
!13329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13330, size: 32)
!13330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !678, line: 83, size: 96, elements: !13331)
!13331 = !{!13332, !13333}
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13330, file: !678, line: 86, baseType: !2072, size: 32)
!13333 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13330, file: !678, line: 90, baseType: !2108, size: 64, offset: 32)
!13334 = !{!13335}
!13335 = !DILocalVariable(name: "rq", arg: 1, scope: !13326, file: !2171, line: 1276, type: !13329)
!13336 = !DILocation(line: 0, scope: !13326)
!13337 = !DILocation(line: 1289, column: 22, scope: !13326)
!13338 = !DILocation(line: 1289, column: 2, scope: !13326)
!13339 = !DILocation(line: 1291, column: 1, scope: !13326)
!13340 = distinct !DISubprogram(name: "sys_dlist_init", scope: !683, file: !683, line: 197, type: !13341, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13343)
!13341 = !DISubroutineType(types: !13342)
!13342 = !{null, !12088}
!13343 = !{!13344}
!13344 = !DILocalVariable(name: "list", arg: 1, scope: !13340, file: !683, line: 197, type: !12088)
!13345 = !DILocation(line: 0, scope: !13340)
!13346 = !DILocation(line: 199, column: 8, scope: !13340)
!13347 = !DILocation(line: 199, column: 13, scope: !13340)
!13348 = !DILocation(line: 200, column: 8, scope: !13340)
!13349 = !DILocation(line: 200, column: 13, scope: !13340)
!13350 = !DILocation(line: 201, column: 1, scope: !13340)
!13351 = distinct !DISubprogram(name: "z_sched_init", scope: !2171, file: !2171, line: 1293, type: !2944, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !675)
!13352 = !DILocation(line: 1302, column: 2, scope: !13351)
!13353 = !DILocation(line: 1306, column: 2, scope: !13351)
!13354 = !DILocation(line: 1309, column: 1, scope: !13351)
!13355 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2171, file: !2171, line: 1311, type: !13356, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13359)
!13356 = !DISubroutineType(types: !13357)
!13357 = !{!103, !13358}
!13358 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !1787, line: 347, baseType: !2072)
!13359 = !{!13360}
!13360 = !DILocalVariable(name: "thread", arg: 1, scope: !13355, file: !2171, line: 1311, type: !13358)
!13361 = !DILocation(line: 0, scope: !13355)
!13362 = !DILocation(line: 1313, column: 22, scope: !13355)
!13363 = !DILocation(line: 1313, column: 9, scope: !13355)
!13364 = !DILocation(line: 1313, column: 2, scope: !13355)
!13365 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2171, file: !2171, line: 1325, type: !13366, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13368)
!13366 = !DISubroutineType(types: !13367)
!13367 = !{null, !13358, !103}
!13368 = !{!13369, !13370, !13371}
!13369 = !DILocalVariable(name: "thread", arg: 1, scope: !13365, file: !2171, line: 1325, type: !13358)
!13370 = !DILocalVariable(name: "prio", arg: 2, scope: !13365, file: !2171, line: 1325, type: !103)
!13371 = !DILocalVariable(name: "th", scope: !13365, file: !2171, line: 1334, type: !2072)
!13372 = !DILocation(line: 0, scope: !13365)
!13373 = !DILocation(line: 1336, column: 2, scope: !13365)
!13374 = !DILocation(line: 1337, column: 1, scope: !13365)
!13375 = distinct !DISubprogram(name: "k_can_yield", scope: !2171, file: !2171, line: 1384, type: !6383, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !675)
!13376 = !DILocation(line: 1386, column: 11, scope: !13375)
!13377 = !DILocation(line: 1386, column: 29, scope: !13375)
!13378 = !DILocation(line: 1386, column: 32, scope: !13375)
!13379 = !DILocation(line: 1386, column: 46, scope: !13375)
!13380 = !DILocation(line: 1387, column: 28, scope: !13375)
!13381 = !DILocation(line: 1387, column: 4, scope: !13375)
!13382 = !DILocation(line: 1386, column: 2, scope: !13375)
!13383 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !654, file: !654, line: 989, type: !6383, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !675)
!13384 = !DILocation(line: 993, column: 10, scope: !13383)
!13385 = !DILocation(line: 993, column: 2, scope: !13383)
!13386 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2171, file: !2171, line: 1390, type: !2944, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13387)
!13387 = !{!13388}
!13388 = !DILocalVariable(name: "key", scope: !13386, file: !2171, line: 1396, type: !11875)
!13389 = !DILocation(line: 0, scope: !11883, inlinedAt: !13390)
!13390 = distinct !DILocation(line: 1396, column: 25, scope: !13386)
!13391 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !13392)
!13392 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !13390)
!13393 = !DILocation(line: 0, scope: !11892, inlinedAt: !13392)
!13394 = !DILocation(line: 0, scope: !13386)
!13395 = !DILocation(line: 1400, column: 18, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13397, file: !2171, line: 1399, column: 36)
!13397 = distinct !DILexicalBlock(scope: !13386, file: !2171, line: 1398, column: 6)
!13398 = !DILocation(line: 0, scope: !12054, inlinedAt: !13399)
!13399 = distinct !DILocation(line: 1400, column: 3, scope: !13396)
!13400 = !DILocation(line: 266, column: 15, scope: !12054, inlinedAt: !13399)
!13401 = !DILocation(line: 266, column: 28, scope: !12054, inlinedAt: !13399)
!13402 = !DILocation(line: 0, scope: !12062, inlinedAt: !13403)
!13403 = distinct !DILocation(line: 268, column: 3, scope: !12066, inlinedAt: !13399)
!13404 = !DILocation(line: 234, column: 2, scope: !12062, inlinedAt: !13403)
!13405 = !DILocation(line: 1402, column: 15, scope: !13386)
!13406 = !DILocation(line: 0, scope: !12071, inlinedAt: !13407)
!13407 = distinct !DILocation(line: 1402, column: 2, scope: !13386)
!13408 = !DILocation(line: 252, column: 15, scope: !12071, inlinedAt: !13407)
!13409 = !DILocation(line: 252, column: 28, scope: !12071, inlinedAt: !13407)
!13410 = !DILocation(line: 0, scope: !12078, inlinedAt: !13411)
!13411 = distinct !DILocation(line: 254, column: 3, scope: !12082, inlinedAt: !13407)
!13412 = !DILocation(line: 0, scope: !12085, inlinedAt: !13413)
!13413 = distinct !DILocation(line: 229, column: 2, scope: !12078, inlinedAt: !13411)
!13414 = !DILocation(line: 188, column: 2, scope: !12095, inlinedAt: !13413)
!13415 = !DILocation(line: 188, column: 2, scope: !12097, inlinedAt: !13413)
!13416 = !DILocation(line: 0, scope: !12095, inlinedAt: !13413)
!13417 = !DILocation(line: 189, column: 7, scope: !12100, inlinedAt: !13413)
!13418 = !DILocation(line: 189, column: 35, scope: !12100, inlinedAt: !13413)
!13419 = !DILocation(line: 189, column: 7, scope: !12101, inlinedAt: !13413)
!13420 = !DILocation(line: 191, column: 21, scope: !12105, inlinedAt: !13413)
!13421 = !DILocation(line: 190, column: 4, scope: !12105, inlinedAt: !13413)
!13422 = !DILocation(line: 192, column: 4, scope: !12105, inlinedAt: !13413)
!13423 = distinct !{!13423, !13414, !13424}
!13424 = !DILocation(line: 194, column: 2, scope: !12095, inlinedAt: !13413)
!13425 = !DILocation(line: 196, column: 37, scope: !12085, inlinedAt: !13413)
!13426 = !DILocation(line: 196, column: 2, scope: !12085, inlinedAt: !13413)
!13427 = !DILocation(line: 197, column: 1, scope: !12085, inlinedAt: !13413)
!13428 = !DILocation(line: 1403, column: 2, scope: !13386)
!13429 = !DILocation(line: 0, scope: !12496, inlinedAt: !13430)
!13430 = distinct !DILocation(line: 1404, column: 2, scope: !13386)
!13431 = !DILocation(line: 196, column: 9, scope: !12496, inlinedAt: !13430)
!13432 = !DILocation(line: 1405, column: 1, scope: !13386)
!13433 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2171, file: !2171, line: 1459, type: !13434, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13436)
!13434 = !DISubroutineType(types: !13435)
!13435 = !{!1090, !12676}
!13436 = !{!13437, !13438, !13439}
!13437 = !DILocalVariable(name: "timeout", arg: 1, scope: !13433, file: !2171, line: 1459, type: !12676)
!13438 = !DILocalVariable(name: "ticks", scope: !13433, file: !2171, line: 1461, type: !548)
!13439 = !DILocalVariable(name: "ret", scope: !13433, file: !2171, line: 1480, type: !1090)
!13440 = !DILocation(line: 0, scope: !13433)
!13441 = !DILocation(line: 1468, column: 6, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13433, file: !2171, line: 1468, column: 6)
!13443 = !DILocation(line: 1468, column: 6, scope: !13433)
!13444 = !DILocation(line: 1469, column: 20, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13442, file: !2171, line: 1468, column: 40)
!13446 = !DILocation(line: 1469, column: 3, scope: !13445)
!13447 = !DILocation(line: 1473, column: 3, scope: !13445)
!13448 = !DILocation(line: 1478, column: 10, scope: !13433)
!13449 = !DILocation(line: 1480, column: 16, scope: !13433)
!13450 = !DILocation(line: 1485, column: 1, scope: !13433)
!13451 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3364, file: !3364, line: 310, type: !13452, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13454)
!13452 = !DISubroutineType(types: !13453)
!13453 = !{null, !13358}
!13454 = !{!13455}
!13455 = !DILocalVariable(name: "thread", arg: 1, scope: !13451, file: !3364, line: 310, type: !13358)
!13456 = !DILocation(line: 0, scope: !13451)
!13457 = !DILocation(line: 319, column: 2, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13451, file: !3364, line: 319, column: 2)
!13459 = !{i64 2151080010}
!13460 = !DILocation(line: 320, column: 2, scope: !13451)
!13461 = !DILocation(line: 321, column: 1, scope: !13451)
!13462 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2171, file: !2171, line: 1415, type: !13463, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13465)
!13463 = !DISubroutineType(types: !13464)
!13464 = !{!1090, !548}
!13465 = !{!13466, !13467, !13468, !13469}
!13466 = !DILocalVariable(name: "ticks", arg: 1, scope: !13462, file: !2171, line: 1415, type: !548)
!13467 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13462, file: !2171, line: 1418, type: !404)
!13468 = !DILocalVariable(name: "timeout", scope: !13462, file: !2171, line: 1430, type: !12676)
!13469 = !DILocalVariable(name: "key", scope: !13462, file: !2171, line: 1437, type: !11875)
!13470 = !DILocation(line: 0, scope: !13462)
!13471 = !DILocation(line: 1425, column: 12, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13462, file: !2171, line: 1425, column: 6)
!13473 = !DILocation(line: 1425, column: 6, scope: !13462)
!13474 = !DILocation(line: 1426, column: 3, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13472, file: !2171, line: 1425, column: 18)
!13476 = !DILocation(line: 1427, column: 3, scope: !13475)
!13477 = !DILocation(line: 1431, column: 24, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13462, file: !2171, line: 1431, column: 6)
!13479 = !DILocation(line: 1431, column: 6, scope: !13462)
!13480 = !DILocation(line: 1432, column: 35, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13478, file: !2171, line: 1431, column: 30)
!13482 = !DILocation(line: 1432, column: 27, scope: !13481)
!13483 = !DILocation(line: 1433, column: 2, scope: !13481)
!13484 = !DILocation(line: 1434, column: 27, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13478, file: !2171, line: 1433, column: 9)
!13486 = !DILocation(line: 0, scope: !13478)
!13487 = !DILocation(line: 0, scope: !11883, inlinedAt: !13488)
!13488 = distinct !DILocation(line: 1437, column: 25, scope: !13462)
!13489 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !13490)
!13490 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !13488)
!13491 = !DILocation(line: 0, scope: !11892, inlinedAt: !13490)
!13492 = !DILocation(line: 1440, column: 20, scope: !13462)
!13493 = !DILocation(line: 1440, column: 18, scope: !13462)
!13494 = !DILocation(line: 1442, column: 2, scope: !13462)
!13495 = !DILocation(line: 1443, column: 23, scope: !13462)
!13496 = !DILocation(line: 1443, column: 2, scope: !13462)
!13497 = !DILocation(line: 1444, column: 29, scope: !13462)
!13498 = !DILocation(line: 1444, column: 2, scope: !13462)
!13499 = !DILocation(line: 0, scope: !12496, inlinedAt: !13500)
!13500 = distinct !DILocation(line: 1446, column: 8, scope: !13462)
!13501 = !DILocation(line: 196, column: 9, scope: !12496, inlinedAt: !13500)
!13502 = !DILocation(line: 1450, column: 10, scope: !13462)
!13503 = !DILocation(line: 1450, column: 45, scope: !13462)
!13504 = !DILocation(line: 1450, column: 43, scope: !13462)
!13505 = !DILocation(line: 1451, column: 6, scope: !13462)
!13506 = !DILocation(line: 1457, column: 1, scope: !13462)
!13507 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !10953, file: !10953, line: 1103, type: !10954, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13508)
!13508 = !{!13509}
!13509 = !DILocalVariable(name: "t", arg: 1, scope: !13507, file: !10953, line: 1103, type: !2050)
!13510 = !DILocation(line: 0, scope: !13507)
!13511 = !DILocation(line: 0, scope: !11932, inlinedAt: !13512)
!13512 = distinct !DILocation(line: 1106, column: 9, scope: !13507)
!13513 = !DILocation(line: 139, column: 13, scope: !13514, inlinedAt: !13512)
!13514 = distinct !DILexicalBlock(scope: !13515, file: !10953, line: 138, column: 10)
!13515 = distinct !DILexicalBlock(scope: !13516, file: !10953, line: 136, column: 7)
!13516 = distinct !DILexicalBlock(scope: !11953, file: !10953, line: 134, column: 17)
!13517 = !DILocation(line: 1106, column: 2, scope: !13507)
!13518 = distinct !DISubprogram(name: "k_yield", scope: !3364, file: !3364, line: 140, type: !2944, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !675)
!13519 = !DILocation(line: 148, column: 2, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13518, file: !3364, line: 148, column: 2)
!13521 = !{i64 2151079330}
!13522 = !DILocation(line: 149, column: 2, scope: !13518)
!13523 = !DILocation(line: 150, column: 1, scope: !13518)
!13524 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2171, file: !2171, line: 1495, type: !13525, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13527)
!13525 = !DISubroutineType(types: !13526)
!13526 = !{!1090, !103}
!13527 = !{!13528, !13529}
!13528 = !DILocalVariable(name: "us", arg: 1, scope: !13524, file: !2171, line: 1495, type: !103)
!13529 = !DILocalVariable(name: "ticks", scope: !13524, file: !2171, line: 1497, type: !1090)
!13530 = !DILocation(line: 0, scope: !13524)
!13531 = !DILocation(line: 1501, column: 31, scope: !13524)
!13532 = !DILocation(line: 1501, column: 10, scope: !13524)
!13533 = !DILocation(line: 1502, column: 23, scope: !13524)
!13534 = !DILocation(line: 1502, column: 10, scope: !13524)
!13535 = !DILocation(line: 1506, column: 31, scope: !13524)
!13536 = !DILocation(line: 1506, column: 9, scope: !13524)
!13537 = !DILocation(line: 1506, column: 2, scope: !13524)
!13538 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !10953, file: !10953, line: 571, type: !10954, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13539)
!13539 = !{!13540}
!13540 = !DILocalVariable(name: "t", arg: 1, scope: !13538, file: !10953, line: 571, type: !2050)
!13541 = !DILocation(line: 0, scope: !13538)
!13542 = !DILocation(line: 0, scope: !11932, inlinedAt: !13543)
!13543 = distinct !DILocation(line: 574, column: 9, scope: !13538)
!13544 = !DILocation(line: 135, column: 5, scope: !13516, inlinedAt: !13543)
!13545 = !DILocation(line: 139, column: 13, scope: !13514, inlinedAt: !13543)
!13546 = !DILocation(line: 574, column: 2, scope: !13538)
!13547 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !10953, file: !10953, line: 1187, type: !10954, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13548)
!13548 = !{!13549}
!13549 = !DILocalVariable(name: "t", arg: 1, scope: !13547, file: !10953, line: 1187, type: !2050)
!13550 = !DILocation(line: 0, scope: !13547)
!13551 = !DILocation(line: 0, scope: !11932, inlinedAt: !13552)
!13552 = distinct !DILocation(line: 1190, column: 9, scope: !13547)
!13553 = !DILocation(line: 145, column: 13, scope: !13554, inlinedAt: !13552)
!13554 = distinct !DILexicalBlock(scope: !11950, file: !10953, line: 144, column: 10)
!13555 = !DILocation(line: 1190, column: 2, scope: !13547)
!13556 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2171, file: !2171, line: 1517, type: !13452, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13557)
!13557 = !{!13558}
!13558 = !DILocalVariable(name: "thread", arg: 1, scope: !13556, file: !2171, line: 1517, type: !13358)
!13559 = !DILocation(line: 0, scope: !13556)
!13560 = !DILocation(line: 1521, column: 6, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13556, file: !2171, line: 1521, column: 6)
!13562 = !DILocation(line: 1521, column: 6, scope: !13556)
!13563 = !DILocation(line: 1525, column: 6, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13556, file: !2171, line: 1525, column: 6)
!13565 = !DILocation(line: 1525, column: 37, scope: !13564)
!13566 = !DILocation(line: 1525, column: 6, scope: !13556)
!13567 = !DILocation(line: 1527, column: 20, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13569, file: !2171, line: 1527, column: 7)
!13569 = distinct !DILexicalBlock(scope: !13564, file: !2171, line: 1525, column: 42)
!13570 = !DILocation(line: 1527, column: 33, scope: !13568)
!13571 = !DILocation(line: 1527, column: 7, scope: !13569)
!13572 = !DILocation(line: 1532, column: 2, scope: !13556)
!13573 = !DILocation(line: 1533, column: 2, scope: !13556)
!13574 = !DILocation(line: 1031, column: 3, scope: !12529, inlinedAt: !13575)
!13575 = distinct !DILocation(line: 48, column: 10, scope: !12533, inlinedAt: !13576)
!13576 = distinct !DILocation(line: 1537, column: 7, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13556, file: !2171, line: 1537, column: 6)
!13578 = !DILocation(line: 0, scope: !12529, inlinedAt: !13575)
!13579 = !DILocation(line: 48, column: 9, scope: !12533, inlinedAt: !13576)
!13580 = !DILocation(line: 1537, column: 6, scope: !13556)
!13581 = !DILocation(line: 1538, column: 3, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13577, file: !2171, line: 1537, column: 25)
!13583 = !DILocation(line: 1539, column: 2, scope: !13582)
!13584 = !DILocation(line: 1540, column: 1, scope: !13556)
!13585 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10416, file: !10416, line: 101, type: !12003, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13586)
!13586 = !{!13587}
!13587 = !DILocalVariable(name: "thread", arg: 1, scope: !13585, file: !10416, line: 101, type: !2072)
!13588 = !DILocation(line: 0, scope: !13585)
!13589 = !DILocation(line: 103, column: 23, scope: !13585)
!13590 = !DILocation(line: 103, column: 36, scope: !13585)
!13591 = !DILocation(line: 103, column: 55, scope: !13585)
!13592 = !DILocation(line: 103, column: 2, scope: !13585)
!13593 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2171, file: !2171, line: 1567, type: !13594, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13596)
!13594 = !DISubroutineType(types: !13595)
!13595 = !{!13358}
!13596 = !{!13597}
!13597 = !DILocalVariable(name: "ret", scope: !13593, file: !2171, line: 1577, type: !13358)
!13598 = !DILocation(line: 1577, column: 30, scope: !13593)
!13599 = !DILocation(line: 0, scope: !13593)
!13600 = !DILocation(line: 1582, column: 2, scope: !13593)
!13601 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2171, file: !2171, line: 1593, type: !13602, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !675)
!13602 = !DISubroutineType(types: !13603)
!13603 = !{!103}
!13604 = !DILocation(line: 1031, column: 3, scope: !12529, inlinedAt: !13605)
!13605 = distinct !DILocation(line: 48, column: 10, scope: !12533, inlinedAt: !13606)
!13606 = distinct !DILocation(line: 1595, column: 10, scope: !13601)
!13607 = !DILocation(line: 0, scope: !12529, inlinedAt: !13605)
!13608 = !DILocation(line: 48, column: 9, scope: !12533, inlinedAt: !13606)
!13609 = !DILocation(line: 1595, column: 27, scope: !13601)
!13610 = !DILocation(line: 1595, column: 41, scope: !13601)
!13611 = !DILocation(line: 1595, column: 30, scope: !13601)
!13612 = !DILocation(line: 1595, column: 2, scope: !13601)
!13613 = distinct !DISubprogram(name: "z_thread_abort", scope: !2171, file: !2171, line: 1725, type: !11841, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13614)
!13614 = !{!13615, !13616}
!13615 = !DILocalVariable(name: "thread", arg: 1, scope: !13613, file: !2171, line: 1725, type: !2072)
!13616 = !DILocalVariable(name: "key", scope: !13613, file: !2171, line: 1727, type: !11875)
!13617 = !DILocation(line: 0, scope: !13613)
!13618 = !DILocation(line: 0, scope: !11883, inlinedAt: !13619)
!13619 = distinct !DILocation(line: 1727, column: 25, scope: !13613)
!13620 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !13621)
!13621 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !13619)
!13622 = !DILocation(line: 0, scope: !11892, inlinedAt: !13621)
!13623 = !DILocation(line: 1729, column: 20, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13613, file: !2171, line: 1729, column: 6)
!13625 = !DILocation(line: 1729, column: 33, scope: !13624)
!13626 = !DILocation(line: 1729, column: 48, scope: !13624)
!13627 = !DILocation(line: 1729, column: 6, scope: !13613)
!13628 = !DILocation(line: 0, scope: !11910, inlinedAt: !13629)
!13629 = distinct !DILocation(line: 1730, column: 3, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13624, file: !2171, line: 1729, column: 54)
!13631 = !DILocation(line: 0, scope: !11918, inlinedAt: !13632)
!13632 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !13629)
!13633 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !13632)
!13634 = !DILocation(line: 1732, column: 3, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13630, file: !2171, line: 1732, column: 3)
!13636 = !{i64 2155445515, i64 2155445531, i64 2155445557, i64 2155445585, i64 2155445605}
!13637 = !DILocation(line: 1733, column: 3, scope: !13630)
!13638 = !DILocation(line: 1736, column: 20, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13613, file: !2171, line: 1736, column: 6)
!13640 = !DILocation(line: 1736, column: 33, scope: !13639)
!13641 = !DILocation(line: 1736, column: 49, scope: !13639)
!13642 = !DILocation(line: 1736, column: 6, scope: !13613)
!13643 = !DILocation(line: 0, scope: !11910, inlinedAt: !13644)
!13644 = distinct !DILocation(line: 1737, column: 3, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13639, file: !2171, line: 1736, column: 56)
!13646 = !DILocation(line: 0, scope: !11918, inlinedAt: !13647)
!13647 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !13644)
!13648 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !13647)
!13649 = !DILocation(line: 1738, column: 3, scope: !13645)
!13650 = !DILocation(line: 1775, column: 2, scope: !13613)
!13651 = !DILocation(line: 1776, column: 16, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13613, file: !2171, line: 1776, column: 6)
!13653 = !DILocation(line: 1776, column: 13, scope: !13652)
!13654 = !DILocation(line: 1776, column: 25, scope: !13652)
!13655 = !DILocation(line: 1031, column: 3, scope: !12529, inlinedAt: !13656)
!13656 = distinct !DILocation(line: 48, column: 10, scope: !12533, inlinedAt: !13657)
!13657 = distinct !DILocation(line: 1776, column: 29, scope: !13652)
!13658 = !DILocation(line: 0, scope: !12529, inlinedAt: !13656)
!13659 = !DILocation(line: 48, column: 9, scope: !12533, inlinedAt: !13657)
!13660 = !DILocation(line: 1776, column: 6, scope: !13613)
!13661 = !DILocation(line: 0, scope: !12496, inlinedAt: !13662)
!13662 = distinct !DILocation(line: 1777, column: 3, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13652, file: !2171, line: 1776, column: 47)
!13664 = !DILocation(line: 196, column: 9, scope: !12496, inlinedAt: !13662)
!13665 = !DILocation(line: 1779, column: 2, scope: !13663)
!13666 = !DILocation(line: 0, scope: !11910, inlinedAt: !13667)
!13667 = distinct !DILocation(line: 1780, column: 2, scope: !13613)
!13668 = !DILocation(line: 0, scope: !11918, inlinedAt: !13669)
!13669 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !13667)
!13670 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !13669)
!13671 = !DILocation(line: 1781, column: 1, scope: !13613)
!13672 = distinct !DISubprogram(name: "end_thread", scope: !2171, file: !2171, line: 1690, type: !11841, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13673)
!13673 = !{!13674}
!13674 = !DILocalVariable(name: "thread", arg: 1, scope: !13672, file: !2171, line: 1690, type: !2072)
!13675 = !DILocation(line: 0, scope: !13672)
!13676 = !DILocation(line: 1695, column: 20, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13672, file: !2171, line: 1695, column: 6)
!13678 = !DILocation(line: 1695, column: 33, scope: !13677)
!13679 = !DILocation(line: 1695, column: 49, scope: !13677)
!13680 = !DILocation(line: 1695, column: 6, scope: !13672)
!13681 = !DILocation(line: 1697, column: 29, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13677, file: !2171, line: 1695, column: 56)
!13683 = !DILocation(line: 1698, column: 7, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13682, file: !2171, line: 1698, column: 7)
!13685 = !DILocation(line: 1698, column: 7, scope: !13682)
!13686 = !DILocation(line: 0, scope: !12054, inlinedAt: !13687)
!13687 = distinct !DILocation(line: 1699, column: 4, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13684, file: !2171, line: 1698, column: 35)
!13689 = !DILocation(line: 266, column: 28, scope: !12054, inlinedAt: !13687)
!13690 = !DILocation(line: 0, scope: !12062, inlinedAt: !13691)
!13691 = distinct !DILocation(line: 268, column: 3, scope: !12066, inlinedAt: !13687)
!13692 = !DILocation(line: 234, column: 2, scope: !12062, inlinedAt: !13691)
!13693 = !DILocation(line: 1700, column: 3, scope: !13688)
!13694 = !DILocation(line: 1701, column: 20, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13682, file: !2171, line: 1701, column: 7)
!13696 = !DILocation(line: 1701, column: 30, scope: !13695)
!13697 = !DILocation(line: 1701, column: 7, scope: !13682)
!13698 = !DILocation(line: 1702, column: 4, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13695, file: !2171, line: 1701, column: 39)
!13700 = !DILocation(line: 1703, column: 3, scope: !13699)
!13701 = !DILocation(line: 1704, column: 9, scope: !13682)
!13702 = !DILocation(line: 1705, column: 23, scope: !13682)
!13703 = !DILocation(line: 1705, column: 3, scope: !13682)
!13704 = !DILocation(line: 1706, column: 3, scope: !13682)
!13705 = !DILocation(line: 1722, column: 2, scope: !13682)
!13706 = !DILocation(line: 1723, column: 1, scope: !13672)
!13707 = distinct !DISubprogram(name: "unpend_all", scope: !2171, file: !2171, line: 1674, type: !13708, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13710)
!13708 = !DISubroutineType(types: !13709)
!13709 = !{null, !2103}
!13710 = !{!13711, !13712}
!13711 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13707, file: !2171, line: 1674, type: !2103)
!13712 = !DILocalVariable(name: "thread", scope: !13707, file: !2171, line: 1676, type: !2072)
!13713 = !DILocation(line: 0, scope: !13707)
!13714 = !DILocation(line: 1678, column: 19, scope: !13707)
!13715 = !DILocation(line: 1678, column: 41, scope: !13707)
!13716 = !DILocation(line: 1678, column: 2, scope: !13707)
!13717 = !DILocation(line: 1679, column: 3, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13707, file: !2171, line: 1678, column: 50)
!13719 = !DILocation(line: 1680, column: 9, scope: !13718)
!13720 = !DILocalVariable(name: "thread", arg: 1, scope: !13721, file: !10436, line: 65, type: !2072)
!13721 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10436, file: !10436, line: 65, type: !13722, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13724)
!13722 = !DISubroutineType(types: !13723)
!13723 = !{null, !2072, !32}
!13724 = !{!13720, !13725}
!13725 = !DILocalVariable(name: "value", arg: 2, scope: !13721, file: !10436, line: 65, type: !32)
!13726 = !DILocation(line: 0, scope: !13721, inlinedAt: !13727)
!13727 = distinct !DILocation(line: 1681, column: 3, scope: !13718)
!13728 = !DILocation(line: 67, column: 15, scope: !13721, inlinedAt: !13727)
!13729 = !DILocation(line: 67, column: 33, scope: !13721, inlinedAt: !13727)
!13730 = !DILocation(line: 1682, column: 3, scope: !13718)
!13731 = distinct !{!13731, !13716, !13732}
!13732 = !DILocation(line: 1683, column: 2, scope: !13707)
!13733 = !DILocation(line: 1684, column: 1, scope: !13707)
!13734 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2171, file: !2171, line: 1794, type: !13735, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13737)
!13735 = !DISubroutineType(types: !13736)
!13736 = !{!103, !2072, !12676}
!13737 = !{!13738, !13739, !13740, !13741}
!13738 = !DILocalVariable(name: "thread", arg: 1, scope: !13734, file: !2171, line: 1794, type: !2072)
!13739 = !DILocalVariable(name: "timeout", arg: 2, scope: !13734, file: !2171, line: 1794, type: !12676)
!13740 = !DILocalVariable(name: "key", scope: !13734, file: !2171, line: 1796, type: !11875)
!13741 = !DILocalVariable(name: "ret", scope: !13734, file: !2171, line: 1797, type: !103)
!13742 = !DILocation(line: 0, scope: !13734)
!13743 = !DILocation(line: 0, scope: !11883, inlinedAt: !13744)
!13744 = distinct !DILocation(line: 1796, column: 25, scope: !13734)
!13745 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !13746)
!13746 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !13744)
!13747 = !DILocation(line: 0, scope: !11892, inlinedAt: !13746)
!13748 = !DILocation(line: 1801, column: 20, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13734, file: !2171, line: 1801, column: 6)
!13750 = !DILocation(line: 1801, column: 33, scope: !13749)
!13751 = !DILocation(line: 1801, column: 49, scope: !13749)
!13752 = !DILocation(line: 1801, column: 6, scope: !13734)
!13753 = !DILocation(line: 1803, column: 13, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13749, file: !2171, line: 1803, column: 13)
!13755 = !DILocation(line: 1803, column: 13, scope: !13749)
!13756 = !DILocation(line: 1805, column: 24, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13754, file: !2171, line: 1805, column: 13)
!13758 = !DILocation(line: 1805, column: 21, scope: !13757)
!13759 = !DILocation(line: 1805, column: 34, scope: !13757)
!13760 = !DILocation(line: 1806, column: 20, scope: !13757)
!13761 = !DILocation(line: 1806, column: 44, scope: !13757)
!13762 = !DILocation(line: 1806, column: 30, scope: !13757)
!13763 = !DILocation(line: 1805, column: 13, scope: !13754)
!13764 = !DILocation(line: 1810, column: 42, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13757, file: !2171, line: 1808, column: 9)
!13766 = !DILocation(line: 1810, column: 3, scope: !13765)
!13767 = !DILocation(line: 1811, column: 22, scope: !13765)
!13768 = !DILocation(line: 1811, column: 3, scope: !13765)
!13769 = !DILocation(line: 0, scope: !12496, inlinedAt: !13770)
!13770 = distinct !DILocation(line: 1814, column: 9, scope: !13765)
!13771 = !DILocation(line: 196, column: 9, scope: !12496, inlinedAt: !13770)
!13772 = !DILocation(line: 1817, column: 3, scope: !13765)
!13773 = !DILocation(line: 0, scope: !13749)
!13774 = !DILocation(line: 0, scope: !11910, inlinedAt: !13775)
!13775 = distinct !DILocation(line: 1822, column: 2, scope: !13734)
!13776 = !DILocation(line: 0, scope: !11918, inlinedAt: !13777)
!13777 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !13775)
!13778 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !13777)
!13779 = !DILocation(line: 1823, column: 2, scope: !13734)
!13780 = !DILocation(line: 1824, column: 1, scope: !13734)
!13781 = distinct !DISubprogram(name: "z_sched_wake", scope: !2171, file: !2171, line: 1882, type: !13782, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13784)
!13782 = !DISubroutineType(types: !13783)
!13783 = !{!580, !2103, !103, !102}
!13784 = !{!13785, !13786, !13787, !13788, !13789, !13790, !13792}
!13785 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13781, file: !2171, line: 1882, type: !2103)
!13786 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13781, file: !2171, line: 1882, type: !103)
!13787 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13781, file: !2171, line: 1882, type: !102)
!13788 = !DILocalVariable(name: "thread", scope: !13781, file: !2171, line: 1884, type: !2072)
!13789 = !DILocalVariable(name: "ret", scope: !13781, file: !2171, line: 1885, type: !580)
!13790 = !DILocalVariable(name: "__i", scope: !13791, file: !2171, line: 1887, type: !11875)
!13791 = distinct !DILexicalBlock(scope: !13781, file: !2171, line: 1887, column: 2)
!13792 = !DILocalVariable(name: "__key", scope: !13791, file: !2171, line: 1887, type: !11875)
!13793 = !DILocation(line: 0, scope: !13781)
!13794 = !DILocation(line: 0, scope: !13791)
!13795 = !DILocation(line: 0, scope: !11883, inlinedAt: !13796)
!13796 = distinct !DILocation(line: 1887, column: 2, scope: !13791)
!13797 = !DILocation(line: 55, column: 2, scope: !11892, inlinedAt: !13798)
!13798 = distinct !DILocation(line: 145, column: 10, scope: !11883, inlinedAt: !13796)
!13799 = !DILocation(line: 0, scope: !11892, inlinedAt: !13798)
!13800 = !DILocation(line: 1888, column: 12, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13802, file: !2171, line: 1887, column: 26)
!13802 = distinct !DILexicalBlock(scope: !13791, file: !2171, line: 1887, column: 2)
!13803 = !DILocation(line: 1890, column: 14, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13801, file: !2171, line: 1890, column: 7)
!13805 = !DILocation(line: 1890, column: 7, scope: !13801)
!13806 = !DILocalVariable(name: "thread", arg: 1, scope: !13807, file: !11281, line: 134, type: !2072)
!13807 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !11281, file: !11281, line: 134, type: !13808, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13810)
!13808 = !DISubroutineType(types: !13809)
!13809 = !{null, !2072, !32, !102}
!13810 = !{!13806, !13811, !13812}
!13811 = !DILocalVariable(name: "value", arg: 2, scope: !13807, file: !11281, line: 135, type: !32)
!13812 = !DILocalVariable(name: "data", arg: 3, scope: !13807, file: !11281, line: 136, type: !102)
!13813 = !DILocation(line: 0, scope: !13807, inlinedAt: !13814)
!13814 = distinct !DILocation(line: 1891, column: 4, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13804, file: !2171, line: 1890, column: 23)
!13816 = !DILocation(line: 0, scope: !13721, inlinedAt: !13817)
!13817 = distinct !DILocation(line: 138, column: 2, scope: !13807, inlinedAt: !13814)
!13818 = !DILocation(line: 67, column: 15, scope: !13721, inlinedAt: !13817)
!13819 = !DILocation(line: 67, column: 33, scope: !13721, inlinedAt: !13817)
!13820 = !DILocation(line: 139, column: 15, scope: !13807, inlinedAt: !13814)
!13821 = !DILocation(line: 139, column: 25, scope: !13807, inlinedAt: !13814)
!13822 = !DILocation(line: 1894, column: 4, scope: !13815)
!13823 = !DILocation(line: 1895, column: 10, scope: !13815)
!13824 = !DILocation(line: 1896, column: 4, scope: !13815)
!13825 = !DILocation(line: 1898, column: 3, scope: !13815)
!13826 = !DILocation(line: 0, scope: !11910, inlinedAt: !13827)
!13827 = distinct !DILocation(line: 1887, column: 2, scope: !13802)
!13828 = !DILocation(line: 0, scope: !11918, inlinedAt: !13829)
!13829 = distinct !DILocation(line: 215, column: 2, scope: !11910, inlinedAt: !13827)
!13830 = !DILocation(line: 95, column: 2, scope: !11918, inlinedAt: !13829)
!13831 = !DILocation(line: 1901, column: 2, scope: !13781)
!13832 = distinct !DISubprogram(name: "z_sched_wait", scope: !2171, file: !2171, line: 1904, type: !13833, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !13835)
!13833 = !DISubroutineType(types: !13834)
!13834 = !{!103, !11886, !11875, !2103, !12676, !2908}
!13835 = !{!13836, !13837, !13838, !13839, !13840, !13841}
!13836 = !DILocalVariable(name: "lock", arg: 1, scope: !13832, file: !2171, line: 1904, type: !11886)
!13837 = !DILocalVariable(name: "key", arg: 2, scope: !13832, file: !2171, line: 1904, type: !11875)
!13838 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13832, file: !2171, line: 1905, type: !2103)
!13839 = !DILocalVariable(name: "timeout", arg: 4, scope: !13832, file: !2171, line: 1905, type: !12676)
!13840 = !DILocalVariable(name: "data", arg: 5, scope: !13832, file: !2171, line: 1905, type: !2908)
!13841 = !DILocalVariable(name: "ret", scope: !13832, file: !2171, line: 1907, type: !103)
!13842 = !DILocation(line: 0, scope: !13832)
!13843 = !DILocation(line: 1907, column: 12, scope: !13832)
!13844 = !DILocation(line: 1909, column: 11, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13832, file: !2171, line: 1909, column: 6)
!13846 = !DILocation(line: 1909, column: 6, scope: !13832)
!13847 = !DILocation(line: 1910, column: 11, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13845, file: !2171, line: 1909, column: 20)
!13849 = !DILocation(line: 1910, column: 26, scope: !13848)
!13850 = !DILocation(line: 1910, column: 9, scope: !13848)
!13851 = !DILocation(line: 1911, column: 2, scope: !13848)
!13852 = !DILocation(line: 1912, column: 2, scope: !13832)
!13853 = distinct !DISubprogram(name: "z_data_copy", scope: !13854, file: !13854, line: 22, type: !2944, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !675)
!13854 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13855 = !DILocation(line: 24, column: 2, scope: !13853)
!13856 = !DILocation(line: 27, column: 2, scope: !13853)
!13857 = !DILocation(line: 71, column: 1, scope: !13853)
!13858 = distinct !DISubprogram(name: "z_add_timeout", scope: !2208, file: !2208, line: 88, type: !13859, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !13865)
!13859 = !DISubroutineType(types: !13860)
!13860 = !{null, !2181, !2200, !13861}
!13861 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !549, line: 67, baseType: !13862)
!13862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 65, size: 64, elements: !13863)
!13863 = !{!13864}
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13862, file: !549, line: 66, baseType: !548, size: 64)
!13865 = !{!13866, !13867, !13868, !13869, !13875, !13876, !13879, !13882}
!13866 = !DILocalVariable(name: "to", arg: 1, scope: !13858, file: !2208, line: 88, type: !2181)
!13867 = !DILocalVariable(name: "fn", arg: 2, scope: !13858, file: !2208, line: 88, type: !2200)
!13868 = !DILocalVariable(name: "timeout", arg: 3, scope: !13858, file: !2208, line: 89, type: !13861)
!13869 = !DILocalVariable(name: "__i", scope: !13870, file: !2208, line: 102, type: !13871)
!13870 = distinct !DILexicalBlock(scope: !13858, file: !2208, line: 102, column: 2)
!13871 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !674, line: 106, baseType: !13872)
!13872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !674, line: 32, size: 32, elements: !13873)
!13873 = !{!13874}
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13872, file: !674, line: 33, baseType: !103, size: 32)
!13875 = !DILocalVariable(name: "__key", scope: !13870, file: !2208, line: 102, type: !13871)
!13876 = !DILocalVariable(name: "t", scope: !13877, file: !2208, line: 103, type: !2181)
!13877 = distinct !DILexicalBlock(scope: !13878, file: !2208, line: 102, column: 24)
!13878 = distinct !DILexicalBlock(scope: !13870, file: !2208, line: 102, column: 2)
!13879 = !DILocalVariable(name: "ticks", scope: !13880, file: !2208, line: 107, type: !548)
!13880 = distinct !DILexicalBlock(scope: !13881, file: !2208, line: 106, column: 39)
!13881 = distinct !DILexicalBlock(scope: !13877, file: !2208, line: 105, column: 7)
!13882 = !DILocalVariable(name: "next_time", scope: !13883, file: !2208, line: 137, type: !1090)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !2208, line: 127, column: 22)
!13884 = distinct !DILexicalBlock(scope: !13877, file: !2208, line: 127, column: 7)
!13885 = !DILocation(line: 0, scope: !13858)
!13886 = !DILocation(line: 91, column: 6, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13858, file: !2208, line: 91, column: 6)
!13888 = !DILocation(line: 91, column: 6, scope: !13858)
!13889 = !DILocation(line: 100, column: 6, scope: !13858)
!13890 = !DILocation(line: 100, column: 9, scope: !13858)
!13891 = !DILocation(line: 0, scope: !13870)
!13892 = !DILocalVariable(name: "l", arg: 1, scope: !13893, file: !674, line: 136, type: !13896)
!13893 = distinct !DISubprogram(name: "k_spin_lock", scope: !674, file: !674, line: 136, type: !13894, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !13897)
!13894 = !DISubroutineType(types: !13895)
!13895 = !{!13871, !13896}
!13896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!13897 = !{!13892, !13898}
!13898 = !DILocalVariable(name: "k", scope: !13893, file: !674, line: 139, type: !13871)
!13899 = !DILocation(line: 0, scope: !13893, inlinedAt: !13900)
!13900 = distinct !DILocation(line: 102, column: 2, scope: !13870)
!13901 = !DILocation(line: 55, column: 2, scope: !13902, inlinedAt: !13906)
!13902 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5762, file: !5762, line: 42, type: !7761, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !13903)
!13903 = !{!13904, !13905}
!13904 = !DILocalVariable(name: "key", scope: !13902, file: !5762, line: 44, type: !32)
!13905 = !DILocalVariable(name: "tmp", scope: !13902, file: !5762, line: 53, type: !32)
!13906 = distinct !DILocation(line: 145, column: 10, scope: !13893, inlinedAt: !13900)
!13907 = !{i64 2846526}
!13908 = !DILocation(line: 0, scope: !13902, inlinedAt: !13906)
!13909 = !DILocation(line: 106, column: 33, scope: !13881)
!13910 = !DILocation(line: 105, column: 7, scope: !13877)
!13911 = !DILocation(line: 107, column: 50, scope: !13880)
!13912 = !DILocation(line: 107, column: 48, scope: !13880)
!13913 = !DILocation(line: 0, scope: !13880)
!13914 = !DILocation(line: 109, column: 17, scope: !13880)
!13915 = !DILocation(line: 110, column: 3, scope: !13880)
!13916 = !DILocation(line: 111, column: 31, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13881, file: !2208, line: 110, column: 10)
!13918 = !DILocation(line: 111, column: 37, scope: !13917)
!13919 = !DILocation(line: 111, column: 35, scope: !13917)
!13920 = !DILocation(line: 0, scope: !13881)
!13921 = !DILocation(line: 109, column: 8, scope: !13880)
!13922 = !DILocation(line: 109, column: 15, scope: !13880)
!13923 = !DILocation(line: 114, column: 12, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13877, file: !2208, line: 114, column: 3)
!13925 = !DILocation(line: 0, scope: !13877)
!13926 = !DILocation(line: 114, column: 3, scope: !13924)
!13927 = !DILocation(line: 115, column: 24, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13929, file: !2208, line: 115, column: 8)
!13929 = distinct !DILexicalBlock(scope: !13930, file: !2208, line: 114, column: 45)
!13930 = distinct !DILexicalBlock(scope: !13924, file: !2208, line: 114, column: 3)
!13931 = !DILocation(line: 115, column: 11, scope: !13928)
!13932 = !DILocation(line: 115, column: 18, scope: !13928)
!13933 = !DILocation(line: 115, column: 8, scope: !13929)
!13934 = !DILocation(line: 116, column: 15, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13928, file: !2208, line: 115, column: 32)
!13936 = !DILocation(line: 117, column: 26, scope: !13935)
!13937 = !DILocation(line: 117, column: 37, scope: !13935)
!13938 = !DILocation(line: 117, column: 5, scope: !13935)
!13939 = !DILocation(line: 123, column: 7, scope: !13877)
!13940 = !DILocation(line: 120, column: 15, scope: !13929)
!13941 = !DILocation(line: 114, column: 36, scope: !13930)
!13942 = distinct !{!13942, !13926, !13943}
!13943 = !DILocation(line: 121, column: 3, scope: !13924)
!13944 = !DILocation(line: 124, column: 41, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13946, file: !2208, line: 123, column: 18)
!13946 = distinct !DILexicalBlock(scope: !13877, file: !2208, line: 123, column: 7)
!13947 = !DILocation(line: 124, column: 4, scope: !13945)
!13948 = !DILocation(line: 125, column: 3, scope: !13945)
!13949 = !DILocation(line: 127, column: 13, scope: !13884)
!13950 = !DILocation(line: 127, column: 10, scope: !13884)
!13951 = !DILocation(line: 127, column: 7, scope: !13877)
!13952 = !DILocation(line: 137, column: 24, scope: !13883)
!13953 = !DILocation(line: 0, scope: !13883)
!13954 = !DILocation(line: 139, column: 18, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13883, file: !2208, line: 139, column: 8)
!13956 = !DILocation(line: 139, column: 23, scope: !13955)
!13957 = !DILocation(line: 141, column: 5, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13955, file: !2208, line: 140, column: 48)
!13959 = !DILocation(line: 142, column: 4, scope: !13958)
!13960 = !DILocalVariable(name: "key", arg: 2, scope: !13961, file: !674, line: 190, type: !13871)
!13961 = distinct !DISubprogram(name: "k_spin_unlock", scope: !674, file: !674, line: 189, type: !13962, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !13964)
!13962 = !DISubroutineType(types: !13963)
!13963 = !{null, !13896, !13871}
!13964 = !{!13965, !13960}
!13965 = !DILocalVariable(name: "l", arg: 1, scope: !13961, file: !674, line: 189, type: !13896)
!13966 = !DILocation(line: 0, scope: !13961, inlinedAt: !13967)
!13967 = distinct !DILocation(line: 102, column: 2, scope: !13878)
!13968 = !DILocalVariable(name: "key", arg: 1, scope: !13969, file: !5762, line: 84, type: !32)
!13969 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5762, file: !5762, line: 84, type: !5598, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !13970)
!13970 = !{!13968}
!13971 = !DILocation(line: 0, scope: !13969, inlinedAt: !13972)
!13972 = distinct !DILocation(line: 215, column: 2, scope: !13961, inlinedAt: !13967)
!13973 = !DILocation(line: 95, column: 2, scope: !13969, inlinedAt: !13972)
!13974 = !{i64 2847343}
!13975 = !DILocation(line: 148, column: 1, scope: !13858)
!13976 = distinct !DISubprogram(name: "elapsed", scope: !2208, file: !2208, line: 62, type: !13977, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !675)
!13977 = !DISubroutineType(types: !13978)
!13978 = !{!1090}
!13979 = !DILocation(line: 64, column: 9, scope: !13976)
!13980 = !DILocation(line: 64, column: 28, scope: !13976)
!13981 = !DILocation(line: 64, column: 35, scope: !13976)
!13982 = !DILocation(line: 64, column: 2, scope: !13976)
!13983 = distinct !DISubprogram(name: "first", scope: !2208, file: !2208, line: 39, type: !13984, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !13986)
!13984 = !DISubroutineType(types: !13985)
!13985 = !{!2181}
!13986 = !{!13987}
!13987 = !DILocalVariable(name: "t", scope: !13983, file: !2208, line: 41, type: !13988)
!13988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!13989 = !DILocation(line: 41, column: 19, scope: !13983)
!13990 = !DILocation(line: 0, scope: !13983)
!13991 = !DILocation(line: 43, column: 9, scope: !13983)
!13992 = !DILocation(line: 43, column: 2, scope: !13983)
!13993 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !683, file: !683, line: 443, type: !13994, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !13996)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{null, !13988, !13988}
!13996 = !{!13997, !13998, !13999}
!13997 = !DILocalVariable(name: "successor", arg: 1, scope: !13993, file: !683, line: 443, type: !13988)
!13998 = !DILocalVariable(name: "node", arg: 2, scope: !13993, file: !683, line: 443, type: !13988)
!13999 = !DILocalVariable(name: "prev", scope: !13993, file: !683, line: 445, type: !14000)
!14000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13988)
!14001 = !DILocation(line: 0, scope: !13993)
!14002 = !DILocation(line: 445, column: 39, scope: !13993)
!14003 = !DILocation(line: 447, column: 8, scope: !13993)
!14004 = !DILocation(line: 447, column: 13, scope: !13993)
!14005 = !DILocation(line: 448, column: 8, scope: !13993)
!14006 = !DILocation(line: 448, column: 13, scope: !13993)
!14007 = !DILocation(line: 449, column: 8, scope: !13993)
!14008 = !DILocation(line: 449, column: 13, scope: !13993)
!14009 = !DILocation(line: 450, column: 18, scope: !13993)
!14010 = !DILocation(line: 451, column: 1, scope: !13993)
!14011 = distinct !DISubprogram(name: "next", scope: !2208, file: !2208, line: 46, type: !14012, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14014)
!14012 = !DISubroutineType(types: !14013)
!14013 = !{!2181, !2181}
!14014 = !{!14015, !14016}
!14015 = !DILocalVariable(name: "t", arg: 1, scope: !14011, file: !2208, line: 46, type: !2181)
!14016 = !DILocalVariable(name: "n", scope: !14011, file: !2208, line: 48, type: !13988)
!14017 = !DILocation(line: 0, scope: !14011)
!14018 = !DILocation(line: 48, column: 58, scope: !14011)
!14019 = !DILocation(line: 48, column: 19, scope: !14011)
!14020 = !DILocation(line: 50, column: 9, scope: !14011)
!14021 = !DILocation(line: 50, column: 2, scope: !14011)
!14022 = distinct !DISubprogram(name: "sys_dlist_append", scope: !683, file: !683, line: 404, type: !14023, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14026)
!14023 = !DISubroutineType(types: !14024)
!14024 = !{null, !14025, !13988}
!14025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!14026 = !{!14027, !14028, !14029}
!14027 = !DILocalVariable(name: "list", arg: 1, scope: !14022, file: !683, line: 404, type: !14025)
!14028 = !DILocalVariable(name: "node", arg: 2, scope: !14022, file: !683, line: 404, type: !13988)
!14029 = !DILocalVariable(name: "tail", scope: !14022, file: !683, line: 406, type: !14000)
!14030 = !DILocation(line: 0, scope: !14022)
!14031 = !DILocation(line: 406, column: 34, scope: !14022)
!14032 = !DILocation(line: 408, column: 8, scope: !14022)
!14033 = !DILocation(line: 408, column: 13, scope: !14022)
!14034 = !DILocation(line: 409, column: 8, scope: !14022)
!14035 = !DILocation(line: 409, column: 13, scope: !14022)
!14036 = !DILocation(line: 411, column: 8, scope: !14022)
!14037 = !DILocation(line: 411, column: 13, scope: !14022)
!14038 = !DILocation(line: 412, column: 13, scope: !14022)
!14039 = !DILocation(line: 413, column: 1, scope: !14022)
!14040 = distinct !DISubprogram(name: "next_timeout", scope: !2208, file: !2208, line: 67, type: !13977, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14041)
!14041 = !{!14042, !14043, !14044}
!14042 = !DILocalVariable(name: "to", scope: !14040, file: !2208, line: 69, type: !2181)
!14043 = !DILocalVariable(name: "ticks_elapsed", scope: !14040, file: !2208, line: 70, type: !1090)
!14044 = !DILocalVariable(name: "ret", scope: !14040, file: !2208, line: 71, type: !1090)
!14045 = !DILocation(line: 69, column: 24, scope: !14040)
!14046 = !DILocation(line: 0, scope: !14040)
!14047 = !DILocation(line: 70, column: 26, scope: !14040)
!14048 = !DILocation(line: 73, column: 10, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14040, file: !2208, line: 73, column: 6)
!14050 = !DILocation(line: 73, column: 19, scope: !14049)
!14051 = !DILocation(line: 74, column: 21, scope: !14049)
!14052 = !DILocation(line: 74, column: 30, scope: !14049)
!14053 = !DILocation(line: 74, column: 28, scope: !14049)
!14054 = !DILocation(line: 74, column: 45, scope: !14049)
!14055 = !DILocation(line: 73, column: 6, scope: !14040)
!14056 = !DILocation(line: 77, column: 9, scope: !14057)
!14057 = distinct !DILexicalBlock(scope: !14049, file: !2208, line: 76, column: 9)
!14058 = !DILocation(line: 0, scope: !14049)
!14059 = !DILocation(line: 81, column: 20, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14040, file: !2208, line: 81, column: 6)
!14061 = !DILocation(line: 81, column: 6, scope: !14060)
!14062 = !DILocation(line: 81, column: 32, scope: !14060)
!14063 = !DILocation(line: 85, column: 2, scope: !14040)
!14064 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !683, file: !683, line: 341, type: !14065, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14067)
!14065 = !DISubroutineType(types: !14066)
!14066 = !{!13988, !14025, !13988}
!14067 = !{!14068, !14069}
!14068 = !DILocalVariable(name: "list", arg: 1, scope: !14064, file: !683, line: 341, type: !14025)
!14069 = !DILocalVariable(name: "node", arg: 2, scope: !14064, file: !683, line: 342, type: !13988)
!14070 = !DILocation(line: 0, scope: !14064)
!14071 = !DILocation(line: 344, column: 15, scope: !14064)
!14072 = !DILocation(line: 344, column: 9, scope: !14064)
!14073 = !DILocation(line: 344, column: 26, scope: !14064)
!14074 = !DILocation(line: 344, column: 2, scope: !14064)
!14075 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !683, file: !683, line: 325, type: !14065, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14076)
!14076 = !{!14077, !14078}
!14077 = !DILocalVariable(name: "list", arg: 1, scope: !14075, file: !683, line: 325, type: !14025)
!14078 = !DILocalVariable(name: "node", arg: 2, scope: !14075, file: !683, line: 326, type: !13988)
!14079 = !DILocation(line: 0, scope: !14075)
!14080 = !DILocation(line: 328, column: 24, scope: !14075)
!14081 = !DILocation(line: 328, column: 15, scope: !14075)
!14082 = !DILocation(line: 328, column: 9, scope: !14075)
!14083 = !DILocation(line: 328, column: 45, scope: !14075)
!14084 = !DILocation(line: 328, column: 2, scope: !14075)
!14085 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !683, file: !683, line: 294, type: !14086, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14088)
!14086 = !DISubroutineType(types: !14087)
!14087 = !{!13988, !14025}
!14088 = !{!14089}
!14089 = !DILocalVariable(name: "list", arg: 1, scope: !14085, file: !683, line: 294, type: !14025)
!14090 = !DILocation(line: 0, scope: !14085)
!14091 = !DILocation(line: 296, column: 9, scope: !14085)
!14092 = !DILocation(line: 296, column: 2, scope: !14085)
!14093 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !683, file: !683, line: 266, type: !14094, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14096)
!14094 = !DISubroutineType(types: !14095)
!14095 = !{!580, !14025}
!14096 = !{!14097}
!14097 = !DILocalVariable(name: "list", arg: 1, scope: !14093, file: !683, line: 266, type: !14025)
!14098 = !DILocation(line: 0, scope: !14093)
!14099 = !DILocation(line: 268, column: 15, scope: !14093)
!14100 = !DILocation(line: 268, column: 20, scope: !14093)
!14101 = !DILocation(line: 268, column: 2, scope: !14093)
!14102 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2208, file: !2208, line: 150, type: !14103, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14105)
!14103 = !DISubroutineType(types: !14104)
!14104 = !{!103, !2181}
!14105 = !{!14106, !14107, !14108, !14110}
!14106 = !DILocalVariable(name: "to", arg: 1, scope: !14102, file: !2208, line: 150, type: !2181)
!14107 = !DILocalVariable(name: "ret", scope: !14102, file: !2208, line: 152, type: !103)
!14108 = !DILocalVariable(name: "__i", scope: !14109, file: !2208, line: 154, type: !13871)
!14109 = distinct !DILexicalBlock(scope: !14102, file: !2208, line: 154, column: 2)
!14110 = !DILocalVariable(name: "__key", scope: !14109, file: !2208, line: 154, type: !13871)
!14111 = !DILocation(line: 0, scope: !14102)
!14112 = !DILocation(line: 0, scope: !14109)
!14113 = !DILocation(line: 0, scope: !13893, inlinedAt: !14114)
!14114 = distinct !DILocation(line: 154, column: 2, scope: !14109)
!14115 = !DILocation(line: 55, column: 2, scope: !13902, inlinedAt: !14116)
!14116 = distinct !DILocation(line: 145, column: 10, scope: !13893, inlinedAt: !14114)
!14117 = !DILocation(line: 0, scope: !13902, inlinedAt: !14116)
!14118 = !DILocation(line: 155, column: 7, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14120, file: !2208, line: 155, column: 7)
!14120 = distinct !DILexicalBlock(scope: !14121, file: !2208, line: 154, column: 24)
!14121 = distinct !DILexicalBlock(scope: !14109, file: !2208, line: 154, column: 2)
!14122 = !DILocation(line: 155, column: 7, scope: !14120)
!14123 = !DILocation(line: 156, column: 4, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14119, file: !2208, line: 155, column: 39)
!14125 = !DILocation(line: 158, column: 3, scope: !14124)
!14126 = !DILocation(line: 0, scope: !13961, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 154, column: 2, scope: !14121)
!14128 = !DILocation(line: 0, scope: !13969, inlinedAt: !14129)
!14129 = distinct !DILocation(line: 215, column: 2, scope: !13961, inlinedAt: !14127)
!14130 = !DILocation(line: 95, column: 2, scope: !13969, inlinedAt: !14129)
!14131 = !DILocation(line: 161, column: 2, scope: !14102)
!14132 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !683, file: !683, line: 225, type: !14133, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14137)
!14133 = !DISubroutineType(types: !14134)
!14134 = !{!580, !14135}
!14135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14136, size: 32)
!14136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!14137 = !{!14138}
!14138 = !DILocalVariable(name: "node", arg: 1, scope: !14132, file: !683, line: 225, type: !14135)
!14139 = !DILocation(line: 0, scope: !14132)
!14140 = !DILocation(line: 227, column: 15, scope: !14132)
!14141 = !DILocation(line: 227, column: 20, scope: !14132)
!14142 = !DILocation(line: 227, column: 2, scope: !14132)
!14143 = distinct !DISubprogram(name: "remove_timeout", scope: !2208, file: !2208, line: 53, type: !2202, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14144)
!14144 = !{!14145}
!14145 = !DILocalVariable(name: "t", arg: 1, scope: !14143, file: !2208, line: 53, type: !2181)
!14146 = !DILocation(line: 0, scope: !14143)
!14147 = !DILocation(line: 55, column: 6, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14143, file: !2208, line: 55, column: 6)
!14149 = !DILocation(line: 55, column: 14, scope: !14148)
!14150 = !DILocation(line: 55, column: 6, scope: !14143)
!14151 = !DILocation(line: 56, column: 25, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14148, file: !2208, line: 55, column: 23)
!14153 = !DILocation(line: 56, column: 12, scope: !14152)
!14154 = !DILocation(line: 56, column: 19, scope: !14152)
!14155 = !DILocation(line: 57, column: 2, scope: !14152)
!14156 = !DILocation(line: 59, column: 23, scope: !14143)
!14157 = !DILocation(line: 59, column: 2, scope: !14143)
!14158 = !DILocation(line: 60, column: 1, scope: !14143)
!14159 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !683, file: !683, line: 496, type: !14160, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14162)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{null, !13988}
!14162 = !{!14163, !14164, !14165}
!14163 = !DILocalVariable(name: "node", arg: 1, scope: !14159, file: !683, line: 496, type: !13988)
!14164 = !DILocalVariable(name: "prev", scope: !14159, file: !683, line: 498, type: !14000)
!14165 = !DILocalVariable(name: "next", scope: !14159, file: !683, line: 499, type: !14000)
!14166 = !DILocation(line: 0, scope: !14159)
!14167 = !DILocation(line: 498, column: 34, scope: !14159)
!14168 = !DILocation(line: 499, column: 34, scope: !14159)
!14169 = !DILocation(line: 501, column: 8, scope: !14159)
!14170 = !DILocation(line: 501, column: 13, scope: !14159)
!14171 = !DILocation(line: 502, column: 8, scope: !14159)
!14172 = !DILocation(line: 502, column: 13, scope: !14159)
!14173 = !DILocation(line: 503, column: 2, scope: !14159)
!14174 = !DILocation(line: 504, column: 1, scope: !14159)
!14175 = distinct !DISubprogram(name: "sys_dnode_init", scope: !683, file: !683, line: 211, type: !14160, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14176)
!14176 = !{!14177}
!14177 = !DILocalVariable(name: "node", arg: 1, scope: !14175, file: !683, line: 211, type: !13988)
!14178 = !DILocation(line: 0, scope: !14175)
!14179 = !DILocation(line: 213, column: 8, scope: !14175)
!14180 = !DILocation(line: 213, column: 13, scope: !14175)
!14181 = !DILocation(line: 214, column: 8, scope: !14175)
!14182 = !DILocation(line: 214, column: 13, scope: !14175)
!14183 = !DILocation(line: 215, column: 1, scope: !14175)
!14184 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2208, file: !2208, line: 183, type: !14185, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14189)
!14185 = !DISubroutineType(types: !14186)
!14186 = !{!548, !14187}
!14187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14188, size: 32)
!14188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2182)
!14189 = !{!14190, !14191, !14192, !14194}
!14190 = !DILocalVariable(name: "timeout", arg: 1, scope: !14184, file: !2208, line: 183, type: !14187)
!14191 = !DILocalVariable(name: "ticks", scope: !14184, file: !2208, line: 185, type: !548)
!14192 = !DILocalVariable(name: "__i", scope: !14193, file: !2208, line: 187, type: !13871)
!14193 = distinct !DILexicalBlock(scope: !14184, file: !2208, line: 187, column: 2)
!14194 = !DILocalVariable(name: "__key", scope: !14193, file: !2208, line: 187, type: !13871)
!14195 = !DILocation(line: 0, scope: !14184)
!14196 = !DILocation(line: 0, scope: !14193)
!14197 = !DILocation(line: 0, scope: !13893, inlinedAt: !14198)
!14198 = distinct !DILocation(line: 187, column: 2, scope: !14193)
!14199 = !DILocation(line: 55, column: 2, scope: !13902, inlinedAt: !14200)
!14200 = distinct !DILocation(line: 145, column: 10, scope: !13893, inlinedAt: !14198)
!14201 = !DILocation(line: 0, scope: !13902, inlinedAt: !14200)
!14202 = !DILocation(line: 188, column: 11, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14204, file: !2208, line: 187, column: 24)
!14204 = distinct !DILexicalBlock(scope: !14193, file: !2208, line: 187, column: 2)
!14205 = !DILocation(line: 0, scope: !13961, inlinedAt: !14206)
!14206 = distinct !DILocation(line: 187, column: 2, scope: !14204)
!14207 = !DILocation(line: 0, scope: !13969, inlinedAt: !14208)
!14208 = distinct !DILocation(line: 215, column: 2, scope: !13961, inlinedAt: !14206)
!14209 = !DILocation(line: 95, column: 2, scope: !13969, inlinedAt: !14208)
!14210 = !DILocation(line: 191, column: 2, scope: !14184)
!14211 = distinct !DISubprogram(name: "timeout_rem", scope: !2208, file: !2208, line: 165, type: !14185, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14212)
!14212 = !{!14213, !14214, !14215}
!14213 = !DILocalVariable(name: "timeout", arg: 1, scope: !14211, file: !2208, line: 165, type: !14187)
!14214 = !DILocalVariable(name: "ticks", scope: !14211, file: !2208, line: 167, type: !548)
!14215 = !DILocalVariable(name: "t", scope: !14216, file: !2208, line: 173, type: !2181)
!14216 = distinct !DILexicalBlock(scope: !14211, file: !2208, line: 173, column: 2)
!14217 = !DILocation(line: 0, scope: !14211)
!14218 = !DILocation(line: 169, column: 6, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14211, file: !2208, line: 169, column: 6)
!14220 = !DILocation(line: 169, column: 6, scope: !14211)
!14221 = !DILocation(line: 173, column: 28, scope: !14216)
!14222 = !DILocation(line: 0, scope: !14216)
!14223 = !DILocation(line: 173, column: 39, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14216, file: !2208, line: 173, column: 2)
!14225 = !DILocation(line: 173, column: 2, scope: !14216)
!14226 = !DILocation(line: 174, column: 15, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14224, file: !2208, line: 173, column: 61)
!14228 = !DILocation(line: 174, column: 9, scope: !14227)
!14229 = !DILocation(line: 175, column: 15, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14227, file: !2208, line: 175, column: 7)
!14231 = !DILocation(line: 175, column: 7, scope: !14227)
!14232 = !DILocation(line: 173, column: 52, scope: !14224)
!14233 = distinct !{!14233, !14225, !14234}
!14234 = !DILocation(line: 178, column: 2, scope: !14216)
!14235 = !DILocation(line: 180, column: 17, scope: !14211)
!14236 = !DILocation(line: 180, column: 15, scope: !14211)
!14237 = !DILocation(line: 180, column: 2, scope: !14211)
!14238 = !DILocation(line: 181, column: 1, scope: !14211)
!14239 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !10786, file: !10786, line: 35, type: !14240, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14242)
!14240 = !DISubroutineType(types: !14241)
!14241 = !{!580, !14187}
!14242 = !{!14243}
!14243 = !DILocalVariable(name: "to", arg: 1, scope: !14239, file: !10786, line: 35, type: !14187)
!14244 = !DILocation(line: 0, scope: !14239)
!14245 = !DILocation(line: 37, column: 35, scope: !14239)
!14246 = !DILocation(line: 37, column: 10, scope: !14239)
!14247 = !DILocation(line: 37, column: 9, scope: !14239)
!14248 = !DILocation(line: 37, column: 2, scope: !14239)
!14249 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2208, file: !2208, line: 194, type: !14185, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14250)
!14250 = !{!14251, !14252, !14253, !14255}
!14251 = !DILocalVariable(name: "timeout", arg: 1, scope: !14249, file: !2208, line: 194, type: !14187)
!14252 = !DILocalVariable(name: "ticks", scope: !14249, file: !2208, line: 196, type: !548)
!14253 = !DILocalVariable(name: "__i", scope: !14254, file: !2208, line: 198, type: !13871)
!14254 = distinct !DILexicalBlock(scope: !14249, file: !2208, line: 198, column: 2)
!14255 = !DILocalVariable(name: "__key", scope: !14254, file: !2208, line: 198, type: !13871)
!14256 = !DILocation(line: 0, scope: !14249)
!14257 = !DILocation(line: 0, scope: !14254)
!14258 = !DILocation(line: 0, scope: !13893, inlinedAt: !14259)
!14259 = distinct !DILocation(line: 198, column: 2, scope: !14254)
!14260 = !DILocation(line: 55, column: 2, scope: !13902, inlinedAt: !14261)
!14261 = distinct !DILocation(line: 145, column: 10, scope: !13893, inlinedAt: !14259)
!14262 = !DILocation(line: 0, scope: !13902, inlinedAt: !14261)
!14263 = !DILocation(line: 199, column: 11, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14265, file: !2208, line: 198, column: 24)
!14265 = distinct !DILexicalBlock(scope: !14254, file: !2208, line: 198, column: 2)
!14266 = !DILocation(line: 199, column: 23, scope: !14264)
!14267 = !DILocation(line: 0, scope: !13961, inlinedAt: !14268)
!14268 = distinct !DILocation(line: 198, column: 2, scope: !14265)
!14269 = !DILocation(line: 0, scope: !13969, inlinedAt: !14270)
!14270 = distinct !DILocation(line: 215, column: 2, scope: !13961, inlinedAt: !14268)
!14271 = !DILocation(line: 95, column: 2, scope: !13969, inlinedAt: !14270)
!14272 = !DILocation(line: 199, column: 21, scope: !14264)
!14273 = !DILocation(line: 202, column: 2, scope: !14249)
!14274 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2208, file: !2208, line: 205, type: !13977, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14275)
!14275 = !{!14276, !14277, !14279}
!14276 = !DILocalVariable(name: "ret", scope: !14274, file: !2208, line: 207, type: !1090)
!14277 = !DILocalVariable(name: "__i", scope: !14278, file: !2208, line: 209, type: !13871)
!14278 = distinct !DILexicalBlock(scope: !14274, file: !2208, line: 209, column: 2)
!14279 = !DILocalVariable(name: "__key", scope: !14278, file: !2208, line: 209, type: !13871)
!14280 = !DILocation(line: 0, scope: !14274)
!14281 = !DILocation(line: 0, scope: !14278)
!14282 = !DILocation(line: 0, scope: !13893, inlinedAt: !14283)
!14283 = distinct !DILocation(line: 209, column: 2, scope: !14278)
!14284 = !DILocation(line: 55, column: 2, scope: !13902, inlinedAt: !14285)
!14285 = distinct !DILocation(line: 145, column: 10, scope: !13893, inlinedAt: !14283)
!14286 = !DILocation(line: 0, scope: !13902, inlinedAt: !14285)
!14287 = !DILocation(line: 210, column: 9, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14289, file: !2208, line: 209, column: 24)
!14289 = distinct !DILexicalBlock(scope: !14278, file: !2208, line: 209, column: 2)
!14290 = !DILocation(line: 0, scope: !13961, inlinedAt: !14291)
!14291 = distinct !DILocation(line: 209, column: 2, scope: !14289)
!14292 = !DILocation(line: 0, scope: !13969, inlinedAt: !14293)
!14293 = distinct !DILocation(line: 215, column: 2, scope: !13961, inlinedAt: !14291)
!14294 = !DILocation(line: 95, column: 2, scope: !13969, inlinedAt: !14293)
!14295 = !DILocation(line: 212, column: 2, scope: !14274)
!14296 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2208, file: !2208, line: 215, type: !8420, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14297)
!14297 = !{!14298, !14299, !14300, !14302, !14303, !14306, !14307}
!14298 = !DILocalVariable(name: "ticks", arg: 1, scope: !14296, file: !2208, line: 215, type: !1090)
!14299 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14296, file: !2208, line: 215, type: !580)
!14300 = !DILocalVariable(name: "__i", scope: !14301, file: !2208, line: 217, type: !13871)
!14301 = distinct !DILexicalBlock(scope: !14296, file: !2208, line: 217, column: 2)
!14302 = !DILocalVariable(name: "__key", scope: !14301, file: !2208, line: 217, type: !13871)
!14303 = !DILocalVariable(name: "next_to", scope: !14304, file: !2208, line: 218, type: !103)
!14304 = distinct !DILexicalBlock(scope: !14305, file: !2208, line: 217, column: 24)
!14305 = distinct !DILexicalBlock(scope: !14301, file: !2208, line: 217, column: 2)
!14306 = !DILocalVariable(name: "sooner", scope: !14304, file: !2208, line: 219, type: !580)
!14307 = !DILocalVariable(name: "imminent", scope: !14304, file: !2208, line: 221, type: !580)
!14308 = !DILocation(line: 0, scope: !14296)
!14309 = !DILocation(line: 0, scope: !14301)
!14310 = !DILocation(line: 0, scope: !13893, inlinedAt: !14311)
!14311 = distinct !DILocation(line: 217, column: 2, scope: !14301)
!14312 = !DILocation(line: 55, column: 2, scope: !13902, inlinedAt: !14313)
!14313 = distinct !DILocation(line: 145, column: 10, scope: !13893, inlinedAt: !14311)
!14314 = !DILocation(line: 0, scope: !13902, inlinedAt: !14313)
!14315 = !DILocation(line: 218, column: 17, scope: !14304)
!14316 = !DILocation(line: 0, scope: !14304)
!14317 = !DILocation(line: 221, column: 27, scope: !14304)
!14318 = !DILocation(line: 233, column: 17, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14304, file: !2208, line: 233, column: 7)
!14320 = !DILocation(line: 234, column: 26, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14319, file: !2208, line: 233, column: 56)
!14322 = !DILocation(line: 234, column: 4, scope: !14321)
!14323 = !DILocation(line: 235, column: 3, scope: !14321)
!14324 = !DILocation(line: 0, scope: !13961, inlinedAt: !14325)
!14325 = distinct !DILocation(line: 217, column: 2, scope: !14305)
!14326 = !DILocation(line: 0, scope: !13969, inlinedAt: !14327)
!14327 = distinct !DILocation(line: 215, column: 2, scope: !13961, inlinedAt: !14325)
!14328 = !DILocation(line: 95, column: 2, scope: !13969, inlinedAt: !14327)
!14329 = !DILocation(line: 237, column: 1, scope: !14296)
!14330 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2208, file: !2208, line: 239, type: !14331, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14333)
!14331 = !DISubroutineType(types: !14332)
!14332 = !{null, !1090}
!14333 = !{!14334, !14335, !14336, !14338}
!14334 = !DILocalVariable(name: "ticks", arg: 1, scope: !14330, file: !2208, line: 239, type: !1090)
!14335 = !DILocalVariable(name: "key", scope: !14330, file: !2208, line: 245, type: !13871)
!14336 = !DILocalVariable(name: "t", scope: !14337, file: !2208, line: 262, type: !2181)
!14337 = distinct !DILexicalBlock(scope: !14330, file: !2208, line: 261, column: 67)
!14338 = !DILocalVariable(name: "dt", scope: !14337, file: !2208, line: 263, type: !103)
!14339 = !DILocation(line: 0, scope: !14330)
!14340 = !DILocation(line: 242, column: 2, scope: !14330)
!14341 = !DILocation(line: 0, scope: !13893, inlinedAt: !14342)
!14342 = distinct !DILocation(line: 245, column: 25, scope: !14330)
!14343 = !DILocation(line: 55, column: 2, scope: !13902, inlinedAt: !14344)
!14344 = distinct !DILocation(line: 145, column: 10, scope: !13893, inlinedAt: !14342)
!14345 = !DILocation(line: 0, scope: !13902, inlinedAt: !14344)
!14346 = !DILocation(line: 261, column: 9, scope: !14330)
!14347 = !DILocation(line: 261, column: 17, scope: !14330)
!14348 = !DILocation(line: 261, column: 25, scope: !14330)
!14349 = !DILocation(line: 261, column: 37, scope: !14330)
!14350 = !DILocation(line: 261, column: 47, scope: !14330)
!14351 = !DILocation(line: 261, column: 44, scope: !14330)
!14352 = !DILocation(line: 261, column: 2, scope: !14330)
!14353 = !DILocation(line: 0, scope: !14337)
!14354 = !DILocation(line: 263, column: 12, scope: !14337)
!14355 = !DILocation(line: 265, column: 16, scope: !14337)
!14356 = !DILocation(line: 265, column: 13, scope: !14337)
!14357 = !DILocation(line: 266, column: 13, scope: !14337)
!14358 = !DILocation(line: 267, column: 3, scope: !14337)
!14359 = !DILocation(line: 0, scope: !13961, inlinedAt: !14360)
!14360 = distinct !DILocation(line: 269, column: 3, scope: !14337)
!14361 = !DILocation(line: 0, scope: !13969, inlinedAt: !14362)
!14362 = distinct !DILocation(line: 215, column: 2, scope: !13961, inlinedAt: !14360)
!14363 = !DILocation(line: 95, column: 2, scope: !13969, inlinedAt: !14362)
!14364 = !DILocation(line: 270, column: 6, scope: !14337)
!14365 = !DILocation(line: 270, column: 3, scope: !14337)
!14366 = !DILocation(line: 0, scope: !13893, inlinedAt: !14367)
!14367 = distinct !DILocation(line: 271, column: 9, scope: !14337)
!14368 = !DILocation(line: 55, column: 2, scope: !13902, inlinedAt: !14369)
!14369 = distinct !DILocation(line: 145, column: 10, scope: !13893, inlinedAt: !14367)
!14370 = !DILocation(line: 0, scope: !13902, inlinedAt: !14369)
!14371 = !DILocation(line: 272, column: 22, scope: !14337)
!14372 = distinct !{!14372, !14352, !14373}
!14373 = !DILocation(line: 273, column: 2, scope: !14330)
!14374 = !DILocation(line: 276, column: 19, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14376, file: !2208, line: 275, column: 23)
!14376 = distinct !DILexicalBlock(scope: !14330, file: !2208, line: 275, column: 6)
!14377 = !DILocation(line: 277, column: 2, scope: !14375)
!14378 = !DILocation(line: 279, column: 15, scope: !14330)
!14379 = !DILocation(line: 279, column: 12, scope: !14330)
!14380 = !DILocation(line: 280, column: 21, scope: !14330)
!14381 = !DILocation(line: 282, column: 24, scope: !14330)
!14382 = !DILocation(line: 282, column: 2, scope: !14330)
!14383 = !DILocation(line: 0, scope: !13961, inlinedAt: !14384)
!14384 = distinct !DILocation(line: 284, column: 2, scope: !14330)
!14385 = !DILocation(line: 0, scope: !13969, inlinedAt: !14386)
!14386 = distinct !DILocation(line: 215, column: 2, scope: !13961, inlinedAt: !14384)
!14387 = !DILocation(line: 95, column: 2, scope: !13969, inlinedAt: !14386)
!14388 = !DILocation(line: 285, column: 1, scope: !14330)
!14389 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2208, file: !2208, line: 287, type: !14390, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14392)
!14390 = !DISubroutineType(types: !14391)
!14391 = !{!550}
!14392 = !{!14393, !14394, !14396}
!14393 = !DILocalVariable(name: "t", scope: !14389, file: !2208, line: 289, type: !2050)
!14394 = !DILocalVariable(name: "__i", scope: !14395, file: !2208, line: 291, type: !13871)
!14395 = distinct !DILexicalBlock(scope: !14389, file: !2208, line: 291, column: 2)
!14396 = !DILocalVariable(name: "__key", scope: !14395, file: !2208, line: 291, type: !13871)
!14397 = !DILocation(line: 0, scope: !14389)
!14398 = !DILocation(line: 0, scope: !14395)
!14399 = !DILocation(line: 0, scope: !13893, inlinedAt: !14400)
!14400 = distinct !DILocation(line: 291, column: 2, scope: !14395)
!14401 = !DILocation(line: 55, column: 2, scope: !13902, inlinedAt: !14402)
!14402 = distinct !DILocation(line: 145, column: 10, scope: !13893, inlinedAt: !14400)
!14403 = !DILocation(line: 0, scope: !13902, inlinedAt: !14402)
!14404 = !DILocation(line: 292, column: 7, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14406, file: !2208, line: 291, column: 24)
!14406 = distinct !DILexicalBlock(scope: !14395, file: !2208, line: 291, column: 2)
!14407 = !DILocation(line: 292, column: 19, scope: !14405)
!14408 = !DILocation(line: 0, scope: !13961, inlinedAt: !14409)
!14409 = distinct !DILocation(line: 291, column: 2, scope: !14406)
!14410 = !DILocation(line: 0, scope: !13969, inlinedAt: !14411)
!14411 = distinct !DILocation(line: 215, column: 2, scope: !13961, inlinedAt: !14409)
!14412 = !DILocation(line: 95, column: 2, scope: !13969, inlinedAt: !14411)
!14413 = !DILocation(line: 292, column: 17, scope: !14405)
!14414 = !DILocation(line: 294, column: 2, scope: !14389)
!14415 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2208, file: !2208, line: 297, type: !5728, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !675)
!14416 = !DILocation(line: 300, column: 19, scope: !14415)
!14417 = !DILocation(line: 300, column: 9, scope: !14415)
!14418 = !DILocation(line: 300, column: 2, scope: !14415)
!14419 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2208, file: !2208, line: 306, type: !14390, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !675)
!14420 = !DILocation(line: 308, column: 9, scope: !14419)
!14421 = !DILocation(line: 308, column: 2, scope: !14419)
!14422 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2208, file: !2208, line: 319, type: !5738, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14423)
!14423 = !{!14424, !14425, !14426, !14427}
!14424 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14422, file: !2208, line: 319, type: !404)
!14425 = !DILocalVariable(name: "start_cycles", scope: !14422, file: !2208, line: 328, type: !404)
!14426 = !DILocalVariable(name: "cycles_to_wait", scope: !14422, file: !2208, line: 331, type: !404)
!14427 = !DILocalVariable(name: "current_cycles", scope: !14428, file: !2208, line: 338, type: !404)
!14428 = distinct !DILexicalBlock(scope: !14429, file: !2208, line: 337, column: 11)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !2208, line: 337, column: 2)
!14430 = distinct !DILexicalBlock(scope: !14422, file: !2208, line: 337, column: 2)
!14431 = !DILocation(line: 0, scope: !14422)
!14432 = !DILocation(line: 322, column: 19, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14422, file: !2208, line: 322, column: 6)
!14434 = !DILocation(line: 322, column: 6, scope: !14422)
!14435 = !DILocation(line: 328, column: 26, scope: !14422)
!14436 = !DILocation(line: 333, column: 43, scope: !14422)
!14437 = !DILocation(line: 337, column: 2, scope: !14422)
!14438 = !DILocation(line: 338, column: 29, scope: !14428)
!14439 = !DILocation(line: 0, scope: !14428)
!14440 = !DILocation(line: 341, column: 23, scope: !14441)
!14441 = distinct !DILexicalBlock(scope: !14428, file: !2208, line: 341, column: 7)
!14442 = !DILocation(line: 341, column: 39, scope: !14441)
!14443 = !DILocation(line: 349, column: 1, scope: !14422)
!14444 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !654, file: !654, line: 1675, type: !5728, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !675)
!14445 = !DILocation(line: 1677, column: 9, scope: !14444)
!14446 = !DILocation(line: 1677, column: 2, scope: !14444)
!14447 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14448, file: !14448, line: 24, type: !5728, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !675)
!14448 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14449 = !DILocation(line: 26, column: 9, scope: !14447)
!14450 = !DILocation(line: 26, column: 2, scope: !14447)
!14451 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2208, file: !2208, line: 364, type: !14452, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2178, retainedNodes: !14454)
!14452 = !DISubroutineType(types: !14453)
!14453 = !{!2050, !13861}
!14454 = !{!14455, !14456}
!14455 = !DILocalVariable(name: "timeout", arg: 1, scope: !14451, file: !2208, line: 364, type: !13861)
!14456 = !DILocalVariable(name: "dt", scope: !14451, file: !2208, line: 366, type: !548)
!14457 = !DILocation(line: 0, scope: !14451)
!14458 = !DILocation(line: 368, column: 6, scope: !14451)
!14459 = !DILocation(line: 371, column: 10, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14461, file: !2208, line: 370, column: 47)
!14461 = distinct !DILexicalBlock(scope: !14462, file: !2208, line: 370, column: 13)
!14462 = distinct !DILexicalBlock(scope: !14451, file: !2208, line: 368, column: 6)
!14463 = !DILocation(line: 371, column: 3, scope: !14460)
!14464 = !DILocation(line: 376, column: 58, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14466, file: !2208, line: 376, column: 7)
!14466 = distinct !DILexicalBlock(scope: !14461, file: !2208, line: 372, column: 9)
!14467 = !DILocation(line: 376, column: 7, scope: !14466)
!14468 = !DILocation(line: 376, column: 43, scope: !14465)
!14469 = !DILocation(line: 377, column: 4, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14465, file: !2208, line: 376, column: 64)
!14471 = !DILocation(line: 379, column: 10, scope: !14466)
!14472 = !DILocation(line: 379, column: 33, scope: !14466)
!14473 = !DILocation(line: 379, column: 31, scope: !14466)
!14474 = !DILocation(line: 379, column: 3, scope: !14466)
!14475 = !DILocation(line: 0, scope: !14462)
!14476 = !DILocation(line: 381, column: 1, scope: !14451)
!14477 = distinct !DISubprogram(name: "k_free", scope: !14478, file: !14478, line: 43, type: !5582, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !14479)
!14478 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14479 = !{!14480, !14481}
!14480 = !DILocalVariable(name: "ptr", arg: 1, scope: !14477, file: !14478, line: 43, type: !102)
!14481 = !DILocalVariable(name: "heap_ref", scope: !14477, file: !14478, line: 45, type: !14482)
!14482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14483, size: 32)
!14483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14484, size: 32)
!14484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !654, line: 5073, size: 160, elements: !14485)
!14485 = !{!14486, !14492, !14511}
!14486 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14484, file: !654, line: 5074, baseType: !14487, size: 96)
!14487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !14488)
!14488 = !{!14489, !14490, !14491}
!14489 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14487, file: !1872, line: 57, baseType: !1875, size: 32)
!14490 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14487, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!14491 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14487, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!14492 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14484, file: !654, line: 5075, baseType: !14493, size: 64, offset: 96)
!14493 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !14494)
!14494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !14495)
!14495 = !{!14496}
!14496 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14494, file: !678, line: 232, baseType: !14497, size: 64)
!14497 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !14498)
!14498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !683, line: 37, size: 64, elements: !14499)
!14499 = !{!14500, !14506}
!14500 = !DIDerivedType(tag: DW_TAG_member, scope: !14498, file: !683, line: 38, baseType: !14501, size: 32)
!14501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14498, file: !683, line: 38, size: 32, elements: !14502)
!14502 = !{!14503, !14505}
!14503 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14501, file: !683, line: 39, baseType: !14504, size: 32)
!14504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14498, size: 32)
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14501, file: !683, line: 40, baseType: !14504, size: 32)
!14506 = !DIDerivedType(tag: DW_TAG_member, scope: !14498, file: !683, line: 42, baseType: !14507, size: 32, offset: 32)
!14507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14498, file: !683, line: 42, size: 32, elements: !14508)
!14508 = !{!14509, !14510}
!14509 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14507, file: !683, line: 43, baseType: !14504, size: 32)
!14510 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14507, file: !683, line: 44, baseType: !14504, size: 32)
!14511 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14484, file: !654, line: 5076, baseType: !14512, offset: 160)
!14512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!14513 = !DILocation(line: 0, scope: !14477)
!14514 = !DILocation(line: 47, column: 10, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14477, file: !14478, line: 47, column: 6)
!14516 = !DILocation(line: 47, column: 6, scope: !14477)
!14517 = !DILocation(line: 49, column: 9, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14515, file: !14478, line: 47, column: 19)
!14519 = !DILocation(line: 53, column: 15, scope: !14518)
!14520 = !DILocation(line: 53, column: 3, scope: !14518)
!14521 = !DILocation(line: 56, column: 2, scope: !14518)
!14522 = !DILocation(line: 57, column: 1, scope: !14477)
!14523 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !14478, file: !14478, line: 124, type: !14524, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !14526)
!14524 = !DISubroutineType(types: !14525)
!14525 = !{!102, !552, !552}
!14526 = !{!14527, !14528, !14529, !14530}
!14527 = !DILocalVariable(name: "align", arg: 1, scope: !14523, file: !14478, line: 124, type: !552)
!14528 = !DILocalVariable(name: "size", arg: 2, scope: !14523, file: !14478, line: 124, type: !552)
!14529 = !DILocalVariable(name: "ret", scope: !14523, file: !14478, line: 126, type: !102)
!14530 = !DILocalVariable(name: "heap", scope: !14523, file: !14478, line: 127, type: !14483)
!14531 = !DILocation(line: 0, scope: !14523)
!14532 = !DILocation(line: 129, column: 6, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14523, file: !14478, line: 129, column: 6)
!14534 = !DILocation(line: 129, column: 6, scope: !14523)
!14535 = !DILocation(line: 132, column: 10, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14533, file: !14478, line: 131, column: 9)
!14537 = !DILocation(line: 132, column: 20, scope: !14536)
!14538 = !DILocation(line: 135, column: 11, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14523, file: !14478, line: 135, column: 6)
!14540 = !DILocation(line: 135, column: 6, scope: !14523)
!14541 = !DILocation(line: 136, column: 9, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14539, file: !14478, line: 135, column: 20)
!14543 = !DILocation(line: 137, column: 2, scope: !14542)
!14544 = !DILocation(line: 0, scope: !14539)
!14545 = !DILocation(line: 141, column: 2, scope: !14523)
!14546 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !14478, file: !14478, line: 12, type: !14547, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !14549)
!14547 = !DISubroutineType(types: !14548)
!14548 = !{!102, !14483, !552, !552}
!14549 = !{!14550, !14551, !14552, !14553, !14554, !14555}
!14550 = !DILocalVariable(name: "heap", arg: 1, scope: !14546, file: !14478, line: 12, type: !14483)
!14551 = !DILocalVariable(name: "align", arg: 2, scope: !14546, file: !14478, line: 12, type: !552)
!14552 = !DILocalVariable(name: "size", arg: 3, scope: !14546, file: !14478, line: 12, type: !552)
!14553 = !DILocalVariable(name: "mem", scope: !14546, file: !14478, line: 14, type: !102)
!14554 = !DILocalVariable(name: "heap_ref", scope: !14546, file: !14478, line: 15, type: !14482)
!14555 = !DILocalVariable(name: "__align", scope: !14546, file: !14478, line: 16, type: !552)
!14556 = !DILocation(line: 0, scope: !14546)
!14557 = !DILocation(line: 24, column: 6, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14546, file: !14478, line: 24, column: 6)
!14559 = !DILocation(line: 24, column: 6, scope: !14546)
!14560 = !DILocation(line: 27, column: 18, scope: !14546)
!14561 = !DILocation(line: 29, column: 44, scope: !14546)
!14562 = !DILocation(line: 29, column: 8, scope: !14546)
!14563 = !DILocation(line: 30, column: 10, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14546, file: !14478, line: 30, column: 6)
!14565 = !DILocation(line: 30, column: 6, scope: !14546)
!14566 = !DILocation(line: 34, column: 13, scope: !14546)
!14567 = !DILocation(line: 35, column: 12, scope: !14546)
!14568 = !DILocation(line: 36, column: 8, scope: !14546)
!14569 = !DILocation(line: 40, column: 2, scope: !14546)
!14570 = !DILocation(line: 41, column: 1, scope: !14546)
!14571 = distinct !DISubprogram(name: "size_add_overflow", scope: !14572, file: !14572, line: 47, type: !14573, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !14575)
!14572 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14573 = !DISubroutineType(types: !14574)
!14574 = !{!580, !552, !552, !2315}
!14575 = !{!14576, !14577, !14578}
!14576 = !DILocalVariable(name: "a", arg: 1, scope: !14571, file: !14572, line: 47, type: !552)
!14577 = !DILocalVariable(name: "b", arg: 2, scope: !14571, file: !14572, line: 47, type: !552)
!14578 = !DILocalVariable(name: "result", arg: 3, scope: !14571, file: !14572, line: 47, type: !2315)
!14579 = !DILocation(line: 0, scope: !14571)
!14580 = !DILocation(line: 49, column: 9, scope: !14571)
!14581 = !DILocation(line: 49, column: 2, scope: !14571)
!14582 = distinct !DISubprogram(name: "boot_banner", scope: !14583, file: !14583, line: 26, type: !2944, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !675)
!14583 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14584 = !DILocation(line: 34, column: 2, scope: !14582)
!14585 = !DILocation(line: 36, column: 1, scope: !14582)
!14586 = distinct !DISubprogram(name: "statics_init", scope: !2236, file: !2236, line: 21, type: !537, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14587)
!14587 = !{!14588, !14589}
!14588 = !DILocalVariable(name: "unused", arg: 1, scope: !14586, file: !2236, line: 21, type: !539)
!14589 = !DILocalVariable(name: "h", scope: !14590, file: !2236, line: 24, type: !14591)
!14590 = distinct !DILexicalBlock(scope: !14586, file: !2236, line: 24, column: 2)
!14591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14592, size: 32)
!14592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !654, line: 5073, size: 160, elements: !14593)
!14593 = !{!14594, !14600, !14606}
!14594 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14592, file: !654, line: 5074, baseType: !14595, size: 96)
!14595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !1872, line: 56, size: 96, elements: !14596)
!14596 = !{!14597, !14598, !14599}
!14597 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14595, file: !1872, line: 57, baseType: !1875, size: 32)
!14598 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14595, file: !1872, line: 58, baseType: !102, size: 32, offset: 32)
!14599 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14595, file: !1872, line: 59, baseType: !552, size: 32, offset: 64)
!14600 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14592, file: !654, line: 5075, baseType: !14601, size: 64, offset: 96)
!14601 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !678, line: 233, baseType: !14602)
!14602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 231, size: 64, elements: !14603)
!14603 = !{!14604}
!14604 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14602, file: !678, line: 232, baseType: !14605, size: 64)
!14605 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !683, line: 48, baseType: !2222)
!14606 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14592, file: !654, line: 5076, baseType: !14607, offset: 160)
!14607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !674, line: 43, elements: !675)
!14608 = !DILocation(line: 0, scope: !14586)
!14609 = !DILocation(line: 0, scope: !14590)
!14610 = !DILocation(line: 24, column: 2, scope: !14590)
!14611 = !DILocation(line: 52, column: 2, scope: !14586)
!14612 = !DILocation(line: 49, column: 27, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14614, file: !2236, line: 48, column: 3)
!14614 = distinct !DILexicalBlock(scope: !14615, file: !2236, line: 24, column: 36)
!14615 = distinct !DILexicalBlock(scope: !14590, file: !2236, line: 24, column: 2)
!14616 = !DILocation(line: 49, column: 45, scope: !14613)
!14617 = !DILocation(line: 49, column: 4, scope: !14613)
!14618 = !DILocation(line: 24, column: 2, scope: !14615)
!14619 = !DILocation(line: 24, column: 2, scope: !14620)
!14620 = distinct !DILexicalBlock(scope: !14615, file: !2236, line: 24, column: 2)
!14621 = distinct !{!14621, !14610, !14622}
!14622 = !DILocation(line: 51, column: 2, scope: !14590)
!14623 = distinct !DISubprogram(name: "k_heap_init", scope: !2236, file: !2236, line: 13, type: !14624, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14626)
!14624 = !DISubroutineType(types: !14625)
!14625 = !{null, !14591, !102, !552}
!14626 = !{!14627, !14628, !14629}
!14627 = !DILocalVariable(name: "h", arg: 1, scope: !14623, file: !2236, line: 13, type: !14591)
!14628 = !DILocalVariable(name: "mem", arg: 2, scope: !14623, file: !2236, line: 13, type: !102)
!14629 = !DILocalVariable(name: "bytes", arg: 3, scope: !14623, file: !2236, line: 13, type: !552)
!14630 = !DILocation(line: 0, scope: !14623)
!14631 = !DILocation(line: 15, column: 19, scope: !14623)
!14632 = !DILocation(line: 15, column: 2, scope: !14623)
!14633 = !DILocation(line: 16, column: 20, scope: !14623)
!14634 = !DILocation(line: 16, column: 2, scope: !14623)
!14635 = !DILocation(line: 19, column: 1, scope: !14623)
!14636 = distinct !DISubprogram(name: "z_waitq_init", scope: !10734, file: !10734, line: 47, type: !14637, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14640)
!14637 = !DISubroutineType(types: !14638)
!14638 = !{null, !14639}
!14639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14601, size: 32)
!14640 = !{!14641}
!14641 = !DILocalVariable(name: "w", arg: 1, scope: !14636, file: !10734, line: 47, type: !14639)
!14642 = !DILocation(line: 0, scope: !14636)
!14643 = !DILocation(line: 49, column: 21, scope: !14636)
!14644 = !DILocation(line: 49, column: 2, scope: !14636)
!14645 = !DILocation(line: 50, column: 1, scope: !14636)
!14646 = distinct !DISubprogram(name: "sys_dlist_init", scope: !683, file: !683, line: 197, type: !14647, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14650)
!14647 = !DISubroutineType(types: !14648)
!14648 = !{null, !14649}
!14649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14605, size: 32)
!14650 = !{!14651}
!14651 = !DILocalVariable(name: "list", arg: 1, scope: !14646, file: !683, line: 197, type: !14649)
!14652 = !DILocation(line: 0, scope: !14646)
!14653 = !DILocation(line: 199, column: 8, scope: !14646)
!14654 = !DILocation(line: 199, column: 13, scope: !14646)
!14655 = !DILocation(line: 200, column: 8, scope: !14646)
!14656 = !DILocation(line: 200, column: 13, scope: !14646)
!14657 = !DILocation(line: 201, column: 1, scope: !14646)
!14658 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2236, file: !2236, line: 64, type: !14659, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14665)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{!102, !14591, !552, !552, !14661}
!14661 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !549, line: 67, baseType: !14662)
!14662 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 65, size: 64, elements: !14663)
!14663 = !{!14664}
!14664 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14662, file: !549, line: 66, baseType: !548, size: 64)
!14665 = !{!14666, !14667, !14668, !14669, !14670, !14671, !14672, !14673, !14678}
!14666 = !DILocalVariable(name: "h", arg: 1, scope: !14658, file: !2236, line: 64, type: !14591)
!14667 = !DILocalVariable(name: "align", arg: 2, scope: !14658, file: !2236, line: 64, type: !552)
!14668 = !DILocalVariable(name: "bytes", arg: 3, scope: !14658, file: !2236, line: 64, type: !552)
!14669 = !DILocalVariable(name: "timeout", arg: 4, scope: !14658, file: !2236, line: 65, type: !14661)
!14670 = !DILocalVariable(name: "now", scope: !14658, file: !2236, line: 67, type: !550)
!14671 = !DILocalVariable(name: "end", scope: !14658, file: !2236, line: 67, type: !550)
!14672 = !DILocalVariable(name: "ret", scope: !14658, file: !2236, line: 68, type: !102)
!14673 = !DILocalVariable(name: "key", scope: !14658, file: !2236, line: 72, type: !14674)
!14674 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !674, line: 106, baseType: !14675)
!14675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !674, line: 32, size: 32, elements: !14676)
!14676 = !{!14677}
!14677 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14675, file: !674, line: 33, baseType: !103, size: 32)
!14678 = !DILocalVariable(name: "blocked_alloc", scope: !14658, file: !2236, line: 78, type: !580)
!14679 = !DILocation(line: 0, scope: !14658)
!14680 = !DILocation(line: 67, column: 21, scope: !14658)
!14681 = !DILocation(line: 70, column: 8, scope: !14658)
!14682 = !DILocation(line: 72, column: 41, scope: !14658)
!14683 = !DILocalVariable(name: "l", arg: 1, scope: !14684, file: !674, line: 136, type: !14687)
!14684 = distinct !DISubprogram(name: "k_spin_lock", scope: !674, file: !674, line: 136, type: !14685, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14688)
!14685 = !DISubroutineType(types: !14686)
!14686 = !{!14674, !14687}
!14687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14607, size: 32)
!14688 = !{!14683, !14689}
!14689 = !DILocalVariable(name: "k", scope: !14684, file: !674, line: 139, type: !14674)
!14690 = !DILocation(line: 0, scope: !14684, inlinedAt: !14691)
!14691 = distinct !DILocation(line: 72, column: 25, scope: !14658)
!14692 = !DILocation(line: 55, column: 2, scope: !14693, inlinedAt: !14697)
!14693 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5762, file: !5762, line: 42, type: !7761, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14694)
!14694 = !{!14695, !14696}
!14695 = !DILocalVariable(name: "key", scope: !14693, file: !5762, line: 44, type: !32)
!14696 = !DILocalVariable(name: "tmp", scope: !14693, file: !5762, line: 53, type: !32)
!14697 = distinct !DILocation(line: 145, column: 10, scope: !14684, inlinedAt: !14691)
!14698 = !{i64 2841580}
!14699 = !DILocation(line: 0, scope: !14693, inlinedAt: !14697)
!14700 = !DILocation(line: 81, column: 9, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14658, file: !2236, line: 80, column: 22)
!14702 = !DILocation(line: 83, column: 9, scope: !14701)
!14703 = !DILocation(line: 85, column: 12, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14701, file: !2236, line: 84, column: 7)
!14705 = !DILocation(line: 85, column: 21, scope: !14704)
!14706 = !DILocation(line: 85, column: 30, scope: !14704)
!14707 = !DILocation(line: 85, column: 37, scope: !14704)
!14708 = !DILocation(line: 84, column: 7, scope: !14701)
!14709 = !DILocation(line: 99, column: 10, scope: !14701)
!14710 = !DILocation(line: 0, scope: !14684, inlinedAt: !14711)
!14711 = distinct !DILocation(line: 101, column: 9, scope: !14701)
!14712 = !DILocation(line: 55, column: 2, scope: !14693, inlinedAt: !14713)
!14713 = distinct !DILocation(line: 145, column: 10, scope: !14684, inlinedAt: !14711)
!14714 = !DILocation(line: 0, scope: !14693, inlinedAt: !14713)
!14715 = distinct !{!14715, !14716, !14717}
!14716 = !DILocation(line: 80, column: 2, scope: !14658)
!14717 = !DILocation(line: 102, column: 2, scope: !14658)
!14718 = !DILocalVariable(name: "key", arg: 2, scope: !14719, file: !674, line: 190, type: !14674)
!14719 = distinct !DISubprogram(name: "k_spin_unlock", scope: !674, file: !674, line: 189, type: !14720, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14722)
!14720 = !DISubroutineType(types: !14721)
!14721 = !{null, !14687, !14674}
!14722 = !{!14723, !14718}
!14723 = !DILocalVariable(name: "l", arg: 1, scope: !14719, file: !674, line: 189, type: !14687)
!14724 = !DILocation(line: 0, scope: !14719, inlinedAt: !14725)
!14725 = distinct !DILocation(line: 106, column: 2, scope: !14658)
!14726 = !DILocalVariable(name: "key", arg: 1, scope: !14727, file: !5762, line: 84, type: !32)
!14727 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5762, file: !5762, line: 84, type: !5598, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14728)
!14728 = !{!14726}
!14729 = !DILocation(line: 0, scope: !14727, inlinedAt: !14730)
!14730 = distinct !DILocation(line: 215, column: 2, scope: !14719, inlinedAt: !14725)
!14731 = !DILocation(line: 95, column: 2, scope: !14727, inlinedAt: !14730)
!14732 = !{i64 2842397}
!14733 = !DILocation(line: 107, column: 2, scope: !14658)
!14734 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2236, file: !2236, line: 110, type: !14735, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14737)
!14735 = !DISubroutineType(types: !14736)
!14736 = !{!102, !14591, !552, !14661}
!14737 = !{!14738, !14739, !14740, !14741}
!14738 = !DILocalVariable(name: "h", arg: 1, scope: !14734, file: !2236, line: 110, type: !14591)
!14739 = !DILocalVariable(name: "bytes", arg: 2, scope: !14734, file: !2236, line: 110, type: !552)
!14740 = !DILocalVariable(name: "timeout", arg: 3, scope: !14734, file: !2236, line: 110, type: !14661)
!14741 = !DILocalVariable(name: "ret", scope: !14734, file: !2236, line: 114, type: !102)
!14742 = !DILocation(line: 0, scope: !14734)
!14743 = !DILocation(line: 114, column: 14, scope: !14734)
!14744 = !DILocation(line: 118, column: 2, scope: !14734)
!14745 = distinct !DISubprogram(name: "k_heap_free", scope: !2236, file: !2236, line: 121, type: !14746, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14748)
!14746 = !DISubroutineType(types: !14747)
!14747 = !{null, !14591, !102}
!14748 = !{!14749, !14750, !14751}
!14749 = !DILocalVariable(name: "h", arg: 1, scope: !14745, file: !2236, line: 121, type: !14591)
!14750 = !DILocalVariable(name: "mem", arg: 2, scope: !14745, file: !2236, line: 121, type: !102)
!14751 = !DILocalVariable(name: "key", scope: !14745, file: !2236, line: 123, type: !14674)
!14752 = !DILocation(line: 0, scope: !14745)
!14753 = !DILocation(line: 0, scope: !14684, inlinedAt: !14754)
!14754 = distinct !DILocation(line: 123, column: 25, scope: !14745)
!14755 = !DILocation(line: 55, column: 2, scope: !14693, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 145, column: 10, scope: !14684, inlinedAt: !14754)
!14757 = !DILocation(line: 0, scope: !14693, inlinedAt: !14756)
!14758 = !DILocation(line: 125, column: 20, scope: !14745)
!14759 = !DILocation(line: 125, column: 2, scope: !14745)
!14760 = !DILocation(line: 128, column: 60, scope: !14761)
!14761 = distinct !DILexicalBlock(scope: !14745, file: !2236, line: 128, column: 6)
!14762 = !DILocation(line: 128, column: 43, scope: !14761)
!14763 = !DILocation(line: 128, column: 68, scope: !14761)
!14764 = !DILocation(line: 128, column: 6, scope: !14745)
!14765 = !DILocation(line: 123, column: 41, scope: !14745)
!14766 = !DILocation(line: 129, column: 3, scope: !14767)
!14767 = distinct !DILexicalBlock(scope: !14761, file: !2236, line: 128, column: 74)
!14768 = !DILocation(line: 130, column: 2, scope: !14767)
!14769 = !DILocation(line: 0, scope: !14719, inlinedAt: !14770)
!14770 = distinct !DILocation(line: 131, column: 3, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14761, file: !2236, line: 130, column: 9)
!14772 = !DILocation(line: 0, scope: !14727, inlinedAt: !14773)
!14773 = distinct !DILocation(line: 215, column: 2, scope: !14719, inlinedAt: !14770)
!14774 = !DILocation(line: 95, column: 2, scope: !14727, inlinedAt: !14773)
!14775 = !DILocation(line: 133, column: 1, scope: !14745)
