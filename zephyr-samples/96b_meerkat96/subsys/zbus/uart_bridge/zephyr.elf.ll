; ModuleID = 'build/96b_meerkat96/uart_bridge/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.zbus_channel = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.zbus_observer = type { i8, %struct.k_msgq*, {}* }
%struct.action_msg = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.action_msg*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.version_msg = type { i8, i8, i16 }
%struct.zbus_observer.16 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.15*)* }
%struct.zbus_channel.15 = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer.16** }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.z_heap_bucket, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.z_heap_bucket, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.56], [13808 x i8], [191 x %struct.anon.56], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.56 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.56] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct._gpio_init_config = type { i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.56], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536851968 to i8*), void (i8*)* inttoptr (i32 536850651 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536851944 to i8*), void (i8*)* inttoptr (i32 536850491 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536851944 to i8*), void (i8*)* inttoptr (i32 536850491 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [30 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_bridge_thread_tid to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_finish_chan to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_bridge_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @bridge_sub, i32 0, i32 0), i8* bitcast (%struct.zbus_channel* @finish_chan to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_core_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_version_chan to i8*), i8* bitcast (%struct.zbus_channel.15* @version_chan to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_peripheral_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_sensor_data_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_start_measurement_chan to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_peripheral_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @peripheral_sub, i32 0, i32 0), i8* bitcast (%struct.zbus_channel* @sensor_data_chan to i8*), i8* bitcast (%struct.zbus_channel* @start_measurement_chan to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_observer_queue_bridge_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_bridge_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_bridge_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bridge_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bridge_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bridge_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bridge_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_bridge_sub", align 4, !dbg !25
@_k_fifo_buf__zbus_observer_queue_bridge_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/bridge.c\22.0", align 4, !dbg !423
@_zbus_mutex_finish_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_finish_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_finish_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_finish_chan", align 4, !dbg !384
@.str = private unnamed_addr constant [12 x i8] c"finish_chan\00", align 1
@_zbus_message_finish_chan = internal global %struct.action_msg zeroinitializer, align 1, !dbg !435
@_zbus_observers_finish_chan = internal constant [2 x %struct.zbus_observer*] [%struct.zbus_observer* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @bridge_sub to %struct.zbus_observer*), %struct.zbus_observer* null], align 4, !dbg !441
@finish_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i16 1, i8* null, i8* getelementptr inbounds (%struct.action_msg, %struct.action_msg* @_zbus_message_finish_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_finish_chan, %struct.zbus_observer** getelementptr inbounds ([2 x %struct.zbus_observer*], [2 x %struct.zbus_observer*]* @_zbus_observers_finish_chan, i32 0, i32 0) }, section "._zbus_channel.static.finish_chan", align 4, !dbg !386
@_k_thread_obj_bridge_thread_tid = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !433
@_k_thread_stack_bridge_thread_tid = dso_local global [2048 x %struct.action_msg] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/bridge.c\22.1", align 8, !dbg !428
@.str.1 = private unnamed_addr constant [18 x i8] c"bridge_thread_tid\00", align 1
@_k_thread_data_bridge_thread_tid = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_bridge_thread_tid, %struct.action_msg* getelementptr inbounds ([2048 x %struct.action_msg], [2048 x %struct.action_msg]* @_k_thread_stack_bridge_thread_tid, i32 0, i32 0), i32 2048, void (i8*, i8*, i8*)* bitcast (void ()* @bridge_tx_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 1, i32 0, i32 500, void ()* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_bridge_thread_tid", align 4, !dbg !388
@bridge_thread_tid = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_bridge_thread_tid, align 4, !dbg !419
@.str.2 = private unnamed_addr constant [20 x i8] c"%c: Bridge Started\0A\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"%c: Bridge send %s\0A\00", align 1
@_zbus_mutex_version_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_version_chan", align 4, !dbg !446
@.str.4 = private unnamed_addr constant [13 x i8] c"version_chan\00", align 1
@_zbus_message_version_chan = internal global %struct.version_msg { i8 0, i8 1, i16 1023 }, align 2, !dbg !627
@_zbus_observers_version_chan = internal constant [1 x %struct.zbus_observer.16*] zeroinitializer, align 4, !dbg !634
@version_chan = dso_local constant %struct.zbus_channel.15 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0), i16 4, i8* null, i8* getelementptr inbounds (%struct.version_msg, %struct.version_msg* @_zbus_message_version_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_version_chan, %struct.zbus_observer.16** getelementptr inbounds ([1 x %struct.zbus_observer.16*], [1 x %struct.zbus_observer.16*]* @_zbus_observers_version_chan, i32 0, i32 0) }, section "._zbus_channel.static.version_chan", align 4, !dbg !452
@_k_thread_obj_core_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !625
@_k_thread_stack_core_thread_id = dso_local global [1024 x %struct.action_msg] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/core.c\22.0", align 8, !dbg !620
@.str.1.5 = private unnamed_addr constant [15 x i8] c"core_thread_id\00", align 1
@_k_thread_data_core_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_core_thread_id, %struct.action_msg* getelementptr inbounds ([1024 x %struct.action_msg], [1024 x %struct.action_msg]* @_k_thread_stack_core_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @core_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.5, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_core_thread_id", align 4, !dbg !595
@core_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_core_thread_id, align 4, !dbg !616
@.str.2.6 = private unnamed_addr constant [51 x i8] c"%c: Core sending start measurement with status %d\0A\00", align 1
@_zbus_observer_queue_peripheral_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_peripheral_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_peripheral_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_k_fifo_buf__zbus_observer_queue_peripheral_sub, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_k_fifo_buf__zbus_observer_queue_peripheral_sub, i64 1, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_k_fifo_buf__zbus_observer_queue_peripheral_sub, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_k_fifo_buf__zbus_observer_queue_peripheral_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_peripheral_sub", align 4, !dbg !639
@_k_fifo_buf__zbus_observer_queue_peripheral_sub = internal global [32 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/peripheral.c\22.0", align 4, !dbg !820
@peripheral_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_peripheral_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.peripheral_sub", align 4, !dbg !644
@_zbus_mutex_sensor_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_sensor_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_sensor_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_sensor_data_chan", align 4, !dbg !787
@.str.8 = private unnamed_addr constant [17 x i8] c"sensor_data_chan\00", align 1
@sensor_data_from_bridge = internal global i8 0, align 1, !dbg !822
@_zbus_message_sensor_data_chan = internal global %struct._thread_arch zeroinitializer, align 4, !dbg !831
@_zbus_observers_sensor_data_chan = internal constant [2 x %struct.zbus_observer*] [%struct.zbus_observer* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @bridge_sub to %struct.zbus_observer*), %struct.zbus_observer* null], align 4, !dbg !837
@sensor_data_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i16 8, i8* @sensor_data_from_bridge, i8* bitcast (%struct._thread_arch* @_zbus_message_sensor_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_sensor_data_chan, %struct.zbus_observer** getelementptr inbounds ([2 x %struct.zbus_observer*], [2 x %struct.zbus_observer*]* @_zbus_observers_sensor_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.sensor_data_chan", align 4, !dbg !789
@_zbus_mutex_start_measurement_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_start_measurement_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_start_measurement_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_start_measurement_chan", align 4, !dbg !791
@.str.1.11 = private unnamed_addr constant [23 x i8] c"start_measurement_chan\00", align 1
@start_measurement_from_bridge = internal global i8 0, align 1, !dbg !824
@_zbus_message_start_measurement_chan = internal global %struct.action_msg zeroinitializer, align 1, !dbg !840
@_zbus_observers_start_measurement_chan = internal constant [3 x %struct.zbus_observer*] [%struct.zbus_observer* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @bridge_sub to %struct.zbus_observer*), %struct.zbus_observer* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @peripheral_sub to %struct.zbus_observer*), %struct.zbus_observer* null], align 4, !dbg !845
@start_measurement_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.11, i32 0, i32 0), i16 1, i8* @start_measurement_from_bridge, i8* getelementptr inbounds (%struct.action_msg, %struct.action_msg* @_zbus_message_start_measurement_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_start_measurement_chan, %struct.zbus_observer** getelementptr inbounds ([3 x %struct.zbus_observer*], [3 x %struct.zbus_observer*]* @_zbus_observers_start_measurement_chan, i32 0, i32 0) }, section "._zbus_channel.static.start_measurement_chan", align 4, !dbg !793
@_k_thread_obj_peripheral_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !829
@_k_thread_stack_peripheral_thread_id = dso_local global [1024 x %struct.action_msg] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/peripheral.c\22.1", align 8, !dbg !826
@.str.2.12 = private unnamed_addr constant [21 x i8] c"peripheral_thread_id\00", align 1
@_k_thread_data_peripheral_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_peripheral_thread_id, %struct.action_msg* getelementptr inbounds ([1024 x %struct.action_msg], [1024 x %struct.action_msg]* @_k_thread_stack_peripheral_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @peripheral_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.12, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_peripheral_thread_id", align 4, !dbg !795
@peripheral_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_peripheral_thread_id, align 4, !dbg !816
@bridge_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_bridge_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.bridge_sub", align 4, !dbg !210
@.str.3.13 = private unnamed_addr constant [36 x i8] c"%c: Peripheral sending sensor data\0A\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !850
@.str.1.17 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !873
@.str.20 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !883
@.str.24 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.26 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.27 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.25 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.28 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.46 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.41 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.42 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.43 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.44 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.45 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.40 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.38 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.39 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.36 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24.37 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29.35 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1310
@.str.58 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i8 4 }, section ".log_const_zbus", align 4, !dbg !1320
@.str.1.62 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@.str.2.63 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1332
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !1426
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1609
@.str.73 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.z_heap_bucket { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1562
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1593
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1560
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1548
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1536
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1538
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1595
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1606
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1614
@.str.77 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1618
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1876
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1874
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1868
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1859
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1861
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1878
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1880
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1883
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1886
@overflow_cyc = internal global i32 0, align 4, !dbg !1897
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2153
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2155
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2151
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2122
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !2157
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.2 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2187
@.str.108 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.112 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.113 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.114 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.118 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.119 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.120 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.121 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.122 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.117 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.116 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.118, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.119, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.120, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.121, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.122, i32 0, i32 0)], align 4
@.str.124 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2193
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.action_msg]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !2408
@z_main_stack = dso_local global [1024 x %struct.action_msg] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !2397
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2403
@z_idle_stacks = internal global [1 x [320 x %struct.action_msg]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !2414
@.str.1.130 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2419
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.2.134 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.140, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.141, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.142, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.143, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.144, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.138, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.145, i32 0, i32 0)], align 4, !dbg !2447
@.str.139 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.140 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.141 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.142 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.143 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.144 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.138 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.145 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2554
@.str.8.137 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2568
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2671
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2774
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2777
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2779
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2412
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2405
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2781
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2817
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2280
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2815
@.str.234 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2820
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3603 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3605, !srcloc !3606
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3607, !srcloc !3608
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3609, !srcloc !3610
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3611, !srcloc !3612
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3613, !srcloc !3614
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3615, !srcloc !3616
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3617, !srcloc !3618
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3619, !srcloc !3620
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3621, !srcloc !3622
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3623, !srcloc !3624
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3625, !srcloc !3626
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3627, !srcloc !3628
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3629, !srcloc !3630
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3631, !srcloc !3632
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3633, !srcloc !3634
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3635, !srcloc !3636
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3637, !srcloc !3638
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -137) #23, !dbg !3639, !srcloc !3640
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -145) #23, !dbg !3641, !srcloc !3642
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #23, !dbg !3643, !srcloc !3644
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3645, !srcloc !3646
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3647, !srcloc !3648
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3649, !srcloc !3650
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3651, !srcloc !3652
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3653, !srcloc !3656
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3657, !srcloc !3658
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3659, !srcloc !3660
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3661, !srcloc !3662
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3663, !srcloc !3664
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3665, !srcloc !3666
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3667, !srcloc !3668
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3669, !srcloc !3670
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3671, !srcloc !3672
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3673, !srcloc !3674
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3675, !srcloc !3676
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3677, !srcloc !3678
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3679, !srcloc !3680
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3681, !srcloc !3682
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3683, !srcloc !3684
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3685, !srcloc !3686
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3687, !srcloc !3688
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3689, !srcloc !3690
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3691, !srcloc !3692
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3693, !srcloc !3694
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3695, !srcloc !3696
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3697, !srcloc !3698
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -145) #23, !dbg !3699, !srcloc !3700
  ret void, !dbg !3701
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @bridge_tx_thread() #2 !dbg !3704 {
  %1 = alloca %struct.zbus_channel*, align 4
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i32 0, i32 0), i32 noundef 68) #24, !dbg !3720
  %2 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3725
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #23, !dbg !3725
  br label %3, !dbg !3726

3:                                                ; preds = %17, %0
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3706, metadata !DIExpression(DW_OP_deref)), !dbg !3727
  %4 = call i32 bitcast (i32 (%struct.zbus_observer.16*, %struct.zbus_channel.15**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @bridge_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3728
  %5 = icmp eq i32 %4, 0, !dbg !3728
  br i1 %5, label %6, label %17, !dbg !3729

6:                                                ; preds = %3
  %7 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3730
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %7, metadata !3706, metadata !DIExpression()), !dbg !3727
  %8 = call i32 bitcast (i32 (%struct.zbus_channel.15*, [1 x i64])* @zbus_chan_claim to i32 (%struct.zbus_channel*, [1 x i64])*)(%struct.zbus_channel* noundef %7, [1 x i64] [i64 5000]) #24, !dbg !3731
  %9 = icmp eq i32 %8, 0, !dbg !3731
  br i1 %9, label %10, label %17, !dbg !3732

10:                                               ; preds = %6
  %11 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3733
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %11, metadata !3706, metadata !DIExpression()), !dbg !3727
  %12 = call fastcc i8* @zbus_chan_user_data(%struct.zbus_channel* noundef %11) #25, !dbg !3734
  call void @llvm.dbg.value(metadata i8* %12, metadata !3707, metadata !DIExpression()), !dbg !3735
  %13 = load i8, i8* %12, align 1, !dbg !3736, !range !3737
  %14 = icmp eq i8 %13, 0, !dbg !3736
  call void @llvm.dbg.value(metadata i1 %14, metadata !3713, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3735
  store i8 0, i8* %12, align 1, !dbg !3738
  %15 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3739
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %15, metadata !3706, metadata !DIExpression()), !dbg !3727
  %16 = call i32 bitcast (i32 (%struct.zbus_channel.15*)* @zbus_chan_finish to i32 (%struct.zbus_channel*)*)(%struct.zbus_channel* noundef %15) #24, !dbg !3740
  br i1 %14, label %18, label %17, !dbg !3741

17:                                               ; preds = %10, %43, %6, %3
  br label %3, !dbg !3727, !llvm.loop !3742

18:                                               ; preds = %10
  %19 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3744
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %19, metadata !3706, metadata !DIExpression()), !dbg !3727
  %20 = call fastcc i8* @zbus_chan_name(%struct.zbus_channel* noundef %19) #25, !dbg !3744
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i32 0, i32 0), i32 noundef 68, i8* noundef %20) #24, !dbg !3744
  call fastcc void @uart_poll_out(i8 noundef zeroext 36) #25, !dbg !3749
  call void @llvm.dbg.value(metadata i32 0, metadata !3714, metadata !DIExpression()), !dbg !3750
  %21 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3751
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %21, metadata !3706, metadata !DIExpression()), !dbg !3727
  %22 = call fastcc i8* @zbus_chan_name(%struct.zbus_channel* noundef %21) #25, !dbg !3753
  %23 = call i32 @strlen(i8* noundef %22) #24, !dbg !3754
  %24 = icmp eq i32 %23, 0, !dbg !3755
  br i1 %24, label %25, label %32, !dbg !3756

25:                                               ; preds = %32, %18
  call fastcc void @uart_poll_out(i8 noundef zeroext 44) #25, !dbg !3757
  %26 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3758
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %26, metadata !3706, metadata !DIExpression()), !dbg !3727
  %27 = call fastcc zeroext i16 @zbus_chan_msg_size(%struct.zbus_channel* noundef %26) #25, !dbg !3759
  %28 = trunc i16 %27 to i8, !dbg !3759
  call fastcc void @uart_poll_out(i8 noundef zeroext %28) #25, !dbg !3760
  call void @llvm.dbg.value(metadata i32 0, metadata !3718, metadata !DIExpression()), !dbg !3761
  %29 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3762
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %29, metadata !3706, metadata !DIExpression()), !dbg !3727
  %30 = call fastcc zeroext i16 @zbus_chan_msg_size(%struct.zbus_channel* noundef %29) #25, !dbg !3764
  %31 = icmp eq i16 %30, 0, !dbg !3765
  br i1 %31, label %43, label %44, !dbg !3766

32:                                               ; preds = %18, %32
  %33 = phi i32 [ %38, %32 ], [ 0, %18 ]
  call void @llvm.dbg.value(metadata i32 %33, metadata !3714, metadata !DIExpression()), !dbg !3750
  %34 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3767
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %34, metadata !3706, metadata !DIExpression()), !dbg !3727
  %35 = call fastcc i8* @zbus_chan_name(%struct.zbus_channel* noundef %34) #25, !dbg !3769
  %36 = getelementptr inbounds i8, i8* %35, i32 %33, !dbg !3769
  %37 = load i8, i8* %36, align 1, !dbg !3769
  call fastcc void @uart_poll_out(i8 noundef zeroext %37) #25, !dbg !3770
  %38 = add nuw nsw i32 %33, 1, !dbg !3771
  call void @llvm.dbg.value(metadata i32 %38, metadata !3714, metadata !DIExpression()), !dbg !3750
  %39 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3751
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %39, metadata !3706, metadata !DIExpression()), !dbg !3727
  %40 = call fastcc i8* @zbus_chan_name(%struct.zbus_channel* noundef %39) #25, !dbg !3753
  %41 = call i32 @strlen(i8* noundef %40) #24, !dbg !3754
  %42 = icmp ult i32 %38, %41, !dbg !3755
  br i1 %42, label %32, label %25, !dbg !3756, !llvm.loop !3772

43:                                               ; preds = %44, %25
  call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !3774
  call fastcc void @uart_poll_out(i8 noundef zeroext 10) #25, !dbg !3775
  br label %17, !dbg !3776

44:                                               ; preds = %25, %44
  %45 = phi %struct.zbus_channel* [ %51, %44 ], [ %29, %25 ]
  %46 = phi i32 [ %50, %44 ], [ 0, %25 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !3718, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %45, metadata !3706, metadata !DIExpression()), !dbg !3727
  %47 = call fastcc i8* @zbus_chan_msg(%struct.zbus_channel* noundef %45) #25, !dbg !3777
  %48 = getelementptr inbounds i8, i8* %47, i32 %46, !dbg !3779
  %49 = load i8, i8* %48, align 1, !dbg !3779
  call fastcc void @uart_poll_out(i8 noundef zeroext %49) #25, !dbg !3780
  %50 = add nuw nsw i32 %46, 1, !dbg !3781
  call void @llvm.dbg.value(metadata i32 %50, metadata !3718, metadata !DIExpression()), !dbg !3761
  %51 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3762
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %51, metadata !3706, metadata !DIExpression()), !dbg !3727
  %52 = call fastcc zeroext i16 @zbus_chan_msg_size(%struct.zbus_channel* noundef %51) #25, !dbg !3764
  %53 = zext i16 %52 to i32, !dbg !3764
  %54 = icmp ult i32 %50, %53, !dbg !3765
  br i1 %54, label %44, label %43, !dbg !3766, !llvm.loop !3782
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_user_data(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3784 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3788, metadata !DIExpression()), !dbg !3789
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !3790
  %3 = load i8*, i8** %2, align 4, !dbg !3790
  ret i8* %3, !dbg !3791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_name(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3792 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3796, metadata !DIExpression()), !dbg !3797
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !3798
  %3 = load i8*, i8** %2, align 4, !dbg !3798
  ret i8* %3, !dbg !3799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3800 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !3803, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.value(metadata i8 %0, metadata !3804, metadata !DIExpression()), !dbg !3805
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3806, !srcloc !3808
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !3809
  ret void, !dbg !3810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i16 @zbus_chan_msg_size(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3811 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3815, metadata !DIExpression()), !dbg !3816
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !3817
  %3 = load i16, i16* %2, align 4, !dbg !3817
  ret i16 %3, !dbg !3818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3819 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3821, metadata !DIExpression()), !dbg !3822
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !3823
  %3 = load i8*, i8** %2, align 4, !dbg !3823
  ret i8* %3, !dbg !3824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3825 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !3827, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i8 %0, metadata !3828, metadata !DIExpression()), !dbg !3830
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3831
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3829, metadata !DIExpression()), !dbg !3830
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !3832
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !3832
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #24, !dbg !3833
  ret void, !dbg !3834
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @core_thread() #2 !dbg !3835 {
  %1 = alloca %struct.action_msg, align 1
  %2 = getelementptr inbounds %struct.action_msg, %struct.action_msg* %1, i32 0, i32 0, !dbg !3841
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !3841
  call void @llvm.dbg.declare(metadata %struct.action_msg* %1, metadata !3837, metadata !DIExpression()), !dbg !3842
  store i8 0, i8* %2, align 1, !dbg !3842
  br label %3, !dbg !3843

3:                                                ; preds = %3, %0
  %4 = phi i8 [ %11, %3 ], [ 0, %0 ], !dbg !3844
  %5 = zext i8 %4 to i32, !dbg !3844
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.6, i32 0, i32 0), i32 noundef 68, i32 noundef %5) #24, !dbg !3844
  %6 = load i8, i8* %2, align 1, !dbg !3850, !range !3737
  %7 = xor i8 %6, 1, !dbg !3851
  store i8 %7, i8* %2, align 1, !dbg !3851
  %8 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #25, !dbg !3852
  %9 = insertvalue [1 x i64] poison, i64 %8, 0, !dbg !3853
  %10 = call i32 @zbus_chan_pub(%struct.zbus_channel.15* noundef nonnull bitcast (%struct.zbus_channel* @start_measurement_chan to %struct.zbus_channel.15*), i8* noundef nonnull %2, [1 x i64] %9) #24, !dbg !3853
  call fastcc void @k_msleep() #25, !dbg !3854
  %11 = load i8, i8* %2, align 1, !dbg !3844, !range !3737
  br label %3, !dbg !3843, !llvm.loop !3855
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !3857 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3862, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i64 %0, metadata !3864, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 1000, metadata !3869, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 10000, metadata !3870, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 1, metadata !3871, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 0, metadata !3872, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 1, metadata !3873, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 0, metadata !3874, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 1, metadata !3875, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8 0, metadata !3876, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i64 0, metadata !3877, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i64 0, metadata !3877, metadata !DIExpression()), !dbg !3881
  %2 = mul i64 %0, 10, !dbg !3883
  ret i64 %2, !dbg !3889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3890 {
  call void @llvm.dbg.value(metadata i32 1000, metadata !3894, metadata !DIExpression()), !dbg !3895
  %1 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #25, !dbg !3896
  %2 = insertvalue [1 x i64] poison, i64 %1, 0, !dbg !3897
  tail call fastcc void @k_sleep([1 x i64] %2) #25, !dbg !3897
  ret void, !dbg !3898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3899 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3908, metadata !DIExpression()), !dbg !3909
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3910, !srcloc !3912
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !3913
  ret void, !dbg !3914
}

; Function Attrs: noinline nounwind optsize
define internal void @peripheral_thread() #1 !dbg !3915 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca i64, align 8
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3919
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3919
  %4 = bitcast i64* %2 to i8*, !dbg !3920
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !3920
  call void @llvm.dbg.declare(metadata %struct._thread_arch* %8, metadata !3918, metadata !DIExpression()), !dbg !3921
  store i64 0, i64* %2, align 8, !dbg !3921
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3917, metadata !DIExpression(DW_OP_deref)), !dbg !3922
  %5 = call i32 bitcast (i32 (%struct.zbus_observer.16*, %struct.zbus_channel.15**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @peripheral_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3923
  %6 = icmp eq i32 %5, 0, !dbg !3924
  br i1 %6, label %7, label %19, !dbg !3925

7:                                                ; preds = %0
  %8 = bitcast i64* %2 to %struct._thread_arch*
  %9 = bitcast i64* %2 to i32*
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %8, i32 0, i32 1
  br label %11, !dbg !3925

11:                                               ; preds = %7, %11
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.13, i32 0, i32 0), i32 noundef 68) #24, !dbg !3926
  %12 = load i32, i32* %9, align 8, !dbg !3932
  %13 = add nsw i32 %12, 1, !dbg !3932
  store i32 %13, i32* %9, align 8, !dbg !3932
  %14 = load i32, i32* %10, align 4, !dbg !3933
  %15 = add nsw i32 %14, 10, !dbg !3933
  store i32 %15, i32* %10, align 4, !dbg !3933
  %16 = call i32 bitcast (i32 (%struct.zbus_channel.15*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull @sensor_data_chan, i8* noundef nonnull %4, [1 x i64] [i64 2500]) #24, !dbg !3934
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3917, metadata !DIExpression(DW_OP_deref)), !dbg !3922
  %17 = call i32 bitcast (i32 (%struct.zbus_observer.16*, %struct.zbus_channel.15**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @peripheral_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3923
  %18 = icmp eq i32 %17, 0, !dbg !3924
  br i1 %18, label %11, label %19, !dbg !3925, !llvm.loop !3935

19:                                               ; preds = %11, %0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !3937
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3937
  ret void, !dbg !3937
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3938 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3953, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %0, metadata !3949, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %1, metadata !3950, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %2, metadata !3951, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %3, metadata !3952, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %0, metadata !3954, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %0, metadata !3955, metadata !DIExpression()), !dbg !4016
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4017
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4017
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3958, metadata !DIExpression()), !dbg !4018
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4019
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4019
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3960, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i32 0, metadata !3961, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 0, metadata !3962, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 0, metadata !3963, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 -1, metadata !3964, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 0, metadata !3967, metadata !DIExpression()), !dbg !4016
  %12 = and i32 %2, 4, !dbg !4021
  %13 = icmp eq i32 %12, 0, !dbg !4022
  call void @llvm.dbg.value(metadata i1 %13, metadata !3968, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4016
  %14 = lshr i32 %2, 3, !dbg !4023
  %15 = and i32 %14, 7, !dbg !4023
  %16 = add nuw nsw i32 %15, 1, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %16, metadata !3969, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 0, metadata !3970, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %0, metadata !3971, metadata !DIExpression()), !dbg !4016
  %17 = ptrtoint i8* %0 to i32, !dbg !4025
  %18 = and i32 %17, 3, !dbg !4027
  %19 = icmp eq i32 %18, 0, !dbg !4027
  br i1 %19, label %20, label %316, !dbg !4028

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4029
  call void @llvm.dbg.value(metadata i8* %21, metadata !3955, metadata !DIExpression()), !dbg !4016
  %22 = icmp eq i8* %0, null, !dbg !4030
  %23 = and i32 %1, 7, !dbg !4032
  %24 = sub nuw nsw i32 8, %23, !dbg !4032
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4032
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4032
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4032
  call void @llvm.dbg.value(metadata i32 %27, metadata !3950, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %26, metadata !3955, metadata !DIExpression()), !dbg !4016
  br i1 %22, label %33, label %28, !dbg !4033

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4035
  %30 = sub i32 4, %17, !dbg !4035
  %31 = add i32 %30, %29, !dbg !4036
  %32 = icmp ugt i32 %31, %27, !dbg !4037
  br i1 %32, label %316, label %33, !dbg !4038

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4039
  call void @llvm.dbg.value(metadata i8* %34, metadata !3952, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %3, metadata !3966, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 4, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 4, metadata !3956, metadata !DIExpression()), !dbg !4016
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4040

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3953, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %42, metadata !3952, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %43, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %44, metadata !3956, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %45, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %72, metadata !3964, metadata !DIExpression()), !dbg !4016
  br i1 %46, label %73, label %47, !dbg !4041

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4042
  %49 = zext i1 %48 to i32, !dbg !4046
  %50 = add nsw i32 %72, %49, !dbg !4046
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4046
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %52, metadata !3956, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %51, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 poison, metadata !3967, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %50, metadata !3964, metadata !DIExpression()), !dbg !4016
  br label %53, !dbg !4047

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3953, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %40, metadata !3952, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %58, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %57, metadata !3956, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %56, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 poison, metadata !3967, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %54, metadata !3964, metadata !DIExpression()), !dbg !4016
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4048
  call void @llvm.dbg.value(metadata i8* %60, metadata !3952, metadata !DIExpression()), !dbg !4016
  %61 = load i8, i8* %60, align 1, !dbg !4050
  %62 = icmp eq i8 %61, 0, !dbg !4051
  br i1 %62, label %223, label %63, !dbg !4052, !llvm.loop !4053

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4041

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4056

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3967, metadata !DIExpression()), !dbg !4016
  %75 = add nsw i32 %72, -1, !dbg !4057
  call void @llvm.dbg.value(metadata i32 %75, metadata !3964, metadata !DIExpression()), !dbg !4016
  br label %53, !dbg !4058

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4059

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 4, metadata !3956, metadata !DIExpression()), !dbg !4016
  br label %53, !dbg !4060

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 4, metadata !3956, metadata !DIExpression()), !dbg !4016
  br label %53, !dbg !4061

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4062
  %81 = icmp eq i8 %80, 108, !dbg !4064
  br i1 %81, label %82, label %109, !dbg !4065

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4066
  %84 = load i8, i8* %83, align 1, !dbg !4066
  %85 = icmp eq i8 %84, 108, !dbg !4069
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4070
  %89 = add i32 %88, 7, !dbg !4070
  %90 = and i32 %89, -8, !dbg !4070
  %91 = inttoptr i32 %90 to i8*, !dbg !4070
  %92 = inttoptr i32 %90 to double*, !dbg !4070
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4070
  %94 = load double, double* %92, align 8, !dbg !4070
  call void @llvm.dbg.value(metadata i8* %93, metadata !3953, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 8, metadata !3956, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 8, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata double %94, metadata !3984, metadata !DIExpression()), !dbg !4072
  %95 = ptrtoint i8* %43 to i32, !dbg !4073
  %96 = add i32 %95, 7, !dbg !4073
  %97 = and i32 %96, -8, !dbg !4073
  %98 = inttoptr i32 %97 to i8*, !dbg !4074
  call void @llvm.dbg.value(metadata i8* %98, metadata !3955, metadata !DIExpression()), !dbg !4016
  br i1 %22, label %104, label %99, !dbg !4075

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4076
  %101 = icmp ugt i32 %100, %194, !dbg !4080
  br i1 %101, label %316, label %102, !dbg !4081

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4082
  store double %94, double* %103, align 8, !dbg !4082
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4085
  call void @llvm.dbg.value(metadata i8* %105, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 poison, metadata !3967, metadata !DIExpression()), !dbg !4016
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3967, metadata !DIExpression()), !dbg !4016
  br label %53, !dbg !4086

107:                                              ; preds = %73, %73
  br label %109, !dbg !4087

108:                                              ; preds = %73
  br label %109, !dbg !4087

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4016
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4016
  call void @llvm.dbg.value(metadata i32 %113, metadata !3956, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %112, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 poison, metadata !3970, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 poison, metadata !3967, metadata !DIExpression()), !dbg !4016
  %114 = ptrtoint i8* %43 to i32, !dbg !4087
  %115 = add i32 %114, -1, !dbg !4087
  %116 = add i32 %115, %112, !dbg !4087
  %117 = sub i32 0, %112, !dbg !4087
  %118 = and i32 %116, %117, !dbg !4087
  %119 = inttoptr i32 %118 to i8*, !dbg !4088
  call void @llvm.dbg.value(metadata i8* %119, metadata !3955, metadata !DIExpression()), !dbg !4016
  br i1 %22, label %124, label %120, !dbg !4089

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4091
  %122 = add i32 %121, %118, !dbg !4092
  %123 = icmp ugt i32 %122, %194, !dbg !4093
  br i1 %123, label %316, label %124, !dbg !4094

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4095

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4088
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4096
  call void @llvm.dbg.value(metadata i8* %127, metadata !3953, metadata !DIExpression()), !dbg !4016
  %128 = bitcast i8* %41 to i8**, !dbg !4096
  %129 = load i8*, i8** %128, align 4, !dbg !4096
  call void @llvm.dbg.value(metadata i8* %129, metadata !3966, metadata !DIExpression()), !dbg !4016
  br label %130, !dbg !4097

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4098
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4099
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4016
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4100
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4016
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4101
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4016
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4016
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4016
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4016
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4102
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3953, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %142, metadata !3950, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %141, metadata !3952, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %140, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %139, metadata !3956, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %138, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %137, metadata !3961, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %136, metadata !3969, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %135, metadata !3962, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 poison, metadata !3967, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %133, metadata !3966, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %132, metadata !3964, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %131, metadata !3963, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.label(metadata !4015), !dbg !4104
  br i1 %22, label %146, label %144, !dbg !4105

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4106
  store i8* %133, i8** %145, align 4, !dbg !4109
  br label %146, !dbg !4110

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4111
  call void @llvm.dbg.value(metadata i32 %147, metadata !3969, metadata !DIExpression()), !dbg !4016
  %148 = icmp sgt i32 %136, 0, !dbg !4112
  br i1 %148, label %152, label %149, !dbg !4113

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !4114
  %151 = zext i1 %150 to i32, !dbg !4114
  br label %152, !dbg !4113

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4113
  %154 = icmp eq i32 %153, 0, !dbg !4113
  call void @llvm.dbg.value(metadata i1 %154, metadata !3993, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4115
  call void @llvm.dbg.value(metadata i1 %36, metadata !3996, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4115
  %155 = or i1 %36, %154, !dbg !4116
  br i1 %155, label %156, label %190, !dbg !4116

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4117
  %158 = sub i32 %157, %17, !dbg !4117
  %159 = lshr i32 %158, 2, !dbg !4118
  call void @llvm.dbg.value(metadata i32 %159, metadata !3997, metadata !DIExpression()), !dbg !4119
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4120
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4120
  br i1 %163, label %316, label %164, !dbg !4120

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4122

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4123
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4126
  store i8 %166, i8* %167, align 1, !dbg !4127
  %168 = trunc i32 %132 to i8, !dbg !4128
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4129
  store i8 %168, i8* %169, align 1, !dbg !4130
  br i1 %154, label %173, label %170, !dbg !4131

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4132
  store i8 %171, i8* %167, align 1, !dbg !4132
  %172 = add i32 %131, 1, !dbg !4135
  call void @llvm.dbg.value(metadata i32 %172, metadata !3963, metadata !DIExpression()), !dbg !4016
  br label %185, !dbg !4136

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %174, metadata !3962, metadata !DIExpression()), !dbg !4016
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4139

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4140
  call void @llvm.dbg.value(metadata i32 %177, metadata !3950, metadata !DIExpression()), !dbg !4016
  br label %185, !dbg !4143

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4144

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4145
  call void @llvm.dbg.value(metadata i32 %180, metadata !3950, metadata !DIExpression()), !dbg !4016
  br label %185, !dbg !4148

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !4149
  %183 = add i32 %142, 2, !dbg !4151
  %184 = add i32 %183, %182, !dbg !4152
  call void @llvm.dbg.value(metadata i32 %184, metadata !3950, metadata !DIExpression()), !dbg !4016
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4016
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4016
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4016
  call void @llvm.dbg.value(metadata i32 %188, metadata !3950, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %187, metadata !3962, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %186, metadata !3963, metadata !DIExpression()), !dbg !4016
  %189 = add nuw nsw i32 %137, 1, !dbg !4153
  call void @llvm.dbg.value(metadata i32 undef, metadata !3950, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 undef, metadata !3961, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 undef, metadata !3962, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 undef, metadata !3963, metadata !DIExpression()), !dbg !4016
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4098
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4100
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4101
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4102
  call void @llvm.dbg.value(metadata i32 %194, metadata !3950, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %193, metadata !3961, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %192, metadata !3962, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %191, metadata !3963, metadata !DIExpression()), !dbg !4016
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4154
  call void @llvm.dbg.value(metadata i8* %195, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %143, metadata !3953, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %141, metadata !3952, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %139, metadata !3956, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %138, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 poison, metadata !3970, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 poison, metadata !3967, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %132, metadata !3964, metadata !DIExpression()), !dbg !4016
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4048
  call void @llvm.dbg.value(metadata i8* %196, metadata !3952, metadata !DIExpression()), !dbg !4016
  %197 = load i8, i8* %196, align 1, !dbg !4050
  %198 = icmp eq i8 %197, 0, !dbg !4051
  br i1 %198, label %223, label %63, !dbg !4052

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4155

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4156
  call void @llvm.dbg.value(metadata i8* %201, metadata !3953, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 undef, metadata !4000, metadata !DIExpression()), !dbg !4157
  br i1 %22, label %216, label %202, !dbg !4158

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4156
  %204 = load i32, i32* %203, align 4, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %204, metadata !4000, metadata !DIExpression()), !dbg !4157
  %205 = inttoptr i32 %118 to i32*, !dbg !4159
  store i32 %204, i32* %205, align 4, !dbg !4162
  br label %216, !dbg !4163

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4164
  %208 = add i32 %207, 7, !dbg !4164
  %209 = and i32 %208, -8, !dbg !4164
  %210 = inttoptr i32 %209 to i8*, !dbg !4164
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4164
  call void @llvm.dbg.value(metadata i8* %211, metadata !3953, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i64 undef, metadata !4006, metadata !DIExpression()), !dbg !4165
  br i1 %22, label %216, label %212, !dbg !4166

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4164
  %214 = load i64, i64* %213, align 8, !dbg !4164
  call void @llvm.dbg.value(metadata i64 %214, metadata !4006, metadata !DIExpression()), !dbg !4165
  %215 = inttoptr i32 %118 to i64*, !dbg !4167
  store i64 %214, i64* %215, align 8, !dbg !4172
  br label %216, !dbg !4173

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4174
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4174
  call void @llvm.dbg.value(metadata i8* %218, metadata !3953, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %40, metadata !3952, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %219, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %113, metadata !3956, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %112, metadata !3957, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 poison, metadata !3970, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8 poison, metadata !3967, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %72, metadata !3964, metadata !DIExpression()), !dbg !4016
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4048
  call void @llvm.dbg.value(metadata i8* %220, metadata !3952, metadata !DIExpression()), !dbg !4016
  %221 = load i8, i8* %220, align 1, !dbg !4050
  %222 = icmp eq i8 %221, 0, !dbg !4051
  br i1 %222, label %223, label %38, !dbg !4052

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4175
  %225 = ptrtoint i8* %224 to i32, !dbg !4176
  %226 = sub i32 %225, %17, !dbg !4176
  %227 = lshr i32 %226, 2, !dbg !4178
  %228 = icmp ugt i32 %226, 1023, !dbg !4179
  br i1 %228, label %316, label %229, !dbg !4180

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4181

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4182
  %232 = add i32 %231, %226, !dbg !4185
  br label %316, !dbg !4186

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4187
  store i8 %234, i8* %0, align 1, !dbg !4188
  %235 = trunc i32 %192 to i8, !dbg !4189
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4191
  store i8 %236, i8* %238, align 1, !dbg !4193
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4194
  store i8 %237, i8* %239, align 1, !dbg !4195
  %240 = trunc i32 %191 to i8, !dbg !4196
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4197
  store i8 %240, i8* %241, align 1, !dbg !4198
  %242 = icmp eq i32 %191, 0, !dbg !4199
  %243 = xor i1 %242, true, !dbg !4200
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4200
  call void @llvm.dbg.value(metadata i8* %224, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 0, metadata !3965, metadata !DIExpression()), !dbg !4016
  br i1 %245, label %246, label %265, !dbg !4200

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4201

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %250, metadata !3965, metadata !DIExpression()), !dbg !4016
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4202
  %252 = load i8, i8* %251, align 1, !dbg !4202
  %253 = icmp sgt i8 %252, -1, !dbg !4204
  br i1 %253, label %261, label %254, !dbg !4205

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4009, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4206
  %255 = ptrtoint i8* %249 to i32, !dbg !4207
  %256 = add i32 %247, %255, !dbg !4209
  %257 = icmp ugt i32 %256, %194, !dbg !4210
  br i1 %257, label %316, label %258, !dbg !4211

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4212
  call void @llvm.dbg.value(metadata i8 %259, metadata !4009, metadata !DIExpression()), !dbg !4206
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4213
  call void @llvm.dbg.value(metadata i8* %260, metadata !3955, metadata !DIExpression()), !dbg !4016
  store i8 %259, i8* %249, align 1, !dbg !4214
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4154
  call void @llvm.dbg.value(metadata i8* %262, metadata !3955, metadata !DIExpression()), !dbg !4016
  %263 = add nuw i32 %250, 1, !dbg !4215
  call void @llvm.dbg.value(metadata i32 %263, metadata !3965, metadata !DIExpression()), !dbg !4016
  %264 = icmp eq i32 %263, %193, !dbg !4216
  br i1 %264, label %265, label %248, !dbg !4201, !llvm.loop !4217

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4154
  call void @llvm.dbg.value(metadata i8* %266, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 0, metadata !3965, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %133, metadata !3966, metadata !DIExpression()), !dbg !4016
  %267 = icmp eq i32 %193, 0, !dbg !4219
  br i1 %267, label %312, label %268, !dbg !4222

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4222

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %272, metadata !3966, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %273, metadata !3965, metadata !DIExpression()), !dbg !4016
  br i1 %242, label %278, label %274, !dbg !4223

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4226
  %276 = load i8, i8* %275, align 1, !dbg !4226
  %277 = icmp sgt i8 %276, -1, !dbg !4227
  br i1 %277, label %278, label %307, !dbg !4228

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4229

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3956, metadata !DIExpression()), !dbg !4016
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4230
  %281 = load i8, i8* %280, align 1, !dbg !4230
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4233
  call void @llvm.dbg.value(metadata i8* %282, metadata !3955, metadata !DIExpression()), !dbg !4016
  store i8 %281, i8* %271, align 1, !dbg !4234
  br label %293, !dbg !4235

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4236
  %285 = load i8, i8* %284, align 1, !dbg !4236
  %286 = zext i8 %285 to i32, !dbg !4236
  %287 = shl nuw nsw i32 %286, 2, !dbg !4238
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4239
  %289 = bitcast i8* %288 to i8**, !dbg !4240
  %290 = load i8*, i8** %289, align 4, !dbg !4240
  call void @llvm.dbg.value(metadata i8* %290, metadata !3966, metadata !DIExpression()), !dbg !4016
  store i8* null, i8** %289, align 4, !dbg !4241
  %291 = tail call i32 @strlen(i8* noundef %290) #24, !dbg !4242
  %292 = add i32 %291, 1, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %292, metadata !3956, metadata !DIExpression()), !dbg !4016
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4016
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4244
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4016
  call void @llvm.dbg.value(metadata i8* %296, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %295, metadata !3956, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %294, metadata !3966, metadata !DIExpression()), !dbg !4016
  %297 = ptrtoint i8* %296 to i32, !dbg !4245
  %298 = add i32 %269, %295, !dbg !4247
  %299 = add i32 %298, %297, !dbg !4248
  %300 = icmp ugt i32 %299, %194, !dbg !4249
  br i1 %300, label %316, label %301, !dbg !4250

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4251
  %303 = load i8, i8* %302, align 1, !dbg !4251
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4252
  call void @llvm.dbg.value(metadata i8* %304, metadata !3955, metadata !DIExpression()), !dbg !4016
  store i8 %303, i8* %296, align 1, !dbg !4253
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #24, !dbg !4254
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4255
  call void @llvm.dbg.value(metadata i8* %306, metadata !3955, metadata !DIExpression()), !dbg !4016
  br label %307, !dbg !4256

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4257
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4016
  call void @llvm.dbg.value(metadata i8* %309, metadata !3955, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i8* %308, metadata !3966, metadata !DIExpression()), !dbg !4016
  %310 = add nuw i32 %273, 1, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %310, metadata !3965, metadata !DIExpression()), !dbg !4016
  %311 = icmp eq i32 %310, %193, !dbg !4219
  br i1 %311, label %312, label %270, !dbg !4222, !llvm.loop !4259

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4154
  %314 = ptrtoint i8* %313 to i32, !dbg !4261
  %315 = sub i32 %314, %17, !dbg !4261
  br label %316, !dbg !4262

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4016
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4263
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4263
  ret i32 %317, !dbg !4263
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !4264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4268, metadata !DIExpression()), !dbg !4269
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !4270
  ret i1 %2, !dbg !4271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !4272 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4277, metadata !DIExpression()), !dbg !4278
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4279
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4280
  %4 = and i1 %2, %3, !dbg !4280
  ret i1 %4, !dbg !4281
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4282 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4286, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata i32 %1, metadata !4287, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata i32 %2, metadata !4288, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata i8* %3, metadata !4289, metadata !DIExpression()), !dbg !4292
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4293
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4293
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4290, metadata !DIExpression()), !dbg !4294
  call void @llvm.va_start(i8* nonnull %6), !dbg !4295
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4296
  %8 = load i32, i32* %7, align 4, !dbg !4296
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4296
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !4296
  call void @llvm.dbg.value(metadata i32 %10, metadata !4291, metadata !DIExpression()), !dbg !4292
  call void @llvm.va_end(i8* nonnull %6), !dbg !4297
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4298
  ret i32 %10, !dbg !4299
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4300 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4312, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4313, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i8* %2, metadata !4314, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i8* %3, metadata !4315, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i8* %3, metadata !4316, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i8* %3, metadata !4317, metadata !DIExpression()), !dbg !4331
  %5 = icmp eq i8* %3, null, !dbg !4332
  br i1 %5, label %45, label %6, !dbg !4334

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4326, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4331
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4335
  %8 = load i8, i8* %7, align 1, !dbg !4335
  %9 = zext i8 %8 to i32, !dbg !4336
  call void @llvm.dbg.value(metadata i32 %9, metadata !4327, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i8 undef, metadata !4328, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4331
  call void @llvm.dbg.value(metadata i8 undef, metadata !4329, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4331
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  call void @llvm.dbg.value(metadata i32 0, metadata !4325, metadata !DIExpression()), !dbg !4331
  %10 = icmp eq i8 %8, 0, !dbg !4337
  br i1 %10, label %39, label %11, !dbg !4340

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4341
  call void @llvm.dbg.value(metadata i8 %12, metadata !4326, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4331
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  %13 = zext i8 %12 to i32, !dbg !4342
  call void @llvm.dbg.value(metadata i32 %13, metadata !4326, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4331
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  %14 = shl nuw nsw i32 %13, 2, !dbg !4343
  call void @llvm.dbg.value(metadata i32 %14, metadata !4326, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4344
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4345
  %17 = load i8, i8* %16, align 1, !dbg !4345
  call void @llvm.dbg.value(metadata i8 %17, metadata !4328, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4331
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  %18 = zext i8 %17 to i32, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %18, metadata !4328, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4347
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4348
  %21 = load i8, i8* %20, align 1, !dbg !4348
  call void @llvm.dbg.value(metadata i8 %21, metadata !4329, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4331
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  %22 = zext i8 %21 to i32, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %22, metadata !4329, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  %23 = shl nuw nsw i32 %22, 1, !dbg !4350
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4331
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %24, metadata !4323, metadata !DIExpression()), !dbg !4331
  br label %25, !dbg !4340

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4323, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i32 %27, metadata !4325, metadata !DIExpression()), !dbg !4331
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4352
  call void @llvm.dbg.value(metadata i8* %28, metadata !4323, metadata !DIExpression()), !dbg !4331
  %29 = load i8, i8* %26, align 1, !dbg !4354
  %30 = zext i8 %29 to i32, !dbg !4354
  call void @llvm.dbg.value(metadata i32 %30, metadata !4330, metadata !DIExpression()), !dbg !4331
  %31 = shl nuw nsw i32 %30, 2, !dbg !4355
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4356
  %33 = bitcast i8* %32 to i8**, !dbg !4357
  call void @llvm.dbg.value(metadata i8** %33, metadata !4324, metadata !DIExpression()), !dbg !4331
  store i8* %28, i8** %33, align 4, !dbg !4358
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !4359
  %35 = add i32 %34, 1, !dbg !4360
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4361
  call void @llvm.dbg.value(metadata i8* %36, metadata !4323, metadata !DIExpression()), !dbg !4331
  %37 = add nuw nsw i32 %27, 1, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %37, metadata !4325, metadata !DIExpression()), !dbg !4331
  %38 = icmp eq i32 %37, %9, !dbg !4337
  br i1 %38, label %39, label %25, !dbg !4340, !llvm.loop !4363

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4365
  call void @llvm.dbg.value(metadata i8* %40, metadata !4316, metadata !DIExpression()), !dbg !4331
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4366
  %42 = bitcast i8* %41 to i8**, !dbg !4366
  %43 = load i8*, i8** %42, align 1, !dbg !4366
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !4367
  br label %45, !dbg !4368

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4331
  ret i32 %46, !dbg !4369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4370 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4374, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4375, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i8* %2, metadata !4376, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i8* %3, metadata !4377, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i8* %4, metadata !4378, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i8* %4, metadata !4379, metadata !DIExpression()), !dbg !4384
  %6 = ptrtoint i8* %4 to i32, !dbg !4385
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4385
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !4385
  ret i32 %8, !dbg !4386
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4387 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4391, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i32 %1, metadata !4392, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i8 0, metadata !4394, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i32 0, metadata !4395, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i8 poison, metadata !4394, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i8* %0, metadata !4391, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4396
  %3 = load i8, i8* %0, align 1, !dbg !4397
  call void @llvm.dbg.value(metadata i8 %3, metadata !4393, metadata !DIExpression()), !dbg !4396
  %4 = icmp eq i8 %3, 0, !dbg !4398
  br i1 %4, label %29, label %5, !dbg !4399

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4400
  call void @llvm.dbg.value(metadata i32 %8, metadata !4395, metadata !DIExpression()), !dbg !4396
  br i1 %9, label %11, label %22, !dbg !4401

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4403
  br i1 %12, label %13, label %17, !dbg !4407

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4408
  br i1 %14, label %29, label %15, !dbg !4411

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !4412
  br i1 %16, label %29, label %22, !dbg !4414

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !4415
  %19 = xor i1 %18, true, !dbg !4417
  %20 = zext i1 %18 to i32, !dbg !4417
  %21 = add nsw i32 %8, %20, !dbg !4417
  br label %22, !dbg !4417

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4396
  call void @llvm.dbg.value(metadata i32 %24, metadata !4395, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i8 poison, metadata !4394, metadata !DIExpression()), !dbg !4396
  %25 = icmp eq i8 %6, 37, !dbg !4418
  %26 = xor i1 %25, %23, !dbg !4420
  call void @llvm.dbg.value(metadata i8* %10, metadata !4391, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i8* %10, metadata !4391, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4396
  %27 = load i8, i8* %10, align 1, !dbg !4397
  call void @llvm.dbg.value(metadata i8 %27, metadata !4393, metadata !DIExpression()), !dbg !4396
  %28 = icmp eq i8 %27, 0, !dbg !4398
  br i1 %28, label %29, label %5, !dbg !4399, !llvm.loop !4421

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4396
  ret i1 %30, !dbg !4423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #6 !dbg !4424 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4428, metadata !DIExpression()), !dbg !4429
  %2 = add i8 %0, -64, !dbg !4430
  %3 = icmp ult i8 %2, 59, !dbg !4430
  ret i1 %3, !dbg !4431
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4432 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4440, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %1, metadata !4441, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4442, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8* %3, metadata !4443, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %4, metadata !4444, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i16* %5, metadata !4445, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %6, metadata !4446, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8* %0, metadata !4447, metadata !DIExpression()), !dbg !4509
  %11 = bitcast i8* %0 to i32*, !dbg !4510
  call void @llvm.dbg.value(metadata i32* %11, metadata !4448, metadata !DIExpression()), !dbg !4509
  %12 = and i32 %4, 8, !dbg !4511
  %13 = icmp eq i32 %12, 0, !dbg !4512
  call void @llvm.dbg.value(metadata i1 %13, metadata !4452, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4509
  call void @llvm.dbg.value(metadata i8* %0, metadata !4455, metadata !DIExpression()), !dbg !4509
  %14 = icmp eq i32 %1, 0, !dbg !4513
  br i1 %14, label %15, label %17, !dbg !4514

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #25, !dbg !4515
  br label %17, !dbg !4514

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4514
  call void @llvm.dbg.value(metadata i32 %18, metadata !4441, metadata !DIExpression()), !dbg !4509
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4516
  %20 = load i8, i8* %19, align 1, !dbg !4516
  %21 = zext i8 %20 to i32, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %21, metadata !4450, metadata !DIExpression()), !dbg !4509
  %22 = icmp ne i8 %20, 0, !dbg !4518
  %23 = and i32 %4, 1, !dbg !4519
  %24 = icmp ne i32 %23, 0, !dbg !4519
  %25 = and i1 %24, %22, !dbg !4519
  call void @llvm.dbg.value(metadata i1 %25, metadata !4454, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4509
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4520
  %27 = load i8, i8* %26, align 1, !dbg !4520
  %28 = zext i8 %27 to i32, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %28, metadata !4451, metadata !DIExpression()), !dbg !4509
  %29 = icmp ne i8 %27, 0, !dbg !4522
  %30 = and i32 %4, 2, !dbg !4523
  %31 = icmp ne i32 %30, 0, !dbg !4523
  %32 = and i1 %31, %29, !dbg !4523
  call void @llvm.dbg.value(metadata i1 %32, metadata !4453, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4509
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4524
  br i1 %33, label %38, label %34, !dbg !4524

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4526
  br i1 %35, label %267, label %36, !dbg !4529

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #24, !dbg !4530
  br label %267, !dbg !4532

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4533
  %40 = zext i8 %39 to i32, !dbg !4534
  %41 = shl nuw nsw i32 %40, 2, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %41, metadata !4449, metadata !DIExpression()), !dbg !4509
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4536
  %43 = bitcast i8* %42 to i8**, !dbg !4537
  %44 = load i8*, i8** %43, align 4, !dbg !4537
  call void @llvm.dbg.value(metadata i8* %44, metadata !4458, metadata !DIExpression()), !dbg !4509
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4538
  call void @llvm.dbg.value(metadata i8* %45, metadata !4459, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 0, metadata !4460, metadata !DIExpression()), !dbg !4509
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4539
  br i1 %46, label %47, label %132, !dbg !4540

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4457, metadata !DIExpression()), !dbg !4509
  br i1 %25, label %48, label %73, !dbg !4541

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4457, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8* %45, metadata !4459, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 0, metadata !4460, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 0, metadata !4461, metadata !DIExpression()), !dbg !4542
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4543

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4457, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8* %52, metadata !4459, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %53, metadata !4460, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %54, metadata !4461, metadata !DIExpression()), !dbg !4542
  %55 = load i8, i8* %52, align 1, !dbg !4544
  %56 = zext i8 %55 to i32, !dbg !4545
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4545
  %58 = bitcast i32* %57 to i8**, !dbg !4546
  %59 = load i8*, i8** %58, align 4, !dbg !4546
  call void @llvm.dbg.value(metadata i8* %59, metadata !4467, metadata !DIExpression()), !dbg !4547
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #25, !dbg !4548
  call void @llvm.dbg.value(metadata i32 %60, metadata !4470, metadata !DIExpression()), !dbg !4547
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4549
  br i1 %62, label %63, label %67, !dbg !4549

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4551
  %65 = add nuw i32 %53, 1, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %65, metadata !4460, metadata !DIExpression()), !dbg !4509
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4554
  store i16 %64, i16* %66, align 2, !dbg !4555
  br label %67, !dbg !4556

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4509
  call void @llvm.dbg.value(metadata i32 %68, metadata !4460, metadata !DIExpression()), !dbg !4509
  %69 = add nsw i32 %60, %51, !dbg !4557
  call void @llvm.dbg.value(metadata i32 %69, metadata !4457, metadata !DIExpression()), !dbg !4509
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4558
  call void @llvm.dbg.value(metadata i8* %70, metadata !4459, metadata !DIExpression()), !dbg !4509
  %71 = add nuw nsw i32 %54, 1, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %71, metadata !4461, metadata !DIExpression()), !dbg !4542
  %72 = icmp eq i32 %71, %21, !dbg !4560
  br i1 %72, label %79, label %50, !dbg !4543, !llvm.loop !4561

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4563
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4563
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4563
  br label %79, !dbg !4563

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4566
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4509
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4567
  call void @llvm.dbg.value(metadata i1 undef, metadata !4471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4568
  call void @llvm.dbg.value(metadata i32 0, metadata !4472, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %82, metadata !4457, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8* %81, metadata !4459, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %80, metadata !4460, metadata !DIExpression()), !dbg !4509
  %83 = icmp eq i8 %27, 0, !dbg !4570
  br i1 %83, label %267, label %84, !dbg !4571

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4572
  %86 = icmp eq i32 %85, 0, !dbg !4573
  call void @llvm.dbg.value(metadata i1 %86, metadata !4471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4568
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4571

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4457, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8* %93, metadata !4459, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %94, metadata !4460, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %95, metadata !4472, metadata !DIExpression()), !dbg !4569
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4574
  call void @llvm.dbg.value(metadata i8* %96, metadata !4459, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8 undef, metadata !4474, metadata !DIExpression()), !dbg !4575
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4576
  call void @llvm.dbg.value(metadata i8* %97, metadata !4459, metadata !DIExpression()), !dbg !4509
  %98 = load i8, i8* %96, align 1, !dbg !4577
  call void @llvm.dbg.value(metadata i8 %98, metadata !4477, metadata !DIExpression()), !dbg !4575
  %99 = zext i8 %98 to i32, !dbg !4578
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4578
  %101 = bitcast i32* %100 to i8**, !dbg !4579
  %102 = load i8*, i8** %101, align 4, !dbg !4579
  call void @llvm.dbg.value(metadata i8* %102, metadata !4478, metadata !DIExpression()), !dbg !4575
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #25, !dbg !4580
  call void @llvm.dbg.value(metadata i1 %103, metadata !4479, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4575
  br i1 %13, label %110, label %104, !dbg !4581

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4583
  call void @llvm.dbg.value(metadata i8 %105, metadata !4474, metadata !DIExpression()), !dbg !4575
  %106 = zext i8 %105 to i32, !dbg !4584
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #25, !dbg !4585
  br i1 %107, label %108, label %110, !dbg !4586

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.17, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #24, !dbg !4587
  %109 = add nsw i32 %92, -2, !dbg !4593
  call void @llvm.dbg.value(metadata i32 %109, metadata !4457, metadata !DIExpression()), !dbg !4509
  br label %127, !dbg !4594

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4595

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4596

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %113, metadata !4457, metadata !DIExpression()), !dbg !4509
  br label %127, !dbg !4601

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4602

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4505), !dbg !4603
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #25, !dbg !4604
  call void @llvm.dbg.value(metadata i32 %116, metadata !4480, metadata !DIExpression()), !dbg !4575
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4605
  br i1 %118, label %119, label %123, !dbg !4605

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4607
  %121 = add nuw i32 %94, 1, !dbg !4609
  call void @llvm.dbg.value(metadata i32 %121, metadata !4460, metadata !DIExpression()), !dbg !4509
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4610
  store i16 %120, i16* %122, align 2, !dbg !4611
  br label %123, !dbg !4612

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4509
  call void @llvm.dbg.value(metadata i32 %124, metadata !4460, metadata !DIExpression()), !dbg !4509
  %125 = add i32 %92, -1, !dbg !4613
  %126 = add i32 %125, %116, !dbg !4614
  call void @llvm.dbg.value(metadata i32 %126, metadata !4457, metadata !DIExpression()), !dbg !4509
  br label %127, !dbg !4615

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4509
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4575
  call void @llvm.dbg.value(metadata i32 %129, metadata !4457, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %128, metadata !4460, metadata !DIExpression()), !dbg !4509
  %130 = add nuw nsw i32 %95, 1, !dbg !4616
  call void @llvm.dbg.value(metadata i8* %97, metadata !4459, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %130, metadata !4472, metadata !DIExpression()), !dbg !4569
  %131 = icmp eq i32 %130, %28, !dbg !4570
  br i1 %131, label %267, label %91, !dbg !4571, !llvm.loop !4617

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4482, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4483, metadata !DIExpression()), !dbg !4620
  br i1 %25, label %133, label %135, !dbg !4621

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4484, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8 0, metadata !4485, metadata !DIExpression()), !dbg !4509
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4622
  call void @llvm.dbg.value(metadata i8* %134, metadata !4486, metadata !DIExpression()), !dbg !4509
  br label %140, !dbg !4625

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4626
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4626

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4486, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8 undef, metadata !4485, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8 0, metadata !4484, metadata !DIExpression()), !dbg !4509
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #24, !dbg !4628
  br label %145, !dbg !4631

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4632
  call void @llvm.dbg.value(metadata i8* %148, metadata !4459, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 0, metadata !4488, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata i8 %146, metadata !4485, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8 %147, metadata !4484, metadata !DIExpression()), !dbg !4509
  %149 = icmp eq i8 %27, 0, !dbg !4634
  br i1 %149, label %150, label %152, !dbg !4635

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4636
  br label %157, !dbg !4635

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4635

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4636
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4637
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4638
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4509
  call void @llvm.dbg.value(metadata i8 undef, metadata !4481, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4509
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4639
  %163 = load i8, i8* %162, align 1, !dbg !4639
  %164 = zext i8 %159 to i32, !dbg !4640
  %165 = add i8 %163, %159, !dbg !4641
  call void @llvm.dbg.value(metadata i8 %165, metadata !4481, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4509
  %166 = icmp eq i32 %30, 0, !dbg !4642
  %167 = lshr i8 %160, 1, !dbg !4643
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4643
  call void @llvm.dbg.value(metadata i8 %168, metadata !4481, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4509
  %169 = icmp eq i32 %23, 0, !dbg !4644
  %170 = icmp eq i32 %158, 0, !dbg !4636
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4636
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4636
  call void @llvm.dbg.value(metadata i8 %172, metadata !4481, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4509
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4496, metadata !DIExpression()), !dbg !4645
  %173 = load i32, i32* %11, align 1, !dbg !4646
  store i8 %165, i8* %162, align 1, !dbg !4647
  store i8 %172, i8* %19, align 1, !dbg !4647
  store i8 %168, i8* %26, align 1, !dbg !4647
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #24, !dbg !4648
  call void @llvm.dbg.value(metadata i32 %174, metadata !4487, metadata !DIExpression()), !dbg !4509
  %175 = icmp slt i32 %174, 0, !dbg !4649
  br i1 %175, label %267, label %220, !dbg !4651

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4459, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %178, metadata !4488, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata i8 %179, metadata !4485, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8 %180, metadata !4484, metadata !DIExpression()), !dbg !4509
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4652
  call void @llvm.dbg.value(metadata i8* %181, metadata !4459, metadata !DIExpression()), !dbg !4509
  %182 = load i8, i8* %177, align 1, !dbg !4653
  call void @llvm.dbg.value(metadata i8 %182, metadata !4490, metadata !DIExpression()), !dbg !4654
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4655
  call void @llvm.dbg.value(metadata i8* %183, metadata !4459, metadata !DIExpression()), !dbg !4509
  %184 = load i8, i8* %181, align 1, !dbg !4656
  call void @llvm.dbg.value(metadata i8 %184, metadata !4493, metadata !DIExpression()), !dbg !4654
  %185 = zext i8 %184 to i32, !dbg !4657
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4657
  %187 = bitcast i32* %186 to i8**, !dbg !4658
  %188 = load i8*, i8** %187, align 4, !dbg !4658
  call void @llvm.dbg.value(metadata i8* %188, metadata !4494, metadata !DIExpression()), !dbg !4654
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #25, !dbg !4659
  call void @llvm.dbg.value(metadata i1 %189, metadata !4495, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4654
  br i1 %13, label %193, label %190, !dbg !4660

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4662
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #25, !dbg !4663
  br i1 %192, label %215, label %193, !dbg !4664

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4665

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4666

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4669
  call void @llvm.dbg.value(metadata i8 %196, metadata !4484, metadata !DIExpression()), !dbg !4509
  br label %208, !dbg !4672

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4673

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4674
  call void @llvm.dbg.value(metadata i8 %199, metadata !4485, metadata !DIExpression()), !dbg !4509
  br label %208, !dbg !4677

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4678

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4680
  call void @llvm.dbg.value(metadata i8 %202, metadata !4484, metadata !DIExpression()), !dbg !4509
  br label %208, !dbg !4683

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4684
  call void @llvm.dbg.value(metadata i8 %204, metadata !4485, metadata !DIExpression()), !dbg !4509
  %205 = zext i8 %179 to i32, !dbg !4686
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4686
  store i8 %182, i8* %206, align 1, !dbg !4687
  %207 = add i8 %179, 2, !dbg !4688
  call void @llvm.dbg.value(metadata i8 %207, metadata !4485, metadata !DIExpression()), !dbg !4509
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4689
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4689
  store i8 %184, i8* %214, align 1, !dbg !4689
  br label %215, !dbg !4690

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4509
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4638
  call void @llvm.dbg.value(metadata i8 %217, metadata !4485, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8 %216, metadata !4484, metadata !DIExpression()), !dbg !4509
  %218 = add nuw nsw i32 %178, 1, !dbg !4690
  call void @llvm.dbg.value(metadata i8* %183, metadata !4459, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %218, metadata !4488, metadata !DIExpression()), !dbg !4633
  %219 = icmp eq i32 %218, %28, !dbg !4634
  br i1 %219, label %157, label %176, !dbg !4635, !llvm.loop !4691

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4643
  call void @llvm.dbg.value(metadata i32 %174, metadata !4457, metadata !DIExpression()), !dbg !4509
  store i32 %173, i32* %11, align 1, !dbg !4693
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4694
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #24, !dbg !4695
  call void @llvm.dbg.value(metadata i32 %223, metadata !4487, metadata !DIExpression()), !dbg !4509
  %224 = icmp slt i32 %223, 0, !dbg !4696
  br i1 %224, label %267, label %225, !dbg !4698

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4457, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4509
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4699
  %228 = add nuw nsw i32 %41, %21, !dbg !4699
  %229 = sub i32 %227, %228, !dbg !4699
  call void @llvm.dbg.value(metadata i32 %229, metadata !4497, metadata !DIExpression()), !dbg !4509
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #24, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %230, metadata !4487, metadata !DIExpression()), !dbg !4509
  %231 = icmp slt i32 %230, 0, !dbg !4701
  br i1 %231, label %267, label %232, !dbg !4703

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %233, metadata !4457, metadata !DIExpression()), !dbg !4509
  %234 = add nuw nsw i32 %233, %230, !dbg !4705
  call void @llvm.dbg.value(metadata i32 %234, metadata !4457, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 0, metadata !4498, metadata !DIExpression()), !dbg !4706
  %235 = icmp eq i8 %159, 0, !dbg !4707
  br i1 %235, label %264, label %236, !dbg !4708

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4708

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4498, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 %240, metadata !4457, metadata !DIExpression()), !dbg !4509
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4709
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4710
  %242 = load i8, i8* %241, align 1, !dbg !4710
  call void @llvm.dbg.value(metadata i8 %242, metadata !4500, metadata !DIExpression()), !dbg !4711
  store i8 %242, i8* %10, align 1, !dbg !4712
  %243 = zext i8 %242 to i32, !dbg !4713
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4713
  %245 = bitcast i32* %244 to i8**, !dbg !4714
  %246 = load i8*, i8** %245, align 4, !dbg !4714
  call void @llvm.dbg.value(metadata i8* %246, metadata !4503, metadata !DIExpression()), !dbg !4711
  br i1 %237, label %250, label %247, !dbg !4715

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4716
  %249 = load i16, i16* %248, align 2, !dbg !4716
  br label %250, !dbg !4715

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4715
  call void @llvm.dbg.value(metadata i32 undef, metadata !4504, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4711
  call void @llvm.dbg.value(metadata i8* %10, metadata !4500, metadata !DIExpression(DW_OP_deref)), !dbg !4711
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %252, metadata !4487, metadata !DIExpression()), !dbg !4509
  %253 = icmp slt i32 %252, 0, !dbg !4718
  br i1 %253, label %257, label %254, !dbg !4720

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4504, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4457, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4509
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #25, !dbg !4721
  call void @llvm.dbg.value(metadata i32 %255, metadata !4487, metadata !DIExpression()), !dbg !4509
  %256 = icmp slt i32 %255, 0, !dbg !4722
  br i1 %256, label %257, label %259, !dbg !4724

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4457, metadata !DIExpression()), !dbg !4509
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4725
  call void @llvm.dbg.value(metadata i32 undef, metadata !4457, metadata !DIExpression()), !dbg !4509
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4726
  call void @llvm.dbg.value(metadata i32 %260, metadata !4457, metadata !DIExpression()), !dbg !4509
  %261 = add nsw i32 %260, %255, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %261, metadata !4457, metadata !DIExpression()), !dbg !4509
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4725
  %262 = add nuw nsw i32 %239, 1, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %262, metadata !4498, metadata !DIExpression()), !dbg !4706
  %263 = icmp eq i32 %262, %164, !dbg !4707
  br i1 %263, label %264, label %238, !dbg !4708, !llvm.loop !4729

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4705
  call void @llvm.dbg.value(metadata i32 %265, metadata !4457, metadata !DIExpression()), !dbg !4509
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !4731
  br label %267, !dbg !4732

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4509
  ret i32 %268, !dbg !4733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4738, metadata !DIExpression()), !dbg !4746
  call void @llvm.dbg.value(metadata i8* %0, metadata !4739, metadata !DIExpression()), !dbg !4746
  call void @llvm.dbg.value(metadata i8* %0, metadata !4740, metadata !DIExpression()), !dbg !4746
  %2 = load i8, i8* %0, align 1, !dbg !4747
  %3 = zext i8 %2 to i32, !dbg !4747
  %4 = shl nuw nsw i32 %3, 2, !dbg !4748
  call void @llvm.dbg.value(metadata i32 %4, metadata !4741, metadata !DIExpression()), !dbg !4746
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4749
  %6 = load i8, i8* %5, align 1, !dbg !4749
  %7 = zext i8 %6 to i32, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %7, metadata !4742, metadata !DIExpression()), !dbg !4746
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4750
  %9 = load i8, i8* %8, align 1, !dbg !4750
  %10 = zext i8 %9 to i32, !dbg !4750
  call void @llvm.dbg.value(metadata i32 %10, metadata !4743, metadata !DIExpression()), !dbg !4746
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4751
  call void @llvm.dbg.value(metadata i8* %11, metadata !4739, metadata !DIExpression()), !dbg !4746
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4752
  call void @llvm.dbg.value(metadata i8* %12, metadata !4739, metadata !DIExpression()), !dbg !4746
  call void @llvm.dbg.value(metadata i32 0, metadata !4744, metadata !DIExpression()), !dbg !4753
  %13 = icmp eq i8 %6, 0, !dbg !4754
  br i1 %13, label %14, label %19, !dbg !4756

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4746
  %16 = ptrtoint i8* %15 to i32, !dbg !4757
  %17 = ptrtoint i8* %0 to i32, !dbg !4757
  %18 = sub i32 %16, %17, !dbg !4757
  ret i32 %18, !dbg !4758

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4744, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i8* %21, metadata !4739, metadata !DIExpression()), !dbg !4746
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4759
  call void @llvm.dbg.value(metadata i8* %22, metadata !4739, metadata !DIExpression()), !dbg !4746
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #24, !dbg !4761
  %24 = add i32 %23, 1, !dbg !4762
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4763
  call void @llvm.dbg.value(metadata i8* %25, metadata !4739, metadata !DIExpression()), !dbg !4746
  %26 = add nuw nsw i32 %20, 1, !dbg !4764
  call void @llvm.dbg.value(metadata i32 %26, metadata !4744, metadata !DIExpression()), !dbg !4753
  %27 = icmp eq i32 %26, %7, !dbg !4754
  br i1 %27, label %14, label %19, !dbg !4756, !llvm.loop !4765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4767 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4771, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.value(metadata i8* %1, metadata !4772, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.value(metadata i8* %2, metadata !4773, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.value(metadata i16 %3, metadata !4774, metadata !DIExpression()), !dbg !4775
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4776
  br i1 %5, label %6, label %9, !dbg !4778

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4779
  %8 = add i32 %7, 1, !dbg !4781
  br label %20, !dbg !4782

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4783
  br i1 %10, label %13, label %11, !dbg !4784

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4784
  br label %16, !dbg !4784

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4785
  %15 = add i32 %14, 1, !dbg !4786
  br label %16, !dbg !4784

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4784
  %18 = and i32 %17, 65535, !dbg !4787
  call void @llvm.dbg.value(metadata i32 %17, metadata !4774, metadata !DIExpression()), !dbg !4775
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !4788
  br label %20, !dbg !4789

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4775
  ret i32 %21, !dbg !4790
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4793, metadata !DIExpression()), !dbg !4794
  ret i32 0, !dbg !4795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4796 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4800, metadata !DIExpression()), !dbg !4801
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4802
  ret void, !dbg !4803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !4804 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4807
  ret i8* %1, !dbg !4808
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4809 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4820, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i8* %0, metadata !4819, metadata !DIExpression()), !dbg !4829
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !4830
  ret void, !dbg !4832
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4837, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata i8* %1, metadata !4838, metadata !DIExpression()), !dbg !4839
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4840
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !4840
  ret i32 %4, !dbg !4841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4842 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4849, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4846, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.value(metadata i8* %1, metadata !4847, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.value(metadata i8* %2, metadata !4848, metadata !DIExpression()), !dbg !4850
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !4851
  ret void, !dbg !4852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4853 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4857, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.value(metadata i32 %1, metadata !4858, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.value(metadata i32 0, metadata !4859, metadata !DIExpression()), !dbg !4860
  %3 = icmp eq i32 %1, 0, !dbg !4861
  br i1 %3, label %13, label %4, !dbg !4864

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4859, metadata !DIExpression()), !dbg !4860
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4865
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4867
  %8 = load i8, i8* %7, align 1, !dbg !4867
  %9 = zext i8 %8 to i32, !dbg !4867
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !4865
  %11 = add nuw i32 %5, 1, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %11, metadata !4859, metadata !DIExpression()), !dbg !4860
  %12 = icmp eq i32 %11, %1, !dbg !4861
  br i1 %12, label %13, label %4, !dbg !4864, !llvm.loop !4869

13:                                               ; preds = %4, %2
  ret void, !dbg !4871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4872 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4876, metadata !DIExpression()), !dbg !4878
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4879
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4879
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4877, metadata !DIExpression()), !dbg !4880
  call void @llvm.va_start(i8* nonnull %3), !dbg !4881
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4882
  %5 = load i32, i32* %4, align 4, !dbg !4882
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4882
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !4882
  call void @llvm.va_end(i8* nonnull %3), !dbg !4883
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4884
  ret void, !dbg !4884
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4885 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4889, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i32 %1, metadata !4890, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i8* %2, metadata !4891, metadata !DIExpression()), !dbg !4894
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4895
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4895
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4892, metadata !DIExpression()), !dbg !4896
  call void @llvm.va_start(i8* nonnull %5), !dbg !4897
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4898
  %7 = load i32, i32* %6, align 4, !dbg !4898
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4898
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %9, metadata !4893, metadata !DIExpression()), !dbg !4894
  call void @llvm.va_end(i8* nonnull %5), !dbg !4899
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4900
  ret i32 %9, !dbg !4901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4902 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4909, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %0, metadata !4906, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %1, metadata !4907, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %2, metadata !4908, metadata !DIExpression()), !dbg !4916
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4917
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4917
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4910, metadata !DIExpression()), !dbg !4918
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4919
  store i8* %0, i8** %7, align 4, !dbg !4919
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4919
  store i32 %1, i32* %8, align 4, !dbg !4919
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4919
  store i32 0, i32* %9, align 4, !dbg !4919
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !4920
  %10 = load i32, i32* %9, align 4, !dbg !4921
  %11 = load i32, i32* %8, align 4, !dbg !4923
  %12 = icmp slt i32 %10, %11, !dbg !4924
  br i1 %12, label %13, label %15, !dbg !4925

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4926
  store i8 0, i8* %14, align 1, !dbg !4928
  br label %15, !dbg !4929

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4930
  ret i32 %10, !dbg !4931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #10 !dbg !4932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4937, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4938, metadata !DIExpression()), !dbg !4939
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4940
  %4 = load i8*, i8** %3, align 4, !dbg !4940
  %5 = icmp eq i8* %4, null, !dbg !4942
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4943
  br i1 %5, label %12, label %8, !dbg !4944

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4945
  %10 = load i32, i32* %9, align 4, !dbg !4945
  %11 = icmp slt i32 %7, %10, !dbg !4946
  br i1 %11, label %15, label %12, !dbg !4947

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4948
  %14 = add nsw i32 %7, 1, !dbg !4950
  store i32 %14, i32* %13, align 4, !dbg !4950
  br label %25, !dbg !4951

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4952
  %17 = icmp eq i32 %7, %16, !dbg !4954
  br i1 %17, label %18, label %21, !dbg !4955

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4956
  store i32 %19, i32* %6, align 4, !dbg !4956
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4958
  store i8 0, i8* %20, align 1, !dbg !4959
  br label %25, !dbg !4960

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4961
  %23 = add nsw i32 %7, 1, !dbg !4963
  store i32 %23, i32* %6, align 4, !dbg !4963
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4964
  store i8 %22, i8* %24, align 1, !dbg !4965
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4966
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !4967 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4972, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i8* %1, metadata !4973, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i8* %2, metadata !4974, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i8* %3, metadata !4975, metadata !DIExpression()), !dbg !4976
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !4977
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4978
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !4979
  unreachable, !dbg !4980
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4981 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5080
  ret %struct.k_thread* %1, !dbg !5081
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5082 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5086, metadata !DIExpression()), !dbg !5087
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5088, !srcloc !5090
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5091
  ret void, !dbg !5092
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !5093 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5094, !srcloc !5096
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !5097
  ret %struct.k_thread* %1, !dbg !5098
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #12 !dbg !5099 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5110, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata i8* %1, metadata !5111, metadata !DIExpression()), !dbg !5114
  %3 = icmp eq i8* %1, null, !dbg !5115
  br i1 %3, label %8, label %4, !dbg !5117

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5118
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5118
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5112, metadata !DIExpression()), !dbg !5114
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !5119, !range !5120
  call void @llvm.dbg.value(metadata i32 %7, metadata !5113, metadata !DIExpression()), !dbg !5114
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #25, !dbg !5121
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !5122
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !5123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #6 !dbg !5124 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5128, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i8* %1, metadata !5129, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i8* %1, metadata !5130, metadata !DIExpression()), !dbg !5132
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5133
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5131, metadata !DIExpression()), !dbg !5132
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5134
  %5 = ptrtoint i8* %4 to i32, !dbg !5135
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5135
  %7 = sub i32 %5, %6, !dbg !5135
  %8 = lshr i32 %7, 3, !dbg !5136
  ret i32 %8, !dbg !5137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #10 !dbg !5138 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5142, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i32 %1, metadata !5143, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i1 %2, metadata !5144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5147
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5148
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5145, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5146, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5147
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5149
  %6 = bitcast i8* %5 to i16*, !dbg !5149
  %7 = load i16, i16* %6, align 2, !dbg !5149
  %8 = and i16 %7, -2, !dbg !5153
  %9 = zext i1 %2 to i16, !dbg !5153
  %10 = or i16 %8, %9, !dbg !5153
  store i16 %10, i16* %6, align 2, !dbg !5149
  ret void, !dbg !5154
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5155 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5159, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.value(metadata i32 %1, metadata !5160, metadata !DIExpression()), !dbg !5161
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5162
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5164
  br i1 %4, label %7, label %5, !dbg !5165

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5166
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5168
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !5169
  br label %7, !dbg !5170

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5171, !range !5173
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !5174
  br i1 %9, label %13, label %10, !dbg !5175

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !5176
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5178, !range !5173
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #25, !dbg !5179
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5180
  call void @llvm.dbg.value(metadata i32 %12, metadata !5160, metadata !DIExpression()), !dbg !5161
  br label %13, !dbg !5181

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5160, metadata !DIExpression()), !dbg !5161
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #25, !dbg !5182
  ret void, !dbg !5183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5184 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5188, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.value(metadata i32 %1, metadata !5189, metadata !DIExpression()), !dbg !5190
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5191
  %4 = add i32 %3, %1, !dbg !5192
  ret i32 %4, !dbg !5193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5194 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5198, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.value(metadata i32 %1, metadata !5199, metadata !DIExpression()), !dbg !5200
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !5201
  %4 = and i32 %3, 1, !dbg !5202
  %5 = icmp ne i32 %4, 0, !dbg !5201
  ret i1 %5, !dbg !5203
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5204 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5206, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i32 %1, metadata !5207, metadata !DIExpression()), !dbg !5211
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5212, !range !5213
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5214
  call void @llvm.dbg.value(metadata i32 %4, metadata !5208, metadata !DIExpression()), !dbg !5215
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !5216
  ret void, !dbg !5217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5218 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5222, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 %1, metadata !5223, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 %2, metadata !5224, metadata !DIExpression()), !dbg !5227
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5228
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5229
  %6 = add i32 %5, %4, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %6, metadata !5225, metadata !DIExpression()), !dbg !5227
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !5231
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5232
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !5233
  ret void, !dbg !5234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5235 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5237, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata i32 %1, metadata !5238, metadata !DIExpression()), !dbg !5239
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #25, !dbg !5240
  %4 = sub i32 %1, %3, !dbg !5241
  ret i32 %4, !dbg !5242
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5243 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5245, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i32 %1, metadata !5246, metadata !DIExpression()), !dbg !5250
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5251, !range !5213
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5252
  call void @llvm.dbg.value(metadata i32 %4, metadata !5247, metadata !DIExpression()), !dbg !5253
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !5254
  ret void, !dbg !5255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5256 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5260, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i32 %1, metadata !5261, metadata !DIExpression()), !dbg !5262
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !5263
  %4 = lshr i32 %3, 1, !dbg !5264
  ret i32 %4, !dbg !5265
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !5266 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5270, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata i32 %1, metadata !5271, metadata !DIExpression()), !dbg !5273
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #25, !dbg !5274
  %4 = add i32 %1, 1, !dbg !5275
  %5 = sub i32 %4, %3, !dbg !5276
  call void @llvm.dbg.value(metadata i32 %5, metadata !5272, metadata !DIExpression()), !dbg !5273
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5277, !range !5278
  %7 = sub nsw i32 31, %6, !dbg !5279
  ret i32 %7, !dbg !5280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5281 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5285, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata i32 %1, metadata !5286, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata i32 %2, metadata !5287, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5288, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5294
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5295
  %5 = load i32, i32* %4, align 4, !dbg !5295
  %6 = icmp eq i32 %5, 0, !dbg !5296
  br i1 %6, label %7, label %12, !dbg !5297

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5298
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5300
  %10 = load i32, i32* %9, align 4, !dbg !5301
  %11 = or i32 %10, %8, !dbg !5301
  store i32 %11, i32* %9, align 4, !dbg !5301
  store i32 %1, i32* %4, align 4, !dbg !5302
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !5303
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !5304
  br label %14, !dbg !5305

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5290, metadata !DIExpression()), !dbg !5306
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #25, !dbg !5307, !range !5308
  call void @llvm.dbg.value(metadata i32 %13, metadata !5293, metadata !DIExpression()), !dbg !5306
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #25, !dbg !5309
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #25, !dbg !5310
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #25, !dbg !5311
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #25, !dbg !5312
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5314 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5316, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i32 %1, metadata !5317, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i32 %2, metadata !5318, metadata !DIExpression()), !dbg !5319
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #25, !dbg !5320
  ret void, !dbg !5321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5322 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5324, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i32 %1, metadata !5325, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i32 %2, metadata !5326, metadata !DIExpression()), !dbg !5327
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #25, !dbg !5328
  ret void, !dbg !5329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !5330 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5332, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 %1, metadata !5333, metadata !DIExpression()), !dbg !5334
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #25, !dbg !5335
  ret i32 %3, !dbg !5336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !5337 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5341, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.value(metadata i32 %1, metadata !5342, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.value(metadata i32 %2, metadata !5343, metadata !DIExpression()), !dbg !5346
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5347
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5344, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5345, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5346
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5345, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5346
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5348
  call void @llvm.dbg.value(metadata i8* %5, metadata !5345, metadata !DIExpression()), !dbg !5346
  %6 = bitcast i8* %5 to i16*, !dbg !5349
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5352
  %8 = load i16, i16* %7, align 2, !dbg !5352
  %9 = zext i16 %8 to i32, !dbg !5352
  ret i32 %9, !dbg !5353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #6 !dbg !5354 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5358, metadata !DIExpression()), !dbg !5359
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5360
  ret %struct.chunk_unit_t* %2, !dbg !5361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #9 !dbg !5362 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5366, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.value(metadata i32 %1, metadata !5367, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.value(metadata i32 %2, metadata !5368, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.value(metadata i32 %3, metadata !5369, metadata !DIExpression()), !dbg !5372
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5373
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5370, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5371, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5372
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5374
  call void @llvm.dbg.value(metadata i8* %6, metadata !5371, metadata !DIExpression()), !dbg !5372
  %7 = trunc i32 %3 to i16, !dbg !5375
  %8 = bitcast i8* %6 to i16*, !dbg !5378
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5379
  store i16 %7, i16* %9, align 2, !dbg !5380
  ret void, !dbg !5381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #6 !dbg !5382 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5386, metadata !DIExpression()), !dbg !5387
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #25, !dbg !5388
  ret i32 %2, !dbg !5389
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5390 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5394, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.value(metadata i32 %1, metadata !5395, metadata !DIExpression()), !dbg !5396
  %3 = add i32 %1, 4, !dbg !5397
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #25, !dbg !5398
  ret i32 %4, !dbg !5399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #6 !dbg !5400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5404, metadata !DIExpression()), !dbg !5405
  %2 = add i32 %0, 7, !dbg !5406
  %3 = lshr i32 %2, 3, !dbg !5407
  ret i32 %3, !dbg !5408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5409 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5413, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i32 %1, metadata !5414, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i32 %2, metadata !5415, metadata !DIExpression()), !dbg !5416
  %4 = shl i32 %2, 1, !dbg !5417
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #25, !dbg !5418
  ret void, !dbg !5419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5420 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5422, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata i32 %1, metadata !5423, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata i32 %2, metadata !5424, metadata !DIExpression()), !dbg !5425
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #25, !dbg !5426
  ret void, !dbg !5427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5428 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5430, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i32 %1, metadata !5431, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i32 %2, metadata !5432, metadata !DIExpression()), !dbg !5438
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5439
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !5433, metadata !DIExpression()), !dbg !5438
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5440
  %6 = icmp eq i32 %5, %1, !dbg !5441
  br i1 %6, label %7, label %14, !dbg !5442

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5443
  %9 = xor i32 %8, -1, !dbg !5445
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5446
  %11 = load i32, i32* %10, align 4, !dbg !5447
  %12 = and i32 %11, %9, !dbg !5447
  store i32 %12, i32* %10, align 4, !dbg !5447
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5448
  store i32 0, i32* %13, align 4, !dbg !5449
  br label %17, !dbg !5450

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5451
  call void @llvm.dbg.value(metadata i32 %15, metadata !5434, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.value(metadata i32 %5, metadata !5437, metadata !DIExpression()), !dbg !5452
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5453
  store i32 %5, i32* %16, align 4, !dbg !5454
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #25, !dbg !5455
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #25, !dbg !5456
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !5458 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5460, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.value(metadata i32 %1, metadata !5461, metadata !DIExpression()), !dbg !5462
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #25, !dbg !5463
  ret i32 %3, !dbg !5464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !5465 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5469, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i8* %1, metadata !5470, metadata !DIExpression()), !dbg !5476
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5477
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5477
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5471, metadata !DIExpression()), !dbg !5476
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #25, !dbg !5478
  call void @llvm.dbg.value(metadata i32 %5, metadata !5472, metadata !DIExpression()), !dbg !5476
  %6 = ptrtoint i8* %1 to i32, !dbg !5479
  call void @llvm.dbg.value(metadata i32 %6, metadata !5473, metadata !DIExpression()), !dbg !5476
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #25, !dbg !5480
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5480
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5481
  call void @llvm.dbg.value(metadata i32 %9, metadata !5474, metadata !DIExpression()), !dbg !5476
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #25, !dbg !5482
  %11 = shl i32 %10, 3, !dbg !5483
  call void @llvm.dbg.value(metadata i32 %11, metadata !5475, metadata !DIExpression()), !dbg !5476
  %12 = sub i32 %9, %6, !dbg !5484
  %13 = add i32 %12, %11, !dbg !5485
  ret i32 %13, !dbg !5486
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5487 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5491, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.value(metadata i32 %1, metadata !5492, metadata !DIExpression()), !dbg !5497
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5498
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5498
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5493, metadata !DIExpression()), !dbg !5497
  %5 = icmp eq i32 %1, 0, !dbg !5499
  br i1 %5, label %19, label %6, !dbg !5501

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !5502
  br i1 %7, label %19, label %8, !dbg !5503

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !5504, !range !5120
  call void @llvm.dbg.value(metadata i32 %9, metadata !5495, metadata !DIExpression()), !dbg !5497
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #25, !dbg !5505
  call void @llvm.dbg.value(metadata i32 %10, metadata !5496, metadata !DIExpression()), !dbg !5497
  %11 = icmp eq i32 %10, 0, !dbg !5506
  br i1 %11, label %19, label %12, !dbg !5508

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !5509
  %14 = icmp ugt i32 %13, %9, !dbg !5511
  br i1 %14, label %15, label %17, !dbg !5512

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5513
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #25, !dbg !5515
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #25, !dbg !5516
  br label %17, !dbg !5517

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #25, !dbg !5518
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !5519
  call void @llvm.dbg.value(metadata i8* %18, metadata !5494, metadata !DIExpression()), !dbg !5497
  br label %19, !dbg !5520

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5497
  ret i8* %20, !dbg !5521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !5522 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5526, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %1, metadata !5527, metadata !DIExpression()), !dbg !5528
  %3 = lshr i32 %1, 3, !dbg !5529
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5530
  %5 = load i32, i32* %4, align 4, !dbg !5530
  %6 = icmp uge i32 %3, %5, !dbg !5531
  ret i1 %6, !dbg !5532
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5533 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5537, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.value(metadata i32 %1, metadata !5538, metadata !DIExpression()), !dbg !5552
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5553
  call void @llvm.dbg.value(metadata i32 %3, metadata !5539, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5540, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5552
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5554
  %5 = load i32, i32* %4, align 4, !dbg !5554
  %6 = icmp eq i32 %5, 0, !dbg !5555
  br i1 %6, label %19, label %7, !dbg !5556

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5557
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %9, metadata !5544, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.value(metadata i32 %8, metadata !5545, metadata !DIExpression()), !dbg !5559
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !5560
  %11 = icmp ult i32 %10, %1, !dbg !5562
  br i1 %11, label %13, label %12, !dbg !5563

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #25, !dbg !5564
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !5566
  store i32 %14, i32* %4, align 4, !dbg !5567
  %15 = add nsw i32 %9, -1, !dbg !5568
  call void @llvm.dbg.value(metadata i32 %15, metadata !5544, metadata !DIExpression()), !dbg !5558
  %16 = icmp eq i32 %15, 0, !dbg !5568
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5569
  br i1 %18, label %19, label %7, !dbg !5569, !llvm.loop !5570

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5573
  %21 = load i32, i32* %20, align 4, !dbg !5573
  %22 = add nsw i32 %3, 1, !dbg !5574
  %23 = shl nsw i32 -1, %22, !dbg !5574
  %24 = and i32 %21, %23, !dbg !5575
  call void @llvm.dbg.value(metadata i32 %24, metadata !5547, metadata !DIExpression()), !dbg !5552
  %25 = icmp eq i32 %24, 0, !dbg !5576
  br i1 %25, label %30, label %26, !dbg !5577

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5578, !range !5278
  call void @llvm.dbg.value(metadata i32 %27, metadata !5548, metadata !DIExpression()), !dbg !5579
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5580
  %29 = load i32, i32* %28, align 4, !dbg !5580
  call void @llvm.dbg.value(metadata i32 %29, metadata !5551, metadata !DIExpression()), !dbg !5579
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #25, !dbg !5581
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5552
  ret i32 %31, !dbg !5582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5583 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5585, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.value(metadata i32 %1, metadata !5586, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.value(metadata i32 %2, metadata !5587, metadata !DIExpression()), !dbg !5591
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5592
  call void @llvm.dbg.value(metadata i32 %4, metadata !5588, metadata !DIExpression()), !dbg !5591
  %5 = sub i32 %2, %1, !dbg !5593
  call void @llvm.dbg.value(metadata i32 %5, metadata !5589, metadata !DIExpression()), !dbg !5591
  %6 = sub i32 %4, %5, !dbg !5594
  call void @llvm.dbg.value(metadata i32 %6, metadata !5590, metadata !DIExpression()), !dbg !5591
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #25, !dbg !5595
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #25, !dbg !5596
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #25, !dbg !5597
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5598
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !5599
  ret void, !dbg !5600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5601 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5605, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i32 %1, metadata !5606, metadata !DIExpression()), !dbg !5609
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5610
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5607, metadata !DIExpression()), !dbg !5609
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5611
  call void @llvm.dbg.value(metadata i8* %4, metadata !5608, metadata !DIExpression()), !dbg !5609
  ret i8* %4, !dbg !5612
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #4

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5613 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5617, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i32 %1, metadata !5618, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i32 %2, metadata !5619, metadata !DIExpression()), !dbg !5629
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5630
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5630
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5620, metadata !DIExpression()), !dbg !5629
  %6 = sub i32 0, %1, !dbg !5631
  %7 = and i32 %6, %1, !dbg !5632
  call void @llvm.dbg.value(metadata i32 %7, metadata !5622, metadata !DIExpression()), !dbg !5629
  %8 = icmp eq i32 %7, %1, !dbg !5633
  br i1 %8, label %13, label %9, !dbg !5635

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5636
  call void @llvm.dbg.value(metadata i32 %10, metadata !5618, metadata !DIExpression()), !dbg !5629
  %11 = icmp ult i32 %7, 4, !dbg !5638
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5638
  br label %17, !dbg !5638

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5639
  br i1 %14, label %15, label %17, !dbg !5642

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #25, !dbg !5643
  br label %57, !dbg !5645

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5629
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5646
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5618, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i32 %19, metadata !5621, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i32 %18, metadata !5622, metadata !DIExpression()), !dbg !5629
  %21 = icmp eq i32 %2, 0, !dbg !5647
  br i1 %21, label %57, label %22, !dbg !5649

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #25, !dbg !5650
  br i1 %23, label %57, label %24, !dbg !5651

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5652
  %26 = add i32 %25, %20, !dbg !5653
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #25, !dbg !5654, !range !5120
  call void @llvm.dbg.value(metadata i32 %27, metadata !5623, metadata !DIExpression()), !dbg !5629
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #25, !dbg !5655
  call void @llvm.dbg.value(metadata i32 %28, metadata !5624, metadata !DIExpression()), !dbg !5629
  %29 = icmp eq i32 %28, 0, !dbg !5656
  br i1 %29, label %57, label %30, !dbg !5658

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #25, !dbg !5659
  call void @llvm.dbg.value(metadata i8* %31, metadata !5625, metadata !DIExpression()), !dbg !5629
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5660
  %33 = ptrtoint i8* %32 to i32, !dbg !5660
  %34 = add i32 %20, -1, !dbg !5660
  %35 = add i32 %34, %33, !dbg !5660
  %36 = sub i32 0, %20, !dbg !5660
  %37 = and i32 %35, %36, !dbg !5660
  %38 = inttoptr i32 %37 to i8*, !dbg !5661
  %39 = sub i32 0, %18, !dbg !5662
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5662
  call void @llvm.dbg.value(metadata i8* %40, metadata !5625, metadata !DIExpression()), !dbg !5629
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5663
  %42 = ptrtoint i8* %41 to i32, !dbg !5663
  %43 = add i32 %42, 7, !dbg !5663
  %44 = and i32 %43, -8, !dbg !5663
  call void @llvm.dbg.value(metadata i32 %44, metadata !5626, metadata !DIExpression()), !dbg !5629
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #25, !dbg !5664
  call void @llvm.dbg.value(metadata i32 %45, metadata !5627, metadata !DIExpression()), !dbg !5629
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #25, !dbg !5665
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5666
  %48 = sub i32 %44, %47, !dbg !5666
  %49 = ashr exact i32 %48, 3, !dbg !5666
  call void @llvm.dbg.value(metadata i32 %49, metadata !5628, metadata !DIExpression()), !dbg !5629
  %50 = icmp ugt i32 %45, %28, !dbg !5667
  br i1 %50, label %51, label %52, !dbg !5669

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #25, !dbg !5670
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #25, !dbg !5672
  br label %52, !dbg !5673

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #25, !dbg !5674
  %54 = icmp ugt i32 %53, %49, !dbg !5676
  br i1 %54, label %55, label %56, !dbg !5677

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #25, !dbg !5678
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #25, !dbg !5680
  br label %56, !dbg !5681

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #25, !dbg !5682
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5629
  ret i8* %58, !dbg !5683
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5684 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5688, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i8* %1, metadata !5689, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i32 %2, metadata !5690, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i32 %3, metadata !5691, metadata !DIExpression()), !dbg !5707
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5708
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5708
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5692, metadata !DIExpression()), !dbg !5707
  %7 = icmp eq i8* %1, null, !dbg !5709
  br i1 %7, label %8, label %10, !dbg !5711

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !5712
  br label %59, !dbg !5714

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5715
  br i1 %11, label %12, label %13, !dbg !5717

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !5718
  br label %59, !dbg !5720

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #25, !dbg !5721
  br i1 %14, label %59, label %15, !dbg !5723

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !5724, !range !5120
  call void @llvm.dbg.value(metadata i32 %16, metadata !5693, metadata !DIExpression()), !dbg !5707
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !5725
  call void @llvm.dbg.value(metadata i32 %17, metadata !5694, metadata !DIExpression()), !dbg !5707
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !5726
  %19 = ptrtoint i8* %1 to i32, !dbg !5727
  %20 = ptrtoint i8* %18 to i32, !dbg !5727
  %21 = sub i32 %19, %20, !dbg !5727
  call void @llvm.dbg.value(metadata i32 %21, metadata !5695, metadata !DIExpression()), !dbg !5707
  %22 = add i32 %21, %3, !dbg !5728
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !5729
  call void @llvm.dbg.value(metadata i32 %23, metadata !5696, metadata !DIExpression()), !dbg !5707
  %24 = icmp eq i32 %2, 0, !dbg !5730
  br i1 %24, label %29, label %25, !dbg !5731

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5732
  %27 = and i32 %26, %19, !dbg !5733
  %28 = icmp eq i32 %27, 0, !dbg !5733
  br i1 %28, label %29, label %49, !dbg !5734

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !5735
  %31 = icmp eq i32 %23, %30, !dbg !5736
  br i1 %31, label %59, label %32, !dbg !5737

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5738
  br i1 %33, label %34, label %36, !dbg !5739

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5740
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #25, !dbg !5742
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #25, !dbg !5743
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #25, !dbg !5744
  br label %59, !dbg !5745

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !5746
  br i1 %37, label %49, label %38, !dbg !5747

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !5748
  %40 = add i32 %39, %30, !dbg !5749
  %41 = icmp ult i32 %40, %23, !dbg !5750
  br i1 %41, label %49, label %42, !dbg !5751

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5752
  call void @llvm.dbg.value(metadata i32 %43, metadata !5697, metadata !DIExpression()), !dbg !5753
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !5754
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !5755
  %45 = icmp ult i32 %43, %44, !dbg !5757
  br i1 %45, label %46, label %48, !dbg !5758

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5759
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #25, !dbg !5761
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #25, !dbg !5762
  br label %48, !dbg !5763

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #25, !dbg !5764
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #25, !dbg !5765
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !5766
  call void @llvm.dbg.value(metadata i8* %50, metadata !5703, metadata !DIExpression()), !dbg !5707
  %51 = icmp eq i8* %50, null, !dbg !5767
  br i1 %51, label %59, label %52, !dbg !5768

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !5769, !range !5213
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #25, !dbg !5770
  %55 = sub i32 %54, %21, !dbg !5771
  call void @llvm.dbg.value(metadata i32 %55, metadata !5704, metadata !DIExpression()), !dbg !5772
  %56 = icmp ult i32 %55, %3, !dbg !5773
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5773
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #24, !dbg !5774
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !5775
  br label %59, !dbg !5776

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5707
  ret i8* %60, !dbg !5777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5778 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5782, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i32 %1, metadata !5783, metadata !DIExpression()), !dbg !5784
  %3 = shl i32 %1, 3, !dbg !5785
  %4 = add i32 %3, -4, !dbg !5786
  ret i32 %4, !dbg !5787
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5788 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5792, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.value(metadata i8* %1, metadata !5793, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.value(metadata i32 %2, metadata !5794, metadata !DIExpression()), !dbg !5803
  %4 = add i32 %2, -4, !dbg !5804
  call void @llvm.dbg.value(metadata i32 %4, metadata !5794, metadata !DIExpression()), !dbg !5803
  %5 = ptrtoint i8* %1 to i32, !dbg !5805
  %6 = add i32 %5, 7, !dbg !5805
  %7 = and i32 %6, -8, !dbg !5805
  call void @llvm.dbg.value(metadata i32 %7, metadata !5795, metadata !DIExpression()), !dbg !5803
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5806
  %9 = ptrtoint i8* %8 to i32, !dbg !5806
  %10 = and i32 %9, -8, !dbg !5806
  call void @llvm.dbg.value(metadata i32 %10, metadata !5796, metadata !DIExpression()), !dbg !5803
  %11 = sub i32 %10, %7, !dbg !5807
  %12 = lshr exact i32 %11, 3, !dbg !5808
  call void @llvm.dbg.value(metadata i32 %12, metadata !5797, metadata !DIExpression()), !dbg !5803
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5809
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5798, metadata !DIExpression()), !dbg !5803
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5810
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5811
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5812
  store i32 %12, i32* %15, align 8, !dbg !5813
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5814
  store i32 0, i32* %16, align 4, !dbg !5815
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #25, !dbg !5816
  call void @llvm.dbg.value(metadata i32 %17, metadata !5799, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5803
  %18 = shl i32 %17, 2, !dbg !5817
  %19 = add i32 %18, 20, !dbg !5818
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #25, !dbg !5819
  call void @llvm.dbg.value(metadata i32 %20, metadata !5800, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.value(metadata i32 0, metadata !5801, metadata !DIExpression()), !dbg !5820
  %21 = icmp slt i32 %17, 0, !dbg !5821
  br i1 %21, label %22, label %24, !dbg !5823

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #25, !dbg !5824
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #25, !dbg !5825
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #25, !dbg !5826
  %23 = sub i32 %12, %20, !dbg !5827
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #25, !dbg !5828
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #25, !dbg !5829
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #25, !dbg !5830
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #25, !dbg !5831
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #25, !dbg !5832
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #25, !dbg !5833
  ret void, !dbg !5834

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5801, metadata !DIExpression()), !dbg !5820
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5835
  store i32 0, i32* %26, align 4, !dbg !5837
  %27 = add nuw i32 %25, 1, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %27, metadata !5801, metadata !DIExpression()), !dbg !5820
  %28 = icmp eq i32 %25, %17, !dbg !5821
  br i1 %28, label %22, label %24, !dbg !5823, !llvm.loop !5839
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5841 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5854, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5851, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %1, metadata !5852, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %2, metadata !5853, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %4, metadata !5855, metadata !DIExpression()), !dbg !5980
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5981
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5981
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5856, metadata !DIExpression()), !dbg !5982
  call void @llvm.dbg.value(metadata i32 0, metadata !5860, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i1 undef, metadata !5862, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5980
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5983

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5983

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5984
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5854, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %30, metadata !5853, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %29, metadata !5860, metadata !DIExpression()), !dbg !5980
  %31 = load i8, i8* %30, align 1, !dbg !5985
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5983

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5985
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5986
  call void @llvm.dbg.value(metadata i8* %34, metadata !5853, metadata !DIExpression()), !dbg !5980
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !5986
  call void @llvm.dbg.value(metadata i32 %35, metadata !5864, metadata !DIExpression()), !dbg !5987
  %36 = icmp slt i32 %35, 0, !dbg !5988
  %37 = add i32 %29, 1, !dbg !5986
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  br i1 %36, label %365, label %28, !llvm.loop !5990

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5992
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5869, metadata !DIExpression()), !dbg !5993
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5993
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5912, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5915, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* %30, metadata !5918, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 -1, metadata !5919, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 -1, metadata !5920, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* null, metadata !5921, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* %14, metadata !5922, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8 0, metadata !5923, metadata !DIExpression()), !dbg !5994
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !5995
  call void @llvm.dbg.value(metadata i8* %39, metadata !5853, metadata !DIExpression()), !dbg !5980
  %40 = load i24, i24* %15, align 8, !dbg !5996
  %41 = and i24 %40, 256, !dbg !5996
  %42 = icmp eq i24 %41, 0, !dbg !5996
  br i1 %42, label %51, label %43, !dbg !5998

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5999
  call void @llvm.dbg.value(metadata i8* %44, metadata !5854, metadata !DIExpression()), !dbg !5980
  %45 = bitcast i8* %27 to i32*, !dbg !5999
  %46 = load i32, i32* %45, align 4, !dbg !5999
  call void @llvm.dbg.value(metadata i32 %46, metadata !5919, metadata !DIExpression()), !dbg !5994
  %47 = icmp slt i32 %46, 0, !dbg !6001
  br i1 %47, label %48, label %56, !dbg !6003

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6004
  store i24 %49, i24* %15, align 8, !dbg !6004
  %50 = sub nsw i32 0, %46, !dbg !6006
  call void @llvm.dbg.value(metadata i32 %50, metadata !5919, metadata !DIExpression()), !dbg !5994
  br label %56, !dbg !6007

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6008
  %53 = icmp eq i24 %52, 0, !dbg !6008
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6010
  br label %56, !dbg !6010

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6011
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5994
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5854, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %58, metadata !5919, metadata !DIExpression()), !dbg !5994
  %60 = and i24 %57, 1024, !dbg !6011
  %61 = icmp eq i24 %60, 0, !dbg !6011
  br i1 %61, label %69, label %62, !dbg !6012

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6013
  call void @llvm.dbg.value(metadata i8* %63, metadata !5854, metadata !DIExpression()), !dbg !5980
  %64 = bitcast i8* %59 to i32*, !dbg !6013
  %65 = load i32, i32* %64, align 4, !dbg !6013
  call void @llvm.dbg.value(metadata i32 %65, metadata !5924, metadata !DIExpression()), !dbg !6014
  %66 = icmp slt i32 %65, 0, !dbg !6015
  br i1 %66, label %67, label %74, !dbg !6017

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6018
  store i24 %68, i24* %15, align 8, !dbg !6018
  br label %74, !dbg !6020

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6021
  %71 = icmp eq i24 %70, 0, !dbg !6021
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6023
  br label %74, !dbg !6023

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6024
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5994
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5994
  call void @llvm.dbg.value(metadata i8* %77, metadata !5854, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %76, metadata !5920, metadata !DIExpression()), !dbg !5994
  store i32 0, i32* %16, align 4, !dbg !6025
  store i32 0, i32* %17, align 8, !dbg !6026
  %78 = lshr i24 %75, 16, !dbg !6024
  call void @llvm.dbg.value(metadata i24 %78, metadata !5927, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5994
  %79 = lshr i24 %75, 11, !dbg !6027
  %80 = and i24 %79, 15, !dbg !6027
  %81 = zext i24 %80 to i32, !dbg !6027
  call void @llvm.dbg.value(metadata i32 %81, metadata !5928, metadata !DIExpression()), !dbg !5994
  %82 = trunc i24 %78 to i3, !dbg !6028
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6028

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6029

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6032
  call void @llvm.dbg.value(metadata i8* %85, metadata !5854, metadata !DIExpression()), !dbg !5980
  %86 = bitcast i8* %77 to i32*, !dbg !6032
  %87 = load i32, i32* %86, align 4, !dbg !6032
  %88 = sext i32 %87 to i64, !dbg !6032
  store i64 %88, i64* %20, align 8, !dbg !6034
  br label %115, !dbg !6035

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6036
  call void @llvm.dbg.value(metadata i8* %90, metadata !5854, metadata !DIExpression()), !dbg !5980
  %91 = bitcast i8* %77 to i32*, !dbg !6036
  %92 = load i32, i32* %91, align 4, !dbg !6036
  %93 = sext i32 %92 to i64, !dbg !6036
  store i64 %93, i64* %20, align 8, !dbg !6039
  br label %115, !dbg !6040

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6041
  %96 = add i32 %95, 7, !dbg !6041
  %97 = and i32 %96, -8, !dbg !6041
  %98 = inttoptr i32 %97 to i8*, !dbg !6041
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6041
  call void @llvm.dbg.value(metadata i8* %99, metadata !5854, metadata !DIExpression()), !dbg !5980
  %100 = inttoptr i32 %97 to i64*, !dbg !6041
  %101 = load i64, i64* %100, align 8, !dbg !6041
  store i64 %101, i64* %20, align 8, !dbg !6042
  br label %115, !dbg !6043

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6044
  %104 = add i32 %103, 7, !dbg !6044
  %105 = and i32 %104, -8, !dbg !6044
  %106 = inttoptr i32 %105 to i8*, !dbg !6044
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6044
  call void @llvm.dbg.value(metadata i8* %107, metadata !5854, metadata !DIExpression()), !dbg !5980
  %108 = inttoptr i32 %105 to i64*, !dbg !6044
  %109 = load i64, i64* %108, align 8, !dbg !6044
  store i64 %109, i64* %20, align 8, !dbg !6045
  br label %115, !dbg !6046

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6047
  call void @llvm.dbg.value(metadata i8* %111, metadata !5854, metadata !DIExpression()), !dbg !5980
  %112 = bitcast i8* %77 to i32*, !dbg !6047
  %113 = load i32, i32* %112, align 4, !dbg !6047
  %114 = sext i32 %113 to i64, !dbg !6048
  store i64 %114, i64* %20, align 8, !dbg !6049
  br label %115, !dbg !6050

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6051
  call void @llvm.dbg.value(metadata i8* %117, metadata !5854, metadata !DIExpression()), !dbg !5980
  %118 = trunc i24 %79 to i4, !dbg !6052
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6052

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6053
  %121 = ashr exact i64 %120, 56, !dbg !6053
  store i64 %121, i64* %20, align 8, !dbg !6056
  br label %177, !dbg !6057

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6058
  %124 = ashr exact i64 %123, 48, !dbg !6058
  store i64 %124, i64* %20, align 8, !dbg !6061
  br label %177, !dbg !6062

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6063

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6066
  call void @llvm.dbg.value(metadata i8* %127, metadata !5854, metadata !DIExpression()), !dbg !5980
  %128 = bitcast i8* %77 to i32*, !dbg !6066
  %129 = load i32, i32* %128, align 4, !dbg !6066
  %130 = zext i32 %129 to i64, !dbg !6066
  store i64 %130, i64* %20, align 8, !dbg !6068
  br label %157, !dbg !6069

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6070
  call void @llvm.dbg.value(metadata i8* %132, metadata !5854, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %132, metadata !5854, metadata !DIExpression()), !dbg !5980
  %133 = bitcast i8* %77 to i32*, !dbg !6070
  %134 = load i32, i32* %133, align 4, !dbg !6070
  %135 = zext i32 %134 to i64, !dbg !6070
  store i64 %135, i64* %20, align 8, !dbg !6070
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6072
  %138 = add i32 %137, 7, !dbg !6072
  %139 = and i32 %138, -8, !dbg !6072
  %140 = inttoptr i32 %139 to i8*, !dbg !6072
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6072
  call void @llvm.dbg.value(metadata i8* %141, metadata !5854, metadata !DIExpression()), !dbg !5980
  %142 = inttoptr i32 %139 to i64*, !dbg !6072
  %143 = load i64, i64* %142, align 8, !dbg !6072
  store i64 %143, i64* %20, align 8, !dbg !6073
  br label %157, !dbg !6074

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6075
  %146 = add i32 %145, 7, !dbg !6075
  %147 = and i32 %146, -8, !dbg !6075
  %148 = inttoptr i32 %147 to i8*, !dbg !6075
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6075
  call void @llvm.dbg.value(metadata i8* %149, metadata !5854, metadata !DIExpression()), !dbg !5980
  %150 = inttoptr i32 %147 to i64*, !dbg !6075
  %151 = load i64, i64* %150, align 8, !dbg !6075
  store i64 %151, i64* %20, align 8, !dbg !6076
  br label %157, !dbg !6077

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6078
  call void @llvm.dbg.value(metadata i8* %153, metadata !5854, metadata !DIExpression()), !dbg !5980
  %154 = bitcast i8* %77 to i32*, !dbg !6078
  %155 = load i32, i32* %154, align 4, !dbg !6078
  %156 = zext i32 %155 to i64, !dbg !6079
  store i64 %156, i64* %20, align 8, !dbg !6080
  br label %157, !dbg !6081

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6082
  call void @llvm.dbg.value(metadata i8* %159, metadata !5854, metadata !DIExpression()), !dbg !5980
  %160 = trunc i24 %79 to i4, !dbg !6083
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6083

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6084
  store i64 %162, i64* %20, align 8, !dbg !6087
  br label %177, !dbg !6088

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6089
  store i64 %164, i64* %20, align 8, !dbg !6092
  br label %177, !dbg !6093

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6094
  %167 = add i32 %166, 7, !dbg !6094
  %168 = and i32 %167, -8, !dbg !6094
  %169 = inttoptr i32 %168 to i8*, !dbg !6094
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6094
  call void @llvm.dbg.value(metadata i8* %170, metadata !5854, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %170, metadata !5854, metadata !DIExpression()), !dbg !5980
  %171 = inttoptr i32 %168 to double*, !dbg !6094
  %172 = load double, double* %171, align 8, !dbg !6094
  store double %172, double* %19, align 8, !dbg !6094
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6098
  call void @llvm.dbg.value(metadata i8* %174, metadata !5854, metadata !DIExpression()), !dbg !5980
  %175 = bitcast i8* %77 to i8**, !dbg !6098
  %176 = load i8*, i8** %175, align 4, !dbg !6098
  store i8* %176, i8** %18, align 8, !dbg !6101
  br label %177, !dbg !6102

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5994
  call void @llvm.dbg.value(metadata i8* %178, metadata !5854, metadata !DIExpression()), !dbg !5980
  %179 = and i24 %75, 3, !dbg !6103
  %180 = icmp eq i24 %179, 0, !dbg !6103
  br i1 %180, label %185, label %181, !dbg !6103

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !6104
  call void @llvm.dbg.value(metadata i32 %182, metadata !5929, metadata !DIExpression()), !dbg !6105
  %183 = icmp slt i32 %182, 0, !dbg !6106
  %184 = add i32 %182, %29, !dbg !6104
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6108
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6109

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !6110
  call void @llvm.dbg.value(metadata i32 %188, metadata !5933, metadata !DIExpression()), !dbg !6111
  %189 = icmp slt i32 %188, 0, !dbg !6112
  %190 = add i32 %29, 1, !dbg !6110
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6114
  call void @llvm.dbg.value(metadata i8* %192, metadata !5921, metadata !DIExpression()), !dbg !5994
  %193 = icmp sgt i32 %76, -1, !dbg !6115
  br i1 %193, label %194, label %196, !dbg !6117

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !6118
  call void @llvm.dbg.value(metadata i32 %195, metadata !5936, metadata !DIExpression()), !dbg !6120
  br label %241, !dbg !6121

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !6122
  call void @llvm.dbg.value(metadata i32 %197, metadata !5936, metadata !DIExpression()), !dbg !6120
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5921, metadata !DIExpression()), !dbg !5994
  %199 = load i64, i64* %20, align 8, !dbg !6124
  %200 = trunc i64 %199 to i8, !dbg !6125
  store i8 %200, i8* %10, align 1, !dbg !6126
  call void @llvm.dbg.value(metadata i8* %23, metadata !5922, metadata !DIExpression()), !dbg !5994
  br label %245, !dbg !6127

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6128
  %203 = icmp eq i24 %202, 0, !dbg !6128
  %204 = trunc i24 %75 to i8, !dbg !6130
  %205 = shl i8 %204, 1, !dbg !6130
  %206 = and i8 %205, 32, !dbg !6130
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6130
  call void @llvm.dbg.value(metadata i8 %207, metadata !5923, metadata !DIExpression()), !dbg !5994
  %208 = load i64, i64* %20, align 8, !dbg !6131
  call void @llvm.dbg.value(metadata i64 %208, metadata !5861, metadata !DIExpression()), !dbg !5980
  %209 = icmp slt i64 %208, 0, !dbg !6132
  br i1 %209, label %210, label %212, !dbg !6134

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5923, metadata !DIExpression()), !dbg !5994
  %211 = sub nsw i64 0, %208, !dbg !6135
  store i64 %211, i64* %20, align 8, !dbg !6137
  br label %212, !dbg !6138

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5994
  call void @llvm.dbg.value(metadata i8 %213, metadata !5923, metadata !DIExpression()), !dbg !5994
  %214 = load i64, i64* %20, align 8, !dbg !6139
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !6140
  call void @llvm.dbg.value(metadata i8* %215, metadata !5921, metadata !DIExpression()), !dbg !5994
  br label %216, !dbg !6141

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6142
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6143
  call void @llvm.dbg.value(metadata i8* %218, metadata !5921, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8 %217, metadata !5923, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.label(metadata !5979), !dbg !6144
  %219 = icmp sgt i32 %76, -1, !dbg !6145
  br i1 %219, label %222, label %220, !dbg !6146

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6147
  br label %245, !dbg !6146

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6149
  %224 = sub i32 %22, %223, !dbg !6149
  call void @llvm.dbg.value(metadata i32 %224, metadata !5938, metadata !DIExpression()), !dbg !6150
  %225 = load i24, i24* %15, align 8, !dbg !6151
  %226 = and i24 %225, -65, !dbg !6151
  store i24 %226, i24* %15, align 8, !dbg !6151
  %227 = icmp ugt i32 %76, %224, !dbg !6152
  br i1 %227, label %228, label %245, !dbg !6154

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6155
  store i32 %229, i32* %16, align 4, !dbg !6157
  br label %245, !dbg !6158

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6159
  %232 = icmp eq i8* %231, null, !dbg !6161
  br i1 %232, label %245, label %233, !dbg !6162

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6163
  %235 = zext i32 %234 to i64, !dbg !6163
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !6165
  call void @llvm.dbg.value(metadata i8* %236, metadata !5921, metadata !DIExpression()), !dbg !5994
  %237 = load i24, i24* %15, align 8, !dbg !6166
  %238 = or i24 %237, 1048576, !dbg !6166
  store i24 %238, i24* %15, align 8, !dbg !6166
  store i8 120, i8* %21, align 1, !dbg !6167
  br label %216, !dbg !6168

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6169
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !6172
  br label %363, !dbg !6173

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6174
  call void @llvm.dbg.value(metadata i32 %242, metadata !5936, metadata !DIExpression()), !dbg !6120
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6175
  call void @llvm.dbg.value(metadata i32 -1, metadata !5920, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %29, metadata !5860, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %192, metadata !5921, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* %243, metadata !5922, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8 0, metadata !5923, metadata !DIExpression()), !dbg !5994
  %244 = icmp eq i8* %192, null, !dbg !6176
  br i1 %244, label %363, label %245, !dbg !6178, !llvm.loop !5990

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6147
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5994
  call void @llvm.dbg.value(metadata i32 0, metadata !5942, metadata !DIExpression()), !dbg !5994
  %250 = zext i8 %249 to i32, !dbg !6179
  %251 = icmp eq i8 %249, 0, !dbg !6181
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5994
  call void @llvm.dbg.value(metadata i32 undef, metadata !5941, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5994
  call void @llvm.dbg.value(metadata i32 undef, metadata !5941, metadata !DIExpression()), !dbg !5994
  %252 = icmp sgt i32 %58, 0, !dbg !6182
  br i1 %252, label %253, label %302, !dbg !6183

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6147
  %255 = icmp eq i24 %254, 0, !dbg !6147
  %256 = ptrtoint i8* %248 to i32, !dbg !6184
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5994
  %257 = ptrtoint i8* %247 to i32, !dbg !6184
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5994
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5994
  %258 = xor i1 %251, true, !dbg !6185
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5994
  %259 = sext i1 %258 to i32, !dbg !6185
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5994
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5994
  %260 = lshr i24 %246, 19, !dbg !6186
  %261 = and i24 %260, 1, !dbg !6186
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6186
  %263 = zext i24 %262 to i32, !dbg !6186
  %264 = add i32 %257, %259, !dbg !6186
  %265 = add i32 %256, %263, !dbg !6186
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5994
  %266 = and i24 %246, 4194304, !dbg !6187
  %267 = icmp eq i24 %266, 0, !dbg !6187
  %268 = load i32, i32* %16, align 4, !dbg !6189
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5994
  call void @llvm.dbg.value(metadata i32 undef, metadata !5941, metadata !DIExpression()), !dbg !5994
  %269 = load i32, i32* %17, align 8, !dbg !6190
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6190
  call void @llvm.dbg.value(metadata i32 undef, metadata !5941, metadata !DIExpression()), !dbg !5994
  %271 = add i32 %264, %58, !dbg !6190
  %272 = add i32 %265, %268, !dbg !6190
  %273 = add i32 %272, %270, !dbg !6191
  %274 = sub i32 %271, %273, !dbg !6191
  call void @llvm.dbg.value(metadata i32 %274, metadata !5919, metadata !DIExpression()), !dbg !5994
  %275 = and i24 %246, 4, !dbg !6192
  %276 = icmp eq i24 %275, 0, !dbg !6192
  br i1 %276, label %277, label %302, !dbg !6193

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5943, metadata !DIExpression()), !dbg !6194
  %278 = and i24 %246, 64, !dbg !6195
  %279 = icmp eq i24 %278, 0, !dbg !6195
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6196
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6196
  %282 = select i1 %279, i32 32, i32 48, !dbg !6196
  br i1 %280, label %287, label %283, !dbg !6196

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !6197
  call void @llvm.dbg.value(metadata i32 %284, metadata !5948, metadata !DIExpression()), !dbg !6198
  %285 = icmp slt i32 %284, 0, !dbg !6199
  %286 = add i32 %29, 1, !dbg !6197
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5994
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5984
  call void @llvm.dbg.value(metadata i32 %290, metadata !5860, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8 undef, metadata !5943, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i8 %288, metadata !5923, metadata !DIExpression()), !dbg !5994
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6201
  %292 = add i32 %291, -1, !dbg !6201
  br label %293, !dbg !6201

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6202
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5984
  call void @llvm.dbg.value(metadata i32 %295, metadata !5860, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %294, metadata !5919, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %294, metadata !5919, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5994
  %296 = icmp sgt i32 %294, 0, !dbg !6203
  br i1 %296, label %297, label %302, !dbg !6201

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6204
  call void @llvm.dbg.value(metadata i32 %298, metadata !5919, metadata !DIExpression()), !dbg !5994
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !6205
  call void @llvm.dbg.value(metadata i32 %299, metadata !5954, metadata !DIExpression()), !dbg !6206
  %300 = icmp slt i32 %299, 0, !dbg !6207
  %301 = add i32 %295, 1, !dbg !6205
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  br i1 %300, label %361, label %293, !llvm.loop !6209

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5994
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5994
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5984
  call void @llvm.dbg.value(metadata i32 %305, metadata !5860, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %304, metadata !5919, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8 %303, metadata !5923, metadata !DIExpression()), !dbg !5994
  %306 = icmp eq i8 %303, 0, !dbg !6211
  br i1 %306, label %312, label %307, !dbg !6212

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6213
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !6214
  call void @llvm.dbg.value(metadata i32 %309, metadata !5957, metadata !DIExpression()), !dbg !6215
  %310 = icmp slt i32 %309, 0, !dbg !6216
  %311 = add i32 %305, 1, !dbg !6214
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5984
  call void @llvm.dbg.value(metadata i32 %313, metadata !5860, metadata !DIExpression()), !dbg !5980
  %314 = lshr i24 %246, 20, !dbg !6218
  %315 = lshr i24 %246, 19, !dbg !6219
  %316 = or i24 %314, %315, !dbg !6220
  %317 = and i24 %316, 1, !dbg !6220
  %318 = icmp eq i24 %317, 0, !dbg !6220
  br i1 %318, label %323, label %319, !dbg !6221

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !6222
  call void @llvm.dbg.value(metadata i32 %320, metadata !5961, metadata !DIExpression()), !dbg !6223
  %321 = icmp slt i32 %320, 0, !dbg !6224
  %322 = add i32 %313, 1, !dbg !6222
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5984
  call void @llvm.dbg.value(metadata i32 %324, metadata !5860, metadata !DIExpression()), !dbg !5980
  %325 = and i24 %246, 1048576, !dbg !6226
  %326 = icmp eq i24 %325, 0, !dbg !6226
  br i1 %326, label %333, label %327, !dbg !6227

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6228
  %329 = zext i8 %328 to i32, !dbg !6228
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !6228
  call void @llvm.dbg.value(metadata i32 %330, metadata !5967, metadata !DIExpression()), !dbg !6229
  %331 = icmp slt i32 %330, 0, !dbg !6230
  %332 = add i32 %324, 1, !dbg !6228
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5984
  call void @llvm.dbg.value(metadata i32 %334, metadata !5860, metadata !DIExpression()), !dbg !5980
  %335 = load i32, i32* %16, align 4, !dbg !6232
  call void @llvm.dbg.value(metadata i32 %335, metadata !5942, metadata !DIExpression()), !dbg !5994
  br label %336, !dbg !6233

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6234
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5984
  call void @llvm.dbg.value(metadata i32 %338, metadata !5860, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %337, metadata !5942, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5994
  %339 = icmp sgt i32 %337, 0, !dbg !6235
  br i1 %339, label %340, label %345, !dbg !6233

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6236
  call void @llvm.dbg.value(metadata i32 %341, metadata !5942, metadata !DIExpression()), !dbg !5994
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !6237
  call void @llvm.dbg.value(metadata i32 %342, metadata !5971, metadata !DIExpression()), !dbg !6238
  %343 = icmp slt i32 %342, 0, !dbg !6239
  %344 = add i32 %338, 1, !dbg !6237
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  br i1 %343, label %361, label %336, !llvm.loop !6241

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !6243
  call void @llvm.dbg.value(metadata i32 %346, metadata !5974, metadata !DIExpression()), !dbg !6244
  %347 = icmp slt i32 %346, 0, !dbg !6245
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6243
  call void @llvm.dbg.value(metadata i32 %349, metadata !5860, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %304, metadata !5919, metadata !DIExpression()), !dbg !5994
  %350 = icmp sgt i32 %304, 0, !dbg !6247
  br i1 %350, label %351, label %363, !dbg !6248

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6248
  %353 = add i32 %352, %338, !dbg !6248
  br label %354, !dbg !6248

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %355, metadata !5919, metadata !DIExpression()), !dbg !5994
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !6249
  call void @llvm.dbg.value(metadata i32 %356, metadata !5976, metadata !DIExpression()), !dbg !6250
  %357 = icmp slt i32 %356, 0, !dbg !6251
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6253
  call void @llvm.dbg.value(metadata i32 undef, metadata !5860, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5980
  call void @llvm.dbg.value(metadata i32 %359, metadata !5919, metadata !DIExpression()), !dbg !5994
  %360 = icmp sgt i32 %355, 1, !dbg !6247
  br i1 %360, label %354, label %363, !dbg !6248, !llvm.loop !6254

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5860, metadata !DIExpression()), !dbg !5980
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5991
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5984
  call void @llvm.dbg.value(metadata i32 %364, metadata !5860, metadata !DIExpression()), !dbg !5980
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5991
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5980
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !6256
  ret i32 %366, !dbg !6256
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6257 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6261, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.value(metadata i8* %1, metadata !6262, metadata !DIExpression()), !dbg !6263
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6264
  store i24 0, i24* %3, align 4, !dbg !6264
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6264
  store i8 0, i8* %4, align 1, !dbg !6264
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6264
  store i32 0, i32* %5, align 4, !dbg !6264
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6264
  store i32 0, i32* %6, align 4, !dbg !6264
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6265
  call void @llvm.dbg.value(metadata i8* %7, metadata !6262, metadata !DIExpression()), !dbg !6263
  %8 = load i8, i8* %7, align 1, !dbg !6266
  %9 = icmp eq i8 %8, 37, !dbg !6268
  br i1 %9, label %10, label %12, !dbg !6269

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6270
  call void @llvm.dbg.value(metadata i8* %11, metadata !6262, metadata !DIExpression()), !dbg !6263
  store i8 37, i8* %4, align 1, !dbg !6272
  br label %18, !dbg !6273

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !6274
  call void @llvm.dbg.value(metadata i8* %13, metadata !6262, metadata !DIExpression()), !dbg !6263
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !6275
  call void @llvm.dbg.value(metadata i8* %14, metadata !6262, metadata !DIExpression()), !dbg !6263
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !6276
  call void @llvm.dbg.value(metadata i8* %15, metadata !6262, metadata !DIExpression()), !dbg !6263
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !6277
  call void @llvm.dbg.value(metadata i8* %16, metadata !6262, metadata !DIExpression()), !dbg !6263
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !6278
  call void @llvm.dbg.value(metadata i8* %17, metadata !6262, metadata !DIExpression()), !dbg !6263
  br label %18, !dbg !6279

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6263
  ret i8* %19, !dbg !6280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6281 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6285, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8* %1, metadata !6286, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8* %2, metadata !6287, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8* %3, metadata !6288, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i32 0, metadata !6289, metadata !DIExpression()), !dbg !6292
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6293

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6294
  call void @llvm.dbg.value(metadata i32 %9, metadata !6289, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8* %8, metadata !6287, metadata !DIExpression()), !dbg !6292
  %10 = icmp ult i8* %8, %3, !dbg !6295
  br i1 %10, label %11, label %13, !dbg !6296

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6297
  br label %17, !dbg !6296

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6298

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6299
  %16 = icmp eq i8 %15, 0, !dbg !6298
  br i1 %16, label %24, label %17, !dbg !6293

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6297
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6300
  call void @llvm.dbg.value(metadata i8* %19, metadata !6287, metadata !DIExpression()), !dbg !6292
  %20 = zext i8 %18 to i32, !dbg !6301
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !6302
  call void @llvm.dbg.value(metadata i32 %21, metadata !6290, metadata !DIExpression()), !dbg !6303
  %22 = icmp slt i32 %21, 0, !dbg !6304
  %23 = add i32 %9, 1, !dbg !6306
  call void @llvm.dbg.value(metadata i32 undef, metadata !6289, metadata !DIExpression()), !dbg !6292
  br i1 %22, label %24, label %7, !llvm.loop !6307

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6292
  ret i32 %25, !dbg !6309
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6310 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6314, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6315, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata i8* %2, metadata !6316, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata i8* %3, metadata !6317, metadata !DIExpression()), !dbg !6324
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6325
  %6 = load i8, i8* %5, align 1, !dbg !6325
  %7 = zext i8 %6 to i32, !dbg !6326
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !6327
  %9 = icmp eq i32 %8, 0, !dbg !6327
  call void @llvm.dbg.value(metadata i1 %9, metadata !6318, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6324
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !6328
  call void @llvm.dbg.value(metadata i32 %10, metadata !6319, metadata !DIExpression()), !dbg !6324
  %11 = ptrtoint i8* %3 to i32, !dbg !6329
  %12 = ptrtoint i8* %2 to i32, !dbg !6329
  %13 = sub i32 %11, %12, !dbg !6329
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6330
  call void @llvm.dbg.value(metadata i8* %14, metadata !6321, metadata !DIExpression()), !dbg !6324
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6331

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6324
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6314, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata i8* %18, metadata !6321, metadata !DIExpression()), !dbg !6324
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6332
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6333
  call void @llvm.dbg.value(metadata i32 %25, metadata !6322, metadata !DIExpression()), !dbg !6334
  %26 = icmp ult i32 %25, 10, !dbg !6335
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6336
  %28 = add i32 %27, %25, !dbg !6334
  %29 = trunc i32 %28 to i8, !dbg !6336
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6337
  call void @llvm.dbg.value(metadata i8* %30, metadata !6321, metadata !DIExpression()), !dbg !6324
  store i8 %29, i8* %30, align 1, !dbg !6338
  call void @llvm.dbg.value(metadata i64 %22, metadata !6314, metadata !DIExpression()), !dbg !6324
  %31 = icmp uge i64 %19, %15, !dbg !6339
  %32 = icmp ugt i8* %30, %2, !dbg !6340
  %33 = and i1 %31, %32, !dbg !6340
  br i1 %33, label %17, label %34, !dbg !6341, !llvm.loop !6342

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6344
  %36 = load i24, i24* %35, align 4, !dbg !6344
  %37 = and i24 %36, 32, !dbg !6344
  %38 = icmp eq i24 %37, 0, !dbg !6344
  br i1 %38, label %44, label %39, !dbg !6346

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6347

40:                                               ; preds = %39
  br label %41, !dbg !6349

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6353
  store i24 %43, i24* %35, align 4, !dbg !6353
  br label %44, !dbg !6354

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6355 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6361, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata i8* %1, metadata !6362, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata i32 %2, metadata !6363, metadata !DIExpression()), !dbg !6364
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6365
  %5 = load i24, i24* %4, align 4, !dbg !6365
  %6 = lshr i24 %5, 11, !dbg !6365
  %7 = and i24 %6, 15, !dbg !6365
  %8 = zext i24 %7 to i32, !dbg !6365
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6366

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6367
  store i32 %2, i32* %10, align 4, !dbg !6369
  br label %28, !dbg !6370

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6371
  store i8 %12, i8* %1, align 1, !dbg !6372
  br label %28, !dbg !6373

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6374
  %15 = bitcast i8* %1 to i16*, !dbg !6375
  store i16 %14, i16* %15, align 2, !dbg !6376
  br label %28, !dbg !6377

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6378
  store i32 %2, i32* %17, align 4, !dbg !6379
  br label %28, !dbg !6380

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6381
  %20 = bitcast i8* %1 to i64*, !dbg !6382
  store i64 %19, i64* %20, align 8, !dbg !6383
  br label %28, !dbg !6384

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6385
  %23 = bitcast i8* %1 to i64*, !dbg !6386
  store i64 %22, i64* %23, align 8, !dbg !6387
  br label %28, !dbg !6388

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6389
  store i32 %2, i32* %25, align 4, !dbg !6390
  br label %28, !dbg !6391

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6392
  store i32 %2, i32* %27, align 4, !dbg !6393
  br label %28, !dbg !6394

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6395
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #6 !dbg !6396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6399, metadata !DIExpression()), !dbg !6400
  %2 = add i32 %0, -65, !dbg !6401
  %3 = icmp ult i32 %2, 26, !dbg !6402
  %4 = zext i1 %3 to i32, !dbg !6402
  ret i32 %4, !dbg !6403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #6 !dbg !6404 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6408, metadata !DIExpression()), !dbg !6409
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6410

2:                                                ; preds = %1
  br label %4, !dbg !6411

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6413

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6414
  ret i32 %5, !dbg !6415
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6416 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6418, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i8* %1, metadata !6419, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i8 1, metadata !6420, metadata !DIExpression()), !dbg !6421
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6422

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6420, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i8* %5, metadata !6419, metadata !DIExpression()), !dbg !6421
  %6 = load i8, i8* %5, align 1, !dbg !6423
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6425

7:                                                ; preds = %4
  br label %11, !dbg !6426

8:                                                ; preds = %4
  br label %11, !dbg !6428

9:                                                ; preds = %4
  br label %11, !dbg !6429

10:                                               ; preds = %4
  br label %11, !dbg !6430

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6431
  %14 = or i24 %13, %12, !dbg !6431
  store i24 %14, i24* %3, align 4, !dbg !6431
  call void @llvm.dbg.value(metadata i8 poison, metadata !6420, metadata !DIExpression()), !dbg !6421
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6419, metadata !DIExpression()), !dbg !6421
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6420, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i8* %15, metadata !6419, metadata !DIExpression()), !dbg !6421
  %17 = load i24, i24* %3, align 4, !dbg !6432
  %18 = and i24 %17, 68, !dbg !6434
  %19 = icmp eq i24 %18, 68, !dbg !6434
  br i1 %19, label %20, label %22, !dbg !6434

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6435
  store i24 %21, i24* %3, align 4, !dbg !6435
  br label %22, !dbg !6437

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6438
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6439 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6441, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8* %1, metadata !6442, metadata !DIExpression()), !dbg !6445
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6446
  %5 = load i24, i24* %4, align 4, !dbg !6447
  %6 = or i24 %5, 128, !dbg !6447
  store i24 %6, i24* %4, align 4, !dbg !6447
  call void @llvm.dbg.value(metadata i8* %1, metadata !6442, metadata !DIExpression()), !dbg !6445
  %7 = load i8, i8* %1, align 1, !dbg !6448
  %8 = icmp eq i8 %7, 42, !dbg !6450
  br i1 %8, label %9, label %12, !dbg !6451

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6452
  store i24 %10, i24* %4, align 4, !dbg !6452
  call void @llvm.dbg.value(metadata i8* %1, metadata !6442, metadata !DIExpression()), !dbg !6445
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6454
  call void @llvm.dbg.value(metadata i8* %11, metadata !6442, metadata !DIExpression()), !dbg !6445
  store i8* %11, i8** %3, align 4, !dbg !6454
  br label %29, !dbg !6455

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6443, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8** %3, metadata !6442, metadata !DIExpression(DW_OP_deref)), !dbg !6445
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6456
  call void @llvm.dbg.value(metadata i32 %13, metadata !6444, metadata !DIExpression()), !dbg !6445
  %14 = load i8*, i8** %3, align 4, !dbg !6457
  call void @llvm.dbg.value(metadata i8* %14, metadata !6442, metadata !DIExpression()), !dbg !6445
  %15 = icmp eq i8* %14, %1, !dbg !6459
  br i1 %15, label %29, label %16, !dbg !6460

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6461
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6463
  store i32 %13, i32* %18, align 4, !dbg !6464
  %19 = lshr i32 %13, 31, !dbg !6465
  %20 = lshr i24 %17, 1, !dbg !6466
  %21 = and i24 %20, 1, !dbg !6466
  %22 = zext i24 %21 to i32, !dbg !6466
  %23 = or i32 %19, %22, !dbg !6466
  %24 = trunc i32 %23 to i24, !dbg !6466
  %25 = shl nuw nsw i24 %24, 1, !dbg !6466
  %26 = and i24 %17, -131, !dbg !6466
  %27 = or i24 %26, 128, !dbg !6466
  %28 = or i24 %25, %27, !dbg !6466
  store i24 %28, i24* %4, align 4, !dbg !6466
  br label %29, !dbg !6467

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6445
  ret i8* %30, !dbg !6468
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6469 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6471, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata i8* %1, metadata !6472, metadata !DIExpression()), !dbg !6474
  %4 = load i8, i8* %1, align 1, !dbg !6475
  %5 = icmp eq i8 %4, 46, !dbg !6476
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6477
  %7 = load i24, i24* %6, align 4, !dbg !6478
  %8 = select i1 %5, i24 512, i24 0, !dbg !6478
  %9 = and i24 %7, -513, !dbg !6478
  %10 = or i24 %9, %8, !dbg !6478
  store i24 %10, i24* %6, align 4, !dbg !6478
  br i1 %5, label %11, label %32, !dbg !6479

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6472, metadata !DIExpression()), !dbg !6474
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6480
  call void @llvm.dbg.value(metadata i8* %12, metadata !6472, metadata !DIExpression()), !dbg !6474
  store i8* %12, i8** %3, align 4, !dbg !6480
  %13 = load i8, i8* %12, align 1, !dbg !6481
  %14 = icmp eq i8 %13, 42, !dbg !6483
  br i1 %14, label %15, label %18, !dbg !6484

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6485
  store i24 %16, i24* %6, align 4, !dbg !6485
  call void @llvm.dbg.value(metadata i8* %12, metadata !6472, metadata !DIExpression()), !dbg !6474
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6487
  call void @llvm.dbg.value(metadata i8* %17, metadata !6472, metadata !DIExpression()), !dbg !6474
  store i8* %17, i8** %3, align 4, !dbg !6487
  br label %32, !dbg !6488

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6472, metadata !DIExpression(DW_OP_deref)), !dbg !6474
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6489
  call void @llvm.dbg.value(metadata i32 %19, metadata !6473, metadata !DIExpression()), !dbg !6474
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6490
  store i32 %19, i32* %20, align 4, !dbg !6491
  %21 = lshr i32 %19, 31, !dbg !6492
  %22 = load i24, i24* %6, align 4, !dbg !6493
  %23 = lshr i24 %22, 1, !dbg !6493
  %24 = and i24 %23, 1, !dbg !6493
  %25 = zext i24 %24 to i32, !dbg !6493
  %26 = or i32 %21, %25, !dbg !6493
  %27 = trunc i32 %26 to i24, !dbg !6493
  %28 = shl nuw nsw i24 %27, 1, !dbg !6493
  %29 = and i24 %22, -3, !dbg !6493
  %30 = or i24 %28, %29, !dbg !6493
  store i24 %30, i24* %6, align 4, !dbg !6493
  %31 = load i8*, i8** %3, align 4, !dbg !6494
  call void @llvm.dbg.value(metadata i8* %31, metadata !6472, metadata !DIExpression()), !dbg !6474
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6474
  ret i8* %33, !dbg !6495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !6496 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6498, metadata !DIExpression()), !dbg !6500
  call void @llvm.dbg.value(metadata i8* %1, metadata !6499, metadata !DIExpression()), !dbg !6500
  %3 = load i8, i8* %1, align 1, !dbg !6501
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6502

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6503
  call void @llvm.dbg.value(metadata i8* %5, metadata !6499, metadata !DIExpression()), !dbg !6500
  %6 = load i8, i8* %5, align 1, !dbg !6506
  %7 = icmp eq i8 %6, 104, !dbg !6507
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6508
  %9 = load i24, i24* %8, align 4, !dbg !6508
  %10 = and i24 %9, -30721, !dbg !6508
  br i1 %7, label %11, label %14, !dbg !6509

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6510
  store i24 %12, i24* %8, align 4, !dbg !6510
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6512
  call void @llvm.dbg.value(metadata i8* %13, metadata !6499, metadata !DIExpression()), !dbg !6500
  br label %56, !dbg !6513

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6514
  store i24 %15, i24* %8, align 4, !dbg !6514
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6516
  call void @llvm.dbg.value(metadata i8* %17, metadata !6499, metadata !DIExpression()), !dbg !6500
  %18 = load i8, i8* %17, align 1, !dbg !6518
  %19 = icmp eq i8 %18, 108, !dbg !6519
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6520
  %21 = load i24, i24* %20, align 4, !dbg !6520
  %22 = and i24 %21, -30721, !dbg !6520
  br i1 %19, label %23, label %26, !dbg !6521

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6522
  store i24 %24, i24* %20, align 4, !dbg !6522
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6524
  call void @llvm.dbg.value(metadata i8* %25, metadata !6499, metadata !DIExpression()), !dbg !6500
  br label %56, !dbg !6525

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6526
  store i24 %27, i24* %20, align 4, !dbg !6526
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6528
  %30 = load i24, i24* %29, align 4, !dbg !6529
  %31 = and i24 %30, -30721, !dbg !6529
  %32 = or i24 %31, 10240, !dbg !6529
  store i24 %32, i24* %29, align 4, !dbg !6529
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6530
  call void @llvm.dbg.value(metadata i8* %33, metadata !6499, metadata !DIExpression()), !dbg !6500
  br label %56, !dbg !6531

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6532
  %36 = load i24, i24* %35, align 4, !dbg !6533
  %37 = and i24 %36, -30721, !dbg !6533
  %38 = or i24 %37, 12288, !dbg !6533
  store i24 %38, i24* %35, align 4, !dbg !6533
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6534
  call void @llvm.dbg.value(metadata i8* %39, metadata !6499, metadata !DIExpression()), !dbg !6500
  br label %56, !dbg !6535

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6536
  %42 = load i24, i24* %41, align 4, !dbg !6537
  %43 = and i24 %42, -30721, !dbg !6537
  %44 = or i24 %43, 14336, !dbg !6537
  store i24 %44, i24* %41, align 4, !dbg !6537
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6538
  call void @llvm.dbg.value(metadata i8* %45, metadata !6499, metadata !DIExpression()), !dbg !6500
  br label %56, !dbg !6539

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6540
  %48 = load i24, i24* %47, align 4, !dbg !6541
  %49 = and i24 %48, -30723, !dbg !6541
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6542
  call void @llvm.dbg.value(metadata i8* %50, metadata !6499, metadata !DIExpression()), !dbg !6500
  %51 = or i24 %49, 16386, !dbg !6543
  store i24 %51, i24* %47, align 4, !dbg !6543
  br label %56, !dbg !6544

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6545
  %54 = load i24, i24* %53, align 4, !dbg !6546
  %55 = and i24 %54, -30721, !dbg !6546
  store i24 %55, i24* %53, align 4, !dbg !6546
  br label %56, !dbg !6547

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6499, metadata !DIExpression()), !dbg !6500
  ret i8* %57, !dbg !6548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !6549 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6551, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i8* %1, metadata !6552, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i8 0, metadata !6553, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i8* %1, metadata !6552, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6556
  %3 = load i8, i8* %1, align 1, !dbg !6557
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6558
  store i8 %3, i8* %4, align 1, !dbg !6559
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6560

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6561

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6562
  %9 = load i24, i24* %8, align 4, !dbg !6562
  %10 = and i24 %9, -458753, !dbg !6562
  %11 = or i24 %10, %7, !dbg !6562
  call void @llvm.dbg.label(metadata !6554), !dbg !6563
  %12 = and i24 %9, 30720, !dbg !6564
  %13 = icmp eq i24 %12, 16384, !dbg !6564
  %14 = zext i1 %13 to i24, !dbg !6566
  %15 = or i24 %11, %14, !dbg !6566
  %16 = icmp eq i8 %3, 99, !dbg !6567
  br i1 %16, label %17, label %43, !dbg !6569

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6570
  %19 = icmp ne i24 %18, 0, !dbg !6570
  call void @llvm.dbg.value(metadata i1 %19, metadata !6553, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6556
  br label %43, !dbg !6572

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6573
  %22 = load i24, i24* %21, align 4, !dbg !6574
  %23 = and i24 %22, -458753, !dbg !6574
  %24 = or i24 %23, 262144, !dbg !6574
  call void @llvm.dbg.value(metadata i8 1, metadata !6553, metadata !DIExpression()), !dbg !6556
  br label %43, !dbg !6575

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6578
  %27 = load i24, i24* %26, align 4, !dbg !6579
  %28 = and i24 %27, -458753, !dbg !6579
  %29 = or i24 %28, 196608, !dbg !6579
  %30 = and i24 %27, 30720, !dbg !6580
  %31 = icmp eq i24 %30, 16384, !dbg !6580
  br label %43, !dbg !6582

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6583
  %34 = load i24, i24* %33, align 4, !dbg !6584
  %35 = and i24 %34, -458753, !dbg !6584
  %36 = or i24 %35, 196608, !dbg !6584
  %37 = and i24 %34, 30720, !dbg !6585
  %38 = icmp ne i24 %37, 0, !dbg !6585
  br label %43, !dbg !6587

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6588
  %41 = load i24, i24* %40, align 4, !dbg !6589
  %42 = or i24 %41, 1, !dbg !6589
  br label %43, !dbg !6590

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6591
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6592
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6593
  call void @llvm.dbg.value(metadata i8* %48, metadata !6552, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i8 poison, metadata !6553, metadata !DIExpression()), !dbg !6556
  %49 = lshr i24 %44, 1, !dbg !6591
  %50 = and i24 %49, 1, !dbg !6591
  %51 = zext i24 %50 to i32, !dbg !6591
  %52 = or i32 %51, %47, !dbg !6591
  %53 = trunc i32 %52 to i24, !dbg !6591
  %54 = shl nuw nsw i24 %53, 1, !dbg !6591
  %55 = and i24 %44, -3, !dbg !6591
  %56 = or i24 %54, %55, !dbg !6591
  store i24 %56, i24* %46, align 4, !dbg !6591
  ret i8* %48, !dbg !6594
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6595 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6599, metadata !DIExpression()), !dbg !6602
  %2 = load i8*, i8** %0, align 4, !dbg !6603
  call void @llvm.dbg.value(metadata i8* %2, metadata !6600, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.value(metadata i32 0, metadata !6601, metadata !DIExpression()), !dbg !6602
  %3 = load i8, i8* %2, align 1, !dbg !6604
  %4 = zext i8 %3 to i32, !dbg !6605
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !6606
  %6 = icmp eq i32 %5, 0, !dbg !6607
  br i1 %6, label %19, label %7, !dbg !6607

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6601, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.value(metadata i8* %10, metadata !6600, metadata !DIExpression()), !dbg !6602
  %11 = mul i32 %9, 10, !dbg !6608
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6610
  call void @llvm.dbg.value(metadata i8* %12, metadata !6600, metadata !DIExpression()), !dbg !6602
  %13 = add i32 %11, -48, !dbg !6611
  %14 = add i32 %13, %8, !dbg !6612
  call void @llvm.dbg.value(metadata i32 %14, metadata !6601, metadata !DIExpression()), !dbg !6602
  %15 = load i8, i8* %12, align 1, !dbg !6604
  %16 = zext i8 %15 to i32, !dbg !6605
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !6606
  %18 = icmp eq i32 %17, 0, !dbg !6607
  br i1 %18, label %19, label %7, !dbg !6607, !llvm.loop !6613

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6602
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6602
  store i8* %20, i8** %0, align 4, !dbg !6615
  ret i32 %21, !dbg !6616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #6 !dbg !6617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6619, metadata !DIExpression()), !dbg !6620
  %2 = add i32 %0, -48, !dbg !6621
  %3 = icmp ult i32 %2, 10, !dbg !6622
  %4 = zext i1 %3 to i32, !dbg !6622
  ret i32 %4, !dbg !6623
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6624 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #23, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #23, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #23, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #23, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #23, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #23, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #23, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #23, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #23, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #23, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #23, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #23, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #23, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #23, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #23, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #23, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #23, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #23, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #23, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #23, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #23, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !6984, !srcloc !6985
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !6986, !srcloc !6987
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !6988, !srcloc !6989
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !6990, !srcloc !6991
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !6992, !srcloc !6993
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !6994, !srcloc !6995
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #23, !dbg !6996, !srcloc !6997
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !6998, !srcloc !6999
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !7002, !srcloc !7003
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !7004, !srcloc !7005
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !7006, !srcloc !7007
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !7008, !srcloc !7009
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !7010, !srcloc !7011
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !7012, !srcloc !7013
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !7014, !srcloc !7015
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #23, !dbg !7016, !srcloc !7017
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !7018, !srcloc !7019
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !7020, !srcloc !7021
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !7022, !srcloc !7023
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !7024, !srcloc !7025
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !7026, !srcloc !7027
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !7028, !srcloc !7029
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !7030, !srcloc !7031
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !7032, !srcloc !7033
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !7034, !srcloc !7035
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !7036, !srcloc !7037
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !7038, !srcloc !7039
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !7040, !srcloc !7041
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !7042, !srcloc !7043
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !7044, !srcloc !7045
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !7046, !srcloc !7047
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !7048, !srcloc !7049
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !7050, !srcloc !7051
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !7052, !srcloc !7053
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !7054, !srcloc !7055
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !7056, !srcloc !7057
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !7058, !srcloc !7059
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !7060, !srcloc !7061
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !7062, !srcloc !7063
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !7064, !srcloc !7065
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !7066, !srcloc !7067
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !7068, !srcloc !7069
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !7070, !srcloc !7071
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !7072, !srcloc !7073
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !7074, !srcloc !7075
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !7076, !srcloc !7077
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !7078, !srcloc !7079
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !7080, !srcloc !7081
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !7082, !srcloc !7083
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !7084, !srcloc !7085
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !7086, !srcloc !7087
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !7088, !srcloc !7089
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !7090, !srcloc !7091
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !7092, !srcloc !7093
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !7094, !srcloc !7095
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !7096, !srcloc !7097
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !7098, !srcloc !7099
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #23, !dbg !7100, !srcloc !7101
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #23, !dbg !7102, !srcloc !7103
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_CHANNEL_NAME\0A\09.equ\09CONFIG_ZBUS_CHANNEL_NAME,1\0A\09.type\09CONFIG_ZBUS_CHANNEL_NAME,%object", ""() #23, !dbg !7104, !srcloc !7105
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #23, !dbg !7106, !srcloc !7107
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_DBG\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_DBG,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_DBG,%object", ""() #23, !dbg !7108, !srcloc !7109
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,4\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #23, !dbg !7110, !srcloc !7111
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !7112, !srcloc !7113
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !7114, !srcloc !7115
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !7116, !srcloc !7117
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !7118, !srcloc !7119
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !7120, !srcloc !7121
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !7122, !srcloc !7123
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !7124, !srcloc !7125
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !7126, !srcloc !7127
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !7128, !srcloc !7129
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !7130, !srcloc !7131
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !7132, !srcloc !7133
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !7134, !srcloc !7135
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !7136, !srcloc !7137
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !7138, !srcloc !7139
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !7140, !srcloc !7141
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !7142, !srcloc !7143
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !7144, !srcloc !7145
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !7146, !srcloc !7147
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !7148, !srcloc !7149
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !7150, !srcloc !7151
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !7152, !srcloc !7153
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !7154, !srcloc !7155
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !7156, !srcloc !7157
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !7158, !srcloc !7159
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !7160, !srcloc !7161
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !7162, !srcloc !7163
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !7164, !srcloc !7165
  ret void, !dbg !7166
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7167 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7169, metadata !DIExpression()), !dbg !7170
  tail call void @SOC_RdcInit() #25, !dbg !7171
  tail call void @SOC_ClockInit() #25, !dbg !7172
  tail call fastcc void @nxp_mcimx7_gpio_config() #25, !dbg !7173
  ret i32 0, !dbg !7174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #16 !dbg !7175 {
  tail call fastcc void @RDC_SetDomainID() #25, !dbg !7176
  ret void, !dbg !7177
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !7178 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #24, !dbg !7179
  tail call fastcc void @CCM_EnableRoot() #25, !dbg !7180
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #25, !dbg !7181
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #25, !dbg !7182
  tail call fastcc void @WDOG_DisablePowerdown() #25, !dbg !7183
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #25, !dbg !7184
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #25, !dbg !7185
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #25, !dbg !7186
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #25, !dbg !7187
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #25, !dbg !7188
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #25, !dbg !7189
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #25, !dbg !7190
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #25, !dbg !7191
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #25, !dbg !7192
  ret void, !dbg !7193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #16 !dbg !7194 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #25, !dbg !7195
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #25, !dbg !7196
  ret void, !dbg !7197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !7198 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !7203, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i32 %0, metadata !7204, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i8 %1, metadata !7205, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i8 0, metadata !7206, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i8 0, metadata !7207, metadata !DIExpression()), !dbg !7208
  %3 = zext i8 %1 to i32, !dbg !7209
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !7210
  store volatile i32 %3, i32* %4, align 4, !dbg !7211
  ret void, !dbg !7212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7213 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !7217, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata i32 %0, metadata !7218, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata i32 %1, metadata !7219, metadata !DIExpression()), !dbg !7220
  %3 = inttoptr i32 %0 to i32*, !dbg !7221
  store volatile i32 %1, i32* %3, align 4, !dbg !7222
  ret void, !dbg !7223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #16 !dbg !7224 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !7228, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 809024384, metadata !7229, metadata !DIExpression()), !dbg !7230
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !7231
  ret void, !dbg !7232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #16 !dbg !7233 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !7238, metadata !DIExpression()), !dbg !7239
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !7240
  %2 = and i16 %1, -2, !dbg !7240
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !7240
  ret void, !dbg !7241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #16 !dbg !7242 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !7246, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 1, metadata !7247, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 1, metadata !7248, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i8 0, metadata !7249, metadata !DIExpression()), !dbg !7250
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !7251
  ret void, !dbg !7252
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7253 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7256, metadata !DIExpression()), !dbg !7264
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7265
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7265
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7257, metadata !DIExpression()), !dbg !7266
  call void @llvm.va_start(i8* nonnull %3), !dbg !7267
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7268
  %5 = load i32, i32* %4, align 4, !dbg !7268
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7268
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !7268
  call void @llvm.va_end(i8* nonnull %3), !dbg !7269
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7270
  ret void, !dbg !7270
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7271 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7276, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i8* %0, metadata !7275, metadata !DIExpression()), !dbg !7277
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !7278
  ret void, !dbg !7279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7284, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i8* %1, metadata !7285, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i32 %2, metadata !7286, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i8* %1, metadata !7287, metadata !DIExpression()), !dbg !7288
  %4 = icmp eq i32 %2, 0, !dbg !7289
  br i1 %4, label %14, label %5, !dbg !7290

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #25, !dbg !7288
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7290

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7287, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i32 %10, metadata !7286, metadata !DIExpression()), !dbg !7288
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i32 noundef %7) #24, !dbg !7291
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !7293
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7294
  call void @llvm.dbg.value(metadata i32 %11, metadata !7286, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i8* %12, metadata !7287, metadata !DIExpression()), !dbg !7288
  br i1 %13, label %14, label %8, !dbg !7294, !llvm.loop !7295

14:                                               ; preds = %8, %3
  ret void, !dbg !7297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #6 !dbg !7298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7303, metadata !DIExpression()), !dbg !7304
  %2 = add i32 %0, -1, !dbg !7305
  %3 = icmp ult i32 %2, 4, !dbg !7305
  %4 = shl i32 %2, 3, !dbg !7305
  %5 = lshr i32 1145657157, %4, !dbg !7305
  %6 = trunc i32 %5 to i8, !dbg !7305
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7305
  ret i8 %7, !dbg !7306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7307 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7311, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i32 %1, metadata !7312, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i32 0, metadata !7313, metadata !DIExpression()), !dbg !7323
  br label %4, !dbg !7324

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.25, i32 0, i32 0)) #24, !dbg !7325
  call void @llvm.dbg.value(metadata i32 0, metadata !7315, metadata !DIExpression()), !dbg !7326
  br label %16, !dbg !7327

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7313, metadata !DIExpression()), !dbg !7323
  %6 = icmp ult i32 %5, %1, !dbg !7328
  br i1 %6, label %7, label %11, !dbg !7332

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7333
  %9 = load i8, i8* %8, align 1, !dbg !7333
  %10 = zext i8 %9 to i32, !dbg !7335
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.26, i32 0, i32 0), i32 noundef %10) #24, !dbg !7336
  br label %12, !dbg !7337

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.27, i32 0, i32 0)) #24, !dbg !7338
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7340
  call void @llvm.dbg.value(metadata i32 %13, metadata !7313, metadata !DIExpression()), !dbg !7323
  %14 = icmp eq i32 %13, 8, !dbg !7341
  br i1 %14, label %3, label %4, !dbg !7324, !llvm.loop !7342

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0)) #24, !dbg !7344
  ret void, !dbg !7345

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7315, metadata !DIExpression()), !dbg !7326
  %18 = icmp ult i32 %17, %1, !dbg !7346
  br i1 %18, label %19, label %26, !dbg !7347

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7348
  %21 = load i8, i8* %20, align 1, !dbg !7348
  call void @llvm.dbg.value(metadata i8 %21, metadata !7317, metadata !DIExpression()), !dbg !7349
  %22 = zext i8 %21 to i32, !dbg !7350
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !7351
  %24 = icmp eq i32 %23, 0, !dbg !7352
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7351
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.28, i32 0, i32 0), i32 noundef %25) #24, !dbg !7353
  br label %27, !dbg !7354

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0)) #24, !dbg !7355
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7357
  call void @llvm.dbg.value(metadata i32 %28, metadata !7315, metadata !DIExpression()), !dbg !7326
  %29 = icmp eq i32 %28, 8, !dbg !7358
  br i1 %29, label %15, label %16, !dbg !7327, !llvm.loop !7359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #6 !dbg !7361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7363, metadata !DIExpression()), !dbg !7364
  %2 = add i32 %0, -32, !dbg !7365
  %3 = icmp ult i32 %2, 95, !dbg !7365
  %4 = zext i1 %3 to i32, !dbg !7365
  ret i32 %4, !dbg !7366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7416, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7417, metadata !DIExpression()), !dbg !7418
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7419
  br i1 %3, label %5, label %4, !dbg !7421

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !7422
  br label %5, !dbg !7424

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !7425
  ret void, !dbg !7426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7427 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7431, metadata !DIExpression()), !dbg !7432
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7433
  %3 = load i32, i32* %2, align 4, !dbg !7433
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7433
  %5 = load i32, i32* %4, align 4, !dbg !7433
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7433
  %7 = load i32, i32* %6, align 4, !dbg !7433
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !7433
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7438
  %9 = load i32, i32* %8, align 4, !dbg !7438
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7438
  %11 = load i32, i32* %10, align 4, !dbg !7438
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7438
  %13 = load i32, i32* %12, align 4, !dbg !7438
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !7438
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7443
  %15 = load i32, i32* %14, align 4, !dbg !7443
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !7443
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7448
  %17 = load i32, i32* %16, align 4, !dbg !7448
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7448
  ret void, !dbg !7453
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7454 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7471, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7472, metadata !DIExpression()), !dbg !7474
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7475
  %4 = load i32, i32* %3, align 4, !dbg !7475
  call void @llvm.dbg.value(metadata i32 %4, metadata !7473, metadata !DIExpression()), !dbg !7474
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !7476
  ret void, !dbg !7477
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7478 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7482, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.value(metadata i8* %0, metadata !7483, metadata !DIExpression()), !dbg !7485
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7486
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !7486
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7484, metadata !DIExpression()), !dbg !7487
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7487
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7488
  %5 = bitcast i8* %4 to i32*, !dbg !7488
  %6 = load i32, i32* %5, align 4, !dbg !7488
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7489
  store i32 %6, i32* %7, align 4, !dbg !7490
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !7491
  unreachable, !dbg !7492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7498, metadata !DIExpression()), !dbg !7499
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !7500
  ret void, !dbg !7501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7506, metadata !DIExpression()), !dbg !7507
  %2 = icmp sgt i32 %0, -1, !dbg !7508
  br i1 %2, label %3, label %8, !dbg !7510

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7511, !srcloc !7513
  %4 = and i32 %0, 31, !dbg !7514
  %5 = shl nuw i32 1, %4, !dbg !7515
  %6 = lshr i32 %0, 5, !dbg !7516
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7517
  store volatile i32 %5, i32* %7, align 4, !dbg !7518
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7519, !srcloc !7520
  br label %8, !dbg !7521

8:                                                ; preds = %3, %1
  ret void, !dbg !7522
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7525, metadata !DIExpression()), !dbg !7526
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !7527
  ret void, !dbg !7528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7531, metadata !DIExpression()), !dbg !7532
  %2 = icmp sgt i32 %0, -1, !dbg !7533
  br i1 %2, label %3, label %8, !dbg !7535

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7536
  %5 = shl nuw i32 1, %4, !dbg !7538
  %6 = lshr i32 %0, 5, !dbg !7539
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7540
  store volatile i32 %5, i32* %7, align 4, !dbg !7541
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7542, !srcloc !7546
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7547, !srcloc !7550
  br label %8, !dbg !7551

8:                                                ; preds = %3, %1
  ret void, !dbg !7552
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7557, metadata !DIExpression()), !dbg !7558
  %2 = lshr i32 %0, 5, !dbg !7559
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7560
  %4 = load volatile i32, i32* %3, align 4, !dbg !7560
  %5 = and i32 %0, 31, !dbg !7561
  %6 = shl nuw i32 1, %5, !dbg !7561
  %7 = and i32 %4, %6, !dbg !7562
  ret i32 %7, !dbg !7563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7568, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %1, metadata !7569, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %2, metadata !7570, metadata !DIExpression()), !dbg !7571
  %4 = add i32 %1, 1, !dbg !7572
  call void @llvm.dbg.value(metadata i32 %4, metadata !7569, metadata !DIExpression()), !dbg !7571
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !7575
  ret void, !dbg !7576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7581, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.value(metadata i32 %1, metadata !7582, metadata !DIExpression()), !dbg !7583
  %3 = trunc i32 %1 to i8, !dbg !7584
  %4 = shl i8 %3, 4, !dbg !7584
  %5 = and i32 %0, 15, !dbg !7586
  %6 = add nsw i32 %5, -4, !dbg !7586
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7586
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7586
  %9 = icmp slt i32 %0, 0, !dbg !7586
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7586
  store volatile i8 %4, i8* %10, align 1, !dbg !7584
  ret void, !dbg !7587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7588 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7590, metadata !DIExpression()), !dbg !7591
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !7592
  ret void, !dbg !7593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7594 {
  tail call void @z_SysNmiOnReset() #24, !dbg !7596
  tail call void @z_arm_int_exit() #24, !dbg !7597
  ret void, !dbg !7598
}

; Function Attrs: optsize
declare !dbg !7599 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7600 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7602 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !7604
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !7605
  tail call void @z_bss_zero() #24, !dbg !7606
  tail call void @z_data_copy() #24, !dbg !7607
  tail call void @z_arm_interrupt_init() #24, !dbg !7608
  tail call void @z_cstart() #27, !dbg !7609
  unreachable, !dbg !7609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7610 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7611
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7612, !srcloc !7615
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7616, !srcloc !7619
  ret void, !dbg !7620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7621 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7622
  %2 = and i32 %1, -15728641, !dbg !7622
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7622
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7623, !srcloc !7630
  call void @llvm.dbg.value(metadata i32 %3, metadata !7628, metadata !DIExpression()) #23, !dbg !7631
  %4 = and i32 %3, -5, !dbg !7632
  call void @llvm.dbg.value(metadata i32 %4, metadata !7633, metadata !DIExpression()) #23, !dbg !7638
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7640, !srcloc !7641
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7642, !srcloc !7619
  ret void, !dbg !7644
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7648, metadata !DIExpression()), !dbg !7649
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7650
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7651
  store i32 %0, i32* %3, align 8, !dbg !7652
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7653
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7654
  store i32 %4, i32* %5, align 4, !dbg !7655
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7656
  %7 = or i32 %6, 268435456, !dbg !7656
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7656
  call void @llvm.dbg.value(metadata i32 0, metadata !7657, metadata !DIExpression()) #23, !dbg !7661
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7663, !srcloc !7664
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7665
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7666
  %10 = load i32, i32* %9, align 4, !dbg !7666
  ret i32 %10, !dbg !7667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.action_msg* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !7668 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7773, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata %struct.action_msg* %1, metadata !7774, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i8* %2, metadata !7775, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7776, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i8* %4, metadata !7777, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i8* %5, metadata !7778, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i8* %6, metadata !7779, metadata !DIExpression()), !dbg !7781
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7782
  call void @llvm.dbg.value(metadata i8* %8, metadata !7780, metadata !DIExpression()), !dbg !7781
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7783
  %10 = bitcast i8* %9 to i32*, !dbg !7783
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7784
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7785
  %12 = bitcast i8* %8 to i32*, !dbg !7786
  store i32 %11, i32* %12, align 4, !dbg !7787
  %13 = ptrtoint i8* %4 to i32, !dbg !7788
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7789
  %15 = bitcast i8* %14 to i32*, !dbg !7789
  store i32 %13, i32* %15, align 4, !dbg !7790
  %16 = ptrtoint i8* %5 to i32, !dbg !7791
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7792
  %18 = bitcast i8* %17 to i32*, !dbg !7792
  store i32 %16, i32* %18, align 4, !dbg !7793
  %19 = ptrtoint i8* %6 to i32, !dbg !7794
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7795
  %21 = bitcast i8* %20 to i32*, !dbg !7795
  store i32 %19, i32* %21, align 4, !dbg !7796
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7797
  %23 = bitcast i8* %22 to i32*, !dbg !7797
  store i32 16777216, i32* %23, align 4, !dbg !7798
  %24 = ptrtoint i8* %8 to i32, !dbg !7799
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7800
  store i32 %24, i32* %25, align 8, !dbg !7801
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7802
  store i32 0, i32* %26, align 8, !dbg !7803
  ret void, !dbg !7804
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7805 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7809, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.value(metadata i8* %1, metadata !7810, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7811, metadata !DIExpression()), !dbg !7812
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7813
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7814, !srcloc !7815
  unreachable, !dbg !7816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7817 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7835, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %2, metadata !7837, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7838, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 0, metadata !7839, metadata !DIExpression()), !dbg !7845
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7846
  %9 = and i32 %8, 511, !dbg !7847
  call void @llvm.dbg.value(metadata i32 %9, metadata !7840, metadata !DIExpression()), !dbg !7845
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7848
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7848
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7849
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7849
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7844, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i32 0, metadata !7851, metadata !DIExpression()) #23, !dbg !7854
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7856, !srcloc !7857
  call void @llvm.dbg.value(metadata i8* %6, metadata !7842, metadata !DIExpression(DW_OP_deref)), !dbg !7845
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !7858
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7843, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8* %5, metadata !7841, metadata !DIExpression(DW_OP_deref)), !dbg !7845
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !7859
  call void @llvm.dbg.value(metadata i32 %12, metadata !7839, metadata !DIExpression()), !dbg !7845
  %13 = load i8, i8* %5, align 1, !dbg !7860, !range !3737
  call void @llvm.dbg.value(metadata i8 %13, metadata !7841, metadata !DIExpression()), !dbg !7845
  %14 = icmp eq i8 %13, 0, !dbg !7860
  br i1 %14, label %15, label %32, !dbg !7862

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7863
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !7864
  %18 = load i8, i8* %6, align 1, !dbg !7865, !range !3737
  call void @llvm.dbg.value(metadata i8 %18, metadata !7842, metadata !DIExpression()), !dbg !7845
  %19 = icmp eq i8 %18, 0, !dbg !7865
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7867
  %21 = load i32, i32* %20, align 4, !dbg !7867
  br i1 %19, label %27, label %22, !dbg !7868

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7869
  %24 = icmp eq i32 %23, 0, !dbg !7872
  br i1 %24, label %25, label %31, !dbg !7873

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7874
  br label %29, !dbg !7876

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7877
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7867
  br label %31, !dbg !7879

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !7879
  br label %32, !dbg !7880

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7880
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7880
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7880
  ret void, !dbg !7880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7885, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %1, metadata !7886, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %2, metadata !7887, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i8* %3, metadata !7888, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i8 0, metadata !7889, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7890, metadata !DIExpression()), !dbg !7891
  store i8 0, i8* %3, align 1, !dbg !7892
  %5 = icmp ugt i32 %2, -16777217, !dbg !7893
  br i1 %5, label %6, label %17, !dbg !7895

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7896
  %8 = icmp eq i32 %7, 8, !dbg !7896
  br i1 %8, label %9, label %10, !dbg !7896

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.46, i32 0, i32 0), i32 noundef 69) #24, !dbg !7898
  br label %17, !dbg !7904

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7905
  %12 = icmp eq i32 %11, 0, !dbg !7905
  br i1 %12, label %13, label %14, !dbg !7906

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7890, metadata !DIExpression()), !dbg !7891
  store i8 1, i8* %3, align 1, !dbg !7909
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7891
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7890, metadata !DIExpression()), !dbg !7891
  br label %17, !dbg !7912

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7891
  ret %struct.__esf* %18, !dbg !7913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7914 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7918, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %1, metadata !7919, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %2, metadata !7920, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 0, metadata !7921, metadata !DIExpression()), !dbg !7922
  store i8 0, i8* %2, align 1, !dbg !7923
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !7924

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !7925
  call void @llvm.dbg.value(metadata i32 %5, metadata !7921, metadata !DIExpression()), !dbg !7922
  br label %11, !dbg !7927

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !7928
  call void @llvm.dbg.value(metadata i32 0, metadata !7921, metadata !DIExpression()), !dbg !7922
  br label %11, !dbg !7929

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !7930
  call void @llvm.dbg.value(metadata i32 0, metadata !7921, metadata !DIExpression()), !dbg !7922
  br label %11, !dbg !7931

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !7932
  call void @llvm.dbg.value(metadata i32 0, metadata !7921, metadata !DIExpression()), !dbg !7922
  br label %11, !dbg !7933

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !7934
  br label %11, !dbg !7935

10:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !7936
  br label %11, !dbg !7937

11:                                               ; preds = %4, %6, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ 0, %7 ], [ 0, %6 ], [ %5, %4 ], !dbg !7922
  call void @llvm.dbg.value(metadata i32 %12, metadata !7921, metadata !DIExpression()), !dbg !7922
  ret i32 %12, !dbg !7938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7939 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7943, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %1, metadata !7944, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i32 0, metadata !7945, metadata !DIExpression()), !dbg !7946
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.41, i32 0, i32 0), i32 noundef 69) #24, !dbg !7947
  store i8 0, i8* %1, align 1, !dbg !7952
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7953
  %4 = and i32 %3, 2, !dbg !7955
  %5 = icmp eq i32 %4, 0, !dbg !7956
  br i1 %5, label %7, label %6, !dbg !7957

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.42, i32 0, i32 0), i32 noundef 69) #24, !dbg !7958
  br label %35, !dbg !7964

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7965
  %9 = icmp sgt i32 %8, -1, !dbg !7967
  br i1 %9, label %11, label %10, !dbg !7968

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.43, i32 0, i32 0), i32 noundef 69) #24, !dbg !7969
  br label %35, !dbg !7975

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7976
  %13 = and i32 %12, 1073741824, !dbg !7978
  %14 = icmp eq i32 %13, 0, !dbg !7979
  br i1 %14, label %35, label %15, !dbg !7980

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.44, i32 0, i32 0), i32 noundef 69) #24, !dbg !7981
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !7987
  br i1 %16, label %17, label %21, !dbg !7989

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7990
  %19 = load i32, i32* %18, align 4, !dbg !7990
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.45, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !7990
  %20 = load i32, i32* %18, align 4, !dbg !7996
  call void @llvm.dbg.value(metadata i32 %20, metadata !7945, metadata !DIExpression()), !dbg !7946
  br label %35, !dbg !7997

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7998
  %23 = and i32 %22, 255, !dbg !8000
  %24 = icmp eq i32 %23, 0, !dbg !8001
  br i1 %24, label %26, label %25, !dbg !8002

25:                                               ; preds = %21
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !8003
  call void @llvm.dbg.value(metadata i32 0, metadata !7945, metadata !DIExpression()), !dbg !7946
  br label %35, !dbg !8005

26:                                               ; preds = %21
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8006
  %28 = and i32 %27, 65280, !dbg !8008
  %29 = icmp eq i32 %28, 0, !dbg !8009
  br i1 %29, label %31, label %30, !dbg !8010

30:                                               ; preds = %26
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !8011
  call void @llvm.dbg.value(metadata i32 0, metadata !7945, metadata !DIExpression()), !dbg !7946
  br label %35, !dbg !8013

31:                                               ; preds = %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8014
  %33 = icmp ult i32 %32, 65536, !dbg !8016
  br i1 %33, label %35, label %34, !dbg !8017

34:                                               ; preds = %31
  tail call fastcc void @usage_fault() #25, !dbg !8018
  call void @llvm.dbg.value(metadata i32 0, metadata !7945, metadata !DIExpression()), !dbg !7946
  br label %35, !dbg !8020

35:                                               ; preds = %10, %11, %17, %30, %31, %34, %25, %6
  %36 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ 0, %25 ], [ 0, %30 ], [ 0, %34 ], [ 0, %31 ], [ 0, %11 ], !dbg !7946
  call void @llvm.dbg.value(metadata i32 %36, metadata !7945, metadata !DIExpression()), !dbg !7946
  ret i32 %36, !dbg !8021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8022 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8024, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 %0, metadata !8025, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i8* %1, metadata !8026, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 0, metadata !8027, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 -22, metadata !8028, metadata !DIExpression()), !dbg !8032
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.40, i32 0, i32 0), i32 noundef 69) #24, !dbg !8033
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8038
  %4 = and i32 %3, 16, !dbg !8040
  %5 = icmp eq i32 %4, 0, !dbg !8041
  br i1 %5, label %7, label %6, !dbg !8042

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7, i32 0, i32 0), i32 noundef 69) #24, !dbg !8043
  br label %7, !dbg !8049

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8050
  %9 = and i32 %8, 8, !dbg !8052
  %10 = icmp eq i32 %9, 0, !dbg !8053
  br i1 %10, label %12, label %11, !dbg !8054

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.38, i32 0, i32 0), i32 noundef 69) #24, !dbg !8055
  br label %12, !dbg !8061

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8062
  %14 = and i32 %13, 2, !dbg !8063
  %15 = icmp eq i32 %14, 0, !dbg !8064
  br i1 %15, label %26, label %16, !dbg !8065

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i32 noundef 69) #24, !dbg !8066
  %17 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8071
  call void @llvm.dbg.value(metadata i32 %17, metadata !8029, metadata !DIExpression()), !dbg !8072
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8073
  %19 = and i32 %18, 128, !dbg !8075
  %20 = icmp eq i32 %19, 0, !dbg !8076
  br i1 %20, label %26, label %21, !dbg !8077

21:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %17, metadata !8028, metadata !DIExpression()), !dbg !8032
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !8078
  %22 = icmp eq i32 %0, 0, !dbg !8084
  br i1 %22, label %26, label %23, !dbg !8086

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8087
  %25 = and i32 %24, -129, !dbg !8087
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8087
  br label %26, !dbg !8089

26:                                               ; preds = %16, %23, %21, %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !8028, metadata !DIExpression()), !dbg !8032
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8090
  %28 = and i32 %27, 1, !dbg !8092
  %29 = icmp eq i32 %28, 0, !dbg !8093
  br i1 %29, label %31, label %30, !dbg !8094

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #24, !dbg !8095
  br label %31, !dbg !8101

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8102
  %33 = and i32 %32, 32, !dbg !8104
  %34 = icmp eq i32 %33, 0, !dbg !8105
  br i1 %34, label %36, label %35, !dbg !8106

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #24, !dbg !8107
  br label %36, !dbg !8113

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8114
  %38 = and i32 %37, 16, !dbg !8116
  %39 = icmp eq i32 %38, 0, !dbg !8116
  br i1 %39, label %40, label %42, !dbg !8117

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8118
  br label %42, !dbg !8119

42:                                               ; preds = %40, %36
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8120
  %44 = and i32 %43, 32, !dbg !8122
  %45 = icmp eq i32 %44, 0, !dbg !8123
  br i1 %45, label %49, label %46, !dbg !8124

46:                                               ; preds = %42
  %47 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8125
  %48 = and i32 %47, -8193, !dbg !8125
  store volatile i32 %48, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8125
  br label %49, !dbg !8127

49:                                               ; preds = %46, %42
  %50 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8128
  %51 = or i32 %50, 255, !dbg !8128
  store volatile i32 %51, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8128
  store i8 0, i8* %1, align 1, !dbg !8129
  ret void, !dbg !8130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8131 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8135, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i32 %0, metadata !8136, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i8* %1, metadata !8137, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i32 0, metadata !8138, metadata !DIExpression()), !dbg !8142
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #24, !dbg !8143
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8148
  %4 = and i32 %3, 4096, !dbg !8150
  %5 = icmp eq i32 %4, 0, !dbg !8150
  br i1 %5, label %7, label %6, !dbg !8151

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #24, !dbg !8152
  br label %7, !dbg !8158

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8159
  %9 = and i32 %8, 2048, !dbg !8161
  %10 = icmp eq i32 %9, 0, !dbg !8161
  br i1 %10, label %12, label %11, !dbg !8162

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.38, i32 0, i32 0), i32 noundef 69) #24, !dbg !8163
  br label %12, !dbg !8169

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8170
  %14 = and i32 %13, 512, !dbg !8171
  %15 = icmp eq i32 %14, 0, !dbg !8171
  br i1 %15, label %26, label %16, !dbg !8172

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.39, i32 0, i32 0), i32 noundef 69) #24, !dbg !8173
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8178
  call void @llvm.dbg.value(metadata i32 %17, metadata !8139, metadata !DIExpression()), !dbg !8179
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8180
  %19 = and i32 %18, 32768, !dbg !8182
  %20 = icmp eq i32 %19, 0, !dbg !8183
  br i1 %20, label %26, label %21, !dbg !8184

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !8185
  %22 = icmp eq i32 %0, 0, !dbg !8191
  br i1 %22, label %26, label %23, !dbg !8193

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8194
  %25 = and i32 %24, -32769, !dbg !8194
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8194
  br label %26, !dbg !8196

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8197
  %28 = and i32 %27, 1024, !dbg !8199
  %29 = icmp eq i32 %28, 0, !dbg !8199
  br i1 %29, label %31, label %30, !dbg !8200

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #24, !dbg !8201
  br label %31, !dbg !8207

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8208
  %33 = and i32 %32, 256, !dbg !8210
  %34 = icmp eq i32 %33, 0, !dbg !8211
  br i1 %34, label %35, label %39, !dbg !8212

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8213
  %37 = and i32 %36, 8192, !dbg !8215
  %38 = icmp eq i32 %37, 0, !dbg !8215
  br i1 %38, label %41, label %39, !dbg !8216

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !8217
  br label %41, !dbg !8218

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8218
  %43 = or i32 %42, 65280, !dbg !8218
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8218
  store i8 0, i8* %1, align 1, !dbg !8219
  ret void, !dbg !8220
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8221 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8227, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i32 0, metadata !8228, metadata !DIExpression()), !dbg !8229
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #24, !dbg !8230
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8235
  %2 = and i32 %1, 33554432, !dbg !8237
  %3 = icmp eq i32 %2, 0, !dbg !8238
  br i1 %3, label %5, label %4, !dbg !8239

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.36, i32 0, i32 0), i32 noundef 69) #24, !dbg !8240
  br label %5, !dbg !8246

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8247
  %7 = and i32 %6, 16777216, !dbg !8249
  %8 = icmp eq i32 %7, 0, !dbg !8250
  br i1 %8, label %10, label %9, !dbg !8251

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #24, !dbg !8252
  br label %10, !dbg !8258

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8259
  %12 = and i32 %11, 524288, !dbg !8261
  %13 = icmp eq i32 %12, 0, !dbg !8262
  br i1 %13, label %15, label %14, !dbg !8263

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #24, !dbg !8264
  br label %15, !dbg !8270

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8271
  %17 = and i32 %16, 262144, !dbg !8273
  %18 = icmp eq i32 %17, 0, !dbg !8274
  br i1 %18, label %20, label %19, !dbg !8275

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #24, !dbg !8276
  br label %20, !dbg !8282

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8283
  %22 = and i32 %21, 131072, !dbg !8285
  %23 = icmp eq i32 %22, 0, !dbg !8286
  br i1 %23, label %25, label %24, !dbg !8287

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.37, i32 0, i32 0), i32 noundef 69) #24, !dbg !8288
  br label %25, !dbg !8294

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8295
  %27 = and i32 %26, 65536, !dbg !8297
  %28 = icmp eq i32 %27, 0, !dbg !8298
  br i1 %28, label %30, label %29, !dbg !8299

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #24, !dbg !8300
  br label %30, !dbg !8306

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8307
  %32 = or i32 %31, -65536, !dbg !8307
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8307
  ret void, !dbg !8308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8309 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8313, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i8* %0, metadata !8314, metadata !DIExpression()), !dbg !8315
  store i8 0, i8* %0, align 1, !dbg !8316
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !8317
  ret void, !dbg !8322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8323 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8327, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 %0, metadata !8328, metadata !DIExpression()), !dbg !8329
  %2 = icmp slt i32 %0, 16, !dbg !8330
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29.35, i32 0, i32 0), !dbg !8330
  %4 = add nsw i32 %0, -16, !dbg !8330
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !8330
  ret void, !dbg !8335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8336 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8340, metadata !DIExpression()), !dbg !8343
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8344
  %3 = load i32, i32* %2, align 4, !dbg !8344
  %4 = inttoptr i32 %3 to i16*, !dbg !8345
  call void @llvm.dbg.value(metadata i16* %4, metadata !8341, metadata !DIExpression()), !dbg !8343
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8346
  %6 = or i32 %5, 256, !dbg !8346
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8346
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8347, !srcloc !8350
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8351, !srcloc !8354
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8355
  %8 = load i16, i16* %7, align 2, !dbg !8356
  call void @llvm.dbg.value(metadata i16 %8, metadata !8342, metadata !DIExpression()), !dbg !8343
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8357
  %10 = and i32 %9, -257, !dbg !8357
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8357
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8358, !srcloc !8350
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8360, !srcloc !8354
  %11 = icmp eq i16 %8, -8446, !dbg !8362
  ret i1 %11, !dbg !8364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8365 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8366
  %2 = or i32 %1, 16, !dbg !8366
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8366
  ret void, !dbg !8367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8368 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8371, metadata !DIExpression()), !dbg !8372
  br label %1, !dbg !8373

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8371, metadata !DIExpression()), !dbg !8372
  tail call fastcc void @__NVIC_SetPriority.49(i32 noundef %2) #25, !dbg !8375
  %3 = add nuw nsw i32 %2, 1, !dbg !8378
  call void @llvm.dbg.value(metadata i32 %3, metadata !8371, metadata !DIExpression()), !dbg !8372
  %4 = icmp eq i32 %3, 127, !dbg !8379
  br i1 %4, label %5, label %1, !dbg !8373, !llvm.loop !8380

5:                                                ; preds = %1
  ret void, !dbg !8382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.49(i32 noundef %0) unnamed_addr #16 !dbg !8383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8385, metadata !DIExpression()), !dbg !8387
  call void @llvm.dbg.value(metadata i32 1, metadata !8386, metadata !DIExpression()), !dbg !8387
  %2 = and i32 %0, 15, !dbg !8388
  %3 = add nsw i32 %2, -4, !dbg !8388
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8388
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8388
  %6 = icmp slt i32 %0, 0, !dbg !8388
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8388
  store volatile i8 16, i8* %7, align 1, !dbg !8389
  ret void, !dbg !8391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8392 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8493, metadata !DIExpression()), !dbg !8494
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8495
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8497
  br i1 %3, label %4, label %12, !dbg !8498

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8499, !srcloc !8511
  call void @llvm.dbg.value(metadata i32 %5, metadata !8502, metadata !DIExpression()) #23, !dbg !8512
  %6 = icmp eq i32 %5, 0, !dbg !8513
  br i1 %6, label %12, label %7, !dbg !8514

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8515
  %9 = or i32 %8, 268435456, !dbg !8515
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8515
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8517
  %11 = and i32 %10, -32769, !dbg !8517
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8517
  br label %12, !dbg !8518

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !8519
  ret void, !dbg !8520
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8521 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8528, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.value(metadata i8* %1, metadata !8529, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.value(metadata i8* %0, metadata !8530, metadata !DIExpression()), !dbg !8531
  %3 = load i8, i8* %1, align 1, !dbg !8532
  %4 = icmp eq i8 %3, 0, !dbg !8533
  br i1 %4, label %13, label %5, !dbg !8534

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8528, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.value(metadata i8* %8, metadata !8529, metadata !DIExpression()), !dbg !8531
  store i8 %6, i8* %7, align 1, !dbg !8535
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8537
  call void @llvm.dbg.value(metadata i8* %9, metadata !8528, metadata !DIExpression()), !dbg !8531
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8538
  call void @llvm.dbg.value(metadata i8* %10, metadata !8529, metadata !DIExpression()), !dbg !8531
  %11 = load i8, i8* %10, align 1, !dbg !8532
  %12 = icmp eq i8 %11, 0, !dbg !8533
  br i1 %12, label %13, label %5, !dbg !8534, !llvm.loop !8539

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8541
  ret i8* %0, !dbg !8542
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8543 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8547, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %1, metadata !8548, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i32 %2, metadata !8549, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %0, metadata !8550, metadata !DIExpression()), !dbg !8551
  %4 = icmp eq i32 %2, 0, !dbg !8552
  br i1 %4, label %22, label %5, !dbg !8553

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8547, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i32 %7, metadata !8549, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %8, metadata !8548, metadata !DIExpression()), !dbg !8551
  %9 = load i8, i8* %8, align 1, !dbg !8554
  %10 = icmp eq i8 %9, 0, !dbg !8555
  br i1 %10, label %16, label %11, !dbg !8556

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8557
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8559
  call void @llvm.dbg.value(metadata i8* %12, metadata !8548, metadata !DIExpression()), !dbg !8551
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8560
  call void @llvm.dbg.value(metadata i8* %13, metadata !8547, metadata !DIExpression()), !dbg !8551
  %14 = add i32 %7, -1, !dbg !8561
  call void @llvm.dbg.value(metadata i32 %14, metadata !8549, metadata !DIExpression()), !dbg !8551
  %15 = icmp eq i32 %14, 0, !dbg !8552
  br i1 %15, label %22, label %5, !dbg !8553, !llvm.loop !8562

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8547, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i32 %18, metadata !8549, metadata !DIExpression()), !dbg !8551
  store i8 0, i8* %17, align 1, !dbg !8564
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8566
  call void @llvm.dbg.value(metadata i8* %19, metadata !8547, metadata !DIExpression()), !dbg !8551
  %20 = add i32 %18, -1, !dbg !8567
  call void @llvm.dbg.value(metadata i32 %20, metadata !8549, metadata !DIExpression()), !dbg !8551
  %21 = icmp eq i32 %20, 0, !dbg !8568
  br i1 %21, label %22, label %16, !dbg !8569, !llvm.loop !8570

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8572
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8573 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8577, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i32 %1, metadata !8578, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i32 %1, metadata !8579, metadata !DIExpression()), !dbg !8580
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8581

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8577, metadata !DIExpression()), !dbg !8580
  %6 = load i8, i8* %5, align 1, !dbg !8582
  %7 = icmp eq i8 %6, %3, !dbg !8583
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8584
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8585
  call void @llvm.dbg.value(metadata i8* %10, metadata !8577, metadata !DIExpression()), !dbg !8580
  br i1 %9, label %11, label %4, !dbg !8584, !llvm.loop !8587

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8589
  ret i8* %12, !dbg !8590
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8591 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8593, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.value(metadata i32 %1, metadata !8594, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.value(metadata i8* null, metadata !8595, metadata !DIExpression()), !dbg !8596
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8597

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8596
  call void @llvm.dbg.value(metadata i8* %6, metadata !8595, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.value(metadata i8* %5, metadata !8593, metadata !DIExpression()), !dbg !8596
  %7 = load i8, i8* %5, align 1, !dbg !8598
  %8 = icmp eq i8 %7, %3, !dbg !8601
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8602
  call void @llvm.dbg.value(metadata i8* %9, metadata !8595, metadata !DIExpression()), !dbg !8596
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8603
  call void @llvm.dbg.value(metadata i8* %10, metadata !8593, metadata !DIExpression()), !dbg !8596
  %11 = icmp eq i8 %7, 0, !dbg !8604
  br i1 %11, label %12, label %4, !dbg !8604, !llvm.loop !8605

12:                                               ; preds = %4
  ret i8* %9, !dbg !8607
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !8608 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8612, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i32 0, metadata !8613, metadata !DIExpression()), !dbg !8614
  %2 = load i8, i8* %0, align 1, !dbg !8615
  %3 = icmp eq i8 %2, 0, !dbg !8616
  br i1 %3, label %11, label %4, !dbg !8617

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8613, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i8* %6, metadata !8612, metadata !DIExpression()), !dbg !8614
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8618
  call void @llvm.dbg.value(metadata i8* %7, metadata !8612, metadata !DIExpression()), !dbg !8614
  %8 = add i32 %5, 1, !dbg !8620
  call void @llvm.dbg.value(metadata i32 %8, metadata !8613, metadata !DIExpression()), !dbg !8614
  %9 = load i8, i8* %7, align 1, !dbg !8615
  %10 = icmp eq i8 %9, 0, !dbg !8616
  br i1 %10, label %11, label %4, !dbg !8617, !llvm.loop !8621

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8614
  ret i32 %12, !dbg !8623
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8624 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8628, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i32 %1, metadata !8629, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i32 0, metadata !8630, metadata !DIExpression()), !dbg !8631
  %3 = load i8, i8* %0, align 1, !dbg !8632
  %4 = icmp ne i8 %3, 0, !dbg !8633
  %5 = icmp ne i32 %1, 0, !dbg !8634
  %6 = and i1 %4, %5, !dbg !8634
  br i1 %6, label %7, label %16, !dbg !8635

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8630, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i8* %9, metadata !8628, metadata !DIExpression()), !dbg !8631
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8636
  call void @llvm.dbg.value(metadata i8* %10, metadata !8628, metadata !DIExpression()), !dbg !8631
  %11 = add nuw i32 %8, 1, !dbg !8638
  call void @llvm.dbg.value(metadata i32 %11, metadata !8630, metadata !DIExpression()), !dbg !8631
  %12 = load i8, i8* %10, align 1, !dbg !8632
  %13 = icmp ne i8 %12, 0, !dbg !8633
  %14 = icmp ult i32 %11, %1, !dbg !8634
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8634
  br i1 %15, label %7, label %16, !dbg !8635, !llvm.loop !8639

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8631
  ret i32 %17, !dbg !8641
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !8642 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8646, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata i8* %1, metadata !8647, metadata !DIExpression()), !dbg !8648
  %3 = load i8, i8* %0, align 1, !dbg !8649
  %4 = load i8, i8* %1, align 1, !dbg !8650
  %5 = icmp ne i8 %3, %4, !dbg !8651
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8652
  br i1 %7, label %18, label %8, !dbg !8652

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8647, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata i8* %10, metadata !8646, metadata !DIExpression()), !dbg !8648
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8653
  call void @llvm.dbg.value(metadata i8* %11, metadata !8646, metadata !DIExpression()), !dbg !8648
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8655
  call void @llvm.dbg.value(metadata i8* %12, metadata !8647, metadata !DIExpression()), !dbg !8648
  %13 = load i8, i8* %11, align 1, !dbg !8649
  %14 = load i8, i8* %12, align 1, !dbg !8650
  %15 = icmp ne i8 %13, %14, !dbg !8651
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8652
  br i1 %17, label %18, label %8, !dbg !8652, !llvm.loop !8656

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8649
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8650
  %21 = zext i8 %19 to i32, !dbg !8659
  %22 = zext i8 %20 to i32, !dbg !8660
  %23 = sub nsw i32 %21, %22, !dbg !8661
  ret i32 %23, !dbg !8662
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8663 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8667, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %1, metadata !8668, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i32 %2, metadata !8669, metadata !DIExpression()), !dbg !8670
  %4 = icmp eq i32 %2, 0, !dbg !8671
  br i1 %4, label %23, label %5, !dbg !8671

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8669, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %7, metadata !8668, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %8, metadata !8667, metadata !DIExpression()), !dbg !8670
  %9 = load i8, i8* %8, align 1, !dbg !8672
  %10 = load i8, i8* %7, align 1, !dbg !8673
  %11 = icmp ne i8 %9, %10, !dbg !8674
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8675
  br i1 %13, label %19, label %14, !dbg !8675

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8676
  call void @llvm.dbg.value(metadata i8* %15, metadata !8667, metadata !DIExpression()), !dbg !8670
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8678
  call void @llvm.dbg.value(metadata i8* %16, metadata !8668, metadata !DIExpression()), !dbg !8670
  %17 = add i32 %6, -1, !dbg !8679
  call void @llvm.dbg.value(metadata i32 %17, metadata !8669, metadata !DIExpression()), !dbg !8670
  %18 = icmp eq i32 %17, 0, !dbg !8671
  br i1 %18, label %23, label %5, !dbg !8671, !llvm.loop !8680

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8683
  %21 = zext i8 %10 to i32, !dbg !8684
  %22 = sub nsw i32 %20, %21, !dbg !8685
  br label %23, !dbg !8686

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8686
  ret i32 %24, !dbg !8687
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !8688 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8692, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i8* %1, metadata !8693, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i8** %2, metadata !8694, metadata !DIExpression()), !dbg !8697
  %4 = icmp eq i8* %0, null, !dbg !8698
  br i1 %4, label %5, label %7, !dbg !8698

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8699
  br label %7, !dbg !8698

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8698
  call void @llvm.dbg.value(metadata i8* %8, metadata !8695, metadata !DIExpression()), !dbg !8697
  %9 = load i8, i8* %8, align 1, !dbg !8700
  %10 = icmp eq i8 %9, 0, !dbg !8700
  br i1 %10, label %33, label %11, !dbg !8701

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8695, metadata !DIExpression()), !dbg !8697
  %14 = zext i8 %12 to i32, !dbg !8700
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !8702
  %16 = icmp eq i8* %15, null, !dbg !8701
  br i1 %16, label %21, label %17, !dbg !8703

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8704
  call void @llvm.dbg.value(metadata i8* %18, metadata !8695, metadata !DIExpression()), !dbg !8697
  %19 = load i8, i8* %18, align 1, !dbg !8700
  %20 = icmp eq i8 %19, 0, !dbg !8700
  br i1 %20, label %33, label %11, !dbg !8701, !llvm.loop !8706

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8696, metadata !DIExpression()), !dbg !8697
  %24 = zext i8 %22 to i32, !dbg !8708
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !8709
  %26 = icmp eq i8* %25, null, !dbg !8710
  br i1 %26, label %27, label %31, !dbg !8711

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8712
  call void @llvm.dbg.value(metadata i8* %28, metadata !8696, metadata !DIExpression()), !dbg !8697
  %29 = load i8, i8* %28, align 1, !dbg !8708
  %30 = icmp eq i8 %29, 0, !dbg !8708
  br i1 %30, label %33, label %21, !dbg !8714, !llvm.loop !8715

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8717
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8720
  br label %33, !dbg !8721

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8697
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8697
  store i8* %34, i8** %2, align 4, !dbg !8697
  ret i8* %35, !dbg !8722
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8723 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8725, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %1, metadata !8726, metadata !DIExpression()), !dbg !8727
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8728
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8729
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !8730
  ret i8* %0, !dbg !8731
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8734, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i8* %1, metadata !8735, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i32 %2, metadata !8736, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i8* %0, metadata !8737, metadata !DIExpression()), !dbg !8739
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8740
  call void @llvm.dbg.value(metadata i32 %4, metadata !8738, metadata !DIExpression()), !dbg !8739
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8741
  call void @llvm.dbg.value(metadata i8* %5, metadata !8734, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i8* %1, metadata !8735, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i32 %2, metadata !8736, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i32 %2, metadata !8736, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8739
  %6 = icmp eq i32 %2, 0, !dbg !8742
  br i1 %6, label %18, label %7, !dbg !8743

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8744
  call void @llvm.dbg.value(metadata i8* %9, metadata !8734, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i8* %10, metadata !8735, metadata !DIExpression()), !dbg !8739
  %12 = load i8, i8* %10, align 1, !dbg !8745
  %13 = icmp eq i8 %12, 0, !dbg !8746
  br i1 %13, label %18, label %14, !dbg !8747

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8748
  call void @llvm.dbg.value(metadata i8* %15, metadata !8735, metadata !DIExpression()), !dbg !8739
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8750
  call void @llvm.dbg.value(metadata i8* %16, metadata !8734, metadata !DIExpression()), !dbg !8739
  store i8 %12, i8* %9, align 1, !dbg !8751
  call void @llvm.dbg.value(metadata i32 %11, metadata !8736, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i32 %11, metadata !8736, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8739
  %17 = icmp eq i32 %11, 0, !dbg !8742
  br i1 %17, label %18, label %7, !dbg !8743, !llvm.loop !8752

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8739
  store i8 0, i8* %19, align 1, !dbg !8754
  ret i8* %0, !dbg !8755
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8760, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i8* %1, metadata !8761, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i32 %2, metadata !8762, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i8* %0, metadata !8763, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i8* %1, metadata !8764, metadata !DIExpression()), !dbg !8765
  %4 = icmp eq i32 %2, 0, !dbg !8766
  br i1 %4, label %31, label %5, !dbg !8768

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i8* %0, metadata !8763, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i32 %2, metadata !8762, metadata !DIExpression()), !dbg !8765
  %6 = add i32 %2, -1, !dbg !8769
  call void @llvm.dbg.value(metadata i32 %6, metadata !8762, metadata !DIExpression()), !dbg !8765
  %7 = icmp eq i32 %6, 0, !dbg !8770
  br i1 %7, label %23, label %8, !dbg !8771

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8772
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8772
  br label %11, !dbg !8772

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i8* %14, metadata !8763, metadata !DIExpression()), !dbg !8765
  %15 = load i8, i8* %14, align 1, !dbg !8773
  %16 = load i8, i8* %13, align 1, !dbg !8774
  %17 = icmp eq i8 %15, %16, !dbg !8775
  br i1 %17, label %18, label %23, !dbg !8772

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8776
  call void @llvm.dbg.value(metadata i8* %19, metadata !8763, metadata !DIExpression()), !dbg !8765
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8778
  call void @llvm.dbg.value(metadata i8* %20, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i32 %12, metadata !8762, metadata !DIExpression()), !dbg !8765
  %21 = add i32 %12, -1, !dbg !8769
  call void @llvm.dbg.value(metadata i32 %21, metadata !8762, metadata !DIExpression()), !dbg !8765
  %22 = icmp eq i32 %21, 0, !dbg !8770
  br i1 %22, label %23, label %11, !dbg !8771, !llvm.loop !8779

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8765
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8765
  %26 = load i8, i8* %24, align 1, !dbg !8781
  %27 = zext i8 %26 to i32, !dbg !8781
  %28 = load i8, i8* %25, align 1, !dbg !8782
  %29 = zext i8 %28 to i32, !dbg !8782
  %30 = sub nsw i32 %27, %29, !dbg !8783
  br label %31, !dbg !8784

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8765
  ret i32 %32, !dbg !8785
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8786 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8790, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i8* %1, metadata !8791, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i32 %2, metadata !8792, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i8* %0, metadata !8793, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i8* %1, metadata !8794, metadata !DIExpression()), !dbg !8795
  %4 = ptrtoint i8* %0 to i32, !dbg !8796
  %5 = ptrtoint i8* %1 to i32, !dbg !8796
  %6 = sub i32 %4, %5, !dbg !8796
  %7 = icmp ult i32 %6, %2, !dbg !8798
  br i1 %7, label %10, label %8, !dbg !8799

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8794, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i8* %0, metadata !8793, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i32 %2, metadata !8792, metadata !DIExpression()), !dbg !8795
  %9 = icmp eq i32 %2, 0, !dbg !8800
  br i1 %9, label %26, label %17, !dbg !8802

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8792, metadata !DIExpression()), !dbg !8795
  %12 = add i32 %11, -1, !dbg !8803
  call void @llvm.dbg.value(metadata i32 %12, metadata !8792, metadata !DIExpression()), !dbg !8795
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8806
  %14 = load i8, i8* %13, align 1, !dbg !8806
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8807
  store i8 %14, i8* %15, align 1, !dbg !8808
  %16 = icmp eq i32 %12, 0, !dbg !8809
  br i1 %16, label %26, label %10, !dbg !8810, !llvm.loop !8811

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8794, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i8* %19, metadata !8793, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i32 %20, metadata !8792, metadata !DIExpression()), !dbg !8795
  %21 = load i8, i8* %18, align 1, !dbg !8813
  store i8 %21, i8* %19, align 1, !dbg !8815
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8816
  call void @llvm.dbg.value(metadata i8* %22, metadata !8793, metadata !DIExpression()), !dbg !8795
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8817
  call void @llvm.dbg.value(metadata i8* %23, metadata !8794, metadata !DIExpression()), !dbg !8795
  %24 = add i32 %20, -1, !dbg !8818
  call void @llvm.dbg.value(metadata i32 %24, metadata !8792, metadata !DIExpression()), !dbg !8795
  %25 = icmp eq i32 %24, 0, !dbg !8800
  br i1 %25, label %26, label %17, !dbg !8802, !llvm.loop !8819

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8821
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8822 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8828, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i8* %1, metadata !8829, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i32 %2, metadata !8830, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i8* %0, metadata !8831, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i8* %1, metadata !8832, metadata !DIExpression()), !dbg !8833
  %4 = icmp eq i32 %2, 0, !dbg !8834
  br i1 %4, label %14, label %5, !dbg !8835

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8832, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i8* %7, metadata !8831, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i32 %8, metadata !8830, metadata !DIExpression()), !dbg !8833
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8836
  call void @llvm.dbg.value(metadata i8* %9, metadata !8832, metadata !DIExpression()), !dbg !8833
  %10 = load i8, i8* %6, align 1, !dbg !8838
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8839
  call void @llvm.dbg.value(metadata i8* %11, metadata !8831, metadata !DIExpression()), !dbg !8833
  store i8 %10, i8* %7, align 1, !dbg !8840
  %12 = add i32 %8, -1, !dbg !8841
  call void @llvm.dbg.value(metadata i32 %12, metadata !8830, metadata !DIExpression()), !dbg !8833
  %13 = icmp eq i32 %12, 0, !dbg !8834
  br i1 %13, label %14, label %5, !dbg !8835, !llvm.loop !8842

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8844
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8845 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8849, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 %1, metadata !8850, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 %2, metadata !8851, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i8* %0, metadata !8852, metadata !DIExpression()), !dbg !8854
  %4 = trunc i32 %1 to i8, !dbg !8855
  call void @llvm.dbg.value(metadata i8 %4, metadata !8853, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 %2, metadata !8851, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i8* %0, metadata !8852, metadata !DIExpression()), !dbg !8854
  %5 = icmp eq i32 %2, 0, !dbg !8856
  br i1 %5, label %12, label %6, !dbg !8857

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8851, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i8* %8, metadata !8852, metadata !DIExpression()), !dbg !8854
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8858
  call void @llvm.dbg.value(metadata i8* %9, metadata !8852, metadata !DIExpression()), !dbg !8854
  store i8 %4, i8* %8, align 1, !dbg !8860
  %10 = add i32 %7, -1, !dbg !8861
  call void @llvm.dbg.value(metadata i32 %10, metadata !8851, metadata !DIExpression()), !dbg !8854
  %11 = icmp eq i32 %10, 0, !dbg !8856
  br i1 %11, label %12, label %6, !dbg !8857, !llvm.loop !8862

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8864
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8865 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8869, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %1, metadata !8870, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %2, metadata !8871, metadata !DIExpression()), !dbg !8875
  %4 = icmp eq i32 %2, 0, !dbg !8876
  br i1 %4, label %17, label %5, !dbg !8877

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8878

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8879
  call void @llvm.dbg.value(metadata i8* %9, metadata !8872, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.value(metadata i32 %8, metadata !8871, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i8* %9, metadata !8872, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8879
  %10 = load i8, i8* %9, align 1, !dbg !8880
  %11 = icmp eq i8 %10, %6, !dbg !8883
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8884
  call void @llvm.dbg.value(metadata i8* %12, metadata !8872, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.value(metadata i32 %13, metadata !8871, metadata !DIExpression()), !dbg !8875
  br i1 %15, label %16, label %7, !dbg !8884, !llvm.loop !8885

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8887

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8875
  ret i8* %19, !dbg !8888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !8889 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8891, metadata !DIExpression()), !dbg !8892
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8893
  ret void, !dbg !8894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #6 !dbg !8895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8897, metadata !DIExpression()), !dbg !8898
  ret i32 -1, !dbg !8899
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8904, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i32* %1, metadata !8905, metadata !DIExpression()), !dbg !8906
  %3 = ptrtoint i32* %1 to i32, !dbg !8907
  %4 = and i32 %3, -2, !dbg !8907
  %5 = icmp eq i32 %4, 2, !dbg !8907
  br i1 %5, label %6, label %9, !dbg !8907

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8908
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !8908
  br label %9, !dbg !8909

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8909
  ret i32 %10, !dbg !8910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8913, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.value(metadata i32* %1, metadata !8914, metadata !DIExpression()), !dbg !8915
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8916
  ret i32 %3, !dbg !8917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8921, metadata !DIExpression()), !dbg !8923
  call void @llvm.dbg.value(metadata i32* %1, metadata !8922, metadata !DIExpression()), !dbg !8923
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8924, !srcloc !8926
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8927
  ret i32 %3, !dbg !8928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8929 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8934, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i32* %1, metadata !8935, metadata !DIExpression()), !dbg !8938
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8939
  call void @llvm.dbg.value(metadata i32 %3, metadata !8936, metadata !DIExpression()), !dbg !8938
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !8940
  call void @llvm.dbg.value(metadata i32 %4, metadata !8937, metadata !DIExpression()), !dbg !8938
  %5 = icmp ne i32 %3, %4, !dbg !8941
  %6 = sext i1 %5 to i32, !dbg !8942
  ret i32 %6, !dbg !8943
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8944 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8948, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i32 %1, metadata !8949, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i32 %2, metadata !8950, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i32* %3, metadata !8951, metadata !DIExpression()), !dbg !8952
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8953
  ret i32 %5, !dbg !8954
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8955 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8957, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i32 %1, metadata !8958, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i32 %2, metadata !8959, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i32* %3, metadata !8960, metadata !DIExpression()), !dbg !8961
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8962, !srcloc !8964
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8965
  ret i32 %5, !dbg !8966
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8967 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8969, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %1, metadata !8970, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %2, metadata !8971, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32* %3, metadata !8972, metadata !DIExpression()), !dbg !8977
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8978
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8980
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8980
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8980
  br i1 %11, label %33, label %12, !dbg !8980

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8977
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8977
  call void @llvm.dbg.value(metadata i8* %14, metadata !8975, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %13, metadata !8973, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %1, metadata !8974, metadata !DIExpression()), !dbg !8977
  br label %15, !dbg !8981

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8983
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8977
  call void @llvm.dbg.value(metadata i8* %17, metadata !8975, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %16, metadata !8974, metadata !DIExpression()), !dbg !8977
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8984
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8987
  call void @llvm.dbg.value(metadata i8* %19, metadata !8975, metadata !DIExpression()), !dbg !8977
  %20 = load i8, i8* %17, align 1, !dbg !8988
  %21 = zext i8 %20 to i32, !dbg !8989
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !8984
  %23 = icmp eq i32 %22, -1, !dbg !8990
  br i1 %23, label %30, label %24, !dbg !8991

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %25, metadata !8974, metadata !DIExpression()), !dbg !8977
  %26 = icmp eq i32 %25, 0, !dbg !8993
  br i1 %26, label %27, label %15, !dbg !8994, !llvm.loop !8995

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8997
  call void @llvm.dbg.value(metadata i32 %28, metadata !8973, metadata !DIExpression()), !dbg !8977
  %29 = icmp eq i32 %28, 0, !dbg !8998
  br i1 %29, label %30, label %12, !dbg !8999, !llvm.loop !9000

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8977
  call void @llvm.dbg.value(metadata i32 %31, metadata !8973, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.label(metadata !8976), !dbg !9003
  %32 = sub i32 %2, %31, !dbg !9004
  br label %33, !dbg !9005

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8977
  ret i32 %34, !dbg !9006
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9007 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9011, metadata !DIExpression()), !dbg !9012
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !9013
  %3 = icmp eq i32 %2, -1, !dbg !9015
  br i1 %3, label %8, label %4, !dbg !9016

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !9017
  %6 = icmp eq i32 %5, -1, !dbg !9018
  %7 = sext i1 %6 to i32, !dbg !9017
  br label %8, !dbg !9019

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9012
  ret i32 %9, !dbg !9020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9021 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9029, metadata !DIExpression()), !dbg !9031
  %3 = tail call i64 @sys_clock_tick_get() #24, !dbg !9032
  call void @llvm.dbg.value(metadata i64 %3, metadata !9030, metadata !DIExpression()), !dbg !9031
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9033
  %5 = sub i64 %1, %3, !dbg !9033
  store i64 %5, i64* %4, align 8, !dbg !9033
  ret void, !dbg !9034
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel.15* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9035 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9181, metadata !DIExpression()), !dbg !9184
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15* %0, metadata !9179, metadata !DIExpression()), !dbg !9184
  call void @llvm.dbg.value(metadata i8* %1, metadata !9180, metadata !DIExpression()), !dbg !9184
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #24, !dbg !9185
  call void @llvm.dbg.value(metadata i64 %4, metadata !9183, metadata !DIExpression()), !dbg !9184
  %5 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 4, !dbg !9186
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !9186
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !9188
  br i1 %7, label %13, label %8, !dbg !9189

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 1, !dbg !9190
  %10 = load i16, i16* %9, align 4, !dbg !9190
  %11 = zext i16 %10 to i32, !dbg !9191
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #24, !dbg !9192
  br i1 %12, label %13, label %28, !dbg !9193

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 5, !dbg !9194
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9194
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #25, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %16, metadata !9182, metadata !DIExpression()), !dbg !9184
  %17 = icmp eq i32 %16, 0, !dbg !9196
  br i1 %17, label %18, label %28, !dbg !9198

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 3, !dbg !9199
  %20 = load i8*, i8** %19, align 4, !dbg !9199
  %21 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 1, !dbg !9200
  %22 = load i16, i16* %21, align 4, !dbg !9200
  %23 = zext i16 %22 to i32, !dbg !9201
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #24, !dbg !9202
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel.15* noundef nonnull %0, i64 noundef %4) #25, !dbg !9203
  call void @llvm.dbg.value(metadata i32 %25, metadata !9182, metadata !DIExpression()), !dbg !9184
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9204
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #25, !dbg !9205
  br label %28, !dbg !9206

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !9184
  ret i32 %29, !dbg !9207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9208 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9213, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9212, metadata !DIExpression()), !dbg !9214
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9215, !srcloc !9217
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #24, !dbg !9218
  ret i32 %3, !dbg !9219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel.15* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9220 {
  %3 = alloca %struct.zbus_channel.15*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15* %0, metadata !9224, metadata !DIExpression()), !dbg !9232
  store %struct.zbus_channel.15* %0, %struct.zbus_channel.15** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9225, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.value(metadata i32 0, metadata !9226, metadata !DIExpression()), !dbg !9232
  %5 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 6, !dbg !9233
  %6 = load %struct.zbus_observer.16**, %struct.zbus_observer.16*** %5, align 4, !dbg !9233
  call void @llvm.dbg.value(metadata %struct.zbus_observer.16** %6, metadata !9228, metadata !DIExpression()), !dbg !9234
  %7 = load %struct.zbus_observer.16*, %struct.zbus_observer.16** %6, align 4, !dbg !9235
  %8 = icmp eq %struct.zbus_observer.16* %7, null, !dbg !9237
  br i1 %8, label %31, label %16, !dbg !9238

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer.16**, %struct.zbus_observer.16*** %5, align 4, !dbg !9239
  %11 = load %struct.zbus_observer.16*, %struct.zbus_observer.16** %10, align 4, !dbg !9240
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15* %0, metadata !9224, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.value(metadata %struct.zbus_observer.16** %10, metadata !9230, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.value(metadata i32 0, metadata !9226, metadata !DIExpression()), !dbg !9232
  %12 = icmp eq %struct.zbus_observer.16* %11, null, !dbg !9243
  br i1 %12, label %31, label %13, !dbg !9244

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel.15** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !9244

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer.16* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer.16** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.16** %18, metadata !9228, metadata !DIExpression()), !dbg !9234
  %19 = getelementptr inbounds %struct.zbus_observer.16, %struct.zbus_observer.16* %17, i32 0, i32 0, !dbg !9245
  %20 = load i8, i8* %19, align 4, !dbg !9245, !range !3737
  %21 = icmp eq i8 %20, 0, !dbg !9245
  br i1 %21, label %27, label %22, !dbg !9248

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer.16, %struct.zbus_observer.16* %17, i32 0, i32 2, !dbg !9249
  %24 = load void (%struct.zbus_channel.15*)*, void (%struct.zbus_channel.15*)** %23, align 4, !dbg !9249
  %25 = icmp eq void (%struct.zbus_channel.15*)* %24, null, !dbg !9250
  br i1 %25, label %27, label %26, !dbg !9251

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15* %0, metadata !9224, metadata !DIExpression()), !dbg !9232
  tail call void %24(%struct.zbus_channel.15* noundef %0) #24, !dbg !9252
  br label %27, !dbg !9254

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer.16*, %struct.zbus_observer.16** %18, i32 1, !dbg !9255
  call void @llvm.dbg.value(metadata %struct.zbus_observer.16** %28, metadata !9228, metadata !DIExpression()), !dbg !9234
  %29 = load %struct.zbus_observer.16*, %struct.zbus_observer.16** %28, align 4, !dbg !9235
  %30 = icmp eq %struct.zbus_observer.16* %29, null, !dbg !9237
  br i1 %30, label %9, label %16, !dbg !9238, !llvm.loop !9256

31:                                               ; preds = %51, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %52, %51 ], !dbg !9232
  ret i32 %32, !dbg !9258

33:                                               ; preds = %13, %51
  %34 = phi %struct.zbus_observer.16* [ %11, %13 ], [ %54, %51 ]
  %35 = phi %struct.zbus_observer.16** [ %10, %13 ], [ %53, %51 ]
  %36 = phi i32 [ 0, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.16** %35, metadata !9230, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.value(metadata i32 %36, metadata !9226, metadata !DIExpression()), !dbg !9232
  %37 = getelementptr inbounds %struct.zbus_observer.16, %struct.zbus_observer.16* %34, i32 0, i32 0, !dbg !9259
  %38 = load i8, i8* %37, align 4, !dbg !9259, !range !3737
  %39 = icmp eq i8 %38, 0, !dbg !9259
  br i1 %39, label %51, label %40, !dbg !9262

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer.16, %struct.zbus_observer.16* %34, i32 0, i32 1, !dbg !9263
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !9263
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !9264
  br i1 %43, label %51, label %44, !dbg !9265

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #25, !dbg !9266
  %45 = load i64, i64* %15, align 8, !dbg !9268
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !9268
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15** %3, metadata !9224, metadata !DIExpression(DW_OP_deref)), !dbg !9232
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #25, !dbg !9268
  call void @llvm.dbg.value(metadata i32 %47, metadata !9227, metadata !DIExpression()), !dbg !9232
  %48 = icmp eq i32 %47, 0, !dbg !9269
  br i1 %48, label %51, label %49, !dbg !9271

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer.16*, %struct.zbus_observer.16** %35, align 4, !dbg !9272
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.62, i32 0, i32 0), i32 noundef 69, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.63, i32 0, i32 0), %struct.zbus_observer.16* noundef %50, i32 noundef %47) #24, !dbg !9272
  call void @llvm.dbg.value(metadata i32 %47, metadata !9226, metadata !DIExpression()), !dbg !9232
  br label %51, !dbg !9278

51:                                               ; preds = %33, %40, %49, %44
  %52 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !9232
  call void @llvm.dbg.value(metadata i32 %52, metadata !9226, metadata !DIExpression()), !dbg !9232
  %53 = getelementptr inbounds %struct.zbus_observer.16*, %struct.zbus_observer.16** %35, i32 1, !dbg !9279
  call void @llvm.dbg.value(metadata %struct.zbus_observer.16** %53, metadata !9230, metadata !DIExpression()), !dbg !9242
  %54 = load %struct.zbus_observer.16*, %struct.zbus_observer.16** %53, align 4, !dbg !9240
  %55 = icmp eq %struct.zbus_observer.16* %54, null, !dbg !9243
  br i1 %55, label %31, label %33, !dbg !9244, !llvm.loop !9280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9282 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9286, metadata !DIExpression()), !dbg !9287
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9288, !srcloc !9290
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #24, !dbg !9291
  ret i32 %2, !dbg !9292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9293 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9299, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9297, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.value(metadata i8* %1, metadata !9298, metadata !DIExpression()), !dbg !9300
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9301, !srcloc !9303
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #24, !dbg !9304
  ret i32 %4, !dbg !9305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel.15* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9306 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9312, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15* %0, metadata !9310, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.value(metadata i8* %1, metadata !9311, metadata !DIExpression()), !dbg !9314
  %4 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 5, !dbg !9315
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9315
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #25, !dbg !9316
  call void @llvm.dbg.value(metadata i32 %6, metadata !9313, metadata !DIExpression()), !dbg !9314
  %7 = icmp eq i32 %6, 0, !dbg !9317
  br i1 %7, label %8, label %17, !dbg !9319

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 3, !dbg !9320
  %10 = load i8*, i8** %9, align 4, !dbg !9320
  %11 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 1, !dbg !9321
  %12 = load i16, i16* %11, align 4, !dbg !9321
  %13 = zext i16 %12 to i32, !dbg !9322
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #24, !dbg !9323
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9324
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #25, !dbg !9325
  br label %17, !dbg !9326

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !9314
  ret i32 %18, !dbg !9327
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel.15* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9328 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9333, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15* %0, metadata !9332, metadata !DIExpression()), !dbg !9336
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #24, !dbg !9337
  call void @llvm.dbg.value(metadata i64 %3, metadata !9335, metadata !DIExpression()), !dbg !9336
  %4 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 5, !dbg !9338
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9338
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #25, !dbg !9339
  call void @llvm.dbg.value(metadata i32 %6, metadata !9334, metadata !DIExpression()), !dbg !9336
  %7 = icmp eq i32 %6, 0, !dbg !9340
  br i1 %7, label %8, label %12, !dbg !9342

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel.15* noundef nonnull %0, i64 noundef %3) #25, !dbg !9343
  call void @llvm.dbg.value(metadata i32 %9, metadata !9334, metadata !DIExpression()), !dbg !9336
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9344
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #25, !dbg !9345
  br label %12, !dbg !9346

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !9336
  ret i32 %13, !dbg !9347
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel.15* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9348 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9351, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15* %0, metadata !9350, metadata !DIExpression()), !dbg !9353
  %3 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 5, !dbg !9354
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !9354
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #25, !dbg !9355
  call void @llvm.dbg.value(metadata i32 %5, metadata !9352, metadata !DIExpression()), !dbg !9353
  ret i32 %5, !dbg !9356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel.15* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9357 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15* %0, metadata !9361, metadata !DIExpression()), !dbg !9363
  %2 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 5, !dbg !9364
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !9364
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #25, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %4, metadata !9362, metadata !DIExpression()), !dbg !9363
  ret i32 %4, !dbg !9366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer.16* nocapture noundef readonly %0, %struct.zbus_channel.15** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9367 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9374, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata %struct.zbus_observer.16* %0, metadata !9372, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15** %1, metadata !9373, metadata !DIExpression()), !dbg !9375
  %4 = getelementptr inbounds %struct.zbus_observer.16, %struct.zbus_observer.16* %0, i32 0, i32 1, !dbg !9376
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !9376
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !9378
  br i1 %6, label %10, label %7, !dbg !9379

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel.15** %1 to i8*, !dbg !9380
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #25, !dbg !9381
  br label %10, !dbg !9382

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !9375
  ret i32 %11, !dbg !9383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9384 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9390, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9388, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.value(metadata i8* %1, metadata !9389, metadata !DIExpression()), !dbg !9391
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9392, !srcloc !9394
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #24, !dbg !9395
  ret i32 %4, !dbg !9396
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9397 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9399, metadata !DIExpression()), !dbg !9400
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !9401
  br i1 %2, label %3, label %4, !dbg !9403

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !9404
  br label %4, !dbg !9405

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9400
  ret i32 %5, !dbg !9406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9407 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9412, metadata !DIExpression()), !dbg !9413
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9414, !srcloc !9416
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !9417
  ret i1 %1, !dbg !9418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9419 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9420
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9421
  ret void, !dbg !9422
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9425, metadata !DIExpression()), !dbg !9426
  %2 = icmp eq i32 %0, 10, !dbg !9427
  br i1 %2, label %3, label %4, !dbg !9429

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out.71(i8 noundef zeroext 13) #25, !dbg !9430
  br label %4, !dbg !9432

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9433
  tail call fastcc void @uart_poll_out.71(i8 noundef zeroext %5) #25, !dbg !9434
  ret i32 %0, !dbg !9435
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.71(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9436 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9438, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.value(metadata i8 %0, metadata !9439, metadata !DIExpression()), !dbg !9440
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9441, !srcloc !9443
  tail call fastcc void @z_impl_uart_poll_out.72(i8 noundef zeroext %0) #25, !dbg !9444
  ret void, !dbg !9445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.72(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9446 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9448, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i8 %0, metadata !9449, metadata !DIExpression()), !dbg !9451
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9452
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9450, metadata !DIExpression()), !dbg !9451
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9453
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9453
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #24, !dbg !9454
  ret void, !dbg !9455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9456 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9458, metadata !DIExpression()), !dbg !9459
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !9460
  ret i1 %1, !dbg !9461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #6 !dbg !9462 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9509, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9510, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9511, metadata !DIExpression()), !dbg !9512
  ret void, !dbg !9513
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9514 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9516, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i8 %1, metadata !9517, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %2, metadata !9518, metadata !DIExpression()), !dbg !9529
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9530
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !9530
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !9530
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !9519, metadata !DIExpression()), !dbg !9529
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !9531
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9531
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !9521, metadata !DIExpression()), !dbg !9529
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !9532
  %13 = icmp eq i32 %12, 196608, !dbg !9532
  br i1 %13, label %66, label %14, !dbg !9532

14:                                               ; preds = %3
  %15 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !9534
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #23, !dbg !9534
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !9522, metadata !DIExpression()), !dbg !9535
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !9536
  %17 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %16, align 4, !dbg !9536
  %18 = zext i8 %1 to i32, !dbg !9537
  %19 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, i32 1, !dbg !9538
  %20 = load i32, i32* %19, align 4, !dbg !9538
  %21 = inttoptr i32 %20 to i32*, !dbg !9539
  call void @llvm.dbg.value(metadata i32* %21, metadata !9527, metadata !DIExpression()), !dbg !9529
  %22 = load volatile i32, i32* %21, align 4, !dbg !9540
  call void @llvm.dbg.value(metadata i32 %22, metadata !9528, metadata !DIExpression()), !dbg !9529
  %23 = and i32 %2, 2, !dbg !9541
  %24 = icmp eq i32 %23, 0, !dbg !9543
  br i1 %24, label %25, label %64, !dbg !9544

25:                                               ; preds = %14
  %26 = and i32 %2, 48, !dbg !9545
  %27 = icmp eq i32 %26, 0, !dbg !9545
  br i1 %27, label %36, label %28, !dbg !9545

28:                                               ; preds = %25
  %29 = and i32 %2, 16, !dbg !9547
  %30 = icmp eq i32 %29, 0, !dbg !9548
  call void @llvm.dbg.value(metadata i32 %22, metadata !9528, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !9529
  br i1 %30, label %33, label %31, !dbg !9549

31:                                               ; preds = %28
  %32 = or i32 %22, 48, !dbg !9551
  call void @llvm.dbg.value(metadata i32 %32, metadata !9528, metadata !DIExpression()), !dbg !9529
  br label %38, !dbg !9554

33:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %22, metadata !9528, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !9529
  %34 = and i32 %22, -49, !dbg !9555
  %35 = or i32 %34, 16, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %35, metadata !9528, metadata !DIExpression()), !dbg !9529
  br label %38

36:                                               ; preds = %25
  %37 = and i32 %22, -17, !dbg !9557
  call void @llvm.dbg.value(metadata i32 %37, metadata !9528, metadata !DIExpression()), !dbg !9529
  br label %38

38:                                               ; preds = %31, %33, %36
  %39 = phi i32 [ %32, %31 ], [ %35, %33 ], [ %37, %36 ], !dbg !9559
  call void @llvm.dbg.value(metadata i32 %39, metadata !9528, metadata !DIExpression()), !dbg !9529
  %40 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, !dbg !9560
  %41 = bitcast %struct.pinctrl_soc_pinmux* %40 to i8*, !dbg !9561
  %42 = call i8* @memcpy(i8* noundef nonnull %15, i8* noundef %41, i32 noundef 20) #24, !dbg !9562
  %43 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !9563
  store i32 %39, i32* %43, align 4, !dbg !9564
  %44 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #24, !dbg !9565
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #24, !dbg !9566
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #24, !dbg !9567
  br i1 %11, label %58, label %45, !dbg !9568

45:                                               ; preds = %38
  %46 = and i32 %2, 262144, !dbg !9569
  %47 = icmp eq i32 %46, 0, !dbg !9573
  br i1 %47, label %48, label %51, !dbg !9574

48:                                               ; preds = %45
  %49 = and i32 %2, 524288, !dbg !9575
  %50 = icmp eq i32 %49, 0, !dbg !9577
  br i1 %50, label %53, label %51, !dbg !9578

51:                                               ; preds = %48, %45
  %52 = phi i32 [ 0, %45 ], [ 1, %48 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %18, i32 noundef %52) #24, !dbg !9579
  br label %53, !dbg !9580

53:                                               ; preds = %51, %48
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9580
  %55 = load volatile i32, i32* %54, align 4, !dbg !9580
  %56 = shl nuw i32 1, %18, !dbg !9580
  %57 = or i32 %55, %56, !dbg !9580
  store volatile i32 %57, i32* %54, align 4, !dbg !9580
  br label %64, !dbg !9581

58:                                               ; preds = %38
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9582
  %60 = load volatile i32, i32* %59, align 4, !dbg !9582
  %61 = shl nuw i32 1, %18, !dbg !9582
  %62 = xor i32 %61, -1, !dbg !9582
  %63 = and i32 %60, %62, !dbg !9582
  store volatile i32 %63, i32* %59, align 4, !dbg !9582
  br label %64

64:                                               ; preds = %53, %58, %14
  %65 = phi i32 [ -134, %14 ], [ 0, %58 ], [ 0, %53 ], !dbg !9529
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #23, !dbg !9584
  br label %66

66:                                               ; preds = %3, %64
  %67 = phi i32 [ %65, %64 ], [ -134, %3 ], !dbg !9529
  ret i32 %67, !dbg !9584
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !9585 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9589, metadata !DIExpression()), !dbg !9593
  call void @llvm.dbg.value(metadata i32* %1, metadata !9590, metadata !DIExpression()), !dbg !9593
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9594
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9594
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9594
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9591, metadata !DIExpression()), !dbg !9593
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9595
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9595
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9592, metadata !DIExpression()), !dbg !9593
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !9596
  store i32 %8, i32* %1, align 4, !dbg !9597
  ret i32 0, !dbg !9598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !9599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9601, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.value(metadata i32 %2, metadata !9603, metadata !DIExpression()), !dbg !9606
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9607
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !9607
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !9607
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !9604, metadata !DIExpression()), !dbg !9606
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !9608
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !9608
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !9605, metadata !DIExpression()), !dbg !9606
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #25, !dbg !9609
  %10 = xor i32 %1, -1, !dbg !9610
  %11 = and i32 %9, %10, !dbg !9611
  %12 = and i32 %2, %1, !dbg !9612
  %13 = or i32 %11, %12, !dbg !9613
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #25, !dbg !9614
  ret i32 0, !dbg !9615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9618, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i32 %1, metadata !9619, metadata !DIExpression()), !dbg !9622
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9623
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9623
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9623
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9620, metadata !DIExpression()), !dbg !9622
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9624
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9624
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9621, metadata !DIExpression()), !dbg !9622
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !9625
  %9 = or i32 %8, %1, !dbg !9626
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #25, !dbg !9627
  ret i32 0, !dbg !9628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9629 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9631, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i32 %1, metadata !9632, metadata !DIExpression()), !dbg !9635
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9636
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9636
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9636
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9633, metadata !DIExpression()), !dbg !9635
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9637
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9637
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9634, metadata !DIExpression()), !dbg !9635
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !9638
  %9 = xor i32 %1, -1, !dbg !9639
  %10 = and i32 %8, %9, !dbg !9640
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #25, !dbg !9641
  ret i32 0, !dbg !9642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9643 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9645, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.value(metadata i32 %1, metadata !9646, metadata !DIExpression()), !dbg !9649
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9650
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9650
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9650
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9647, metadata !DIExpression()), !dbg !9649
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9651
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9651
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9648, metadata !DIExpression()), !dbg !9649
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !9652
  %9 = xor i32 %8, %1, !dbg !9653
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #25, !dbg !9654
  ret i32 0, !dbg !9655
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9656 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9658, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i8 %1, metadata !9659, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32 %2, metadata !9660, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32 %3, metadata !9661, metadata !DIExpression()), !dbg !9668
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9669
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !9669
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !9669
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !9662, metadata !DIExpression()), !dbg !9668
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !9670
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9670
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !9663, metadata !DIExpression()), !dbg !9668
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9671
  %11 = load volatile i32, i32* %10, align 4, !dbg !9671
  %12 = zext i8 %1 to i32, !dbg !9673
  %13 = shl nuw i32 1, %12, !dbg !9673
  %14 = and i32 %11, %13, !dbg !9674
  %15 = icmp ne i32 %14, 0, !dbg !9675
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !9676
  br i1 %17, label %77, label %18, !dbg !9676

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !9677
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !9679
  br i1 %21, label %29, label %22, !dbg !9679

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !9680
  br i1 %24, label %29, label %25, !dbg !9680

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !9682
  %27 = and i1 %26, %23, !dbg !9684
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !9685
  call void @llvm.dbg.value(metadata i32 %30, metadata !9666, metadata !DIExpression()), !dbg !9668
  %31 = icmp ult i8 %1, 16, !dbg !9686
  br i1 %31, label %32, label %35, !dbg !9688

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !9689
  call void @llvm.dbg.value(metadata i8 %33, metadata !9667, metadata !DIExpression()), !dbg !9668
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !9691
  call void @llvm.dbg.value(metadata i32* %34, metadata !9664, metadata !DIExpression()), !dbg !9668
  br label %41, !dbg !9692

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !9693
  br i1 %36, label %37, label %77, !dbg !9695

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !9696
  %39 = add nsw i8 %38, -32, !dbg !9696
  call void @llvm.dbg.value(metadata i8 %39, metadata !9667, metadata !DIExpression()), !dbg !9668
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !9698
  call void @llvm.dbg.value(metadata i32* %40, metadata !9664, metadata !DIExpression()), !dbg !9668
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !9699
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !9699
  call void @llvm.dbg.value(metadata i8 %43, metadata !9667, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32* %42, metadata !9664, metadata !DIExpression()), !dbg !9668
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9700, !srcloc !9708
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !9700
  call void @llvm.dbg.value(metadata i32 %45, metadata !9705, metadata !DIExpression()) #23, !dbg !9709
  call void @llvm.dbg.value(metadata i32 undef, metadata !9706, metadata !DIExpression()) #23, !dbg !9709
  call void @llvm.dbg.value(metadata i32 %45, metadata !9665, metadata !DIExpression()), !dbg !9668
  %46 = load volatile i32, i32* %42, align 4, !dbg !9710
  %47 = zext i8 %43 to i32, !dbg !9711
  %48 = shl nuw i32 3, %47, !dbg !9712
  %49 = xor i32 %48, -1, !dbg !9713
  %50 = and i32 %46, %49, !dbg !9714
  %51 = shl nuw i32 %30, %47, !dbg !9715
  %52 = or i32 %50, %51, !dbg !9716
  store volatile i32 %52, i32* %42, align 4, !dbg !9717
  %53 = icmp eq i32 %3, 100663296, !dbg !9718
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !9718
  %55 = load volatile i32, i32* %54, align 4, !dbg !9718
  %56 = or i32 %55, %13, !dbg !9718
  %57 = xor i32 %13, -1, !dbg !9718
  %58 = and i32 %55, %57, !dbg !9718
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !9718
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !9718
  store volatile i32 %59, i32* %60, align 4, !dbg !9718
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !9719
  %62 = load volatile i32, i32* %61, align 4, !dbg !9719
  br i1 %16, label %63, label %68, !dbg !9719

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !9719
  store volatile i32 %64, i32* %61, align 4, !dbg !9719
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9720
  %66 = load volatile i32, i32* %65, align 4, !dbg !9720
  %67 = or i32 %66, %13, !dbg !9720
  br label %74, !dbg !9720

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !9719
  %70 = and i32 %62, %69, !dbg !9719
  store volatile i32 %70, i32* %61, align 4, !dbg !9719
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9720
  %72 = load volatile i32, i32* %71, align 4, !dbg !9720
  %73 = and i32 %72, %69, !dbg !9720
  br label %74, !dbg !9720

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !9720
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9720
  store volatile i32 %75, i32* %76, align 4, !dbg !9720
  call void @llvm.dbg.value(metadata i32 %45, metadata !9721, metadata !DIExpression()) #23, !dbg !9724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #23, !dbg !9726, !srcloc !9727
  br label %77, !dbg !9728

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !9668
  ret i32 %78, !dbg !9729
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #15 !dbg !9730 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9732, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9733, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.value(metadata i1 %2, metadata !9734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9737
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9738
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !9738
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !9738
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !9735, metadata !DIExpression()), !dbg !9737
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !9739
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !9740
  ret i32 %8, !dbg !9741
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #15 !dbg !9742 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9748, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9749, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata i1 %2, metadata !9750, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9751
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !9752
  br i1 %4, label %10, label %5, !dbg !9754

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9755
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #25, !dbg !9758
  %8 = or i1 %7, %2, !dbg !9759
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9759
  br i1 %2, label %11, label %13, !dbg !9759

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9760

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9761
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #25, !dbg !9764
  br label %13, !dbg !9765

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9751
  ret i32 %14, !dbg !9766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9767 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9771, metadata !DIExpression()), !dbg !9772
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9773
  %3 = icmp eq %struct._snode* %2, null, !dbg !9773
  ret i1 %3, !dbg !9773
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !9774 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9778, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9779, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9780, metadata !DIExpression()), !dbg !9782
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9783
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9781, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9780, metadata !DIExpression()), !dbg !9782
  %4 = icmp eq %struct._snode* %3, null, !dbg !9785
  br i1 %4, label %15, label %5, !dbg !9783

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9781, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9780, metadata !DIExpression()), !dbg !9782
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9787
  br i1 %6, label %9, label %11, !dbg !9790

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9781, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9780, metadata !DIExpression()), !dbg !9782
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9787
  br i1 %8, label %9, label %11, !dbg !9790, !llvm.loop !9791

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !9792
  br label %15, !dbg !9792

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9781, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9780, metadata !DIExpression()), !dbg !9782
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !9785
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9781, metadata !DIExpression()), !dbg !9782
  %14 = icmp eq %struct._snode* %13, null, !dbg !9785
  br i1 %14, label %15, label %7, !dbg !9783, !llvm.loop !9791

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !9795 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9799, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9800, metadata !DIExpression()), !dbg !9801
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9802
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !9802
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !9802
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9803
  %5 = icmp eq %struct._snode* %4, null, !dbg !9803
  br i1 %5, label %6, label %8, !dbg !9802

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9805
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !9805
  br label %8, !dbg !9805

8:                                                ; preds = %6, %2
  ret void, !dbg !9802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9807 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9811, metadata !DIExpression()), !dbg !9812
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9813
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9813
  ret %struct._snode* %3, !dbg !9814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9815 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9819, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9820, metadata !DIExpression()), !dbg !9821
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9822
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9823
  ret void, !dbg !9824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9825 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9827, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9828, metadata !DIExpression()), !dbg !9829
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9830
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9831
  ret void, !dbg !9832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9833 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9835, metadata !DIExpression()), !dbg !9836
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9837
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9837
  ret %struct._snode* %3, !dbg !9838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9839 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9841, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9842, metadata !DIExpression()), !dbg !9843
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9844
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9845
  ret void, !dbg !9846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !9847 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9851, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9852, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9853, metadata !DIExpression()), !dbg !9854
  %4 = icmp eq %struct._snode* %1, null, !dbg !9855
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !9857
  br i1 %4, label %6, label %11, !dbg !9858

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !9859
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9861
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9861
  br i1 %8, label %9, label %15, !dbg !9859

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9863
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !9863
  br label %15, !dbg !9863

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !9865
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9867
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9867
  br i1 %13, label %14, label %15, !dbg !9865

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !9869
  br label %15, !dbg !9869

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !9858
  ret void, !dbg !9858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9871 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9875, metadata !DIExpression()), !dbg !9876
  %2 = icmp eq %struct._snode* %0, null, !dbg !9877
  br i1 %2, label %5, label %3, !dbg !9877

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !9877
  br label %5, !dbg !9877

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9877
  ret %struct._snode* %6, !dbg !9877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9878 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9880, metadata !DIExpression()), !dbg !9881
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !9882
  ret %struct._snode* %2, !dbg !9882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9883 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9885, metadata !DIExpression()), !dbg !9886
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9887
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9887
  ret %struct._snode* %3, !dbg !9888
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #17 !dbg !9889 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9893, metadata !DIExpression()), !dbg !9894
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9895
  %3 = load volatile i32, i32* %2, align 4, !dbg !9895
  ret i32 %3, !dbg !9896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9897 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9901, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.value(metadata i32 %1, metadata !9902, metadata !DIExpression()), !dbg !9903
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9904
  store volatile i32 %1, i32* %3, align 4, !dbg !9905
  ret void, !dbg !9906
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !9907 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9911, metadata !DIExpression()), !dbg !9915
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9916
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !9916
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !9916
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !9912, metadata !DIExpression()), !dbg !9915
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9917
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !9917
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !9917
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !9913, metadata !DIExpression()), !dbg !9915
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !9918
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9918
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !9919
  %11 = load volatile i32, i32* %10, align 4, !dbg !9919
  call void @llvm.dbg.value(metadata i32 %11, metadata !9914, metadata !DIExpression()), !dbg !9915
  store volatile i32 %11, i32* %10, align 4, !dbg !9920
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !9921
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #25, !dbg !9922
  ret void, !dbg !9923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9924 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9928, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9929, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.value(metadata i32 %2, metadata !9930, metadata !DIExpression()), !dbg !9933
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9934
  %5 = icmp eq %struct._snode* %4, null, !dbg !9934
  br i1 %5, label %21, label %6, !dbg !9934

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !9936
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9932, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9931, metadata !DIExpression()), !dbg !9933
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9937
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9937
  %11 = load i32, i32* %10, align 4, !dbg !9937
  %12 = and i32 %11, %2, !dbg !9941
  %13 = icmp eq i32 %12, 0, !dbg !9941
  br i1 %13, label %19, label %14, !dbg !9942

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9931, metadata !DIExpression()), !dbg !9933
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9943
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9943
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9943
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !9945
  br label %19, !dbg !9946

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9931, metadata !DIExpression()), !dbg !9933
  %20 = icmp eq %struct._snode* %8, null, !dbg !9947
  br i1 %20, label %21, label %6, !dbg !9947

21:                                               ; preds = %19, %3
  ret void, !dbg !9948
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1597 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1599, metadata !DIExpression()), !dbg !9949
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #24, !dbg !9950
  tail call void @arch_irq_enable(i32 noundef 64) #24, !dbg !9952
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #24, !dbg !9953
  tail call void @arch_irq_enable(i32 noundef 65) #24, !dbg !9952
  ret i32 0, !dbg !9952
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !9955 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9957, metadata !DIExpression()), !dbg !9961
  call void @llvm.dbg.value(metadata i8* %1, metadata !9958, metadata !DIExpression()), !dbg !9961
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9962
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9962
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9962
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9962
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9962
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9959, metadata !DIExpression()), !dbg !9961
  call void @llvm.dbg.value(metadata i32 -1, metadata !9960, metadata !DIExpression()), !dbg !9961
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #25, !dbg !9963
  br i1 %8, label %9, label %13, !dbg !9965

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #25, !dbg !9966
  store i8 %10, i8* %1, align 1, !dbg !9968
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #25, !dbg !9969
  br i1 %11, label %12, label %13, !dbg !9971

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #24, !dbg !9972
  br label %13, !dbg !9974

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !9961
  call void @llvm.dbg.value(metadata i32 %14, metadata !9960, metadata !DIExpression()), !dbg !9961
  ret i32 %14, !dbg !9975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #16 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9978, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.value(metadata i8 %1, metadata !9979, metadata !DIExpression()), !dbg !9981
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9982
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9982
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9982
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9982
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9982
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9980, metadata !DIExpression()), !dbg !9981
  br label %8, !dbg !9983

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #25, !dbg !9984
  br i1 %9, label %10, label %8, !dbg !9983, !llvm.loop !9985

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #25, !dbg !9987
  ret void, !dbg !9988
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #16 !dbg !9989 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9991, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i8* %1, metadata !9992, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 %2, metadata !9993, metadata !DIExpression()), !dbg !9996
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9997
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !9997
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !9997
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !9997
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !9997
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !9994, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 0, metadata !9995, metadata !DIExpression()), !dbg !9996
  %9 = icmp eq i32 %2, 0, !dbg !9998
  br i1 %9, label %18, label %10, !dbg !9999

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9995, metadata !DIExpression()), !dbg !9996
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #25, !dbg !10000
  br i1 %12, label %13, label %18, !dbg !10001

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !10002
  %15 = load i8, i8* %14, align 1, !dbg !10002
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #25, !dbg !10004
  %16 = add nuw i32 %11, 1, !dbg !10005
  call void @llvm.dbg.value(metadata i32 %16, metadata !9995, metadata !DIExpression()), !dbg !9996
  %17 = icmp eq i32 %16, %2, !dbg !9998
  br i1 %17, label %18, label %10, !dbg !9999, !llvm.loop !10006

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !9996
  ret i32 %19, !dbg !10008
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !10009 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10011, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata i8* %1, metadata !10012, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata i32 %2, metadata !10013, metadata !DIExpression()), !dbg !10016
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10017
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !10017
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !10017
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !10017
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !10017
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !10014, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata i32 0, metadata !10015, metadata !DIExpression()), !dbg !10016
  %9 = icmp eq i32 %2, 0, !dbg !10018
  br i1 %9, label %18, label %10, !dbg !10019

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10015, metadata !DIExpression()), !dbg !10016
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #25, !dbg !10020
  br i1 %12, label %13, label %18, !dbg !10021

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #25, !dbg !10022
  %15 = add nuw i32 %11, 1, !dbg !10024
  call void @llvm.dbg.value(metadata i32 %15, metadata !10015, metadata !DIExpression()), !dbg !10016
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !10025
  store i8 %14, i8* %16, align 1, !dbg !10026
  %17 = icmp eq i32 %15, %2, !dbg !10018
  br i1 %17, label %18, label %10, !dbg !10019, !llvm.loop !10027

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !10016
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #25, !dbg !10029
  br i1 %20, label %21, label %22, !dbg !10031

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #24, !dbg !10032
  br label %22, !dbg !10034

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !10035
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10036 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10038, metadata !DIExpression()), !dbg !10040
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10041
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10041
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10041
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10041
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10041
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10039, metadata !DIExpression()), !dbg !10040
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #24, !dbg !10042
  ret void, !dbg !10043
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10046, metadata !DIExpression()), !dbg !10048
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10049
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10049
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10049
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10049
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10049
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10047, metadata !DIExpression()), !dbg !10048
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #24, !dbg !10050
  ret void, !dbg !10051
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10052 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10054, metadata !DIExpression()), !dbg !10056
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10057
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10057
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10057
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10057
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10057
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10055, metadata !DIExpression()), !dbg !10056
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #25, !dbg !10058
  %8 = zext i1 %7 to i32, !dbg !10058
  ret i32 %8, !dbg !10059
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10060 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10062, metadata !DIExpression()), !dbg !10064
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10065
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10065
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10065
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10065
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10065
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10063, metadata !DIExpression()), !dbg !10064
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #24, !dbg !10066
  ret void, !dbg !10067
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10068 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10070, metadata !DIExpression()), !dbg !10072
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10073
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10073
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10073
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10073
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10073
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10071, metadata !DIExpression()), !dbg !10072
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #24, !dbg !10074
  ret void, !dbg !10075
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10076 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10078, metadata !DIExpression()), !dbg !10080
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10081
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10081
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10081
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10081
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10081
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10079, metadata !DIExpression()), !dbg !10080
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #25, !dbg !10082
  %8 = zext i1 %7 to i32, !dbg !10082
  ret i32 %8, !dbg !10083
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10084 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10086, metadata !DIExpression()), !dbg !10088
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10089
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10089
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10089
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10089
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10089
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10087, metadata !DIExpression()), !dbg !10088
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #24, !dbg !10090
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #24, !dbg !10091
  ret void, !dbg !10092
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10093 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10095, metadata !DIExpression()), !dbg !10097
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10098
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10098
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10098
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10098
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10098
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10096, metadata !DIExpression()), !dbg !10097
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #24, !dbg !10099
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #24, !dbg !10100
  ret void, !dbg !10101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !10102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10104, metadata !DIExpression()), !dbg !10106
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10107
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10107
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10107
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10107
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10107
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10105, metadata !DIExpression()), !dbg !10106
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #25, !dbg !10108
  br i1 %7, label %11, label %8, !dbg !10109

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #25, !dbg !10110
  %10 = zext i1 %9 to i32, !dbg !10109
  br label %11, !dbg !10109

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !10111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #6 !dbg !10112 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10114, metadata !DIExpression()), !dbg !10115
  ret i32 1, !dbg !10116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #10 !dbg !10117 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10119, metadata !DIExpression()), !dbg !10124
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10120, metadata !DIExpression()), !dbg !10124
  call void @llvm.dbg.value(metadata i8* %2, metadata !10121, metadata !DIExpression()), !dbg !10124
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10125
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !10125
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !10125
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !10122, metadata !DIExpression()), !dbg !10124
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !10126
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10127
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !10128
  store i8* %2, i8** %8, align 4, !dbg !10129
  ret void, !dbg !10130
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10131 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10135, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i32 %1, metadata !10136, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i32* null, metadata !10137, metadata !DIExpression()), !dbg !10138
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10139
  %4 = lshr i32 %1, 16, !dbg !10140
  %5 = add i32 %4, %3, !dbg !10141
  %6 = inttoptr i32 %5 to i32*, !dbg !10142
  call void @llvm.dbg.value(metadata i32* %6, metadata !10137, metadata !DIExpression()), !dbg !10138
  %7 = load volatile i32, i32* %6, align 4, !dbg !10143
  %8 = and i32 %1, 65535, !dbg !10144
  %9 = shl nuw i32 1, %8, !dbg !10145
  %10 = and i32 %7, %9, !dbg !10145
  %11 = icmp ne i32 %10, 0, !dbg !10145
  ret i1 %11, !dbg !10146
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #17 !dbg !10147 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10151, metadata !DIExpression()), !dbg !10152
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !10153
  %3 = load volatile i32, i32* %2, align 4, !dbg !10153
  %4 = trunc i32 %3 to i8, !dbg !10154
  ret i8 %4, !dbg !10155
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !10156 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10160, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.value(metadata i8 %1, metadata !10161, metadata !DIExpression()), !dbg !10162
  %3 = zext i8 %1 to i32, !dbg !10163
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !10164
  store volatile i32 %3, i32* %4, align 4, !dbg !10165
  ret void, !dbg !10166
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1888 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1890, metadata !DIExpression()), !dbg !10167
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #24, !dbg !10168
  tail call void @arch_irq_enable(i32 noundef 26) #24, !dbg !10170
  ret void, !dbg !10170
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !10171 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10173, metadata !DIExpression()), !dbg !10175
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10176
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !10176
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !10176
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !10174, metadata !DIExpression()), !dbg !10175
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !10177
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10177
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10179
  br i1 %7, label %11, label %8, !dbg !10180

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !10181
  %10 = load i8*, i8** %9, align 4, !dbg !10181
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #24, !dbg !10183
  br label %11, !dbg !10184

11:                                               ; preds = %8, %1
  ret void, !dbg !10185
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !10186 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10188, metadata !DIExpression()), !dbg !10203
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10204
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10204
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10204
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10204
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10204
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10189, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !10190, metadata !DIExpression()), !dbg !10203
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10205, !srcloc !10211
  call void @llvm.dbg.value(metadata i32 undef, metadata !10208, metadata !DIExpression()) #23, !dbg !10212
  call void @llvm.dbg.value(metadata i32 undef, metadata !10209, metadata !DIExpression()) #23, !dbg !10212
  call void @llvm.dbg.value(metadata i32 undef, metadata !10191, metadata !DIExpression()), !dbg !10203
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !10213
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #23, !dbg !10213
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !10193, metadata !DIExpression()), !dbg !10214
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !10215
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !10216
  %12 = load i32, i32* %11, align 4, !dbg !10216
  store i32 %12, i32* %10, align 4, !dbg !10215
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !10215
  store i32 32, i32* %13, align 4, !dbg !10215
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !10215
  store i32 0, i32* %14, align 4, !dbg !10215
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !10215
  store i32 0, i32* %15, align 4, !dbg !10215
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !10215
  store i32 6, i32* %16, align 4, !dbg !10215
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !10217
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !10217
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #25, !dbg !10218
  call void @llvm.dbg.value(metadata i32 %19, metadata !10192, metadata !DIExpression()), !dbg !10203
  %20 = icmp eq i32 %19, 0, !dbg !10219
  br i1 %20, label %21, label %30, !dbg !10221

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !10215
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !10205
  call void @llvm.dbg.value(metadata i32 %23, metadata !10208, metadata !DIExpression()) #23, !dbg !10212
  call void @llvm.dbg.value(metadata i32 %23, metadata !10191, metadata !DIExpression()), !dbg !10203
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #24, !dbg !10222
  store i32 %24, i32* %22, align 4, !dbg !10223
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #24, !dbg !10224
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #25, !dbg !10225
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #25, !dbg !10226
  call void @llvm.dbg.value(metadata i32 undef, metadata !10227, metadata !DIExpression()) #23, !dbg !10230
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !10232, !srcloc !10233
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !10234
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !10234
  call void %26(%struct.device* noundef nonnull %0) #24, !dbg !10235
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !10236
  %28 = load i8, i8* %27, align 4, !dbg !10236
  %29 = zext i8 %28 to i32, !dbg !10237
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #24, !dbg !10238
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #25, !dbg !10239
  br label %30, !dbg !10240

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #23, !dbg !10241
  ret i32 %19, !dbg !10241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10242 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10246, metadata !DIExpression()), !dbg !10250
  call void @llvm.dbg.value(metadata i8 0, metadata !10247, metadata !DIExpression()), !dbg !10250
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10251
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10251
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10249, metadata !DIExpression(DW_OP_deref)), !dbg !10250
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !10252
  call void @llvm.dbg.value(metadata i32 %4, metadata !10248, metadata !DIExpression()), !dbg !10250
  %5 = icmp slt i32 %4, 0, !dbg !10253
  br i1 %5, label %9, label %6, !dbg !10255

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10256
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10249, metadata !DIExpression()), !dbg !10250
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !10257
  br label %9, !dbg !10258

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10250
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10259
  ret i32 %10, !dbg !10259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !10260 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10262, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata i8 2, metadata !10263, metadata !DIExpression()), !dbg !10264
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10265
  %3 = load volatile i32, i32* %2, align 4, !dbg !10265
  %4 = and i32 %3, -64513, !dbg !10266
  %5 = or i32 %4, 2048, !dbg !10267
  store volatile i32 %5, i32* %2, align 4, !dbg !10268
  ret void, !dbg !10269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !10270 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10272, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i8 1, metadata !10273, metadata !DIExpression()), !dbg !10274
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10275
  %3 = load volatile i32, i32* %2, align 4, !dbg !10275
  %4 = and i32 %3, -64, !dbg !10276
  %5 = or i32 %4, 1, !dbg !10277
  store volatile i32 %5, i32* %2, align 4, !dbg !10278
  ret void, !dbg !10279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !10280 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10284, metadata !DIExpression()), !dbg !10285
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10286
  %3 = load volatile i32, i32* %2, align 4, !dbg !10287
  %4 = or i32 %3, 1, !dbg !10287
  store volatile i32 %4, i32* %2, align 4, !dbg !10287
  ret void, !dbg !10288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10289 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10293, metadata !DIExpression()), !dbg !10296
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10294, metadata !DIExpression()), !dbg !10296
  call void @llvm.dbg.value(metadata i32 0, metadata !10295, metadata !DIExpression()), !dbg !10296
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10297
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !10297
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10298
  %5 = load i8, i8* %4, align 4, !dbg !10298
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !10299
  ret i32 %6, !dbg !10300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !10301 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10303, metadata !DIExpression()), !dbg !10304
  tail call fastcc void @__NVIC_SetPriority.80() #25, !dbg !10305
  store i32 19999, i32* @last_load, align 4, !dbg !10306
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10307
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10308
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10309
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10310
  %3 = or i32 %2, 7, !dbg !10310
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10310
  ret i32 0, !dbg !10311
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.80() unnamed_addr #16 !dbg !10312 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10314, metadata !DIExpression()), !dbg !10316
  call void @llvm.dbg.value(metadata i32 1, metadata !10315, metadata !DIExpression()), !dbg !10316
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10317
  ret void, !dbg !10320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10321 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10323, metadata !DIExpression()), !dbg !10325
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !10326
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10327
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10328
  %5 = add i32 %4, %3, !dbg !10328
  store i32 %5, i32* @cycle_count, align 4, !dbg !10328
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10329
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10330
  %7 = sub i32 %5, %6, !dbg !10333
  %8 = udiv i32 %7, 20000, !dbg !10334
  call void @llvm.dbg.value(metadata i32 %8, metadata !10324, metadata !DIExpression()), !dbg !10325
  %9 = mul nuw i32 %8, 20000, !dbg !10335
  %10 = add i32 %9, %6, !dbg !10336
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10336
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !10337
  tail call void @z_arm_int_exit() #24, !dbg !10338
  ret void, !dbg !10339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !10340 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10345
  call void @llvm.dbg.value(metadata i32 %1, metadata !10342, metadata !DIExpression()), !dbg !10346
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10347
  call void @llvm.dbg.value(metadata i32 %2, metadata !10343, metadata !DIExpression()), !dbg !10346
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10348
  call void @llvm.dbg.value(metadata i32 %3, metadata !10344, metadata !DIExpression()), !dbg !10346
  %4 = and i32 %2, 65536, !dbg !10349
  %5 = icmp ne i32 %4, 0, !dbg !10349
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10351
  %8 = load i32, i32* @last_load, align 4, !dbg !10346
  br i1 %7, label %9, label %13, !dbg !10351

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10352
  %11 = add i32 %10, %8, !dbg !10352
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10352
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10354
  br label %13, !dbg !10355

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10356
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10357
  %16 = add i32 %14, %15, !dbg !10358
  ret i32 %16, !dbg !10359
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10364, metadata !DIExpression()), !dbg !10377
  call void @llvm.dbg.value(metadata i1 %1, metadata !10365, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10377
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10378
  br i1 %4, label %5, label %8, !dbg !10378

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10380
  %7 = and i32 %6, -2, !dbg !10380
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10380
  store i32 -16777216, i32* @last_load, align 4, !dbg !10382
  br label %54, !dbg !10383

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10384
  call void @llvm.dbg.value(metadata i32 %9, metadata !10369, metadata !DIExpression()), !dbg !10377
  br i1 %3, label %18, label %10, !dbg !10385

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10385
  call void @llvm.dbg.value(metadata i32 undef, metadata !10364, metadata !DIExpression()), !dbg !10377
  %12 = icmp slt i32 %11, 1, !dbg !10386
  br i1 %12, label %18, label %13, !dbg !10386

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !10386
  %15 = select i1 %14, i32 %11, i32 837, !dbg !10386
  %16 = mul nuw nsw i32 %15, 20000, !dbg !10386
  %17 = add nuw nsw i32 %16, 19999, !dbg !10386
  br label %18, !dbg !10386

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10364, metadata !DIExpression()), !dbg !10377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10387, metadata !DIExpression()) #23, !dbg !10394
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10396, !srcloc !10402
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10396
  call void @llvm.dbg.value(metadata i32 %21, metadata !10399, metadata !DIExpression()) #23, !dbg !10403
  call void @llvm.dbg.value(metadata i32 undef, metadata !10400, metadata !DIExpression()) #23, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %21, metadata !10393, metadata !DIExpression()) #23, !dbg !10394
  call void @llvm.dbg.value(metadata i32 %21, metadata !10370, metadata !DIExpression()), !dbg !10377
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !10404
  call void @llvm.dbg.value(metadata i32 %22, metadata !10375, metadata !DIExpression()), !dbg !10377
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10405
  call void @llvm.dbg.value(metadata i32 %23, metadata !10367, metadata !DIExpression()), !dbg !10377
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10406
  %25 = add i32 %24, %22, !dbg !10406
  store i32 %25, i32* @cycle_count, align 4, !dbg !10406
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10407
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10408
  %27 = sub i32 %25, %26, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %27, metadata !10376, metadata !DIExpression()), !dbg !10377
  %28 = icmp slt i32 %27, 0, !dbg !10410
  br i1 %28, label %38, label %29, !dbg !10412

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10366, metadata !DIExpression()), !dbg !10377
  call void @llvm.dbg.value(metadata i32 undef, metadata !10366, metadata !DIExpression()), !dbg !10377
  %30 = add nuw i32 %19, %27, !dbg !10413
  %31 = urem i32 %30, 20000, !dbg !10415
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10366, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10377
  %32 = sub nuw nsw i32 %19, %31, !dbg !10416
  call void @llvm.dbg.value(metadata i32 %32, metadata !10366, metadata !DIExpression()), !dbg !10377
  %33 = icmp ugt i32 %32, 1250, !dbg !10417
  br i1 %33, label %34, label %36, !dbg !10417

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10366, metadata !DIExpression()), !dbg !10377
  %35 = icmp ugt i32 %32, 16740000, !dbg !10418
  br i1 %35, label %38, label %36, !dbg !10420

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1250, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1250, %18 ], [ 16740000, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10421
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10422
  call void @llvm.dbg.value(metadata i32 %40, metadata !10368, metadata !DIExpression()), !dbg !10377
  %41 = add nsw i32 %39, -1, !dbg !10423
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10424
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10425
  %42 = icmp ult i32 %23, %40, !dbg !10426
  br i1 %42, label %43, label %48, !dbg !10428

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10429
  %45 = add i32 %23, %9, !dbg !10431
  %46 = sub i32 %45, %40, !dbg !10432
  %47 = add i32 %46, %44, !dbg !10429
  br label %52, !dbg !10433

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10434
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10436
  %51 = add i32 %49, %50, !dbg !10436
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10437
  store i32 %53, i32* @cycle_count, align 4, !dbg !10437
  call void @llvm.dbg.value(metadata i32 %21, metadata !10438, metadata !DIExpression()) #23, !dbg !10444
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10443, metadata !DIExpression()) #23, !dbg !10444
  call void @llvm.dbg.value(metadata i32 %21, metadata !10446, metadata !DIExpression()) #23, !dbg !10449
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !10451, !srcloc !10452
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10453
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10454 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10387, metadata !DIExpression()) #23, !dbg !10458
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10460, !srcloc !10402
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %2, metadata !10399, metadata !DIExpression()) #23, !dbg !10462
  call void @llvm.dbg.value(metadata i32 undef, metadata !10400, metadata !DIExpression()) #23, !dbg !10462
  call void @llvm.dbg.value(metadata i32 %2, metadata !10393, metadata !DIExpression()) #23, !dbg !10458
  call void @llvm.dbg.value(metadata i32 %2, metadata !10456, metadata !DIExpression()), !dbg !10463
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !10464
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10465
  %5 = add i32 %4, %3, !dbg !10466
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10467
  %7 = sub i32 %5, %6, !dbg !10468
  call void @llvm.dbg.value(metadata i32 %7, metadata !10457, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 %2, metadata !10438, metadata !DIExpression()) #23, !dbg !10469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10443, metadata !DIExpression()) #23, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %2, metadata !10446, metadata !DIExpression()) #23, !dbg !10471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !10473, !srcloc !10452
  %8 = udiv i32 %7, 20000, !dbg !10474
  ret i32 %8, !dbg !10475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10476 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10387, metadata !DIExpression()) #23, !dbg !10480
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10482, !srcloc !10402
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %2, metadata !10399, metadata !DIExpression()) #23, !dbg !10484
  call void @llvm.dbg.value(metadata i32 undef, metadata !10400, metadata !DIExpression()) #23, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %2, metadata !10393, metadata !DIExpression()) #23, !dbg !10480
  call void @llvm.dbg.value(metadata i32 %2, metadata !10478, metadata !DIExpression()), !dbg !10485
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !10486
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10487
  %5 = add i32 %4, %3, !dbg !10488
  call void @llvm.dbg.value(metadata i32 %5, metadata !10479, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i32 %2, metadata !10438, metadata !DIExpression()) #23, !dbg !10489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10443, metadata !DIExpression()) #23, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %2, metadata !10446, metadata !DIExpression()) #23, !dbg !10491
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !10493, !srcloc !10452
  ret i32 %5, !dbg !10494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !10495 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10496
  %2 = icmp eq i32 %1, -16777216, !dbg !10498
  br i1 %2, label %3, label %6, !dbg !10499

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10500
  %5 = or i32 %4, 1, !dbg !10500
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10500
  br label %6, !dbg !10502

6:                                                ; preds = %3, %0
  ret void, !dbg !10503
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !10504 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10505
  %2 = and i32 %1, -2, !dbg !10505
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10505
  ret void, !dbg !10506
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !10507 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10540, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.value(metadata i8 %1, metadata !10541, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10542, metadata !DIExpression()), !dbg !10543
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10544
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10544
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10543
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10545
  %8 = load i8, i8* %6, align 4, !dbg !10546
  %9 = zext i8 %8 to i32, !dbg !10547
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10547
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10548
  br i1 %11, label %18, label %24, !dbg !10549

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10543
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10545
  %14 = load i8, i8* %6, align 4, !dbg !10546
  %15 = zext i8 %14 to i32, !dbg !10547
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10547
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10548
  br i1 %17, label %18, label %24, !dbg !10549, !llvm.loop !10550

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10552
  %21 = load i8, i8* %20, align 1, !dbg !10552
  %22 = icmp eq i8 %21, %1, !dbg !10555
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10556
  br i1 %22, label %24, label %12, !dbg !10557

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10543
  ret i32 %25, !dbg !10558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #6 !dbg !10559 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10561, metadata !DIExpression()), !dbg !10562
  ret i32 0, !dbg !10563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #16 !dbg !10564 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !10582, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i8 %1, metadata !10583, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i32 %2, metadata !10584, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i8 0, metadata !10585, metadata !DIExpression()), !dbg !10596
  %4 = icmp eq i8 %1, 0, !dbg !10597
  br i1 %4, label %7, label %5, !dbg !10598

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10597
  br label %8, !dbg !10598

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !10599

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10585, metadata !DIExpression()), !dbg !10596
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !10600
  %11 = load i32, i32* %10, align 4, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %11, metadata !10587, metadata !DIExpression()), !dbg !10601
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !10602
  %13 = load i8, i8* %12, align 4, !dbg !10602
  call void @llvm.dbg.value(metadata i8 %13, metadata !10590, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10601
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !10603
  %15 = load i32, i32* %14, align 4, !dbg !10603
  call void @llvm.dbg.value(metadata i32 %15, metadata !10591, metadata !DIExpression()), !dbg !10601
  call void @llvm.dbg.value(metadata i8 %13, metadata !10592, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10601
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !10604
  %17 = load i32, i32* %16, align 4, !dbg !10604
  call void @llvm.dbg.value(metadata i32 %17, metadata !10593, metadata !DIExpression()), !dbg !10601
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !10605
  %19 = load i32, i32* %18, align 4, !dbg !10605
  call void @llvm.dbg.value(metadata i32 %19, metadata !10594, metadata !DIExpression()), !dbg !10601
  %20 = and i8 %13, 15, !dbg !10606
  %21 = zext i8 %20 to i32, !dbg !10606
  %22 = lshr i32 %19, 27, !dbg !10607
  %23 = and i32 %22, 16, !dbg !10607
  %24 = or i32 %23, %21, !dbg !10608
  %25 = inttoptr i32 %11 to i32*, !dbg !10609
  store volatile i32 %24, i32* %25, align 4, !dbg !10610
  %26 = icmp eq i32 %15, 0, !dbg !10611
  br i1 %26, label %32, label %27, !dbg !10613

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !10614
  call void @llvm.dbg.value(metadata i8 %28, metadata !10592, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10601
  %29 = and i8 %28, 7, !dbg !10615
  %30 = zext i8 %29 to i32, !dbg !10615
  %31 = inttoptr i32 %15 to i32*, !dbg !10617
  store volatile i32 %30, i32* %31, align 4, !dbg !10618
  br label %32, !dbg !10619

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !10620
  br i1 %33, label %37, label %34, !dbg !10622

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !10623
  %36 = inttoptr i32 %17 to i32*, !dbg !10625
  store volatile i32 %35, i32* %36, align 4, !dbg !10626
  br label %37, !dbg !10627

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !10628
  call void @llvm.dbg.value(metadata i32 %38, metadata !10585, metadata !DIExpression()), !dbg !10596
  %39 = icmp eq i32 %38, %6, !dbg !10597
  br i1 %39, label %7, label %8, !dbg !10598, !llvm.loop !10629
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #16 !dbg !10631 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10688, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.value(metadata i32 %1, metadata !10689, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.value(metadata i32 %2, metadata !10690, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.value(metadata i32 %3, metadata !10691, metadata !DIExpression()), !dbg !10692
  %5 = inttoptr i32 %1 to i32*, !dbg !10693
  %6 = load volatile i32, i32* %5, align 4, !dbg !10693
  %7 = and i32 %6, -458816, !dbg !10694
  %8 = shl i32 %2, 16, !dbg !10695
  %9 = and i32 %8, 458752, !dbg !10695
  %10 = and i32 %3, 63, !dbg !10696
  %11 = or i32 %10, %9, !dbg !10697
  %12 = or i32 %11, %7, !dbg !10698
  store volatile i32 %12, i32* %5, align 4, !dbg !10699
  ret void, !dbg !10700
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #17 !dbg !10701 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10705, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 %1, metadata !10706, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32* %2, metadata !10707, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32* %3, metadata !10708, metadata !DIExpression()), !dbg !10709
  %5 = inttoptr i32 %1 to i32*, !dbg !10710
  %6 = load volatile i32, i32* %5, align 4, !dbg !10710
  %7 = lshr i32 %6, 16, !dbg !10711
  %8 = and i32 %7, 7, !dbg !10711
  store i32 %8, i32* %2, align 4, !dbg !10712
  %9 = load volatile i32, i32* %5, align 4, !dbg !10713
  %10 = and i32 %9, 63, !dbg !10714
  store i32 %10, i32* %3, align 4, !dbg !10715
  ret void, !dbg !10716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #16 !dbg !10717 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10721, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.value(metadata i32 %2, metadata !10723, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.value(metadata i32 %3, metadata !10724, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.value(metadata i32 %4, metadata !10725, metadata !DIExpression()), !dbg !10726
  %6 = inttoptr i32 %1 to i32*, !dbg !10727
  %7 = load volatile i32, i32* %6, align 4, !dbg !10727
  %8 = and i32 %7, -117899328, !dbg !10728
  %9 = shl i32 %2, 24, !dbg !10729
  %10 = and i32 %9, 117440512, !dbg !10729
  %11 = shl i32 %3, 16, !dbg !10730
  %12 = and i32 %11, 458752, !dbg !10730
  %13 = and i32 %4, 63, !dbg !10731
  %14 = or i32 %12, %10, !dbg !10732
  %15 = or i32 %14, %13, !dbg !10733
  %16 = or i32 %15, %8, !dbg !10734
  store volatile i32 %16, i32* %6, align 4, !dbg !10735
  ret void, !dbg !10736
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10737 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10742, metadata !DIExpression()), !dbg !10743
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #25, !dbg !10744
  br i1 %2, label %7, label %3, !dbg !10746

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !10747
  %5 = and i32 %4, 127, !dbg !10748
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !10749
  br label %7, !dbg !10750

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !10743
  ret i32 %8, !dbg !10751
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10752 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10756, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i32 %1, metadata !10757, metadata !DIExpression()), !dbg !10758
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !10759
  %4 = and i32 %1, 65535, !dbg !10759
  %5 = add i32 %4, %3, !dbg !10759
  %6 = inttoptr i32 %5 to i32*, !dbg !10759
  %7 = load volatile i32, i32* %6, align 4, !dbg !10759
  %8 = and i32 %7, 65536, !dbg !10760
  %9 = icmp ne i32 %8, 0, !dbg !10761
  ret i1 %9, !dbg !10762
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10763 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10765, metadata !DIExpression()), !dbg !10766
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #25, !dbg !10767
  br i1 %2, label %8, label %3, !dbg !10769

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !10770
  %5 = and i32 %4, 1, !dbg !10772
  %6 = icmp eq i32 %5, 0, !dbg !10772
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !10773
  br label %8, !dbg !10773

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !10766
  ret i32 %9, !dbg !10774
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10775 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10777, metadata !DIExpression()), !dbg !10781
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #25, !dbg !10782
  br i1 %2, label %40, label %3, !dbg !10784

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !10785
  %5 = trunc i32 %4 to i8, !dbg !10785
  %6 = and i8 %5, 127, !dbg !10785
  call void @llvm.dbg.value(metadata i8 %6, metadata !10778, metadata !DIExpression()), !dbg !10781
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !10786
  %8 = lshr i32 %7, 21, !dbg !10787
  %9 = and i32 %8, 3, !dbg !10788
  call void @llvm.dbg.value(metadata i32 %9, metadata !10779, metadata !DIExpression()), !dbg !10781
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %9, !dbg !10789
  %11 = load i32, i32* %10, align 4, !dbg !10789
  call void @llvm.dbg.value(metadata i8 undef, metadata !10779, metadata !DIExpression()), !dbg !10781
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !10790
  %13 = load volatile i32, i32* %12, align 4, !dbg !10790
  %14 = and i32 %13, 32768, !dbg !10792
  %15 = icmp eq i32 %14, 0, !dbg !10792
  br i1 %15, label %36, label %16, !dbg !10793

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !10794
  %18 = and i32 %17, 32767, !dbg !10796
  %19 = uitofp i32 %18 to float, !dbg !10797
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !10798
  %21 = load volatile i32, i32* %20, align 4, !dbg !10798
  %22 = and i32 %21, 1073741823, !dbg !10799
  %23 = uitofp i32 %22 to float, !dbg !10800
  %24 = fdiv float %19, %23, !dbg !10801
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !10802
  %26 = load volatile i32, i32* %25, align 4, !dbg !10802
  %27 = and i32 %26, 1073741823, !dbg !10803
  %28 = uitofp i32 %27 to float, !dbg !10804
  %29 = fmul float %24, %28, !dbg !10805
  call void @llvm.dbg.value(metadata float %29, metadata !10780, metadata !DIExpression()), !dbg !10781
  %30 = lshr i32 24000000, %11, !dbg !10806
  %31 = uitofp i32 %30 to float, !dbg !10807
  %32 = uitofp i8 %6 to float, !dbg !10808
  %33 = fadd float %29, %32, !dbg !10809
  %34 = fmul float %33, %31, !dbg !10810
  %35 = fptoui float %34 to i32, !dbg !10811
  br label %40, !dbg !10812

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !10813
  %38 = zext i8 %6 to i32, !dbg !10815
  %39 = mul nuw i32 %37, %38, !dbg !10816
  br label %40, !dbg !10817

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !10781
  ret i32 %41, !dbg !10818
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10819 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10821, metadata !DIExpression()), !dbg !10822
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #25, !dbg !10823
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !10822
  ret i32 %3, !dbg !10825
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10826 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10828, metadata !DIExpression()), !dbg !10833
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #25, !dbg !10834
  br i1 %2, label %47, label %3, !dbg !10836

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10837
  %5 = trunc i32 %4 to i8, !dbg !10837
  %6 = and i8 %5, 127, !dbg !10837
  call void @llvm.dbg.value(metadata i8 %6, metadata !10829, metadata !DIExpression()), !dbg !10833
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10838
  %8 = lshr i32 %7, 22, !dbg !10839
  %9 = and i32 %8, 3, !dbg !10840
  call void @llvm.dbg.value(metadata i32 %8, metadata !10830, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10833
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10841
  %11 = lshr i32 %10, 19, !dbg !10842
  %12 = and i32 %11, 3, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %11, metadata !10831, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10833
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !10844
  %14 = load i32, i32* %13, align 4, !dbg !10844
  call void @llvm.dbg.value(metadata i8 undef, metadata !10830, metadata !DIExpression()), !dbg !10833
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !10845
  %16 = load i32, i32* %15, align 4, !dbg !10845
  call void @llvm.dbg.value(metadata i8 undef, metadata !10831, metadata !DIExpression()), !dbg !10833
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !10846
  %18 = load volatile i32, i32* %17, align 4, !dbg !10846
  %19 = and i32 %18, 32768, !dbg !10848
  %20 = icmp eq i32 %19, 0, !dbg !10848
  br i1 %20, label %42, label %21, !dbg !10849

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !10850
  %23 = and i32 %22, 32767, !dbg !10852
  %24 = uitofp i32 %23 to float, !dbg !10853
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !10854
  %26 = load volatile i32, i32* %25, align 4, !dbg !10854
  %27 = and i32 %26, 1073741823, !dbg !10855
  %28 = uitofp i32 %27 to float, !dbg !10856
  %29 = fdiv float %24, %28, !dbg !10857
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !10858
  %31 = load volatile i32, i32* %30, align 4, !dbg !10858
  %32 = and i32 %31, 1073741823, !dbg !10859
  %33 = uitofp i32 %32 to float, !dbg !10860
  %34 = fmul float %29, %33, !dbg !10861
  call void @llvm.dbg.value(metadata float %34, metadata !10832, metadata !DIExpression()), !dbg !10833
  %35 = lshr i32 24000000, %16, !dbg !10862
  %36 = lshr i32 %35, %14, !dbg !10863
  %37 = uitofp i32 %36 to float, !dbg !10864
  %38 = uitofp i8 %6 to float, !dbg !10865
  %39 = fadd float %34, %38, !dbg !10866
  %40 = fmul float %39, %37, !dbg !10867
  %41 = fptoui float %40 to i32, !dbg !10868
  br label %47, !dbg !10869

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !10870
  %44 = lshr i32 %43, %14, !dbg !10872
  %45 = zext i8 %6 to i32, !dbg !10873
  %46 = mul nuw i32 %44, %45, !dbg !10874
  br label %47, !dbg !10875

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !10833
  ret i32 %48, !dbg !10876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10877 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10879, metadata !DIExpression()), !dbg !10884
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #25, !dbg !10885
  br i1 %2, label %47, label %3, !dbg !10887

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10888
  %5 = trunc i32 %4 to i8, !dbg !10888
  %6 = and i8 %5, 127, !dbg !10888
  call void @llvm.dbg.value(metadata i8 %6, metadata !10880, metadata !DIExpression()), !dbg !10884
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10889
  %8 = lshr i32 %7, 22, !dbg !10890
  %9 = and i32 %8, 3, !dbg !10891
  call void @llvm.dbg.value(metadata i32 %8, metadata !10881, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10884
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10892
  %11 = lshr i32 %10, 19, !dbg !10893
  %12 = and i32 %11, 3, !dbg !10894
  call void @llvm.dbg.value(metadata i32 %11, metadata !10882, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10884
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !10895
  %14 = load i32, i32* %13, align 4, !dbg !10895
  call void @llvm.dbg.value(metadata i8 undef, metadata !10881, metadata !DIExpression()), !dbg !10884
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !10896
  %16 = load i32, i32* %15, align 4, !dbg !10896
  call void @llvm.dbg.value(metadata i8 undef, metadata !10882, metadata !DIExpression()), !dbg !10884
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !10897
  %18 = load volatile i32, i32* %17, align 4, !dbg !10897
  %19 = and i32 %18, 32768, !dbg !10899
  %20 = icmp eq i32 %19, 0, !dbg !10899
  br i1 %20, label %42, label %21, !dbg !10900

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !10901
  %23 = and i32 %22, 32767, !dbg !10903
  %24 = uitofp i32 %23 to float, !dbg !10904
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !10905
  %26 = load volatile i32, i32* %25, align 4, !dbg !10905
  %27 = and i32 %26, 1073741823, !dbg !10906
  %28 = uitofp i32 %27 to float, !dbg !10907
  %29 = fdiv float %24, %28, !dbg !10908
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !10909
  %31 = load volatile i32, i32* %30, align 4, !dbg !10909
  %32 = and i32 %31, 1073741823, !dbg !10910
  %33 = uitofp i32 %32 to float, !dbg !10911
  %34 = fmul float %29, %33, !dbg !10912
  call void @llvm.dbg.value(metadata float %34, metadata !10883, metadata !DIExpression()), !dbg !10884
  %35 = lshr i32 24000000, %16, !dbg !10913
  %36 = lshr i32 %35, %14, !dbg !10914
  %37 = uitofp i32 %36 to float, !dbg !10915
  %38 = uitofp i8 %6 to float, !dbg !10916
  %39 = fadd float %34, %38, !dbg !10917
  %40 = fmul float %39, %37, !dbg !10918
  %41 = fptoui float %40 to i32, !dbg !10919
  br label %47, !dbg !10920

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !10921
  %44 = lshr i32 %43, %14, !dbg !10923
  %45 = zext i8 %6 to i32, !dbg !10924
  %46 = mul nuw i32 %44, %45, !dbg !10925
  br label %47, !dbg !10926

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !10884
  ret i32 %48, !dbg !10927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !10928 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10932, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.value(metadata i32 %1, metadata !10933, metadata !DIExpression()), !dbg !10936
  %3 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #25, !dbg !10937
  call void @llvm.dbg.value(metadata i32 %3, metadata !10934, metadata !DIExpression()), !dbg !10936
  %4 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #25, !dbg !10938
  call void @llvm.dbg.value(metadata i32 %4, metadata !10935, metadata !DIExpression()), !dbg !10936
  %5 = udiv i32 %3, %4, !dbg !10939
  %6 = mul i32 %5, 18, !dbg !10940
  ret i32 %6, !dbg !10941
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10942 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10944, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i32 %1, metadata !10945, metadata !DIExpression()), !dbg !10946
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !10947
  %4 = and i32 %1, 65535, !dbg !10947
  %5 = add i32 %4, %3, !dbg !10947
  %6 = inttoptr i32 %5 to i32*, !dbg !10947
  %7 = load volatile i32, i32* %6, align 4, !dbg !10947
  %8 = lshr i32 %1, 16, !dbg !10948
  %9 = and i32 %8, 31, !dbg !10948
  %10 = lshr i32 %7, %9, !dbg !10949
  %11 = and i32 %10, 63, !dbg !10950
  ret i32 %11, !dbg !10951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct._gpio_init_config* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !10952 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10979, metadata !DIExpression()), !dbg !10983
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !10980, metadata !DIExpression()), !dbg !10983
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10984
  store volatile i32 0, i32* %3, align 4, !dbg !10985
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10986
  store volatile i32 0, i32* %4, align 4, !dbg !10987
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !10988
  %6 = load i32, i32* %5, align 4, !dbg !10988
  call void @llvm.dbg.value(metadata i32 %6, metadata !10981, metadata !DIExpression()), !dbg !10983
  %7 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !10989
  %8 = load i32, i32* %7, align 4, !dbg !10989
  %9 = icmp eq i32 %8, 1, !dbg !10991
  %10 = shl nuw i32 1, %6, !dbg !10992
  br i1 %9, label %11, label %15, !dbg !10993

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !10994
  %13 = load volatile i32, i32* %12, align 4, !dbg !10995
  %14 = or i32 %13, %10, !dbg !10995
  store volatile i32 %14, i32* %12, align 4, !dbg !10995
  br label %20, !dbg !10994

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !10996
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !10997
  %18 = load volatile i32, i32* %17, align 4, !dbg !10998
  %19 = and i32 %18, %16, !dbg !10998
  store volatile i32 %19, i32* %17, align 4, !dbg !10998
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !10999
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !11001
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !11001
  %24 = add i32 %6, -16, !dbg !11001
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !11001
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !11001
  call void @llvm.dbg.value(metadata i32* %26, metadata !10982, metadata !DIExpression()), !dbg !10983
  call void @llvm.dbg.value(metadata i32 %25, metadata !10981, metadata !DIExpression()), !dbg !10983
  %27 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !11002
  %28 = load i32, i32* %27, align 4, !dbg !11002
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !11003

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !11004
  %31 = shl i32 3, %30, !dbg !11007
  %32 = xor i32 %31, -1, !dbg !11008
  %33 = load volatile i32, i32* %26, align 4, !dbg !11009
  %34 = and i32 %33, %32, !dbg !11009
  br label %56, !dbg !11010

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !11011
  %37 = shl i32 %25, 1, !dbg !11013
  %38 = shl i32 3, %37, !dbg !11014
  %39 = xor i32 %38, -1, !dbg !11015
  %40 = and i32 %36, %39, !dbg !11016
  %41 = shl nuw i32 1, %37, !dbg !11017
  %42 = or i32 %40, %41, !dbg !11018
  br label %56, !dbg !11019

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !11020
  %45 = shl i32 %25, 1, !dbg !11022
  %46 = shl i32 3, %45, !dbg !11023
  %47 = xor i32 %46, -1, !dbg !11024
  %48 = and i32 %44, %47, !dbg !11025
  %49 = shl i32 2, %45, !dbg !11026
  %50 = or i32 %48, %49, !dbg !11027
  br label %56, !dbg !11028

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !11029
  %53 = shl i32 3, %52, !dbg !11031
  %54 = load volatile i32, i32* %26, align 4, !dbg !11032
  %55 = or i32 %54, %53, !dbg !11032
  br label %56, !dbg !11033

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !11034
  br label %58, !dbg !11035

58:                                               ; preds = %56, %20
  ret void, !dbg !11035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !11036 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11041, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 %1, metadata !11042, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 %2, metadata !11043, metadata !DIExpression()), !dbg !11044
  %4 = icmp eq i32 %2, 1, !dbg !11045
  %5 = shl nuw i32 1, %1, !dbg !11047
  br i1 %4, label %6, label %10, !dbg !11048

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !11049
  %8 = load volatile i32, i32* %7, align 4, !dbg !11051
  %9 = or i32 %8, %5, !dbg !11051
  store volatile i32 %9, i32* %7, align 4, !dbg !11051
  br label %15, !dbg !11052

10:                                               ; preds = %3
  %11 = xor i32 %5, -1, !dbg !11053
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !11055
  %13 = load volatile i32, i32* %12, align 4, !dbg !11056
  %14 = and i32 %13, %11, !dbg !11056
  store volatile i32 %14, i32* %12, align 4, !dbg !11056
  br label %15

15:                                               ; preds = %10, %6
  ret void, !dbg !11057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !11058 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11062, metadata !DIExpression()), !dbg !11065
  call void @llvm.dbg.value(metadata i32 %1, metadata !11063, metadata !DIExpression()), !dbg !11065
  call void @llvm.dbg.value(metadata i1 %2, metadata !11064, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11065
  %4 = shl nuw i32 1, %1, !dbg !11066
  br i1 %2, label %5, label %9, !dbg !11068

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11069
  %7 = load volatile i32, i32* %6, align 4, !dbg !11070
  %8 = or i32 %7, %4, !dbg !11070
  store volatile i32 %8, i32* %6, align 4, !dbg !11070
  br label %14, !dbg !11069

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !11071
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11072
  %12 = load volatile i32, i32* %11, align 4, !dbg !11073
  %13 = and i32 %12, %10, !dbg !11073
  store volatile i32 %13, i32* %11, align 4, !dbg !11073
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !11074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !11075 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11077, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i32 %1, metadata !11078, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i1 %2, metadata !11079, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11080
  %4 = shl nuw i32 1, %1, !dbg !11081
  br i1 %2, label %5, label %9, !dbg !11083

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11084
  %7 = load volatile i32, i32* %6, align 4, !dbg !11085
  %8 = or i32 %7, %4, !dbg !11085
  store volatile i32 %8, i32* %6, align 4, !dbg !11085
  br label %14, !dbg !11084

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !11086
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11087
  %12 = load volatile i32, i32* %11, align 4, !dbg !11088
  %13 = and i32 %12, %10, !dbg !11088
  store volatile i32 %13, i32* %11, align 4, !dbg !11088
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !11089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !11090 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11129, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !11130, metadata !DIExpression()), !dbg !11131
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11132
  %4 = load volatile i32, i32* %3, align 4, !dbg !11133
  %5 = and i32 %4, -2, !dbg !11133
  store volatile i32 %5, i32* %3, align 4, !dbg !11133
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #25, !dbg !11134
  %6 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !11135
  %7 = load i32, i32* %6, align 4, !dbg !11135
  %8 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !11136
  %9 = load i32, i32* %8, align 4, !dbg !11136
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !11137
  %11 = load i32, i32* %10, align 4, !dbg !11137
  %12 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !11138
  %13 = load i32, i32* %12, align 4, !dbg !11138
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11139
  %15 = load volatile i32, i32* %14, align 4, !dbg !11140
  %16 = or i32 %7, %9, !dbg !11141
  %17 = or i32 %16, %11, !dbg !11142
  %18 = or i32 %17, %13, !dbg !11143
  %19 = or i32 %18, %15, !dbg !11140
  %20 = or i32 %19, 16384, !dbg !11140
  store volatile i32 %20, i32* %14, align 4, !dbg !11140
  %21 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11144
  %22 = load volatile i32, i32* %21, align 4, !dbg !11145
  %23 = or i32 %22, 4, !dbg !11145
  store volatile i32 %23, i32* %21, align 4, !dbg !11145
  %24 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !11146
  %25 = load i32, i32* %24, align 4, !dbg !11146
  %26 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !11147
  %27 = load i32, i32* %26, align 4, !dbg !11147
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %25, i32 noundef %27) #25, !dbg !11148
  ret void, !dbg !11149
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #16 !dbg !11150 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11154, metadata !DIExpression()), !dbg !11155
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11156
  %3 = load volatile i32, i32* %2, align 4, !dbg !11157
  %4 = and i32 %3, -2, !dbg !11157
  store volatile i32 %4, i32* %2, align 4, !dbg !11157
  store volatile i32 0, i32* %2, align 4, !dbg !11158
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11159
  store volatile i32 1, i32* %5, align 4, !dbg !11160
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11161
  store volatile i32 1792, i32* %6, align 4, !dbg !11162
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11163
  store volatile i32 32768, i32* %7, align 4, !dbg !11164
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11165
  store volatile i32 2049, i32* %8, align 4, !dbg !11166
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !11167
  store volatile i32 43, i32* %9, align 4, !dbg !11168
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !11169
  store volatile i32 0, i32* %10, align 4, !dbg !11170
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !11171
  store volatile i32 0, i32* %11, align 4, !dbg !11172
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !11173
  store volatile i32 96, i32* %12, align 4, !dbg !11174
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11175
  store volatile i32 0, i32* %13, align 4, !dbg !11176
  %14 = load volatile i32, i32* %5, align 4, !dbg !11177
  %15 = and i32 %14, -2, !dbg !11177
  store volatile i32 %15, i32* %5, align 4, !dbg !11177
  br label %16, !dbg !11178

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !11179
  %18 = and i32 %17, 1, !dbg !11180
  %19 = icmp eq i32 %18, 0, !dbg !11181
  br i1 %19, label %16, label %20, !dbg !11178, !llvm.loop !11182

20:                                               ; preds = %16
  ret void, !dbg !11184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !11185 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11189, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 %1, metadata !11190, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 %2, metadata !11191, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 1, metadata !11196, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 %1, metadata !11192, metadata !DIExpression()), !dbg !11202
  %4 = shl i32 %2, 4, !dbg !11203
  call void @llvm.dbg.value(metadata i32 %4, metadata !11193, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 1, metadata !11194, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 %1, metadata !11192, metadata !DIExpression()), !dbg !11202
  %5 = icmp eq i32 %4, 0, !dbg !11204
  br i1 %5, label %11, label %6, !dbg !11205

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11192, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 %8, metadata !11193, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 %8, metadata !11194, metadata !DIExpression()), !dbg !11202
  %9 = urem i32 %7, %8, !dbg !11206
  call void @llvm.dbg.value(metadata i32 %8, metadata !11192, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 %9, metadata !11193, metadata !DIExpression()), !dbg !11202
  %10 = icmp eq i32 %9, 0, !dbg !11204
  br i1 %10, label %11, label %6, !dbg !11205, !llvm.loop !11208

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !11202
  %13 = udiv i32 %1, %12, !dbg !11210
  call void @llvm.dbg.value(metadata i32 %13, metadata !11192, metadata !DIExpression()), !dbg !11202
  %14 = udiv i32 %4, %12, !dbg !11211
  call void @llvm.dbg.value(metadata i32 %14, metadata !11193, metadata !DIExpression()), !dbg !11202
  %15 = icmp ugt i32 %13, 458745, !dbg !11212
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !11213
  br i1 %17, label %18, label %33, !dbg !11213

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !11214
  %20 = udiv i32 %19, 458745, !dbg !11215
  %21 = add nuw nsw i32 %20, 1, !dbg !11216
  call void @llvm.dbg.value(metadata i32 %21, metadata !11197, metadata !DIExpression()), !dbg !11217
  %22 = add i32 %14, -1, !dbg !11218
  %23 = udiv i32 %22, 65535, !dbg !11219
  %24 = add nuw nsw i32 %23, 1, !dbg !11220
  call void @llvm.dbg.value(metadata i32 %24, metadata !11200, metadata !DIExpression()), !dbg !11217
  %25 = icmp ugt i32 %21, %24, !dbg !11221
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !11222
  call void @llvm.dbg.value(metadata i32 %26, metadata !11201, metadata !DIExpression()), !dbg !11217
  %27 = udiv i32 %13, %26, !dbg !11223
  call void @llvm.dbg.value(metadata i32 %27, metadata !11192, metadata !DIExpression()), !dbg !11202
  %28 = udiv i32 %14, %26, !dbg !11224
  call void @llvm.dbg.value(metadata i32 %28, metadata !11193, metadata !DIExpression()), !dbg !11202
  %29 = icmp ugt i32 %26, %13, !dbg !11225
  %30 = select i1 %29, i32 1, i32 %27, !dbg !11227
  call void @llvm.dbg.value(metadata i32 %30, metadata !11192, metadata !DIExpression()), !dbg !11202
  %31 = icmp ugt i32 %26, %14, !dbg !11228
  %32 = select i1 %31, i32 1, i32 %28, !dbg !11230
  call void @llvm.dbg.value(metadata i32 %32, metadata !11193, metadata !DIExpression()), !dbg !11202
  br label %33, !dbg !11231

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !11202
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !11202
  call void @llvm.dbg.value(metadata i32 %35, metadata !11192, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 %34, metadata !11193, metadata !DIExpression()), !dbg !11202
  %36 = add i32 %35, -1, !dbg !11232
  %37 = udiv i32 %36, 65535, !dbg !11233
  %38 = add nuw nsw i32 %37, 1, !dbg !11234
  call void @llvm.dbg.value(metadata i32 %38, metadata !11196, metadata !DIExpression()), !dbg !11202
  %39 = add nsw i32 %37, -1, !dbg !11235
  %40 = icmp ult i32 %39, 6, !dbg !11235
  br i1 %40, label %41, label %44, !dbg !11235

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !11235
  %43 = load i32, i32* %42, align 4, !dbg !11235
  br label %44, !dbg !11235

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !11236
  call void @llvm.dbg.value(metadata i32 %45, metadata !11195, metadata !DIExpression()), !dbg !11202
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11238
  %47 = load volatile i32, i32* %46, align 4, !dbg !11239
  %48 = and i32 %47, -897, !dbg !11239
  store volatile i32 %48, i32* %46, align 4, !dbg !11239
  %49 = load volatile i32, i32* %46, align 4, !dbg !11240
  %50 = or i32 %49, %45, !dbg !11240
  store volatile i32 %50, i32* %46, align 4, !dbg !11240
  %51 = add i32 %34, 65535, !dbg !11241
  %52 = and i32 %51, 65535, !dbg !11241
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !11242
  store volatile i32 %52, i32* %53, align 4, !dbg !11243
  %54 = udiv i32 %35, %38, !dbg !11244
  %55 = add i32 %54, 65535, !dbg !11244
  %56 = and i32 %55, 65535, !dbg !11244
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !11245
  store volatile i32 %56, i32* %57, align 4, !dbg !11246
  %58 = mul nuw nsw i32 %38, 1000, !dbg !11247
  %59 = udiv i32 %1, %58, !dbg !11247
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !11248
  store volatile i32 %59, i32* %60, align 4, !dbg !11249
  ret void, !dbg !11250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !11251 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11255, metadata !DIExpression()), !dbg !11258
  call void @llvm.dbg.value(metadata i32 %1, metadata !11256, metadata !DIExpression()), !dbg !11258
  call void @llvm.dbg.value(metadata i1 %2, metadata !11257, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11258
  %4 = and i32 %1, 2, !dbg !11259
  %5 = icmp eq i32 %4, 0, !dbg !11259
  br i1 %2, label %6, label %18, !dbg !11261

6:                                                ; preds = %3
  br i1 %5, label %11, label %7, !dbg !11262

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11264
  %9 = load volatile i32, i32* %8, align 4, !dbg !11266
  %10 = or i32 %9, 512, !dbg !11266
  store volatile i32 %10, i32* %8, align 4, !dbg !11266
  br label %11, !dbg !11264

11:                                               ; preds = %7, %6
  %12 = and i32 %1, 4, !dbg !11267
  %13 = icmp eq i32 %12, 0, !dbg !11267
  br i1 %13, label %30, label %14, !dbg !11269

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11270
  %16 = load volatile i32, i32* %15, align 4, !dbg !11271
  %17 = or i32 %16, 2, !dbg !11271
  store volatile i32 %17, i32* %15, align 4, !dbg !11271
  br label %30, !dbg !11270

18:                                               ; preds = %3
  br i1 %5, label %23, label %19, !dbg !11272

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11274
  %21 = load volatile i32, i32* %20, align 4, !dbg !11276
  %22 = and i32 %21, -513, !dbg !11276
  store volatile i32 %22, i32* %20, align 4, !dbg !11276
  br label %23, !dbg !11274

23:                                               ; preds = %19, %18
  %24 = and i32 %1, 4, !dbg !11277
  %25 = icmp eq i32 %24, 0, !dbg !11277
  br i1 %25, label %30, label %26, !dbg !11279

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11280
  %28 = load volatile i32, i32* %27, align 4, !dbg !11281
  %29 = and i32 %28, -3, !dbg !11281
  store volatile i32 %29, i32* %27, align 4, !dbg !11281
  br label %30, !dbg !11280

30:                                               ; preds = %23, %26, %11, %14
  ret void, !dbg !11282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11283 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11287, metadata !DIExpression()), !dbg !11289
  call void @llvm.dbg.value(metadata i1 %1, metadata !11288, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11289
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11290
  %4 = load volatile i32, i32* %3, align 4, !dbg !11290
  %5 = and i32 %4, 2, !dbg !11292
  %6 = select i1 %1, i32 0, i32 -3, !dbg !11292
  %7 = or i32 %5, %6, !dbg !11292
  store volatile i32 %7, i32* %3, align 4, !dbg !11290
  ret void, !dbg !11293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11294 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11296, metadata !DIExpression()), !dbg !11298
  call void @llvm.dbg.value(metadata i1 %1, metadata !11297, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11298
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11299
  %4 = load volatile i32, i32* %3, align 4, !dbg !11299
  %5 = and i32 %4, -17, !dbg !11301
  %6 = select i1 %1, i32 0, i32 16, !dbg !11301
  %7 = or i32 %5, %6, !dbg !11301
  store volatile i32 %7, i32* %3, align 4, !dbg !11299
  ret void, !dbg !11302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !11303 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11305, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i32 %1, metadata !11306, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i1 %2, metadata !11307, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11310
  call void @llvm.dbg.value(metadata i32* null, metadata !11308, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i32 0, metadata !11309, metadata !DIExpression()), !dbg !11310
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11311
  %5 = lshr i32 %1, 16, !dbg !11312
  %6 = add i32 %5, %4, !dbg !11313
  %7 = inttoptr i32 %6 to i32*, !dbg !11314
  call void @llvm.dbg.value(metadata i32* %7, metadata !11308, metadata !DIExpression()), !dbg !11310
  %8 = and i32 %1, 65535, !dbg !11315
  %9 = shl nuw i32 1, %8, !dbg !11316
  call void @llvm.dbg.value(metadata i32 %9, metadata !11309, metadata !DIExpression()), !dbg !11310
  br i1 %2, label %10, label %13, !dbg !11317

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !11318
  %12 = or i32 %11, %9, !dbg !11318
  br label %17, !dbg !11320

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !11321
  %15 = load volatile i32, i32* %7, align 4, !dbg !11322
  %16 = and i32 %15, %14, !dbg !11322
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !11323
  ret void, !dbg !11324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !11325 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11329, metadata !DIExpression()), !dbg !11333
  call void @llvm.dbg.value(metadata i32 %1, metadata !11330, metadata !DIExpression()), !dbg !11333
  call void @llvm.dbg.value(metadata i32* null, metadata !11331, metadata !DIExpression()), !dbg !11333
  call void @llvm.dbg.value(metadata i32 0, metadata !11332, metadata !DIExpression()), !dbg !11333
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11334
  %4 = lshr i32 %1, 16, !dbg !11335
  %5 = add i32 %4, %3, !dbg !11336
  %6 = inttoptr i32 %5 to i32*, !dbg !11337
  call void @llvm.dbg.value(metadata i32* %6, metadata !11331, metadata !DIExpression()), !dbg !11333
  %7 = and i32 %1, 65535, !dbg !11338
  %8 = shl nuw i32 1, %7, !dbg !11339
  call void @llvm.dbg.value(metadata i32 %8, metadata !11332, metadata !DIExpression()), !dbg !11333
  store volatile i32 %8, i32* %6, align 4, !dbg !11340
  ret void, !dbg !11341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !11342 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11344, metadata !DIExpression()), !dbg !11349
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()), !dbg !11349
  call void @llvm.dbg.value(metadata i1 %2, metadata !11346, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11349
  call void @llvm.dbg.value(metadata i32* null, metadata !11347, metadata !DIExpression()), !dbg !11349
  call void @llvm.dbg.value(metadata i32 0, metadata !11348, metadata !DIExpression()), !dbg !11349
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11350
  %5 = lshr i32 %1, 16, !dbg !11351
  %6 = add i32 %5, %4, !dbg !11352
  %7 = inttoptr i32 %6 to i32*, !dbg !11353
  call void @llvm.dbg.value(metadata i32* %7, metadata !11347, metadata !DIExpression()), !dbg !11349
  %8 = and i32 %1, 65535, !dbg !11354
  %9 = shl nuw i32 1, %8, !dbg !11355
  call void @llvm.dbg.value(metadata i32 %9, metadata !11348, metadata !DIExpression()), !dbg !11349
  br i1 %2, label %10, label %13, !dbg !11356

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !11357
  %12 = or i32 %11, %9, !dbg !11357
  br label %17, !dbg !11359

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !11360
  %15 = load volatile i32, i32* %7, align 4, !dbg !11361
  %16 = and i32 %15, %14, !dbg !11361
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !11362
  ret void, !dbg !11363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11364 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11366, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.value(metadata i1 %1, metadata !11367, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11368
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11369
  %4 = load volatile i32, i32* %3, align 4, !dbg !11369
  %5 = and i32 %4, -16385, !dbg !11371
  %6 = select i1 %1, i32 0, i32 16384, !dbg !11371
  %7 = or i32 %5, %6, !dbg !11371
  store volatile i32 %7, i32* %3, align 4, !dbg !11369
  ret void, !dbg !11372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11373 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11375, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.value(metadata i1 %1, metadata !11376, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11377
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11378
  %4 = load volatile i32, i32* %3, align 4, !dbg !11378
  %5 = and i32 %4, -8193, !dbg !11380
  %6 = select i1 %1, i32 8192, i32 0, !dbg !11380
  %7 = or i32 %5, %6, !dbg !11380
  store volatile i32 %7, i32* %3, align 4, !dbg !11378
  ret void, !dbg !11381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11382 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11384, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.value(metadata i1 %1, metadata !11385, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11386
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11387
  %4 = load volatile i32, i32* %3, align 4, !dbg !11387
  %5 = and i32 %4, -4097, !dbg !11389
  %6 = select i1 %1, i32 4096, i32 0, !dbg !11389
  %7 = or i32 %5, %6, !dbg !11389
  store volatile i32 %7, i32* %3, align 4, !dbg !11387
  ret void, !dbg !11390
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !11391 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11393, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.value(metadata i32 %1, metadata !11394, metadata !DIExpression()), !dbg !11395
  %3 = icmp eq i32 %1, 0, !dbg !11396
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11398
  %5 = load volatile i32, i32* %4, align 4, !dbg !11398
  %6 = and i32 %5, -65, !dbg !11399
  %7 = select i1 %3, i32 0, i32 64, !dbg !11399
  %8 = or i32 %6, %7, !dbg !11399
  store volatile i32 %8, i32* %4, align 4, !dbg !11398
  ret void, !dbg !11400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11401 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11403, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.value(metadata i1 %1, metadata !11404, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11405
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11406
  %4 = load volatile i32, i32* %3, align 4, !dbg !11406
  %5 = and i32 %4, -1025, !dbg !11408
  %6 = select i1 %1, i32 1024, i32 0, !dbg !11408
  %7 = or i32 %5, %6, !dbg !11408
  store volatile i32 %7, i32* %3, align 4, !dbg !11406
  ret void, !dbg !11409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11410 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11412, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata i1 %1, metadata !11413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11414
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11415
  %4 = load volatile i32, i32* %3, align 4, !dbg !11415
  %5 = and i32 %4, -513, !dbg !11417
  %6 = select i1 %1, i32 512, i32 0, !dbg !11417
  %7 = or i32 %5, %6, !dbg !11417
  store volatile i32 %7, i32* %3, align 4, !dbg !11415
  ret void, !dbg !11418
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11419 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11421, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i1 %1, metadata !11422, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11423
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11424
  %4 = load volatile i32, i32* %3, align 4, !dbg !11424
  %5 = and i32 %4, -257, !dbg !11426
  %6 = select i1 %1, i32 256, i32 0, !dbg !11426
  %7 = or i32 %5, %6, !dbg !11426
  store volatile i32 %7, i32* %3, align 4, !dbg !11424
  ret void, !dbg !11427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #16 !dbg !11428 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11432, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.value(metadata i16 %1, metadata !11433, metadata !DIExpression()), !dbg !11434
  %3 = zext i16 %1 to i32, !dbg !11435
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11437
  %5 = load volatile i32, i32* %4, align 4, !dbg !11437
  %6 = and i32 %5, -5, !dbg !11438
  %7 = lshr i32 %3, 6, !dbg !11438
  %8 = and i32 %7, 4, !dbg !11438
  %9 = or i32 %6, %8, !dbg !11438
  store volatile i32 %9, i32* %4, align 4, !dbg !11437
  %10 = and i32 %3, 255, !dbg !11439
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !11440
  store volatile i32 %10, i32* %11, align 4, !dbg !11441
  ret void, !dbg !11442
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #17 !dbg !11443 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11447, metadata !DIExpression()), !dbg !11449
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !11450
  %3 = load volatile i32, i32* %2, align 4, !dbg !11450
  call void @llvm.dbg.value(metadata i32 %3, metadata !11448, metadata !DIExpression()), !dbg !11449
  %4 = trunc i32 %3 to i16, !dbg !11451
  %5 = and i16 %4, 255, !dbg !11451
  %6 = lshr i16 %4, 2, !dbg !11451
  %7 = and i16 %6, 256, !dbg !11451
  %8 = or i16 %7, %5, !dbg !11451
  call void @llvm.dbg.value(metadata i16 %8, metadata !11448, metadata !DIExpression()), !dbg !11449
  ret i16 %8, !dbg !11452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11453 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11455, metadata !DIExpression()), !dbg !11457
  call void @llvm.dbg.value(metadata i1 %1, metadata !11456, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11457
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11458
  %4 = load volatile i32, i32* %3, align 4, !dbg !11458
  %5 = and i32 %4, -2, !dbg !11460
  %6 = zext i1 %1 to i32, !dbg !11460
  %7 = or i32 %5, %6, !dbg !11460
  store volatile i32 %7, i32* %3, align 4, !dbg !11458
  ret void, !dbg !11461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11462 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11464, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i1 %1, metadata !11465, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11466
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11467
  %4 = load volatile i32, i32* %3, align 4, !dbg !11467
  %5 = and i32 %4, -3, !dbg !11469
  %6 = select i1 %1, i32 2, i32 0, !dbg !11469
  %7 = or i32 %5, %6, !dbg !11469
  store volatile i32 %7, i32* %3, align 4, !dbg !11467
  ret void, !dbg !11470
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11471 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11473, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i1 %1, metadata !11474, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11475
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11476
  %4 = load volatile i32, i32* %3, align 4, !dbg !11476
  %5 = and i32 %4, -129, !dbg !11478
  %6 = select i1 %1, i32 128, i32 0, !dbg !11478
  %7 = or i32 %5, %6, !dbg !11478
  store volatile i32 %7, i32* %3, align 4, !dbg !11476
  ret void, !dbg !11479
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11482, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.value(metadata i32 %1, metadata !11483, metadata !DIExpression()), !dbg !11484
  %3 = icmp eq i32 %1, 0, !dbg !11485
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11487
  %5 = load volatile i32, i32* %4, align 4, !dbg !11487
  %6 = and i32 %5, -33, !dbg !11488
  %7 = select i1 %3, i32 32, i32 0, !dbg !11488
  %8 = or i32 %6, %7, !dbg !11488
  store volatile i32 %8, i32* %4, align 4, !dbg !11487
  ret void, !dbg !11489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11490 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11492, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i1 %1, metadata !11493, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11494
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11495
  %4 = load volatile i32, i32* %3, align 4, !dbg !11495
  %5 = and i32 %4, -16385, !dbg !11497
  %6 = select i1 %1, i32 16384, i32 0, !dbg !11497
  %7 = or i32 %5, %6, !dbg !11497
  store volatile i32 %7, i32* %3, align 4, !dbg !11495
  ret void, !dbg !11498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11499 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11501, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.value(metadata i1 %1, metadata !11502, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11503
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11504
  %4 = load volatile i32, i32* %3, align 4, !dbg !11504
  %5 = and i32 %4, -17, !dbg !11506
  %6 = select i1 %1, i32 16, i32 0, !dbg !11506
  %7 = or i32 %5, %6, !dbg !11506
  store volatile i32 %7, i32* %3, align 4, !dbg !11504
  ret void, !dbg !11507
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11508 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11510, metadata !DIExpression()), !dbg !11512
  call void @llvm.dbg.value(metadata i1 %1, metadata !11511, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11512
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11513
  %4 = load volatile i32, i32* %3, align 4, !dbg !11513
  %5 = and i32 %4, -2049, !dbg !11515
  %6 = select i1 %1, i32 2048, i32 0, !dbg !11515
  %7 = or i32 %5, %6, !dbg !11515
  store volatile i32 %7, i32* %3, align 4, !dbg !11513
  ret void, !dbg !11516
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !11517 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !11536, metadata !DIExpression()), !dbg !11541
  %4 = bitcast i32* %2 to i8*, !dbg !11542
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11542
  %5 = bitcast i32* %3 to i8*, !dbg !11542
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11542
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !11543
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !11544

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11537, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32* %2, metadata !11539, metadata !DIExpression(DW_OP_deref)), !dbg !11541
  call void @llvm.dbg.value(metadata i32* %3, metadata !11540, metadata !DIExpression(DW_OP_deref)), !dbg !11541
  br label %8, !dbg !11545

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !11547
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !11547
  call void @llvm.dbg.value(metadata i32 %10, metadata !11537, metadata !DIExpression()), !dbg !11541
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !11548

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #24, !dbg !11549
  call void @llvm.dbg.value(metadata i32 %12, metadata !11538, metadata !DIExpression()), !dbg !11541
  br label %13, !dbg !11551

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !11552
  call void @llvm.dbg.value(metadata i32 %14, metadata !11538, metadata !DIExpression()), !dbg !11541
  %15 = load i32, i32* %2, align 4, !dbg !11553
  call void @llvm.dbg.value(metadata i32 %15, metadata !11539, metadata !DIExpression()), !dbg !11541
  %16 = add i32 %15, 1, !dbg !11554
  %17 = udiv i32 %14, %16, !dbg !11555
  %18 = load i32, i32* %3, align 4, !dbg !11556
  call void @llvm.dbg.value(metadata i32 %18, metadata !11540, metadata !DIExpression()), !dbg !11541
  %19 = add i32 %18, 1, !dbg !11557
  %20 = udiv i32 %17, %19, !dbg !11558
  br label %21, !dbg !11559

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !11541
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11560
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11560
  ret i32 %22, !dbg !11560
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #17 !dbg !11561 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !11565, metadata !DIExpression()), !dbg !11567
  call void @llvm.dbg.value(metadata i32 %0, metadata !11566, metadata !DIExpression()), !dbg !11567
  %2 = inttoptr i32 %0 to i32*, !dbg !11568
  %3 = load volatile i32, i32* %2, align 4, !dbg !11568
  %4 = lshr i32 %3, 24, !dbg !11569
  %5 = and i32 %4, 7, !dbg !11569
  ret i32 %5, !dbg !11570
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !11571 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !11593, metadata !DIExpression()), !dbg !11598
  %4 = bitcast i32* %2 to i8*, !dbg !11599
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11599
  %5 = bitcast i32* %3 to i8*, !dbg !11599
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11599
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !11600
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !11601

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11594, metadata !DIExpression()), !dbg !11598
  call void @llvm.dbg.value(metadata i32* %2, metadata !11596, metadata !DIExpression(DW_OP_deref)), !dbg !11598
  call void @llvm.dbg.value(metadata i32* %3, metadata !11597, metadata !DIExpression(DW_OP_deref)), !dbg !11598
  br label %8, !dbg !11602

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !11604
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !11604
  call void @llvm.dbg.value(metadata i32 %10, metadata !11594, metadata !DIExpression()), !dbg !11598
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !11605

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #24, !dbg !11606
  call void @llvm.dbg.value(metadata i32 %12, metadata !11595, metadata !DIExpression()), !dbg !11598
  br label %13, !dbg !11608

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !11609
  call void @llvm.dbg.value(metadata i32 %14, metadata !11595, metadata !DIExpression()), !dbg !11598
  %15 = load i32, i32* %2, align 4, !dbg !11610
  call void @llvm.dbg.value(metadata i32 %15, metadata !11596, metadata !DIExpression()), !dbg !11598
  %16 = add i32 %15, 1, !dbg !11611
  %17 = udiv i32 %14, %16, !dbg !11612
  %18 = load i32, i32* %3, align 4, !dbg !11613
  call void @llvm.dbg.value(metadata i32 %18, metadata !11597, metadata !DIExpression()), !dbg !11598
  %19 = add i32 %18, 1, !dbg !11614
  %20 = udiv i32 %17, %19, !dbg !11615
  br label %21, !dbg !11616

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !11598
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11617
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11617
  ret i32 %22, !dbg !11617
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !11618 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !11664, metadata !DIExpression()), !dbg !11669
  %4 = bitcast i32* %2 to i8*, !dbg !11670
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11670
  %5 = bitcast i32* %3 to i8*, !dbg !11670
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11670
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !11671
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !11672

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11665, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata i32* %2, metadata !11667, metadata !DIExpression(DW_OP_deref)), !dbg !11669
  call void @llvm.dbg.value(metadata i32* %3, metadata !11668, metadata !DIExpression(DW_OP_deref)), !dbg !11669
  br label %8, !dbg !11673

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !11675
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !11675
  call void @llvm.dbg.value(metadata i32 %10, metadata !11665, metadata !DIExpression()), !dbg !11669
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !11676

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !11677
  %13 = lshr i32 %12, 2, !dbg !11679
  call void @llvm.dbg.value(metadata i32 %13, metadata !11666, metadata !DIExpression()), !dbg !11669
  br label %16, !dbg !11680

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %15, metadata !11666, metadata !DIExpression()), !dbg !11669
  br label %16, !dbg !11682

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !11683
  call void @llvm.dbg.value(metadata i32 %17, metadata !11666, metadata !DIExpression()), !dbg !11669
  %18 = load i32, i32* %2, align 4, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %18, metadata !11667, metadata !DIExpression()), !dbg !11669
  %19 = add i32 %18, 1, !dbg !11685
  %20 = udiv i32 %17, %19, !dbg !11686
  %21 = load i32, i32* %3, align 4, !dbg !11687
  call void @llvm.dbg.value(metadata i32 %21, metadata !11668, metadata !DIExpression()), !dbg !11669
  %22 = add i32 %21, 1, !dbg !11688
  %23 = udiv i32 %20, %22, !dbg !11689
  br label %24, !dbg !11690

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !11669
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11691
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11691
  ret i32 %25, !dbg !11691
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !11692 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !11710, metadata !DIExpression()), !dbg !11715
  %4 = bitcast i32* %2 to i8*, !dbg !11716
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11716
  %5 = bitcast i32* %3 to i8*, !dbg !11716
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11716
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !11717
  %7 = add i32 %6, -815923200, !dbg !11718
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !11718
  %9 = icmp ult i32 %8, 4, !dbg !11718
  br i1 %9, label %10, label %25, !dbg !11718

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !11718
  %12 = add i32 %11, 809020800, !dbg !11718
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #25, !dbg !11719
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !11719
  call void @llvm.dbg.value(metadata i32 %13, metadata !11711, metadata !DIExpression()), !dbg !11715
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !11721

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !11722
  %16 = lshr i32 %15, 2, !dbg !11724
  call void @llvm.dbg.value(metadata i32 %16, metadata !11712, metadata !DIExpression()), !dbg !11715
  br label %17, !dbg !11725

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !11726
  call void @llvm.dbg.value(metadata i32 %18, metadata !11712, metadata !DIExpression()), !dbg !11715
  %19 = load i32, i32* %2, align 4, !dbg !11727
  call void @llvm.dbg.value(metadata i32 %19, metadata !11713, metadata !DIExpression()), !dbg !11715
  %20 = add i32 %19, 1, !dbg !11728
  %21 = udiv i32 %18, %20, !dbg !11729
  %22 = load i32, i32* %3, align 4, !dbg !11730
  call void @llvm.dbg.value(metadata i32 %22, metadata !11714, metadata !DIExpression()), !dbg !11715
  %23 = add i32 %22, 1, !dbg !11731
  %24 = udiv i32 %21, %23, !dbg !11732
  br label %25, !dbg !11733

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !11715
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11734
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11734
  ret i32 %26, !dbg !11734
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #4

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !11735 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11762, metadata !DIExpression()), !dbg !11767
  %4 = bitcast i32* %2 to i8*, !dbg !11768
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11768
  %5 = bitcast i32* %3 to i8*, !dbg !11768
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11768
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11769
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !11770

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11763, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %2, metadata !11765, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %3, metadata !11766, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  br label %13, !dbg !11771

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11763, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %2, metadata !11765, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %3, metadata !11766, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  br label %13, !dbg !11773

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11763, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %2, metadata !11765, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %3, metadata !11766, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  br label %13, !dbg !11774

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11763, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %2, metadata !11765, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %3, metadata !11766, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  br label %13, !dbg !11775

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11763, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %2, metadata !11765, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %3, metadata !11766, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  br label %13, !dbg !11776

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !11763, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %2, metadata !11765, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  call void @llvm.dbg.value(metadata i32* %3, metadata !11766, metadata !DIExpression(DW_OP_deref)), !dbg !11767
  br label %13, !dbg !11777

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #25, !dbg !11778
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !11778
  call void @llvm.dbg.value(metadata i32 %15, metadata !11763, metadata !DIExpression()), !dbg !11767
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !11779

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !11780
  %18 = lshr i32 %17, 1, !dbg !11782
  call void @llvm.dbg.value(metadata i32 %18, metadata !11764, metadata !DIExpression()), !dbg !11767
  br label %21, !dbg !11783

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !11784
  call void @llvm.dbg.value(metadata i32 %20, metadata !11764, metadata !DIExpression()), !dbg !11767
  br label %21, !dbg !11785

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !11786
  call void @llvm.dbg.value(metadata i32 %22, metadata !11764, metadata !DIExpression()), !dbg !11767
  %23 = load i32, i32* %2, align 4, !dbg !11787
  call void @llvm.dbg.value(metadata i32 %23, metadata !11765, metadata !DIExpression()), !dbg !11767
  %24 = add i32 %23, 1, !dbg !11788
  %25 = udiv i32 %22, %24, !dbg !11789
  %26 = load i32, i32* %3, align 4, !dbg !11790
  call void @llvm.dbg.value(metadata i32 %26, metadata !11766, metadata !DIExpression()), !dbg !11767
  %27 = add i32 %26, 1, !dbg !11791
  %28 = udiv i32 %25, %27, !dbg !11792
  br label %29, !dbg !11793

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !11767
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11794
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11794
  ret i32 %30, !dbg !11794
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #19 !dbg !11795 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11798, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata i32 undef, metadata !11798, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata i32 undef, metadata !11798, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11814
  ret void, !dbg !11815
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11816 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11820, metadata !DIExpression()), !dbg !11822
  %2 = icmp eq i8* %0, null, !dbg !11823
  br i1 %2, label %29, label %3, !dbg !11825

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11826
  %5 = icmp eq i8 %4, 0, !dbg !11827
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11828
  br i1 %6, label %29, label %8, !dbg !11828

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11821, metadata !DIExpression()), !dbg !11822
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11829

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11821, metadata !DIExpression()), !dbg !11822
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !11831
  br i1 %10, label %11, label %15, !dbg !11836

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11837
  %13 = load i8*, i8** %12, align 4, !dbg !11837
  %14 = icmp eq i8* %13, %0, !dbg !11838
  br i1 %14, label %29, label %15, !dbg !11839

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11840
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11821, metadata !DIExpression()), !dbg !11822
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11841
  br i1 %17, label %7, label %8, !dbg !11842, !llvm.loop !11843

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11821, metadata !DIExpression()), !dbg !11822
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !11845
  br i1 %20, label %21, label %26, !dbg !11849

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11850
  %23 = load i8*, i8** %22, align 4, !dbg !11850
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !11851
  %25 = icmp eq i32 %24, 0, !dbg !11852
  br i1 %25, label %29, label %26, !dbg !11853

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11854
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11821, metadata !DIExpression()), !dbg !11822
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11855
  br i1 %28, label %29, label %18, !dbg !11829, !llvm.loop !11856

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11822
  ret %struct.device* %30, !dbg !11858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11863, metadata !DIExpression()), !dbg !11864
  %2 = icmp eq %struct.device* %0, null, !dbg !11865
  br i1 %2, label %14, label %3, !dbg !11867

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11868
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11868
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11869
  %7 = load i8, i8* %6, align 1, !dbg !11869
  %8 = and i8 %7, 1, !dbg !11869
  %9 = icmp eq i8 %8, 0, !dbg !11869
  br i1 %9, label %14, label %10, !dbg !11870

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11871
  %12 = load i8, i8* %11, align 1, !dbg !11871
  %13 = icmp eq i8 %12, 0, !dbg !11872
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11864
  ret i1 %15, !dbg !11873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !11874 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11879, metadata !DIExpression()), !dbg !11880
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11881
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11882
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11883 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11891, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11892, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i8* %2, metadata !11893, metadata !DIExpression()), !dbg !11896
  %5 = bitcast i32* %4 to i8*, !dbg !11897
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11897
  call void @llvm.dbg.value(metadata i32 0, metadata !11894, metadata !DIExpression()), !dbg !11896
  store i32 0, i32* %4, align 4, !dbg !11898
  call void @llvm.dbg.value(metadata i32* %4, metadata !11894, metadata !DIExpression(DW_OP_deref)), !dbg !11896
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !11899
  call void @llvm.dbg.value(metadata i16* %6, metadata !11895, metadata !DIExpression()), !dbg !11896
  %7 = load i32, i32* %4, align 4, !dbg !11900
  call void @llvm.dbg.value(metadata i32 %7, metadata !11894, metadata !DIExpression()), !dbg !11896
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !11901
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11902
  ret i32 %8, !dbg !11903
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !11904 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11908, metadata !DIExpression()), !dbg !11914
  call void @llvm.dbg.value(metadata i32* %1, metadata !11909, metadata !DIExpression()), !dbg !11914
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11915
  %4 = load i16*, i16** %3, align 4, !dbg !11915
  call void @llvm.dbg.value(metadata i16* %4, metadata !11910, metadata !DIExpression()), !dbg !11914
  %5 = icmp eq i16* %4, null, !dbg !11916
  br i1 %5, label %14, label %6, !dbg !11917

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11918
  call void @llvm.dbg.value(metadata i32 %7, metadata !11911, metadata !DIExpression()), !dbg !11918
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11919
  %9 = load i16, i16* %8, align 2, !dbg !11919
  %10 = add i16 %9, -32767, !dbg !11920
  %11 = icmp ult i16 %10, 2, !dbg !11920
  %12 = add i32 %7, 1, !dbg !11921
  call void @llvm.dbg.value(metadata i32 %12, metadata !11911, metadata !DIExpression()), !dbg !11918
  br i1 %11, label %13, label %6, !dbg !11920, !llvm.loop !11923

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11926
  br label %14, !dbg !11927

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11929 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11933, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.value(metadata i32 %1, metadata !11934, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11935, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.value(metadata i8* %3, metadata !11936, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.value(metadata i32 0, metadata !11937, metadata !DIExpression()), !dbg !11945
  %5 = icmp eq i32 %1, 0, !dbg !11946
  br i1 %5, label %16, label %8, !dbg !11947

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11937, metadata !DIExpression()), !dbg !11945
  %7 = icmp eq i32 %15, %1, !dbg !11946
  br i1 %7, label %16, label %8, !dbg !11947, !llvm.loop !11948

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11937, metadata !DIExpression()), !dbg !11945
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11950
  %11 = load i16, i16* %10, align 2, !dbg !11950
  call void @llvm.dbg.value(metadata i16 %11, metadata !11939, metadata !DIExpression()), !dbg !11951
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !11952
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11942, metadata !DIExpression()), !dbg !11951
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !11953
  call void @llvm.dbg.value(metadata i32 %13, metadata !11943, metadata !DIExpression()), !dbg !11951
  %14 = icmp slt i32 %13, 0, !dbg !11954
  %15 = add nuw i32 %9, 1, !dbg !11956
  call void @llvm.dbg.value(metadata i32 %15, metadata !11937, metadata !DIExpression()), !dbg !11945
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #6 !dbg !11958 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11962, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11963, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11964, metadata !DIExpression()), !dbg !11965
  %2 = sext i16 %0 to i32, !dbg !11966
  %3 = icmp slt i16 %0, 1, !dbg !11968
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11969
  %6 = add nsw i32 %2, -1, !dbg !11969
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11969
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11969
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11963, metadata !DIExpression()), !dbg !11965
  ret %struct.device* %8, !dbg !11970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11971 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11973, metadata !DIExpression()), !dbg !11978
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11974, metadata !DIExpression()), !dbg !11978
  call void @llvm.dbg.value(metadata i8* %2, metadata !11975, metadata !DIExpression()), !dbg !11978
  %5 = bitcast i32* %4 to i8*, !dbg !11979
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11979
  call void @llvm.dbg.value(metadata i32 0, metadata !11976, metadata !DIExpression()), !dbg !11978
  store i32 0, i32* %4, align 4, !dbg !11980
  call void @llvm.dbg.value(metadata i32* %4, metadata !11976, metadata !DIExpression(DW_OP_deref)), !dbg !11978
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !11981
  call void @llvm.dbg.value(metadata i16* %6, metadata !11977, metadata !DIExpression()), !dbg !11978
  %7 = load i32, i32* %4, align 4, !dbg !11982
  call void @llvm.dbg.value(metadata i32 %7, metadata !11976, metadata !DIExpression()), !dbg !11978
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !11983
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11984
  ret i32 %8, !dbg !11985
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !11986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11988, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.value(metadata i32* %1, metadata !11989, metadata !DIExpression()), !dbg !11993
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11994
  %4 = load i16*, i16** %3, align 4, !dbg !11994
  call void @llvm.dbg.value(metadata i16* %4, metadata !11990, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.value(metadata i32 0, metadata !11991, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.value(metadata i32 0, metadata !11992, metadata !DIExpression()), !dbg !11993
  %5 = icmp eq i16* %4, null, !dbg !11995
  br i1 %5, label %22, label %6, !dbg !11997

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11991, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.value(metadata i16* %8, metadata !11990, metadata !DIExpression()), !dbg !11993
  %9 = load i16, i16* %8, align 2, !dbg !11998
  %10 = icmp eq i16 %9, -32768, !dbg !12002
  call void @llvm.dbg.value(metadata i32 undef, metadata !11991, metadata !DIExpression()), !dbg !11993
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12003
  call void @llvm.dbg.value(metadata i16* %11, metadata !11990, metadata !DIExpression()), !dbg !11993
  %12 = zext i1 %10 to i32, !dbg !12004
  %13 = add i32 %7, %12, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %13, metadata !11991, metadata !DIExpression()), !dbg !11993
  %14 = icmp eq i32 %13, 2, !dbg !12005
  br i1 %14, label %15, label %6, !dbg !12006

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11993
  call void @llvm.dbg.value(metadata i32 %16, metadata !11992, metadata !DIExpression()), !dbg !11993
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12007
  %18 = load i16, i16* %17, align 2, !dbg !12007
  %19 = icmp eq i16 %18, 32767, !dbg !12008
  %20 = add i32 %16, 1, !dbg !12009
  call void @llvm.dbg.value(metadata i32 %20, metadata !11992, metadata !DIExpression()), !dbg !11993
  br i1 %19, label %21, label %15, !dbg !12011, !llvm.loop !12012

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12014
  br label %22, !dbg !12015

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12016
  call void @llvm.dbg.value(metadata i16* %23, metadata !11990, metadata !DIExpression()), !dbg !11993
  ret i16* %23, !dbg !12017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12018 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12021
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12022
  ret i32* %2, !dbg !12023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #6 !dbg !12024 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12167, metadata !DIExpression()), !dbg !12170
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12168, metadata !DIExpression()), !dbg !12170
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12169, metadata !DIExpression()), !dbg !12170
  ret void, !dbg !12171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12176, metadata !DIExpression()), !dbg !12178
  call void @llvm.dbg.value(metadata i32 %1, metadata !12177, metadata !DIExpression()), !dbg !12178
  ret void, !dbg !12179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12180 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12184, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.value(metadata i32 %1, metadata !12185, metadata !DIExpression()), !dbg !12186
  ret void, !dbg !12187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12192, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.value(metadata i8* %1, metadata !12193, metadata !DIExpression()), !dbg !12194
  ret i32 -134, !dbg !12195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12200, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i8* %1, metadata !12201, metadata !DIExpression()), !dbg !12202
  ret i32 -134, !dbg !12203
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12207, metadata !DIExpression()), !dbg !12208
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12209, !srcloc !12215
  call void @llvm.dbg.value(metadata i32 undef, metadata !12212, metadata !DIExpression()) #23, !dbg !12216
  call void @llvm.dbg.value(metadata i32 undef, metadata !12213, metadata !DIExpression()) #23, !dbg !12216
  br label %3, !dbg !12217

3:                                                ; preds = %3, %1
  br label %3, !dbg !12218, !llvm.loop !12221
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12228, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12229, metadata !DIExpression()), !dbg !12230
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.108, i32 0, i32 0), i32 noundef 69) #24, !dbg !12231
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !12236
  unreachable, !dbg !12236
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12239, metadata !DIExpression()), !dbg !12240
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !12241
  unreachable, !dbg !12241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12244, metadata !DIExpression()), !dbg !12248
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12245, metadata !DIExpression()), !dbg !12248
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12249, !srcloc !12215
  call void @llvm.dbg.value(metadata i32 undef, metadata !12212, metadata !DIExpression()) #23, !dbg !12251
  call void @llvm.dbg.value(metadata i32 undef, metadata !12213, metadata !DIExpression()) #23, !dbg !12251
  call void @llvm.dbg.value(metadata i32 undef, metadata !12246, metadata !DIExpression()), !dbg !12248
  %4 = tail call fastcc %struct.k_thread* @k_current_get.111() #26, !dbg !12252
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12247, metadata !DIExpression()), !dbg !12248
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !12253
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.112, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #24, !dbg !12253
  %6 = icmp eq %struct.__esf* %1, null, !dbg !12258
  br i1 %6, label %15, label %7, !dbg !12260

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12261, metadata !DIExpression()), !dbg !12266
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12268
  %9 = load i32, i32* %8, align 4, !dbg !12268
  %10 = and i32 %9, 511, !dbg !12269
  %11 = icmp eq i32 %10, 0, !dbg !12270
  br i1 %11, label %13, label %12, !dbg !12271

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.113, i32 0, i32 0), i32 noundef 69) #24, !dbg !12272
  br label %13, !dbg !12278

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #25, !dbg !12279
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.114, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #24, !dbg !12279
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !12284
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12261, metadata !DIExpression()), !dbg !12285
  br label %17, !dbg !12290

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #25, !dbg !12279
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.114, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #24, !dbg !12279
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !12284
  br label %17, !dbg !12291

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !12249
  call void @llvm.dbg.value(metadata i32 %18, metadata !12212, metadata !DIExpression()) #23, !dbg !12251
  call void @llvm.dbg.value(metadata i32 %18, metadata !12246, metadata !DIExpression()), !dbg !12248
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12295
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12297, !srcloc !12298
  tail call fastcc void @k_thread_abort.115(%struct.k_thread* noundef %4) #25, !dbg !12299
  ret void, !dbg !12302
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.111() unnamed_addr #11 !dbg !12303 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.123() #26, !dbg !12307
  ret %struct.k_thread* %1, !dbg !12308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #6 !dbg !12309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12313, metadata !DIExpression()), !dbg !12314
  %2 = icmp ult i32 %0, 5, !dbg !12315
  br i1 %2, label %3, label %6, !dbg !12315

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12315
  %5 = load i8*, i8** %4, align 4, !dbg !12315
  br label %6, !dbg !12315

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.117, i32 0, i32 0), %1 ], !dbg !12316
  ret i8* %7, !dbg !12318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12319 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12323, metadata !DIExpression()), !dbg !12325
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12326
  br i1 %2, label %9, label %3, !dbg !12327

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !12328
  call void @llvm.dbg.value(metadata i8* %4, metadata !12324, metadata !DIExpression()), !dbg !12325
  %5 = icmp eq i8* %4, null, !dbg !12329
  br i1 %5, label %9, label %6, !dbg !12331

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12332
  %8 = icmp eq i8 %7, 0, !dbg !12333
  br i1 %8, label %9, label %10, !dbg !12334

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.116, i32 0, i32 0), metadata !12324, metadata !DIExpression()), !dbg !12325
  br label %10, !dbg !12335

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.116, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12325
  call void @llvm.dbg.value(metadata i8* %11, metadata !12324, metadata !DIExpression()), !dbg !12325
  ret i8* %11, !dbg !12337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.115(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12342, metadata !DIExpression()), !dbg !12343
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12344, !srcloc !12346
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !12347
  ret void, !dbg !12348
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.123() unnamed_addr #11 !dbg !12349 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12350, !srcloc !12352
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !12353
  ret %struct.k_thread* %1, !dbg !12354
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12355 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12359, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.value(metadata i32 %1, metadata !12360, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.value(metadata i32 %2, metadata !12361, metadata !DIExpression()), !dbg !12362
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !12363
  ret void, !dbg !12364
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12365 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12369, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.value(metadata i8* %1, metadata !12370, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.value(metadata i32 %2, metadata !12371, metadata !DIExpression()), !dbg !12372
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !12373
  ret void, !dbg !12374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12375 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !12376
  ret void, !dbg !12377
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12382, metadata !DIExpression()), !dbg !12383
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !12384
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12385
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12386
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12387
  %4 = trunc i32 %0 to i8, !dbg !12388
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12389
  store i8 %4, i8* %5, align 4, !dbg !12390
  %6 = getelementptr inbounds [1 x [2048 x %struct.action_msg]], [1 x [2048 x %struct.action_msg]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12391
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.action_msg* noundef nonnull %6) #25, !dbg !12392
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12393
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12394
  store i8* %8, i8** %9, align 4, !dbg !12395
  ret void, !dbg !12396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12399, metadata !DIExpression()), !dbg !12405
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12406
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12400, metadata !DIExpression()), !dbg !12405
  %3 = getelementptr inbounds [1 x [320 x %struct.action_msg]], [1 x [320 x %struct.action_msg]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12407
  call void @llvm.dbg.value(metadata %struct.action_msg* %3, metadata !12401, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.130, i32 0, i32 0), metadata !12404, metadata !DIExpression()), !dbg !12405
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12408
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12409
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.action_msg* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.130, i32 0, i32 0)) #24, !dbg !12410
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !12411
  ret void, !dbg !12412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.action_msg* noundef readnone %0) unnamed_addr #6 !dbg !12413 {
  call void @llvm.dbg.value(metadata %struct.action_msg* %0, metadata !12417, metadata !DIExpression()), !dbg !12418
  %2 = getelementptr %struct.action_msg, %struct.action_msg* %0, i32 0, i32 0, !dbg !12419
  ret i8* %2, !dbg !12420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12421 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12426, metadata !DIExpression()), !dbg !12427
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12428
  %3 = load i8, i8* %2, align 1, !dbg !12429
  %4 = and i8 %3, -5, !dbg !12429
  store i8 %4, i8* %2, align 1, !dbg !12429
  ret void, !dbg !12430
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12431 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !12434
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.action_msg* noundef getelementptr inbounds ([1 x [2048 x %struct.action_msg]], [1 x [2048 x %struct.action_msg]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !12435
  %3 = ptrtoint i8* %2 to i32, !dbg !12444
  %4 = add i32 %3, 2048, !dbg !12445
  call void @llvm.dbg.value(metadata i32 %4, metadata !12439, metadata !DIExpression()) #23, !dbg !12446
  call void @llvm.dbg.value(metadata i32 %4, metadata !12447, metadata !DIExpression()) #23, !dbg !12450
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12452, !srcloc !12453
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12454
  %6 = or i32 %5, 512, !dbg !12454
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12454
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -2, i32 noundef 255) #24, !dbg !12455
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -5, i32 noundef 0) #24, !dbg !12458
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -12, i32 noundef 0) #24, !dbg !12459
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -11, i32 noundef 0) #24, !dbg !12460
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -10, i32 noundef 0) #24, !dbg !12461
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -4, i32 noundef 0) #24, !dbg !12462
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12463
  %8 = or i32 %7, 458752, !dbg !12463
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12463
  tail call void @z_arm_fault_init() #24, !dbg !12464
  tail call void @z_arm_cpu_idle_init() #24, !dbg !12465
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12466
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12469
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !12470
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %9) #23, !dbg !12470
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12433, metadata !DIExpression()), !dbg !12471
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !12472
  call void @z_device_state_init() #24, !dbg !12473
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !12474
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !12475
  %10 = call fastcc i8* @prepare_multithreading() #25, !dbg !12476
  call fastcc void @switch_to_main_thread(i8* noundef %10) #28, !dbg !12477
  unreachable, !dbg !12477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2425, metadata !DIExpression()), !dbg !12478
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12479
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12479
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2426, metadata !DIExpression()), !dbg !12478
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2426, metadata !DIExpression()), !dbg !12478
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12480
  br i1 %7, label %8, label %35, !dbg !12481

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2426, metadata !DIExpression()), !dbg !12478
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12482
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12482
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2436, metadata !DIExpression()), !dbg !12483
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12484
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12484
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !12485
  call void @llvm.dbg.value(metadata i32 %14, metadata !2440, metadata !DIExpression()), !dbg !12483
  %15 = icmp eq %struct.device* %11, null, !dbg !12486
  br i1 %15, label %32, label %16, !dbg !12488

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12489
  br i1 %17, label %26, label %18, !dbg !12492

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12493
  call void @llvm.dbg.value(metadata i32 %19, metadata !2440, metadata !DIExpression()), !dbg !12483
  %20 = icmp ult i32 %19, 255, !dbg !12495
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12495
  call void @llvm.dbg.value(metadata i32 %21, metadata !2440, metadata !DIExpression()), !dbg !12483
  %22 = trunc i32 %21 to i8, !dbg !12496
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12497
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12497
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12498
  store i8 %22, i8* %25, align 1, !dbg !12499
  br label %26, !dbg !12500

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12501
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12501
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12502
  %30 = load i8, i8* %29, align 1, !dbg !12503
  %31 = or i8 %30, 1, !dbg !12503
  store i8 %31, i8* %29, align 1, !dbg !12503
  br label %32, !dbg !12504

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12505
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2426, metadata !DIExpression()), !dbg !12478
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12480
  br i1 %34, label %8, label %35, !dbg !12481, !llvm.loop !12506

35:                                               ; preds = %32, %1
  ret void, !dbg !12508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.133(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12511, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 %1, metadata !12512, metadata !DIExpression()), !dbg !12513
  %3 = trunc i32 %1 to i8, !dbg !12514
  %4 = shl i8 %3, 4, !dbg !12514
  %5 = and i32 %0, 15, !dbg !12517
  %6 = add nsw i32 %5, -4, !dbg !12518
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12519
  store volatile i8 %4, i8* %7, align 1, !dbg !12520
  ret void, !dbg !12521
}

; Function Attrs: optsize
declare !dbg !12522 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !12523 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12526, metadata !DIExpression()), !dbg !12527
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12528
  store i8 1, i8* %2, align 1, !dbg !12529
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12530
  store i8 1, i8* %3, align 4, !dbg !12531
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12532
  store %struct.k_heap* null, %struct.k_heap** %4, align 4, !dbg !12533
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12534
  ret void, !dbg !12535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12536 {
  tail call void @z_sched_init() #24, !dbg !12541
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12542
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.action_msg* noundef getelementptr inbounds ([1024 x %struct.action_msg], [1024 x %struct.action_msg]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.134, i32 0, i32 0)) #24, !dbg !12543
  call void @llvm.dbg.value(metadata i8* %1, metadata !12540, metadata !DIExpression()), !dbg !12544
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12545
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12546
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !12547
  ret i8* %1, !dbg !12548
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12549 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12553, metadata !DIExpression()), !dbg !12554
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !12555
  unreachable, !dbg !12556
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12557 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12559, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i8* %1, metadata !12560, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i8* %2, metadata !12561, metadata !DIExpression()), !dbg !12562
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12563
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !12564
  tail call void @boot_banner() #24, !dbg !12565
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !12566
  tail call void @z_init_static_threads() #24, !dbg !12567
  tail call void @main() #24, !dbg !12568
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12569
  %5 = and i8 %4, -2, !dbg !12569
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12569
  ret void, !dbg !12570
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !12571 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12581, metadata !DIExpression()), !dbg !12583
  call void @llvm.dbg.value(metadata i8* %1, metadata !12582, metadata !DIExpression()), !dbg !12583
  ret void, !dbg !12584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !12585 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12587, metadata !DIExpression()), !dbg !12589
  call void @llvm.dbg.value(metadata i8* %1, metadata !12588, metadata !DIExpression()), !dbg !12589
  ret void, !dbg !12590
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12591 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12592, !srcloc !12599
  call void @llvm.dbg.value(metadata i32 %1, metadata !12595, metadata !DIExpression()) #23, !dbg !12600
  %2 = icmp ne i32 %1, 0, !dbg !12601
  ret i1 %2, !dbg !12602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #10 !dbg !12603 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12604
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12605
  %3 = load i8, i8* %2, align 4, !dbg !12606
  %4 = or i8 %3, 1, !dbg !12606
  store i8 %4, i8* %2, align 4, !dbg !12606
  ret void, !dbg !12607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #10 !dbg !12608 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12609
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12610
  %3 = load i8, i8* %2, align 4, !dbg !12611
  %4 = and i8 %3, -2, !dbg !12611
  store i8 %4, i8* %2, align 4, !dbg !12611
  ret void, !dbg !12612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12613 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12614
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12615
  %3 = load i8, i8* %2, align 4, !dbg !12615
  %4 = and i8 %3, 1, !dbg !12616
  %5 = icmp ne i8 %4, 0, !dbg !12617
  ret i1 %5, !dbg !12618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12623, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i8* %1, metadata !12624, metadata !DIExpression()), !dbg !12625
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12626
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !12628
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12623, metadata !DIExpression()), !dbg !12625
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !12629
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #24, !dbg !12630
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !12631
  store i8 0, i8* %8, align 1, !dbg !12632
  ret i32 0, !dbg !12633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #6 !dbg !12634 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12638, metadata !DIExpression()), !dbg !12639
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !12640
  ret i8* %2, !dbg !12641
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12646, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.value(metadata i8* %1, metadata !12647, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.value(metadata i32 %2, metadata !12648, metadata !DIExpression()), !dbg !12649
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !12650
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #24, !dbg !12651
  ret i32 0, !dbg !12652
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2449 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2559, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.value(metadata i8* %1, metadata !2560, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.value(metadata i32 %2, metadata !2561, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.value(metadata i32 0, metadata !2562, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.value(metadata i8 undef, metadata !2564, metadata !DIExpression()), !dbg !12653
  %4 = icmp eq i8* %1, null, !dbg !12654
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12656
  br i1 %6, label %46, label %7, !dbg !12656

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12657
  %9 = load i8, i8* %8, align 1, !dbg !12657
  call void @llvm.dbg.value(metadata i8 %9, metadata !2564, metadata !DIExpression()), !dbg !12653
  %10 = add i32 %2, -1, !dbg !12658
  call void @llvm.dbg.value(metadata i32 %10, metadata !2561, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.value(metadata i8 0, metadata !2565, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.value(metadata i8 %9, metadata !2564, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.value(metadata i32 0, metadata !2562, metadata !DIExpression()), !dbg !12653
  %11 = icmp eq i8 %9, 0, !dbg !12660
  br i1 %11, label %12, label %15, !dbg !12662

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12663
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12664
  store i8 0, i8* %14, align 1, !dbg !12665
  br label %46, !dbg !12666

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2565, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.value(metadata i8 %17, metadata !2564, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.value(metadata i32 %18, metadata !2562, metadata !DIExpression()), !dbg !12653
  %19 = zext i8 %17 to i32, !dbg !12667
  %20 = zext i8 %16 to i32, !dbg !12668
  %21 = shl nuw i32 1, %20, !dbg !12668
  call void @llvm.dbg.value(metadata i32 %21, metadata !2563, metadata !DIExpression()), !dbg !12653
  %22 = and i32 %21, %19, !dbg !12670
  %23 = icmp eq i32 %22, 0, !dbg !12672
  br i1 %23, label %42, label %24, !dbg !12673

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12674
  %26 = sub i32 %10, %18, !dbg !12675
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12676
  %28 = load i8*, i8** %27, align 4, !dbg !12676
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12677
  %30 = load i32, i32* %29, align 4, !dbg !12677
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !12678
  %32 = add i32 %31, %18, !dbg !12679
  call void @llvm.dbg.value(metadata i32 %32, metadata !2562, metadata !DIExpression()), !dbg !12653
  %33 = trunc i32 %21 to i8, !dbg !12680
  %34 = xor i8 %33, -1, !dbg !12680
  %35 = and i8 %17, %34, !dbg !12680
  call void @llvm.dbg.value(metadata i8 %35, metadata !2564, metadata !DIExpression()), !dbg !12653
  %36 = icmp eq i8 %35, 0, !dbg !12681
  br i1 %36, label %12, label %37, !dbg !12683

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12684
  %39 = sub i32 %10, %32, !dbg !12686
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.137, i32 0, i32 0), i32 noundef 1) #25, !dbg !12687
  %41 = add i32 %40, %32, !dbg !12688
  call void @llvm.dbg.value(metadata i32 %41, metadata !2562, metadata !DIExpression()), !dbg !12653
  br label %42, !dbg !12689

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12653
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12653
  call void @llvm.dbg.value(metadata i8 %44, metadata !2564, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.value(metadata i32 %43, metadata !2562, metadata !DIExpression()), !dbg !12653
  %45 = add i8 %16, 1, !dbg !12690
  call void @llvm.dbg.value(metadata i8 %45, metadata !2565, metadata !DIExpression()), !dbg !12659
  br label %15, !dbg !12662

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.138, i32 0, i32 0), %3 ], !dbg !12653
  ret i8* %47, !dbg !12691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12692 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12696, metadata !DIExpression()), !dbg !12701
  call void @llvm.dbg.value(metadata i32 %1, metadata !12697, metadata !DIExpression()), !dbg !12701
  call void @llvm.dbg.value(metadata i8* %2, metadata !12698, metadata !DIExpression()), !dbg !12701
  call void @llvm.dbg.value(metadata i32 %3, metadata !12699, metadata !DIExpression()), !dbg !12701
  %5 = icmp ult i32 %1, %3, !dbg !12702
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12702
  call void @llvm.dbg.value(metadata i32 %6, metadata !12700, metadata !DIExpression()), !dbg !12701
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !12703
  ret i32 %6, !dbg !12704
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12709, metadata !DIExpression()), !dbg !12710
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !12711
  ret void, !dbg !12712
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.action_msg* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !12713 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12722, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata %struct.action_msg* %1, metadata !12723, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i32 %2, metadata !12724, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12725, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i8* %4, metadata !12726, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i8* %5, metadata !12727, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i8* %6, metadata !12728, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i32 %7, metadata !12729, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i32 %8, metadata !12730, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i8* %9, metadata !12731, metadata !DIExpression()), !dbg !12733
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12734
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #25, !dbg !12735
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12736
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !12737
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.action_msg* noundef %1, i32 noundef %2) #25, !dbg !12738
  call void @llvm.dbg.value(metadata i8* %13, metadata !12732, metadata !DIExpression()), !dbg !12733
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.action_msg* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !12739
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12740
  store i8* null, i8** %14, align 4, !dbg !12741
  %15 = icmp eq i8* %9, null, !dbg !12742
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !12744
  br i1 %15, label %20, label %17, !dbg !12745

17:                                               ; preds = %10
  %18 = tail call i8* @strncpy(i8* noundef nonnull %16, i8* noundef nonnull %9, i32 noundef 31) #24, !dbg !12746
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !12748
  store i8 0, i8* %19, align 1, !dbg !12749
  br label %21, !dbg !12750

20:                                               ; preds = %10
  store i8 0, i8* %16, align 8, !dbg !12751
  br label %21

21:                                               ; preds = %20, %17
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12753
  %23 = icmp eq %struct.k_thread* %22, null, !dbg !12753
  br i1 %23, label %27, label %24, !dbg !12755

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 6, !dbg !12756
  %26 = load %struct.k_heap*, %struct.k_heap** %25, align 4, !dbg !12756
  br label %27, !dbg !12757

27:                                               ; preds = %21, %24
  %28 = phi %struct.k_heap* [ %26, %24 ], [ null, %21 ], !dbg !12733
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12758
  store %struct.k_heap* %28, %struct.k_heap** %29, align 4, !dbg !12760
  ret i8* %13, !dbg !12761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !12762 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12767, metadata !DIExpression()), !dbg !12768
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12769
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !12770
  ret void, !dbg !12771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !12772 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12777, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.value(metadata i32 %1, metadata !12778, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.value(metadata i32 %2, metadata !12779, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.value(metadata i32 %3, metadata !12780, metadata !DIExpression()), !dbg !12781
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12782
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12783
  %6 = trunc i32 %3 to i8, !dbg !12784
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12785
  store i8 %6, i8* %7, align 4, !dbg !12786
  %8 = trunc i32 %2 to i8, !dbg !12787
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12788
  store i8 %8, i8* %9, align 1, !dbg !12789
  %10 = trunc i32 %1 to i8, !dbg !12790
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12791
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12791
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12791
  store i8 %10, i8* %13, align 2, !dbg !12792
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12793
  store i8 0, i8* %14, align 1, !dbg !12794
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !12795
  ret void, !dbg !12796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.action_msg* noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !12797 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12801, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata %struct.action_msg* %0, metadata !12802, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata i32 %1, metadata !12803, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata i32 0, metadata !12808, metadata !DIExpression()), !dbg !12809
  %3 = add i32 %1, 7, !dbg !12810
  %4 = and i32 %3, -8, !dbg !12810
  call void @llvm.dbg.value(metadata i32 %4, metadata !12804, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata i8* undef, metadata !12807, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata i32 %4, metadata !12805, metadata !DIExpression()), !dbg !12809
  %5 = getelementptr inbounds %struct.action_msg, %struct.action_msg* %0, i32 %4, i32 0, !dbg !12812
  call void @llvm.dbg.value(metadata i8* %5, metadata !12806, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata i32 0, metadata !12808, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata i8* %5, metadata !12806, metadata !DIExpression()), !dbg !12809
  ret i8* %5, !dbg !12813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !12814 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12819, metadata !DIExpression()), !dbg !12820
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12821
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12822
  ret void, !dbg !12823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !12824 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12826, metadata !DIExpression()), !dbg !12827
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12828
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !12829
  ret void, !dbg !12830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !12831 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12835, metadata !DIExpression()), !dbg !12836
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12837
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12838
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12839
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12840
  ret void, !dbg !12841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !12842 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12847, metadata !DIExpression()), !dbg !12848
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12849
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12850
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12851
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12852
  ret void, !dbg !12853
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.action_msg* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12854 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12871, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12862, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata %struct.action_msg* %1, metadata !12863, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata i32 %2, metadata !12864, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12865, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata i8* %4, metadata !12866, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata i8* %5, metadata !12867, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata i8* %6, metadata !12868, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata i32 %7, metadata !12869, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata i32 %8, metadata !12870, metadata !DIExpression()), !dbg !12872
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.action_msg* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #25, !dbg !12873
  %13 = icmp eq i64 %11, -1, !dbg !12874
  br i1 %13, label %15, label %14, !dbg !12876

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !12877
  br label %15, !dbg !12879

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12881 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12886, metadata !DIExpression()), !dbg !12887
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12885, metadata !DIExpression()), !dbg !12887
  %4 = icmp eq i64 %3, 0, !dbg !12888
  br i1 %4, label %5, label %6, !dbg !12890

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !12891
  br label %7, !dbg !12893

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !12894
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12897 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12901, metadata !DIExpression()), !dbg !12902
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12903, !srcloc !12905
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !12906
  ret void, !dbg !12907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12908 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12911, metadata !DIExpression()), !dbg !12912
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12910, metadata !DIExpression()), !dbg !12912
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12913
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !12914
  ret void, !dbg !12915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12916 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12918, metadata !DIExpression()), !dbg !12937
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %30, !dbg !12938

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !12939
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12935, metadata !DIExpression()), !dbg !12940
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %32, label %31, !dbg !12941

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %28, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12918, metadata !DIExpression()), !dbg !12937
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12942
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12942
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12945
  %7 = load %struct.action_msg*, %struct.action_msg** %6, align 4, !dbg !12945
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12946
  %9 = load i32, i32* %8, align 4, !dbg !12946
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12947
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12947
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12948
  %13 = load i8*, i8** %12, align 4, !dbg !12948
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12949
  %15 = load i8*, i8** %14, align 4, !dbg !12949
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12950
  %17 = load i8*, i8** %16, align 4, !dbg !12950
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12951
  %19 = load i32, i32* %18, align 4, !dbg !12951
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12952
  %21 = load i32, i32* %20, align 4, !dbg !12952
  %22 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !12953
  %23 = load i8*, i8** %22, align 4, !dbg !12953
  %24 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.action_msg* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* noundef %23) #25, !dbg !12954
  %25 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12955
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %25, i32 0, i32 2, !dbg !12956
  %27 = bitcast i8** %26 to %struct._static_thread_data**, !dbg !12957
  store %struct._static_thread_data* %3, %struct._static_thread_data** %27, align 4, !dbg !12957
  %28 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12958
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %28, metadata !12918, metadata !DIExpression()), !dbg !12937
  %29 = icmp ult %struct._static_thread_data* %28, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12959
  br i1 %29, label %2, label %1, !dbg !12938, !llvm.loop !12961

30:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !12939
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12935, metadata !DIExpression()), !dbg !12940
  br label %31, !dbg !12941

31:                                               ; preds = %45, %30, %1
  tail call void @k_sched_unlock() #24, !dbg !12963
  ret void, !dbg !12964

32:                                               ; preds = %1, %45
  %33 = phi %struct._static_thread_data* [ %46, %45 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !12935, metadata !DIExpression()), !dbg !12940
  %34 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !12965
  %35 = load i32, i32* %34, align 4, !dbg !12965
  %36 = icmp eq i32 %35, -1, !dbg !12969
  br i1 %36, label %45, label %37, !dbg !12970

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !12971
  %39 = load %struct.k_thread*, %struct.k_thread** %38, align 4, !dbg !12971
  %40 = icmp sgt i32 %35, 0, !dbg !12973
  %41 = select i1 %40, i32 %35, i32 0, !dbg !12973
  %42 = zext i32 %41 to i64, !dbg !12973
  %43 = tail call fastcc i64 @k_ms_to_ticks_ceil64.150(i64 noundef %42) #25, !dbg !12973
  %44 = insertvalue [1 x i64] poison, i64 %43, 0, !dbg !12974
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %39, [1 x i64] %44) #25, !dbg !12974
  br label %45, !dbg !12975

45:                                               ; preds = %32, %37
  %46 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !12976
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %46, metadata !12935, metadata !DIExpression()), !dbg !12940
  %47 = icmp ult %struct._static_thread_data* %46, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12977
  br i1 %47, label %32, label %31, !dbg !12941, !llvm.loop !12979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.150(i64 noundef %0) unnamed_addr #6 !dbg !12981 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12983, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i64 %0, metadata !12985, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i32 1000, metadata !12988, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i32 10000, metadata !12989, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i8 1, metadata !12990, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i8 0, metadata !12991, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i8 1, metadata !12992, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i8 0, metadata !12993, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i8 1, metadata !12994, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i8 0, metadata !12995, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i64 0, metadata !12996, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i64 0, metadata !12996, metadata !DIExpression()), !dbg !13000
  %2 = mul i64 %0, 10, !dbg !13002
  ret i64 %2, !dbg !13008
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !13009 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13011, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.value(metadata i8* %1, metadata !13012, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.value(metadata i8* %2, metadata !13013, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.value(metadata i8* %3, metadata !13014, metadata !DIExpression()), !dbg !13015
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13016
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13017
  %7 = load i8, i8* %6, align 4, !dbg !13018
  %8 = or i8 %7, 4, !dbg !13018
  store i8 %8, i8* %6, align 4, !dbg !13018
  tail call void @z_thread_essential_clear() #25, !dbg !13019
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13020
  unreachable, !dbg !13020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !13021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13025, metadata !DIExpression()), !dbg !13026
  ret i32 -134, !dbg !13027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13032, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 %1, metadata !13033, metadata !DIExpression()), !dbg !13034
  ret i32 -134, !dbg !13035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #6 !dbg !13036 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13043, metadata !DIExpression()), !dbg !13045
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13044, metadata !DIExpression()), !dbg !13045
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13046
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13048
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13045
  ret i32 %6, !dbg !13049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #6 !dbg !13050 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13054, metadata !DIExpression()), !dbg !13055
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13056
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13055
  ret i32 %3, !dbg !13058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13059 {
  tail call void @sys_clock_idle_exit() #24, !dbg !13061
  ret void, !dbg !13062
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13063 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13065, metadata !DIExpression()), !dbg !13068
  call void @llvm.dbg.value(metadata i8* %1, metadata !13066, metadata !DIExpression()), !dbg !13068
  call void @llvm.dbg.value(metadata i8* %2, metadata !13067, metadata !DIExpression()), !dbg !13068
  br label %4, !dbg !13069

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13070, !srcloc !13077
  call void @llvm.dbg.value(metadata i32 undef, metadata !13073, metadata !DIExpression()) #23, !dbg !13078
  call void @llvm.dbg.value(metadata i32 undef, metadata !13074, metadata !DIExpression()) #23, !dbg !13078
  tail call fastcc void @k_cpu_idle() #25, !dbg !13079
  br label %4, !dbg !13069, !llvm.loop !13080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13082 {
  tail call void @arch_cpu_idle() #24, !dbg !13083
  ret void, !dbg !13084
}

; Function Attrs: optsize
declare !dbg !13085 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !13086 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13104, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i8* %1, metadata !13105, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i32 %2, metadata !13106, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i32 %3, metadata !13107, metadata !DIExpression()), !dbg !13108
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13109
  store i32 %2, i32* %5, align 4, !dbg !13110
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13111
  store i32 %3, i32* %6, align 4, !dbg !13112
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13113
  store i8* %1, i8** %7, align 4, !dbg !13114
  %8 = mul i32 %3, %2, !dbg !13115
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !13116
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13117
  store i8* %9, i8** %10, align 4, !dbg !13118
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13119
  store i8* %1, i8** %11, align 4, !dbg !13120
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13121
  store i8* %1, i8** %12, align 4, !dbg !13122
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13123
  store i32 0, i32* %13, align 4, !dbg !13124
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13125
  store i8 0, i8* %14, align 4, !dbg !13126
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13127
  tail call fastcc void @z_waitq_init.153(%struct._wait_q_t* noundef %15) #25, !dbg !13128
  ret void, !dbg !13129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.153(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !13130 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13134, metadata !DIExpression()), !dbg !13135
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13136
  tail call fastcc void @sys_dlist_init.154(%struct._dnode* noundef %2) #25, !dbg !13137
  ret void, !dbg !13138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.154(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13139 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13144, metadata !DIExpression()), !dbg !13145
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13146
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13147
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13148
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13149
  ret void, !dbg !13150
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13151 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13155, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i32 %1, metadata !13156, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i32 %2, metadata !13157, metadata !DIExpression()), !dbg !13161
  %5 = bitcast i32* %4 to i8*, !dbg !13162
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13162
  call void @llvm.dbg.value(metadata i32* %4, metadata !13160, metadata !DIExpression(DW_OP_deref)), !dbg !13161
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !13163
  br i1 %6, label %13, label %7, !dbg !13165

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !13166
  call void @llvm.dbg.value(metadata i32 %8, metadata !13160, metadata !DIExpression()), !dbg !13161
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #25, !dbg !13168
  call void @llvm.dbg.value(metadata i8* %9, metadata !13158, metadata !DIExpression()), !dbg !13161
  %10 = icmp eq i8* %9, null, !dbg !13169
  br i1 %10, label %13, label %11, !dbg !13171

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #25, !dbg !13172
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13174
  store i8 1, i8* %12, align 4, !dbg !13175
  call void @llvm.dbg.value(metadata i32 0, metadata !13159, metadata !DIExpression()), !dbg !13161
  br label %13, !dbg !13176

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !13177
  call void @llvm.dbg.value(metadata i32 %14, metadata !13159, metadata !DIExpression()), !dbg !13161
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13178
  ret i32 %14, !dbg !13179
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #20 !dbg !13180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13185, metadata !DIExpression()), !dbg !13188
  call void @llvm.dbg.value(metadata i32 %1, metadata !13186, metadata !DIExpression()), !dbg !13188
  call void @llvm.dbg.value(metadata i32* %2, metadata !13187, metadata !DIExpression()), !dbg !13188
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !13189
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !13189
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !13189
  store i32 %6, i32* %2, align 4, !dbg !13189
  ret i1 %5, !dbg !13190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !13191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13195, metadata !DIExpression()), !dbg !13196
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #24, !dbg !13197
  ret i8* %2, !dbg !13198
}

; Function Attrs: optsize
declare !dbg !13199 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #4

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13202 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13206, metadata !DIExpression()), !dbg !13207
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13208
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #25, !dbg !13208
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13208
  br i1 %4, label %5, label %15, !dbg !13210

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13211
  %7 = load i8, i8* %6, align 4, !dbg !13211
  %8 = and i8 %7, 1, !dbg !13213
  %9 = icmp eq i8 %8, 0, !dbg !13214
  br i1 %9, label %15, label %10, !dbg !13215

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13216
  %12 = load i8*, i8** %11, align 4, !dbg !13216
  tail call void @k_free(i8* noundef %12) #24, !dbg !13218
  %13 = load i8, i8* %6, align 4, !dbg !13219
  %14 = and i8 %13, -2, !dbg !13219
  store i8 %14, i8* %6, align 4, !dbg !13219
  br label %15, !dbg !13220

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !13207
  ret i32 %16, !dbg !13221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !13222 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13226, metadata !DIExpression()), !dbg !13227
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13228
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13229
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13230
  ret %struct.k_thread* %4, !dbg !13231
}

; Function Attrs: optsize
declare !dbg !13232 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13233 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13237, metadata !DIExpression()), !dbg !13238
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !13239
  br i1 %2, label %6, label %3, !dbg !13239

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13240
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13240
  br label %6, !dbg !13239

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13239
  ret %struct._dnode* %7, !dbg !13241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13242 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13246, metadata !DIExpression()), !dbg !13247
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13248
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13248
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13249
  ret i1 %4, !dbg !13250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13251 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13261, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13259, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata i8* %1, metadata !13260, metadata !DIExpression()), !dbg !13269
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13271, metadata !DIExpression()) #23, !dbg !13278
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13280, !srcloc !13286
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13280
  call void @llvm.dbg.value(metadata i32 %6, metadata !13283, metadata !DIExpression()) #23, !dbg !13287
  call void @llvm.dbg.value(metadata i32 undef, metadata !13284, metadata !DIExpression()) #23, !dbg !13287
  call void @llvm.dbg.value(metadata i32 %6, metadata !13277, metadata !DIExpression()) #23, !dbg !13278
  call void @llvm.dbg.value(metadata i32 %6, metadata !13263, metadata !DIExpression()), !dbg !13269
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13288
  %8 = load i32, i32* %7, align 4, !dbg !13288
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13290
  %10 = load i32, i32* %9, align 4, !dbg !13290
  %11 = icmp ult i32 %8, %10, !dbg !13291
  br i1 %11, label %12, label %42, !dbg !13292

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13293
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #24, !dbg !13295
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13262, metadata !DIExpression()), !dbg !13269
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !13296
  br i1 %15, label %24, label %16, !dbg !13298

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !13299
  %18 = load i8*, i8** %17, align 4, !dbg !13299
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13301
  %20 = load i32, i32* %19, align 4, !dbg !13301
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #24, !dbg !13302
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13303, metadata !DIExpression()), !dbg !13309
  call void @llvm.dbg.value(metadata i32 0, metadata !13308, metadata !DIExpression()), !dbg !13309
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !13311
  store i32 0, i32* %22, align 4, !dbg !13312
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #24, !dbg !13313
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13314
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #24, !dbg !13314
  br label %53, !dbg !13315

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13316
  %26 = load i8*, i8** %25, align 4, !dbg !13316
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13318
  %28 = load i32, i32* %27, align 4, !dbg !13318
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #24, !dbg !13319
  %30 = load i32, i32* %27, align 4, !dbg !13320
  %31 = load i8*, i8** %25, align 4, !dbg !13321
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !13321
  store i8* %32, i8** %25, align 4, !dbg !13321
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13322
  %34 = load i8*, i8** %33, align 4, !dbg !13322
  %35 = icmp eq i8* %32, %34, !dbg !13324
  br i1 %35, label %36, label %39, !dbg !13325

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13326
  %38 = load i8*, i8** %37, align 4, !dbg !13326
  store i8* %38, i8** %25, align 4, !dbg !13328
  br label %39, !dbg !13329

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !13330
  %41 = add i32 %40, 1, !dbg !13330
  store i32 %41, i32* %7, align 4, !dbg !13330
  call void @llvm.dbg.value(metadata i32 0, metadata !13268, metadata !DIExpression()), !dbg !13269
  br label %51, !dbg !13331

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !13261, metadata !DIExpression()), !dbg !13269
  %44 = icmp eq i64 %43, 0, !dbg !13332
  br i1 %44, label %51, label %45, !dbg !13334

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13335
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !13337
  store i8* %1, i8** %47, align 4, !dbg !13338
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13339
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13340
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #24, !dbg !13340
  call void @llvm.dbg.value(metadata i32 %50, metadata !13268, metadata !DIExpression()), !dbg !13269
  br label %53, !dbg !13341

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !13342
  call void @llvm.dbg.value(metadata i32 %52, metadata !13268, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata i32 %6, metadata !13343, metadata !DIExpression()) #23, !dbg !13349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13348, metadata !DIExpression()) #23, !dbg !13349
  call void @llvm.dbg.value(metadata i32 %6, metadata !13351, metadata !DIExpression()) #23, !dbg !13354
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !13356, !srcloc !13357
  br label %53, !dbg !13358

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !13269
  ret i32 %54, !dbg !13359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._gpio_init_config* nocapture noundef writeonly %1) local_unnamed_addr #10 !dbg !13360 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13370, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !13371, metadata !DIExpression()), !dbg !13372
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13373
  %4 = load i32, i32* %3, align 4, !dbg !13373
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !13374
  store i32 %4, i32* %5, align 4, !dbg !13375
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13376
  %7 = load i32, i32* %6, align 4, !dbg !13376
  %8 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !13377
  store i32 %7, i32* %8, align 4, !dbg !13378
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13379
  %10 = load i32, i32* %9, align 4, !dbg !13379
  %11 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !13380
  store i32 %10, i32* %11, align 4, !dbg !13381
  ret void, !dbg !13382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13383 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13389, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13387, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.value(metadata i8* %1, metadata !13388, metadata !DIExpression()), !dbg !13393
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13394
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13271, metadata !DIExpression()) #23, !dbg !13395
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13397, !srcloc !13286
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13397
  call void @llvm.dbg.value(metadata i32 %6, metadata !13283, metadata !DIExpression()) #23, !dbg !13399
  call void @llvm.dbg.value(metadata i32 undef, metadata !13284, metadata !DIExpression()) #23, !dbg !13399
  call void @llvm.dbg.value(metadata i32 %6, metadata !13277, metadata !DIExpression()) #23, !dbg !13395
  call void @llvm.dbg.value(metadata i32 %6, metadata !13390, metadata !DIExpression()), !dbg !13393
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13400
  %8 = load i32, i32* %7, align 4, !dbg !13400
  %9 = icmp eq i32 %8, 0, !dbg !13402
  br i1 %9, label %51, label %10, !dbg !13403

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13404
  %12 = load i8*, i8** %11, align 4, !dbg !13404
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13406
  %14 = load i32, i32* %13, align 4, !dbg !13406
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #24, !dbg !13407
  %16 = load i32, i32* %13, align 4, !dbg !13408
  %17 = load i8*, i8** %11, align 4, !dbg !13409
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !13409
  store i8* %18, i8** %11, align 4, !dbg !13409
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13410
  %20 = load i8*, i8** %19, align 4, !dbg !13410
  %21 = icmp eq i8* %18, %20, !dbg !13412
  br i1 %21, label %22, label %25, !dbg !13413

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13414
  %24 = load i8*, i8** %23, align 4, !dbg !13414
  store i8* %24, i8** %11, align 4, !dbg !13416
  br label %25, !dbg !13417

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !13418
  %27 = add i32 %26, -1, !dbg !13418
  store i32 %27, i32* %7, align 4, !dbg !13418
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13419
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #24, !dbg !13420
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13391, metadata !DIExpression()), !dbg !13393
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !13421
  br i1 %30, label %60, label %31, !dbg !13423

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13424
  %33 = load i8*, i8** %32, align 4, !dbg !13424
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !13426
  %35 = load i8*, i8** %34, align 4, !dbg !13426
  %36 = load i32, i32* %13, align 4, !dbg !13427
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #24, !dbg !13428
  %38 = load i32, i32* %13, align 4, !dbg !13429
  %39 = load i8*, i8** %32, align 4, !dbg !13430
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !13430
  store i8* %40, i8** %32, align 4, !dbg !13430
  %41 = load i8*, i8** %19, align 4, !dbg !13431
  %42 = icmp eq i8* %40, %41, !dbg !13433
  br i1 %42, label %43, label %46, !dbg !13434

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13435
  %45 = load i8*, i8** %44, align 4, !dbg !13435
  store i8* %45, i8** %32, align 4, !dbg !13437
  br label %46, !dbg !13438

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !13439
  %48 = add i32 %47, 1, !dbg !13439
  store i32 %48, i32* %7, align 4, !dbg !13439
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13303, metadata !DIExpression()), !dbg !13440
  call void @llvm.dbg.value(metadata i32 0, metadata !13308, metadata !DIExpression()), !dbg !13440
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !13442
  store i32 0, i32* %49, align 4, !dbg !13443
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #24, !dbg !13444
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13445
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #24, !dbg !13445
  br label %62, !dbg !13446

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !13389, metadata !DIExpression()), !dbg !13393
  %53 = icmp eq i64 %52, 0, !dbg !13447
  br i1 %53, label %60, label %54, !dbg !13449

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13450
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !13452
  store i8* %1, i8** %56, align 4, !dbg !13453
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13454
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13455
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #24, !dbg !13455
  call void @llvm.dbg.value(metadata i32 %59, metadata !13392, metadata !DIExpression()), !dbg !13393
  br label %62, !dbg !13456

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !13457
  call void @llvm.dbg.value(metadata i32 %61, metadata !13392, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.value(metadata i32 %6, metadata !13343, metadata !DIExpression()) #23, !dbg !13458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13348, metadata !DIExpression()) #23, !dbg !13458
  call void @llvm.dbg.value(metadata i32 %6, metadata !13351, metadata !DIExpression()) #23, !dbg !13460
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !13462, !srcloc !13357
  br label %62, !dbg !13463

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !13393
  ret i32 %63, !dbg !13464
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13465 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13469, metadata !DIExpression()), !dbg !13473
  call void @llvm.dbg.value(metadata i8* %1, metadata !13470, metadata !DIExpression()), !dbg !13473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13271, metadata !DIExpression()) #23, !dbg !13474
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13476, !srcloc !13286
  call void @llvm.dbg.value(metadata i32 undef, metadata !13283, metadata !DIExpression()) #23, !dbg !13478
  call void @llvm.dbg.value(metadata i32 undef, metadata !13284, metadata !DIExpression()) #23, !dbg !13478
  call void @llvm.dbg.value(metadata i32 undef, metadata !13277, metadata !DIExpression()) #23, !dbg !13474
  call void @llvm.dbg.value(metadata i32 undef, metadata !13471, metadata !DIExpression()), !dbg !13473
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13479
  %5 = load i32, i32* %4, align 4, !dbg !13479
  %6 = icmp eq i32 %5, 0, !dbg !13481
  br i1 %6, label %13, label %7, !dbg !13482

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13483
  %9 = load i8*, i8** %8, align 4, !dbg !13483
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13485
  %11 = load i32, i32* %10, align 4, !dbg !13485
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #24, !dbg !13486
  call void @llvm.dbg.value(metadata i32 0, metadata !13472, metadata !DIExpression()), !dbg !13473
  br label %13, !dbg !13487

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !13488
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13476
  call void @llvm.dbg.value(metadata i32 %15, metadata !13283, metadata !DIExpression()) #23, !dbg !13478
  call void @llvm.dbg.value(metadata i32 %15, metadata !13277, metadata !DIExpression()) #23, !dbg !13474
  call void @llvm.dbg.value(metadata i32 %15, metadata !13471, metadata !DIExpression()), !dbg !13473
  call void @llvm.dbg.value(metadata i32 %14, metadata !13472, metadata !DIExpression()), !dbg !13473
  call void @llvm.dbg.value(metadata i32 undef, metadata !13343, metadata !DIExpression()) #23, !dbg !13489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13348, metadata !DIExpression()) #23, !dbg !13489
  call void @llvm.dbg.value(metadata i32 undef, metadata !13351, metadata !DIExpression()) #23, !dbg !13491
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !13493, !srcloc !13357
  ret i32 %14, !dbg !13494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13495 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13499, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13271, metadata !DIExpression()) #23, !dbg !13503
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13505, !srcloc !13286
  call void @llvm.dbg.value(metadata i32 undef, metadata !13283, metadata !DIExpression()) #23, !dbg !13507
  call void @llvm.dbg.value(metadata i32 undef, metadata !13284, metadata !DIExpression()) #23, !dbg !13507
  call void @llvm.dbg.value(metadata i32 undef, metadata !13277, metadata !DIExpression()) #23, !dbg !13503
  call void @llvm.dbg.value(metadata i32 undef, metadata !13500, metadata !DIExpression()), !dbg !13502
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #24, !dbg !13508
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13501, metadata !DIExpression()), !dbg !13502
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13509
  br i1 %5, label %11, label %6, !dbg !13510

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13303, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i32 -35, metadata !13308, metadata !DIExpression()), !dbg !13511
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !13514
  store i32 -35, i32* %8, align 4, !dbg !13515
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #24, !dbg !13516
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #24, !dbg !13508
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13501, metadata !DIExpression()), !dbg !13502
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !13509
  br i1 %10, label %11, label %6, !dbg !13510, !llvm.loop !13517

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !13505
  call void @llvm.dbg.value(metadata i32 %12, metadata !13283, metadata !DIExpression()) #23, !dbg !13507
  call void @llvm.dbg.value(metadata i32 %12, metadata !13277, metadata !DIExpression()) #23, !dbg !13503
  call void @llvm.dbg.value(metadata i32 %12, metadata !13500, metadata !DIExpression()), !dbg !13502
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13519
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13520
  store i32 0, i32* %14, align 4, !dbg !13521
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13522
  %16 = load i8*, i8** %15, align 4, !dbg !13522
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13523
  store i8* %16, i8** %17, align 4, !dbg !13524
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13525
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #24, !dbg !13525
  ret void, !dbg !13526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #9 !dbg !13527 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13538, metadata !DIExpression()), !dbg !13539
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13540
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13541
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13542
  store i32 0, i32* %3, align 4, !dbg !13543
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13544
  tail call fastcc void @z_waitq_init.159(%struct._wait_q_t* noundef %4) #25, !dbg !13545
  ret i32 0, !dbg !13546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.159(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !13547 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13551, metadata !DIExpression()), !dbg !13552
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13553
  tail call fastcc void @sys_dlist_init.160(%struct._dnode* noundef %2) #25, !dbg !13554
  ret void, !dbg !13555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.160(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13556 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13561, metadata !DIExpression()), !dbg !13562
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13563
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13564
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13565
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13566
  ret void, !dbg !13567
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13568 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13577, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13576, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i8 0, metadata !13584, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !13597
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13599, !srcloc !13605
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13599
  call void @llvm.dbg.value(metadata i32 %5, metadata !13602, metadata !DIExpression()) #23, !dbg !13606
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #23, !dbg !13606
  call void @llvm.dbg.value(metadata i32 %5, metadata !13596, metadata !DIExpression()) #23, !dbg !13597
  call void @llvm.dbg.value(metadata i32 %5, metadata !13579, metadata !DIExpression()), !dbg !13589
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13607
  %7 = load i32, i32* %6, align 4, !dbg !13607
  %8 = icmp eq i32 %7, 0, !dbg !13607
  br i1 %8, label %14, label %9, !dbg !13607

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13607
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !13607
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13607
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !13607
  br i1 %13, label %20, label %29, !dbg !13609, !prof !13610

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13611
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !13613
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !13613
  %18 = load i8, i8* %17, align 2, !dbg !13613
  %19 = sext i8 %18 to i32, !dbg !13611
  br label %23, !dbg !13614

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13615
  %22 = load i32, i32* %21, align 4, !dbg !13615
  br label %23, !dbg !13614

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !13616
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !13614
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13617
  store i32 %25, i32* %26, align 4, !dbg !13618
  %27 = add i32 %7, 1, !dbg !13619
  store i32 %27, i32* %6, align 4, !dbg !13619
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13620
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !13621
  call void @llvm.dbg.value(metadata i32 %5, metadata !13622, metadata !DIExpression()) #23, !dbg !13628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13627, metadata !DIExpression()) #23, !dbg !13628
  call void @llvm.dbg.value(metadata i32 %5, metadata !13630, metadata !DIExpression()) #23, !dbg !13633
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13635, !srcloc !13636
  br label %78, !dbg !13637

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !13638
  br i1 %30, label %31, label %32, !dbg !13640, !prof !13641

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !13622, metadata !DIExpression()) #23, !dbg !13642
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13627, metadata !DIExpression()) #23, !dbg !13642
  call void @llvm.dbg.value(metadata i32 %5, metadata !13630, metadata !DIExpression()) #23, !dbg !13645
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13647, !srcloc !13636
  br label %78, !dbg !13648

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !13649
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !13649
  %35 = load i8, i8* %34, align 2, !dbg !13649
  %36 = sext i8 %35 to i32, !dbg !13650
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !13651
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !13651
  %39 = load i8, i8* %38, align 2, !dbg !13651
  %40 = sext i8 %39 to i32, !dbg !13652
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #25, !dbg !13653
  call void @llvm.dbg.value(metadata i32 %41, metadata !13578, metadata !DIExpression()), !dbg !13589
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #25, !dbg !13654
  br i1 %42, label %43, label %45, !dbg !13656

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #25, !dbg !13657
  call void @llvm.dbg.value(metadata i1 %44, metadata !13584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13589
  br label %45, !dbg !13659

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13584, metadata !DIExpression()), !dbg !13589
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13660
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !13661
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #24, !dbg !13661
  call void @llvm.dbg.value(metadata i32 %49, metadata !13585, metadata !DIExpression()), !dbg !13589
  %50 = icmp eq i32 %49, 0, !dbg !13662
  br i1 %50, label %78, label %51, !dbg !13664

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !13665
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13667, !srcloc !13605
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !13667
  call void @llvm.dbg.value(metadata i32 %53, metadata !13602, metadata !DIExpression()) #23, !dbg !13669
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #23, !dbg !13669
  call void @llvm.dbg.value(metadata i32 %53, metadata !13596, metadata !DIExpression()) #23, !dbg !13665
  call void @llvm.dbg.value(metadata i32 %53, metadata !13579, metadata !DIExpression()), !dbg !13589
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !13670
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !13670
  br i1 %55, label %74, label %56, !dbg !13671, !prof !13641

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.163(%struct._wait_q_t* noundef nonnull %47) #25, !dbg !13672
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !13586, metadata !DIExpression()), !dbg !13673
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !13674
  br i1 %58, label %67, label %59, !dbg !13675

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !13676
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !13676
  %62 = load i8, i8* %61, align 2, !dbg !13676
  %63 = sext i8 %62 to i32, !dbg !13677
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13678
  %65 = load i32, i32* %64, align 4, !dbg !13678
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #25, !dbg !13679
  br label %70, !dbg !13675

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13680
  %69 = load i32, i32* %68, align 4, !dbg !13680
  br label %70, !dbg !13675

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !13675
  call void @llvm.dbg.value(metadata i32 %71, metadata !13578, metadata !DIExpression()), !dbg !13589
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #25, !dbg !13681
  %73 = select i1 %72, i1 true, i1 %46, !dbg !13682
  call void @llvm.dbg.value(metadata i1 %73, metadata !13584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13589
  call void @llvm.dbg.value(metadata i8 poison, metadata !13584, metadata !DIExpression()), !dbg !13589
  br i1 %73, label %75, label %77, !dbg !13683

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !13584, metadata !DIExpression()), !dbg !13589
  br i1 %46, label %75, label %77, !dbg !13683

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !13684
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #24, !dbg !13684
  br label %78, !dbg !13687

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !13622, metadata !DIExpression()) #23, !dbg !13688
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13627, metadata !DIExpression()) #23, !dbg !13688
  call void @llvm.dbg.value(metadata i32 %53, metadata !13630, metadata !DIExpression()) #23, !dbg !13691
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #23, !dbg !13693, !srcloc !13636
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !13589
  ret i32 %79, !dbg !13694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !13695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13699, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.value(metadata i32 %1, metadata !13700, metadata !DIExpression()), !dbg !13702
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #25, !dbg !13703
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13703
  call void @llvm.dbg.value(metadata i32 %4, metadata !13701, metadata !DIExpression()), !dbg !13702
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #25, !dbg !13704
  call void @llvm.dbg.value(metadata i32 %5, metadata !13701, metadata !DIExpression()), !dbg !13702
  ret i32 %5, !dbg !13705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !13706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13710, metadata !DIExpression()), !dbg !13712
  call void @llvm.dbg.value(metadata i32 %1, metadata !13711, metadata !DIExpression()), !dbg !13712
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !13713
  ret i1 %3, !dbg !13714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13715 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13719, metadata !DIExpression()), !dbg !13721
  call void @llvm.dbg.value(metadata i32 %1, metadata !13720, metadata !DIExpression()), !dbg !13721
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13722
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13722
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13724
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13724
  %7 = load i8, i8* %6, align 2, !dbg !13724
  %8 = sext i8 %7 to i32, !dbg !13725
  %9 = icmp eq i32 %8, %1, !dbg !13726
  br i1 %9, label %12, label %10, !dbg !13727

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #24, !dbg !13728
  br label %12, !dbg !13730

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13721
  ret i1 %13, !dbg !13731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.163(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !13732 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13736, metadata !DIExpression()), !dbg !13737
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13738
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.164(%struct._dnode* noundef %2) #25, !dbg !13739
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13740
  ret %struct.k_thread* %4, !dbg !13741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.164(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13742 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13746, metadata !DIExpression()), !dbg !13747
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.165(%struct._dnode* noundef %0) #25, !dbg !13748
  br i1 %2, label %6, label %3, !dbg !13748

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13749
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13749
  br label %6, !dbg !13748

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13748
  ret %struct._dnode* %7, !dbg !13750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.165(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13751 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13755, metadata !DIExpression()), !dbg !13756
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13757
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13757
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13758
  ret i1 %4, !dbg !13759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !13760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13762, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.value(metadata i32 %1, metadata !13763, metadata !DIExpression()), !dbg !13764
  %3 = icmp slt i32 %0, %1, !dbg !13765
  ret i1 %3, !dbg !13766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #6 !dbg !13767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13769, metadata !DIExpression()), !dbg !13770
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #25, !dbg !13771
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13771
  ret i32 %3, !dbg !13772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #6 !dbg !13773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13777, metadata !DIExpression()), !dbg !13778
  %2 = icmp sgt i32 %0, -128, !dbg !13779
  ret i1 %2, !dbg !13780
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13781 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13783, metadata !DIExpression()), !dbg !13787
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13788
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !13788
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13788
  br i1 %4, label %31, label %5, !dbg !13790

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13791
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !13791
  br i1 %7, label %8, label %31, !dbg !13793

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13794
  %10 = load i32, i32* %9, align 4, !dbg !13794
  %11 = icmp ugt i32 %10, 1, !dbg !13796
  br i1 %11, label %12, label %14, !dbg !13797

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !13798
  store i32 %13, i32* %9, align 4, !dbg !13798
  br label %31, !dbg !13800

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !13801
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13803, !srcloc !13605
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13803
  call void @llvm.dbg.value(metadata i32 %16, metadata !13602, metadata !DIExpression()) #23, !dbg !13805
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #23, !dbg !13805
  call void @llvm.dbg.value(metadata i32 %16, metadata !13596, metadata !DIExpression()) #23, !dbg !13801
  call void @llvm.dbg.value(metadata i32 %16, metadata !13785, metadata !DIExpression()), !dbg !13787
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13806
  %18 = load i32, i32* %17, align 4, !dbg !13806
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #25, !dbg !13807
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13808
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #24, !dbg !13809
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !13784, metadata !DIExpression()), !dbg !13787
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !13810
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !13811
  br i1 %22, label %30, label %23, !dbg !13813

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !13814
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !13814
  %26 = load i8, i8* %25, align 2, !dbg !13814
  %27 = sext i8 %26 to i32, !dbg !13816
  store i32 %27, i32* %17, align 4, !dbg !13817
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !13818, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.value(metadata i32 0, metadata !13823, metadata !DIExpression()), !dbg !13824
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !13826
  store i32 0, i32* %28, align 4, !dbg !13827
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #24, !dbg !13828
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13829
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #24, !dbg !13829
  br label %31, !dbg !13830

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !13831
  call void @llvm.dbg.value(metadata i32 %16, metadata !13622, metadata !DIExpression()) #23, !dbg !13833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13627, metadata !DIExpression()) #23, !dbg !13833
  call void @llvm.dbg.value(metadata i32 %16, metadata !13630, metadata !DIExpression()) #23, !dbg !13835
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !13837, !srcloc !13636
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !13787
  ret i32 %32, !dbg !13838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13839 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13843, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13844, metadata !DIExpression()), !dbg !13847
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13848
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13848
  %5 = load i8, i8* %4, align 2, !dbg !13848
  call void @llvm.dbg.value(metadata i8 %5, metadata !13845, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13847
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13849
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13849
  %8 = load i8, i8* %7, align 2, !dbg !13849
  call void @llvm.dbg.value(metadata i8 %8, metadata !13846, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13847
  %9 = icmp eq i8 %8, %5, !dbg !13850
  %10 = sext i8 %5 to i32, !dbg !13852
  %11 = sext i8 %8 to i32, !dbg !13852
  %12 = sub nsw i32 %11, %10, !dbg !13852
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13852
  ret i32 %13, !dbg !13853
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13854 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13858, metadata !DIExpression()), !dbg !13859
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !13860
  %3 = icmp eq i32 %2, 0, !dbg !13862
  br i1 %3, label %8, label %4, !dbg !13863

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !13864
  %6 = add i32 %5, %2, !dbg !13866
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13867
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !13868
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !13869
  br label %8, !dbg !13870

8:                                                ; preds = %4, %1
  ret void, !dbg !13871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !13872 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13876, metadata !DIExpression()), !dbg !13878
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13879
  call void @llvm.dbg.value(metadata i32 %1, metadata !13877, metadata !DIExpression()), !dbg !13878
  ret i32 %1, !dbg !13880
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13885, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.value(metadata i32 %1, metadata !13886, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.value(metadata i32 0, metadata !13887, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !13903
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13905, !srcloc !13911
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13905
  call void @llvm.dbg.value(metadata i32 %4, metadata !13908, metadata !DIExpression()) #23, !dbg !13912
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !13912
  call void @llvm.dbg.value(metadata i32 %4, metadata !13902, metadata !DIExpression()) #23, !dbg !13903
  call void @llvm.dbg.value(metadata i32 %4, metadata !13893, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i32 undef, metadata !13887, metadata !DIExpression()), !dbg !13895
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13913
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !13916
  %6 = icmp sgt i32 %0, 0, !dbg !13917
  %7 = icmp sgt i32 %5, 2, !dbg !13919
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13919
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13919
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13920
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13921
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13922
  call void @llvm.dbg.value(metadata i32 %4, metadata !13923, metadata !DIExpression()) #23, !dbg !13929
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !13929
  call void @llvm.dbg.value(metadata i32 %4, metadata !13931, metadata !DIExpression()) #23, !dbg !13934
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13936, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !13887, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i32 undef, metadata !13887, metadata !DIExpression()), !dbg !13895
  ret void, !dbg !13938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #6 !dbg !13939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13943, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.value(metadata i32 %0, metadata !13945, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13960
  call void @llvm.dbg.value(metadata i32 1000, metadata !13948, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.value(metadata i32 10000, metadata !13949, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.value(metadata i8 1, metadata !13950, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.value(metadata i1 true, metadata !13951, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13960
  call void @llvm.dbg.value(metadata i1 true, metadata !13952, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13960
  call void @llvm.dbg.value(metadata i8 0, metadata !13953, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.value(metadata i1 true, metadata !13954, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13960
  call void @llvm.dbg.value(metadata i1 false, metadata !13955, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13960
  call void @llvm.dbg.value(metadata i64 0, metadata !13956, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.value(metadata i64 0, metadata !13956, metadata !DIExpression()), !dbg !13960
  %2 = mul i32 %0, 10, !dbg !13962
  ret i32 %2, !dbg !13968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13971, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !13974
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13976, !srcloc !13911
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13976
  call void @llvm.dbg.value(metadata i32 %3, metadata !13908, metadata !DIExpression()) #23, !dbg !13978
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !13978
  call void @llvm.dbg.value(metadata i32 %3, metadata !13902, metadata !DIExpression()) #23, !dbg !13974
  call void @llvm.dbg.value(metadata i32 %3, metadata !13972, metadata !DIExpression()), !dbg !13973
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13979
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13981
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13982
  br i1 %6, label %7, label %8, !dbg !13983

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13984
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !13986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !13986
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !13988
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13990, !srcloc !13937
  br label %24, !dbg !13991

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13992
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !13993
  %10 = icmp eq i32 %9, 0, !dbg !13993
  br i1 %10, label %21, label %11, !dbg !13995

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !13996
  br i1 %12, label %13, label %21, !dbg !13997

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13998
  %15 = icmp sgt i32 %14, %0, !dbg !14001
  br i1 %15, label %19, label %16, !dbg !14002

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14003
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !14003
  call void @llvm.dbg.value(metadata i32 %18, metadata !13972, metadata !DIExpression()), !dbg !13973
  br label %22, !dbg !14005

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14006
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14006
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14008
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13973
  call void @llvm.dbg.value(metadata i32 %23, metadata !13972, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 %23, metadata !13923, metadata !DIExpression()) #23, !dbg !14010
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14010
  call void @llvm.dbg.value(metadata i32 %23, metadata !13931, metadata !DIExpression()) #23, !dbg !14012
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14014, !srcloc !13937
  br label %24, !dbg !14015

24:                                               ; preds = %22, %7
  ret void, !dbg !14015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14016 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14020, metadata !DIExpression()), !dbg !14022
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !14023
  %3 = icmp eq i32 %2, 0, !dbg !14023
  br i1 %3, label %16, label %4, !dbg !14024

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14025
  br i1 %5, label %16, label %6, !dbg !14026

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14027
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14027
  %9 = load i8, i8* %8, align 2, !dbg !14027
  %10 = sext i8 %9 to i32, !dbg !14028
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14029
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.171(i32 noundef %10, i32 noundef %11) #25, !dbg !14030
  br i1 %12, label %16, label %13, !dbg !14031

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !14032
  %15 = xor i1 %14, true, !dbg !14033
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14022
  call void @llvm.dbg.value(metadata i1 %17, metadata !14021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14022
  ret i1 %17, !dbg !14034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14035 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14039, metadata !DIExpression()), !dbg !14041
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14042
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14040, metadata !DIExpression()), !dbg !14041
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !14043
  br i1 %3, label %5, label %4, !dbg !14045

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !14046
  br label %5, !dbg !14048

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14039, metadata !DIExpression()), !dbg !14041
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14049
  ret i32 %6, !dbg !14050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14051 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14053, metadata !DIExpression()), !dbg !14055
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14056
  %3 = load i8, i8* %2, align 1, !dbg !14056
  call void @llvm.dbg.value(metadata i8 %3, metadata !14054, metadata !DIExpression()), !dbg !14055
  %4 = and i8 %3, 31, !dbg !14057
  %5 = icmp ne i8 %4, 0, !dbg !14058
  ret i1 %5, !dbg !14059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14062, metadata !DIExpression()), !dbg !14063
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14064
  br i1 %2, label %3, label %7, !dbg !14066

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14067, metadata !DIExpression()) #23, !dbg !14070
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14073
  %5 = load i8, i8* %4, align 1, !dbg !14074
  %6 = and i8 %5, 127, !dbg !14074
  store i8 %6, i8* %4, align 1, !dbg !14074
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14075, metadata !DIExpression()) #23, !dbg !14078
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14082
  br label %7, !dbg !14083

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14084, metadata !DIExpression()) #23, !dbg !14087
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14089
  %9 = load i8, i8* %8, align 1, !dbg !14090
  %10 = or i8 %9, -128, !dbg !14090
  store i8 %10, i8* %8, align 1, !dbg !14090
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14091, metadata !DIExpression()) #23, !dbg !14094
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14098, metadata !DIExpression()) #23, !dbg !14106
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14104, metadata !DIExpression()) #23, !dbg !14106
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.168(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14108
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14105, metadata !DIExpression()) #23, !dbg !14106
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14110
  br i1 %12, label %23, label %13, !dbg !14108

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14105, metadata !DIExpression()) #23, !dbg !14106
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14112
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14105, metadata !DIExpression()) #23, !dbg !14106
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !14113
  %17 = icmp sgt i32 %16, 0, !dbg !14116
  br i1 %17, label %18, label %20, !dbg !14117

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14118
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !14120
  br label %25, !dbg !14121

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !14110
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14105, metadata !DIExpression()) #23, !dbg !14106
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14110
  br i1 %22, label %23, label %13, !dbg !14108, !llvm.loop !14122

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14124
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !14125
  br label %25, !dbg !14126

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14127
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14128
  %28 = zext i1 %27 to i32, !dbg !14128
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !14129
  ret void, !dbg !14130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14131 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14133, metadata !DIExpression()), !dbg !14134
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !14135
  ret i1 %2, !dbg !14136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #10 !dbg !14137 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14139, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14140, metadata !DIExpression()), !dbg !14141
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14142
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !14143
  ret void, !dbg !14144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.168(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14145 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14149, metadata !DIExpression()), !dbg !14150
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.169(%struct._dnode* noundef %0) #25, !dbg !14151
  br i1 %2, label %6, label %3, !dbg !14151

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14152
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14152
  br label %6, !dbg !14151

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14151
  ret %struct._dnode* %7, !dbg !14153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !14154 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14158, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14159, metadata !DIExpression()), !dbg !14162
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14163
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14163
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14160, metadata !DIExpression()), !dbg !14162
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14164
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14165
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14166
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14167
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14168
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14169
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14170
  ret void, !dbg !14171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14172 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14176, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14177, metadata !DIExpression()), !dbg !14178
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14179
  br i1 %3, label %6, label %4, !dbg !14180

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !14181
  br label %6, !dbg !14180

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14180
  ret %struct._dnode* %7, !dbg !14182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !14183 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14187, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14188, metadata !DIExpression()), !dbg !14190
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14191
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14191
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14189, metadata !DIExpression()), !dbg !14190
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14192
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14193
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14194
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14195
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14196
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14197
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14198
  ret void, !dbg !14199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14202, metadata !DIExpression()), !dbg !14204
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14205
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14212, metadata !DIExpression()) #23, !dbg !14214
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14215
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14216
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14216
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14203, metadata !DIExpression()), !dbg !14204
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14217, metadata !DIExpression()) #23, !dbg !14223
  call void @llvm.dbg.value(metadata i32 %0, metadata !14222, metadata !DIExpression()) #23, !dbg !14223
  %6 = icmp eq i32 %0, 0, !dbg !14226
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14228
  br i1 %6, label %8, label %15, !dbg !14229

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !14230
  br i1 %9, label %15, label %10, !dbg !14232

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !14233
  br i1 %11, label %15, label %12, !dbg !14235

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !14236
  %14 = icmp eq i32 %13, 0, !dbg !14236
  br i1 %14, label %18, label %15, !dbg !14238

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14239
  br i1 %16, label %18, label %17, !dbg !14242

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14243
  br label %18, !dbg !14245

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14228
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14228
  ret void, !dbg !14246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !14247 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14251, metadata !DIExpression()), !dbg !14254
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14252, metadata !DIExpression()), !dbg !14254
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.168(%struct._dnode* noundef %0) #25, !dbg !14255
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14253, metadata !DIExpression()), !dbg !14254
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14252, metadata !DIExpression()), !dbg !14254
  ret %struct.k_thread* %3, !dbg !14256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14259, metadata !DIExpression()), !dbg !14260
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14261
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14262
  %4 = xor i1 %3, true, !dbg !14263
  ret i1 %4, !dbg !14264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14265 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14267, metadata !DIExpression()), !dbg !14268
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14269
  %3 = load i16, i16* %2, align 2, !dbg !14269
  %4 = icmp ult i16 %3, 128, !dbg !14270
  %5 = zext i1 %4 to i32, !dbg !14270
  ret i32 %5, !dbg !14271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14272 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14278, metadata !DIExpression()), !dbg !14279
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14280
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !14281
  %4 = xor i1 %3, true, !dbg !14282
  ret i1 %4, !dbg !14283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14284 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14290, metadata !DIExpression()), !dbg !14291
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14292
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14292
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14293
  ret i1 %4, !dbg !14294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14295 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14297, metadata !DIExpression()), !dbg !14299
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14298, metadata !DIExpression()), !dbg !14299
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14300
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14300
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14301
  br i1 %5, label %9, label %6, !dbg !14302

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14303
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14303
  br label %9, !dbg !14302

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14302
  ret %struct._dnode* %10, !dbg !14304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.169(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14305 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14309, metadata !DIExpression()), !dbg !14310
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14311
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14311
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14312
  ret i1 %4, !dbg !14313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !14314 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14318, metadata !DIExpression()), !dbg !14321
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14322
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14322
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14319, metadata !DIExpression()), !dbg !14321
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14323
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14323
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14320, metadata !DIExpression()), !dbg !14321
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14324
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14325
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14326
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14327
  tail call fastcc void @sys_dnode_init.170(%struct._dnode* noundef %0) #25, !dbg !14328
  ret void, !dbg !14329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.170(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14330 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14332, metadata !DIExpression()), !dbg !14333
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14334
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14335
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14336
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14337
  ret void, !dbg !14338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14339 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14343, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.value(metadata i32 128, metadata !14344, metadata !DIExpression()), !dbg !14345
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14346
  %3 = load i8, i8* %2, align 1, !dbg !14346
  %4 = icmp slt i8 %3, 0, !dbg !14347
  ret i1 %4, !dbg !14348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.171(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14351, metadata !DIExpression()), !dbg !14353
  call void @llvm.dbg.value(metadata i32 %1, metadata !14352, metadata !DIExpression()), !dbg !14353
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.172(i32 noundef %0, i32 noundef %1) #25, !dbg !14354
  ret i1 %3, !dbg !14355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #6 !dbg !14356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14358, metadata !DIExpression()), !dbg !14359
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14360
  ret i1 %2, !dbg !14361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.172(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14364, metadata !DIExpression()), !dbg !14366
  call void @llvm.dbg.value(metadata i32 %1, metadata !14365, metadata !DIExpression()), !dbg !14366
  %3 = icmp slt i32 %0, %1, !dbg !14367
  ret i1 %3, !dbg !14368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14369 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14371, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata i32 0, metadata !14372, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14377
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14379, !srcloc !13911
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14379
  call void @llvm.dbg.value(metadata i32 %3, metadata !13908, metadata !DIExpression()) #23, !dbg !14381
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14381
  call void @llvm.dbg.value(metadata i32 %3, metadata !13902, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()), !dbg !14376
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14382
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !14387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14387
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !14389
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14391, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !14372, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()), !dbg !14376
  ret void, !dbg !14392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14395, metadata !DIExpression()), !dbg !14396
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14397
  br i1 %2, label %24, label %3, !dbg !14399

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !14400
  br i1 %4, label %5, label %24, !dbg !14401

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14084, metadata !DIExpression()) #23, !dbg !14402
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14405
  %7 = load i8, i8* %6, align 1, !dbg !14406
  %8 = or i8 %7, -128, !dbg !14406
  store i8 %8, i8* %6, align 1, !dbg !14406
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14091, metadata !DIExpression()) #23, !dbg !14407
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14098, metadata !DIExpression()) #23, !dbg !14409
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14104, metadata !DIExpression()) #23, !dbg !14409
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.168(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14411
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14105, metadata !DIExpression()) #23, !dbg !14409
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14412
  br i1 %10, label %21, label %11, !dbg !14411

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14105, metadata !DIExpression()) #23, !dbg !14409
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14413
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14105, metadata !DIExpression()) #23, !dbg !14409
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !14414
  %15 = icmp sgt i32 %14, 0, !dbg !14415
  br i1 %15, label %16, label %18, !dbg !14416

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14417
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !14418
  br label %23, !dbg !14419

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !14412
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14105, metadata !DIExpression()) #23, !dbg !14409
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14412
  br i1 %20, label %21, label %11, !dbg !14411, !llvm.loop !14420

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14422
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !14423
  br label %23, !dbg !14424

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !14425
  br label %24, !dbg !14426

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14428 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14430, metadata !DIExpression()), !dbg !14431
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14432
  br i1 %2, label %6, label %3, !dbg !14433

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !14434
  %5 = xor i1 %4, true, !dbg !14433
  br label %6, !dbg !14433

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14438, metadata !DIExpression()), !dbg !14442
  call void @llvm.dbg.value(metadata i32 0, metadata !14439, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14444
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14446, !srcloc !13911
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14446
  call void @llvm.dbg.value(metadata i32 %3, metadata !13908, metadata !DIExpression()) #23, !dbg !14448
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14448
  call void @llvm.dbg.value(metadata i32 %3, metadata !13902, metadata !DIExpression()) #23, !dbg !14444
  call void @llvm.dbg.value(metadata i32 %3, metadata !14441, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14439, metadata !DIExpression()), !dbg !14443
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !14449
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !14452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14452
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !14454
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14456, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !14439, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14439, metadata !DIExpression()), !dbg !14443
  ret void, !dbg !14457
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14458 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14460, metadata !DIExpression()), !dbg !14462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14463
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14465, !srcloc !13911
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14465
  call void @llvm.dbg.value(metadata i32 %3, metadata !13908, metadata !DIExpression()) #23, !dbg !14467
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14467
  call void @llvm.dbg.value(metadata i32 %3, metadata !13902, metadata !DIExpression()) #23, !dbg !14463
  call void @llvm.dbg.value(metadata i32 %3, metadata !14461, metadata !DIExpression()), !dbg !14462
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !14468
  br i1 %4, label %5, label %6, !dbg !14470

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !14471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14471
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !14474
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14476, !srcloc !13937
  br label %8, !dbg !14477

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.177(%struct.k_thread* noundef %0) #25, !dbg !14478
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14479
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14480
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !14480
  br label %8, !dbg !14481

8:                                                ; preds = %6, %5
  ret void, !dbg !14481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14484, metadata !DIExpression()), !dbg !14485
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14486
  %3 = load i8, i8* %2, align 1, !dbg !14486
  %4 = and i8 %3, 4, !dbg !14487
  %5 = icmp eq i8 %4, 0, !dbg !14488
  ret i1 %5, !dbg !14489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.177(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14490 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14492, metadata !DIExpression()), !dbg !14493
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14494
  %3 = load i8, i8* %2, align 1, !dbg !14495
  %4 = and i8 %3, -5, !dbg !14495
  store i8 %4, i8* %2, align 1, !dbg !14495
  ret void, !dbg !14496
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14497 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14500, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14499, metadata !DIExpression()), !dbg !14501
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !14502
  br i1 %4, label %5, label %9, !dbg !14504

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !14505
  br i1 %6, label %7, label %9, !dbg !14506

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14507, metadata !DIExpression()) #23, !dbg !14513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #23, !dbg !14513
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !14516
  br label %10, !dbg !14517

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !14518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14518
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !14521
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14523, !srcloc !13937
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14529, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i32 %0, metadata !14531, metadata !DIExpression()), !dbg !14536
  %2 = icmp eq i32 %0, 0, !dbg !14538
  br i1 %2, label %3, label %6, !dbg !14539

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14540, !srcloc !14547
  call void @llvm.dbg.value(metadata i32 %4, metadata !14543, metadata !DIExpression()) #23, !dbg !14548
  %5 = icmp eq i32 %4, 0, !dbg !14549
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14530
  ret i1 %7, !dbg !14550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14551 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14554
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14553, metadata !DIExpression()), !dbg !14555
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14556
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14557
  ret i1 %3, !dbg !14558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14561, metadata !DIExpression()), !dbg !14563
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !14564
  call void @llvm.dbg.value(metadata i32 %2, metadata !14562, metadata !DIExpression()), !dbg !14563
  ret i32 %2, !dbg !14565
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14566 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14568, metadata !DIExpression()), !dbg !14572
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !14573
  call void @llvm.dbg.value(metadata i32 0, metadata !14569, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14575
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14577, !srcloc !13911
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14577
  call void @llvm.dbg.value(metadata i32 %4, metadata !13908, metadata !DIExpression()) #23, !dbg !14579
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14579
  call void @llvm.dbg.value(metadata i32 %4, metadata !13902, metadata !DIExpression()) #23, !dbg !14575
  call void @llvm.dbg.value(metadata i32 %4, metadata !14571, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata i32 undef, metadata !14569, metadata !DIExpression()), !dbg !14574
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14580
  br i1 %5, label %6, label %10, !dbg !14584

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14067, metadata !DIExpression()) #23, !dbg !14585
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14588
  %8 = load i8, i8* %7, align 1, !dbg !14589
  %9 = and i8 %8, 127, !dbg !14589
  store i8 %9, i8* %7, align 1, !dbg !14589
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14075, metadata !DIExpression()) #23, !dbg !14590
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14592
  br label %10, !dbg !14593

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !14594
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14595
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14596
  %13 = zext i1 %12 to i32, !dbg !14596
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !14597
  call void @llvm.dbg.value(metadata i32 %4, metadata !13923, metadata !DIExpression()) #23, !dbg !14598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14598
  call void @llvm.dbg.value(metadata i32 %4, metadata !13931, metadata !DIExpression()) #23, !dbg !14600
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14602, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !14569, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata i32 undef, metadata !14569, metadata !DIExpression()), !dbg !14574
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14603
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14605
  br i1 %15, label %16, label %17, !dbg !14606

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !14607
  br label %17, !dbg !14609

17:                                               ; preds = %16, %10
  ret void, !dbg !14610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14613, metadata !DIExpression()), !dbg !14614
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14615
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14616
  ret i32 %3, !dbg !14617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14618 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14620, metadata !DIExpression()), !dbg !14621
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14622
  %3 = load i8, i8* %2, align 1, !dbg !14623
  %4 = or i8 %3, 16, !dbg !14623
  store i8 %4, i8* %2, align 1, !dbg !14623
  ret void, !dbg !14624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14625 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14626, !srcloc !13911
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14626
  call void @llvm.dbg.value(metadata i32 %2, metadata !13908, metadata !DIExpression()) #23, !dbg !14628
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14628
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !14629
  ret void, !dbg !14630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14633, metadata !DIExpression()), !dbg !14634
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !14635
  br i1 %2, label %3, label %5, !dbg !14637

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14638
  br label %6, !dbg !14640

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13931, metadata !DIExpression()) #23, !dbg !14641
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14644, !srcloc !13937
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14645
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14646 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14651
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14653, !srcloc !13911
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14653
  call void @llvm.dbg.value(metadata i32 %3, metadata !13908, metadata !DIExpression()) #23, !dbg !14655
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14655
  call void @llvm.dbg.value(metadata i32 %3, metadata !13902, metadata !DIExpression()) #23, !dbg !14651
  call void @llvm.dbg.value(metadata i32 %3, metadata !14649, metadata !DIExpression()), !dbg !14650
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !14656
  br i1 %4, label %6, label %5, !dbg !14658

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !14659
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14659
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !14662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14664, !srcloc !13937
  br label %8, !dbg !14665

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !14666
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14667
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14668
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !14668
  br label %8, !dbg !14669

8:                                                ; preds = %6, %5
  ret void, !dbg !14669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()), !dbg !14673
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14674
  %3 = load i8, i8* %2, align 1, !dbg !14674
  %4 = and i8 %3, 16, !dbg !14675
  %5 = icmp ne i8 %4, 0, !dbg !14676
  ret i1 %5, !dbg !14677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14678 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14680, metadata !DIExpression()), !dbg !14681
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14682
  %3 = load i8, i8* %2, align 1, !dbg !14683
  %4 = and i8 %3, -17, !dbg !14683
  store i8 %4, i8* %2, align 1, !dbg !14683
  ret void, !dbg !14684
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14685 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14695, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14693, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14694, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata i32 0, metadata !14696, metadata !DIExpression()), !dbg !14700
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14701
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14703, !srcloc !13911
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14703
  call void @llvm.dbg.value(metadata i32 %5, metadata !13908, metadata !DIExpression()) #23, !dbg !14705
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14705
  call void @llvm.dbg.value(metadata i32 %5, metadata !13902, metadata !DIExpression()) #23, !dbg !14701
  call void @llvm.dbg.value(metadata i32 %5, metadata !14698, metadata !DIExpression()), !dbg !14700
  call void @llvm.dbg.value(metadata i32 undef, metadata !14696, metadata !DIExpression()), !dbg !14700
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #25, !dbg !14706
  call void @llvm.dbg.value(metadata i32 %5, metadata !13923, metadata !DIExpression()) #23, !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14709
  call void @llvm.dbg.value(metadata i32 %5, metadata !13931, metadata !DIExpression()) #23, !dbg !14711
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !14713, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !14696, metadata !DIExpression()), !dbg !14700
  call void @llvm.dbg.value(metadata i32 undef, metadata !14696, metadata !DIExpression()), !dbg !14700
  ret void, !dbg !14714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14715 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14719, metadata !DIExpression()), !dbg !14720
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14717, metadata !DIExpression()), !dbg !14720
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14718, metadata !DIExpression()), !dbg !14720
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #25, !dbg !14721
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !14722
  ret void, !dbg !14723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14724 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14728, metadata !DIExpression()), !dbg !14730
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14729, metadata !DIExpression()), !dbg !14730
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !14731
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !14732
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14733
  br i1 %3, label %21, label %4, !dbg !14735

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14736
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14738
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14739
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14098, metadata !DIExpression()) #23, !dbg !14740
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14104, metadata !DIExpression()) #23, !dbg !14740
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.168(%struct._dnode* noundef nonnull %6) #24, !dbg !14742
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14105, metadata !DIExpression()) #23, !dbg !14740
  %8 = icmp eq %struct._dnode* %7, null, !dbg !14743
  br i1 %8, label %19, label %9, !dbg !14742

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14105, metadata !DIExpression()) #23, !dbg !14740
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !14744
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14105, metadata !DIExpression()) #23, !dbg !14740
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !14745
  %13 = icmp sgt i32 %12, 0, !dbg !14746
  br i1 %13, label %14, label %16, !dbg !14747

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14748
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !14749
  br label %21, !dbg !14750

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !14743
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14105, metadata !DIExpression()) #23, !dbg !14740
  %18 = icmp eq %struct._dnode* %17, null, !dbg !14743
  br i1 %18, label %19, label %9, !dbg !14742, !llvm.loop !14751

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14753
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !14754
  br label %21, !dbg !14755

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !14756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14757 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14762, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14761, metadata !DIExpression()), !dbg !14763
  %4 = icmp eq i64 %3, -1, !dbg !14764
  br i1 %4, label %6, label %5, !dbg !14766

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.180(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !14767
  br label %6, !dbg !14769

6:                                                ; preds = %5, %2
  ret void, !dbg !14770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.180(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14771 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14774, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14773, metadata !DIExpression()), !dbg !14775
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14776
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !14777
  ret void, !dbg !14778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14779 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14781, metadata !DIExpression()), !dbg !14789
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14790
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14790
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14782, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.value(metadata i32 0, metadata !14783, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14792
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14794, !srcloc !13911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13908, metadata !DIExpression()) #23, !dbg !14796
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14796
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #23, !dbg !14792
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()), !dbg !14791
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14797
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14798
  %7 = load i8, i8* %6, align 1, !dbg !14798
  %8 = and i8 %7, 40, !dbg !14799
  %9 = icmp eq i8 %8, 0, !dbg !14799
  call void @llvm.dbg.value(metadata i1 %9, metadata !14786, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14800
  br i1 %9, label %10, label %17, !dbg !14801

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14802
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !14802
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !14802
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !14806
  br i1 %14, label %16, label %15, !dbg !14807

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !14808
  br label %16, !dbg !14810

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.177(%struct.k_thread* noundef nonnull %3) #25, !dbg !14811
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !14812
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !14813
  br label %17, !dbg !14814

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14794
  call void @llvm.dbg.value(metadata i32 %18, metadata !13908, metadata !DIExpression()) #23, !dbg !14796
  call void @llvm.dbg.value(metadata i32 %18, metadata !13902, metadata !DIExpression()) #23, !dbg !14792
  call void @llvm.dbg.value(metadata i32 %18, metadata !14785, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata i32 undef, metadata !13923, metadata !DIExpression()) #23, !dbg !14815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13931, metadata !DIExpression()) #23, !dbg !14817
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !14819, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !14783, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()), !dbg !14791
  ret void, !dbg !14820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14821 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()), !dbg !14824
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14825
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !14826
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14827
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !14828
  ret void, !dbg !14829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14832, metadata !DIExpression()), !dbg !14833
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14834
  %3 = load i8, i8* %2, align 1, !dbg !14835
  %4 = and i8 %3, -3, !dbg !14835
  store i8 %4, i8* %2, align 1, !dbg !14835
  ret void, !dbg !14836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14837 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14839, metadata !DIExpression()), !dbg !14840
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14841
  br i1 %2, label %3, label %7, !dbg !14843

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14067, metadata !DIExpression()) #23, !dbg !14844
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14847
  %5 = load i8, i8* %4, align 1, !dbg !14848
  %6 = and i8 %5, 127, !dbg !14848
  store i8 %6, i8* %4, align 1, !dbg !14848
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14075, metadata !DIExpression()) #23, !dbg !14849
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14851
  br label %7, !dbg !14852

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14853
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14854
  %10 = zext i1 %9 to i32, !dbg !14854
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !14855
  ret void, !dbg !14856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14857 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14859, metadata !DIExpression()), !dbg !14860
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14861
  %3 = load i8, i8* %2, align 1, !dbg !14862
  %4 = or i8 %3, 2, !dbg !14862
  store i8 %4, i8* %2, align 1, !dbg !14862
  ret void, !dbg !14863
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #21 !dbg !14864 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14866, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.value(metadata i32 0, metadata !14867, metadata !DIExpression()), !dbg !14871
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14872
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14874, !srcloc !13911
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14874
  call void @llvm.dbg.value(metadata i32 %3, metadata !13908, metadata !DIExpression()) #23, !dbg !14876
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14876
  call void @llvm.dbg.value(metadata i32 %3, metadata !13902, metadata !DIExpression()) #23, !dbg !14872
  call void @llvm.dbg.value(metadata i32 %3, metadata !14869, metadata !DIExpression()), !dbg !14871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14867, metadata !DIExpression()), !dbg !14871
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14877
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !14880
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14880
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !14882
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14884, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !14867, metadata !DIExpression()), !dbg !14871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14867, metadata !DIExpression()), !dbg !14871
  ret void, !dbg !14885
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14886 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14892, metadata !DIExpression()), !dbg !14897
  call void @llvm.dbg.value(metadata i32 %0, metadata !14890, metadata !DIExpression()), !dbg !14897
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14891, metadata !DIExpression()), !dbg !14897
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14898
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #25, !dbg !14899
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14900
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14901
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14902
  call void @llvm.dbg.value(metadata i32 %6, metadata !14893, metadata !DIExpression()), !dbg !14897
  call void @llvm.dbg.value(metadata i32 0, metadata !14894, metadata !DIExpression()), !dbg !14903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14904
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14906, !srcloc !13911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13908, metadata !DIExpression()) #23, !dbg !14908
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14908
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #23, !dbg !14904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14896, metadata !DIExpression()), !dbg !14903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14894, metadata !DIExpression()), !dbg !14903
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14909
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14913
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14914
  br i1 %10, label %11, label %12, !dbg !14915

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14916
  br label %12, !dbg !14918

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14906
  call void @llvm.dbg.value(metadata i32 %13, metadata !13908, metadata !DIExpression()) #23, !dbg !14908
  call void @llvm.dbg.value(metadata i32 %13, metadata !13902, metadata !DIExpression()) #23, !dbg !14904
  call void @llvm.dbg.value(metadata i32 %13, metadata !14896, metadata !DIExpression()), !dbg !14903
  call void @llvm.dbg.value(metadata i32 undef, metadata !13923, metadata !DIExpression()) #23, !dbg !14919
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14919
  call void @llvm.dbg.value(metadata i32 undef, metadata !13931, metadata !DIExpression()) #23, !dbg !14921
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !14923, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !14894, metadata !DIExpression()), !dbg !14903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14894, metadata !DIExpression()), !dbg !14903
  ret i32 %6, !dbg !14924
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14925 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14930, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i64 undef, metadata !14932, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14929, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14931, metadata !DIExpression()), !dbg !14933
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14934
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14936
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14938, !srcloc !13911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13908, metadata !DIExpression()) #23, !dbg !14940
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14940
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #23, !dbg !14936
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14941
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #25, !dbg !14942
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14507, metadata !DIExpression()) #23, !dbg !14943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #23, !dbg !14943
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !14945
  ret i32 %9, !dbg !14946
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14947 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14951, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14952, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata i32 0, metadata !14953, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14958
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14960, !srcloc !13911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13908, metadata !DIExpression()) #23, !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #23, !dbg !14958
  call void @llvm.dbg.value(metadata i32 undef, metadata !14955, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14952, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata i32 undef, metadata !14953, metadata !DIExpression()), !dbg !14957
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !14963
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14952, metadata !DIExpression()), !dbg !14956
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14966
  br i1 %5, label %7, label %6, !dbg !14968

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !14969
  br label %7, !dbg !14971

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14960
  call void @llvm.dbg.value(metadata i32 %8, metadata !13908, metadata !DIExpression()) #23, !dbg !14962
  call void @llvm.dbg.value(metadata i32 %8, metadata !13902, metadata !DIExpression()) #23, !dbg !14958
  call void @llvm.dbg.value(metadata i32 %8, metadata !14955, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.value(metadata i32 undef, metadata !13923, metadata !DIExpression()) #23, !dbg !14972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13931, metadata !DIExpression()) #23, !dbg !14974
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14976, !srcloc !13937
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14952, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata i32 undef, metadata !14953, metadata !DIExpression()), !dbg !14957
  ret %struct.k_thread* %4, !dbg !14977
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14978 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14980, metadata !DIExpression()), !dbg !14985
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14981, metadata !DIExpression()), !dbg !14985
  call void @llvm.dbg.value(metadata i32 0, metadata !14982, metadata !DIExpression()), !dbg !14986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !14987
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14989, !srcloc !13911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13908, metadata !DIExpression()) #23, !dbg !14991
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !14991
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #23, !dbg !14987
  call void @llvm.dbg.value(metadata i32 undef, metadata !14984, metadata !DIExpression()), !dbg !14986
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14981, metadata !DIExpression()), !dbg !14985
  call void @llvm.dbg.value(metadata i32 undef, metadata !14982, metadata !DIExpression()), !dbg !14986
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !14992
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14981, metadata !DIExpression()), !dbg !14985
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14995
  br i1 %5, label %8, label %6, !dbg !14997

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !14998
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !15000
  br label %8, !dbg !15001

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14989
  call void @llvm.dbg.value(metadata i32 %9, metadata !13908, metadata !DIExpression()) #23, !dbg !14991
  call void @llvm.dbg.value(metadata i32 %9, metadata !13902, metadata !DIExpression()) #23, !dbg !14987
  call void @llvm.dbg.value(metadata i32 %9, metadata !14984, metadata !DIExpression()), !dbg !14986
  call void @llvm.dbg.value(metadata i32 undef, metadata !13923, metadata !DIExpression()) #23, !dbg !15002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !13931, metadata !DIExpression()) #23, !dbg !15004
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15006, !srcloc !13937
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14981, metadata !DIExpression()), !dbg !14985
  call void @llvm.dbg.value(metadata i32 undef, metadata !14982, metadata !DIExpression()), !dbg !14986
  ret %struct.k_thread* %4, !dbg !15007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15010, metadata !DIExpression()), !dbg !15011
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14866, metadata !DIExpression()) #23, !dbg !15012
  call void @llvm.dbg.value(metadata i32 0, metadata !14867, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !15015
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15017, !srcloc !13911
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15017
  call void @llvm.dbg.value(metadata i32 %3, metadata !13908, metadata !DIExpression()) #23, !dbg !15019
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !15019
  call void @llvm.dbg.value(metadata i32 %3, metadata !13902, metadata !DIExpression()) #23, !dbg !15015
  call void @llvm.dbg.value(metadata i32 %3, metadata !14869, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14867, metadata !DIExpression()) #23, !dbg !15014
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15020
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !15021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !15021
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !15023
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15025, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !14867, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14867, metadata !DIExpression()) #23, !dbg !15014
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15026
  ret void, !dbg !15027
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15030, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 %1, metadata !15031, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i8 0, metadata !15032, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 0, metadata !15033, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !15038
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15040, !srcloc !13911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13908, metadata !DIExpression()) #23, !dbg !15042
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !15042
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata i8 poison, metadata !15032, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 undef, metadata !15033, metadata !DIExpression()), !dbg !15037
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !15043
  call void @llvm.dbg.value(metadata i1 %6, metadata !15032, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15036
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15046

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14067, metadata !DIExpression()) #23, !dbg !15047
  %11 = load i8, i8* %4, align 1, !dbg !15053
  %12 = and i8 %11, 127, !dbg !15053
  store i8 %12, i8* %4, align 1, !dbg !15053
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14075, metadata !DIExpression()) #23, !dbg !15054
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15056
  store i8 %9, i8* %8, align 2, !dbg !15057
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14084, metadata !DIExpression()) #23, !dbg !15058
  %13 = load i8, i8* %4, align 1, !dbg !15060
  %14 = or i8 %13, -128, !dbg !15060
  store i8 %14, i8* %4, align 1, !dbg !15060
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14091, metadata !DIExpression()) #23, !dbg !15061
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14098, metadata !DIExpression()) #23, !dbg !15063
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14104, metadata !DIExpression()) #23, !dbg !15063
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.168(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15065
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14105, metadata !DIExpression()) #23, !dbg !15063
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15066
  br i1 %16, label %26, label %17, !dbg !15065

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14105, metadata !DIExpression()) #23, !dbg !15063
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15067
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14105, metadata !DIExpression()) #23, !dbg !15063
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !15068
  %21 = icmp sgt i32 %20, 0, !dbg !15069
  br i1 %21, label %22, label %23, !dbg !15070

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !15071
  br label %27, !dbg !15072

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !15066
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14105, metadata !DIExpression()) #23, !dbg !15063
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15066
  br i1 %25, label %26, label %17, !dbg !15065, !llvm.loop !15073

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !15075
  br label %27, !dbg !15076

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15077
  br label %29, !dbg !15078

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15079
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15040
  call void @llvm.dbg.value(metadata i32 %30, metadata !13908, metadata !DIExpression()) #23, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %30, metadata !13902, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata i32 %30, metadata !15035, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata i32 undef, metadata !13923, metadata !DIExpression()) #23, !dbg !15081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !15081
  call void @llvm.dbg.value(metadata i32 undef, metadata !13931, metadata !DIExpression()) #23, !dbg !15083
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !15085, !srcloc !13937
  call void @llvm.dbg.value(metadata i8 poison, metadata !15032, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 undef, metadata !15033, metadata !DIExpression()), !dbg !15037
  ret i1 %6, !dbg !15086
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15091, metadata !DIExpression()), !dbg !15094
  call void @llvm.dbg.value(metadata i32 %1, metadata !15092, metadata !DIExpression()), !dbg !15094
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15095
  call void @llvm.dbg.value(metadata i1 %3, metadata !15093, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15094
  br i1 %3, label %4, label %12, !dbg !15096

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15098
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15099
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15099
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15099
  %9 = load i8, i8* %8, align 1, !dbg !15099
  %10 = icmp eq i8 %9, 0, !dbg !15100
  br i1 %10, label %11, label %12, !dbg !15101

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15102
  br label %12, !dbg !15104

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15105
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15106 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15108, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !15112
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15114, !srcloc !13911
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15114
  call void @llvm.dbg.value(metadata i32 %2, metadata !13908, metadata !DIExpression()) #23, !dbg !15116
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !15116
  call void @llvm.dbg.value(metadata i32 %2, metadata !13902, metadata !DIExpression()) #23, !dbg !15112
  call void @llvm.dbg.value(metadata i32 %2, metadata !15110, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata i32 undef, metadata !15108, metadata !DIExpression()), !dbg !15111
  tail call fastcc void @z_sched_lock() #25, !dbg !15117
  call void @llvm.dbg.value(metadata i32 %2, metadata !13923, metadata !DIExpression()) #23, !dbg !15120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !15120
  call void @llvm.dbg.value(metadata i32 %2, metadata !13931, metadata !DIExpression()) #23, !dbg !15122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15124, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !15108, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata i32 undef, metadata !15108, metadata !DIExpression()), !dbg !15111
  ret void, !dbg !15125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15126 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15127
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15128
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15128
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15128
  %5 = load i8, i8* %4, align 1, !dbg !15129
  %6 = add i8 %5, -1, !dbg !15129
  store i8 %6, i8* %4, align 1, !dbg !15129
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15130, !srcloc !15132
  ret void, !dbg !15133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15134 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15136, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !15140
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15142, !srcloc !13911
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15142
  call void @llvm.dbg.value(metadata i32 %2, metadata !13908, metadata !DIExpression()) #23, !dbg !15144
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !15144
  call void @llvm.dbg.value(metadata i32 %2, metadata !13902, metadata !DIExpression()) #23, !dbg !15140
  call void @llvm.dbg.value(metadata i32 %2, metadata !15138, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !15136, metadata !DIExpression()), !dbg !15139
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15145
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15148
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15148
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15148
  %7 = load i8, i8* %6, align 1, !dbg !15149
  %8 = add i8 %7, 1, !dbg !15149
  store i8 %8, i8* %6, align 1, !dbg !15149
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !15150
  call void @llvm.dbg.value(metadata i32 %2, metadata !13923, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %2, metadata !13931, metadata !DIExpression()) #23, !dbg !15153
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15155, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 1, metadata !15136, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !15136, metadata !DIExpression()), !dbg !15139
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15156
  ret void, !dbg !15157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15158 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15159
  ret %struct.k_thread* %1, !dbg !15160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15161 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15165, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15166, metadata !DIExpression()), !dbg !15170
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15171
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15167, metadata !DIExpression()), !dbg !15170
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15172
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15168, metadata !DIExpression()), !dbg !15170
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !15173
  call void @llvm.dbg.value(metadata i32 %5, metadata !15169, metadata !DIExpression()), !dbg !15170
  %6 = icmp sgt i32 %5, 0, !dbg !15174
  br i1 %6, label %17, label %7, !dbg !15176

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15177
  br i1 %8, label %17, label %9, !dbg !15179

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15180
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15180
  %12 = load i32, i32* %11, align 8, !dbg !15180
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15182
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15182
  %15 = load i32, i32* %14, align 8, !dbg !15182
  %16 = icmp ult i32 %12, %15, !dbg !15183
  br label %17, !dbg !15184

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15185
  ret i1 %18, !dbg !15186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15187 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15204, metadata !DIExpression()), !dbg !15219
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15205, metadata !DIExpression()), !dbg !15219
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15220
  %5 = load i32, i32* %4, align 4, !dbg !15221
  %6 = add nsw i32 %5, 1, !dbg !15221
  store i32 %6, i32* %4, align 4, !dbg !15221
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15222
  store i32 %5, i32* %7, align 8, !dbg !15223
  %8 = load i32, i32* %4, align 4, !dbg !15224
  %9 = icmp eq i32 %8, 0, !dbg !15225
  br i1 %9, label %10, label %32, !dbg !15226

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15227
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !15227
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15207, metadata !DIExpression()), !dbg !15227
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15227
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15227
  %14 = load i32, i32* %13, align 4, !dbg !15227
  %15 = shl i32 %14, 2, !dbg !15227
  %16 = alloca i8, i32 %15, align 8, !dbg !15227
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15227
  store i8* %16, i8** %17, align 4, !dbg !15227
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15227
  %19 = alloca i8, i32 %14, align 8, !dbg !15227
  store i8* %19, i8** %18, align 4, !dbg !15227
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15227
  store i32 -1, i32* %20, align 4, !dbg !15227
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15228
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15216, metadata !DIExpression()), !dbg !15229
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15206, metadata !DIExpression()), !dbg !15219
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15230
  br i1 %22, label %23, label %24, !dbg !15227

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !15230
  br label %32, !dbg !15231

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15206, metadata !DIExpression()), !dbg !15219
  %26 = load i32, i32* %4, align 4, !dbg !15232
  %27 = add nsw i32 %26, 1, !dbg !15232
  store i32 %27, i32* %4, align 4, !dbg !15232
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15234
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15234
  store i32 %26, i32* %29, align 8, !dbg !15235
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15228
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15216, metadata !DIExpression()), !dbg !15229
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15206, metadata !DIExpression()), !dbg !15219
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15230
  br i1 %31, label %23, label %24, !dbg !15227, !llvm.loop !15236

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15238
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15239
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !15240
  ret void, !dbg !15241
}

; Function Attrs: optsize
declare !dbg !15242 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15247 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15250 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15252, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15253, metadata !DIExpression()), !dbg !15254
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15255
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15256
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !15257
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15258
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15258
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15260
  br i1 %7, label %8, label %10, !dbg !15261

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15262
  store i32 0, i32* %9, align 4, !dbg !15264
  br label %10, !dbg !15265

10:                                               ; preds = %8, %2
  ret void, !dbg !15266
}

; Function Attrs: optsize
declare !dbg !15267 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15268 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15272, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15273, metadata !DIExpression()), !dbg !15275
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15276
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !15277
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15274, metadata !DIExpression()), !dbg !15275
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15273, metadata !DIExpression()), !dbg !15275
  ret %struct.k_thread* %4, !dbg !15278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15283, metadata !DIExpression()), !dbg !15284
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !15285
  ret %struct.rbnode* %2, !dbg !15286
}

; Function Attrs: optsize
declare !dbg !15287 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #22 !dbg !15290 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15300, metadata !DIExpression()), !dbg !15304
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15305
  %3 = load i32, i32* %2, align 4, !dbg !15305
  %4 = icmp eq i32 %3, 0, !dbg !15307
  br i1 %4, label %10, label %5, !dbg !15308

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15301, metadata !DIExpression()), !dbg !15304
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15309, !range !5278
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15310
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15302, metadata !DIExpression()), !dbg !15304
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.168(%struct._dnode* noundef %7) #25, !dbg !15311
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15303, metadata !DIExpression()), !dbg !15304
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15301, metadata !DIExpression()), !dbg !15304
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15304
  ret %struct.k_thread* %11, !dbg !15312
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15313 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15317, metadata !DIExpression()), !dbg !15320
  call void @llvm.dbg.value(metadata i32 0, metadata !15318, metadata !DIExpression()), !dbg !15320
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.193(%struct._wait_q_t* noundef %0) #25, !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15319, metadata !DIExpression()), !dbg !15320
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15322
  br i1 %3, label %8, label %4, !dbg !15323

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15324
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15326
  call void @llvm.dbg.value(metadata i32 1, metadata !15318, metadata !DIExpression()), !dbg !15320
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.193(%struct._wait_q_t* noundef %0) #25, !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15319, metadata !DIExpression()), !dbg !15320
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15322
  br i1 %7, label %8, label %4, !dbg !15323, !llvm.loop !15327

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15320
  ret i32 %9, !dbg !15329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.193(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !15330 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15332, metadata !DIExpression()), !dbg !15333
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15334
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.168(%struct._dnode* noundef %2) #25, !dbg !15335
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15336
  ret %struct.k_thread* %4, !dbg !15337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !15338 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15347, metadata !DIExpression()), !dbg !15348
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15349
  tail call fastcc void @sys_dlist_init.194(%struct._dnode* noundef nonnull %2) #25, !dbg !15350
  ret void, !dbg !15351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.194(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15352 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15356, metadata !DIExpression()), !dbg !15357
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15358
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15359
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15360
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15361
  ret void, !dbg !15362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15363 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !15364
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !15365
  ret void, !dbg !15366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15372, metadata !DIExpression()), !dbg !15373
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15374
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15374
  %4 = load i8, i8* %3, align 2, !dbg !15374
  %5 = sext i8 %4 to i32, !dbg !15375
  ret i32 %5, !dbg !15376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15377 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15381, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata i32 %1, metadata !15382, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15383, metadata !DIExpression()), !dbg !15384
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15385
  ret void, !dbg !15386
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15387 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !15388
  br i1 %1, label %8, label %2, !dbg !15389

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !15390
  br i1 %3, label %8, label %4, !dbg !15391

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15392
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !15393
  %7 = xor i1 %6, true, !dbg !15391
  br label %8, !dbg !15391

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15395 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15396, !range !3737
  %2 = icmp eq i8 %1, 0, !dbg !15396
  ret i1 %2, !dbg !15397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15398 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !15401
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15403, !srcloc !13911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13908, metadata !DIExpression()) #23, !dbg !15405
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !15405
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #23, !dbg !15401
  call void @llvm.dbg.value(metadata i32 undef, metadata !15400, metadata !DIExpression()), !dbg !15406
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15407
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14067, metadata !DIExpression()) #23, !dbg !15410
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15412
  %4 = load i8, i8* %3, align 1, !dbg !15413
  %5 = and i8 %4, 127, !dbg !15413
  store i8 %5, i8* %3, align 1, !dbg !15413
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14075, metadata !DIExpression()) #23, !dbg !15414
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !15416
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15417
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14084, metadata !DIExpression()) #23, !dbg !15418
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15420
  %8 = load i8, i8* %7, align 1, !dbg !15421
  %9 = or i8 %8, -128, !dbg !15421
  store i8 %9, i8* %7, align 1, !dbg !15421
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14091, metadata !DIExpression()) #23, !dbg !15422
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14098, metadata !DIExpression()) #23, !dbg !15424
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14104, metadata !DIExpression()) #23, !dbg !15424
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.168(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15426
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14105, metadata !DIExpression()) #23, !dbg !15424
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15427
  br i1 %11, label %22, label %12, !dbg !15426

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14105, metadata !DIExpression()) #23, !dbg !15424
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15428
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14105, metadata !DIExpression()) #23, !dbg !15424
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !15429
  %16 = icmp sgt i32 %15, 0, !dbg !15430
  br i1 %16, label %17, label %19, !dbg !15431

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15432
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !15433
  br label %24, !dbg !15434

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !15427
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14105, metadata !DIExpression()) #23, !dbg !15424
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15427
  br i1 %21, label %22, label %12, !dbg !15426, !llvm.loop !15435

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15437
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !15438
  br label %24, !dbg !15439

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15403
  call void @llvm.dbg.value(metadata i32 %25, metadata !13908, metadata !DIExpression()) #23, !dbg !15405
  call void @llvm.dbg.value(metadata i32 %25, metadata !13902, metadata !DIExpression()) #23, !dbg !15401
  call void @llvm.dbg.value(metadata i32 %25, metadata !15400, metadata !DIExpression()), !dbg !15406
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15440
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #23, !dbg !15441
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !15443
  ret void, !dbg !15444
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15445 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15449, metadata !DIExpression()), !dbg !15452
  %3 = icmp eq i64 %2, -1, !dbg !15453
  br i1 %3, label %4, label %6, !dbg !15455

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15456
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !15458
  br label %11, !dbg !15459

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15450, metadata !DIExpression()), !dbg !15452
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !15460
  %8 = sext i32 %7 to i64, !dbg !15460
  call void @llvm.dbg.value(metadata i64 %8, metadata !15450, metadata !DIExpression()), !dbg !15452
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !15461
  %10 = trunc i64 %9 to i32, !dbg !15461
  call void @llvm.dbg.value(metadata i32 %10, metadata !15451, metadata !DIExpression()), !dbg !15452
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15452
  ret i32 %12, !dbg !15462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15463 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15467, metadata !DIExpression()), !dbg !15468
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15469, !srcloc !15471
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !15472
  ret void, !dbg !15473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15474 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15478, metadata !DIExpression()), !dbg !15482
  %2 = icmp eq i64 %0, 0, !dbg !15483
  br i1 %2, label %3, label %4, !dbg !15485

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !15486
  br label %29, !dbg !15488

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15480, metadata !DIExpression()), !dbg !15482
  %5 = icmp sgt i64 %0, -3, !dbg !15489
  br i1 %5, label %6, label %10, !dbg !15491

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15492
  %8 = trunc i64 %0 to i32, !dbg !15494
  %9 = add i32 %7, %8, !dbg !15494
  call void @llvm.dbg.value(metadata i32 %9, metadata !15479, metadata !DIExpression()), !dbg !15482
  br label %13, !dbg !15495

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15496
  %12 = sub i32 -2, %11, !dbg !15496
  call void @llvm.dbg.value(metadata i32 %12, metadata !15479, metadata !DIExpression()), !dbg !15482
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15498
  call void @llvm.dbg.value(metadata i32 %14, metadata !15479, metadata !DIExpression()), !dbg !15482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !15499
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15501, !srcloc !13911
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %16, metadata !13908, metadata !DIExpression()) #23, !dbg !15503
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !15503
  call void @llvm.dbg.value(metadata i32 %16, metadata !13902, metadata !DIExpression()) #23, !dbg !15499
  call void @llvm.dbg.value(metadata i32 %16, metadata !15481, metadata !DIExpression()), !dbg !15482
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15504
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15505
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !15506
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15507
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15508
  tail call fastcc void @z_add_thread_timeout.180(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !15508
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15509
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !15510
  call void @llvm.dbg.value(metadata i32 %16, metadata !14507, metadata !DIExpression()) #23, !dbg !15511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #23, !dbg !15511
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !15513
  %22 = zext i32 %14 to i64, !dbg !15514
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15515
  %24 = zext i32 %23 to i64, !dbg !15515
  %25 = sub nsw i64 %22, %24, !dbg !15516
  call void @llvm.dbg.value(metadata i64 %25, metadata !15478, metadata !DIExpression()), !dbg !15482
  %26 = icmp sgt i64 %25, 0, !dbg !15517
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15517
  %28 = trunc i64 %27 to i32, !dbg !15517
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15482
  ret i32 %30, !dbg !15518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15519 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15521, metadata !DIExpression()), !dbg !15522
  call void @llvm.dbg.value(metadata i64 %0, metadata !13945, metadata !DIExpression()), !dbg !15523
  call void @llvm.dbg.value(metadata i32 10000, metadata !13948, metadata !DIExpression()), !dbg !15523
  call void @llvm.dbg.value(metadata i32 1000, metadata !13949, metadata !DIExpression()), !dbg !15523
  call void @llvm.dbg.value(metadata i8 1, metadata !13950, metadata !DIExpression()), !dbg !15523
  call void @llvm.dbg.value(metadata i1 false, metadata !13951, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15523
  call void @llvm.dbg.value(metadata i1 false, metadata !13952, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15523
  call void @llvm.dbg.value(metadata i8 0, metadata !13953, metadata !DIExpression()), !dbg !15523
  call void @llvm.dbg.value(metadata i1 false, metadata !13954, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15523
  call void @llvm.dbg.value(metadata i1 true, metadata !13955, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15523
  call void @llvm.dbg.value(metadata i64 0, metadata !13956, metadata !DIExpression()), !dbg !15523
  call void @llvm.dbg.value(metadata i64 0, metadata !13956, metadata !DIExpression()), !dbg !15523
  call void @llvm.dbg.value(metadata i64 %0, metadata !13945, metadata !DIExpression()), !dbg !15523
  %2 = udiv i64 %0, 10, !dbg !15525
  ret i64 %2, !dbg !15529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15530 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15531, !srcloc !15533
  tail call void @z_impl_k_yield() #25, !dbg !15534
  ret void, !dbg !15535
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15540, metadata !DIExpression()), !dbg !15542
  %2 = sext i32 %0 to i64, !dbg !15543
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !15544
  call void @llvm.dbg.value(metadata i64 %3, metadata !15541, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15542
  %4 = shl i64 %3, 32, !dbg !15545
  %5 = ashr exact i64 %4, 32, !dbg !15545
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !15546
  call void @llvm.dbg.value(metadata i32 %6, metadata !15541, metadata !DIExpression()), !dbg !15542
  %7 = sext i32 %6 to i64, !dbg !15547
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !15548
  %9 = trunc i64 %8 to i32, !dbg !15548
  ret i32 %9, !dbg !15549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !15550 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15552, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata i64 %0, metadata !13945, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13948, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i32 10000, metadata !13949, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i8 1, metadata !13950, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i1 false, metadata !13951, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15554
  call void @llvm.dbg.value(metadata i1 true, metadata !13952, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15554
  call void @llvm.dbg.value(metadata i8 0, metadata !13953, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i1 false, metadata !13954, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15554
  call void @llvm.dbg.value(metadata i1 true, metadata !13955, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15554
  call void @llvm.dbg.value(metadata i64 0, metadata !13956, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i64 0, metadata !13956, metadata !DIExpression()), !dbg !15554
  %2 = add i64 %0, 99, !dbg !15556
  call void @llvm.dbg.value(metadata i64 %2, metadata !13945, metadata !DIExpression()), !dbg !15554
  %3 = udiv i64 %2, 100, !dbg !15557
  ret i64 %3, !dbg !15558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15559 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15561, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i64 %0, metadata !13945, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i32 10000, metadata !13948, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13949, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i8 1, metadata !13950, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i1 false, metadata !13951, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15563
  call void @llvm.dbg.value(metadata i1 false, metadata !13952, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15563
  call void @llvm.dbg.value(metadata i8 0, metadata !13953, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i1 true, metadata !13954, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15563
  call void @llvm.dbg.value(metadata i1 false, metadata !13955, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15563
  call void @llvm.dbg.value(metadata i64 0, metadata !13956, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i64 0, metadata !13956, metadata !DIExpression()), !dbg !15563
  %2 = mul i64 %0, 100, !dbg !15565
  ret i64 %2, !dbg !15567
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15570, metadata !DIExpression()), !dbg !15571
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !15572
  br i1 %2, label %14, label %3, !dbg !15574

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15575
  %5 = icmp slt i32 %4, 0, !dbg !15577
  br i1 %5, label %6, label %10, !dbg !15578

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15579
  %8 = load i8, i8* %7, align 1, !dbg !15579
  %9 = icmp eq i8 %8, 16, !dbg !15582
  br i1 %9, label %10, label %14, !dbg !15583

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !15584
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15585
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15586, !srcloc !14547
  call void @llvm.dbg.value(metadata i32 %11, metadata !14543, metadata !DIExpression()) #23, !dbg !15590
  %12 = icmp eq i32 %11, 0, !dbg !15591
  br i1 %12, label %13, label %14, !dbg !15592

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15593
  br label %14, !dbg !15595

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15597 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15599, metadata !DIExpression()), !dbg !15600
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15601
  %3 = load i8, i8* %2, align 1, !dbg !15601
  %4 = and i8 %3, 2, !dbg !15602
  %5 = icmp ne i8 %4, 0, !dbg !15603
  ret i1 %5, !dbg !15604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !15605 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15610
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15609, metadata !DIExpression()), !dbg !15611
  ret %struct.k_thread* %1, !dbg !15612
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15613 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15616, !srcloc !14547
  call void @llvm.dbg.value(metadata i32 %1, metadata !14543, metadata !DIExpression()) #23, !dbg !15619
  %2 = icmp eq i32 %1, 0, !dbg !15620
  br i1 %2, label %3, label %8, !dbg !15621

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15622
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !15623
  %6 = icmp ne i32 %5, 0, !dbg !15621
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15625 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15627, metadata !DIExpression()), !dbg !15629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !15630
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15632, !srcloc !13911
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15632
  call void @llvm.dbg.value(metadata i32 %3, metadata !13908, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 %3, metadata !13902, metadata !DIExpression()) #23, !dbg !15630
  call void @llvm.dbg.value(metadata i32 %3, metadata !15628, metadata !DIExpression()), !dbg !15629
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15635
  %5 = load i8, i8* %4, align 4, !dbg !15635
  %6 = and i8 %5, 1, !dbg !15637
  %7 = icmp eq i8 %6, 0, !dbg !15638
  br i1 %7, label %9, label %8, !dbg !15639

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !15640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !15640
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !15643
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15645, !srcloc !13937
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !15646, !srcloc !15648
  br label %24, !dbg !15649

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15650
  %11 = load i8, i8* %10, align 1, !dbg !15650
  %12 = and i8 %11, 8, !dbg !15652
  %13 = icmp eq i8 %12, 0, !dbg !15653
  br i1 %13, label %15, label %14, !dbg !15654

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !15655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !15655
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !15658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15660, !srcloc !13937
  br label %24, !dbg !15661

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !15662
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15663
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15665
  br i1 %17, label %18, label %23, !dbg !15666

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15667, !srcloc !14547
  call void @llvm.dbg.value(metadata i32 %19, metadata !14543, metadata !DIExpression()) #23, !dbg !15670
  %20 = icmp eq i32 %19, 0, !dbg !15671
  br i1 %20, label %21, label %23, !dbg !15672

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14507, metadata !DIExpression()) #23, !dbg !15673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #23, !dbg !15673
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !15676
  br label %23, !dbg !15677

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13923, metadata !DIExpression()) #23, !dbg !15678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !15678
  call void @llvm.dbg.value(metadata i32 %3, metadata !13931, metadata !DIExpression()) #23, !dbg !15680
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15682, !srcloc !13937
  br label %24, !dbg !15683

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !15683
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15684 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15686, metadata !DIExpression()), !dbg !15687
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15688
  %3 = load i8, i8* %2, align 1, !dbg !15688
  %4 = and i8 %3, 8, !dbg !15690
  %5 = icmp eq i8 %4, 0, !dbg !15691
  br i1 %5, label %6, label %20, !dbg !15692

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15693
  %8 = or i8 %7, 8, !dbg !15693
  store i8 %8, i8* %2, align 1, !dbg !15693
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !15695
  br i1 %9, label %10, label %12, !dbg !15697

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14067, metadata !DIExpression()) #23, !dbg !15698
  %11 = and i8 %8, 95, !dbg !15701
  store i8 %11, i8* %2, align 1, !dbg !15701
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14075, metadata !DIExpression()) #23, !dbg !15702
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !15704
  br label %12, !dbg !15705

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15706
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !15706
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !15708
  br i1 %15, label %17, label %16, !dbg !15709

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !15710
  br label %17, !dbg !15712

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !15713
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15714
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #25, !dbg !15715
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15716
  br label %20, !dbg !15717

20:                                               ; preds = %17, %1
  ret void, !dbg !15718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15719 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15723, metadata !DIExpression()), !dbg !15725
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.193(%struct._wait_q_t* noundef %0) #25, !dbg !15726
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15724, metadata !DIExpression()), !dbg !15725
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15727
  br i1 %3, label %10, label %4, !dbg !15728

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !15729
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !15731
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15732, metadata !DIExpression()), !dbg !15738
  call void @llvm.dbg.value(metadata i32 0, metadata !15737, metadata !DIExpression()), !dbg !15738
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !15740
  store i32 0, i32* %7, align 4, !dbg !15741
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15742
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.193(%struct._wait_q_t* noundef %0) #25, !dbg !15726
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15724, metadata !DIExpression()), !dbg !15725
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15727
  br i1 %9, label %10, label %4, !dbg !15728, !llvm.loop !15743

10:                                               ; preds = %4, %1
  ret void, !dbg !15745
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15746 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15751, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15750, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !15755
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15757, !srcloc !13911
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15757
  call void @llvm.dbg.value(metadata i32 %4, metadata !13908, metadata !DIExpression()) #23, !dbg !15759
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !15759
  call void @llvm.dbg.value(metadata i32 %4, metadata !13902, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata i32 %4, metadata !15752, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata i32 0, metadata !15753, metadata !DIExpression()), !dbg !15754
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15760
  %6 = load i8, i8* %5, align 1, !dbg !15760
  %7 = and i8 %6, 8, !dbg !15762
  %8 = icmp eq i8 %7, 0, !dbg !15763
  br i1 %8, label %9, label %24, !dbg !15764

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !15751, metadata !DIExpression()), !dbg !15754
  %11 = icmp eq i64 %10, 0, !dbg !15765
  br i1 %11, label %24, label %12, !dbg !15767

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15768
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !15770
  br i1 %14, label %24, label %15, !dbg !15771

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15772
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !15772
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !15773
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !15774
  br i1 %19, label %24, label %20, !dbg !15775

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15776
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #25, !dbg !15778
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15779
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !15780
  call void @llvm.dbg.value(metadata i32 %4, metadata !14507, metadata !DIExpression()) #23, !dbg !15781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #23, !dbg !15781
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !15783
  call void @llvm.dbg.value(metadata i32 %23, metadata !15753, metadata !DIExpression()), !dbg !15754
  br label %26, !dbg !15784

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15785
  call void @llvm.dbg.value(metadata i32 %25, metadata !15753, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata i32 %4, metadata !13923, metadata !DIExpression()) #23, !dbg !15786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !15786
  call void @llvm.dbg.value(metadata i32 %4, metadata !13931, metadata !DIExpression()) #23, !dbg !15788
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !15790, !srcloc !13937
  br label %26, !dbg !15791

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !15754
  ret i32 %27, !dbg !15792
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15793 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15797, metadata !DIExpression()), !dbg !15805
  call void @llvm.dbg.value(metadata i32 %1, metadata !15798, metadata !DIExpression()), !dbg !15805
  call void @llvm.dbg.value(metadata i8* %2, metadata !15799, metadata !DIExpression()), !dbg !15805
  call void @llvm.dbg.value(metadata i8 0, metadata !15801, metadata !DIExpression()), !dbg !15805
  call void @llvm.dbg.value(metadata i32 0, metadata !15802, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13896, metadata !DIExpression()) #23, !dbg !15807
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15809, !srcloc !13911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13908, metadata !DIExpression()) #23, !dbg !15811
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !15811
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #23, !dbg !15807
  call void @llvm.dbg.value(metadata i32 undef, metadata !15804, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.value(metadata i8 poison, metadata !15801, metadata !DIExpression()), !dbg !15805
  call void @llvm.dbg.value(metadata i32 undef, metadata !15802, metadata !DIExpression()), !dbg !15806
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !15812
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15800, metadata !DIExpression()), !dbg !15805
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15815
  br i1 %7, label %12, label %8, !dbg !15817

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15818, metadata !DIExpression()), !dbg !15825
  call void @llvm.dbg.value(metadata i32 %1, metadata !15823, metadata !DIExpression()), !dbg !15825
  call void @llvm.dbg.value(metadata i8* %2, metadata !15824, metadata !DIExpression()), !dbg !15825
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15732, metadata !DIExpression()), !dbg !15828
  call void @llvm.dbg.value(metadata i32 %1, metadata !15737, metadata !DIExpression()), !dbg !15828
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !15830
  store i32 %1, i32* %9, align 4, !dbg !15831
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15832
  store i8* %2, i8** %10, align 4, !dbg !15833
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !15834
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !15835
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !15836
  call void @llvm.dbg.value(metadata i8 1, metadata !15801, metadata !DIExpression()), !dbg !15805
  br label %12, !dbg !15837

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15809
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15809
  call void @llvm.dbg.value(metadata i32 %14, metadata !13908, metadata !DIExpression()) #23, !dbg !15811
  call void @llvm.dbg.value(metadata i32 %14, metadata !13902, metadata !DIExpression()) #23, !dbg !15807
  call void @llvm.dbg.value(metadata i32 %14, metadata !15804, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.value(metadata i8 poison, metadata !15801, metadata !DIExpression()), !dbg !15805
  call void @llvm.dbg.value(metadata i32 undef, metadata !13923, metadata !DIExpression()) #23, !dbg !15838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13928, metadata !DIExpression()) #23, !dbg !15838
  call void @llvm.dbg.value(metadata i32 undef, metadata !13931, metadata !DIExpression()) #23, !dbg !15840
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15842, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 undef, metadata !15802, metadata !DIExpression()), !dbg !15806
  ret i1 %13, !dbg !15843
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15844 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15850, metadata !DIExpression()), !dbg !15855
  call void @llvm.dbg.value(metadata i64 undef, metadata !15852, metadata !DIExpression()), !dbg !15855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15849, metadata !DIExpression()), !dbg !15855
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15851, metadata !DIExpression()), !dbg !15855
  call void @llvm.dbg.value(metadata i8** %4, metadata !15853, metadata !DIExpression()), !dbg !15855
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #25, !dbg !15856
  call void @llvm.dbg.value(metadata i32 %6, metadata !15854, metadata !DIExpression()), !dbg !15855
  %7 = icmp eq i8** %4, null, !dbg !15857
  br i1 %7, label %12, label %8, !dbg !15859

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15860
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15862
  %11 = load i8*, i8** %10, align 4, !dbg !15862
  store i8* %11, i8** %4, align 4, !dbg !15863
  br label %12, !dbg !15864

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15866 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !15868
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !15869
  ret void, !dbg !15870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15871 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15881, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15879, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15880, metadata !DIExpression()), !dbg !15898
  %5 = icmp eq i64 %4, -1, !dbg !15899
  br i1 %5, label %55, label %6, !dbg !15901

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15902
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15903
  call void @llvm.dbg.value(metadata i32 0, metadata !15882, metadata !DIExpression()), !dbg !15904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15905, metadata !DIExpression()) #23, !dbg !15912
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15914, !srcloc !15920
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15914
  call void @llvm.dbg.value(metadata i32 %9, metadata !15917, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %9, metadata !15911, metadata !DIExpression()) #23, !dbg !15912
  call void @llvm.dbg.value(metadata i32 %9, metadata !15888, metadata !DIExpression()), !dbg !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()), !dbg !15904
  %10 = icmp slt i64 %4, -1, !dbg !15922
  br i1 %10, label %11, label %17, !dbg !15923

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15924
  %13 = add i64 %4, %12, !dbg !15925
  %14 = sub i64 -2, %13, !dbg !15925
  call void @llvm.dbg.value(metadata i64 %14, metadata !15892, metadata !DIExpression()), !dbg !15926
  %15 = icmp sgt i64 %14, 1, !dbg !15927
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15927
  br label %22, !dbg !15928

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15929
  %19 = tail call fastcc i32 @elapsed.207() #25, !dbg !15931
  %20 = sext i32 %19 to i64, !dbg !15931
  %21 = add nsw i64 %18, %20, !dbg !15932
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15933
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15934
  store i64 %23, i64* %24, align 8, !dbg !15935
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !15936
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15889, metadata !DIExpression()), !dbg !15938
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15939
  br i1 %26, label %42, label %27, !dbg !15939

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15940
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15889, metadata !DIExpression()), !dbg !15938
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15944
  %31 = load i64, i64* %30, align 8, !dbg !15944
  %32 = icmp slt i64 %28, %31, !dbg !15945
  br i1 %32, label %33, label %38, !dbg !15946

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15944
  %35 = sub nsw i64 %31, %28, !dbg !15947
  store i64 %35, i64* %34, align 8, !dbg !15947
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15949
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15950
  tail call fastcc void @sys_dlist_insert.208(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !15951
  br label %44, !dbg !15952

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15953
  store i64 %39, i64* %24, align 8, !dbg !15953
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !15954
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15889, metadata !DIExpression()), !dbg !15938
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15939
  br i1 %41, label %42, label %27, !dbg !15939, !llvm.loop !15955

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15957
  tail call fastcc void @sys_dlist_append.209(%struct._dnode* noundef %43) #25, !dbg !15960
  br label %44, !dbg !15961

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !15962
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15963
  br i1 %46, label %47, label %54, !dbg !15964

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %48, metadata !15895, metadata !DIExpression()), !dbg !15966
  %49 = icmp ne i32 %48, 0, !dbg !15967
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15969
  br i1 %52, label %54, label %53, !dbg !15969

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !15970
  br label %54, !dbg !15972

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15973, metadata !DIExpression()) #23, !dbg !15979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15978, metadata !DIExpression()) #23, !dbg !15979
  call void @llvm.dbg.value(metadata i32 %9, metadata !15981, metadata !DIExpression()) #23, !dbg !15984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15986, !srcloc !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()), !dbg !15904
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.207() unnamed_addr #1 !dbg !15989 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15992
  %2 = icmp eq i32 %1, 0, !dbg !15993
  br i1 %2, label %3, label %5, !dbg !15992

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !15994
  br label %5, !dbg !15992

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15992
  ret i32 %6, !dbg !15995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15996 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212() #25, !dbg !16002
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16000, metadata !DIExpression()), !dbg !16003
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16004
  ret %struct._timeout* %2, !dbg !16005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.208(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !16006 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16010, metadata !DIExpression()), !dbg !16014
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16011, metadata !DIExpression()), !dbg !16014
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16015
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16015
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16012, metadata !DIExpression()), !dbg !16014
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16016
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16017
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16018
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16019
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16020
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16021
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16022
  ret void, !dbg !16023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16024 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16028, metadata !DIExpression()), !dbg !16030
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16031
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.210(%struct._dnode* noundef %2) #25, !dbg !16032
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16029, metadata !DIExpression()), !dbg !16030
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16033
  ret %struct._timeout* %4, !dbg !16034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.209(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !16035 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16040, metadata !DIExpression()), !dbg !16043
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16041, metadata !DIExpression()), !dbg !16043
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16044
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16042, metadata !DIExpression()), !dbg !16043
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16045
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16046
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16047
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16048
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16049
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16050
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16051
  ret void, !dbg !16052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16053 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !16058
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16055, metadata !DIExpression()), !dbg !16059
  %2 = tail call fastcc i32 @elapsed.207() #25, !dbg !16060
  call void @llvm.dbg.value(metadata i32 %2, metadata !16056, metadata !DIExpression()), !dbg !16059
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16061
  br i1 %3, label %14, label %4, !dbg !16063

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16064
  %6 = load i64, i64* %5, align 8, !dbg !16064
  %7 = sext i32 %2 to i64, !dbg !16065
  %8 = sub nsw i64 %6, %7, !dbg !16066
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16067
  br i1 %9, label %14, label %10, !dbg !16068

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16069
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16069
  %13 = trunc i64 %12 to i32, !dbg !16069
  call void @llvm.dbg.value(metadata i32 %13, metadata !16057, metadata !DIExpression()), !dbg !16059
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16071
  call void @llvm.dbg.value(metadata i32 %15, metadata !16057, metadata !DIExpression()), !dbg !16059
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16072
  %17 = icmp ne i32 %16, 0, !dbg !16074
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16075
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16075
  call void @llvm.dbg.value(metadata i32 %20, metadata !16057, metadata !DIExpression()), !dbg !16059
  ret i32 %20, !dbg !16076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.210(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16077 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16081, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16082, metadata !DIExpression()), !dbg !16083
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16084
  br i1 %2, label %5, label %3, !dbg !16085

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.211(%struct._dnode* noundef nonnull %0) #25, !dbg !16086
  br label %5, !dbg !16085

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16085
  ret %struct._dnode* %6, !dbg !16087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.211(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16088 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16090, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16091, metadata !DIExpression()), !dbg !16092
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16093
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16094
  br i1 %3, label %7, label %4, !dbg !16095

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16096
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16096
  br label %7, !dbg !16095

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16095
  ret %struct._dnode* %8, !dbg !16097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.212() unnamed_addr #5 !dbg !16098 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16102, metadata !DIExpression()), !dbg !16103
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.213() #25, !dbg !16104
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16104
  ret %struct._dnode* %3, !dbg !16105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.213() unnamed_addr #5 !dbg !16106 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16110, metadata !DIExpression()), !dbg !16111
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16112
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16113
  ret i1 %2, !dbg !16114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16115 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16119, metadata !DIExpression()), !dbg !16124
  call void @llvm.dbg.value(metadata i32 -22, metadata !16120, metadata !DIExpression()), !dbg !16124
  call void @llvm.dbg.value(metadata i32 0, metadata !16121, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15905, metadata !DIExpression()) #23, !dbg !16126
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16128, !srcloc !15920
  call void @llvm.dbg.value(metadata i32 undef, metadata !15917, metadata !DIExpression()) #23, !dbg !16130
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()) #23, !dbg !16130
  call void @llvm.dbg.value(metadata i32 undef, metadata !15911, metadata !DIExpression()) #23, !dbg !16126
  call void @llvm.dbg.value(metadata i32 undef, metadata !16123, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata i32 -22, metadata !16120, metadata !DIExpression()), !dbg !16124
  call void @llvm.dbg.value(metadata i32 undef, metadata !16121, metadata !DIExpression()), !dbg !16125
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16120, metadata !DIExpression()), !dbg !16124
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.216(%struct._dnode* noundef %3) #25, !dbg !16131
  br i1 %4, label %5, label %6, !dbg !16135

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !16136
  call void @llvm.dbg.value(metadata i32 0, metadata !16120, metadata !DIExpression()), !dbg !16124
  br label %6, !dbg !16138

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16124
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16128
  call void @llvm.dbg.value(metadata i32 %8, metadata !15917, metadata !DIExpression()) #23, !dbg !16130
  call void @llvm.dbg.value(metadata i32 %8, metadata !15911, metadata !DIExpression()) #23, !dbg !16126
  call void @llvm.dbg.value(metadata i32 %8, metadata !16123, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata i32 %7, metadata !16120, metadata !DIExpression()), !dbg !16124
  call void @llvm.dbg.value(metadata i32 undef, metadata !15973, metadata !DIExpression()) #23, !dbg !16139
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15978, metadata !DIExpression()) #23, !dbg !16139
  call void @llvm.dbg.value(metadata i32 undef, metadata !15981, metadata !DIExpression()) #23, !dbg !16141
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16143, !srcloc !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16121, metadata !DIExpression()), !dbg !16125
  ret i32 %7, !dbg !16144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.216(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16145 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16151, metadata !DIExpression()), !dbg !16152
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16153
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16153
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16154
  ret i1 %4, !dbg !16155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #10 !dbg !16156 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16158, metadata !DIExpression()), !dbg !16159
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !16160
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16162
  br i1 %3, label %10, label %4, !dbg !16163

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16164
  %6 = load i64, i64* %5, align 8, !dbg !16164
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16166
  %8 = load i64, i64* %7, align 8, !dbg !16167
  %9 = add nsw i64 %8, %6, !dbg !16167
  store i64 %9, i64* %7, align 8, !dbg !16167
  br label %10, !dbg !16168

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16169
  tail call fastcc void @sys_dlist_remove.217(%struct._dnode* noundef %11) #25, !dbg !16170
  ret void, !dbg !16171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.217(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !16172 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16176, metadata !DIExpression()), !dbg !16179
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16180
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16180
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16177, metadata !DIExpression()), !dbg !16179
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16181
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16181
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16178, metadata !DIExpression()), !dbg !16179
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16182
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16183
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16184
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16185
  tail call fastcc void @sys_dnode_init.218(%struct._dnode* noundef %0) #25, !dbg !16186
  ret void, !dbg !16187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.218(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16188 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16190, metadata !DIExpression()), !dbg !16191
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16192
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16193
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16194
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16195
  ret void, !dbg !16196
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16197 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16203, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.value(metadata i64 0, metadata !16204, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.value(metadata i32 0, metadata !16205, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15905, metadata !DIExpression()) #23, !dbg !16210
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16212, !srcloc !15920
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16212
  call void @llvm.dbg.value(metadata i32 %3, metadata !15917, metadata !DIExpression()) #23, !dbg !16214
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()) #23, !dbg !16214
  call void @llvm.dbg.value(metadata i32 %3, metadata !15911, metadata !DIExpression()) #23, !dbg !16210
  call void @llvm.dbg.value(metadata i32 %3, metadata !16207, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata i64 0, metadata !16204, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.value(metadata i32 undef, metadata !16205, metadata !DIExpression()), !dbg !16209
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16215
  call void @llvm.dbg.value(metadata i64 %4, metadata !16204, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.value(metadata i32 %3, metadata !15973, metadata !DIExpression()) #23, !dbg !16218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15978, metadata !DIExpression()) #23, !dbg !16218
  call void @llvm.dbg.value(metadata i32 %3, metadata !15981, metadata !DIExpression()) #23, !dbg !16220
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16222, !srcloc !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16205, metadata !DIExpression()), !dbg !16209
  ret i64 %4, !dbg !16223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16224 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16226, metadata !DIExpression()), !dbg !16230
  call void @llvm.dbg.value(metadata i64 0, metadata !16227, metadata !DIExpression()), !dbg !16230
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.219(%struct._timeout* noundef %0) #25, !dbg !16231
  br i1 %2, label %21, label %3, !dbg !16233

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !16234
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16228, metadata !DIExpression()), !dbg !16235
  call void @llvm.dbg.value(metadata i64 0, metadata !16227, metadata !DIExpression()), !dbg !16230
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16236
  br i1 %5, label %16, label %6, !dbg !16238

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16228, metadata !DIExpression()), !dbg !16235
  call void @llvm.dbg.value(metadata i64 %8, metadata !16227, metadata !DIExpression()), !dbg !16230
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16239
  %10 = load i64, i64* %9, align 8, !dbg !16239
  %11 = add nsw i64 %10, %8, !dbg !16241
  call void @llvm.dbg.value(metadata i64 %11, metadata !16227, metadata !DIExpression()), !dbg !16230
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16242
  br i1 %12, label %16, label %13, !dbg !16244

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !16245
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16228, metadata !DIExpression()), !dbg !16235
  call void @llvm.dbg.value(metadata i64 %11, metadata !16227, metadata !DIExpression()), !dbg !16230
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16236
  br i1 %15, label %16, label %6, !dbg !16238, !llvm.loop !16246

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16230
  call void @llvm.dbg.value(metadata i64 %17, metadata !16227, metadata !DIExpression()), !dbg !16230
  %18 = tail call fastcc i32 @elapsed.207() #25, !dbg !16248
  %19 = sext i32 %18 to i64, !dbg !16248
  %20 = sub nsw i64 %17, %19, !dbg !16249
  br label %21, !dbg !16250

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16230
  ret i64 %22, !dbg !16251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.219(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16252 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16256, metadata !DIExpression()), !dbg !16257
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16258
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.216(%struct._dnode* noundef %2) #25, !dbg !16259
  %4 = xor i1 %3, true, !dbg !16260
  ret i1 %4, !dbg !16261
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16262 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16264, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i64 0, metadata !16265, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i32 0, metadata !16266, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15905, metadata !DIExpression()) #23, !dbg !16271
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16273, !srcloc !15920
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16273
  call void @llvm.dbg.value(metadata i32 %3, metadata !15917, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata i32 %3, metadata !15911, metadata !DIExpression()) #23, !dbg !16271
  call void @llvm.dbg.value(metadata i32 %3, metadata !16268, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i64 0, metadata !16265, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i32 undef, metadata !16266, metadata !DIExpression()), !dbg !16270
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16276
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16279
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16265, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16269
  call void @llvm.dbg.value(metadata i32 %3, metadata !15973, metadata !DIExpression()) #23, !dbg !16280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15978, metadata !DIExpression()) #23, !dbg !16280
  call void @llvm.dbg.value(metadata i32 %3, metadata !15981, metadata !DIExpression()) #23, !dbg !16282
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16284, !srcloc !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16266, metadata !DIExpression()), !dbg !16270
  %6 = add i64 %5, %4, !dbg !16285
  ret i64 %6, !dbg !16286
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16287 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16289, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.value(metadata i32 0, metadata !16290, metadata !DIExpression()), !dbg !16294
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15905, metadata !DIExpression()) #23, !dbg !16295
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16297, !srcloc !15920
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16297
  call void @llvm.dbg.value(metadata i32 %2, metadata !15917, metadata !DIExpression()) #23, !dbg !16299
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()) #23, !dbg !16299
  call void @llvm.dbg.value(metadata i32 %2, metadata !15911, metadata !DIExpression()) #23, !dbg !16295
  call void @llvm.dbg.value(metadata i32 %2, metadata !16292, metadata !DIExpression()), !dbg !16294
  call void @llvm.dbg.value(metadata i32 -1, metadata !16289, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16294
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !16300
  call void @llvm.dbg.value(metadata i32 %3, metadata !16289, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.value(metadata i32 %2, metadata !15973, metadata !DIExpression()) #23, !dbg !16303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15978, metadata !DIExpression()) #23, !dbg !16303
  call void @llvm.dbg.value(metadata i32 %2, metadata !15981, metadata !DIExpression()) #23, !dbg !16305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16307, !srcloc !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16294
  ret i32 %3, !dbg !16308
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16311, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.value(metadata i1 %1, metadata !16312, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16321
  call void @llvm.dbg.value(metadata i32 0, metadata !16313, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15905, metadata !DIExpression()) #23, !dbg !16323
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16325, !srcloc !15920
  call void @llvm.dbg.value(metadata i32 undef, metadata !15917, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !15911, metadata !DIExpression()) #23, !dbg !16323
  call void @llvm.dbg.value(metadata i32 undef, metadata !16315, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i32 undef, metadata !16313, metadata !DIExpression()), !dbg !16322
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !16328
  call void @llvm.dbg.value(metadata i32 %4, metadata !16316, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.value(metadata i1 undef, metadata !16319, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16329
  %5 = icmp slt i32 %4, 2, !dbg !16330
  call void @llvm.dbg.value(metadata i1 %5, metadata !16320, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16329
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16331
  call void @llvm.dbg.value(metadata i1 %6, metadata !16319, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16329
  br i1 %7, label %11, label %8, !dbg !16331

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16333
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16333
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !16335
  br label %11, !dbg !16336

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16325
  call void @llvm.dbg.value(metadata i32 %12, metadata !15917, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %12, metadata !15911, metadata !DIExpression()) #23, !dbg !16323
  call void @llvm.dbg.value(metadata i32 %12, metadata !16315, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i32 undef, metadata !15973, metadata !DIExpression()) #23, !dbg !16337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15978, metadata !DIExpression()) #23, !dbg !16337
  call void @llvm.dbg.value(metadata i32 undef, metadata !15981, metadata !DIExpression()) #23, !dbg !16339
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !16341, !srcloc !15987
  call void @llvm.dbg.value(metadata i32 1, metadata !16313, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i32 undef, metadata !16313, metadata !DIExpression()), !dbg !16322
  ret void, !dbg !16342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16347, metadata !DIExpression()), !dbg !16352
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !16353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15905, metadata !DIExpression()) #23, !dbg !16354
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16356, !srcloc !15920
  call void @llvm.dbg.value(metadata i32 undef, metadata !15917, metadata !DIExpression()) #23, !dbg !16358
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()) #23, !dbg !16358
  call void @llvm.dbg.value(metadata i32 undef, metadata !15911, metadata !DIExpression()) #23, !dbg !16354
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()), !dbg !16352
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()), !dbg !16352
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !16359
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16360
  br i1 %4, label %28, label %5, !dbg !16361

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16362
  %10 = load i64, i64* %9, align 8, !dbg !16362
  %11 = sext i32 %8 to i64, !dbg !16363
  %12 = icmp sgt i64 %10, %11, !dbg !16364
  br i1 %12, label %26, label %13, !dbg !16365

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16352
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16349, metadata !DIExpression()), !dbg !16366
  %15 = trunc i64 %10 to i32, !dbg !16367
  call void @llvm.dbg.value(metadata i32 %15, metadata !16351, metadata !DIExpression()), !dbg !16366
  %16 = sext i32 %15 to i64, !dbg !16368
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16369
  %18 = add i64 %17, %16, !dbg !16369
  store i64 %18, i64* @curr_tick, align 8, !dbg !16369
  store i64 0, i64* %9, align 8, !dbg !16370
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !16371
  call void @llvm.dbg.value(metadata i32 %14, metadata !15973, metadata !DIExpression()) #23, !dbg !16372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15978, metadata !DIExpression()) #23, !dbg !16372
  call void @llvm.dbg.value(metadata i32 %14, metadata !15981, metadata !DIExpression()) #23, !dbg !16374
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16376, !srcloc !15987
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16377
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16377
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !16378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15905, metadata !DIExpression()) #23, !dbg !16379
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16381, !srcloc !15920
  call void @llvm.dbg.value(metadata i32 undef, metadata !15917, metadata !DIExpression()) #23, !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()) #23, !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !15911, metadata !DIExpression()) #23, !dbg !16379
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()), !dbg !16352
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16384
  %23 = sub nsw i32 %22, %15, !dbg !16384
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()), !dbg !16352
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !16359
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16360
  br i1 %25, label %28, label %5, !dbg !16361, !llvm.loop !16385

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16387
  store i64 %27, i64* %9, align 8, !dbg !16387
  br label %32, !dbg !16390

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16352
  %31 = sext i32 %30 to i64, !dbg !16391
  br label %32, !dbg !16391

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16391
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16352
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16392
  %37 = add i64 %36, %33, !dbg !16392
  store i64 %37, i64* @curr_tick, align 8, !dbg !16392
  store i32 0, i32* @announce_remaining, align 4, !dbg !16393
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !16394
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !16395
  call void @llvm.dbg.value(metadata i32 %35, metadata !15973, metadata !DIExpression()) #23, !dbg !16396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15978, metadata !DIExpression()) #23, !dbg !16396
  call void @llvm.dbg.value(metadata i32 %35, metadata !15981, metadata !DIExpression()) #23, !dbg !16398
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !16400, !srcloc !15987
  ret void, !dbg !16401
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16402 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16406, metadata !DIExpression()), !dbg !16410
  call void @llvm.dbg.value(metadata i32 0, metadata !16407, metadata !DIExpression()), !dbg !16411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15905, metadata !DIExpression()) #23, !dbg !16412
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16414, !srcloc !15920
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16414
  call void @llvm.dbg.value(metadata i32 %2, metadata !15917, metadata !DIExpression()) #23, !dbg !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()) #23, !dbg !16416
  call void @llvm.dbg.value(metadata i32 %2, metadata !15911, metadata !DIExpression()) #23, !dbg !16412
  call void @llvm.dbg.value(metadata i32 %2, metadata !16409, metadata !DIExpression()), !dbg !16411
  call void @llvm.dbg.value(metadata i64 0, metadata !16406, metadata !DIExpression()), !dbg !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()), !dbg !16411
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16417
  %4 = tail call fastcc i32 @elapsed.207() #25, !dbg !16420
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16406, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16410
  call void @llvm.dbg.value(metadata i32 %2, metadata !15973, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15978, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata i32 %2, metadata !15981, metadata !DIExpression()) #23, !dbg !16423
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16425, !srcloc !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()), !dbg !16411
  %5 = sext i32 %4 to i64, !dbg !16420
  %6 = add i64 %3, %5, !dbg !16426
  ret i64 %6, !dbg !16427
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16428 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16429
  %2 = trunc i64 %1 to i32, !dbg !16430
  ret i32 %2, !dbg !16431
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16432 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16433
  ret i64 %1, !dbg !16434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16437, metadata !DIExpression()), !dbg !16444
  %2 = icmp eq i32 %0, 0, !dbg !16445
  br i1 %2, label %10, label %3, !dbg !16447

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !16448
  call void @llvm.dbg.value(metadata i32 %4, metadata !16438, metadata !DIExpression()), !dbg !16444
  %5 = mul i32 %0, 200, !dbg !16449
  call void @llvm.dbg.value(metadata i32 %5, metadata !16439, metadata !DIExpression()), !dbg !16444
  br label %6, !dbg !16450

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !16451
  call void @llvm.dbg.value(metadata i32 %7, metadata !16440, metadata !DIExpression()), !dbg !16452
  %8 = sub i32 %7, %4, !dbg !16453
  %9 = icmp ult i32 %8, %5, !dbg !16455
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16457 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !16458
  ret i32 %1, !dbg !16459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16460 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !16462
  ret i32 %1, !dbg !16463
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16464 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16468, metadata !DIExpression()), !dbg !16470
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16471

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !16472
  br label %14, !dbg !16476

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16469, metadata !DIExpression()), !dbg !16470
  %6 = icmp slt i64 %2, -1, !dbg !16477
  br i1 %6, label %7, label %9, !dbg !16480

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16481
  br label %14, !dbg !16482

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !16484
  %11 = icmp ugt i64 %2, 1, !dbg !16485
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16485
  %13 = add nsw i64 %10, %12, !dbg !16486
  br label %14, !dbg !16487

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16488
  ret i64 %15, !dbg !16489
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !16490 {
  tail call void asm sideeffect "nop", ""() #23, !dbg !16492, !srcloc !16495
  ret void, !dbg !16496
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16497 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.234, i32 0, i32 0)) #24, !dbg !16499
  ret void, !dbg !16500
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !16501 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !16503, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !16504, metadata !DIExpression()), !dbg !16524
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !16525

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !16526

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !16504, metadata !DIExpression()), !dbg !16524
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !16527
  %6 = load i8*, i8** %5, align 4, !dbg !16527
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !16531
  %8 = load i32, i32* %7, align 4, !dbg !16531
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #25, !dbg !16532
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !16533
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !16504, metadata !DIExpression()), !dbg !16524
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !16534
  br i1 %10, label %3, label %2, !dbg !16525, !llvm.loop !16536
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16538 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16542, metadata !DIExpression()), !dbg !16545
  call void @llvm.dbg.value(metadata i8* %1, metadata !16543, metadata !DIExpression()), !dbg !16545
  call void @llvm.dbg.value(metadata i32 %2, metadata !16544, metadata !DIExpression()), !dbg !16545
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16546
  tail call fastcc void @z_waitq_init.236(%struct._wait_q_t* noundef nonnull %4) #25, !dbg !16547
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16548
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #24, !dbg !16549
  ret void, !dbg !16550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.236(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !16551 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16556, metadata !DIExpression()), !dbg !16557
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16558
  tail call fastcc void @sys_dlist_init.237(%struct._dnode* noundef %2) #25, !dbg !16559
  ret void, !dbg !16560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.237(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16561 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16566, metadata !DIExpression()), !dbg !16567
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16568
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16569
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16570
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16571
  ret void, !dbg !16572
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16573 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !16584, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16581, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i32 %1, metadata !16582, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i32 %2, metadata !16583, metadata !DIExpression()), !dbg !16594
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #24, !dbg !16595
  call void @llvm.dbg.value(metadata i64 %6, metadata !16586, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i8* null, metadata !16587, metadata !DIExpression()), !dbg !16594
  %7 = icmp eq i64 %5, -1, !dbg !16596
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !16596
  call void @llvm.dbg.value(metadata i64 %8, metadata !16586, metadata !DIExpression()), !dbg !16594
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16597
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16598, metadata !DIExpression()) #23, !dbg !16605
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16607, !srcloc !16613
  call void @llvm.dbg.value(metadata i32 undef, metadata !16610, metadata !DIExpression()) #23, !dbg !16614
  call void @llvm.dbg.value(metadata i32 undef, metadata !16611, metadata !DIExpression()) #23, !dbg !16614
  call void @llvm.dbg.value(metadata i32 undef, metadata !16604, metadata !DIExpression()) #23, !dbg !16605
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i8 0, metadata !16593, metadata !DIExpression()), !dbg !16594
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !16587, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i8 0, metadata !16593, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()), !dbg !16594
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #24, !dbg !16615
  call void @llvm.dbg.value(metadata i8* %12, metadata !16587, metadata !DIExpression()), !dbg !16594
  %13 = tail call i64 @sys_clock_tick_get() #24, !dbg !16617
  call void @llvm.dbg.value(metadata i64 %13, metadata !16585, metadata !DIExpression()), !dbg !16594
  %14 = icmp eq i8* %12, null, !dbg !16618
  br i1 %14, label %15, label %31, !dbg !16620

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()), !dbg !16594
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !16620

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !16593, metadata !DIExpression()), !dbg !16594
  %20 = sub nsw i64 %8, %18, !dbg !16621
  %21 = icmp slt i64 %20, 1, !dbg !16622
  br i1 %21, label %31, label %22, !dbg !16623

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16594
  call void @llvm.dbg.value(metadata i8 undef, metadata !16593, metadata !DIExpression()), !dbg !16594
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16624
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !16624
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #24, !dbg !16624
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16598, metadata !DIExpression()) #23, !dbg !16625
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16627, !srcloc !16613
  call void @llvm.dbg.value(metadata i32 undef, metadata !16610, metadata !DIExpression()) #23, !dbg !16629
  call void @llvm.dbg.value(metadata i32 undef, metadata !16611, metadata !DIExpression()) #23, !dbg !16629
  call void @llvm.dbg.value(metadata i32 undef, metadata !16604, metadata !DIExpression()) #23, !dbg !16625
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i8* null, metadata !16587, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()), !dbg !16594
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #24, !dbg !16615
  call void @llvm.dbg.value(metadata i8* %28, metadata !16587, metadata !DIExpression()), !dbg !16594
  %29 = tail call i64 @sys_clock_tick_get() #24, !dbg !16617
  call void @llvm.dbg.value(metadata i64 %29, metadata !16585, metadata !DIExpression()), !dbg !16594
  %30 = icmp eq i8* %28, null, !dbg !16618
  br i1 %30, label %17, label %31, !dbg !16620, !llvm.loop !16630

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !16615
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !16594
  call void @llvm.dbg.value(metadata i8* %33, metadata !16587, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i32 %34, metadata !16633, metadata !DIExpression()) #23, !dbg !16639
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16638, metadata !DIExpression()) #23, !dbg !16639
  call void @llvm.dbg.value(metadata i32 %34, metadata !16641, metadata !DIExpression()) #23, !dbg !16644
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #23, !dbg !16646, !srcloc !16647
  ret i8* %33, !dbg !16648
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16649 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16655, metadata !DIExpression()), !dbg !16657
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16653, metadata !DIExpression()), !dbg !16657
  call void @llvm.dbg.value(metadata i32 %1, metadata !16654, metadata !DIExpression()), !dbg !16657
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #25, !dbg !16658
  call void @llvm.dbg.value(metadata i8* %4, metadata !16656, metadata !DIExpression()), !dbg !16657
  ret i8* %4, !dbg !16659
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !16660 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16664, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i8* %1, metadata !16665, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16598, metadata !DIExpression()) #23, !dbg !16668
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16670, !srcloc !16613
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16670
  call void @llvm.dbg.value(metadata i32 %4, metadata !16610, metadata !DIExpression()) #23, !dbg !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16611, metadata !DIExpression()) #23, !dbg !16672
  call void @llvm.dbg.value(metadata i32 %4, metadata !16604, metadata !DIExpression()) #23, !dbg !16668
  call void @llvm.dbg.value(metadata i32 %4, metadata !16666, metadata !DIExpression()), !dbg !16667
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16673
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #24, !dbg !16674
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16675
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #24, !dbg !16677
  %8 = icmp eq i32 %7, 0, !dbg !16678
  br i1 %8, label %12, label %9, !dbg !16679

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16680
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !16681
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #24, !dbg !16681
  br label %13, !dbg !16683

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !16633, metadata !DIExpression()) #23, !dbg !16684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16638, metadata !DIExpression()) #23, !dbg !16684
  call void @llvm.dbg.value(metadata i32 %4, metadata !16641, metadata !DIExpression()) #23, !dbg !16687
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !16689, !srcloc !16647
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !16690
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1611, !2, !2847, !27, !448, !641, !852, !875, !2849, !2851, !2884, !2918, !885, !2920, !2923, !2934, !2981, !2983, !3011, !3039, !3082, !3153, !3198, !3226, !1312, !1322, !1334, !1428, !1620, !1899, !3231, !2159, !3233, !3236, !3313, !3327, !3339, !3464, !2189, !3467, !2195, !2549, !3485, !3487, !2570, !2673, !3586, !2783, !3589, !3591, !2822}
!llvm.ident = !{!3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593, !3593}
!llvm.module.flags = !{!3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_bridge_sub", scope: !27, file: !212, line: 16, type: !220, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !209, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/uart_bridge/src/bridge.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !133, !111, !202, !206, !178, !158, !207}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !104)
!104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !105, line: 336, size: 608, elements: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !{!107, !141, !145, !149, !163, !168, !174, !180, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !104, file: !105, line: 365, baseType: !108, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DISubroutineType(types: !110)
!110 = !{!111, !112, !140}
!111 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !114)
!114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 378, size: 192, elements: !116)
!115 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!116 = !{!117, !121, !122, !123, !132, !134}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !114, file: !115, line: 380, baseType: !118, size: 32)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !114, file: !115, line: 382, baseType: !13, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !114, file: !115, line: 384, baseType: !13, size: 32, offset: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !114, file: !115, line: 386, baseType: !124, size: 32, offset: 96)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !115, line: 351, size: 16, elements: !126)
!126 = !{!127, !130}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !125, file: !115, line: 359, baseType: !128, size: 8)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !129)
!129 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !125, file: !115, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!131 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !114, file: !115, line: 388, baseType: !133, size: 32, offset: 128)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !114, file: !115, line: 396, baseType: !135, size: 32, offset: 160)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !115, line: 43, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !139)
!139 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !104, file: !105, line: 366, baseType: !142, size: 32, offset: 32)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{null, !112, !129}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !104, file: !105, line: 374, baseType: !146, size: 32, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{!111, !112}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !104, file: !105, line: 377, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DISubroutineType(types: !152)
!152 = !{!111, !112, !153}
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !105, line: 122, size: 64, elements: !156)
!156 = !{!157, !159, !160, !161, !162}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !155, file: !105, line: 123, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !155, file: !105, line: 124, baseType: !128, size: 8, offset: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !155, file: !105, line: 125, baseType: !128, size: 8, offset: 40)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !155, file: !105, line: 126, baseType: !128, size: 8, offset: 48)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !155, file: !105, line: 127, baseType: !128, size: 8, offset: 56)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !104, file: !105, line: 379, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!165 = !DISubroutineType(types: !166)
!166 = !{!111, !112, !167}
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !104, file: !105, line: 384, baseType: !169, size: 32, offset: 160)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DISubroutineType(types: !171)
!171 = !{!111, !112, !172, !111}
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !104, file: !105, line: 393, baseType: !175, size: 32, offset: 192)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!176 = !DISubroutineType(types: !177)
!177 = !{!111, !112, !178, !179}
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !104, file: !105, line: 402, baseType: !181, size: 32, offset: 224)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !112}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !104, file: !105, line: 405, baseType: !181, size: 32, offset: 256)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !104, file: !105, line: 408, baseType: !146, size: 32, offset: 288)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !104, file: !105, line: 411, baseType: !181, size: 32, offset: 320)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !104, file: !105, line: 414, baseType: !181, size: 32, offset: 352)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !104, file: !105, line: 417, baseType: !146, size: 32, offset: 384)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !104, file: !105, line: 420, baseType: !146, size: 32, offset: 416)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !104, file: !105, line: 423, baseType: !181, size: 32, offset: 448)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !104, file: !105, line: 426, baseType: !181, size: 32, offset: 480)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !104, file: !105, line: 429, baseType: !146, size: 32, offset: 512)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !104, file: !105, line: 432, baseType: !146, size: 32, offset: 544)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !104, file: !105, line: 435, baseType: !195, size: 32, offset: 576)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!196 = !DISubroutineType(types: !197)
!197 = !{null, !112, !198, !133}
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !105, line: 142, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{null, !112, !133}
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !203, line: 46, baseType: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !205)
!205 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !208)
!208 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!209 = !{!25, !210, !384, !386, !388, !419, !423, !428, !433, !435, !441, !444}
!210 = !DIGlobalVariableExpression(var: !211, expr: !DIExpression())
!211 = distinct !DIGlobalVariable(name: "bridge_sub", scope: !27, file: !212, line: 16, type: !213, isLocal: false, isDefinition: true, align: 32)
!212 = !DIFile(filename: "zephyr/samples/subsys/zbus/uart_bridge/src/bridge.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !214, line: 85, size: 96, elements: !215)
!214 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !{!216, !217, !259}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !213, file: !214, line: 91, baseType: !131, size: 8)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !213, file: !214, line: 93, baseType: !218, size: 32, offset: 32)
!218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !219)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 32)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !221, line: 4204, size: 320, elements: !222)
!221 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!222 = !{!223, !244, !248, !251, !252, !254, !255, !256, !257, !258}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !220, file: !221, line: 4206, baseType: !224, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !226)
!225 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !227)
!227 = !{!228}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !226, file: !225, line: 232, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !231)
!230 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !232)
!232 = !{!233, !239}
!233 = !DIDerivedType(tag: DW_TAG_member, scope: !231, file: !230, line: 38, baseType: !234, size: 32)
!234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !231, file: !230, line: 38, size: 32, elements: !235)
!235 = !{!236, !238}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !234, file: !230, line: 39, baseType: !237, size: 32)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !234, file: !230, line: 40, baseType: !237, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, scope: !231, file: !230, line: 42, baseType: !240, size: 32, offset: 32)
!240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !231, file: !230, line: 42, size: 32, elements: !241)
!241 = !{!242, !243}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !240, file: !230, line: 43, baseType: !237, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !240, file: !230, line: 44, baseType: !237, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !220, file: !221, line: 4208, baseType: !245, offset: 64)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!246 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!247 = !{}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !220, file: !221, line: 4210, baseType: !249, size: 32, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !250, line: 214, baseType: !32)
!250 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!251 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !220, file: !221, line: 4212, baseType: !158, size: 32, offset: 96)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !220, file: !221, line: 4214, baseType: !253, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !220, file: !221, line: 4216, baseType: !253, size: 32, offset: 160)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !220, file: !221, line: 4218, baseType: !253, size: 32, offset: 192)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !220, file: !221, line: 4220, baseType: !253, size: 32, offset: 224)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !220, file: !221, line: 4222, baseType: !158, size: 32, offset: 256)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !220, file: !221, line: 4227, baseType: !128, size: 8, offset: 288)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !213, file: !214, line: 96, baseType: !260, size: 32, offset: 64)
!260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DISubroutineType(types: !263)
!263 = !{null, !264}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !214, line: 29, size: 224, elements: !267)
!267 = !{!268, !270, !274, !276, !277, !282, !379}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !266, file: !214, line: 32, baseType: !269, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !266, file: !214, line: 35, baseType: !271, size: 16, offset: 32)
!271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !273)
!273 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !266, file: !214, line: 40, baseType: !275, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !266, file: !214, line: 45, baseType: !275, size: 32, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !266, file: !214, line: 51, baseType: !278, size: 32, offset: 128)
!278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!131, !13, !249}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !266, file: !214, line: 56, baseType: !283, size: 32, offset: 160)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !221, line: 2720, size: 160, elements: !285)
!285 = !{!286, !287, !377, !378}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !284, file: !221, line: 2722, baseType: !224, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !284, file: !221, line: 2724, baseType: !288, size: 32, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !291)
!290 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!291 = !{!292, !337, !350, !351, !352, !356, !357, !372}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !289, file: !290, line: 247, baseType: !293, size: 384)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !294)
!294 = !{!295, !309, !311, !312, !313, !324, !325, !326}
!295 = !DIDerivedType(tag: DW_TAG_member, scope: !293, file: !290, line: 60, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !293, file: !290, line: 60, size: 64, elements: !297)
!297 = !{!298, !300}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !296, file: !290, line: 61, baseType: !299, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !231)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !296, file: !290, line: 62, baseType: !301, size: 64)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !303)
!302 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!303 = !{!304}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !301, file: !302, line: 50, baseType: !305, size: 64)
!305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !306, size: 64, elements: !307)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!307 = !{!308}
!308 = !DISubrange(count: 2)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !293, file: !290, line: 68, baseType: !310, size: 32, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !293, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !293, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!313 = !DIDerivedType(tag: DW_TAG_member, scope: !293, file: !290, line: 90, baseType: !314, size: 16, offset: 112)
!314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !293, file: !290, line: 90, size: 16, elements: !315)
!315 = !{!316, !323}
!316 = !DIDerivedType(tag: DW_TAG_member, scope: !314, file: !290, line: 91, baseType: !317, size: 16)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !314, file: !290, line: 91, size: 16, elements: !318)
!318 = !{!319, !322}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !317, file: !290, line: 96, baseType: !320, size: 8)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !321)
!321 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !317, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !314, file: !290, line: 100, baseType: !272, size: 16)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !293, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !293, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !293, file: !290, line: 131, baseType: !327, size: 192, offset: 192)
!327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !328)
!328 = !{!329, !330, !336}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !327, file: !225, line: 245, baseType: !299, size: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !327, file: !225, line: 246, baseType: !331, size: 32, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 32)
!333 = !DISubroutineType(types: !334)
!334 = !{null, !335}
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !327, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !289, file: !290, line: 250, baseType: !338, size: 288, offset: 384)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !340)
!339 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!340 = !{!341, !342, !343, !344, !345, !346, !347, !348, !349}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !338, file: !339, line: 26, baseType: !158, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !338, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !338, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !338, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !338, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !338, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !338, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !338, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !338, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !289, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !289, file: !290, line: 256, baseType: !224, size: 64, offset: 704)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !289, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !289, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !289, file: !290, line: 325, baseType: !358, size: 32, offset: 1056)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 32)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !360)
!360 = !{!361, !370, !371}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !359, file: !221, line: 5074, baseType: !362, size: 96)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !{!365, !368, !369}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !362, file: !363, line: 57, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !363, line: 57, flags: DIFlagFwdDecl)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !362, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !362, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !359, file: !221, line: 5075, baseType: !224, size: 64, offset: 96)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !359, file: !221, line: 5076, baseType: !245, offset: 160)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !289, file: !290, line: 343, baseType: !373, size: 64, offset: 1088)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !374)
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !373, file: !339, line: 63, baseType: !158, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !373, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !284, file: !221, line: 2727, baseType: !158, size: 32, offset: 96)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !284, file: !221, line: 2730, baseType: !111, size: 32, offset: 128)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !266, file: !214, line: 67, baseType: !380, size: 32, offset: 192)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !382)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !213)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(name: "_zbus_mutex_finish_chan", scope: !27, file: !212, line: 18, type: !284, isLocal: true, isDefinition: true, align: 32)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "finish_chan", scope: !27, file: !212, line: 18, type: !265, isLocal: false, isDefinition: true, align: 32)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "_k_thread_data_bridge_thread_tid", scope: !27, file: !212, line: 74, type: !390, isLocal: false, isDefinition: true, align: 32)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !221, line: 620, size: 384, elements: !391)
!391 = !{!392, !393, !401, !402, !407, !408, !409, !410, !411, !412, !414, !418}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !390, file: !221, line: 621, baseType: !288, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !390, file: !221, line: 622, baseType: !394, size: 32, offset: 32)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !396, line: 44, baseType: !397)
!396 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !398, line: 47, size: 8, elements: !399)
!398 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!399 = !{!400}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !397, file: !398, line: 48, baseType: !120, size: 8)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !390, file: !221, line: 623, baseType: !32, size: 32, offset: 64)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !390, file: !221, line: 624, baseType: !403, size: 32, offset: 96)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !396, line: 46, baseType: !404)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = !DISubroutineType(types: !406)
!406 = !{null, !133, !133, !133}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !390, file: !221, line: 625, baseType: !133, size: 32, offset: 128)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !390, file: !221, line: 626, baseType: !133, size: 32, offset: 160)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !390, file: !221, line: 627, baseType: !133, size: 32, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !390, file: !221, line: 628, baseType: !111, size: 32, offset: 224)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !390, file: !221, line: 629, baseType: !158, size: 32, offset: 256)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !390, file: !221, line: 630, baseType: !413, size: 32, offset: 288)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !111)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !390, file: !221, line: 631, baseType: !415, size: 32, offset: 320)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!416 = !DISubroutineType(types: !417)
!417 = !{null}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !390, file: !221, line: 632, baseType: !118, size: 32, offset: 352)
!419 = !DIGlobalVariableExpression(var: !420, expr: !DIExpression())
!420 = distinct !DIGlobalVariable(name: "bridge_thread_tid", scope: !27, file: !212, line: 74, type: !421, isLocal: false, isDefinition: true)
!421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !290, line: 347, baseType: !288)
!423 = !DIGlobalVariableExpression(var: !424, expr: !DIExpression())
!424 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_bridge_sub", scope: !27, file: !212, line: 16, type: !425, isLocal: true, isDefinition: true, align: 32)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !426)
!426 = !{!427}
!427 = !DISubrange(count: 16)
!428 = !DIGlobalVariableExpression(var: !429, expr: !DIExpression())
!429 = distinct !DIGlobalVariable(name: "_k_thread_stack_bridge_thread_tid", scope: !27, file: !212, line: 74, type: !430, isLocal: false, isDefinition: true, align: 64)
!430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 16384, elements: !431)
!431 = !{!432}
!432 = !DISubrange(count: 2048)
!433 = !DIGlobalVariableExpression(var: !434, expr: !DIExpression())
!434 = distinct !DIGlobalVariable(name: "_k_thread_obj_bridge_thread_tid", scope: !27, file: !212, line: 74, type: !289, isLocal: false, isDefinition: true)
!435 = !DIGlobalVariableExpression(var: !436, expr: !DIExpression())
!436 = distinct !DIGlobalVariable(name: "_zbus_message_finish_chan", scope: !27, file: !212, line: 18, type: !437, isLocal: true, isDefinition: true)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "action_msg", file: !438, line: 26, size: 8, elements: !439)
!438 = !DIFile(filename: "zephyr/samples/subsys/zbus/uart_bridge/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!439 = !{!440}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !437, file: !438, line: 27, baseType: !131, size: 8)
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "_zbus_observers_finish_chan", scope: !27, file: !212, line: 18, type: !443, isLocal: true, isDefinition: true)
!443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 64, elements: !307)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "bridge_uart", scope: !27, file: !212, line: 27, type: !112, isLocal: true, isDefinition: true)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "_zbus_mutex_version_chan", scope: !448, file: !454, line: 13, type: !465, isLocal: true, isDefinition: true, align: 32)
!448 = distinct !DICompileUnit(language: DW_LANG_C99, file: !449, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !450, globals: !451, splitDebugInlining: false, nameTableKind: None)
!449 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/uart_bridge/src/core.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!450 = !{!133, !111, !202, !158, !207}
!451 = !{!446, !452, !595, !616, !620, !625, !627, !634}
!452 = !DIGlobalVariableExpression(var: !453, expr: !DIExpression())
!453 = distinct !DIGlobalVariable(name: "version_chan", scope: !448, file: !454, line: 13, type: !455, isLocal: false, isDefinition: true, align: 32)
!454 = !DIFile(filename: "zephyr/samples/subsys/zbus/uart_bridge/src/core.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !214, line: 29, size: 224, elements: !457)
!457 = !{!458, !459, !460, !461, !462, !463, !566}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !456, file: !214, line: 32, baseType: !269, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !456, file: !214, line: 35, baseType: !271, size: 16, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !456, file: !214, line: 40, baseType: !275, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !456, file: !214, line: 45, baseType: !275, size: 32, offset: 96)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !456, file: !214, line: 51, baseType: !278, size: 32, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !456, file: !214, line: 56, baseType: !464, size: 32, offset: 160)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 32)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !221, line: 2720, size: 160, elements: !466)
!466 = !{!467, !486, !564, !565}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !465, file: !221, line: 2722, baseType: !468, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !469)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !470)
!470 = !{!471}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !469, file: !225, line: 232, baseType: !472, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !473)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !474)
!474 = !{!475, !481}
!475 = !DIDerivedType(tag: DW_TAG_member, scope: !473, file: !230, line: 38, baseType: !476, size: 32)
!476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !473, file: !230, line: 38, size: 32, elements: !477)
!477 = !{!478, !480}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !476, file: !230, line: 39, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !476, file: !230, line: 40, baseType: !479, size: 32)
!481 = !DIDerivedType(tag: DW_TAG_member, scope: !473, file: !230, line: 42, baseType: !482, size: 32, offset: 32)
!482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !473, file: !230, line: 42, size: 32, elements: !483)
!483 = !{!484, !485}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !482, file: !230, line: 43, baseType: !479, size: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !482, file: !230, line: 44, baseType: !479, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !465, file: !221, line: 2724, baseType: !487, size: 32, offset: 64)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !489)
!489 = !{!490, !530, !542, !543, !544, !545, !546, !559}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !488, file: !290, line: 247, baseType: !491, size: 384)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !492)
!492 = !{!493, !504, !506, !507, !508, !517, !518, !519}
!493 = !DIDerivedType(tag: DW_TAG_member, scope: !491, file: !290, line: 60, baseType: !494, size: 64)
!494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !491, file: !290, line: 60, size: 64, elements: !495)
!495 = !{!496, !498}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !494, file: !290, line: 61, baseType: !497, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !473)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !494, file: !290, line: 62, baseType: !499, size: 64)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !500)
!500 = !{!501}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !499, file: !302, line: 50, baseType: !502, size: 64)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 64, elements: !307)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !491, file: !290, line: 68, baseType: !505, size: 32, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !491, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !491, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!508 = !DIDerivedType(tag: DW_TAG_member, scope: !491, file: !290, line: 90, baseType: !509, size: 16, offset: 112)
!509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !491, file: !290, line: 90, size: 16, elements: !510)
!510 = !{!511, !516}
!511 = !DIDerivedType(tag: DW_TAG_member, scope: !509, file: !290, line: 91, baseType: !512, size: 16)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !509, file: !290, line: 91, size: 16, elements: !513)
!513 = !{!514, !515}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !512, file: !290, line: 96, baseType: !320, size: 8)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !512, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !509, file: !290, line: 100, baseType: !272, size: 16)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !491, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !491, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !491, file: !290, line: 131, baseType: !520, size: 192, offset: 192)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !521)
!521 = !{!522, !523, !529}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !520, file: !225, line: 245, baseType: !497, size: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !520, file: !225, line: 246, baseType: !524, size: 32, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !525)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 32)
!526 = !DISubroutineType(types: !527)
!527 = !{null, !528}
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !520, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !488, file: !290, line: 250, baseType: !531, size: 288, offset: 384)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !532)
!532 = !{!533, !534, !535, !536, !537, !538, !539, !540, !541}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !531, file: !339, line: 26, baseType: !158, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !531, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !531, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !531, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !531, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !531, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !531, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !531, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !531, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !488, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !488, file: !290, line: 256, baseType: !468, size: 64, offset: 704)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !488, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !488, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !488, file: !290, line: 325, baseType: !547, size: 32, offset: 1056)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 32)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !549)
!549 = !{!550, !556, !557}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !548, file: !221, line: 5074, baseType: !551, size: 96)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !552)
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !551, file: !363, line: 57, baseType: !366, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !551, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !551, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !548, file: !221, line: 5075, baseType: !468, size: 64, offset: 96)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !548, file: !221, line: 5076, baseType: !558, offset: 160)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !488, file: !290, line: 343, baseType: !560, size: 64, offset: 1088)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !561)
!561 = !{!562, !563}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !560, file: !339, line: 63, baseType: !158, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !560, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !465, file: !221, line: 2727, baseType: !158, size: 32, offset: 96)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !465, file: !221, line: 2730, baseType: !111, size: 32, offset: 128)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !456, file: !214, line: 67, baseType: !567, size: 32, offset: 192)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !571)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !214, line: 85, size: 96, elements: !572)
!572 = !{!573, !574, !589}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !571, file: !214, line: 91, baseType: !131, size: 8)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !571, file: !214, line: 93, baseType: !575, size: 32, offset: 32)
!575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !576)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 32)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !221, line: 4204, size: 320, elements: !578)
!578 = !{!579, !580, !581, !582, !583, !584, !585, !586, !587, !588}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !577, file: !221, line: 4206, baseType: !468, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !577, file: !221, line: 4208, baseType: !558, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !577, file: !221, line: 4210, baseType: !249, size: 32, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !577, file: !221, line: 4212, baseType: !158, size: 32, offset: 96)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !577, file: !221, line: 4214, baseType: !253, size: 32, offset: 128)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !577, file: !221, line: 4216, baseType: !253, size: 32, offset: 160)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !577, file: !221, line: 4218, baseType: !253, size: 32, offset: 192)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !577, file: !221, line: 4220, baseType: !253, size: 32, offset: 224)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !577, file: !221, line: 4222, baseType: !158, size: 32, offset: 256)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !577, file: !221, line: 4227, baseType: !128, size: 8, offset: 288)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !571, file: !214, line: 96, baseType: !590, size: 32, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !591)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 32)
!592 = !DISubroutineType(types: !593)
!593 = !{null, !594}
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 32)
!595 = !DIGlobalVariableExpression(var: !596, expr: !DIExpression())
!596 = distinct !DIGlobalVariable(name: "_k_thread_data_core_thread_id", scope: !448, file: !454, line: 37, type: !597, isLocal: false, isDefinition: true, align: 32)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !221, line: 620, size: 384, elements: !598)
!598 = !{!599, !600, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !597, file: !221, line: 621, baseType: !487, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !597, file: !221, line: 622, baseType: !601, size: 32, offset: 32)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !396, line: 44, baseType: !603)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !398, line: 47, size: 8, elements: !604)
!604 = !{!605}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !603, file: !398, line: 48, baseType: !120, size: 8)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !597, file: !221, line: 623, baseType: !32, size: 32, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !597, file: !221, line: 624, baseType: !403, size: 32, offset: 96)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !597, file: !221, line: 625, baseType: !133, size: 32, offset: 128)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !597, file: !221, line: 626, baseType: !133, size: 32, offset: 160)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !597, file: !221, line: 627, baseType: !133, size: 32, offset: 192)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !597, file: !221, line: 628, baseType: !111, size: 32, offset: 224)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !597, file: !221, line: 629, baseType: !158, size: 32, offset: 256)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !597, file: !221, line: 630, baseType: !413, size: 32, offset: 288)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !597, file: !221, line: 631, baseType: !415, size: 32, offset: 320)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !597, file: !221, line: 632, baseType: !118, size: 32, offset: 352)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(name: "core_thread_id", scope: !448, file: !454, line: 37, type: !618, isLocal: false, isDefinition: true)
!618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !619)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !290, line: 347, baseType: !487)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "_k_thread_stack_core_thread_id", scope: !448, file: !454, line: 37, type: !622, isLocal: false, isDefinition: true, align: 64)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 8192, elements: !623)
!623 = !{!624}
!624 = !DISubrange(count: 1024)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "_k_thread_obj_core_thread_id", scope: !448, file: !454, line: 37, type: !488, isLocal: false, isDefinition: true)
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(name: "_zbus_message_version_chan", scope: !448, file: !454, line: 13, type: !629, isLocal: true, isDefinition: true)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "version_msg", file: !438, line: 10, size: 32, elements: !630)
!630 = !{!631, !632, !633}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !629, file: !438, line: 11, baseType: !128, size: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !629, file: !438, line: 12, baseType: !128, size: 8, offset: 8)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "build", scope: !629, file: !438, line: 13, baseType: !272, size: 16, offset: 16)
!634 = !DIGlobalVariableExpression(var: !635, expr: !DIExpression())
!635 = distinct !DIGlobalVariable(name: "_zbus_observers_version_chan", scope: !448, file: !454, line: 13, type: !636, isLocal: true, isDefinition: true)
!636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 32, elements: !637)
!637 = !{!638}
!638 = !DISubrange(count: 1)
!639 = !DIGlobalVariableExpression(var: !640, expr: !DIExpression())
!640 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_peripheral_sub", scope: !641, file: !646, line: 11, type: !653, isLocal: false, isDefinition: true, align: 32)
!641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !642, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !450, globals: !643, splitDebugInlining: false, nameTableKind: None)
!642 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/uart_bridge/src/peripheral.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!643 = !{!639, !644, !787, !789, !791, !793, !795, !816, !820, !822, !824, !826, !829, !831, !837, !840, !845}
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "peripheral_sub", scope: !641, file: !646, line: 11, type: !647, isLocal: false, isDefinition: true, align: 32)
!646 = !DIFile(filename: "zephyr/samples/subsys/zbus/uart_bridge/src/peripheral.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !214, line: 85, size: 96, elements: !648)
!648 = !{!649, !650, !684}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !647, file: !214, line: 91, baseType: !131, size: 8)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !647, file: !214, line: 93, baseType: !651, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !652)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 32)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !221, line: 4204, size: 320, elements: !654)
!654 = !{!655, !674, !676, !677, !678, !679, !680, !681, !682, !683}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !653, file: !221, line: 4206, baseType: !656, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !657)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !658)
!658 = !{!659}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !657, file: !225, line: 232, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !662)
!662 = !{!663, !669}
!663 = !DIDerivedType(tag: DW_TAG_member, scope: !661, file: !230, line: 38, baseType: !664, size: 32)
!664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !661, file: !230, line: 38, size: 32, elements: !665)
!665 = !{!666, !668}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !664, file: !230, line: 39, baseType: !667, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !664, file: !230, line: 40, baseType: !667, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, scope: !661, file: !230, line: 42, baseType: !670, size: 32, offset: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !661, file: !230, line: 42, size: 32, elements: !671)
!671 = !{!672, !673}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !670, file: !230, line: 43, baseType: !667, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !670, file: !230, line: 44, baseType: !667, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !653, file: !221, line: 4208, baseType: !675, offset: 64)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !653, file: !221, line: 4210, baseType: !249, size: 32, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !653, file: !221, line: 4212, baseType: !158, size: 32, offset: 96)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !653, file: !221, line: 4214, baseType: !253, size: 32, offset: 128)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !653, file: !221, line: 4216, baseType: !253, size: 32, offset: 160)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !653, file: !221, line: 4218, baseType: !253, size: 32, offset: 192)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !653, file: !221, line: 4220, baseType: !253, size: 32, offset: 224)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !653, file: !221, line: 4222, baseType: !158, size: 32, offset: 256)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !653, file: !221, line: 4227, baseType: !128, size: 8, offset: 288)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !647, file: !214, line: 96, baseType: !685, size: 32, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !686)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 32)
!687 = !DISubroutineType(types: !688)
!688 = !{null, !689}
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !214, line: 29, size: 224, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !698, !782}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !691, file: !214, line: 32, baseType: !269, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !691, file: !214, line: 35, baseType: !271, size: 16, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !691, file: !214, line: 40, baseType: !275, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !691, file: !214, line: 45, baseType: !275, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !691, file: !214, line: 51, baseType: !278, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !691, file: !214, line: 56, baseType: !699, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !221, line: 2720, size: 160, elements: !701)
!701 = !{!702, !703, !780, !781}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !700, file: !221, line: 2722, baseType: !656, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !700, file: !221, line: 2724, baseType: !704, size: 32, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !706)
!706 = !{!707, !747, !759, !760, !761, !762, !763, !775}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !705, file: !290, line: 247, baseType: !708, size: 384)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !709)
!709 = !{!710, !721, !723, !724, !725, !734, !735, !736}
!710 = !DIDerivedType(tag: DW_TAG_member, scope: !708, file: !290, line: 60, baseType: !711, size: 64)
!711 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !708, file: !290, line: 60, size: 64, elements: !712)
!712 = !{!713, !715}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !711, file: !290, line: 61, baseType: !714, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !661)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !711, file: !290, line: 62, baseType: !716, size: 64)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !717)
!717 = !{!718}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !716, file: !302, line: 50, baseType: !719, size: 64)
!719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !720, size: 64, elements: !307)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !708, file: !290, line: 68, baseType: !722, size: 32, offset: 64)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !708, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !708, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!725 = !DIDerivedType(tag: DW_TAG_member, scope: !708, file: !290, line: 90, baseType: !726, size: 16, offset: 112)
!726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !708, file: !290, line: 90, size: 16, elements: !727)
!727 = !{!728, !733}
!728 = !DIDerivedType(tag: DW_TAG_member, scope: !726, file: !290, line: 91, baseType: !729, size: 16)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !726, file: !290, line: 91, size: 16, elements: !730)
!730 = !{!731, !732}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !729, file: !290, line: 96, baseType: !320, size: 8)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !729, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !726, file: !290, line: 100, baseType: !272, size: 16)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !708, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !708, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !708, file: !290, line: 131, baseType: !737, size: 192, offset: 192)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !738)
!738 = !{!739, !740, !746}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !737, file: !225, line: 245, baseType: !714, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !737, file: !225, line: 246, baseType: !741, size: 32, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !742)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 32)
!743 = !DISubroutineType(types: !744)
!744 = !{null, !745}
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !737, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !705, file: !290, line: 250, baseType: !748, size: 288, offset: 384)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !749)
!749 = !{!750, !751, !752, !753, !754, !755, !756, !757, !758}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !748, file: !339, line: 26, baseType: !158, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !748, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !748, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !748, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !748, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !748, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !748, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !748, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !748, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !705, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !705, file: !290, line: 256, baseType: !656, size: 64, offset: 704)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !705, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !705, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !705, file: !290, line: 325, baseType: !764, size: 32, offset: 1056)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 32)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !766)
!766 = !{!767, !773, !774}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !765, file: !221, line: 5074, baseType: !768, size: 96)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !769)
!769 = !{!770, !771, !772}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !768, file: !363, line: 57, baseType: !366, size: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !768, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !768, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !765, file: !221, line: 5075, baseType: !656, size: 64, offset: 96)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !765, file: !221, line: 5076, baseType: !675, offset: 160)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !705, file: !290, line: 343, baseType: !776, size: 64, offset: 1088)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !777)
!777 = !{!778, !779}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !776, file: !339, line: 63, baseType: !158, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !776, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !700, file: !221, line: 2727, baseType: !158, size: 32, offset: 96)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !700, file: !221, line: 2730, baseType: !111, size: 32, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !691, file: !214, line: 67, baseType: !783, size: 32, offset: 192)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !785)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !647)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "_zbus_mutex_sensor_data_chan", scope: !641, file: !646, line: 16, type: !700, isLocal: true, isDefinition: true, align: 32)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "sensor_data_chan", scope: !641, file: !646, line: 16, type: !690, isLocal: false, isDefinition: true, align: 32)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "_zbus_mutex_start_measurement_chan", scope: !641, file: !646, line: 26, type: !700, isLocal: true, isDefinition: true, align: 32)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "start_measurement_chan", scope: !641, file: !646, line: 26, type: !690, isLocal: false, isDefinition: true, align: 32)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "_k_thread_data_peripheral_thread_id", scope: !641, file: !646, line: 50, type: !797, isLocal: false, isDefinition: true, align: 32)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !221, line: 620, size: 384, elements: !798)
!798 = !{!799, !800, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !797, file: !221, line: 621, baseType: !704, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !797, file: !221, line: 622, baseType: !801, size: 32, offset: 32)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !396, line: 44, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !398, line: 47, size: 8, elements: !804)
!804 = !{!805}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !803, file: !398, line: 48, baseType: !120, size: 8)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !797, file: !221, line: 623, baseType: !32, size: 32, offset: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !797, file: !221, line: 624, baseType: !403, size: 32, offset: 96)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !797, file: !221, line: 625, baseType: !133, size: 32, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !797, file: !221, line: 626, baseType: !133, size: 32, offset: 160)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !797, file: !221, line: 627, baseType: !133, size: 32, offset: 192)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !797, file: !221, line: 628, baseType: !111, size: 32, offset: 224)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !797, file: !221, line: 629, baseType: !158, size: 32, offset: 256)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !797, file: !221, line: 630, baseType: !413, size: 32, offset: 288)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !797, file: !221, line: 631, baseType: !415, size: 32, offset: 320)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !797, file: !221, line: 632, baseType: !118, size: 32, offset: 352)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "peripheral_thread_id", scope: !641, file: !646, line: 50, type: !818, isLocal: false, isDefinition: true)
!818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !819)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !290, line: 347, baseType: !704)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_peripheral_sub", scope: !641, file: !646, line: 11, type: !353, isLocal: true, isDefinition: true, align: 32)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "sensor_data_from_bridge", scope: !641, file: !646, line: 15, type: !131, isLocal: true, isDefinition: true)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "start_measurement_from_bridge", scope: !641, file: !646, line: 25, type: !131, isLocal: true, isDefinition: true)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "_k_thread_stack_peripheral_thread_id", scope: !641, file: !646, line: 50, type: !828, isLocal: false, isDefinition: true, align: 64)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !803, size: 8192, elements: !623)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "_k_thread_obj_peripheral_thread_id", scope: !641, file: !646, line: 50, type: !705, isLocal: false, isDefinition: true)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "_zbus_message_sensor_data_chan", scope: !641, file: !646, line: 16, type: !833, isLocal: true, isDefinition: true)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_data_msg", file: !438, line: 16, size: 64, elements: !834)
!834 = !{!835, !836}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !833, file: !438, line: 17, baseType: !111, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !833, file: !438, line: 18, baseType: !111, size: 32, offset: 32)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "_zbus_observers_sensor_data_chan", scope: !641, file: !646, line: 16, type: !839, isLocal: true, isDefinition: true)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 64, elements: !307)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "_zbus_message_start_measurement_chan", scope: !641, file: !646, line: 26, type: !842, isLocal: true, isDefinition: true)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "action_msg", file: !438, line: 26, size: 8, elements: !843)
!843 = !{!844}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !842, file: !438, line: 27, baseType: !131, size: 8)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "_zbus_observers_start_measurement_chan", scope: !641, file: !646, line: 26, type: !847, isLocal: true, isDefinition: true)
!847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 96, elements: !848)
!848 = !{!849}
!849 = !DISubrange(count: 3)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !852, file: !866, line: 18, type: !867, isLocal: false, isDefinition: true)
!852 = distinct !DICompileUnit(language: DW_LANG_C99, file: !853, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !854, globals: !865, splitDebugInlining: false, nameTableKind: None)
!853 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!854 = !{!22, !133, !24, !855, !857, !859, !249, !111, !860, !861, !863, !864, !253, !178, !272, !118}
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!865 = !{!850}
!866 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !869, line: 16, size: 64, elements: !870)
!869 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !868, file: !869, line: 17, baseType: !118, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !868, file: !869, line: 18, baseType: !128, size: 8, offset: 32)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "_char_out", scope: !875, file: !879, line: 54, type: !880, isLocal: false, isDefinition: true)
!875 = distinct !DICompileUnit(language: DW_LANG_C99, file: !876, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !877, globals: !878, splitDebugInlining: false, nameTableKind: None)
!876 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!877 = !{!133, !111}
!878 = !{!873}
!879 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = !DISubroutineType(types: !882)
!882 = !{!111, !111}
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !885, file: !1297, line: 258, type: !1298, isLocal: true, isDefinition: true, align: 32)
!885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !887, retainedTypes: !1170, globals: !1296, splitDebugInlining: false, nameTableKind: None)
!886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!887 = !{!888, !920, !930, !979, !985, !1106, !1141}
!888 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !889, line: 54, baseType: !32, size: 32, elements: !890)
!889 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!890 = !{!891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919}
!891 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!892 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!893 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!894 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!895 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!896 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!897 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!898 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!899 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!900 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!901 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!902 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!903 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!904 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!905 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!906 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!907 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!908 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!909 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!910 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!911 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!912 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!913 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!914 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!915 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!916 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!917 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!918 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!919 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!920 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !889, line: 224, baseType: !32, size: 32, elements: !921)
!921 = !{!922, !923, !924, !925, !926, !927, !928, !929}
!922 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!923 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!924 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!925 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!926 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!927 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!928 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!929 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !889, line: 275, baseType: !32, size: 32, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978}
!932 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!933 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!934 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!935 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!936 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!937 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!938 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!939 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!940 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!941 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!942 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!943 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!944 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!945 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!946 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!947 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!948 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!949 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!950 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!951 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!952 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!953 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!954 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!955 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!956 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!957 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!958 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!959 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!960 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!961 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!962 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!963 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!964 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!965 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!966 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!967 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!968 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!969 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!970 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!971 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!972 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!973 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!974 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!975 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!976 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!977 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!978 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!979 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !889, line: 327, baseType: !32, size: 32, elements: !980)
!980 = !{!981, !982, !983, !984}
!981 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!982 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!983 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!984 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!985 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !986, line: 76, baseType: !32, size: 32, elements: !987)
!986 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!987 = !{!988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105}
!988 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!989 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!990 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!991 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!992 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!993 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!994 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!995 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!996 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!997 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!998 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!999 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!1000 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!1001 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!1002 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!1003 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!1004 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!1005 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!1006 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!1007 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!1008 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!1009 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!1010 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!1011 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!1012 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!1013 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!1014 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!1015 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!1016 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!1017 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!1018 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!1019 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!1020 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!1021 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!1022 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!1023 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!1024 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!1025 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!1026 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!1027 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!1028 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!1029 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!1030 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!1031 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!1032 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!1033 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!1034 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!1035 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!1036 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!1037 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!1038 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!1039 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!1040 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!1041 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!1042 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!1043 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!1044 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!1045 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!1046 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!1047 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!1048 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!1049 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!1050 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!1051 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!1052 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!1053 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!1054 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!1055 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!1056 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!1057 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!1058 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!1059 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!1060 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!1061 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!1062 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!1063 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!1064 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!1065 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!1066 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!1067 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!1068 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!1069 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!1070 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!1071 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!1072 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!1073 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!1074 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!1075 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!1076 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!1077 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!1078 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!1079 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!1080 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!1081 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!1082 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!1083 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!1084 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!1085 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!1086 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!1087 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!1088 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!1089 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!1090 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!1091 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!1092 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!1093 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!1094 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!1095 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!1096 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!1097 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!1098 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!1099 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!1100 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!1101 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!1102 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!1103 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!1104 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!1105 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!1106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !889, line: 237, baseType: !32, size: 32, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140}
!1108 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!1109 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!1110 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!1111 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!1112 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!1113 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!1114 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!1115 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!1116 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!1117 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!1118 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!1119 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!1120 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!1121 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!1122 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!1123 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!1124 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!1125 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!1126 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!1127 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!1128 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!1129 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!1130 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!1131 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!1132 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!1133 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!1134 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!1135 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!1136 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!1137 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!1138 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!1139 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!1140 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!1141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !986, line: 44, baseType: !32, size: 32, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169}
!1143 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!1144 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!1145 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!1146 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!1147 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!1148 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!1149 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!1150 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!1151 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!1152 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!1153 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!1154 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!1155 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!1156 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!1157 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!1158 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!1159 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!1160 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!1161 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!1162 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!1163 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!1164 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!1165 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!1166 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!1167 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!1168 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!1169 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!1170 = !{!1171, !1243, !1284, !1295, !158}
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !1173, line: 4575, baseType: !1174)
!1173 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 4532, size: 390144, elements: !1175)
!1175 = !{!1176, !1178, !1179, !1180, !1181, !1185, !1195, !1199, !1209, !1213}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !1174, file: !1173, line: 4533, baseType: !1177, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !158)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !1174, file: !1173, line: 4534, baseType: !1177, size: 32, offset: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !1174, file: !1173, line: 4535, baseType: !1177, size: 32, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !1174, file: !1173, line: 4536, baseType: !1177, size: 32, offset: 96)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1174, file: !1173, line: 4537, baseType: !1182, size: 16256, offset: 128)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 16256, elements: !1183)
!1183 = !{!1184}
!1184 = !DISubrange(count: 2032)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !1174, file: !1173, line: 4543, baseType: !1186, size: 4224, offset: 16384)
!1186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1187, size: 4224, elements: !1193)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1174, file: !1173, line: 4538, size: 128, elements: !1188)
!1188 = !{!1189, !1190, !1191, !1192}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !1187, file: !1173, line: 4539, baseType: !1177, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !1187, file: !1173, line: 4540, baseType: !1177, size: 32, offset: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !1187, file: !1173, line: 4541, baseType: !1177, size: 32, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !1187, file: !1173, line: 4542, baseType: !1177, size: 32, offset: 96)
!1193 = !{!1194}
!1194 = !DISubrange(count: 33)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1174, file: !1173, line: 4544, baseType: !1196, size: 110464, offset: 20608)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 110464, elements: !1197)
!1197 = !{!1198}
!1198 = !DISubrange(count: 13808)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !1174, file: !1173, line: 4550, baseType: !1200, size: 24448, offset: 131072)
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1201, size: 24448, elements: !1207)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1174, file: !1173, line: 4545, size: 128, elements: !1202)
!1202 = !{!1203, !1204, !1205, !1206}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !1201, file: !1173, line: 4546, baseType: !1177, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !1201, file: !1173, line: 4547, baseType: !1177, size: 32, offset: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !1201, file: !1173, line: 4548, baseType: !1177, size: 32, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !1201, file: !1173, line: 4549, baseType: !1177, size: 32, offset: 96)
!1207 = !{!1208}
!1208 = !DISubrange(count: 191)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !1174, file: !1173, line: 4551, baseType: !1210, size: 106624, offset: 155520)
!1210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 106624, elements: !1211)
!1211 = !{!1212}
!1212 = !DISubrange(count: 13328)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !1174, file: !1173, line: 4574, baseType: !1214, size: 128000, offset: 262144)
!1214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 128000, elements: !1241)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1174, file: !1173, line: 4552, size: 1024, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1237, !1238, !1239, !1240}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !1215, file: !1173, line: 4553, baseType: !1177, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !1215, file: !1173, line: 4554, baseType: !1177, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !1215, file: !1173, line: 4555, baseType: !1177, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !1215, file: !1173, line: 4556, baseType: !1177, size: 32, offset: 96)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !1215, file: !1173, line: 4557, baseType: !1177, size: 32, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !1215, file: !1173, line: 4558, baseType: !1177, size: 32, offset: 160)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !1215, file: !1173, line: 4559, baseType: !1177, size: 32, offset: 192)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !1215, file: !1173, line: 4560, baseType: !1177, size: 32, offset: 224)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !1215, file: !1173, line: 4561, baseType: !1177, size: 32, offset: 256)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !1215, file: !1173, line: 4562, baseType: !1177, size: 32, offset: 288)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !1215, file: !1173, line: 4563, baseType: !1177, size: 32, offset: 320)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !1215, file: !1173, line: 4564, baseType: !1177, size: 32, offset: 352)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !1215, file: !1173, line: 4565, baseType: !1177, size: 32, offset: 384)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !1215, file: !1173, line: 4566, baseType: !1177, size: 32, offset: 416)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !1215, file: !1173, line: 4567, baseType: !1177, size: 32, offset: 448)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !1215, file: !1173, line: 4568, baseType: !1177, size: 32, offset: 480)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1215, file: !1173, line: 4569, baseType: !1234, size: 384, offset: 512)
!1234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 384, elements: !1235)
!1235 = !{!1236}
!1236 = !DISubrange(count: 48)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !1215, file: !1173, line: 4570, baseType: !1177, size: 32, offset: 896)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !1215, file: !1173, line: 4571, baseType: !1177, size: 32, offset: 928)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !1215, file: !1173, line: 4572, baseType: !1177, size: 32, offset: 960)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !1215, file: !1173, line: 4573, baseType: !1177, size: 32, offset: 992)
!1241 = !{!1242}
!1242 = !DISubrange(count: 125)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !1173, line: 38320, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 38303, size: 23040, elements: !1246)
!1246 = !{!1247, !1249, !1251, !1252, !1253, !1254, !1258, !1262, !1266, !1270, !1274}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !1245, file: !1173, line: 38304, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1245, file: !1173, line: 38305, baseType: !1250, size: 256, offset: 32)
!1250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 256, elements: !354)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !1245, file: !1173, line: 38306, baseType: !1177, size: 32, offset: 288)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !1245, file: !1173, line: 38307, baseType: !1177, size: 32, offset: 320)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !1245, file: !1173, line: 38308, baseType: !1177, size: 32, offset: 352)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1245, file: !1173, line: 38309, baseType: !1255, size: 3712, offset: 384)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 3712, elements: !1256)
!1256 = !{!1257}
!1257 = !DISubrange(count: 464)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !1245, file: !1173, line: 38310, baseType: !1259, size: 864, offset: 4096)
!1259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1177, size: 864, elements: !1260)
!1260 = !{!1261}
!1261 = !DISubrange(count: 27)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !1245, file: !1173, line: 38311, baseType: !1263, size: 3232, offset: 4960)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 3232, elements: !1264)
!1264 = !{!1265}
!1265 = !DISubrange(count: 404)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !1245, file: !1173, line: 38312, baseType: !1267, size: 3776, offset: 8192)
!1267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1177, size: 3776, elements: !1268)
!1268 = !{!1269}
!1269 = !DISubrange(count: 118)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !1245, file: !1173, line: 38313, baseType: !1271, size: 4416, offset: 11968)
!1271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 4416, elements: !1272)
!1272 = !{!1273}
!1273 = !DISubrange(count: 552)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !1245, file: !1173, line: 38319, baseType: !1275, size: 6656, offset: 16384)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1276, size: 6656, elements: !1282)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1245, file: !1173, line: 38314, size: 128, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1281}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !1276, file: !1173, line: 38315, baseType: !1177, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !1276, file: !1173, line: 38316, baseType: !1177, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !1276, file: !1173, line: 38317, baseType: !1177, size: 32, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !1276, file: !1173, line: 38318, baseType: !1177, size: 32, offset: 96)
!1282 = !{!1283}
!1283 = !DISubrange(count: 52)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !1173, line: 43319, baseType: !1286)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 43313, size: 80, elements: !1287)
!1287 = !{!1288, !1290, !1291, !1293, !1294}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !1286, file: !1173, line: 43314, baseType: !1289, size: 16)
!1289 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !272)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !1286, file: !1173, line: 43315, baseType: !1289, size: 16, offset: 16)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !1286, file: !1173, line: 43316, baseType: !1292, size: 16, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1289)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !1286, file: !1173, line: 43317, baseType: !1289, size: 16, offset: 48)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !1286, file: !1173, line: 43318, baseType: !1289, size: 16, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1296 = !{!883}
!1297 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1299)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1300, line: 51, size: 64, elements: !1301)
!1300 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1301 = !{!1302, !1309}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1299, file: !1300, line: 60, baseType: !1303, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!111, !1306}
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!1308 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1300, line: 48, flags: DIFlagFwdDecl)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1299, file: !1300, line: 65, baseType: !1306, size: 32, offset: 32)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1312, file: !1319, line: 21, type: !880, isLocal: true, isDefinition: true)
!1312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1314, globals: !1318, splitDebugInlining: false, nameTableKind: None)
!1313 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!1314 = !{!1315, !111, !133}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1317, line: 22, baseType: !111)
!1317 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1318 = !{!1310}
!1319 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !1322, file: !1326, line: 10, type: !1327, isLocal: false, isDefinition: true)
!1322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1323, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1324, globals: !1325, splitDebugInlining: false, nameTableKind: None)
!1323 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!1324 = !{!202, !133, !111}
!1325 = !{!1320}
!1326 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !869, line: 16, size: 64, elements: !1329)
!1329 = !{!1330, !1331}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1328, file: !869, line: 17, baseType: !118, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1328, file: !869, line: 18, baseType: !128, size: 8, offset: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1334, file: !1419, line: 603, type: !1421, isLocal: true, isDefinition: true, align: 32)
!1334 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1335, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1336, globals: !1416, splitDebugInlining: false, nameTableKind: None)
!1335 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!1336 = !{!133, !111, !1337}
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!1338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !105, line: 336, size: 608, elements: !1340)
!1340 = !{!1341, !1360, !1364, !1368, !1381, !1386, !1390, !1394, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1339, file: !105, line: 365, baseType: !1342, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!111, !1345, !140}
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 378, size: 192, elements: !1348)
!1348 = !{!1349, !1350, !1351, !1352, !1358, !1359}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1347, file: !115, line: 380, baseType: !118, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1347, file: !115, line: 382, baseType: !13, size: 32, offset: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1347, file: !115, line: 384, baseType: !13, size: 32, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1347, file: !115, line: 386, baseType: !1353, size: 32, offset: 96)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 32)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !115, line: 351, size: 16, elements: !1355)
!1355 = !{!1356, !1357}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1354, file: !115, line: 359, baseType: !128, size: 8)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1354, file: !115, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1347, file: !115, line: 388, baseType: !133, size: 32, offset: 128)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1347, file: !115, line: 396, baseType: !135, size: 32, offset: 160)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1339, file: !105, line: 366, baseType: !1361, size: 32, offset: 32)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{null, !1345, !129}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1339, file: !105, line: 374, baseType: !1365, size: 32, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 32)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!111, !1345}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1339, file: !105, line: 377, baseType: !1369, size: 32, offset: 96)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!111, !1345, !1372}
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1374)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !105, line: 122, size: 64, elements: !1375)
!1375 = !{!1376, !1377, !1378, !1379, !1380}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1374, file: !105, line: 123, baseType: !158, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1374, file: !105, line: 124, baseType: !128, size: 8, offset: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1374, file: !105, line: 125, baseType: !128, size: 8, offset: 40)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1374, file: !105, line: 126, baseType: !128, size: 8, offset: 48)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1374, file: !105, line: 127, baseType: !128, size: 8, offset: 56)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1339, file: !105, line: 379, baseType: !1382, size: 32, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{!111, !1345, !1385}
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1339, file: !105, line: 384, baseType: !1387, size: 32, offset: 160)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!111, !1345, !172, !111}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1339, file: !105, line: 393, baseType: !1391, size: 32, offset: 192)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!1392 = !DISubroutineType(types: !1393)
!1393 = !{!111, !1345, !178, !179}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1339, file: !105, line: 402, baseType: !1395, size: 32, offset: 224)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{null, !1345}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1339, file: !105, line: 405, baseType: !1395, size: 32, offset: 256)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1339, file: !105, line: 408, baseType: !1365, size: 32, offset: 288)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1339, file: !105, line: 411, baseType: !1395, size: 32, offset: 320)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1339, file: !105, line: 414, baseType: !1395, size: 32, offset: 352)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1339, file: !105, line: 417, baseType: !1365, size: 32, offset: 384)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1339, file: !105, line: 420, baseType: !1365, size: 32, offset: 416)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1339, file: !105, line: 423, baseType: !1395, size: 32, offset: 448)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1339, file: !105, line: 426, baseType: !1395, size: 32, offset: 480)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1339, file: !105, line: 429, baseType: !1365, size: 32, offset: 512)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1339, file: !105, line: 432, baseType: !1365, size: 32, offset: 544)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1339, file: !105, line: 435, baseType: !1409, size: 32, offset: 576)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{null, !1345, !1412, !133}
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !105, line: 142, baseType: !1413)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{null, !1345, !133}
!1416 = !{!1332, !1417}
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1334, file: !1419, line: 38, type: !1420, isLocal: true, isDefinition: true)
!1419 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1345)
!1421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1422)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1300, line: 51, size: 64, elements: !1423)
!1423 = !{!1424, !1425}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1422, file: !1300, line: 60, baseType: !1365, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1422, file: !1300, line: 65, baseType: !1345, size: 32, offset: 32)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !1428, file: !1532, line: 318, type: !1608, isLocal: false, isDefinition: true)
!1428 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1429, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1430, retainedTypes: !1447, globals: !1529, splitDebugInlining: false, nameTableKind: None)
!1429 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!1430 = !{!1431, !1437, !1442}
!1431 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1432, line: 506, baseType: !32, size: 32, elements: !1433)
!1432 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1433 = !{!1434, !1435, !1436}
!1434 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1435 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1436 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1437 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1432, line: 512, baseType: !32, size: 32, elements: !1438)
!1438 = !{!1439, !1440, !1441}
!1439 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1440 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1441 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1442 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !1443, line: 66, baseType: !32, size: 32, elements: !1444)
!1443 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1444 = !{!1445, !1446}
!1445 = !DIEnumerator(name: "gpioPinClear", value: 0)
!1446 = !DIEnumerator(name: "gpioPinSet", value: 1)
!1447 = !{!1448, !1518, !1523, !1483, !1437, !1431, !1528, !133, !1295, !1498, !253}
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1450)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1432, line: 523, size: 288, elements: !1451)
!1451 = !{!1452, !1473, !1479, !1484, !1488, !1489, !1490, !1494, !1514}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1450, file: !1432, line: 524, baseType: !1453, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!111, !1456, !1471, !1472}
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 378, size: 192, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1469, !1470}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1458, file: !115, line: 380, baseType: !118, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1458, file: !115, line: 382, baseType: !13, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1458, file: !115, line: 384, baseType: !13, size: 32, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1458, file: !115, line: 386, baseType: !1464, size: 32, offset: 96)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !115, line: 351, size: 16, elements: !1466)
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1465, file: !115, line: 359, baseType: !128, size: 8)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1465, file: !115, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1458, file: !115, line: 388, baseType: !133, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1458, file: !115, line: 396, baseType: !135, size: 32, offset: 160)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1432, line: 237, baseType: !128)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1432, line: 257, baseType: !158)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1450, file: !1432, line: 530, baseType: !1474, size: 32, offset: 32)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 32)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!111, !1456, !1477}
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1432, line: 229, baseType: !158)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1450, file: !1432, line: 532, baseType: !1480, size: 32, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!111, !1456, !1483, !1478}
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1432, line: 216, baseType: !158)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1450, file: !1432, line: 535, baseType: !1485, size: 32, offset: 96)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!111, !1456, !1483}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1450, file: !1432, line: 537, baseType: !1485, size: 32, offset: 128)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1450, file: !1432, line: 539, baseType: !1485, size: 32, offset: 160)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1450, file: !1432, line: 541, baseType: !1491, size: 32, offset: 192)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!111, !1456, !1471, !1431, !1437}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1450, file: !1432, line: 544, baseType: !1495, size: 32, offset: 224)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!111, !1456, !1498, !131}
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1432, line: 478, size: 96, elements: !1500)
!1500 = !{!1501, !1508, !1513}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1499, file: !1432, line: 482, baseType: !1502, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1503, line: 33, baseType: !1504)
!1503 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1503, line: 29, size: 32, elements: !1505)
!1505 = !{!1506}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1504, file: !1503, line: 30, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1499, file: !1432, line: 485, baseType: !1509, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1432, line: 464, baseType: !1510)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{null, !1456, !1498, !1483}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1499, file: !1432, line: 493, baseType: !1483, size: 32, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1450, file: !1432, line: 547, baseType: !1515, size: 32, offset: 256)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!158, !1456}
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1432, line: 428, size: 32, elements: !1521)
!1521 = !{!1522}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1520, file: !1432, line: 434, baseType: !1483, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1432, line: 441, size: 32, elements: !1526)
!1526 = !{!1527}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1525, file: !1432, line: 447, baseType: !1483, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1529 = !{!1426, !1530, !1536, !1538, !1548, !1560, !1562, !1593, !1595, !1606}
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1428, file: !1532, line: 318, type: !1533, isLocal: false, isDefinition: true, align: 16)
!1532 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 400, elements: !1534)
!1534 = !{!1535}
!1535 = !DISubrange(count: 25)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1428, file: !1532, line: 318, type: !1457, isLocal: false, isDefinition: true, align: 32)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1428, file: !1532, line: 318, type: !1540, isLocal: true, isDefinition: true, align: 32)
!1540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1300, line: 51, size: 64, elements: !1542)
!1542 = !{!1543, !1547}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1541, file: !1300, line: 60, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!111, !1456}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1541, file: !1300, line: 65, baseType: !1456, size: 32, offset: 32)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !1428, file: !1532, line: 318, type: !1550, isLocal: true, isDefinition: true)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1532, line: 33, size: 96, elements: !1551)
!1551 = !{!1552, !1553}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1550, file: !1532, line: 35, baseType: !1525, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1550, file: !1532, line: 37, baseType: !1554, size: 64, offset: 32)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1503, line: 40, baseType: !1555)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1503, line: 35, size: 64, elements: !1556)
!1556 = !{!1557, !1559}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1555, file: !1503, line: 36, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1555, file: !1503, line: 37, baseType: !1558, size: 32, offset: 32)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1428, file: !1532, line: 318, type: !1465, isLocal: true, isDefinition: true, align: 8)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !1428, file: !1532, line: 318, type: !1564, isLocal: true, isDefinition: true)
!1564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1532, line: 23, size: 128, elements: !1566)
!1566 = !{!1567, !1568, !1581, !1592}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1565, file: !1532, line: 25, baseType: !1520, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1565, file: !1532, line: 26, baseType: !1569, size: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !1173, line: 19729, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 19720, size: 256, elements: !1572)
!1572 = !{!1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1571, file: !1173, line: 19721, baseType: !1177, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1571, file: !1173, line: 19722, baseType: !1177, size: 32, offset: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1571, file: !1173, line: 19723, baseType: !1248, size: 32, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1571, file: !1173, line: 19724, baseType: !1177, size: 32, offset: 96)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1571, file: !1173, line: 19725, baseType: !1177, size: 32, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1571, file: !1173, line: 19726, baseType: !1177, size: 32, offset: 160)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1571, file: !1173, line: 19727, baseType: !1177, size: 32, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1571, file: !1173, line: 19728, baseType: !1177, size: 32, offset: 224)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1565, file: !1532, line: 28, baseType: !1582, size: 32, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1585, line: 51, size: 128, elements: !1586)
!1585 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1586 = !{!1587, !1588, !1589, !1590, !1591}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1584, file: !1585, line: 52, baseType: !158, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1584, file: !1585, line: 53, baseType: !158, size: 32, offset: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1584, file: !1585, line: 54, baseType: !158, size: 32, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1584, file: !1585, line: 55, baseType: !128, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1584, file: !1585, line: 56, baseType: !158, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1565, file: !1532, line: 29, baseType: !128, size: 8, offset: 96)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !1428, file: !1532, line: 249, type: !1449, isLocal: true, isDefinition: true)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1597, file: !1532, line: 318, type: !1600, isLocal: true, isDefinition: true, align: 32)
!1597 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1532, file: !1532, line: 318, type: !1545, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !1598)
!1598 = !{!1599}
!1599 = !DILocalVariable(name: "port", arg: 1, scope: !1597, file: !1532, line: 318, type: !1456)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1601)
!1601 = !{!1602, !1603, !1604, !1605}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1600, file: !10, line: 55, baseType: !413, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1600, file: !10, line: 57, baseType: !413, size: 32, offset: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1600, file: !10, line: 59, baseType: !133, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1600, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1597, file: !1532, line: 318, type: !1600, isLocal: true, isDefinition: true, align: 32)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1583, size: 2048, elements: !426)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1611, file: !1616, line: 7, type: !1617, isLocal: false, isDefinition: true, align: 16)
!1611 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1612, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1613, splitDebugInlining: false, nameTableKind: None)
!1612 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!1613 = !{!1609, !1614}
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1611, file: !1616, line: 12, type: !1617, isLocal: false, isDefinition: true, align: 16)
!1616 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 48, elements: !848)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1620, file: !1817, line: 339, type: !1815, isLocal: true, isDefinition: true)
!1620 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1621, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1622, retainedTypes: !1708, globals: !1853, splitDebugInlining: false, nameTableKind: None)
!1621 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!1622 = !{!30, !1623, !1661, !1689, !1693, !1697, !1702}
!1623 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1624, line: 122, baseType: !32, size: 32, elements: !1625)
!1624 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1625 = !{!1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660}
!1626 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1627 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1628 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1629 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1630 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1631 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1632 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1633 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1634 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1635 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1636 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1637 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1638 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1639 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1640 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1641 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1642 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1643 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1644 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1645 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1646 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1647 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1648 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1649 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1650 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1651 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1652 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1653 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1654 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1655 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1656 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1657 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1658 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1659 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1660 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1661 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1624, line: 91, baseType: !32, size: 32, elements: !1662)
!1662 = !{!1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688}
!1663 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1664 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1665 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1666 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1667 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1668 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1669 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1670 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1671 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1672 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1673 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1674 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1675 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1676 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1677 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1678 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1679 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1680 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1681 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1682 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1683 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1684 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1685 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1686 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1687 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1688 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1689 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1624, line: 60, baseType: !32, size: 32, elements: !1690)
!1690 = !{!1691, !1692}
!1691 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1692 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1693 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1624, line: 67, baseType: !32, size: 32, elements: !1694)
!1694 = !{!1695, !1696}
!1695 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1696 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1697 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1624, line: 74, baseType: !32, size: 32, elements: !1698)
!1698 = !{!1699, !1700, !1701}
!1699 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1700 = !DIEnumerator(name: "uartParityEven", value: 256)
!1701 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1702 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1624, line: 82, baseType: !32, size: 32, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707}
!1704 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1705 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1706 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1707 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1708 = !{!133, !111, !1709, !1788, !1814, !1852, !158, !131, !128}
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1711)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !105, line: 336, size: 608, elements: !1712)
!1712 = !{!1713, !1732, !1736, !1740, !1753, !1758, !1762, !1766, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1711, file: !105, line: 365, baseType: !1714, size: 32)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!111, !1717, !140}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 378, size: 192, elements: !1720)
!1720 = !{!1721, !1722, !1723, !1724, !1730, !1731}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1719, file: !115, line: 380, baseType: !118, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1719, file: !115, line: 382, baseType: !13, size: 32, offset: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1719, file: !115, line: 384, baseType: !13, size: 32, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1719, file: !115, line: 386, baseType: !1725, size: 32, offset: 96)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !115, line: 351, size: 16, elements: !1727)
!1727 = !{!1728, !1729}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1726, file: !115, line: 359, baseType: !128, size: 8)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1726, file: !115, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1719, file: !115, line: 388, baseType: !133, size: 32, offset: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1719, file: !115, line: 396, baseType: !135, size: 32, offset: 160)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1711, file: !105, line: 366, baseType: !1733, size: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{null, !1717, !129}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1711, file: !105, line: 374, baseType: !1737, size: 32, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!111, !1717}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1711, file: !105, line: 377, baseType: !1741, size: 32, offset: 96)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{!111, !1717, !1744}
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !105, line: 122, size: 64, elements: !1747)
!1747 = !{!1748, !1749, !1750, !1751, !1752}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1746, file: !105, line: 123, baseType: !158, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1746, file: !105, line: 124, baseType: !128, size: 8, offset: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1746, file: !105, line: 125, baseType: !128, size: 8, offset: 40)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1746, file: !105, line: 126, baseType: !128, size: 8, offset: 48)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1746, file: !105, line: 127, baseType: !128, size: 8, offset: 56)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1711, file: !105, line: 379, baseType: !1754, size: 32, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!111, !1717, !1757}
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1711, file: !105, line: 384, baseType: !1759, size: 32, offset: 160)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!111, !1717, !172, !111}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1711, file: !105, line: 393, baseType: !1763, size: 32, offset: 192)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!111, !1717, !178, !179}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1711, file: !105, line: 402, baseType: !1767, size: 32, offset: 224)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{null, !1717}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1711, file: !105, line: 405, baseType: !1767, size: 32, offset: 256)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1711, file: !105, line: 408, baseType: !1737, size: 32, offset: 288)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1711, file: !105, line: 411, baseType: !1767, size: 32, offset: 320)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1711, file: !105, line: 414, baseType: !1767, size: 32, offset: 352)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1711, file: !105, line: 417, baseType: !1737, size: 32, offset: 384)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1711, file: !105, line: 420, baseType: !1737, size: 32, offset: 416)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1711, file: !105, line: 423, baseType: !1767, size: 32, offset: 448)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1711, file: !105, line: 426, baseType: !1767, size: 32, offset: 480)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1711, file: !105, line: 429, baseType: !1737, size: 32, offset: 512)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1711, file: !105, line: 432, baseType: !1737, size: 32, offset: 544)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1711, file: !105, line: 435, baseType: !1781, size: 32, offset: 576)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{null, !1717, !1784, !133}
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !105, line: 142, baseType: !1785)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{null, !1717, !133}
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !1173, line: 41342, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 41322, size: 1504, elements: !1791)
!1791 = !{!1792, !1793, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1790, file: !1173, line: 41323, baseType: !1248, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1790, file: !1173, line: 41324, baseType: !1794, size: 480, offset: 32)
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 480, elements: !1795)
!1795 = !{!1796}
!1796 = !DISubrange(count: 60)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1790, file: !1173, line: 41325, baseType: !1177, size: 32, offset: 512)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1790, file: !1173, line: 41326, baseType: !1794, size: 480, offset: 544)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1790, file: !1173, line: 41327, baseType: !1177, size: 32, offset: 1024)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1790, file: !1173, line: 41328, baseType: !1177, size: 32, offset: 1056)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1790, file: !1173, line: 41329, baseType: !1177, size: 32, offset: 1088)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1790, file: !1173, line: 41330, baseType: !1177, size: 32, offset: 1120)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1790, file: !1173, line: 41331, baseType: !1177, size: 32, offset: 1152)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1790, file: !1173, line: 41332, baseType: !1177, size: 32, offset: 1184)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1790, file: !1173, line: 41333, baseType: !1177, size: 32, offset: 1216)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1790, file: !1173, line: 41334, baseType: !1177, size: 32, offset: 1248)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1790, file: !1173, line: 41335, baseType: !1177, size: 32, offset: 1280)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1790, file: !1173, line: 41336, baseType: !1177, size: 32, offset: 1312)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1790, file: !1173, line: 41337, baseType: !1177, size: 32, offset: 1344)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1790, file: !1173, line: 41338, baseType: !1248, size: 32, offset: 1376)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1790, file: !1173, line: 41339, baseType: !1177, size: 32, offset: 1408)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1790, file: !1173, line: 41340, baseType: !1177, size: 32, offset: 1440)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1790, file: !1173, line: 41341, baseType: !1177, size: 32, offset: 1472)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1816)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1817, line: 29, size: 160, elements: !1818)
!1817 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1818 = !{!1819, !1820, !1821, !1822, !1851}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1816, file: !1817, line: 30, baseType: !1788, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1816, file: !1817, line: 31, baseType: !158, size: 32, offset: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1816, file: !1817, line: 32, baseType: !128, size: 8, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1816, file: !1817, line: 33, baseType: !1823, size: 32, offset: 96)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1826, line: 60, size: 64, elements: !1827)
!1826 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1827 = !{!1828, !1850}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1825, file: !1826, line: 69, baseType: !1829, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1826, line: 50, size: 64, elements: !1832)
!1832 = !{!1833, !1848, !1849}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1831, file: !1826, line: 52, baseType: !1834, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1836)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1585, line: 64, baseType: !1837)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1585, line: 59, size: 160, elements: !1838)
!1838 = !{!1839, !1847}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1837, file: !1585, line: 60, baseType: !1840, size: 128)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1585, line: 51, size: 128, elements: !1841)
!1841 = !{!1842, !1843, !1844, !1845, !1846}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1840, file: !1585, line: 52, baseType: !158, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1840, file: !1585, line: 53, baseType: !158, size: 32, offset: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1840, file: !1585, line: 54, baseType: !158, size: 32, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1840, file: !1585, line: 55, baseType: !128, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1840, file: !1585, line: 56, baseType: !158, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1837, file: !1585, line: 61, baseType: !158, size: 32, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1831, file: !1826, line: 54, baseType: !128, size: 8, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1831, file: !1826, line: 56, baseType: !128, size: 8, offset: 40)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1825, file: !1826, line: 71, baseType: !128, size: 8, offset: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1816, file: !1817, line: 35, baseType: !1767, size: 32, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!1853 = !{!1854, !1859, !1861, !1868, !1874, !1876, !1618, !1878, !1880, !1883, !1886}
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1620, file: !1817, line: 339, type: !1856, isLocal: false, isDefinition: true, align: 16)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 96, elements: !1857)
!1857 = !{!1858}
!1858 = !DISubrange(count: 6)
!1859 = !DIGlobalVariableExpression(var: !1860, expr: !DIExpression())
!1860 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1620, file: !1817, line: 339, type: !1718, isLocal: false, isDefinition: true, align: 32)
!1861 = !DIGlobalVariableExpression(var: !1862, expr: !DIExpression())
!1862 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1620, file: !1817, line: 339, type: !1863, isLocal: true, isDefinition: true, align: 32)
!1863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1300, line: 51, size: 64, elements: !1865)
!1865 = !{!1866, !1867}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1864, file: !1300, line: 60, baseType: !1737, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1864, file: !1300, line: 65, baseType: !1717, size: 32, offset: 32)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1620, file: !1817, line: 339, type: !1870, isLocal: true, isDefinition: true)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1817, line: 39, size: 64, elements: !1871)
!1871 = !{!1872, !1873}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1870, file: !1817, line: 41, baseType: !1784, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1870, file: !1817, line: 42, baseType: !133, size: 32, offset: 32)
!1874 = !DIGlobalVariableExpression(var: !1875, expr: !DIExpression())
!1875 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1620, file: !1817, line: 339, type: !1726, isLocal: true, isDefinition: true, align: 8)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1620, file: !1817, line: 270, type: !1710, isLocal: true, isDefinition: true)
!1878 = !DIGlobalVariableExpression(var: !1879, expr: !DIExpression())
!1879 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1620, file: !1817, line: 339, type: !1824, isLocal: true, isDefinition: true)
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression())
!1881 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1620, file: !1817, line: 339, type: !1882, isLocal: true, isDefinition: true)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1830, size: 64, elements: !637)
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1620, file: !1817, line: 339, type: !1885, isLocal: true, isDefinition: true)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 320, elements: !307)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1888, file: !1817, line: 339, type: !1891, isLocal: true, isDefinition: true, align: 32)
!1888 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1817, file: !1817, line: 339, type: !1768, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !1889)
!1889 = !{!1890}
!1890 = !DILocalVariable(name: "dev", arg: 1, scope: !1888, file: !1817, line: 339, type: !1717)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1892)
!1892 = !{!1893, !1894, !1895, !1896}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1891, file: !10, line: 55, baseType: !413, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1891, file: !10, line: 57, baseType: !413, size: 32, offset: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1891, file: !10, line: 59, baseType: !133, size: 32, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1891, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1899, file: !2124, line: 65, type: !1177, isLocal: true, isDefinition: true)
!1899 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1900, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1901, retainedTypes: !2042, globals: !2121, splitDebugInlining: false, nameTableKind: None)
!1900 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!1901 = !{!1902}
!1902 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !1173, line: 103, baseType: !111, size: 32, elements: !1903)
!1903 = !{!1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041}
!1904 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1905 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1906 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1907 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1908 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1909 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1910 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1911 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1912 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1913 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1914 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1915 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1916 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1917 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1918 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1919 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1920 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1921 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1922 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1923 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1924 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1925 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1926 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1927 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1928 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1929 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1930 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1931 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1932 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1933 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1934 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1935 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1936 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1937 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1938 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1939 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1940 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1941 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1942 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1943 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1944 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1945 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1946 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1947 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1948 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1949 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1950 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1951 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1952 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1953 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1954 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1955 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1956 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1957 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1958 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1959 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1960 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1961 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1962 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1963 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1964 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1965 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1966 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1967 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1968 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1969 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1970 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1971 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1972 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1973 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1974 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1975 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1976 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1977 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1978 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1979 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1980 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1981 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1982 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1983 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1984 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1985 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1986 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1987 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1988 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1989 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1990 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1991 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1992 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1993 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1994 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1995 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1996 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1997 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1998 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1999 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!2000 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!2001 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!2002 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!2003 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!2004 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!2005 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!2006 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!2007 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!2008 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!2009 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!2010 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!2011 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!2012 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!2013 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!2014 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!2015 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!2016 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!2017 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!2018 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!2019 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!2020 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!2021 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!2022 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!2023 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!2024 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!2025 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!2026 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!2027 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!2028 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!2029 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!2030 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!2031 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!2032 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!2033 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!2034 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!2035 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!2036 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!2037 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!2038 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!2039 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!2040 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!2041 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!2042 = !{!202, !2043, !413, !128, !158, !2052, !2085}
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !2045, line: 770, baseType: !2046)
!2045 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 764, size: 128, elements: !2047)
!2047 = !{!2048, !2049, !2050, !2051}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2046, file: !2045, line: 766, baseType: !1177, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2046, file: !2045, line: 767, baseType: !1177, size: 32, offset: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2046, file: !2045, line: 768, baseType: !1177, size: 32, offset: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2046, file: !2045, line: 769, baseType: !1248, size: 32, offset: 96)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2045, line: 426, baseType: !2054)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 411, size: 28704, elements: !2055)
!2055 = !{!2056, !2060, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2075, !2080, !2084}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2054, file: !2045, line: 413, baseType: !2057, size: 256)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1177, size: 256, elements: !2058)
!2058 = !{!2059}
!2059 = !DISubrange(count: 8)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2054, file: !2045, line: 414, baseType: !2061, size: 768, offset: 256)
!2061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 768, elements: !2062)
!2062 = !{!2063}
!2063 = !DISubrange(count: 24)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2054, file: !2045, line: 415, baseType: !2057, size: 256, offset: 1024)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2054, file: !2045, line: 416, baseType: !2061, size: 768, offset: 1280)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2054, file: !2045, line: 417, baseType: !2057, size: 256, offset: 2048)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2054, file: !2045, line: 418, baseType: !2061, size: 768, offset: 2304)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2054, file: !2045, line: 419, baseType: !2057, size: 256, offset: 3072)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2054, file: !2045, line: 420, baseType: !2061, size: 768, offset: 3328)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2054, file: !2045, line: 421, baseType: !2057, size: 256, offset: 4096)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2054, file: !2045, line: 422, baseType: !2072, size: 1792, offset: 4352)
!2072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 1792, elements: !2073)
!2073 = !{!2074}
!2074 = !DISubrange(count: 56)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2054, file: !2045, line: 423, baseType: !2076, size: 1920, offset: 6144)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2077, size: 1920, elements: !2078)
!2077 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !128)
!2078 = !{!2079}
!2079 = !DISubrange(count: 240)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2054, file: !2045, line: 424, baseType: !2081, size: 20608, offset: 8064)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 20608, elements: !2082)
!2082 = !{!2083}
!2083 = !DISubrange(count: 644)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2054, file: !2045, line: 425, baseType: !1177, size: 32, offset: 28672)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2045, line: 468, baseType: !2087)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 445, size: 1120, elements: !2088)
!2088 = !{!2089, !2090, !2091, !2092, !2093, !2094, !2095, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2108, !2109, !2110, !2114, !2118, !2120}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2087, file: !2045, line: 447, baseType: !1248, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2087, file: !2045, line: 448, baseType: !1177, size: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2087, file: !2045, line: 449, baseType: !1177, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2087, file: !2045, line: 450, baseType: !1177, size: 32, offset: 96)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2087, file: !2045, line: 451, baseType: !1177, size: 32, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2087, file: !2045, line: 452, baseType: !1177, size: 32, offset: 160)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2087, file: !2045, line: 453, baseType: !2096, size: 96, offset: 192)
!2096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2077, size: 96, elements: !2097)
!2097 = !{!2098}
!2098 = !DISubrange(count: 12)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2087, file: !2045, line: 454, baseType: !1177, size: 32, offset: 288)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2087, file: !2045, line: 455, baseType: !1177, size: 32, offset: 320)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2087, file: !2045, line: 456, baseType: !1177, size: 32, offset: 352)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2087, file: !2045, line: 457, baseType: !1177, size: 32, offset: 384)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2087, file: !2045, line: 458, baseType: !1177, size: 32, offset: 416)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2087, file: !2045, line: 459, baseType: !1177, size: 32, offset: 448)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2087, file: !2045, line: 460, baseType: !1177, size: 32, offset: 480)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2087, file: !2045, line: 461, baseType: !2107, size: 64, offset: 512)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1248, size: 64, elements: !307)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2087, file: !2045, line: 462, baseType: !1248, size: 32, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2087, file: !2045, line: 463, baseType: !1248, size: 32, offset: 608)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2087, file: !2045, line: 464, baseType: !2111, size: 128, offset: 640)
!2111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1248, size: 128, elements: !2112)
!2112 = !{!2113}
!2113 = !DISubrange(count: 4)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2087, file: !2045, line: 465, baseType: !2115, size: 160, offset: 768)
!2115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1248, size: 160, elements: !2116)
!2116 = !{!2117}
!2117 = !DISubrange(count: 5)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2087, file: !2045, line: 466, baseType: !2119, size: 160, offset: 928)
!2119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 160, elements: !2116)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2087, file: !2045, line: 467, baseType: !1177, size: 32, offset: 1088)
!2121 = !{!2122, !2148, !2151, !2153, !2155, !1897}
!2122 = !DIGlobalVariableExpression(var: !2123, expr: !DIExpression())
!2123 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1899, file: !2124, line: 285, type: !2125, isLocal: true, isDefinition: true, align: 32)
!2124 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2126)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1300, line: 51, size: 64, elements: !2127)
!2127 = !{!2128, !2147}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2126, file: !1300, line: 60, baseType: !2129, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{!111, !2132}
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2134)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 378, size: 192, elements: !2135)
!2135 = !{!2136, !2137, !2138, !2139, !2145, !2146}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2134, file: !115, line: 380, baseType: !118, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2134, file: !115, line: 382, baseType: !13, size: 32, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2134, file: !115, line: 384, baseType: !13, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2134, file: !115, line: 386, baseType: !2140, size: 32, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !115, line: 351, size: 16, elements: !2142)
!2142 = !{!2143, !2144}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2141, file: !115, line: 359, baseType: !128, size: 8)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2141, file: !115, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2134, file: !115, line: 388, baseType: !133, size: 32, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2134, file: !115, line: 396, baseType: !135, size: 32, offset: 160)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2126, file: !1300, line: 65, baseType: !2132, size: 32, offset: 32)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "lock", scope: !1899, file: !2124, line: 34, type: !2150, isLocal: true, isDefinition: true)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "last_load", scope: !1899, file: !2124, line: 36, type: !158, isLocal: true, isDefinition: true)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1899, file: !2124, line: 48, type: !158, isLocal: true, isDefinition: true)
!2155 = !DIGlobalVariableExpression(var: !2156, expr: !DIExpression())
!2156 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1899, file: !2124, line: 54, type: !158, isLocal: true, isDefinition: true)
!2157 = !DIGlobalVariableExpression(var: !2158, expr: !DIExpression())
!2158 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !2159, file: !2163, line: 69, type: !2164, isLocal: true, isDefinition: true, align: 32)
!2159 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2160, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2161, globals: !2162, splitDebugInlining: false, nameTableKind: None)
!2160 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2161 = !{!1295, !22}
!2162 = !{!2157}
!2163 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2165)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1300, line: 51, size: 64, elements: !2166)
!2166 = !{!2167, !2186}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2165, file: !1300, line: 60, baseType: !2168, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!111, !2171}
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2173)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 378, size: 192, elements: !2174)
!2174 = !{!2175, !2176, !2177, !2178, !2184, !2185}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2173, file: !115, line: 380, baseType: !118, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2173, file: !115, line: 382, baseType: !13, size: 32, offset: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2173, file: !115, line: 384, baseType: !13, size: 32, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2173, file: !115, line: 386, baseType: !2179, size: 32, offset: 96)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 32)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !115, line: 351, size: 16, elements: !2181)
!2181 = !{!2182, !2183}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2180, file: !115, line: 359, baseType: !128, size: 8)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2180, file: !115, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2173, file: !115, line: 388, baseType: !133, size: 32, offset: 128)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2173, file: !115, line: 396, baseType: !135, size: 32, offset: 160)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2165, file: !1300, line: 65, baseType: !2171, size: 32, offset: 32)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2189, file: !2192, line: 23, type: !179, isLocal: false, isDefinition: true)
!2189 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2190, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !877, globals: !2191, splitDebugInlining: false, nameTableKind: None)
!2190 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2191 = !{!2187}
!2192 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2195, file: !2199, line: 37, type: !2442, isLocal: false, isDefinition: true)
!2195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2196, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2197, retainedTypes: !2206, globals: !2279, splitDebugInlining: false, nameTableKind: None)
!2196 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2197 = !{!2198, !30, !1902}
!2198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2199, line: 63, baseType: !32, size: 32, elements: !2200)
!2199 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2200 = !{!2201, !2202, !2203, !2204, !2205}
!2201 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2202 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2203 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2204 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2205 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2206 = !{!249, !133, !111, !2207, !253, !158, !2237, !413, !128, !2262}
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2209)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2210, line: 51, size: 64, elements: !2211)
!2210 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2211 = !{!2212, !2232}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2209, file: !2210, line: 52, baseType: !2213, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2210, line: 38, baseType: !2214)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 32)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!111, !2217, !178, !272}
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 378, size: 192, elements: !2220)
!2220 = !{!2221, !2222, !2223, !2224, !2230, !2231}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2219, file: !115, line: 380, baseType: !118, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2219, file: !115, line: 382, baseType: !13, size: 32, offset: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2219, file: !115, line: 384, baseType: !13, size: 32, offset: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2219, file: !115, line: 386, baseType: !2225, size: 32, offset: 96)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !115, line: 351, size: 16, elements: !2227)
!2227 = !{!2228, !2229}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2226, file: !115, line: 359, baseType: !128, size: 8)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2226, file: !115, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2219, file: !115, line: 388, baseType: !133, size: 32, offset: 128)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2219, file: !115, line: 396, baseType: !135, size: 32, offset: 160)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2209, file: !2210, line: 53, baseType: !2233, size: 32, offset: 32)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2210, line: 47, baseType: !2234)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{!111, !2217, !178, !272, !158}
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2045, line: 468, baseType: !2239)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 445, size: 1120, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2239, file: !2045, line: 447, baseType: !1248, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2239, file: !2045, line: 448, baseType: !1177, size: 32, offset: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2239, file: !2045, line: 449, baseType: !1177, size: 32, offset: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2239, file: !2045, line: 450, baseType: !1177, size: 32, offset: 96)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2239, file: !2045, line: 451, baseType: !1177, size: 32, offset: 128)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2239, file: !2045, line: 452, baseType: !1177, size: 32, offset: 160)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2239, file: !2045, line: 453, baseType: !2096, size: 96, offset: 192)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2239, file: !2045, line: 454, baseType: !1177, size: 32, offset: 288)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2239, file: !2045, line: 455, baseType: !1177, size: 32, offset: 320)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2239, file: !2045, line: 456, baseType: !1177, size: 32, offset: 352)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2239, file: !2045, line: 457, baseType: !1177, size: 32, offset: 384)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2239, file: !2045, line: 458, baseType: !1177, size: 32, offset: 416)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2239, file: !2045, line: 459, baseType: !1177, size: 32, offset: 448)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2239, file: !2045, line: 460, baseType: !1177, size: 32, offset: 480)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2239, file: !2045, line: 461, baseType: !2107, size: 64, offset: 512)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2239, file: !2045, line: 462, baseType: !1248, size: 32, offset: 576)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2239, file: !2045, line: 463, baseType: !1248, size: 32, offset: 608)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2239, file: !2045, line: 464, baseType: !2111, size: 128, offset: 640)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2239, file: !2045, line: 465, baseType: !2115, size: 160, offset: 768)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2239, file: !2045, line: 466, baseType: !2119, size: 160, offset: 928)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2239, file: !2045, line: 467, baseType: !1177, size: 32, offset: 1088)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2045, line: 426, baseType: !2264)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 411, size: 28704, elements: !2265)
!2265 = !{!2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2264, file: !2045, line: 413, baseType: !2057, size: 256)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2264, file: !2045, line: 414, baseType: !2061, size: 768, offset: 256)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2264, file: !2045, line: 415, baseType: !2057, size: 256, offset: 1024)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2264, file: !2045, line: 416, baseType: !2061, size: 768, offset: 1280)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2264, file: !2045, line: 417, baseType: !2057, size: 256, offset: 2048)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2264, file: !2045, line: 418, baseType: !2061, size: 768, offset: 2304)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2264, file: !2045, line: 419, baseType: !2057, size: 256, offset: 3072)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2264, file: !2045, line: 420, baseType: !2061, size: 768, offset: 3328)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2264, file: !2045, line: 421, baseType: !2057, size: 256, offset: 4096)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2264, file: !2045, line: 422, baseType: !2072, size: 1792, offset: 4352)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2264, file: !2045, line: 423, baseType: !2076, size: 1920, offset: 6144)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2264, file: !2045, line: 424, baseType: !2081, size: 20608, offset: 8064)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2264, file: !2045, line: 425, baseType: !1177, size: 32, offset: 28672)
!2279 = !{!2193, !2280, !2397, !2403, !2405, !2408, !2412, !2414, !2419}
!2280 = !DIGlobalVariableExpression(var: !2281, expr: !DIExpression())
!2281 = distinct !DIGlobalVariable(name: "_kernel", scope: !2195, file: !2199, line: 40, type: !2282, isLocal: false, isDefinition: true)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !225, line: 158, size: 288, elements: !2283)
!2283 = !{!2284, !2392}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2282, file: !225, line: 159, baseType: !2285, size: 192)
!2285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2286, size: 192, elements: !637)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !225, line: 100, size: 192, elements: !2287)
!2287 = !{!2288, !2289, !2290, !2386, !2387, !2388, !2389}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2286, file: !225, line: 102, baseType: !158, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2286, file: !225, line: 105, baseType: !253, size: 32, offset: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2286, file: !225, line: 108, baseType: !2291, size: 32, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 32)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !2293)
!2293 = !{!2294, !2352, !2364, !2365, !2366, !2367, !2368, !2381}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2292, file: !290, line: 247, baseType: !2295, size: 384)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !2296)
!2296 = !{!2297, !2321, !2328, !2329, !2330, !2339, !2340, !2341}
!2297 = !DIDerivedType(tag: DW_TAG_member, scope: !2295, file: !290, line: 60, baseType: !2298, size: 64)
!2298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2295, file: !290, line: 60, size: 64, elements: !2299)
!2299 = !{!2300, !2315}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2298, file: !290, line: 61, baseType: !2301, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !2302)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !2303)
!2303 = !{!2304, !2310}
!2304 = !DIDerivedType(tag: DW_TAG_member, scope: !2302, file: !230, line: 38, baseType: !2305, size: 32)
!2305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2302, file: !230, line: 38, size: 32, elements: !2306)
!2306 = !{!2307, !2309}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2305, file: !230, line: 39, baseType: !2308, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2305, file: !230, line: 40, baseType: !2308, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, scope: !2302, file: !230, line: 42, baseType: !2311, size: 32, offset: 32)
!2311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2302, file: !230, line: 42, size: 32, elements: !2312)
!2312 = !{!2313, !2314}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2311, file: !230, line: 43, baseType: !2308, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2311, file: !230, line: 44, baseType: !2308, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2298, file: !290, line: 62, baseType: !2316, size: 64)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !2317)
!2317 = !{!2318}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2316, file: !302, line: 50, baseType: !2319, size: 64)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2320, size: 64, elements: !307)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2295, file: !290, line: 68, baseType: !2322, size: 32, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !2324)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !2325)
!2325 = !{!2326}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2324, file: !225, line: 232, baseType: !2327, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !2302)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2295, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2295, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!2330 = !DIDerivedType(tag: DW_TAG_member, scope: !2295, file: !290, line: 90, baseType: !2331, size: 16, offset: 112)
!2331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2295, file: !290, line: 90, size: 16, elements: !2332)
!2332 = !{!2333, !2338}
!2333 = !DIDerivedType(tag: DW_TAG_member, scope: !2331, file: !290, line: 91, baseType: !2334, size: 16)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2331, file: !290, line: 91, size: 16, elements: !2335)
!2335 = !{!2336, !2337}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2334, file: !290, line: 96, baseType: !320, size: 8)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2334, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2331, file: !290, line: 100, baseType: !272, size: 16)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2295, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2295, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2295, file: !290, line: 131, baseType: !2342, size: 192, offset: 192)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !2343)
!2343 = !{!2344, !2345, !2351}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2342, file: !225, line: 245, baseType: !2301, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2342, file: !225, line: 246, baseType: !2346, size: 32, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !2347)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2348 = !DISubroutineType(types: !2349)
!2349 = !{null, !2350}
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2342, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2292, file: !290, line: 250, baseType: !2353, size: 288, offset: 384)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !2354)
!2354 = !{!2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2353, file: !339, line: 26, baseType: !158, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2353, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2353, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2353, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2353, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2353, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2353, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2353, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2353, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2292, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2292, file: !290, line: 256, baseType: !2323, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2292, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2292, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2292, file: !290, line: 325, baseType: !2369, size: 32, offset: 1056)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !2371)
!2371 = !{!2372, !2378, !2379}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2370, file: !221, line: 5074, baseType: !2373, size: 96)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !2374)
!2374 = !{!2375, !2376, !2377}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2373, file: !363, line: 57, baseType: !366, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2373, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2373, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2370, file: !221, line: 5075, baseType: !2323, size: 64, offset: 96)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2370, file: !221, line: 5076, baseType: !2380, offset: 160)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2292, file: !290, line: 343, baseType: !2382, size: 64, offset: 1088)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !2383)
!2383 = !{!2384, !2385}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2382, file: !339, line: 63, baseType: !158, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2382, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2286, file: !225, line: 111, baseType: !2291, size: 32, offset: 96)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2286, file: !225, line: 124, baseType: !111, size: 32, offset: 128)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2286, file: !225, line: 127, baseType: !128, size: 8, offset: 160)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2286, file: !225, line: 153, baseType: !2390, offset: 168)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2391, line: 33, elements: !247)
!2391 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2282, file: !225, line: 170, baseType: !2393, size: 96, offset: 192)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !225, line: 83, size: 96, elements: !2394)
!2394 = !{!2395, !2396}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2393, file: !225, line: 86, baseType: !2291, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2393, file: !225, line: 90, baseType: !2327, size: 64, offset: 32)
!2397 = !DIGlobalVariableExpression(var: !2398, expr: !DIExpression())
!2398 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2195, file: !2199, line: 43, type: !2399, isLocal: false, isDefinition: true, align: 64)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2400, size: 8192, elements: !623)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !398, line: 47, size: 8, elements: !2401)
!2401 = !{!2402}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2400, file: !398, line: 48, baseType: !120, size: 8)
!2403 = !DIGlobalVariableExpression(var: !2404, expr: !DIExpression())
!2404 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2195, file: !2199, line: 44, type: !2292, isLocal: false, isDefinition: true)
!2405 = !DIGlobalVariableExpression(var: !2406, expr: !DIExpression())
!2406 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2195, file: !2199, line: 48, type: !2407, isLocal: false, isDefinition: true)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2292, size: 1152, elements: !637)
!2408 = !DIGlobalVariableExpression(var: !2409, expr: !DIExpression())
!2409 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2195, file: !2199, line: 86, type: !2410, isLocal: false, isDefinition: true, align: 64)
!2410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2400, size: 16384, elements: !2411)
!2411 = !{!638, !432}
!2412 = !DIGlobalVariableExpression(var: !2413, expr: !DIExpression())
!2413 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2195, file: !2199, line: 217, type: !131, isLocal: false, isDefinition: true)
!2414 = !DIGlobalVariableExpression(var: !2415, expr: !DIExpression())
!2415 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2195, file: !2199, line: 50, type: !2416, isLocal: true, isDefinition: true, align: 64)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2400, size: 2560, elements: !2417)
!2417 = !{!638, !2418}
!2418 = !DISubrange(count: 320)
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "levels", scope: !2421, file: !2199, line: 232, type: !2441, isLocal: true, isDefinition: true)
!2421 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2199, file: !2199, line: 230, type: !2422, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !2424)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{null, !2198}
!2424 = !{!2425, !2426, !2436, !2440}
!2425 = !DILocalVariable(name: "level", arg: 1, scope: !2421, file: !2199, line: 230, type: !2198)
!2426 = !DILocalVariable(name: "entry", scope: !2421, file: !2199, line: 244, type: !2427)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2429)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1300, line: 51, size: 64, elements: !2430)
!2430 = !{!2431, !2435}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2429, file: !1300, line: 60, baseType: !2432, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!2433 = !DISubroutineType(types: !2434)
!2434 = !{!111, !2217}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2429, file: !1300, line: 65, baseType: !2217, size: 32, offset: 32)
!2436 = !DILocalVariable(name: "dev", scope: !2437, file: !2199, line: 247, type: !2217)
!2437 = distinct !DILexicalBlock(scope: !2438, file: !2199, line: 246, column: 64)
!2438 = distinct !DILexicalBlock(scope: !2439, file: !2199, line: 246, column: 2)
!2439 = distinct !DILexicalBlock(scope: !2421, file: !2199, line: 246, column: 2)
!2440 = !DILocalVariable(name: "rc", scope: !2437, file: !2199, line: 248, type: !111)
!2441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2427, size: 192, elements: !1857)
!2442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2443)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !869, line: 16, size: 64, elements: !2444)
!2444 = !{!2445, !2446}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2443, file: !869, line: 17, baseType: !118, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2443, file: !869, line: 18, baseType: !128, size: 8, offset: 32)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "states_str", scope: !2449, file: !2450, line: 276, type: !2567, isLocal: true, isDefinition: true)
!2449 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2450, file: !2450, line: 271, type: !2451, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !2558)
!2450 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!118, !2453, !253, !249}
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !290, line: 347, baseType: !2454)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !2456)
!2456 = !{!2457, !2515, !2527, !2528, !2529, !2530, !2531, !2544}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2455, file: !290, line: 247, baseType: !2458, size: 384)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !2459)
!2459 = !{!2460, !2484, !2491, !2492, !2493, !2502, !2503, !2504}
!2460 = !DIDerivedType(tag: DW_TAG_member, scope: !2458, file: !290, line: 60, baseType: !2461, size: 64)
!2461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2458, file: !290, line: 60, size: 64, elements: !2462)
!2462 = !{!2463, !2478}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2461, file: !290, line: 61, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !2466)
!2466 = !{!2467, !2473}
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2465, file: !230, line: 38, baseType: !2468, size: 32)
!2468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2465, file: !230, line: 38, size: 32, elements: !2469)
!2469 = !{!2470, !2472}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2468, file: !230, line: 39, baseType: !2471, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2468, file: !230, line: 40, baseType: !2471, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !2465, file: !230, line: 42, baseType: !2474, size: 32, offset: 32)
!2474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2465, file: !230, line: 42, size: 32, elements: !2475)
!2475 = !{!2476, !2477}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2474, file: !230, line: 43, baseType: !2471, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2474, file: !230, line: 44, baseType: !2471, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2461, file: !290, line: 62, baseType: !2479, size: 64)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !2480)
!2480 = !{!2481}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2479, file: !302, line: 50, baseType: !2482, size: 64)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2483, size: 64, elements: !307)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2458, file: !290, line: 68, baseType: !2485, size: 32, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !2487)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !2488)
!2488 = !{!2489}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2487, file: !225, line: 232, baseType: !2490, size: 64)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !2465)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2458, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2458, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!2493 = !DIDerivedType(tag: DW_TAG_member, scope: !2458, file: !290, line: 90, baseType: !2494, size: 16, offset: 112)
!2494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2458, file: !290, line: 90, size: 16, elements: !2495)
!2495 = !{!2496, !2501}
!2496 = !DIDerivedType(tag: DW_TAG_member, scope: !2494, file: !290, line: 91, baseType: !2497, size: 16)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2494, file: !290, line: 91, size: 16, elements: !2498)
!2498 = !{!2499, !2500}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2497, file: !290, line: 96, baseType: !320, size: 8)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2497, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2494, file: !290, line: 100, baseType: !272, size: 16)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2458, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2458, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2458, file: !290, line: 131, baseType: !2505, size: 192, offset: 192)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !2506)
!2506 = !{!2507, !2508, !2514}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2505, file: !225, line: 245, baseType: !2464, size: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2505, file: !225, line: 246, baseType: !2509, size: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !2513}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2505, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2455, file: !290, line: 250, baseType: !2516, size: 288, offset: 384)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !2517)
!2517 = !{!2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2516, file: !339, line: 26, baseType: !158, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2516, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2516, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2516, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2516, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2516, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2516, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2516, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2516, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2455, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2455, file: !290, line: 256, baseType: !2486, size: 64, offset: 704)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2455, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2455, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2455, file: !290, line: 325, baseType: !2532, size: 32, offset: 1056)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !2534)
!2534 = !{!2535, !2541, !2542}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2533, file: !221, line: 5074, baseType: !2536, size: 96)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !2537)
!2537 = !{!2538, !2539, !2540}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2536, file: !363, line: 57, baseType: !366, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2536, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2536, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2533, file: !221, line: 5075, baseType: !2486, size: 64, offset: 96)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2533, file: !221, line: 5076, baseType: !2543, offset: 160)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2455, file: !290, line: 343, baseType: !2545, size: 64, offset: 1088)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !2546)
!2546 = !{!2547, !2548}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2545, file: !339, line: 63, baseType: !158, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2545, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!2549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2550, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2551, globals: !2553, splitDebugInlining: false, nameTableKind: None)
!2550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2551 = !{!133, !118, !202, !128, !111, !2552, !24, !249, !253, !158, !207}
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!2553 = !{!2447, !2554}
!2554 = !DIGlobalVariableExpression(var: !2555, expr: !DIExpression())
!2555 = distinct !DIGlobalVariable(name: "states_sz", scope: !2449, file: !2450, line: 279, type: !2556, isLocal: true, isDefinition: true)
!2556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2557, size: 256, elements: !2058)
!2557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !249)
!2558 = !{!2559, !2560, !2561, !2562, !2563, !2564, !2565}
!2559 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2449, file: !2450, line: 271, type: !2453)
!2560 = !DILocalVariable(name: "buf", arg: 2, scope: !2449, file: !2450, line: 271, type: !253)
!2561 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2449, file: !2450, line: 271, type: !249)
!2562 = !DILocalVariable(name: "off", scope: !2449, file: !2450, line: 273, type: !249)
!2563 = !DILocalVariable(name: "bit", scope: !2449, file: !2450, line: 274, type: !128)
!2564 = !DILocalVariable(name: "thread_state", scope: !2449, file: !2450, line: 275, type: !128)
!2565 = !DILocalVariable(name: "index", scope: !2566, file: !2450, line: 293, type: !128)
!2566 = distinct !DILexicalBlock(scope: !2449, file: !2450, line: 293, column: 2)
!2567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !2058)
!2568 = !DIGlobalVariableExpression(var: !2569, expr: !DIExpression())
!2569 = distinct !DIGlobalVariable(name: "lock", scope: !2570, file: !2670, line: 47, type: !2663, isLocal: true, isDefinition: true)
!2570 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2571, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2572, globals: !2669, splitDebugInlining: false, nameTableKind: None)
!2571 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2572 = !{!131, !133, !111, !2573, !2588}
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !2575)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !2576)
!2576 = !{!2577, !2583}
!2577 = !DIDerivedType(tag: DW_TAG_member, scope: !2575, file: !230, line: 38, baseType: !2578, size: 32)
!2578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2575, file: !230, line: 38, size: 32, elements: !2579)
!2579 = !{!2580, !2582}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2578, file: !230, line: 39, baseType: !2581, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2578, file: !230, line: 40, baseType: !2581, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, scope: !2575, file: !230, line: 42, baseType: !2584, size: 32, offset: 32)
!2584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2575, file: !230, line: 42, size: 32, elements: !2585)
!2585 = !{!2586, !2587}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2584, file: !230, line: 43, baseType: !2581, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2584, file: !230, line: 44, baseType: !2581, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !2590)
!2590 = !{!2591, !2635, !2647, !2648, !2649, !2650, !2651, !2664}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2589, file: !290, line: 247, baseType: !2592, size: 384)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !2593)
!2593 = !{!2594, !2604, !2611, !2612, !2613, !2622, !2623, !2624}
!2594 = !DIDerivedType(tag: DW_TAG_member, scope: !2592, file: !290, line: 60, baseType: !2595, size: 64)
!2595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2592, file: !290, line: 60, size: 64, elements: !2596)
!2596 = !{!2597, !2598}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2595, file: !290, line: 61, baseType: !2574, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2595, file: !290, line: 62, baseType: !2599, size: 64)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !2600)
!2600 = !{!2601}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2599, file: !302, line: 50, baseType: !2602, size: 64)
!2602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2603, size: 64, elements: !307)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2592, file: !290, line: 68, baseType: !2605, size: 32, offset: 64)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !2607)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !2608)
!2608 = !{!2609}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2607, file: !225, line: 232, baseType: !2610, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !2575)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2592, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2592, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!2613 = !DIDerivedType(tag: DW_TAG_member, scope: !2592, file: !290, line: 90, baseType: !2614, size: 16, offset: 112)
!2614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2592, file: !290, line: 90, size: 16, elements: !2615)
!2615 = !{!2616, !2621}
!2616 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !290, line: 91, baseType: !2617, size: 16)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2614, file: !290, line: 91, size: 16, elements: !2618)
!2618 = !{!2619, !2620}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2617, file: !290, line: 96, baseType: !320, size: 8)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2617, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2614, file: !290, line: 100, baseType: !272, size: 16)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2592, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2592, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2592, file: !290, line: 131, baseType: !2625, size: 192, offset: 192)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !2626)
!2626 = !{!2627, !2628, !2634}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2625, file: !225, line: 245, baseType: !2574, size: 64)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2625, file: !225, line: 246, baseType: !2629, size: 32, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !2630)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{null, !2633}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2625, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2589, file: !290, line: 250, baseType: !2636, size: 288, offset: 384)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !2637)
!2637 = !{!2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2636, file: !339, line: 26, baseType: !158, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2636, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2636, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2636, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2636, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2636, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2636, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2636, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2636, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2589, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2589, file: !290, line: 256, baseType: !2606, size: 64, offset: 704)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2589, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2589, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2589, file: !290, line: 325, baseType: !2652, size: 32, offset: 1056)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !2654)
!2654 = !{!2655, !2661, !2662}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2653, file: !221, line: 5074, baseType: !2656, size: 96)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !2657)
!2657 = !{!2658, !2659, !2660}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2656, file: !363, line: 57, baseType: !366, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2656, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2656, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2653, file: !221, line: 5075, baseType: !2606, size: 64, offset: 96)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2653, file: !221, line: 5076, baseType: !2663, offset: 160)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2589, file: !290, line: 343, baseType: !2665, size: 64, offset: 1088)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !2666)
!2666 = !{!2667, !2668}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2665, file: !339, line: 63, baseType: !158, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2665, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!2669 = !{!2568}
!2670 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2671 = !DIGlobalVariableExpression(var: !2672, expr: !DIExpression())
!2672 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2673, file: !2776, line: 56, type: !2765, isLocal: false, isDefinition: true)
!2673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2674, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2675, globals: !2773, splitDebugInlining: false, nameTableKind: None)
!2674 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2675 = !{!2676, !253, !133, !2771, !178, !202, !413, !111, !158, !207, !2772}
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !2678)
!2678 = !{!2679, !2737, !2749, !2750, !2751, !2752, !2753, !2766}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2677, file: !290, line: 247, baseType: !2680, size: 384)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !2681)
!2681 = !{!2682, !2706, !2713, !2714, !2715, !2724, !2725, !2726}
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2680, file: !290, line: 60, baseType: !2683, size: 64)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2680, file: !290, line: 60, size: 64, elements: !2684)
!2684 = !{!2685, !2700}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2683, file: !290, line: 61, baseType: !2686, size: 64)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !2687)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !2688)
!2688 = !{!2689, !2695}
!2689 = !DIDerivedType(tag: DW_TAG_member, scope: !2687, file: !230, line: 38, baseType: !2690, size: 32)
!2690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2687, file: !230, line: 38, size: 32, elements: !2691)
!2691 = !{!2692, !2694}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2690, file: !230, line: 39, baseType: !2693, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2690, file: !230, line: 40, baseType: !2693, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, scope: !2687, file: !230, line: 42, baseType: !2696, size: 32, offset: 32)
!2696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2687, file: !230, line: 42, size: 32, elements: !2697)
!2697 = !{!2698, !2699}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2696, file: !230, line: 43, baseType: !2693, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2696, file: !230, line: 44, baseType: !2693, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2683, file: !290, line: 62, baseType: !2701, size: 64)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !2702)
!2702 = !{!2703}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2701, file: !302, line: 50, baseType: !2704, size: 64)
!2704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2705, size: 64, elements: !307)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2680, file: !290, line: 68, baseType: !2707, size: 32, offset: 64)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !2709)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !2710)
!2710 = !{!2711}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2709, file: !225, line: 232, baseType: !2712, size: 64)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !2687)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2680, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2680, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!2715 = !DIDerivedType(tag: DW_TAG_member, scope: !2680, file: !290, line: 90, baseType: !2716, size: 16, offset: 112)
!2716 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2680, file: !290, line: 90, size: 16, elements: !2717)
!2717 = !{!2718, !2723}
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !290, line: 91, baseType: !2719, size: 16)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2716, file: !290, line: 91, size: 16, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2719, file: !290, line: 96, baseType: !320, size: 8)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2719, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2716, file: !290, line: 100, baseType: !272, size: 16)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2680, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2680, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2680, file: !290, line: 131, baseType: !2727, size: 192, offset: 192)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !2728)
!2728 = !{!2729, !2730, !2736}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2727, file: !225, line: 245, baseType: !2686, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2727, file: !225, line: 246, baseType: !2731, size: 32, offset: 64)
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !2732)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{null, !2735}
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2727, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2677, file: !290, line: 250, baseType: !2738, size: 288, offset: 384)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !2739)
!2739 = !{!2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2738, file: !339, line: 26, baseType: !158, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2738, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2738, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2738, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2738, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2738, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2738, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2738, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2738, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2677, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2677, file: !290, line: 256, baseType: !2708, size: 64, offset: 704)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2677, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2677, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2677, file: !290, line: 325, baseType: !2754, size: 32, offset: 1056)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 32)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !2756)
!2756 = !{!2757, !2763, !2764}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2755, file: !221, line: 5074, baseType: !2758, size: 96)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !2759)
!2759 = !{!2760, !2761, !2762}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2758, file: !363, line: 57, baseType: !366, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2758, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2758, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2755, file: !221, line: 5075, baseType: !2708, size: 64, offset: 96)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2755, file: !221, line: 5076, baseType: !2765, offset: 160)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2677, file: !290, line: 343, baseType: !2767, size: 64, offset: 1088)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !2768)
!2768 = !{!2769, !2770}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2767, file: !339, line: 63, baseType: !158, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2767, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 32)
!2773 = !{!2671, !2774, !2777, !2779}
!2774 = !DIGlobalVariableExpression(var: !2775, expr: !DIExpression())
!2775 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2673, file: !2776, line: 404, type: !111, isLocal: true, isDefinition: true)
!2776 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2777 = !DIGlobalVariableExpression(var: !2778, expr: !DIExpression())
!2778 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2673, file: !2776, line: 405, type: !111, isLocal: true, isDefinition: true)
!2779 = !DIGlobalVariableExpression(var: !2780, expr: !DIExpression())
!2780 = distinct !DIGlobalVariable(name: "pending_current", scope: !2673, file: !2776, line: 425, type: !2676, isLocal: true, isDefinition: true)
!2781 = !DIGlobalVariableExpression(var: !2782, expr: !DIExpression())
!2782 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2783, file: !2813, line: 15, type: !207, isLocal: true, isDefinition: true)
!2783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2785, globals: !2810, splitDebugInlining: false, nameTableKind: None)
!2784 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2785 = !{!202, !133, !413, !158, !207, !111, !2786, !253, !204}
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 32)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !2788)
!2788 = !{!2789, !2804, !2809}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2787, file: !225, line: 245, baseType: !2790, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !2791)
!2791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !2792)
!2792 = !{!2793, !2799}
!2793 = !DIDerivedType(tag: DW_TAG_member, scope: !2791, file: !230, line: 38, baseType: !2794, size: 32)
!2794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2791, file: !230, line: 38, size: 32, elements: !2795)
!2795 = !{!2796, !2798}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2794, file: !230, line: 39, baseType: !2797, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2794, file: !230, line: 40, baseType: !2797, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, scope: !2791, file: !230, line: 42, baseType: !2800, size: 32, offset: 32)
!2800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2791, file: !230, line: 42, size: 32, elements: !2801)
!2801 = !{!2802, !2803}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2800, file: !230, line: 43, baseType: !2797, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2800, file: !230, line: 44, baseType: !2797, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2787, file: !225, line: 246, baseType: !2805, size: 32, offset: 64)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !2806)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 32)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{null, !2786}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2787, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!2810 = !{!2781, !2811, !2815, !2817}
!2811 = !DIGlobalVariableExpression(var: !2812, expr: !DIExpression())
!2812 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2783, file: !2813, line: 19, type: !2814, isLocal: true, isDefinition: true)
!2813 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!2815 = !DIGlobalVariableExpression(var: !2816, expr: !DIExpression())
!2816 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2783, file: !2813, line: 25, type: !111, isLocal: true, isDefinition: true)
!2817 = !DIGlobalVariableExpression(var: !2818, expr: !DIExpression())
!2818 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2783, file: !2813, line: 17, type: !2819, isLocal: true, isDefinition: true)
!2819 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !2791)
!2820 = !DIGlobalVariableExpression(var: !2821, expr: !DIExpression())
!2821 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2822, file: !2841, line: 55, type: !2842, isLocal: true, isDefinition: true, align: 32)
!2822 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2823, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2824, globals: !2840, splitDebugInlining: false, nameTableKind: None)
!2823 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2824 = !{!133, !202, !111, !2825}
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !2827)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !2828)
!2828 = !{!2829, !2835}
!2829 = !DIDerivedType(tag: DW_TAG_member, scope: !2827, file: !230, line: 38, baseType: !2830, size: 32)
!2830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2827, file: !230, line: 38, size: 32, elements: !2831)
!2831 = !{!2832, !2834}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2830, file: !230, line: 39, baseType: !2833, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2830, file: !230, line: 40, baseType: !2833, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, scope: !2827, file: !230, line: 42, baseType: !2836, size: 32, offset: 32)
!2836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2827, file: !230, line: 42, size: 32, elements: !2837)
!2837 = !{!2838, !2839}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2836, file: !230, line: 43, baseType: !2833, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2836, file: !230, line: 44, baseType: !2833, size: 32)
!2840 = !{!2820}
!2841 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2843)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1300, line: 51, size: 64, elements: !2844)
!2844 = !{!2845, !2846}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2843, file: !1300, line: 60, baseType: !1303, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2843, file: !1300, line: 65, baseType: !1306, size: 32, offset: 32)
!2847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !877, splitDebugInlining: false, nameTableKind: None)
!2848 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !877, splitDebugInlining: false, nameTableKind: None)
!2850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2852, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2853, retainedTypes: !2861, splitDebugInlining: false, nameTableKind: None)
!2852 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2853 = !{!30, !2854}
!2854 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2855, line: 54, baseType: !32, size: 32, elements: !2856)
!2855 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2856 = !{!2857, !2858, !2859, !2860}
!2857 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2858 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2859 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2860 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2861 = !{!133, !249, !178, !24, !2862, !22, !2868, !111, !1852, !2883}
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2855, line: 58, baseType: !2864)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2855, line: 58, size: 64, elements: !2865)
!2865 = !{!2866}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2864, file: !2855, line: 58, baseType: !2867, size: 64)
!2867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !2058)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 32)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2855, line: 68, size: 128, elements: !2870)
!2870 = !{!2871, !2874, !2875, !2876}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2869, file: !2855, line: 69, baseType: !2872, size: 64)
!2872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2873, size: 64, elements: !307)
!2873 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2855, line: 61, baseType: !158)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2869, file: !2855, line: 70, baseType: !2873, size: 32, offset: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2869, file: !2855, line: 71, baseType: !158, size: 32, offset: 96)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2869, file: !2855, line: 77, baseType: !2877, offset: 128)
!2877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2878, elements: !2881)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2855, line: 64, size: 32, elements: !2879)
!2879 = !{!2880}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2878, file: !2855, line: 65, baseType: !2873, size: 32)
!2881 = !{!2882}
!2882 = !DISubrange(count: 0)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!2884 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2885, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2886, retainedTypes: !2906, splitDebugInlining: false, nameTableKind: None)
!2885 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2886 = !{!2887, !2895}
!2887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2888, line: 69, baseType: !32, size: 32, elements: !2889)
!2888 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2889 = !{!2890, !2891, !2892, !2893, !2894}
!2890 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2891 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2892 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2893 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2894 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2895 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2888, line: 56, baseType: !32, size: 32, elements: !2896)
!2896 = !{!2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905}
!2897 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2898 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2899 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2900 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2901 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2902 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2903 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2904 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2905 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2906 = !{!111, !2887, !2895, !2907, !321, !139, !2909, !2910, !129, !273, !118, !249, !133, !22, !32, !860, !2912, !2913, !862, !861, !205, !863, !2908, !2914, !2915, !2916, !2917}
!2907 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2888, line: 31, baseType: !2908)
!2908 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !205)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !250, line: 329, baseType: !32)
!2910 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2888, line: 32, baseType: !2911)
!2911 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !208)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !250, line: 145, baseType: !111)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 32)
!2918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2919, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2919 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2920 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2921, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2922, splitDebugInlining: false, nameTableKind: None)
!2921 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2922 = !{!118, !129, !111, !32}
!2923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2925, retainedTypes: !877, splitDebugInlining: false, nameTableKind: None)
!2924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2925 = !{!2926, !30}
!2926 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2927, line: 27, baseType: !32, size: 32, elements: !2928)
!2927 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2928 = !{!2929, !2930, !2931, !2932, !2933}
!2929 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2930 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2931 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2932 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2933 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2934 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2935, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2936, retainedTypes: !2937, splitDebugInlining: false, nameTableKind: None)
!2935 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2936 = !{!1902, !2926, !30}
!2937 = !{!2938, !2939, !133, !111, !413, !158, !128, !2956}
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !1173, line: 249, baseType: !1902)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2045, line: 426, baseType: !2941)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 411, size: 28704, elements: !2942)
!2942 = !{!2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2941, file: !2045, line: 413, baseType: !2057, size: 256)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2941, file: !2045, line: 414, baseType: !2061, size: 768, offset: 256)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2941, file: !2045, line: 415, baseType: !2057, size: 256, offset: 1024)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2941, file: !2045, line: 416, baseType: !2061, size: 768, offset: 1280)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2941, file: !2045, line: 417, baseType: !2057, size: 256, offset: 2048)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2941, file: !2045, line: 418, baseType: !2061, size: 768, offset: 2304)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2941, file: !2045, line: 419, baseType: !2057, size: 256, offset: 3072)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2941, file: !2045, line: 420, baseType: !2061, size: 768, offset: 3328)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2941, file: !2045, line: 421, baseType: !2057, size: 256, offset: 4096)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2941, file: !2045, line: 422, baseType: !2072, size: 1792, offset: 4352)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2941, file: !2045, line: 423, baseType: !2076, size: 1920, offset: 6144)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2941, file: !2045, line: 424, baseType: !2081, size: 20608, offset: 8064)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2941, file: !2045, line: 425, baseType: !1177, size: 32, offset: 28672)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2045, line: 468, baseType: !2958)
!2958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 445, size: 1120, elements: !2959)
!2959 = !{!2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2958, file: !2045, line: 447, baseType: !1248, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2958, file: !2045, line: 448, baseType: !1177, size: 32, offset: 32)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2958, file: !2045, line: 449, baseType: !1177, size: 32, offset: 64)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2958, file: !2045, line: 450, baseType: !1177, size: 32, offset: 96)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2958, file: !2045, line: 451, baseType: !1177, size: 32, offset: 128)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2958, file: !2045, line: 452, baseType: !1177, size: 32, offset: 160)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2958, file: !2045, line: 453, baseType: !2096, size: 96, offset: 192)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2958, file: !2045, line: 454, baseType: !1177, size: 32, offset: 288)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2958, file: !2045, line: 455, baseType: !1177, size: 32, offset: 320)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2958, file: !2045, line: 456, baseType: !1177, size: 32, offset: 352)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2958, file: !2045, line: 457, baseType: !1177, size: 32, offset: 384)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2958, file: !2045, line: 458, baseType: !1177, size: 32, offset: 416)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2958, file: !2045, line: 459, baseType: !1177, size: 32, offset: 448)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2958, file: !2045, line: 460, baseType: !1177, size: 32, offset: 480)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2958, file: !2045, line: 461, baseType: !2107, size: 64, offset: 512)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2958, file: !2045, line: 462, baseType: !1248, size: 32, offset: 576)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2958, file: !2045, line: 463, baseType: !1248, size: 32, offset: 608)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2958, file: !2045, line: 464, baseType: !2111, size: 128, offset: 640)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2958, file: !2045, line: 465, baseType: !2115, size: 160, offset: 768)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2958, file: !2045, line: 466, baseType: !2119, size: 160, offset: 928)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2958, file: !2045, line: 467, baseType: !1177, size: 32, offset: 1088)
!2981 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2982, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !877, splitDebugInlining: false, nameTableKind: None)
!2982 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2984, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2985, splitDebugInlining: false, nameTableKind: None)
!2984 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!2985 = !{!133, !111, !22, !2986}
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2045, line: 468, baseType: !2988)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 445, size: 1120, elements: !2989)
!2989 = !{!2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2988, file: !2045, line: 447, baseType: !1248, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2988, file: !2045, line: 448, baseType: !1177, size: 32, offset: 32)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2988, file: !2045, line: 449, baseType: !1177, size: 32, offset: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2988, file: !2045, line: 450, baseType: !1177, size: 32, offset: 96)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2988, file: !2045, line: 451, baseType: !1177, size: 32, offset: 128)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2988, file: !2045, line: 452, baseType: !1177, size: 32, offset: 160)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2988, file: !2045, line: 453, baseType: !2096, size: 96, offset: 192)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2988, file: !2045, line: 454, baseType: !1177, size: 32, offset: 288)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2988, file: !2045, line: 455, baseType: !1177, size: 32, offset: 320)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2988, file: !2045, line: 456, baseType: !1177, size: 32, offset: 352)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2988, file: !2045, line: 457, baseType: !1177, size: 32, offset: 384)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2988, file: !2045, line: 458, baseType: !1177, size: 32, offset: 416)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2988, file: !2045, line: 459, baseType: !1177, size: 32, offset: 448)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2988, file: !2045, line: 460, baseType: !1177, size: 32, offset: 480)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2988, file: !2045, line: 461, baseType: !2107, size: 64, offset: 512)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2988, file: !2045, line: 462, baseType: !1248, size: 32, offset: 576)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2988, file: !2045, line: 463, baseType: !1248, size: 32, offset: 608)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2988, file: !2045, line: 464, baseType: !2111, size: 128, offset: 640)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2988, file: !2045, line: 465, baseType: !2115, size: 160, offset: 768)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2988, file: !2045, line: 466, baseType: !2119, size: 160, offset: 928)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2988, file: !2045, line: 467, baseType: !1177, size: 32, offset: 1088)
!3011 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3012, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3013, splitDebugInlining: false, nameTableKind: None)
!3012 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3013 = !{!3014, !133, !111}
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2045, line: 468, baseType: !3016)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 445, size: 1120, elements: !3017)
!3017 = !{!3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3016, file: !2045, line: 447, baseType: !1248, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3016, file: !2045, line: 448, baseType: !1177, size: 32, offset: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3016, file: !2045, line: 449, baseType: !1177, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3016, file: !2045, line: 450, baseType: !1177, size: 32, offset: 96)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3016, file: !2045, line: 451, baseType: !1177, size: 32, offset: 128)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3016, file: !2045, line: 452, baseType: !1177, size: 32, offset: 160)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3016, file: !2045, line: 453, baseType: !2096, size: 96, offset: 192)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3016, file: !2045, line: 454, baseType: !1177, size: 32, offset: 288)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3016, file: !2045, line: 455, baseType: !1177, size: 32, offset: 320)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3016, file: !2045, line: 456, baseType: !1177, size: 32, offset: 352)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3016, file: !2045, line: 457, baseType: !1177, size: 32, offset: 384)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3016, file: !2045, line: 458, baseType: !1177, size: 32, offset: 416)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3016, file: !2045, line: 459, baseType: !1177, size: 32, offset: 448)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3016, file: !2045, line: 460, baseType: !1177, size: 32, offset: 480)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3016, file: !2045, line: 461, baseType: !2107, size: 64, offset: 512)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3016, file: !2045, line: 462, baseType: !1248, size: 32, offset: 576)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3016, file: !2045, line: 463, baseType: !1248, size: 32, offset: 608)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3016, file: !2045, line: 464, baseType: !2111, size: 128, offset: 640)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3016, file: !2045, line: 465, baseType: !2115, size: 160, offset: 768)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3016, file: !2045, line: 466, baseType: !2119, size: 160, offset: 928)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3016, file: !2045, line: 467, baseType: !1177, size: 32, offset: 1088)
!3039 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3040, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3041, splitDebugInlining: false, nameTableKind: None)
!3040 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3041 = !{!3042, !158, !133, !111}
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 32)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3044, line: 98, size: 256, elements: !3045)
!3044 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3045 = !{!3046, !3051, !3056, !3061, !3066, !3071, !3076, !3081}
!3046 = !DIDerivedType(tag: DW_TAG_member, scope: !3043, file: !3044, line: 99, baseType: !3047, size: 32)
!3047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3043, file: !3044, line: 99, size: 32, elements: !3048)
!3048 = !{!3049, !3050}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3047, file: !3044, line: 99, baseType: !158, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3047, file: !3044, line: 99, baseType: !158, size: 32)
!3051 = !DIDerivedType(tag: DW_TAG_member, scope: !3043, file: !3044, line: 100, baseType: !3052, size: 32, offset: 32)
!3052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3043, file: !3044, line: 100, size: 32, elements: !3053)
!3053 = !{!3054, !3055}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3052, file: !3044, line: 100, baseType: !158, size: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3052, file: !3044, line: 100, baseType: !158, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, scope: !3043, file: !3044, line: 101, baseType: !3057, size: 32, offset: 64)
!3057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3043, file: !3044, line: 101, size: 32, elements: !3058)
!3058 = !{!3059, !3060}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3057, file: !3044, line: 101, baseType: !158, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3057, file: !3044, line: 101, baseType: !158, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, scope: !3043, file: !3044, line: 102, baseType: !3062, size: 32, offset: 96)
!3062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3043, file: !3044, line: 102, size: 32, elements: !3063)
!3063 = !{!3064, !3065}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3062, file: !3044, line: 102, baseType: !158, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3062, file: !3044, line: 102, baseType: !158, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, scope: !3043, file: !3044, line: 103, baseType: !3067, size: 32, offset: 128)
!3067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3043, file: !3044, line: 103, size: 32, elements: !3068)
!3068 = !{!3069, !3070}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3067, file: !3044, line: 103, baseType: !158, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3067, file: !3044, line: 103, baseType: !158, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_member, scope: !3043, file: !3044, line: 104, baseType: !3072, size: 32, offset: 160)
!3072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3043, file: !3044, line: 104, size: 32, elements: !3073)
!3073 = !{!3074, !3075}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3072, file: !3044, line: 104, baseType: !158, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3072, file: !3044, line: 104, baseType: !158, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, scope: !3043, file: !3044, line: 105, baseType: !3077, size: 32, offset: 192)
!3077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3043, file: !3044, line: 105, size: 32, elements: !3078)
!3078 = !{!3079, !3080}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3077, file: !3044, line: 105, baseType: !158, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3077, file: !3044, line: 105, baseType: !158, size: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3043, file: !3044, line: 106, baseType: !158, size: 32, offset: 224)
!3082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2925, retainedTypes: !3084, splitDebugInlining: false, nameTableKind: None)
!3083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3084 = !{!3085, !133, !111, !3110, !2883, !158}
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2045, line: 468, baseType: !3087)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 445, size: 1120, elements: !3088)
!3088 = !{!3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3087, file: !2045, line: 447, baseType: !1248, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3087, file: !2045, line: 448, baseType: !1177, size: 32, offset: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3087, file: !2045, line: 449, baseType: !1177, size: 32, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3087, file: !2045, line: 450, baseType: !1177, size: 32, offset: 96)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3087, file: !2045, line: 451, baseType: !1177, size: 32, offset: 128)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3087, file: !2045, line: 452, baseType: !1177, size: 32, offset: 160)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3087, file: !2045, line: 453, baseType: !2096, size: 96, offset: 192)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3087, file: !2045, line: 454, baseType: !1177, size: 32, offset: 288)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3087, file: !2045, line: 455, baseType: !1177, size: 32, offset: 320)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3087, file: !2045, line: 456, baseType: !1177, size: 32, offset: 352)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3087, file: !2045, line: 457, baseType: !1177, size: 32, offset: 384)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3087, file: !2045, line: 458, baseType: !1177, size: 32, offset: 416)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3087, file: !2045, line: 459, baseType: !1177, size: 32, offset: 448)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3087, file: !2045, line: 460, baseType: !1177, size: 32, offset: 480)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3087, file: !2045, line: 461, baseType: !2107, size: 64, offset: 512)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3087, file: !2045, line: 462, baseType: !1248, size: 32, offset: 576)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3087, file: !2045, line: 463, baseType: !1248, size: 32, offset: 608)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3087, file: !2045, line: 464, baseType: !2111, size: 128, offset: 640)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3087, file: !2045, line: 465, baseType: !2115, size: 160, offset: 768)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3087, file: !2045, line: 466, baseType: !2119, size: 160, offset: 928)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3087, file: !2045, line: 467, baseType: !1177, size: 32, offset: 1088)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 32)
!3111 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3044, line: 141, baseType: !3112)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3044, line: 97, size: 256, elements: !3113)
!3113 = !{!3114}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3112, file: !3044, line: 107, baseType: !3115, size: 256)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3044, line: 98, size: 256, elements: !3116)
!3116 = !{!3117, !3122, !3127, !3132, !3137, !3142, !3147, !3152}
!3117 = !DIDerivedType(tag: DW_TAG_member, scope: !3115, file: !3044, line: 99, baseType: !3118, size: 32)
!3118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3115, file: !3044, line: 99, size: 32, elements: !3119)
!3119 = !{!3120, !3121}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3118, file: !3044, line: 99, baseType: !158, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3118, file: !3044, line: 99, baseType: !158, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_member, scope: !3115, file: !3044, line: 100, baseType: !3123, size: 32, offset: 32)
!3123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3115, file: !3044, line: 100, size: 32, elements: !3124)
!3124 = !{!3125, !3126}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3123, file: !3044, line: 100, baseType: !158, size: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3123, file: !3044, line: 100, baseType: !158, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, scope: !3115, file: !3044, line: 101, baseType: !3128, size: 32, offset: 64)
!3128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3115, file: !3044, line: 101, size: 32, elements: !3129)
!3129 = !{!3130, !3131}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3128, file: !3044, line: 101, baseType: !158, size: 32)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3128, file: !3044, line: 101, baseType: !158, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, scope: !3115, file: !3044, line: 102, baseType: !3133, size: 32, offset: 96)
!3133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3115, file: !3044, line: 102, size: 32, elements: !3134)
!3134 = !{!3135, !3136}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3133, file: !3044, line: 102, baseType: !158, size: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3133, file: !3044, line: 102, baseType: !158, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, scope: !3115, file: !3044, line: 103, baseType: !3138, size: 32, offset: 128)
!3138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3115, file: !3044, line: 103, size: 32, elements: !3139)
!3139 = !{!3140, !3141}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3138, file: !3044, line: 103, baseType: !158, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3138, file: !3044, line: 103, baseType: !158, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, scope: !3115, file: !3044, line: 104, baseType: !3143, size: 32, offset: 160)
!3143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3115, file: !3044, line: 104, size: 32, elements: !3144)
!3144 = !{!3145, !3146}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3143, file: !3044, line: 104, baseType: !158, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3143, file: !3044, line: 104, baseType: !158, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, scope: !3115, file: !3044, line: 105, baseType: !3148, size: 32, offset: 192)
!3148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3115, file: !3044, line: 105, size: 32, elements: !3149)
!3149 = !{!3150, !3151}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3148, file: !3044, line: 105, baseType: !158, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3148, file: !3044, line: 105, baseType: !158, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3115, file: !3044, line: 106, baseType: !158, size: 32, offset: 224)
!3153 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3154, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1901, retainedTypes: !3155, splitDebugInlining: false, nameTableKind: None)
!3154 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3155 = !{!2938, !413, !128, !158, !3156, !3173}
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2045, line: 426, baseType: !3158)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 411, size: 28704, elements: !3159)
!3159 = !{!3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3158, file: !2045, line: 413, baseType: !2057, size: 256)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3158, file: !2045, line: 414, baseType: !2061, size: 768, offset: 256)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3158, file: !2045, line: 415, baseType: !2057, size: 256, offset: 1024)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3158, file: !2045, line: 416, baseType: !2061, size: 768, offset: 1280)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3158, file: !2045, line: 417, baseType: !2057, size: 256, offset: 2048)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3158, file: !2045, line: 418, baseType: !2061, size: 768, offset: 2304)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3158, file: !2045, line: 419, baseType: !2057, size: 256, offset: 3072)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3158, file: !2045, line: 420, baseType: !2061, size: 768, offset: 3328)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3158, file: !2045, line: 421, baseType: !2057, size: 256, offset: 4096)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3158, file: !2045, line: 422, baseType: !2072, size: 1792, offset: 4352)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3158, file: !2045, line: 423, baseType: !2076, size: 1920, offset: 6144)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3158, file: !2045, line: 424, baseType: !2081, size: 20608, offset: 8064)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3158, file: !2045, line: 425, baseType: !1177, size: 32, offset: 28672)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2045, line: 468, baseType: !3175)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 445, size: 1120, elements: !3176)
!3176 = !{!3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3175, file: !2045, line: 447, baseType: !1248, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3175, file: !2045, line: 448, baseType: !1177, size: 32, offset: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3175, file: !2045, line: 449, baseType: !1177, size: 32, offset: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3175, file: !2045, line: 450, baseType: !1177, size: 32, offset: 96)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3175, file: !2045, line: 451, baseType: !1177, size: 32, offset: 128)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3175, file: !2045, line: 452, baseType: !1177, size: 32, offset: 160)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3175, file: !2045, line: 453, baseType: !2096, size: 96, offset: 192)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3175, file: !2045, line: 454, baseType: !1177, size: 32, offset: 288)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3175, file: !2045, line: 455, baseType: !1177, size: 32, offset: 320)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3175, file: !2045, line: 456, baseType: !1177, size: 32, offset: 352)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3175, file: !2045, line: 457, baseType: !1177, size: 32, offset: 384)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3175, file: !2045, line: 458, baseType: !1177, size: 32, offset: 416)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3175, file: !2045, line: 459, baseType: !1177, size: 32, offset: 448)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3175, file: !2045, line: 460, baseType: !1177, size: 32, offset: 480)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3175, file: !2045, line: 461, baseType: !2107, size: 64, offset: 512)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3175, file: !2045, line: 462, baseType: !1248, size: 32, offset: 576)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3175, file: !2045, line: 463, baseType: !1248, size: 32, offset: 608)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3175, file: !2045, line: 464, baseType: !2111, size: 128, offset: 640)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3175, file: !2045, line: 465, baseType: !2115, size: 160, offset: 768)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3175, file: !2045, line: 466, baseType: !2119, size: 160, offset: 928)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3175, file: !2045, line: 467, baseType: !1177, size: 32, offset: 1088)
!3198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3199, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3200, splitDebugInlining: false, nameTableKind: None)
!3199 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3200 = !{!3201, !133, !111}
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2045, line: 468, baseType: !3203)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2045, line: 445, size: 1120, elements: !3204)
!3204 = !{!3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3203, file: !2045, line: 447, baseType: !1248, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3203, file: !2045, line: 448, baseType: !1177, size: 32, offset: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3203, file: !2045, line: 449, baseType: !1177, size: 32, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3203, file: !2045, line: 450, baseType: !1177, size: 32, offset: 96)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3203, file: !2045, line: 451, baseType: !1177, size: 32, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3203, file: !2045, line: 452, baseType: !1177, size: 32, offset: 160)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3203, file: !2045, line: 453, baseType: !2096, size: 96, offset: 192)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3203, file: !2045, line: 454, baseType: !1177, size: 32, offset: 288)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3203, file: !2045, line: 455, baseType: !1177, size: 32, offset: 320)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3203, file: !2045, line: 456, baseType: !1177, size: 32, offset: 352)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3203, file: !2045, line: 457, baseType: !1177, size: 32, offset: 384)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3203, file: !2045, line: 458, baseType: !1177, size: 32, offset: 416)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3203, file: !2045, line: 459, baseType: !1177, size: 32, offset: 448)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3203, file: !2045, line: 460, baseType: !1177, size: 32, offset: 480)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3203, file: !2045, line: 461, baseType: !2107, size: 64, offset: 512)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3203, file: !2045, line: 462, baseType: !1248, size: 32, offset: 576)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3203, file: !2045, line: 463, baseType: !1248, size: 32, offset: 608)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3203, file: !2045, line: 464, baseType: !2111, size: 128, offset: 640)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3203, file: !2045, line: 465, baseType: !2115, size: 160, offset: 768)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3203, file: !2045, line: 466, baseType: !2119, size: 160, offset: 928)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3203, file: !2045, line: 467, baseType: !1177, size: 32, offset: 1088)
!3226 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3227, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3228, splitDebugInlining: false, nameTableKind: None)
!3227 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3228 = !{!120, !253, !249, !140, !3229, !129, !133}
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!3231 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3232, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3232 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3234, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3235, splitDebugInlining: false, nameTableKind: None)
!3234 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3235 = !{!1295, !158}
!3236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3237, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3238, retainedTypes: !3248, splitDebugInlining: false, nameTableKind: None)
!3237 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3238 = !{!3239}
!3239 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !3240, line: 62, baseType: !32, size: 32, elements: !3241)
!3240 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3241 = !{!3242, !3243, !3244, !3245, !3246, !3247}
!3242 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!3243 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!3244 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!3245 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!3246 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!3247 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!3248 = !{!3249, !3312, !158, !131, !1295}
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !1173, line: 8619, baseType: !3251)
!3251 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 8563, size: 3072, elements: !3252)
!3252 = !{!3253, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3251, file: !1173, line: 8564, baseType: !3254, size: 768)
!3254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 768, elements: !3255)
!3255 = !{!3256}
!3256 = !DISubrange(count: 96)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !3251, file: !1173, line: 8565, baseType: !1177, size: 32, offset: 768)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !3251, file: !1173, line: 8566, baseType: !1177, size: 32, offset: 800)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !3251, file: !1173, line: 8567, baseType: !1177, size: 32, offset: 832)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !3251, file: !1173, line: 8568, baseType: !1177, size: 32, offset: 864)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !3251, file: !1173, line: 8569, baseType: !1177, size: 32, offset: 896)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !3251, file: !1173, line: 8570, baseType: !1177, size: 32, offset: 928)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !3251, file: !1173, line: 8571, baseType: !1177, size: 32, offset: 960)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !3251, file: !1173, line: 8572, baseType: !1177, size: 32, offset: 992)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !3251, file: !1173, line: 8573, baseType: !1177, size: 32, offset: 1024)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3251, file: !1173, line: 8574, baseType: !3267, size: 96, offset: 1056)
!3267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 96, elements: !2097)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !3251, file: !1173, line: 8575, baseType: !1177, size: 32, offset: 1152)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3251, file: !1173, line: 8576, baseType: !3267, size: 96, offset: 1184)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !3251, file: !1173, line: 8577, baseType: !1177, size: 32, offset: 1280)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !3251, file: !1173, line: 8578, baseType: !3267, size: 96, offset: 1312)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !3251, file: !1173, line: 8579, baseType: !1177, size: 32, offset: 1408)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !3251, file: !1173, line: 8580, baseType: !1177, size: 32, offset: 1440)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !3251, file: !1173, line: 8581, baseType: !1177, size: 32, offset: 1472)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !3251, file: !1173, line: 8582, baseType: !1177, size: 32, offset: 1504)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !3251, file: !1173, line: 8583, baseType: !1177, size: 32, offset: 1536)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !3251, file: !1173, line: 8584, baseType: !1177, size: 32, offset: 1568)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !3251, file: !1173, line: 8585, baseType: !1177, size: 32, offset: 1600)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !3251, file: !1173, line: 8586, baseType: !1177, size: 32, offset: 1632)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !3251, file: !1173, line: 8587, baseType: !1177, size: 32, offset: 1664)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !3251, file: !1173, line: 8588, baseType: !1177, size: 32, offset: 1696)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !3251, file: !1173, line: 8589, baseType: !1177, size: 32, offset: 1728)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !3251, file: !1173, line: 8590, baseType: !1177, size: 32, offset: 1760)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !3251, file: !1173, line: 8591, baseType: !1177, size: 32, offset: 1792)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !3251, file: !1173, line: 8592, baseType: !1177, size: 32, offset: 1824)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !3251, file: !1173, line: 8593, baseType: !1177, size: 32, offset: 1856)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !3251, file: !1173, line: 8594, baseType: !1177, size: 32, offset: 1888)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !3251, file: !1173, line: 8595, baseType: !1177, size: 32, offset: 1920)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !3251, file: !1173, line: 8596, baseType: !1177, size: 32, offset: 1952)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !3251, file: !1173, line: 8597, baseType: !1177, size: 32, offset: 1984)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !3251, file: !1173, line: 8598, baseType: !1177, size: 32, offset: 2016)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !3251, file: !1173, line: 8599, baseType: !1177, size: 32, offset: 2048)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !3251, file: !1173, line: 8600, baseType: !3267, size: 96, offset: 2080)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !3251, file: !1173, line: 8601, baseType: !1177, size: 32, offset: 2176)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !3251, file: !1173, line: 8602, baseType: !3267, size: 96, offset: 2208)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !3251, file: !1173, line: 8603, baseType: !1177, size: 32, offset: 2304)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !3251, file: !1173, line: 8604, baseType: !3267, size: 96, offset: 2336)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !3251, file: !1173, line: 8605, baseType: !1177, size: 32, offset: 2432)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !3251, file: !1173, line: 8606, baseType: !1177, size: 32, offset: 2464)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !3251, file: !1173, line: 8607, baseType: !1177, size: 32, offset: 2496)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !3251, file: !1173, line: 8608, baseType: !1177, size: 32, offset: 2528)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !3251, file: !1173, line: 8609, baseType: !1177, size: 32, offset: 2560)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !3251, file: !1173, line: 8610, baseType: !3267, size: 96, offset: 2592)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !3251, file: !1173, line: 8611, baseType: !1177, size: 32, offset: 2688)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !3251, file: !1173, line: 8612, baseType: !3267, size: 96, offset: 2720)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !3251, file: !1173, line: 8613, baseType: !1177, size: 32, offset: 2816)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !3251, file: !1173, line: 8614, baseType: !3267, size: 96, offset: 2848)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !3251, file: !1173, line: 8615, baseType: !1177, size: 32, offset: 2944)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !3251, file: !1173, line: 8616, baseType: !1177, size: 32, offset: 2976)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !3251, file: !1173, line: 8617, baseType: !1177, size: 32, offset: 3008)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !3251, file: !1173, line: 8618, baseType: !1177, size: 32, offset: 3040)
!3312 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!3313 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3314, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3315, splitDebugInlining: false, nameTableKind: None)
!3314 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3315 = !{!3316, !3320, !1442}
!3316 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !1443, line: 49, baseType: !32, size: 32, elements: !3317)
!3317 = !{!3318, !3319}
!3318 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!3319 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!3320 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !1443, line: 56, baseType: !32, size: 32, elements: !3321)
!3321 = !{!3322, !3323, !3324, !3325, !3326}
!3322 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!3323 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!3324 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!3325 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!3326 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!3327 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3328, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3329, retainedTypes: !3338, splitDebugInlining: false, nameTableKind: None)
!3328 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3329 = !{!3330, !3334}
!3330 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1624, line: 179, baseType: !32, size: 32, elements: !3331)
!3331 = !{!3332, !3333}
!3332 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!3333 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!3334 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1624, line: 194, baseType: !32, size: 32, elements: !3335)
!3335 = !{!3336, !3337}
!3336 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!3337 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!3338 = !{!158, !1852}
!3339 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3340, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3341, retainedTypes: !3352, splitDebugInlining: false, nameTableKind: None)
!3340 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3341 = !{!888, !3342}
!3342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !3240, line: 128, baseType: !32, size: 32, elements: !3343)
!3343 = !{!3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351}
!3344 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!3345 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!3346 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!3347 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!3348 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!3349 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!3350 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!3351 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!3352 = !{!158, !3353, !3405, !1295}
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 32)
!3354 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !1173, line: 4575, baseType: !3355)
!3355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 4532, size: 390144, elements: !3356)
!3356 = !{!3357, !3358, !3359, !3360, !3361, !3362, !3370, !3371, !3379, !3380}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !3355, file: !1173, line: 4533, baseType: !1177, size: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !3355, file: !1173, line: 4534, baseType: !1177, size: 32, offset: 32)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !3355, file: !1173, line: 4535, baseType: !1177, size: 32, offset: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !3355, file: !1173, line: 4536, baseType: !1177, size: 32, offset: 96)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3355, file: !1173, line: 4537, baseType: !1182, size: 16256, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !3355, file: !1173, line: 4543, baseType: !3363, size: 4224, offset: 16384)
!3363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3364, size: 4224, elements: !1193)
!3364 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3355, file: !1173, line: 4538, size: 128, elements: !3365)
!3365 = !{!3366, !3367, !3368, !3369}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !3364, file: !1173, line: 4539, baseType: !1177, size: 32)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !3364, file: !1173, line: 4540, baseType: !1177, size: 32, offset: 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !3364, file: !1173, line: 4541, baseType: !1177, size: 32, offset: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !3364, file: !1173, line: 4542, baseType: !1177, size: 32, offset: 96)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3355, file: !1173, line: 4544, baseType: !1196, size: 110464, offset: 20608)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !3355, file: !1173, line: 4550, baseType: !3372, size: 24448, offset: 131072)
!3372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3373, size: 24448, elements: !1207)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3355, file: !1173, line: 4545, size: 128, elements: !3374)
!3374 = !{!3375, !3376, !3377, !3378}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !3373, file: !1173, line: 4546, baseType: !1177, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !3373, file: !1173, line: 4547, baseType: !1177, size: 32, offset: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !3373, file: !1173, line: 4548, baseType: !1177, size: 32, offset: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !3373, file: !1173, line: 4549, baseType: !1177, size: 32, offset: 96)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3355, file: !1173, line: 4551, baseType: !1210, size: 106624, offset: 155520)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !3355, file: !1173, line: 4574, baseType: !3381, size: 128000, offset: 262144)
!3381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3382, size: 128000, elements: !1241)
!3382 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3355, file: !1173, line: 4552, size: 1024, elements: !3383)
!3383 = !{!3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !3382, file: !1173, line: 4553, baseType: !1177, size: 32)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !3382, file: !1173, line: 4554, baseType: !1177, size: 32, offset: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !3382, file: !1173, line: 4555, baseType: !1177, size: 32, offset: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !3382, file: !1173, line: 4556, baseType: !1177, size: 32, offset: 96)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !3382, file: !1173, line: 4557, baseType: !1177, size: 32, offset: 128)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !3382, file: !1173, line: 4558, baseType: !1177, size: 32, offset: 160)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !3382, file: !1173, line: 4559, baseType: !1177, size: 32, offset: 192)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !3382, file: !1173, line: 4560, baseType: !1177, size: 32, offset: 224)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !3382, file: !1173, line: 4561, baseType: !1177, size: 32, offset: 256)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !3382, file: !1173, line: 4562, baseType: !1177, size: 32, offset: 288)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !3382, file: !1173, line: 4563, baseType: !1177, size: 32, offset: 320)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !3382, file: !1173, line: 4564, baseType: !1177, size: 32, offset: 352)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !3382, file: !1173, line: 4565, baseType: !1177, size: 32, offset: 384)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !3382, file: !1173, line: 4566, baseType: !1177, size: 32, offset: 416)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !3382, file: !1173, line: 4567, baseType: !1177, size: 32, offset: 448)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !3382, file: !1173, line: 4568, baseType: !1177, size: 32, offset: 480)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3382, file: !1173, line: 4569, baseType: !1234, size: 384, offset: 512)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !3382, file: !1173, line: 4570, baseType: !1177, size: 32, offset: 896)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !3382, file: !1173, line: 4571, baseType: !1177, size: 32, offset: 928)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !3382, file: !1173, line: 4572, baseType: !1177, size: 32, offset: 960)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !3382, file: !1173, line: 4573, baseType: !1177, size: 32, offset: 992)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 32)
!3406 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !1173, line: 8619, baseType: !3407)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 8563, size: 3072, elements: !3408)
!3408 = !{!3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3407, file: !1173, line: 8564, baseType: !3254, size: 768)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !3407, file: !1173, line: 8565, baseType: !1177, size: 32, offset: 768)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !3407, file: !1173, line: 8566, baseType: !1177, size: 32, offset: 800)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !3407, file: !1173, line: 8567, baseType: !1177, size: 32, offset: 832)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !3407, file: !1173, line: 8568, baseType: !1177, size: 32, offset: 864)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !3407, file: !1173, line: 8569, baseType: !1177, size: 32, offset: 896)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !3407, file: !1173, line: 8570, baseType: !1177, size: 32, offset: 928)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !3407, file: !1173, line: 8571, baseType: !1177, size: 32, offset: 960)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !3407, file: !1173, line: 8572, baseType: !1177, size: 32, offset: 992)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !3407, file: !1173, line: 8573, baseType: !1177, size: 32, offset: 1024)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3407, file: !1173, line: 8574, baseType: !3267, size: 96, offset: 1056)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !3407, file: !1173, line: 8575, baseType: !1177, size: 32, offset: 1152)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3407, file: !1173, line: 8576, baseType: !3267, size: 96, offset: 1184)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !3407, file: !1173, line: 8577, baseType: !1177, size: 32, offset: 1280)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !3407, file: !1173, line: 8578, baseType: !3267, size: 96, offset: 1312)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !3407, file: !1173, line: 8579, baseType: !1177, size: 32, offset: 1408)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !3407, file: !1173, line: 8580, baseType: !1177, size: 32, offset: 1440)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !3407, file: !1173, line: 8581, baseType: !1177, size: 32, offset: 1472)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !3407, file: !1173, line: 8582, baseType: !1177, size: 32, offset: 1504)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !3407, file: !1173, line: 8583, baseType: !1177, size: 32, offset: 1536)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !3407, file: !1173, line: 8584, baseType: !1177, size: 32, offset: 1568)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !3407, file: !1173, line: 8585, baseType: !1177, size: 32, offset: 1600)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !3407, file: !1173, line: 8586, baseType: !1177, size: 32, offset: 1632)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !3407, file: !1173, line: 8587, baseType: !1177, size: 32, offset: 1664)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !3407, file: !1173, line: 8588, baseType: !1177, size: 32, offset: 1696)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !3407, file: !1173, line: 8589, baseType: !1177, size: 32, offset: 1728)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !3407, file: !1173, line: 8590, baseType: !1177, size: 32, offset: 1760)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !3407, file: !1173, line: 8591, baseType: !1177, size: 32, offset: 1792)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !3407, file: !1173, line: 8592, baseType: !1177, size: 32, offset: 1824)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !3407, file: !1173, line: 8593, baseType: !1177, size: 32, offset: 1856)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !3407, file: !1173, line: 8594, baseType: !1177, size: 32, offset: 1888)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !3407, file: !1173, line: 8595, baseType: !1177, size: 32, offset: 1920)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !3407, file: !1173, line: 8596, baseType: !1177, size: 32, offset: 1952)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !3407, file: !1173, line: 8597, baseType: !1177, size: 32, offset: 1984)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !3407, file: !1173, line: 8598, baseType: !1177, size: 32, offset: 2016)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !3407, file: !1173, line: 8599, baseType: !1177, size: 32, offset: 2048)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !3407, file: !1173, line: 8600, baseType: !3267, size: 96, offset: 2080)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !3407, file: !1173, line: 8601, baseType: !1177, size: 32, offset: 2176)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !3407, file: !1173, line: 8602, baseType: !3267, size: 96, offset: 2208)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !3407, file: !1173, line: 8603, baseType: !1177, size: 32, offset: 2304)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !3407, file: !1173, line: 8604, baseType: !3267, size: 96, offset: 2336)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !3407, file: !1173, line: 8605, baseType: !1177, size: 32, offset: 2432)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !3407, file: !1173, line: 8606, baseType: !1177, size: 32, offset: 2464)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !3407, file: !1173, line: 8607, baseType: !1177, size: 32, offset: 2496)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !3407, file: !1173, line: 8608, baseType: !1177, size: 32, offset: 2528)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !3407, file: !1173, line: 8609, baseType: !1177, size: 32, offset: 2560)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !3407, file: !1173, line: 8610, baseType: !3267, size: 96, offset: 2592)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !3407, file: !1173, line: 8611, baseType: !1177, size: 32, offset: 2688)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !3407, file: !1173, line: 8612, baseType: !3267, size: 96, offset: 2720)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !3407, file: !1173, line: 8613, baseType: !1177, size: 32, offset: 2816)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !3407, file: !1173, line: 8614, baseType: !3267, size: 96, offset: 2848)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !3407, file: !1173, line: 8615, baseType: !1177, size: 32, offset: 2944)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !3407, file: !1173, line: 8616, baseType: !1177, size: 32, offset: 2976)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !3407, file: !1173, line: 8617, baseType: !1177, size: 32, offset: 3008)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !3407, file: !1173, line: 8618, baseType: !1177, size: 32, offset: 3040)
!3464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3465, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3466, splitDebugInlining: false, nameTableKind: None)
!3465 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3466 = !{!133, !249}
!3467 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3468, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3469, retainedTypes: !877, splitDebugInlining: false, nameTableKind: None)
!3468 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3469 = !{!3470, !3477, !30}
!3470 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3471, line: 14, baseType: !32, size: 32, elements: !3472)
!3471 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3472 = !{!3473, !3474, !3475, !3476}
!3473 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3474 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3475 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3476 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3477 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3471, line: 42, baseType: !32, size: 32, elements: !3478)
!3478 = !{!3479, !3480, !3481, !3482, !3483, !3484}
!3479 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3480 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3481 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3482 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3483 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3484 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3485 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3486, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !877, splitDebugInlining: false, nameTableKind: None)
!3486 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3489, splitDebugInlining: false, nameTableKind: None)
!3488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3489 = !{!133, !111, !3490, !3505}
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 32)
!3491 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !3492)
!3492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !3493)
!3493 = !{!3494, !3500}
!3494 = !DIDerivedType(tag: DW_TAG_member, scope: !3492, file: !230, line: 38, baseType: !3495, size: 32)
!3495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3492, file: !230, line: 38, size: 32, elements: !3496)
!3496 = !{!3497, !3499}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3495, file: !230, line: 39, baseType: !3498, size: 32)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 32)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3495, file: !230, line: 40, baseType: !3498, size: 32)
!3500 = !DIDerivedType(tag: DW_TAG_member, scope: !3492, file: !230, line: 42, baseType: !3501, size: 32, offset: 32)
!3501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3492, file: !230, line: 42, size: 32, elements: !3502)
!3502 = !{!3503, !3504}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3501, file: !230, line: 43, baseType: !3498, size: 32)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3501, file: !230, line: 44, baseType: !3498, size: 32)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 32)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !3507)
!3507 = !{!3508, !3552, !3564, !3565, !3566, !3567, !3568, !3581}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3506, file: !290, line: 247, baseType: !3509, size: 384)
!3509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !3510)
!3510 = !{!3511, !3521, !3528, !3529, !3530, !3539, !3540, !3541}
!3511 = !DIDerivedType(tag: DW_TAG_member, scope: !3509, file: !290, line: 60, baseType: !3512, size: 64)
!3512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3509, file: !290, line: 60, size: 64, elements: !3513)
!3513 = !{!3514, !3515}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3512, file: !290, line: 61, baseType: !3491, size: 64)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3512, file: !290, line: 62, baseType: !3516, size: 64)
!3516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !3517)
!3517 = !{!3518}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3516, file: !302, line: 50, baseType: !3519, size: 64)
!3519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3520, size: 64, elements: !307)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 32)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3509, file: !290, line: 68, baseType: !3522, size: 32, offset: 64)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 32)
!3523 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !3524)
!3524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !3525)
!3525 = !{!3526}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3524, file: !225, line: 232, baseType: !3527, size: 64)
!3527 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !3492)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3509, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3509, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!3530 = !DIDerivedType(tag: DW_TAG_member, scope: !3509, file: !290, line: 90, baseType: !3531, size: 16, offset: 112)
!3531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3509, file: !290, line: 90, size: 16, elements: !3532)
!3532 = !{!3533, !3538}
!3533 = !DIDerivedType(tag: DW_TAG_member, scope: !3531, file: !290, line: 91, baseType: !3534, size: 16)
!3534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3531, file: !290, line: 91, size: 16, elements: !3535)
!3535 = !{!3536, !3537}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3534, file: !290, line: 96, baseType: !320, size: 8)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3534, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3531, file: !290, line: 100, baseType: !272, size: 16)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3509, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3509, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3509, file: !290, line: 131, baseType: !3542, size: 192, offset: 192)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !3543)
!3543 = !{!3544, !3545, !3551}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3542, file: !225, line: 245, baseType: !3491, size: 64)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3542, file: !225, line: 246, baseType: !3546, size: 32, offset: 64)
!3546 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !3547)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 32)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{null, !3550}
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 32)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3542, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3506, file: !290, line: 250, baseType: !3553, size: 288, offset: 384)
!3553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !3554)
!3554 = !{!3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3553, file: !339, line: 26, baseType: !158, size: 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3553, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3553, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3553, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3553, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3553, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3553, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3553, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3553, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3506, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3506, file: !290, line: 256, baseType: !3523, size: 64, offset: 704)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3506, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3506, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3506, file: !290, line: 325, baseType: !3569, size: 32, offset: 1056)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 32)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !3571)
!3571 = !{!3572, !3578, !3579}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3570, file: !221, line: 5074, baseType: !3573, size: 96)
!3573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !3574)
!3574 = !{!3575, !3576, !3577}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3573, file: !363, line: 57, baseType: !366, size: 32)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3573, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3573, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3570, file: !221, line: 5075, baseType: !3523, size: 64, offset: 96)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3570, file: !221, line: 5076, baseType: !3580, offset: 160)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3506, file: !290, line: 343, baseType: !3582, size: 64, offset: 1088)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !3583)
!3583 = !{!3584, !3585}
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3582, file: !339, line: 63, baseType: !158, size: 32)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3582, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!3586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3587, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3588, splitDebugInlining: false, nameTableKind: None)
!3587 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3588 = !{!22, !133, !111}
!3589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !877, splitDebugInlining: false, nameTableKind: None)
!3590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !877, splitDebugInlining: false, nameTableKind: None)
!3592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3593 = !{!"Ubuntu clang version 14.0.6"}
!3594 = !{i32 7, !"Dwarf Version", i32 4}
!3595 = !{i32 2, !"Debug Info Version", i32 3}
!3596 = !{i32 1, !"wchar_size", i32 4}
!3597 = !{i32 1, !"min_enum_size", i32 4}
!3598 = !{i32 1, !"branch-target-enforcement", i32 0}
!3599 = !{i32 1, !"sign-return-address", i32 0}
!3600 = !{i32 1, !"sign-return-address-all", i32 0}
!3601 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3602 = !{i32 7, !"frame-pointer", i32 2}
!3603 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3604, file: !3604, line: 26, type: !416, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !247)
!3604 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3605 = !DILocation(line: 28, column: 1, scope: !3603)
!3606 = !{i64 2155072818, i64 2155072838, i64 2155072901}
!3607 = !DILocation(line: 29, column: 1, scope: !3603)
!3608 = !{i64 2155073233, i64 2155073253, i64 2155073316}
!3609 = !DILocation(line: 30, column: 1, scope: !3603)
!3610 = !{i64 2155073652, i64 2155073672, i64 2155073735}
!3611 = !DILocation(line: 31, column: 1, scope: !3603)
!3612 = !{i64 2155074071, i64 2155074091, i64 2155074154}
!3613 = !DILocation(line: 33, column: 1, scope: !3603)
!3614 = !{i64 2155074363, i64 2155074383, i64 2155074446}
!3615 = !DILocation(line: 35, column: 1, scope: !3603)
!3616 = !{i64 2155074688, i64 2155074708, i64 2155074771}
!3617 = !DILocation(line: 50, column: 1, scope: !3603)
!3618 = !{i64 2155075115, i64 2155075135, i64 2155075198}
!3619 = !DILocation(line: 54, column: 1, scope: !3603)
!3620 = !{i64 2155075554, i64 2155075574, i64 2155075637}
!3621 = !DILocation(line: 61, column: 1, scope: !3603)
!3622 = !{i64 2155075871, i64 2155075891, i64 2155075954}
!3623 = !DILocation(line: 63, column: 1, scope: !3603)
!3624 = !{i64 2155076251, i64 2155076271, i64 2155076334}
!3625 = !DILocation(line: 64, column: 1, scope: !3603)
!3626 = !{i64 2155080834, i64 2155080854, i64 2155080917}
!3627 = !DILocation(line: 65, column: 1, scope: !3603)
!3628 = !{i64 2155081332, i64 2155081352, i64 2155081415}
!3629 = !DILocation(line: 66, column: 1, scope: !3603)
!3630 = !{i64 2155081814, i64 2155081834, i64 2155081897}
!3631 = !DILocation(line: 67, column: 1, scope: !3603)
!3632 = !{i64 2155082321, i64 2155082341, i64 2155082404}
!3633 = !DILocation(line: 68, column: 1, scope: !3603)
!3634 = !{i64 2155082809, i64 2155082829, i64 2155082892}
!3635 = !DILocation(line: 70, column: 1, scope: !3603)
!3636 = !{i64 2155083277, i64 2155083297, i64 2155083360}
!3637 = !DILocation(line: 71, column: 1, scope: !3603)
!3638 = !{i64 2155083719, i64 2155083739, i64 2155083802}
!3639 = !DILocation(line: 72, column: 1, scope: !3603)
!3640 = !{i64 2155084177, i64 2155084197, i64 2155084260}
!3641 = !DILocation(line: 97, column: 1, scope: !3603)
!3642 = !{i64 2155084484, i64 2155084504, i64 2155084567}
!3643 = !DILocation(line: 99, column: 1, scope: !3603)
!3644 = !{i64 2155084702, i64 2155084722, i64 2155084785}
!3645 = !DILocation(line: 102, column: 1, scope: !3603)
!3646 = !{i64 2155084959, i64 2155084979, i64 2155085042}
!3647 = !DILocation(line: 105, column: 1, scope: !3603)
!3648 = !{i64 2155085199, i64 2155085219, i64 2155085282}
!3649 = !DILocation(line: 115, column: 1, scope: !3603)
!3650 = !{i64 2155085538, i64 2155085558, i64 2155085621}
!3651 = !DILocation(line: 118, column: 1, scope: !3603)
!3652 = !{i64 2155085882, i64 2155085902, i64 2155085965}
!3653 = !DILocation(line: 32, column: 1, scope: !3654)
!3654 = !DILexicalBlockFile(scope: !3603, file: !3655, discriminator: 0)
!3655 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3656 = !{i64 2155086238, i64 2155086258, i64 2155086321}
!3657 = !DILocation(line: 33, column: 1, scope: !3654)
!3658 = !{i64 2155086750, i64 2155086770, i64 2155086833}
!3659 = !DILocation(line: 53, column: 1, scope: !3654)
!3660 = !{i64 2155087258, i64 2155087278, i64 2155087341}
!3661 = !DILocation(line: 54, column: 1, scope: !3654)
!3662 = !{i64 2155087676, i64 2155087696, i64 2155087759}
!3663 = !DILocation(line: 55, column: 1, scope: !3654)
!3664 = !{i64 2155088094, i64 2155088114, i64 2155088177}
!3665 = !DILocation(line: 56, column: 1, scope: !3654)
!3666 = !{i64 2155088512, i64 2155088532, i64 2155088595}
!3667 = !DILocation(line: 57, column: 1, scope: !3654)
!3668 = !{i64 2155088930, i64 2155088950, i64 2155089013}
!3669 = !DILocation(line: 58, column: 1, scope: !3654)
!3670 = !{i64 2155089348, i64 2155089368, i64 2155089431}
!3671 = !DILocation(line: 59, column: 1, scope: !3654)
!3672 = !{i64 2155089766, i64 2155089786, i64 2155089849}
!3673 = !DILocation(line: 60, column: 1, scope: !3654)
!3674 = !{i64 2155090190, i64 2155090210, i64 2155090273}
!3675 = !DILocation(line: 61, column: 1, scope: !3654)
!3676 = !{i64 2155094568, i64 2155094588, i64 2155094651}
!3677 = !DILocation(line: 70, column: 1, scope: !3654)
!3678 = !{i64 2155094797, i64 2155094817, i64 2155094880}
!3679 = !DILocation(line: 72, column: 1, scope: !3654)
!3680 = !{i64 2155095129, i64 2155095149, i64 2155095212}
!3681 = !DILocation(line: 73, column: 1, scope: !3654)
!3682 = !{i64 2155095579, i64 2155095599, i64 2155095662}
!3683 = !DILocation(line: 74, column: 1, scope: !3654)
!3684 = !{i64 2155096029, i64 2155096049, i64 2155096112}
!3685 = !DILocation(line: 75, column: 1, scope: !3654)
!3686 = !{i64 2155096479, i64 2155096499, i64 2155096562}
!3687 = !DILocation(line: 76, column: 1, scope: !3654)
!3688 = !{i64 2155096929, i64 2155096949, i64 2155097012}
!3689 = !DILocation(line: 77, column: 1, scope: !3654)
!3690 = !{i64 2155097379, i64 2155097399, i64 2155097462}
!3691 = !DILocation(line: 78, column: 1, scope: !3654)
!3692 = !{i64 2155097829, i64 2155097849, i64 2155097912}
!3693 = !DILocation(line: 79, column: 1, scope: !3654)
!3694 = !{i64 2155098279, i64 2155098299, i64 2155098362}
!3695 = !DILocation(line: 80, column: 1, scope: !3654)
!3696 = !{i64 2155098732, i64 2155098752, i64 2155098815}
!3697 = !DILocation(line: 84, column: 1, scope: !3654)
!3698 = !{i64 2155099064, i64 2155099084, i64 2155099147}
!3699 = !DILocation(line: 106, column: 1, scope: !3654)
!3700 = !{i64 2155099314, i64 2155099334, i64 2155099397}
!3701 = !DILocation(line: 11, column: 1, scope: !3702)
!3702 = !DILexicalBlockFile(scope: !3603, file: !3703, discriminator: 0)
!3703 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3704 = distinct !DISubprogram(name: "bridge_tx_thread", scope: !212, file: !212, line: 29, type: !416, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3705)
!3705 = !{!3706, !3707, !3713, !3714, !3718}
!3706 = !DILocalVariable(name: "chan", scope: !3704, file: !212, line: 33, type: !264)
!3707 = !DILocalVariable(name: "user_data", scope: !3708, file: !212, line: 38, type: !206)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !212, line: 37, column: 45)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !212, line: 37, column: 8)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !212, line: 36, column: 54)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !212, line: 36, column: 7)
!3712 = distinct !DILexicalBlock(scope: !3704, file: !212, line: 35, column: 12)
!3713 = !DILocalVariable(name: "generated_by_the_bridge", scope: !3708, file: !212, line: 39, type: !131)
!3714 = !DILocalVariable(name: "i", scope: !3715, file: !212, line: 52, type: !111)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !212, line: 52, column: 6)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !212, line: 47, column: 35)
!3717 = distinct !DILexicalBlock(scope: !3708, file: !212, line: 47, column: 9)
!3718 = !DILocalVariable(name: "i", scope: !3719, file: !212, line: 60, type: !111)
!3719 = distinct !DILexicalBlock(scope: !3716, file: !212, line: 60, column: 6)
!3720 = !DILocation(line: 31, column: 2, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !212, line: 31, column: 2)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !212, line: 31, column: 2)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !212, line: 31, column: 2)
!3724 = distinct !DILexicalBlock(scope: !3704, file: !212, line: 31, column: 2)
!3725 = !DILocation(line: 33, column: 2, scope: !3704)
!3726 = !DILocation(line: 35, column: 2, scope: !3704)
!3727 = !DILocation(line: 0, scope: !3704)
!3728 = !DILocation(line: 36, column: 8, scope: !3711)
!3729 = !DILocation(line: 36, column: 7, scope: !3712)
!3730 = !DILocation(line: 37, column: 25, scope: !3709)
!3731 = !DILocation(line: 37, column: 9, scope: !3709)
!3732 = !DILocation(line: 37, column: 8, scope: !3710)
!3733 = !DILocation(line: 38, column: 51, scope: !3708)
!3734 = !DILocation(line: 38, column: 31, scope: !3708)
!3735 = !DILocation(line: 0, scope: !3708)
!3736 = !DILocation(line: 39, column: 36, scope: !3708)
!3737 = !{i8 0, i8 2}
!3738 = !DILocation(line: 40, column: 16, scope: !3708)
!3739 = !DILocation(line: 42, column: 22, scope: !3708)
!3740 = !DILocation(line: 42, column: 5, scope: !3708)
!3741 = !DILocation(line: 47, column: 9, scope: !3708)
!3742 = distinct !{!3742, !3726, !3743}
!3743 = !DILocation(line: 71, column: 2, scope: !3704)
!3744 = !DILocation(line: 48, column: 6, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !212, line: 48, column: 6)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !212, line: 48, column: 6)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !212, line: 48, column: 6)
!3748 = distinct !DILexicalBlock(scope: !3716, file: !212, line: 48, column: 6)
!3749 = !DILocation(line: 50, column: 6, scope: !3716)
!3750 = !DILocation(line: 0, scope: !3715)
!3751 = !DILocation(line: 52, column: 48, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3715, file: !212, line: 52, column: 6)
!3753 = !DILocation(line: 52, column: 33, scope: !3752)
!3754 = !DILocation(line: 52, column: 26, scope: !3752)
!3755 = !DILocation(line: 52, column: 24, scope: !3752)
!3756 = !DILocation(line: 52, column: 6, scope: !3715)
!3757 = !DILocation(line: 56, column: 6, scope: !3716)
!3758 = !DILocation(line: 58, column: 52, scope: !3716)
!3759 = !DILocation(line: 58, column: 33, scope: !3716)
!3760 = !DILocation(line: 58, column: 6, scope: !3716)
!3761 = !DILocation(line: 0, scope: !3719)
!3762 = !DILocation(line: 60, column: 45, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3719, file: !212, line: 60, column: 6)
!3764 = !DILocation(line: 60, column: 26, scope: !3763)
!3765 = !DILocation(line: 60, column: 24, scope: !3763)
!3766 = !DILocation(line: 60, column: 6, scope: !3719)
!3767 = !DILocation(line: 53, column: 49, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3752, file: !212, line: 52, column: 61)
!3769 = !DILocation(line: 53, column: 34, scope: !3768)
!3770 = !DILocation(line: 53, column: 7, scope: !3768)
!3771 = !DILocation(line: 52, column: 56, scope: !3752)
!3772 = distinct !{!3772, !3756, !3773}
!3773 = !DILocation(line: 54, column: 6, scope: !3715)
!3774 = !DILocation(line: 65, column: 6, scope: !3716)
!3775 = !DILocation(line: 67, column: 6, scope: !3716)
!3776 = !DILocation(line: 68, column: 5, scope: !3716)
!3777 = !DILocation(line: 62, column: 26, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3763, file: !212, line: 60, column: 57)
!3779 = !DILocation(line: 62, column: 14, scope: !3778)
!3780 = !DILocation(line: 61, column: 7, scope: !3778)
!3781 = !DILocation(line: 60, column: 52, scope: !3763)
!3782 = distinct !{!3782, !3766, !3783}
!3783 = !DILocation(line: 63, column: 6, scope: !3719)
!3784 = distinct !DISubprogram(name: "zbus_chan_user_data", scope: !214, file: !214, line: 448, type: !3785, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3787)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!133, !264}
!3787 = !{!3788}
!3788 = !DILocalVariable(name: "chan", arg: 1, scope: !3784, file: !214, line: 448, type: !264)
!3789 = !DILocation(line: 0, scope: !3784)
!3790 = !DILocation(line: 452, column: 15, scope: !3784)
!3791 = !DILocation(line: 452, column: 2, scope: !3784)
!3792 = distinct !DISubprogram(name: "zbus_chan_name", scope: !214, file: !214, line: 374, type: !3793, scopeLine: 375, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3795)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!118, !264}
!3795 = !{!3796}
!3796 = !DILocalVariable(name: "chan", arg: 1, scope: !3792, file: !214, line: 374, type: !264)
!3797 = !DILocation(line: 0, scope: !3792)
!3798 = !DILocation(line: 378, column: 15, scope: !3792)
!3799 = !DILocation(line: 378, column: 2, scope: !3792)
!3800 = distinct !DISubprogram(name: "uart_poll_out", scope: !3801, file: !3801, line: 95, type: !143, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3802)
!3801 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3802 = !{!3803, !3804}
!3803 = !DILocalVariable(name: "dev", arg: 1, scope: !3800, file: !3801, line: 95, type: !112)
!3804 = !DILocalVariable(name: "out_char", arg: 2, scope: !3800, file: !3801, line: 95, type: !129)
!3805 = !DILocation(line: 0, scope: !3800)
!3806 = !DILocation(line: 105, column: 2, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3800, file: !3801, line: 105, column: 2)
!3808 = !{i64 2150238435}
!3809 = !DILocation(line: 106, column: 2, scope: !3800)
!3810 = !DILocation(line: 107, column: 1, scope: !3800)
!3811 = distinct !DISubprogram(name: "zbus_chan_msg_size", scope: !214, file: !214, line: 432, type: !3812, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3814)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{!272, !264}
!3814 = !{!3815}
!3815 = !DILocalVariable(name: "chan", arg: 1, scope: !3811, file: !214, line: 432, type: !264)
!3816 = !DILocation(line: 0, scope: !3811)
!3817 = !DILocation(line: 436, column: 15, scope: !3811)
!3818 = !DILocation(line: 436, column: 2, scope: !3811)
!3819 = distinct !DISubprogram(name: "zbus_chan_msg", scope: !214, file: !214, line: 395, type: !3785, scopeLine: 396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3820)
!3820 = !{!3821}
!3821 = !DILocalVariable(name: "chan", arg: 1, scope: !3819, file: !214, line: 395, type: !264)
!3822 = !DILocation(line: 0, scope: !3819)
!3823 = !DILocation(line: 399, column: 15, scope: !3819)
!3824 = !DILocation(line: 399, column: 2, scope: !3819)
!3825 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !105, file: !105, line: 574, type: !143, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3826)
!3826 = !{!3827, !3828, !3829}
!3827 = !DILocalVariable(name: "dev", arg: 1, scope: !3825, file: !105, line: 574, type: !112)
!3828 = !DILocalVariable(name: "out_char", arg: 2, scope: !3825, file: !105, line: 575, type: !129)
!3829 = !DILocalVariable(name: "api", scope: !3825, file: !105, line: 577, type: !102)
!3830 = !DILocation(line: 0, scope: !3825)
!3831 = !DILocation(line: 578, column: 40, scope: !3825)
!3832 = !DILocation(line: 580, column: 7, scope: !3825)
!3833 = !DILocation(line: 580, column: 2, scope: !3825)
!3834 = !DILocation(line: 581, column: 1, scope: !3825)
!3835 = distinct !DISubprogram(name: "core_thread", scope: !454, file: !454, line: 23, type: !416, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !448, retainedNodes: !3836)
!3836 = !{!3837}
!3837 = !DILocalVariable(name: "start", scope: !3835, file: !454, line: 25, type: !3838)
!3838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "action_msg", file: !438, line: 26, size: 8, elements: !3839)
!3839 = !{!3840}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3838, file: !438, line: 27, baseType: !131, size: 8)
!3841 = !DILocation(line: 25, column: 2, scope: !3835)
!3842 = !DILocation(line: 25, column: 20, scope: !3835)
!3843 = !DILocation(line: 27, column: 2, scope: !3835)
!3844 = !DILocation(line: 28, column: 3, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !454, line: 28, column: 3)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !454, line: 28, column: 3)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !454, line: 28, column: 3)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !454, line: 28, column: 3)
!3849 = distinct !DILexicalBlock(scope: !3835, file: !454, line: 27, column: 12)
!3850 = !DILocation(line: 30, column: 25, scope: !3849)
!3851 = !DILocation(line: 30, column: 16, scope: !3849)
!3852 = !DILocation(line: 31, column: 50, scope: !3849)
!3853 = !DILocation(line: 31, column: 3, scope: !3849)
!3854 = !DILocation(line: 33, column: 3, scope: !3849)
!3855 = distinct !{!3855, !3843, !3856}
!3856 = !DILocation(line: 34, column: 2, scope: !3835)
!3857 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3858, file: !3858, line: 403, type: !3859, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !448, retainedNodes: !3861)
!3858 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!207, !207}
!3861 = !{!3862}
!3862 = !DILocalVariable(name: "t", arg: 1, scope: !3857, file: !3858, line: 403, type: !207)
!3863 = !DILocation(line: 0, scope: !3857)
!3864 = !DILocalVariable(name: "t", arg: 1, scope: !3865, file: !3858, line: 102, type: !207)
!3865 = distinct !DISubprogram(name: "z_tmcvt", scope: !3858, file: !3858, line: 102, type: !3866, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !448, retainedNodes: !3868)
!3866 = !DISubroutineType(types: !3867)
!3867 = !{!207, !207, !158, !158, !131, !131, !131, !131}
!3868 = !{!3864, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878}
!3869 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3865, file: !3858, line: 102, type: !158)
!3870 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3865, file: !3858, line: 103, type: !158)
!3871 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3865, file: !3858, line: 103, type: !131)
!3872 = !DILocalVariable(name: "result32", arg: 5, scope: !3865, file: !3858, line: 104, type: !131)
!3873 = !DILocalVariable(name: "round_up", arg: 6, scope: !3865, file: !3858, line: 104, type: !131)
!3874 = !DILocalVariable(name: "round_off", arg: 7, scope: !3865, file: !3858, line: 105, type: !131)
!3875 = !DILocalVariable(name: "mul_ratio", scope: !3865, file: !3858, line: 107, type: !131)
!3876 = !DILocalVariable(name: "div_ratio", scope: !3865, file: !3858, line: 109, type: !131)
!3877 = !DILocalVariable(name: "off", scope: !3865, file: !3858, line: 116, type: !207)
!3878 = !DILocalVariable(name: "rdivisor", scope: !3879, file: !3858, line: 119, type: !158)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !3858, line: 118, column: 18)
!3880 = distinct !DILexicalBlock(scope: !3865, file: !3858, line: 118, column: 6)
!3881 = !DILocation(line: 0, scope: !3865, inlinedAt: !3882)
!3882 = distinct !DILocation(line: 406, column: 9, scope: !3857)
!3883 = !DILocation(line: 145, column: 13, scope: !3884, inlinedAt: !3882)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !3858, line: 144, column: 10)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !3858, line: 142, column: 7)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !3858, line: 141, column: 24)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !3858, line: 141, column: 13)
!3888 = distinct !DILexicalBlock(scope: !3865, file: !3858, line: 134, column: 6)
!3889 = !DILocation(line: 406, column: 2, scope: !3857)
!3890 = distinct !DISubprogram(name: "k_msleep", scope: !221, file: !221, line: 439, type: !3891, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !448, retainedNodes: !3893)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{!413, !413}
!3893 = !{!3894}
!3894 = !DILocalVariable(name: "ms", arg: 1, scope: !3890, file: !221, line: 439, type: !413)
!3895 = !DILocation(line: 0, scope: !3890)
!3896 = !DILocation(line: 441, column: 17, scope: !3890)
!3897 = !DILocation(line: 441, column: 9, scope: !3890)
!3898 = !DILocation(line: 441, column: 2, scope: !3890)
!3899 = distinct !DISubprogram(name: "k_sleep", scope: !3900, file: !3900, line: 91, type: !3901, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !448, retainedNodes: !3907)
!3900 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!413, !3903}
!3903 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !203, line: 67, baseType: !3904)
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !203, line: 65, size: 64, elements: !3905)
!3905 = !{!3906}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3904, file: !203, line: 66, baseType: !202, size: 64)
!3907 = !{!3908}
!3908 = !DILocalVariable(name: "timeout", arg: 1, scope: !3899, file: !3900, line: 91, type: !3903)
!3909 = !DILocation(line: 0, scope: !3899)
!3910 = !DILocation(line: 99, column: 2, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3899, file: !3900, line: 99, column: 2)
!3912 = !{i64 2151234155}
!3913 = !DILocation(line: 100, column: 9, scope: !3899)
!3914 = !DILocation(line: 100, column: 2, scope: !3899)
!3915 = distinct !DISubprogram(name: "peripheral_thread", scope: !646, file: !646, line: 35, type: !416, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !641, retainedNodes: !3916)
!3916 = !{!3917, !3918}
!3917 = !DILocalVariable(name: "chan", scope: !3915, file: !646, line: 37, type: !689)
!3918 = !DILocalVariable(name: "sd", scope: !3915, file: !646, line: 38, type: !833)
!3919 = !DILocation(line: 37, column: 2, scope: !3915)
!3920 = !DILocation(line: 38, column: 2, scope: !3915)
!3921 = !DILocation(line: 38, column: 25, scope: !3915)
!3922 = !DILocation(line: 0, scope: !3915)
!3923 = !DILocation(line: 40, column: 10, scope: !3915)
!3924 = !DILocation(line: 40, column: 9, scope: !3915)
!3925 = !DILocation(line: 40, column: 2, scope: !3915)
!3926 = !DILocation(line: 41, column: 3, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !646, line: 41, column: 3)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !646, line: 41, column: 3)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !646, line: 41, column: 3)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !646, line: 41, column: 3)
!3931 = distinct !DILexicalBlock(scope: !3915, file: !646, line: 40, column: 60)
!3932 = !DILocation(line: 43, column: 8, scope: !3931)
!3933 = !DILocation(line: 44, column: 8, scope: !3931)
!3934 = !DILocation(line: 46, column: 3, scope: !3931)
!3935 = distinct !{!3935, !3925, !3936}
!3936 = !DILocation(line: 47, column: 2, scope: !3915)
!3937 = !DILocation(line: 48, column: 1, scope: !3915)
!3938 = distinct !DISubprogram(name: "cbvprintf_package", scope: !866, file: !866, line: 233, type: !3939, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !3948)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!111, !133, !249, !158, !118, !3941}
!3941 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3942, line: 99, baseType: !3943)
!3942 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3943 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3942, line: 40, baseType: !3944)
!3944 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !866, baseType: !3945)
!3945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3946)
!3946 = !{!3947}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3945, file: !866, line: 18, baseType: !133, size: 32)
!3948 = !{!3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3984, !3993, !3996, !3997, !4000, !4003, !4006, !4009, !4015}
!3949 = !DILocalVariable(name: "packaged", arg: 1, scope: !3938, file: !866, line: 233, type: !133)
!3950 = !DILocalVariable(name: "len", arg: 2, scope: !3938, file: !866, line: 233, type: !249)
!3951 = !DILocalVariable(name: "flags", arg: 3, scope: !3938, file: !866, line: 233, type: !158)
!3952 = !DILocalVariable(name: "fmt", arg: 4, scope: !3938, file: !866, line: 234, type: !118)
!3953 = !DILocalVariable(name: "ap", arg: 5, scope: !3938, file: !866, line: 234, type: !3941)
!3954 = !DILocalVariable(name: "buf0", scope: !3938, file: !866, line: 247, type: !178)
!3955 = !DILocalVariable(name: "buf", scope: !3938, file: !866, line: 248, type: !178)
!3956 = !DILocalVariable(name: "size", scope: !3938, file: !866, line: 249, type: !32)
!3957 = !DILocalVariable(name: "align", scope: !3938, file: !866, line: 250, type: !32)
!3958 = !DILocalVariable(name: "str_ptr_pos", scope: !3938, file: !866, line: 251, type: !3959)
!3959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 128, elements: !426)
!3960 = !DILocalVariable(name: "str_ptr_arg", scope: !3938, file: !866, line: 252, type: !3959)
!3961 = !DILocalVariable(name: "s_idx", scope: !3938, file: !866, line: 253, type: !32)
!3962 = !DILocalVariable(name: "s_rw_cnt", scope: !3938, file: !866, line: 254, type: !32)
!3963 = !DILocalVariable(name: "s_ro_cnt", scope: !3938, file: !866, line: 255, type: !32)
!3964 = !DILocalVariable(name: "arg_idx", scope: !3938, file: !866, line: 256, type: !111)
!3965 = !DILocalVariable(name: "i", scope: !3938, file: !866, line: 257, type: !32)
!3966 = !DILocalVariable(name: "s", scope: !3938, file: !866, line: 258, type: !118)
!3967 = !DILocalVariable(name: "parsing", scope: !3938, file: !866, line: 259, type: !131)
!3968 = !DILocalVariable(name: "rws_pos_en", scope: !3938, file: !866, line: 263, type: !131)
!3969 = !DILocalVariable(name: "fros_cnt", scope: !3938, file: !866, line: 268, type: !111)
!3970 = !DILocalVariable(name: "is_str_arg", scope: !3938, file: !866, line: 269, type: !131)
!3971 = !DILocalVariable(name: "pkg_hdr", scope: !3938, file: !866, line: 270, type: !3972)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 32)
!3973 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3974, line: 78, size: 32, elements: !3975)
!3974 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3975 = !{!3976, !3983}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3973, file: !3974, line: 80, baseType: !3977, size: 32)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3974, line: 45, size: 32, elements: !3978)
!3978 = !{!3979, !3980, !3981, !3982}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3977, file: !3974, line: 47, baseType: !128, size: 8)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3977, file: !3974, line: 50, baseType: !128, size: 8, offset: 8)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3977, file: !3974, line: 53, baseType: !128, size: 8, offset: 16)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3977, file: !3974, line: 56, baseType: !128, size: 8, offset: 24)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3973, file: !3974, line: 82, baseType: !133, size: 32)
!3984 = !DILocalVariable(name: "v", scope: !3985, file: !866, line: 567, type: !3989)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !866, line: 562, column: 14)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !866, line: 481, column: 18)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !866, line: 466, column: 3)
!3988 = distinct !DILexicalBlock(scope: !3938, file: !866, line: 343, column: 15)
!3989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3938, file: !866, line: 567, size: 64, elements: !3990)
!3990 = !{!3991, !3992}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3989, file: !866, line: 567, baseType: !858, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3989, file: !866, line: 567, baseType: !856, size: 64)
!3993 = !DILocalVariable(name: "is_ro", scope: !3994, file: !866, line: 620, type: !131)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !866, line: 613, column: 19)
!3995 = distinct !DILexicalBlock(scope: !3988, file: !866, line: 613, column: 7)
!3996 = !DILocalVariable(name: "do_ro", scope: !3994, file: !866, line: 621, type: !131)
!3997 = !DILocalVariable(name: "s_ptr_idx", scope: !3998, file: !866, line: 626, type: !158)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !866, line: 625, column: 11)
!3999 = distinct !DILexicalBlock(scope: !3994, file: !866, line: 623, column: 8)
!4000 = !DILocalVariable(name: "v", scope: !4001, file: !866, line: 684, type: !111)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !866, line: 683, column: 35)
!4002 = distinct !DILexicalBlock(scope: !3995, file: !866, line: 683, column: 14)
!4003 = !DILocalVariable(name: "v", scope: !4004, file: !866, line: 691, type: !862)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !866, line: 690, column: 36)
!4005 = distinct !DILexicalBlock(scope: !4002, file: !866, line: 690, column: 14)
!4006 = !DILocalVariable(name: "v", scope: !4007, file: !866, line: 698, type: !205)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !866, line: 697, column: 41)
!4008 = distinct !DILexicalBlock(scope: !4005, file: !866, line: 697, column: 14)
!4009 = !DILocalVariable(name: "pos", scope: !4010, file: !866, line: 762, type: !128)
!4010 = distinct !DILexicalBlock(scope: !4011, file: !866, line: 757, column: 31)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !866, line: 757, column: 3)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !866, line: 757, column: 3)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !866, line: 756, column: 16)
!4014 = distinct !DILexicalBlock(scope: !3938, file: !866, line: 756, column: 6)
!4015 = !DILabel(scope: !3994, name: "process_string", file: !866, line: 615)
!4016 = !DILocation(line: 0, scope: !3938)
!4017 = !DILocation(line: 251, column: 2, scope: !3938)
!4018 = !DILocation(line: 251, column: 10, scope: !3938)
!4019 = !DILocation(line: 252, column: 2, scope: !3938)
!4020 = !DILocation(line: 252, column: 10, scope: !3938)
!4021 = !DILocation(line: 263, column: 29, scope: !3938)
!4022 = !DILocation(line: 263, column: 21, scope: !3938)
!4023 = !DILocation(line: 268, column: 21, scope: !3938)
!4024 = !DILocation(line: 268, column: 19, scope: !3938)
!4025 = !DILocation(line: 273, column: 6, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3938, file: !866, line: 273, column: 6)
!4027 = !DILocation(line: 273, column: 26, scope: !4026)
!4028 = !DILocation(line: 273, column: 6, scope: !3938)
!4029 = !DILocation(line: 297, column: 6, scope: !3938)
!4030 = !DILocation(line: 305, column: 11, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3938, file: !866, line: 305, column: 6)
!4032 = !DILocation(line: 305, column: 6, scope: !3938)
!4033 = !DILocation(line: 327, column: 19, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !3938, file: !866, line: 327, column: 6)
!4035 = !DILocation(line: 327, column: 22, scope: !4034)
!4036 = !DILocation(line: 327, column: 33, scope: !4034)
!4037 = !DILocation(line: 327, column: 50, scope: !4034)
!4038 = !DILocation(line: 327, column: 6, scope: !3938)
!4039 = !DILocation(line: 338, column: 9, scope: !3938)
!4040 = !DILocation(line: 341, column: 2, scope: !3938)
!4041 = !DILocation(line: 472, column: 8, scope: !3987)
!4042 = !DILocation(line: 473, column: 14, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !866, line: 473, column: 9)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !866, line: 472, column: 18)
!4045 = distinct !DILexicalBlock(scope: !3987, file: !866, line: 472, column: 8)
!4046 = !DILocation(line: 473, column: 9, scope: !4044)
!4047 = !DILocation(line: 479, column: 5, scope: !4044)
!4048 = !DILocation(line: 468, column: 9, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !3987, file: !866, line: 468, column: 8)
!4050 = !DILocation(line: 468, column: 8, scope: !4049)
!4051 = !DILocation(line: 468, column: 15, scope: !4049)
!4052 = !DILocation(line: 468, column: 8, scope: !3987)
!4053 = distinct !{!4053, !4054, !4055}
!4054 = !DILocation(line: 343, column: 2, scope: !3938)
!4055 = !DILocation(line: 712, column: 2, scope: !3938)
!4056 = !DILocation(line: 481, column: 4, scope: !3987)
!4057 = !DILocation(line: 484, column: 12, scope: !3986)
!4058 = !DILocation(line: 485, column: 5, scope: !3986)
!4059 = !DILocation(line: 505, column: 5, scope: !3986)
!4060 = !DILocation(line: 518, column: 5, scope: !3986)
!4061 = !DILocation(line: 523, column: 5, scope: !3986)
!4062 = !DILocation(line: 532, column: 9, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !3986, file: !866, line: 532, column: 9)
!4064 = !DILocation(line: 532, column: 17, scope: !4063)
!4065 = !DILocation(line: 532, column: 9, scope: !3986)
!4066 = !DILocation(line: 533, column: 10, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !866, line: 533, column: 10)
!4068 = distinct !DILexicalBlock(scope: !4063, file: !866, line: 532, column: 25)
!4069 = !DILocation(line: 533, column: 18, scope: !4067)
!4070 = !DILocation(line: 0, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !3985, file: !866, line: 569, column: 9)
!4072 = !DILocation(line: 0, scope: !3985)
!4073 = !DILocation(line: 579, column: 20, scope: !3985)
!4074 = !DILocation(line: 579, column: 11, scope: !3985)
!4075 = !DILocation(line: 580, column: 9, scope: !3985)
!4076 = !DILocation(line: 582, column: 21, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !866, line: 582, column: 10)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !866, line: 580, column: 23)
!4079 = distinct !DILexicalBlock(scope: !3985, file: !866, line: 580, column: 9)
!4080 = !DILocation(line: 582, column: 28, scope: !4077)
!4081 = !DILocation(line: 582, column: 10, scope: !4078)
!4082 = !DILocation(line: 0, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !866, line: 587, column: 17)
!4084 = distinct !DILexicalBlock(scope: !4078, file: !866, line: 585, column: 10)
!4085 = !DILocation(line: 593, column: 9, scope: !3985)
!4086 = !DILocation(line: 600, column: 5, scope: !3986)
!4087 = !DILocation(line: 605, column: 18, scope: !3988)
!4088 = !DILocation(line: 605, column: 9, scope: !3988)
!4089 = !DILocation(line: 608, column: 20, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !3988, file: !866, line: 608, column: 7)
!4091 = !DILocation(line: 608, column: 23, scope: !4090)
!4092 = !DILocation(line: 608, column: 34, scope: !4090)
!4093 = !DILocation(line: 608, column: 41, scope: !4090)
!4094 = !DILocation(line: 608, column: 7, scope: !3988)
!4095 = !DILocation(line: 613, column: 7, scope: !3988)
!4096 = !DILocation(line: 614, column: 8, scope: !3994)
!4097 = !DILocation(line: 614, column: 4, scope: !3994)
!4098 = !DILocation(line: 255, column: 15, scope: !3938)
!4099 = !DILocation(line: 256, column: 6, scope: !3938)
!4100 = !DILocation(line: 254, column: 15, scope: !3938)
!4101 = !DILocation(line: 253, column: 15, scope: !3938)
!4102 = !DILocation(line: 320, column: 7, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4031, file: !866, line: 305, column: 20)
!4104 = !DILocation(line: 615, column: 1, scope: !3994)
!4105 = !DILocation(line: 616, column: 8, scope: !3994)
!4106 = !DILocation(line: 617, column: 5, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !866, line: 616, column: 22)
!4108 = distinct !DILexicalBlock(scope: !3994, file: !866, line: 616, column: 8)
!4109 = !DILocation(line: 617, column: 25, scope: !4107)
!4110 = !DILocation(line: 618, column: 4, scope: !4107)
!4111 = !DILocation(line: 620, column: 26, scope: !3994)
!4112 = !DILocation(line: 620, column: 29, scope: !3994)
!4113 = !DILocation(line: 620, column: 17, scope: !3994)
!4114 = !DILocation(line: 620, column: 43, scope: !3994)
!4115 = !DILocation(line: 0, scope: !3994)
!4116 = !DILocation(line: 623, column: 14, scope: !3999)
!4117 = !DILocation(line: 626, column: 26, scope: !3998)
!4118 = !DILocation(line: 626, column: 37, scope: !3998)
!4119 = !DILocation(line: 0, scope: !3998)
!4120 = !DILocation(line: 634, column: 15, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !3998, file: !866, line: 634, column: 9)
!4122 = !DILocation(line: 644, column: 9, scope: !3998)
!4123 = !DILocation(line: 649, column: 27, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !866, line: 644, column: 23)
!4125 = distinct !DILexicalBlock(scope: !3998, file: !866, line: 644, column: 9)
!4126 = !DILocation(line: 649, column: 6, scope: !4124)
!4127 = !DILocation(line: 649, column: 25, scope: !4124)
!4128 = !DILocation(line: 650, column: 27, scope: !4124)
!4129 = !DILocation(line: 650, column: 6, scope: !4124)
!4130 = !DILocation(line: 650, column: 25, scope: !4124)
!4131 = !DILocation(line: 651, column: 10, scope: !4124)
!4132 = !DILocation(line: 653, column: 26, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !866, line: 651, column: 17)
!4134 = distinct !DILexicalBlock(scope: !4124, file: !866, line: 651, column: 10)
!4135 = !DILocation(line: 654, column: 15, scope: !4133)
!4136 = !DILocation(line: 655, column: 6, scope: !4133)
!4137 = !DILocation(line: 656, column: 15, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4134, file: !866, line: 655, column: 13)
!4139 = !DILocation(line: 658, column: 16, scope: !4125)
!4140 = !DILocation(line: 663, column: 10, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !866, line: 658, column: 23)
!4142 = distinct !DILexicalBlock(scope: !4125, file: !866, line: 658, column: 16)
!4143 = !DILocation(line: 664, column: 5, scope: !4141)
!4144 = !DILocation(line: 664, column: 16, scope: !4142)
!4145 = !DILocation(line: 669, column: 10, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !866, line: 664, column: 28)
!4147 = distinct !DILexicalBlock(scope: !4142, file: !866, line: 664, column: 16)
!4148 = !DILocation(line: 670, column: 5, scope: !4146)
!4149 = !DILocation(line: 675, column: 13, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4147, file: !866, line: 670, column: 12)
!4151 = !DILocation(line: 675, column: 27, scope: !4150)
!4152 = !DILocation(line: 675, column: 10, scope: !4150)
!4153 = !DILocation(line: 678, column: 10, scope: !3998)
!4154 = !DILocation(line: 680, column: 8, scope: !3994)
!4155 = !DILocation(line: 683, column: 14, scope: !3995)
!4156 = !DILocation(line: 684, column: 12, scope: !4001)
!4157 = !DILocation(line: 0, scope: !4001)
!4158 = !DILocation(line: 686, column: 8, scope: !4001)
!4159 = !DILocation(line: 687, column: 5, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4161, file: !866, line: 686, column: 22)
!4161 = distinct !DILexicalBlock(scope: !4001, file: !866, line: 686, column: 8)
!4162 = !DILocation(line: 687, column: 17, scope: !4160)
!4163 = !DILocation(line: 688, column: 4, scope: !4160)
!4164 = !DILocation(line: 698, column: 18, scope: !4007)
!4165 = !DILocation(line: 0, scope: !4007)
!4166 = !DILocation(line: 700, column: 8, scope: !4007)
!4167 = !DILocation(line: 704, column: 6, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !866, line: 703, column: 12)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !866, line: 701, column: 9)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !866, line: 700, column: 22)
!4171 = distinct !DILexicalBlock(scope: !4007, file: !866, line: 700, column: 8)
!4172 = !DILocation(line: 704, column: 24, scope: !4168)
!4173 = !DILocation(line: 706, column: 4, scope: !4170)
!4174 = !DILocation(line: 0, scope: !4002)
!4175 = !DILocation(line: 0, scope: !3988)
!4176 = !DILocation(line: 720, column: 6, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !3938, file: !866, line: 720, column: 6)
!4178 = !DILocation(line: 720, column: 17, scope: !4177)
!4179 = !DILocation(line: 720, column: 31, scope: !4177)
!4180 = !DILocation(line: 720, column: 6, scope: !3938)
!4181 = !DILocation(line: 729, column: 6, scope: !3938)
!4182 = !DILocation(line: 730, column: 21, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !866, line: 729, column: 20)
!4184 = distinct !DILexicalBlock(scope: !3938, file: !866, line: 729, column: 6)
!4185 = !DILocation(line: 730, column: 27, scope: !4183)
!4186 = !DILocation(line: 730, column: 3, scope: !4183)
!4187 = !DILocation(line: 737, column: 22, scope: !3938)
!4188 = !DILocation(line: 737, column: 20, scope: !3938)
!4189 = !DILocation(line: 0, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !3938, file: !866, line: 739, column: 6)
!4191 = !DILocation(line: 745, column: 17, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4190, file: !866, line: 743, column: 9)
!4193 = !DILocation(line: 745, column: 25, scope: !4192)
!4194 = !DILocation(line: 746, column: 17, scope: !4192)
!4195 = !DILocation(line: 746, column: 28, scope: !4192)
!4196 = !DILocation(line: 749, column: 29, scope: !3938)
!4197 = !DILocation(line: 749, column: 16, scope: !3938)
!4198 = !DILocation(line: 749, column: 27, scope: !3938)
!4199 = !DILocation(line: 756, column: 6, scope: !4014)
!4200 = !DILocation(line: 756, column: 6, scope: !3938)
!4201 = !DILocation(line: 757, column: 3, scope: !4012)
!4202 = !DILocation(line: 758, column: 10, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4010, file: !866, line: 758, column: 8)
!4204 = !DILocation(line: 758, column: 25, scope: !4203)
!4205 = !DILocation(line: 758, column: 8, scope: !4010)
!4206 = !DILocation(line: 0, scope: !4010)
!4207 = !DILocation(line: 765, column: 8, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4010, file: !866, line: 765, column: 8)
!4209 = !DILocation(line: 765, column: 19, scope: !4208)
!4210 = !DILocation(line: 765, column: 23, scope: !4208)
!4211 = !DILocation(line: 765, column: 8, scope: !4010)
!4212 = !DILocation(line: 762, column: 33, scope: !4010)
!4213 = !DILocation(line: 769, column: 8, scope: !4010)
!4214 = !DILocation(line: 769, column: 11, scope: !4010)
!4215 = !DILocation(line: 757, column: 27, scope: !4011)
!4216 = !DILocation(line: 757, column: 17, scope: !4011)
!4217 = distinct !{!4217, !4201, !4218}
!4218 = !DILocation(line: 770, column: 3, scope: !4012)
!4219 = !DILocation(line: 774, column: 16, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4221, file: !866, line: 774, column: 2)
!4221 = distinct !DILexicalBlock(scope: !3938, file: !866, line: 774, column: 2)
!4222 = !DILocation(line: 774, column: 2, scope: !4221)
!4223 = !DILocation(line: 776, column: 16, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4225, file: !866, line: 776, column: 7)
!4225 = distinct !DILexicalBlock(scope: !4220, file: !866, line: 774, column: 30)
!4226 = !DILocation(line: 776, column: 19, scope: !4224)
!4227 = !DILocation(line: 776, column: 34, scope: !4224)
!4228 = !DILocation(line: 776, column: 7, scope: !4225)
!4229 = !DILocation(line: 780, column: 7, scope: !4225)
!4230 = !DILocation(line: 782, column: 13, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !866, line: 780, column: 19)
!4232 = distinct !DILexicalBlock(scope: !4225, file: !866, line: 780, column: 7)
!4233 = !DILocation(line: 782, column: 8, scope: !4231)
!4234 = !DILocation(line: 782, column: 11, scope: !4231)
!4235 = !DILocation(line: 783, column: 3, scope: !4231)
!4236 = !DILocation(line: 785, column: 26, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4232, file: !866, line: 783, column: 10)
!4238 = !DILocation(line: 785, column: 41, scope: !4237)
!4239 = !DILocation(line: 785, column: 24, scope: !4237)
!4240 = !DILocation(line: 785, column: 8, scope: !4237)
!4241 = !DILocation(line: 787, column: 52, scope: !4237)
!4242 = !DILocation(line: 789, column: 11, scope: !4237)
!4243 = !DILocation(line: 789, column: 21, scope: !4237)
!4244 = !DILocation(line: 0, scope: !4232)
!4245 = !DILocation(line: 793, column: 7, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4225, file: !866, line: 793, column: 7)
!4247 = !DILocation(line: 793, column: 18, scope: !4246)
!4248 = !DILocation(line: 793, column: 22, scope: !4246)
!4249 = !DILocation(line: 793, column: 29, scope: !4246)
!4250 = !DILocation(line: 793, column: 7, scope: !4225)
!4251 = !DILocation(line: 797, column: 12, scope: !4225)
!4252 = !DILocation(line: 797, column: 7, scope: !4225)
!4253 = !DILocation(line: 797, column: 10, scope: !4225)
!4254 = !DILocation(line: 799, column: 3, scope: !4225)
!4255 = !DILocation(line: 800, column: 7, scope: !4225)
!4256 = !DILocation(line: 801, column: 2, scope: !4225)
!4257 = !DILocation(line: 338, column: 4, scope: !3938)
!4258 = !DILocation(line: 774, column: 26, scope: !4220)
!4259 = distinct !{!4259, !4222, !4260}
!4260 = !DILocation(line: 801, column: 2, scope: !4221)
!4261 = !DILocation(line: 808, column: 9, scope: !3938)
!4262 = !DILocation(line: 808, column: 2, scope: !3938)
!4263 = !DILocation(line: 813, column: 1, scope: !3938)
!4264 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !866, file: !866, line: 33, type: !4265, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !4267)
!4265 = !DISubroutineType(types: !4266)
!4266 = !{!131, !118}
!4267 = !{!4268}
!4268 = !DILocalVariable(name: "addr", arg: 1, scope: !4264, file: !866, line: 33, type: !118)
!4269 = !DILocation(line: 0, scope: !4264)
!4270 = !DILocation(line: 41, column: 9, scope: !4264)
!4271 = !DILocation(line: 41, column: 2, scope: !4264)
!4272 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4273, file: !4273, line: 24, type: !4274, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !4276)
!4273 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!131, !13}
!4276 = !{!4277}
!4277 = !DILocalVariable(name: "addr", arg: 1, scope: !4272, file: !4273, line: 24, type: !13)
!4278 = !DILocation(line: 0, scope: !4272)
!4279 = !DILocation(line: 49, column: 30, scope: !4272)
!4280 = !DILocation(line: 49, column: 57, scope: !4272)
!4281 = !DILocation(line: 49, column: 2, scope: !4272)
!4282 = distinct !DISubprogram(name: "cbprintf_package", scope: !866, file: !866, line: 815, type: !4283, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !4285)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!111, !133, !249, !158, !118, null}
!4285 = !{!4286, !4287, !4288, !4289, !4290, !4291}
!4286 = !DILocalVariable(name: "packaged", arg: 1, scope: !4282, file: !866, line: 815, type: !133)
!4287 = !DILocalVariable(name: "len", arg: 2, scope: !4282, file: !866, line: 815, type: !249)
!4288 = !DILocalVariable(name: "flags", arg: 3, scope: !4282, file: !866, line: 815, type: !158)
!4289 = !DILocalVariable(name: "format", arg: 4, scope: !4282, file: !866, line: 816, type: !118)
!4290 = !DILocalVariable(name: "ap", scope: !4282, file: !866, line: 818, type: !3941)
!4291 = !DILocalVariable(name: "ret", scope: !4282, file: !866, line: 819, type: !111)
!4292 = !DILocation(line: 0, scope: !4282)
!4293 = !DILocation(line: 818, column: 2, scope: !4282)
!4294 = !DILocation(line: 818, column: 10, scope: !4282)
!4295 = !DILocation(line: 821, column: 2, scope: !4282)
!4296 = !DILocation(line: 822, column: 8, scope: !4282)
!4297 = !DILocation(line: 823, column: 2, scope: !4282)
!4298 = !DILocation(line: 825, column: 1, scope: !4282)
!4299 = !DILocation(line: 824, column: 2, scope: !4282)
!4300 = distinct !DISubprogram(name: "cbpprintf_external", scope: !866, file: !866, line: 827, type: !4301, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !4311)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!111, !4303, !4307, !133, !133}
!4303 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3974, line: 297, baseType: !4304)
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4305, size: 32)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{!111, null}
!4307 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3974, line: 328, baseType: !4308)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 32)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{!111, !4303, !133, !118, !3941}
!4311 = !{!4312, !4313, !4314, !4315, !4316, !4317, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330}
!4312 = !DILocalVariable(name: "out", arg: 1, scope: !4300, file: !866, line: 827, type: !4303)
!4313 = !DILocalVariable(name: "formatter", arg: 2, scope: !4300, file: !866, line: 828, type: !4307)
!4314 = !DILocalVariable(name: "ctx", arg: 3, scope: !4300, file: !866, line: 829, type: !133)
!4315 = !DILocalVariable(name: "packaged", arg: 4, scope: !4300, file: !866, line: 829, type: !133)
!4316 = !DILocalVariable(name: "buf", scope: !4300, file: !866, line: 831, type: !178)
!4317 = !DILocalVariable(name: "hdr", scope: !4300, file: !866, line: 832, type: !4318)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 32)
!4319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3974, line: 96, size: 64, elements: !4320)
!4320 = !{!4321, !4322}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4319, file: !3974, line: 98, baseType: !3973, size: 32)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4319, file: !3974, line: 101, baseType: !253, size: 32, offset: 32)
!4323 = !DILocalVariable(name: "s", scope: !4300, file: !866, line: 833, type: !253)
!4324 = !DILocalVariable(name: "ps", scope: !4300, file: !866, line: 833, type: !864)
!4325 = !DILocalVariable(name: "i", scope: !4300, file: !866, line: 834, type: !32)
!4326 = !DILocalVariable(name: "args_size", scope: !4300, file: !866, line: 834, type: !32)
!4327 = !DILocalVariable(name: "s_nbr", scope: !4300, file: !866, line: 834, type: !32)
!4328 = !DILocalVariable(name: "ros_nbr", scope: !4300, file: !866, line: 834, type: !32)
!4329 = !DILocalVariable(name: "rws_nbr", scope: !4300, file: !866, line: 834, type: !32)
!4330 = !DILocalVariable(name: "s_idx", scope: !4300, file: !866, line: 834, type: !32)
!4331 = !DILocation(line: 0, scope: !4300)
!4332 = !DILocation(line: 836, column: 10, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4300, file: !866, line: 836, column: 6)
!4334 = !DILocation(line: 836, column: 6, scope: !4300)
!4335 = !DILocation(line: 842, column: 28, scope: !4300)
!4336 = !DILocation(line: 842, column: 14, scope: !4300)
!4337 = !DILocation(line: 852, column: 16, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !866, line: 852, column: 2)
!4339 = distinct !DILexicalBlock(scope: !4300, file: !866, line: 852, column: 2)
!4340 = !DILocation(line: 852, column: 2, scope: !4339)
!4341 = !DILocation(line: 841, column: 28, scope: !4300)
!4342 = !DILocation(line: 841, column: 14, scope: !4300)
!4343 = !DILocation(line: 841, column: 32, scope: !4300)
!4344 = !DILocation(line: 847, column: 19, scope: !4300)
!4345 = !DILocation(line: 843, column: 28, scope: !4300)
!4346 = !DILocation(line: 843, column: 14, scope: !4300)
!4347 = !DILocation(line: 847, column: 31, scope: !4300)
!4348 = !DILocation(line: 844, column: 28, scope: !4300)
!4349 = !DILocation(line: 844, column: 14, scope: !4300)
!4350 = !DILocation(line: 847, column: 45, scope: !4300)
!4351 = !DILocation(line: 847, column: 41, scope: !4300)
!4352 = !DILocation(line: 854, column: 24, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4338, file: !866, line: 852, column: 30)
!4354 = !DILocation(line: 854, column: 11, scope: !4353)
!4355 = !DILocation(line: 855, column: 30, scope: !4353)
!4356 = !DILocation(line: 855, column: 22, scope: !4353)
!4357 = !DILocation(line: 855, column: 8, scope: !4353)
!4358 = !DILocation(line: 857, column: 7, scope: !4353)
!4359 = !DILocation(line: 859, column: 8, scope: !4353)
!4360 = !DILocation(line: 859, column: 18, scope: !4353)
!4361 = !DILocation(line: 859, column: 5, scope: !4353)
!4362 = !DILocation(line: 852, column: 26, scope: !4338)
!4363 = distinct !{!4363, !4340, !4364}
!4364 = !DILocation(line: 860, column: 2, scope: !4339)
!4365 = !DILocation(line: 863, column: 6, scope: !4300)
!4366 = !DILocation(line: 866, column: 56, scope: !4300)
!4367 = !DILocation(line: 866, column: 9, scope: !4300)
!4368 = !DILocation(line: 866, column: 2, scope: !4300)
!4369 = !DILocation(line: 867, column: 1, scope: !4300)
!4370 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !866, file: !866, line: 179, type: !4371, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !4373)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{!111, !4303, !4307, !133, !118, !133}
!4373 = !{!4374, !4375, !4376, !4377, !4378, !4379}
!4374 = !DILocalVariable(name: "out", arg: 1, scope: !4370, file: !866, line: 179, type: !4303)
!4375 = !DILocalVariable(name: "formatter", arg: 2, scope: !4370, file: !866, line: 180, type: !4307)
!4376 = !DILocalVariable(name: "ctx", arg: 3, scope: !4370, file: !866, line: 181, type: !133)
!4377 = !DILocalVariable(name: "fmt", arg: 4, scope: !4370, file: !866, line: 182, type: !118)
!4378 = !DILocalVariable(name: "buf", arg: 5, scope: !4370, file: !866, line: 182, type: !133)
!4379 = !DILocalVariable(name: "u", scope: !4370, file: !866, line: 187, type: !4380)
!4380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4370, file: !866, line: 184, size: 32, elements: !4381)
!4381 = !{!4382, !4383}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4380, file: !866, line: 185, baseType: !3941, size: 32)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4380, file: !866, line: 186, baseType: !133, size: 32)
!4384 = !DILocation(line: 0, scope: !4370)
!4385 = !DILocation(line: 191, column: 9, scope: !4370)
!4386 = !DILocation(line: 191, column: 2, scope: !4370)
!4387 = distinct !DISubprogram(name: "is_ptr", scope: !866, file: !866, line: 881, type: !4388, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !4390)
!4388 = !DISubroutineType(types: !4389)
!4389 = !{!131, !118, !111}
!4390 = !{!4391, !4392, !4393, !4394, !4395}
!4391 = !DILocalVariable(name: "fmt", arg: 1, scope: !4387, file: !866, line: 881, type: !118)
!4392 = !DILocalVariable(name: "n", arg: 2, scope: !4387, file: !866, line: 881, type: !111)
!4393 = !DILocalVariable(name: "c", scope: !4387, file: !866, line: 883, type: !120)
!4394 = !DILocalVariable(name: "mod", scope: !4387, file: !866, line: 884, type: !131)
!4395 = !DILocalVariable(name: "cnt", scope: !4387, file: !866, line: 885, type: !111)
!4396 = !DILocation(line: 0, scope: !4387)
!4397 = !DILocation(line: 887, column: 14, scope: !4387)
!4398 = !DILocation(line: 887, column: 22, scope: !4387)
!4399 = !DILocation(line: 887, column: 2, scope: !4387)
!4400 = !DILocation(line: 887, column: 18, scope: !4387)
!4401 = !DILocation(line: 888, column: 7, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4387, file: !866, line: 887, column: 31)
!4403 = !DILocation(line: 889, column: 12, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !866, line: 889, column: 8)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !866, line: 888, column: 12)
!4406 = distinct !DILexicalBlock(scope: !4402, file: !866, line: 888, column: 7)
!4407 = !DILocation(line: 889, column: 8, scope: !4405)
!4408 = !DILocation(line: 890, column: 11, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !866, line: 890, column: 9)
!4410 = distinct !DILexicalBlock(scope: !4404, file: !866, line: 889, column: 18)
!4411 = !DILocation(line: 890, column: 9, scope: !4410)
!4412 = !DILocation(line: 892, column: 16, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4409, file: !866, line: 892, column: 16)
!4414 = !DILocation(line: 892, column: 16, scope: !4409)
!4415 = !DILocation(line: 895, column: 15, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4404, file: !866, line: 895, column: 15)
!4417 = !DILocation(line: 895, column: 15, scope: !4404)
!4418 = !DILocation(line: 900, column: 9, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4402, file: !866, line: 900, column: 7)
!4420 = !DILocation(line: 900, column: 7, scope: !4402)
!4421 = distinct !{!4421, !4399, !4422}
!4422 = !DILocation(line: 903, column: 2, scope: !4387)
!4423 = !DILocation(line: 906, column: 1, scope: !4387)
!4424 = distinct !DISubprogram(name: "is_fmt_spec", scope: !866, file: !866, line: 873, type: !4425, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !4427)
!4425 = !DISubroutineType(types: !4426)
!4426 = !{!131, !120}
!4427 = !{!4428}
!4428 = !DILocalVariable(name: "c", arg: 1, scope: !4424, file: !866, line: 873, type: !120)
!4429 = !DILocation(line: 0, scope: !4424)
!4430 = !DILocation(line: 875, column: 19, scope: !4424)
!4431 = !DILocation(line: 875, column: 2, scope: !4424)
!4432 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !866, file: !866, line: 908, type: !4433, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !4439)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!111, !133, !249, !4435, !133, !158, !2883, !249}
!4435 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3974, line: 308, baseType: !4436)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 32)
!4437 = !DISubroutineType(types: !4438)
!4438 = !{!111, !13, !249, !133}
!4439 = !{!4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4457, !4458, !4459, !4460, !4461, !4467, !4470, !4471, !4472, !4474, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4490, !4493, !4494, !4495, !4496, !4497, !4498, !4500, !4503, !4504, !4505}
!4440 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4432, file: !866, line: 908, type: !133)
!4441 = !DILocalVariable(name: "in_len", arg: 2, scope: !4432, file: !866, line: 909, type: !249)
!4442 = !DILocalVariable(name: "cb", arg: 3, scope: !4432, file: !866, line: 910, type: !4435)
!4443 = !DILocalVariable(name: "ctx", arg: 4, scope: !4432, file: !866, line: 911, type: !133)
!4444 = !DILocalVariable(name: "flags", arg: 5, scope: !4432, file: !866, line: 912, type: !158)
!4445 = !DILocalVariable(name: "strl", arg: 6, scope: !4432, file: !866, line: 913, type: !2883)
!4446 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4432, file: !866, line: 914, type: !249)
!4447 = !DILocalVariable(name: "buf", scope: !4432, file: !866, line: 918, type: !178)
!4448 = !DILocalVariable(name: "buf32", scope: !4432, file: !866, line: 919, type: !1852)
!4449 = !DILocalVariable(name: "args_size", scope: !4432, file: !866, line: 920, type: !32)
!4450 = !DILocalVariable(name: "ros_nbr", scope: !4432, file: !866, line: 920, type: !32)
!4451 = !DILocalVariable(name: "rws_nbr", scope: !4432, file: !866, line: 920, type: !32)
!4452 = !DILocalVariable(name: "fmt_present", scope: !4432, file: !866, line: 921, type: !131)
!4453 = !DILocalVariable(name: "rw_cpy", scope: !4432, file: !866, line: 922, type: !131)
!4454 = !DILocalVariable(name: "ro_cpy", scope: !4432, file: !866, line: 923, type: !131)
!4455 = !DILocalVariable(name: "in_desc", scope: !4432, file: !866, line: 924, type: !4456)
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 32)
!4457 = !DILocalVariable(name: "out_len", scope: !4432, file: !866, line: 960, type: !111)
!4458 = !DILocalVariable(name: "fmt", scope: !4432, file: !866, line: 965, type: !118)
!4459 = !DILocalVariable(name: "str_pos", scope: !4432, file: !866, line: 966, type: !178)
!4460 = !DILocalVariable(name: "strl_cnt", scope: !4432, file: !866, line: 967, type: !249)
!4461 = !DILocalVariable(name: "i", scope: !4462, file: !866, line: 973, type: !111)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !866, line: 973, column: 4)
!4463 = distinct !DILexicalBlock(scope: !4464, file: !866, line: 972, column: 15)
!4464 = distinct !DILexicalBlock(scope: !4465, file: !866, line: 972, column: 7)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !866, line: 970, column: 18)
!4466 = distinct !DILexicalBlock(scope: !4432, file: !866, line: 970, column: 6)
!4467 = !DILocalVariable(name: "str", scope: !4468, file: !866, line: 974, type: !118)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !866, line: 973, column: 38)
!4469 = distinct !DILexicalBlock(scope: !4462, file: !866, line: 973, column: 4)
!4470 = !DILocalVariable(name: "len", scope: !4468, file: !866, line: 975, type: !111)
!4471 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4465, file: !866, line: 990, type: !131)
!4472 = !DILocalVariable(name: "i", scope: !4473, file: !866, line: 995, type: !111)
!4473 = distinct !DILexicalBlock(scope: !4465, file: !866, line: 995, column: 3)
!4474 = !DILocalVariable(name: "arg_idx", scope: !4475, file: !866, line: 996, type: !128)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !866, line: 995, column: 37)
!4476 = distinct !DILexicalBlock(scope: !4473, file: !866, line: 995, column: 3)
!4477 = !DILocalVariable(name: "arg_pos", scope: !4475, file: !866, line: 997, type: !128)
!4478 = !DILocalVariable(name: "str", scope: !4475, file: !866, line: 998, type: !118)
!4479 = !DILocalVariable(name: "is_ro", scope: !4475, file: !866, line: 999, type: !131)
!4480 = !DILocalVariable(name: "len", scope: !4475, file: !866, line: 1000, type: !111)
!4481 = !DILocalVariable(name: "out_desc", scope: !4432, file: !866, line: 1038, type: !3977)
!4482 = !DILocalVariable(name: "cpy_str_pos", scope: !4432, file: !866, line: 1040, type: !3959)
!4483 = !DILocalVariable(name: "keep_str_pos", scope: !4432, file: !866, line: 1042, type: !3959)
!4484 = !DILocalVariable(name: "scpy_cnt", scope: !4432, file: !866, line: 1043, type: !128)
!4485 = !DILocalVariable(name: "keep_cnt", scope: !4432, file: !866, line: 1044, type: !128)
!4486 = !DILocalVariable(name: "dst", scope: !4432, file: !866, line: 1045, type: !178)
!4487 = !DILocalVariable(name: "rv", scope: !4432, file: !866, line: 1046, type: !111)
!4488 = !DILocalVariable(name: "i", scope: !4489, file: !866, line: 1074, type: !111)
!4489 = distinct !DILexicalBlock(scope: !4432, file: !866, line: 1074, column: 2)
!4490 = !DILocalVariable(name: "arg_idx", scope: !4491, file: !866, line: 1075, type: !128)
!4491 = distinct !DILexicalBlock(scope: !4492, file: !866, line: 1074, column: 36)
!4492 = distinct !DILexicalBlock(scope: !4489, file: !866, line: 1074, column: 2)
!4493 = !DILocalVariable(name: "arg_pos", scope: !4491, file: !866, line: 1076, type: !128)
!4494 = !DILocalVariable(name: "str", scope: !4491, file: !866, line: 1077, type: !118)
!4495 = !DILocalVariable(name: "is_ro", scope: !4491, file: !866, line: 1078, type: !131)
!4496 = !DILocalVariable(name: "in_desc_backup", scope: !4432, file: !866, line: 1114, type: !3977)
!4497 = !DILocalVariable(name: "strs_len", scope: !4432, file: !866, line: 1134, type: !249)
!4498 = !DILocalVariable(name: "i", scope: !4499, file: !866, line: 1143, type: !111)
!4499 = distinct !DILexicalBlock(scope: !4432, file: !866, line: 1143, column: 2)
!4500 = !DILocalVariable(name: "loc", scope: !4501, file: !866, line: 1144, type: !128)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !866, line: 1143, column: 37)
!4502 = distinct !DILexicalBlock(scope: !4499, file: !866, line: 1143, column: 2)
!4503 = !DILocalVariable(name: "str", scope: !4501, file: !866, line: 1145, type: !118)
!4504 = !DILocalVariable(name: "str_len", scope: !4501, file: !866, line: 1146, type: !272)
!4505 = !DILabel(scope: !4506, name: "calculate_string_length", file: !866, line: 1021)
!4506 = distinct !DILexicalBlock(scope: !4507, file: !866, line: 1020, column: 56)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !866, line: 1020, column: 15)
!4508 = distinct !DILexicalBlock(scope: !4475, file: !866, line: 1014, column: 8)
!4509 = !DILocation(line: 0, scope: !4432)
!4510 = !DILocation(line: 919, column: 20, scope: !4432)
!4511 = !DILocation(line: 921, column: 27, scope: !4432)
!4512 = !DILocation(line: 921, column: 21, scope: !4432)
!4513 = !DILocation(line: 926, column: 18, scope: !4432)
!4514 = !DILocation(line: 926, column: 11, scope: !4432)
!4515 = !DILocation(line: 926, column: 34, scope: !4432)
!4516 = !DILocation(line: 931, column: 21, scope: !4432)
!4517 = !DILocation(line: 931, column: 12, scope: !4432)
!4518 = !DILocation(line: 932, column: 11, scope: !4432)
!4519 = !DILocation(line: 932, column: 19, scope: !4432)
!4520 = !DILocation(line: 938, column: 21, scope: !4432)
!4521 = !DILocation(line: 938, column: 12, scope: !4432)
!4522 = !DILocation(line: 939, column: 19, scope: !4432)
!4523 = !DILocation(line: 939, column: 23, scope: !4432)
!4524 = !DILocation(line: 946, column: 14, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4432, file: !866, line: 946, column: 6)
!4526 = !DILocation(line: 947, column: 7, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !866, line: 947, column: 7)
!4528 = distinct !DILexicalBlock(scope: !4525, file: !866, line: 946, column: 26)
!4529 = !DILocation(line: 947, column: 7, scope: !4528)
!4530 = !DILocation(line: 948, column: 4, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4527, file: !866, line: 947, column: 11)
!4532 = !DILocation(line: 949, column: 3, scope: !4531)
!4533 = !DILocation(line: 958, column: 23, scope: !4432)
!4534 = !DILocation(line: 958, column: 14, scope: !4432)
!4535 = !DILocation(line: 958, column: 27, scope: !4432)
!4536 = !DILocation(line: 965, column: 41, scope: !4432)
!4537 = !DILocation(line: 965, column: 20, scope: !4432)
!4538 = !DILocation(line: 966, column: 22, scope: !4432)
!4539 = !DILocation(line: 970, column: 9, scope: !4466)
!4540 = !DILocation(line: 970, column: 6, scope: !4432)
!4541 = !DILocation(line: 972, column: 7, scope: !4465)
!4542 = !DILocation(line: 0, scope: !4462)
!4543 = !DILocation(line: 973, column: 4, scope: !4462)
!4544 = !DILocation(line: 974, column: 46, scope: !4468)
!4545 = !DILocation(line: 974, column: 40, scope: !4468)
!4546 = !DILocation(line: 974, column: 23, scope: !4468)
!4547 = !DILocation(line: 0, scope: !4468)
!4548 = !DILocation(line: 975, column: 15, scope: !4468)
!4549 = !DILocation(line: 978, column: 14, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4468, file: !866, line: 978, column: 9)
!4551 = !DILocation(line: 979, column: 25, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4550, file: !866, line: 978, column: 38)
!4553 = !DILocation(line: 979, column: 19, scope: !4552)
!4554 = !DILocation(line: 979, column: 6, scope: !4552)
!4555 = !DILocation(line: 979, column: 23, scope: !4552)
!4556 = !DILocation(line: 980, column: 5, scope: !4552)
!4557 = !DILocation(line: 981, column: 13, scope: !4468)
!4558 = !DILocation(line: 982, column: 12, scope: !4468)
!4559 = !DILocation(line: 973, column: 34, scope: !4469)
!4560 = !DILocation(line: 973, column: 22, scope: !4469)
!4561 = distinct !{!4561, !4543, !4562}
!4562 = !DILocation(line: 983, column: 4, scope: !4462)
!4563 = !DILocation(line: 985, column: 16, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !866, line: 985, column: 8)
!4565 = distinct !DILexicalBlock(scope: !4464, file: !866, line: 984, column: 10)
!4566 = !DILocation(line: 967, column: 9, scope: !4432)
!4567 = !DILocation(line: 971, column: 11, scope: !4465)
!4568 = !DILocation(line: 0, scope: !4465)
!4569 = !DILocation(line: 0, scope: !4473)
!4570 = !DILocation(line: 995, column: 21, scope: !4476)
!4571 = !DILocation(line: 995, column: 3, scope: !4473)
!4572 = !DILocation(line: 990, column: 34, scope: !4465)
!4573 = !DILocation(line: 990, column: 26, scope: !4465)
!4574 = !DILocation(line: 996, column: 30, scope: !4475)
!4575 = !DILocation(line: 0, scope: !4475)
!4576 = !DILocation(line: 997, column: 30, scope: !4475)
!4577 = !DILocation(line: 997, column: 22, scope: !4475)
!4578 = !DILocation(line: 998, column: 39, scope: !4475)
!4579 = !DILocation(line: 998, column: 22, scope: !4475)
!4580 = !DILocation(line: 999, column: 17, scope: !4475)
!4581 = !DILocation(line: 1002, column: 20, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4475, file: !866, line: 1002, column: 8)
!4583 = !DILocation(line: 996, column: 22, scope: !4475)
!4584 = !DILocation(line: 1002, column: 35, scope: !4582)
!4585 = !DILocation(line: 1002, column: 23, scope: !4582)
!4586 = !DILocation(line: 1002, column: 8, scope: !4475)
!4587 = !DILocation(line: 1003, column: 5, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !866, line: 1003, column: 5)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !866, line: 1003, column: 5)
!4590 = distinct !DILexicalBlock(scope: !4591, file: !866, line: 1003, column: 5)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !866, line: 1003, column: 5)
!4592 = distinct !DILexicalBlock(scope: !4582, file: !866, line: 1002, column: 45)
!4593 = !DILocation(line: 1010, column: 13, scope: !4592)
!4594 = !DILocation(line: 1011, column: 5, scope: !4592)
!4595 = !DILocation(line: 1014, column: 8, scope: !4475)
!4596 = !DILocation(line: 1015, column: 9, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4508, file: !866, line: 1014, column: 15)
!4598 = !DILocation(line: 1018, column: 14, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !866, line: 1017, column: 12)
!4600 = distinct !DILexicalBlock(scope: !4597, file: !866, line: 1015, column: 9)
!4601 = !DILocation(line: 1020, column: 4, scope: !4597)
!4602 = !DILocation(line: 1020, column: 15, scope: !4508)
!4603 = !DILocation(line: 1021, column: 1, scope: !4506)
!4604 = !DILocation(line: 1022, column: 11, scope: !4506)
!4605 = !DILocation(line: 1025, column: 14, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4506, file: !866, line: 1025, column: 9)
!4607 = !DILocation(line: 1026, column: 25, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4606, file: !866, line: 1025, column: 38)
!4609 = !DILocation(line: 1026, column: 19, scope: !4608)
!4610 = !DILocation(line: 1026, column: 6, scope: !4608)
!4611 = !DILocation(line: 1026, column: 23, scope: !4608)
!4612 = !DILocation(line: 1027, column: 5, scope: !4608)
!4613 = !DILocation(line: 1031, column: 21, scope: !4506)
!4614 = !DILocation(line: 1031, column: 13, scope: !4506)
!4615 = !DILocation(line: 1032, column: 4, scope: !4506)
!4616 = !DILocation(line: 995, column: 33, scope: !4476)
!4617 = distinct !{!4617, !4571, !4618}
!4618 = !DILocation(line: 1033, column: 3, scope: !4473)
!4619 = !DILocation(line: 1040, column: 10, scope: !4432)
!4620 = !DILocation(line: 1042, column: 10, scope: !4432)
!4621 = !DILocation(line: 1052, column: 6, scope: !4432)
!4622 = !DILocation(line: 1055, column: 9, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !866, line: 1052, column: 14)
!4624 = distinct !DILexicalBlock(scope: !4432, file: !866, line: 1052, column: 6)
!4625 = !DILocation(line: 1056, column: 2, scope: !4623)
!4626 = !DILocation(line: 1056, column: 21, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4624, file: !866, line: 1056, column: 13)
!4628 = !DILocation(line: 1066, column: 3, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !866, line: 1065, column: 11)
!4630 = distinct !DILexicalBlock(scope: !4432, file: !866, line: 1065, column: 6)
!4631 = !DILocation(line: 1067, column: 2, scope: !4629)
!4632 = !DILocation(line: 1068, column: 10, scope: !4432)
!4633 = !DILocation(line: 0, scope: !4489)
!4634 = !DILocation(line: 1074, column: 20, scope: !4492)
!4635 = !DILocation(line: 1074, column: 2, scope: !4489)
!4636 = !DILocation(line: 1110, column: 24, scope: !4432)
!4637 = !DILocation(line: 1053, column: 12, scope: !4623)
!4638 = !DILocation(line: 1054, column: 12, scope: !4623)
!4639 = !DILocation(line: 1108, column: 30, scope: !4432)
!4640 = !DILocation(line: 1108, column: 40, scope: !4432)
!4641 = !DILocation(line: 1108, column: 38, scope: !4432)
!4642 = !DILocation(line: 1109, column: 31, scope: !4432)
!4643 = !DILocation(line: 1109, column: 24, scope: !4432)
!4644 = !DILocation(line: 1110, column: 31, scope: !4432)
!4645 = !DILocation(line: 1114, column: 31, scope: !4432)
!4646 = !DILocation(line: 1114, column: 48, scope: !4432)
!4647 = !DILocation(line: 1115, column: 13, scope: !4432)
!4648 = !DILocation(line: 1118, column: 7, scope: !4432)
!4649 = !DILocation(line: 1119, column: 9, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4432, file: !866, line: 1119, column: 6)
!4651 = !DILocation(line: 1119, column: 6, scope: !4432)
!4652 = !DILocation(line: 1075, column: 29, scope: !4491)
!4653 = !DILocation(line: 1075, column: 21, scope: !4491)
!4654 = !DILocation(line: 0, scope: !4491)
!4655 = !DILocation(line: 1076, column: 29, scope: !4491)
!4656 = !DILocation(line: 1076, column: 21, scope: !4491)
!4657 = !DILocation(line: 1077, column: 38, scope: !4491)
!4658 = !DILocation(line: 1077, column: 21, scope: !4491)
!4659 = !DILocation(line: 1078, column: 16, scope: !4491)
!4660 = !DILocation(line: 1080, column: 19, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4491, file: !866, line: 1080, column: 7)
!4662 = !DILocation(line: 1080, column: 34, scope: !4661)
!4663 = !DILocation(line: 1080, column: 22, scope: !4661)
!4664 = !DILocation(line: 1080, column: 7, scope: !4491)
!4665 = !DILocation(line: 1084, column: 7, scope: !4491)
!4666 = !DILocation(line: 1085, column: 8, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !866, line: 1084, column: 14)
!4668 = distinct !DILexicalBlock(scope: !4491, file: !866, line: 1084, column: 7)
!4669 = !DILocation(line: 1087, column: 25, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !866, line: 1085, column: 49)
!4671 = distinct !DILexicalBlock(scope: !4667, file: !866, line: 1085, column: 8)
!4672 = !DILocation(line: 1088, column: 4, scope: !4670)
!4673 = !DILocation(line: 1088, column: 15, scope: !4671)
!4674 = !DILocation(line: 1090, column: 26, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !866, line: 1088, column: 61)
!4676 = distinct !DILexicalBlock(scope: !4671, file: !866, line: 1088, column: 15)
!4677 = !DILocation(line: 1091, column: 4, scope: !4675)
!4678 = !DILocation(line: 1095, column: 8, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4668, file: !866, line: 1094, column: 10)
!4680 = !DILocation(line: 1097, column: 25, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !866, line: 1095, column: 49)
!4682 = distinct !DILexicalBlock(scope: !4679, file: !866, line: 1095, column: 8)
!4683 = !DILocation(line: 1098, column: 4, scope: !4681)
!4684 = !DILocation(line: 1100, column: 26, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4682, file: !866, line: 1098, column: 11)
!4686 = !DILocation(line: 1100, column: 5, scope: !4685)
!4687 = !DILocation(line: 1100, column: 30, scope: !4685)
!4688 = !DILocation(line: 1101, column: 26, scope: !4685)
!4689 = !DILocation(line: 0, scope: !4668)
!4690 = !DILocation(line: 1074, column: 32, scope: !4492)
!4691 = distinct !{!4691, !4635, !4692}
!4692 = !DILocation(line: 1104, column: 2, scope: !4489)
!4693 = !DILocation(line: 1124, column: 13, scope: !4432)
!4694 = !DILocation(line: 1127, column: 10, scope: !4432)
!4695 = !DILocation(line: 1127, column: 7, scope: !4432)
!4696 = !DILocation(line: 1128, column: 9, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4432, file: !866, line: 1128, column: 6)
!4698 = !DILocation(line: 1128, column: 6, scope: !4432)
!4699 = !DILocation(line: 1134, column: 27, scope: !4432)
!4700 = !DILocation(line: 1136, column: 7, scope: !4432)
!4701 = !DILocation(line: 1137, column: 9, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4432, file: !866, line: 1137, column: 6)
!4703 = !DILocation(line: 1137, column: 6, scope: !4432)
!4704 = !DILocation(line: 1131, column: 10, scope: !4432)
!4705 = !DILocation(line: 1140, column: 10, scope: !4432)
!4706 = !DILocation(line: 0, scope: !4499)
!4707 = !DILocation(line: 1143, column: 20, scope: !4502)
!4708 = !DILocation(line: 1143, column: 2, scope: !4499)
!4709 = !DILocation(line: 1144, column: 3, scope: !4501)
!4710 = !DILocation(line: 1144, column: 17, scope: !4501)
!4711 = !DILocation(line: 0, scope: !4501)
!4712 = !DILocation(line: 1144, column: 11, scope: !4501)
!4713 = !DILocation(line: 1145, column: 38, scope: !4501)
!4714 = !DILocation(line: 1145, column: 21, scope: !4501)
!4715 = !DILocation(line: 1146, column: 22, scope: !4501)
!4716 = !DILocation(line: 1146, column: 29, scope: !4501)
!4717 = !DILocation(line: 1148, column: 8, scope: !4501)
!4718 = !DILocation(line: 1149, column: 10, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4501, file: !866, line: 1149, column: 7)
!4720 = !DILocation(line: 1149, column: 7, scope: !4501)
!4721 = !DILocation(line: 1154, column: 8, scope: !4501)
!4722 = !DILocation(line: 1155, column: 10, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4501, file: !866, line: 1155, column: 7)
!4724 = !DILocation(line: 1155, column: 7, scope: !4501)
!4725 = !DILocation(line: 1159, column: 2, scope: !4502)
!4726 = !DILocation(line: 1152, column: 11, scope: !4501)
!4727 = !DILocation(line: 1158, column: 11, scope: !4501)
!4728 = !DILocation(line: 1143, column: 33, scope: !4502)
!4729 = distinct !{!4729, !4708, !4730}
!4730 = !DILocation(line: 1159, column: 2, scope: !4499)
!4731 = !DILocation(line: 1162, column: 8, scope: !4432)
!4732 = !DILocation(line: 1164, column: 2, scope: !4432)
!4733 = !DILocation(line: 1165, column: 1, scope: !4432)
!4734 = distinct !DISubprogram(name: "get_package_len", scope: !866, file: !866, line: 196, type: !4735, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !4737)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!249, !133}
!4737 = !{!4738, !4739, !4740, !4741, !4742, !4743, !4744}
!4738 = !DILocalVariable(name: "packaged", arg: 1, scope: !4734, file: !866, line: 196, type: !133)
!4739 = !DILocalVariable(name: "buf", scope: !4734, file: !866, line: 200, type: !178)
!4740 = !DILocalVariable(name: "start", scope: !4734, file: !866, line: 201, type: !178)
!4741 = !DILocalVariable(name: "args_size", scope: !4734, file: !866, line: 202, type: !32)
!4742 = !DILocalVariable(name: "s_nbr", scope: !4734, file: !866, line: 202, type: !32)
!4743 = !DILocalVariable(name: "ros_nbr", scope: !4734, file: !866, line: 202, type: !32)
!4744 = !DILocalVariable(name: "i", scope: !4745, file: !866, line: 215, type: !111)
!4745 = distinct !DILexicalBlock(scope: !4734, file: !866, line: 215, column: 2)
!4746 = !DILocation(line: 0, scope: !4734)
!4747 = !DILocation(line: 204, column: 14, scope: !4734)
!4748 = !DILocation(line: 204, column: 21, scope: !4734)
!4749 = !DILocation(line: 205, column: 14, scope: !4734)
!4750 = !DILocation(line: 206, column: 14, scope: !4734)
!4751 = !DILocation(line: 209, column: 6, scope: !4734)
!4752 = !DILocation(line: 212, column: 6, scope: !4734)
!4753 = !DILocation(line: 0, scope: !4745)
!4754 = !DILocation(line: 215, column: 20, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4745, file: !866, line: 215, column: 2)
!4756 = !DILocation(line: 215, column: 2, scope: !4745)
!4757 = !DILocation(line: 220, column: 33, scope: !4734)
!4758 = !DILocation(line: 220, column: 2, scope: !4734)
!4759 = !DILocation(line: 216, column: 6, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4755, file: !866, line: 215, column: 34)
!4761 = !DILocation(line: 217, column: 10, scope: !4760)
!4762 = !DILocation(line: 217, column: 36, scope: !4760)
!4763 = !DILocation(line: 217, column: 7, scope: !4760)
!4764 = !DILocation(line: 215, column: 30, scope: !4755)
!4765 = distinct !{!4765, !4756, !4766}
!4766 = !DILocation(line: 218, column: 2, scope: !4745)
!4767 = distinct !DISubprogram(name: "append_string", scope: !866, file: !866, line: 223, type: !4768, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !4770)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{!111, !4435, !133, !118, !272}
!4770 = !{!4771, !4772, !4773, !4774}
!4771 = !DILocalVariable(name: "cb", arg: 1, scope: !4767, file: !866, line: 223, type: !4435)
!4772 = !DILocalVariable(name: "ctx", arg: 2, scope: !4767, file: !866, line: 223, type: !133)
!4773 = !DILocalVariable(name: "str", arg: 3, scope: !4767, file: !866, line: 223, type: !118)
!4774 = !DILocalVariable(name: "strl", arg: 4, scope: !4767, file: !866, line: 223, type: !272)
!4775 = !DILocation(line: 0, scope: !4767)
!4776 = !DILocation(line: 225, column: 9, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4767, file: !866, line: 225, column: 6)
!4778 = !DILocation(line: 225, column: 6, scope: !4767)
!4779 = !DILocation(line: 226, column: 14, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !866, line: 225, column: 18)
!4781 = !DILocation(line: 226, column: 12, scope: !4780)
!4782 = !DILocation(line: 226, column: 3, scope: !4780)
!4783 = !DILocation(line: 229, column: 14, scope: !4767)
!4784 = !DILocation(line: 229, column: 9, scope: !4767)
!4785 = !DILocation(line: 229, column: 27, scope: !4767)
!4786 = !DILocation(line: 229, column: 39, scope: !4767)
!4787 = !DILocation(line: 230, column: 17, scope: !4767)
!4788 = !DILocation(line: 230, column: 9, scope: !4767)
!4789 = !DILocation(line: 230, column: 2, scope: !4767)
!4790 = !DILocation(line: 231, column: 1, scope: !4767)
!4791 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !879, file: !879, line: 45, type: !881, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !4792)
!4792 = !{!4793}
!4793 = !DILocalVariable(name: "c", arg: 1, scope: !4791, file: !879, line: 45, type: !111)
!4794 = !DILocation(line: 0, scope: !4791)
!4795 = !DILocation(line: 50, column: 2, scope: !4791)
!4796 = distinct !DISubprogram(name: "__printk_hook_install", scope: !879, file: !879, line: 63, type: !4797, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !4799)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{null, !880}
!4799 = !{!4800}
!4800 = !DILocalVariable(name: "fn", arg: 1, scope: !4796, file: !879, line: 63, type: !880)
!4801 = !DILocation(line: 0, scope: !4796)
!4802 = !DILocation(line: 65, column: 12, scope: !4796)
!4803 = !DILocation(line: 66, column: 1, scope: !4796)
!4804 = distinct !DISubprogram(name: "__printk_get_hook", scope: !879, file: !879, line: 76, type: !4805, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !247)
!4805 = !DISubroutineType(types: !4806)
!4806 = !{!133}
!4807 = !DILocation(line: 78, column: 9, scope: !4804)
!4808 = !DILocation(line: 78, column: 2, scope: !4804)
!4809 = distinct !DISubprogram(name: "vprintk", scope: !879, file: !879, line: 113, type: !4810, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !4818)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{null, !118, !4812}
!4812 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3942, line: 99, baseType: !4813)
!4813 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3942, line: 40, baseType: !4814)
!4814 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !879, baseType: !4815)
!4815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4816)
!4816 = !{!4817}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4815, file: !879, line: 79, baseType: !133, size: 32)
!4818 = !{!4819, !4820, !4821}
!4819 = !DILocalVariable(name: "fmt", arg: 1, scope: !4809, file: !879, line: 113, type: !118)
!4820 = !DILocalVariable(name: "ap", arg: 2, scope: !4809, file: !879, line: 113, type: !4812)
!4821 = !DILocalVariable(name: "ctx", scope: !4822, file: !879, line: 121, type: !4824)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !879, line: 120, column: 27)
!4823 = distinct !DILexicalBlock(scope: !4809, file: !879, line: 120, column: 6)
!4824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !879, line: 81, size: 32, elements: !4825)
!4825 = !{!4826, !4827}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4824, file: !879, line: 85, baseType: !32, size: 32)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4824, file: !879, line: 86, baseType: !4828, offset: 32)
!4828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !2881)
!4829 = !DILocation(line: 0, scope: !4809)
!4830 = !DILocation(line: 148, column: 3, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4823, file: !879, line: 138, column: 9)
!4832 = !DILocation(line: 155, column: 1, scope: !4809)
!4833 = distinct !DISubprogram(name: "char_out", scope: !879, file: !879, line: 107, type: !4834, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !4836)
!4834 = !DISubroutineType(types: !4835)
!4835 = !{!111, !111, !133}
!4836 = !{!4837, !4838}
!4837 = !DILocalVariable(name: "c", arg: 1, scope: !4833, file: !879, line: 107, type: !111)
!4838 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4833, file: !879, line: 107, type: !133)
!4839 = !DILocation(line: 0, scope: !4833)
!4840 = !DILocation(line: 110, column: 9, scope: !4833)
!4841 = !DILocation(line: 110, column: 2, scope: !4833)
!4842 = distinct !DISubprogram(name: "cbvprintf", scope: !3974, file: !3974, line: 739, type: !4843, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !4845)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!111, !4303, !133, !118, !4812}
!4845 = !{!4846, !4847, !4848, !4849}
!4846 = !DILocalVariable(name: "out", arg: 1, scope: !4842, file: !3974, line: 739, type: !4303)
!4847 = !DILocalVariable(name: "ctx", arg: 2, scope: !4842, file: !3974, line: 739, type: !133)
!4848 = !DILocalVariable(name: "format", arg: 3, scope: !4842, file: !3974, line: 739, type: !118)
!4849 = !DILocalVariable(name: "ap", arg: 4, scope: !4842, file: !3974, line: 739, type: !4812)
!4850 = !DILocation(line: 0, scope: !4842)
!4851 = !DILocation(line: 741, column: 9, scope: !4842)
!4852 = !DILocation(line: 741, column: 2, scope: !4842)
!4853 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !879, file: !879, line: 157, type: !4854, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !4856)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{null, !253, !249}
!4856 = !{!4857, !4858, !4859}
!4857 = !DILocalVariable(name: "c", arg: 1, scope: !4853, file: !879, line: 157, type: !253)
!4858 = !DILocalVariable(name: "n", arg: 2, scope: !4853, file: !879, line: 157, type: !249)
!4859 = !DILocalVariable(name: "i", scope: !4853, file: !879, line: 159, type: !249)
!4860 = !DILocation(line: 0, scope: !4853)
!4861 = !DILocation(line: 164, column: 16, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !879, line: 164, column: 2)
!4863 = distinct !DILexicalBlock(scope: !4853, file: !879, line: 164, column: 2)
!4864 = !DILocation(line: 164, column: 2, scope: !4863)
!4865 = !DILocation(line: 165, column: 3, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4862, file: !879, line: 164, column: 26)
!4867 = !DILocation(line: 165, column: 13, scope: !4866)
!4868 = !DILocation(line: 164, column: 22, scope: !4862)
!4869 = distinct !{!4869, !4864, !4870}
!4870 = !DILocation(line: 166, column: 2, scope: !4863)
!4871 = !DILocation(line: 171, column: 1, scope: !4853)
!4872 = distinct !DISubprogram(name: "printk", scope: !879, file: !879, line: 203, type: !4873, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !4875)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{null, !118, null}
!4875 = !{!4876, !4877}
!4876 = !DILocalVariable(name: "fmt", arg: 1, scope: !4872, file: !879, line: 203, type: !118)
!4877 = !DILocalVariable(name: "ap", scope: !4872, file: !879, line: 205, type: !4812)
!4878 = !DILocation(line: 0, scope: !4872)
!4879 = !DILocation(line: 205, column: 2, scope: !4872)
!4880 = !DILocation(line: 205, column: 10, scope: !4872)
!4881 = !DILocation(line: 207, column: 2, scope: !4872)
!4882 = !DILocation(line: 209, column: 2, scope: !4872)
!4883 = !DILocation(line: 211, column: 2, scope: !4872)
!4884 = !DILocation(line: 212, column: 1, scope: !4872)
!4885 = distinct !DISubprogram(name: "snprintk", scope: !879, file: !879, line: 239, type: !4886, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !4888)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!111, !253, !249, !118, null}
!4888 = !{!4889, !4890, !4891, !4892, !4893}
!4889 = !DILocalVariable(name: "str", arg: 1, scope: !4885, file: !879, line: 239, type: !253)
!4890 = !DILocalVariable(name: "size", arg: 2, scope: !4885, file: !879, line: 239, type: !249)
!4891 = !DILocalVariable(name: "fmt", arg: 3, scope: !4885, file: !879, line: 239, type: !118)
!4892 = !DILocalVariable(name: "ap", scope: !4885, file: !879, line: 241, type: !4812)
!4893 = !DILocalVariable(name: "ret", scope: !4885, file: !879, line: 242, type: !111)
!4894 = !DILocation(line: 0, scope: !4885)
!4895 = !DILocation(line: 241, column: 2, scope: !4885)
!4896 = !DILocation(line: 241, column: 10, scope: !4885)
!4897 = !DILocation(line: 244, column: 2, scope: !4885)
!4898 = !DILocation(line: 245, column: 8, scope: !4885)
!4899 = !DILocation(line: 246, column: 2, scope: !4885)
!4900 = !DILocation(line: 249, column: 1, scope: !4885)
!4901 = !DILocation(line: 248, column: 2, scope: !4885)
!4902 = distinct !DISubprogram(name: "vsnprintk", scope: !879, file: !879, line: 251, type: !4903, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !4905)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!111, !253, !249, !118, !4812}
!4905 = !{!4906, !4907, !4908, !4909, !4910}
!4906 = !DILocalVariable(name: "str", arg: 1, scope: !4902, file: !879, line: 251, type: !253)
!4907 = !DILocalVariable(name: "size", arg: 2, scope: !4902, file: !879, line: 251, type: !249)
!4908 = !DILocalVariable(name: "fmt", arg: 3, scope: !4902, file: !879, line: 251, type: !118)
!4909 = !DILocalVariable(name: "ap", arg: 4, scope: !4902, file: !879, line: 251, type: !4812)
!4910 = !DILocalVariable(name: "ctx", scope: !4902, file: !879, line: 253, type: !4911)
!4911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !879, line: 217, size: 96, elements: !4912)
!4912 = !{!4913, !4914, !4915}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4911, file: !879, line: 218, baseType: !253, size: 32)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4911, file: !879, line: 219, baseType: !111, size: 32, offset: 32)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4911, file: !879, line: 220, baseType: !111, size: 32, offset: 64)
!4916 = !DILocation(line: 0, scope: !4902)
!4917 = !DILocation(line: 253, column: 2, scope: !4902)
!4918 = !DILocation(line: 253, column: 21, scope: !4902)
!4919 = !DILocation(line: 253, column: 27, scope: !4902)
!4920 = !DILocation(line: 255, column: 2, scope: !4902)
!4921 = !DILocation(line: 257, column: 10, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4902, file: !879, line: 257, column: 6)
!4923 = !DILocation(line: 257, column: 22, scope: !4922)
!4924 = !DILocation(line: 257, column: 16, scope: !4922)
!4925 = !DILocation(line: 257, column: 6, scope: !4902)
!4926 = !DILocation(line: 258, column: 3, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4922, file: !879, line: 257, column: 27)
!4928 = !DILocation(line: 258, column: 18, scope: !4927)
!4929 = !DILocation(line: 259, column: 2, scope: !4927)
!4930 = !DILocation(line: 262, column: 1, scope: !4902)
!4931 = !DILocation(line: 261, column: 2, scope: !4902)
!4932 = distinct !DISubprogram(name: "str_out", scope: !879, file: !879, line: 223, type: !4933, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !4936)
!4933 = !DISubroutineType(types: !4934)
!4934 = !{!111, !111, !4935}
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 32)
!4936 = !{!4937, !4938}
!4937 = !DILocalVariable(name: "c", arg: 1, scope: !4932, file: !879, line: 223, type: !111)
!4938 = !DILocalVariable(name: "ctx", arg: 2, scope: !4932, file: !879, line: 223, type: !4935)
!4939 = !DILocation(line: 0, scope: !4932)
!4940 = !DILocation(line: 225, column: 11, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4932, file: !879, line: 225, column: 6)
!4942 = !DILocation(line: 225, column: 15, scope: !4941)
!4943 = !DILocation(line: 0, scope: !4941)
!4944 = !DILocation(line: 225, column: 23, scope: !4941)
!4945 = !DILocation(line: 225, column: 45, scope: !4941)
!4946 = !DILocation(line: 225, column: 37, scope: !4941)
!4947 = !DILocation(line: 225, column: 6, scope: !4932)
!4948 = !DILocation(line: 226, column: 8, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4941, file: !879, line: 225, column: 50)
!4950 = !DILocation(line: 226, column: 13, scope: !4949)
!4951 = !DILocation(line: 227, column: 3, scope: !4949)
!4952 = !DILocation(line: 230, column: 29, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4932, file: !879, line: 230, column: 6)
!4954 = !DILocation(line: 230, column: 17, scope: !4953)
!4955 = !DILocation(line: 230, column: 6, scope: !4932)
!4956 = !DILocation(line: 231, column: 22, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4953, file: !879, line: 230, column: 34)
!4958 = !DILocation(line: 231, column: 3, scope: !4957)
!4959 = !DILocation(line: 231, column: 26, scope: !4957)
!4960 = !DILocation(line: 232, column: 2, scope: !4957)
!4961 = !DILocation(line: 233, column: 28, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4953, file: !879, line: 232, column: 9)
!4963 = !DILocation(line: 233, column: 22, scope: !4962)
!4964 = !DILocation(line: 233, column: 3, scope: !4962)
!4965 = !DILocation(line: 233, column: 26, scope: !4962)
!4966 = !DILocation(line: 237, column: 1, scope: !4932)
!4967 = distinct !DISubprogram(name: "z_thread_entry", scope: !4968, file: !4968, line: 30, type: !4969, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !4971)
!4968 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4969 = !DISubroutineType(types: !4970)
!4970 = !{null, !403, !133, !133, !133}
!4971 = !{!4972, !4973, !4974, !4975}
!4972 = !DILocalVariable(name: "entry", arg: 1, scope: !4967, file: !4968, line: 30, type: !403)
!4973 = !DILocalVariable(name: "p1", arg: 2, scope: !4967, file: !4968, line: 31, type: !133)
!4974 = !DILocalVariable(name: "p2", arg: 3, scope: !4967, file: !4968, line: 31, type: !133)
!4975 = !DILocalVariable(name: "p3", arg: 4, scope: !4967, file: !4968, line: 31, type: !133)
!4976 = !DILocation(line: 0, scope: !4967)
!4977 = !DILocation(line: 36, column: 2, scope: !4967)
!4978 = !DILocation(line: 38, column: 17, scope: !4967)
!4979 = !DILocation(line: 38, column: 2, scope: !4967)
!4980 = !DILocation(line: 45, column: 2, scope: !4967)
!4981 = distinct !DISubprogram(name: "k_current_get", scope: !221, file: !221, line: 530, type: !4982, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !247)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{!4984}
!4984 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !290, line: 347, baseType: !4985)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4986, size: 32)
!4986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !4987)
!4987 = !{!4988, !5046, !5058, !5059, !5060, !5061, !5062, !5075}
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4986, file: !290, line: 247, baseType: !4989, size: 384)
!4989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !4990)
!4990 = !{!4991, !5015, !5022, !5023, !5024, !5033, !5034, !5035}
!4991 = !DIDerivedType(tag: DW_TAG_member, scope: !4989, file: !290, line: 60, baseType: !4992, size: 64)
!4992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4989, file: !290, line: 60, size: 64, elements: !4993)
!4993 = !{!4994, !5009}
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4992, file: !290, line: 61, baseType: !4995, size: 64)
!4995 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !4996)
!4996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !4997)
!4997 = !{!4998, !5004}
!4998 = !DIDerivedType(tag: DW_TAG_member, scope: !4996, file: !230, line: 38, baseType: !4999, size: 32)
!4999 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4996, file: !230, line: 38, size: 32, elements: !5000)
!5000 = !{!5001, !5003}
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4999, file: !230, line: 39, baseType: !5002, size: 32)
!5002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4996, size: 32)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4999, file: !230, line: 40, baseType: !5002, size: 32)
!5004 = !DIDerivedType(tag: DW_TAG_member, scope: !4996, file: !230, line: 42, baseType: !5005, size: 32, offset: 32)
!5005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4996, file: !230, line: 42, size: 32, elements: !5006)
!5006 = !{!5007, !5008}
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5005, file: !230, line: 43, baseType: !5002, size: 32)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5005, file: !230, line: 44, baseType: !5002, size: 32)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4992, file: !290, line: 62, baseType: !5010, size: 64)
!5010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !5011)
!5011 = !{!5012}
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5010, file: !302, line: 50, baseType: !5013, size: 64)
!5013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5014, size: 64, elements: !307)
!5014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5010, size: 32)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4989, file: !290, line: 68, baseType: !5016, size: 32, offset: 64)
!5016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5017, size: 32)
!5017 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !5018)
!5018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !5019)
!5019 = !{!5020}
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5018, file: !225, line: 232, baseType: !5021, size: 64)
!5021 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !4996)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4989, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4989, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!5024 = !DIDerivedType(tag: DW_TAG_member, scope: !4989, file: !290, line: 90, baseType: !5025, size: 16, offset: 112)
!5025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4989, file: !290, line: 90, size: 16, elements: !5026)
!5026 = !{!5027, !5032}
!5027 = !DIDerivedType(tag: DW_TAG_member, scope: !5025, file: !290, line: 91, baseType: !5028, size: 16)
!5028 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5025, file: !290, line: 91, size: 16, elements: !5029)
!5029 = !{!5030, !5031}
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5028, file: !290, line: 96, baseType: !320, size: 8)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5028, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5025, file: !290, line: 100, baseType: !272, size: 16)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4989, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4989, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4989, file: !290, line: 131, baseType: !5036, size: 192, offset: 192)
!5036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !5037)
!5037 = !{!5038, !5039, !5045}
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5036, file: !225, line: 245, baseType: !4995, size: 64)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5036, file: !225, line: 246, baseType: !5040, size: 32, offset: 64)
!5040 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !5041)
!5041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5042, size: 32)
!5042 = !DISubroutineType(types: !5043)
!5043 = !{null, !5044}
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5036, size: 32)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5036, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4986, file: !290, line: 250, baseType: !5047, size: 288, offset: 384)
!5047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !5048)
!5048 = !{!5049, !5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057}
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5047, file: !339, line: 26, baseType: !158, size: 32)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5047, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5047, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5047, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5047, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5047, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5047, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5047, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5047, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4986, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4986, file: !290, line: 256, baseType: !5017, size: 64, offset: 704)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4986, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4986, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4986, file: !290, line: 325, baseType: !5063, size: 32, offset: 1056)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 32)
!5064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !5065)
!5065 = !{!5066, !5072, !5073}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5064, file: !221, line: 5074, baseType: !5067, size: 96)
!5067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !5068)
!5068 = !{!5069, !5070, !5071}
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5067, file: !363, line: 57, baseType: !366, size: 32)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5067, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5067, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5064, file: !221, line: 5075, baseType: !5017, size: 64, offset: 96)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5064, file: !221, line: 5076, baseType: !5074, offset: 160)
!5074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4986, file: !290, line: 343, baseType: !5076, size: 64, offset: 1088)
!5076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !5077)
!5077 = !{!5078, !5079}
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5076, file: !339, line: 63, baseType: !158, size: 32)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5076, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!5080 = !DILocation(line: 535, column: 9, scope: !4981)
!5081 = !DILocation(line: 535, column: 2, scope: !4981)
!5082 = distinct !DISubprogram(name: "k_thread_abort", scope: !3900, file: !3900, line: 188, type: !5083, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !5085)
!5083 = !DISubroutineType(types: !5084)
!5084 = !{null, !4984}
!5085 = !{!5086}
!5086 = !DILocalVariable(name: "thread", arg: 1, scope: !5082, file: !3900, line: 188, type: !4984)
!5087 = !DILocation(line: 0, scope: !5082)
!5088 = !DILocation(line: 197, column: 2, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5082, file: !3900, line: 197, column: 2)
!5090 = !{i64 2151034907}
!5091 = !DILocation(line: 198, column: 2, scope: !5082)
!5092 = !DILocation(line: 199, column: 1, scope: !5082)
!5093 = distinct !DISubprogram(name: "z_current_get", scope: !3900, file: !3900, line: 173, type: !4982, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !247)
!5094 = !DILocation(line: 180, column: 2, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5093, file: !3900, line: 180, column: 2)
!5096 = !{i64 2151034839}
!5097 = !DILocation(line: 181, column: 9, scope: !5093)
!5098 = !DILocation(line: 181, column: 2, scope: !5093)
!5099 = distinct !DISubprogram(name: "sys_heap_free", scope: !5100, file: !5100, line: 163, type: !5101, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5109)
!5100 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5101 = !DISubroutineType(types: !5102)
!5102 = !{null, !5103, !133}
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5104, size: 32)
!5104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !5105)
!5105 = !{!5106, !5107, !5108}
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5104, file: !363, line: 57, baseType: !2868, size: 32)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5104, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5104, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!5109 = !{!5110, !5111, !5112, !5113}
!5110 = !DILocalVariable(name: "heap", arg: 1, scope: !5099, file: !5100, line: 163, type: !5103)
!5111 = !DILocalVariable(name: "mem", arg: 2, scope: !5099, file: !5100, line: 163, type: !133)
!5112 = !DILocalVariable(name: "h", scope: !5099, file: !5100, line: 168, type: !2868)
!5113 = !DILocalVariable(name: "c", scope: !5099, file: !5100, line: 169, type: !2873)
!5114 = !DILocation(line: 0, scope: !5099)
!5115 = !DILocation(line: 165, column: 10, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5099, file: !5100, line: 165, column: 6)
!5117 = !DILocation(line: 165, column: 6, scope: !5099)
!5118 = !DILocation(line: 168, column: 27, scope: !5099)
!5119 = !DILocation(line: 169, column: 16, scope: !5099)
!5120 = !{i32 0, i32 536870912}
!5121 = !DILocation(line: 187, column: 2, scope: !5099)
!5122 = !DILocation(line: 197, column: 2, scope: !5099)
!5123 = !DILocation(line: 198, column: 1, scope: !5099)
!5124 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5100, file: !5100, line: 157, type: !5125, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5127)
!5125 = !DISubroutineType(types: !5126)
!5126 = !{!2873, !2868, !133}
!5127 = !{!5128, !5129, !5130, !5131}
!5128 = !DILocalVariable(name: "h", arg: 1, scope: !5124, file: !5100, line: 157, type: !2868)
!5129 = !DILocalVariable(name: "p", arg: 2, scope: !5124, file: !5100, line: 157, type: !133)
!5130 = !DILocalVariable(name: "mem", scope: !5124, file: !5100, line: 159, type: !178)
!5131 = !DILocalVariable(name: "base", scope: !5124, file: !5100, line: 159, type: !178)
!5132 = !DILocation(line: 0, scope: !5124)
!5133 = !DILocation(line: 159, column: 39, scope: !5124)
!5134 = !DILocation(line: 160, column: 14, scope: !5124)
!5135 = !DILocation(line: 160, column: 38, scope: !5124)
!5136 = !DILocation(line: 160, column: 46, scope: !5124)
!5137 = !DILocation(line: 160, column: 2, scope: !5124)
!5138 = distinct !DISubprogram(name: "set_chunk_used", scope: !2855, file: !2855, line: 147, type: !5139, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5141)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{null, !2868, !2873, !131}
!5141 = !{!5142, !5143, !5144, !5145, !5146}
!5142 = !DILocalVariable(name: "h", arg: 1, scope: !5138, file: !2855, line: 147, type: !2868)
!5143 = !DILocalVariable(name: "c", arg: 2, scope: !5138, file: !2855, line: 147, type: !2873)
!5144 = !DILocalVariable(name: "used", arg: 3, scope: !5138, file: !2855, line: 147, type: !131)
!5145 = !DILocalVariable(name: "buf", scope: !5138, file: !2855, line: 149, type: !2862)
!5146 = !DILocalVariable(name: "cmem", scope: !5138, file: !2855, line: 150, type: !133)
!5147 = !DILocation(line: 0, scope: !5138)
!5148 = !DILocation(line: 149, column: 22, scope: !5138)
!5149 = !DILocation(line: 0, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5151, file: !2855, line: 159, column: 7)
!5151 = distinct !DILexicalBlock(scope: !5152, file: !2855, line: 158, column: 9)
!5152 = distinct !DILexicalBlock(scope: !5138, file: !2855, line: 152, column: 6)
!5153 = !DILocation(line: 159, column: 7, scope: !5151)
!5154 = !DILocation(line: 165, column: 1, scope: !5138)
!5155 = distinct !DISubprogram(name: "free_chunk", scope: !5100, file: !5100, line: 133, type: !5156, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5158)
!5156 = !DISubroutineType(types: !5157)
!5157 = !{null, !2868, !2873}
!5158 = !{!5159, !5160}
!5159 = !DILocalVariable(name: "h", arg: 1, scope: !5155, file: !5100, line: 133, type: !2868)
!5160 = !DILocalVariable(name: "c", arg: 2, scope: !5155, file: !5100, line: 133, type: !2873)
!5161 = !DILocation(line: 0, scope: !5155)
!5162 = !DILocation(line: 136, column: 21, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5155, file: !5100, line: 136, column: 6)
!5164 = !DILocation(line: 136, column: 7, scope: !5163)
!5165 = !DILocation(line: 136, column: 6, scope: !5155)
!5166 = !DILocation(line: 137, column: 3, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !5100, line: 136, column: 41)
!5168 = !DILocation(line: 138, column: 22, scope: !5167)
!5169 = !DILocation(line: 138, column: 3, scope: !5167)
!5170 = !DILocation(line: 139, column: 2, scope: !5167)
!5171 = !DILocation(line: 142, column: 21, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5155, file: !5100, line: 142, column: 6)
!5173 = !{i32 -65535, i32 536903678}
!5174 = !DILocation(line: 142, column: 7, scope: !5172)
!5175 = !DILocation(line: 142, column: 6, scope: !5155)
!5176 = !DILocation(line: 143, column: 3, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5172, file: !5100, line: 142, column: 40)
!5178 = !DILocation(line: 144, column: 19, scope: !5177)
!5179 = !DILocation(line: 144, column: 3, scope: !5177)
!5180 = !DILocation(line: 145, column: 7, scope: !5177)
!5181 = !DILocation(line: 146, column: 2, scope: !5177)
!5182 = !DILocation(line: 148, column: 2, scope: !5155)
!5183 = !DILocation(line: 149, column: 1, scope: !5155)
!5184 = distinct !DISubprogram(name: "right_chunk", scope: !2855, file: !2855, line: 204, type: !5185, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5187)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!2873, !2868, !2873}
!5187 = !{!5188, !5189}
!5188 = !DILocalVariable(name: "h", arg: 1, scope: !5184, file: !2855, line: 204, type: !2868)
!5189 = !DILocalVariable(name: "c", arg: 2, scope: !5184, file: !2855, line: 204, type: !2873)
!5190 = !DILocation(line: 0, scope: !5184)
!5191 = !DILocation(line: 206, column: 13, scope: !5184)
!5192 = !DILocation(line: 206, column: 11, scope: !5184)
!5193 = !DILocation(line: 206, column: 2, scope: !5184)
!5194 = distinct !DISubprogram(name: "chunk_used", scope: !2855, file: !2855, line: 137, type: !5195, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5197)
!5195 = !DISubroutineType(types: !5196)
!5196 = !{!131, !2868, !2873}
!5197 = !{!5198, !5199}
!5198 = !DILocalVariable(name: "h", arg: 1, scope: !5194, file: !2855, line: 137, type: !2868)
!5199 = !DILocalVariable(name: "c", arg: 2, scope: !5194, file: !2855, line: 137, type: !2873)
!5200 = !DILocation(line: 0, scope: !5194)
!5201 = !DILocation(line: 139, column: 9, scope: !5194)
!5202 = !DILocation(line: 139, column: 42, scope: !5194)
!5203 = !DILocation(line: 139, column: 2, scope: !5194)
!5204 = distinct !DISubprogram(name: "free_list_remove", scope: !5100, file: !5100, line: 60, type: !5156, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5205)
!5205 = !{!5206, !5207, !5208}
!5206 = !DILocalVariable(name: "h", arg: 1, scope: !5204, file: !5100, line: 60, type: !2868)
!5207 = !DILocalVariable(name: "c", arg: 2, scope: !5204, file: !5100, line: 60, type: !2873)
!5208 = !DILocalVariable(name: "bidx", scope: !5209, file: !5100, line: 63, type: !111)
!5209 = distinct !DILexicalBlock(scope: !5210, file: !5100, line: 62, column: 31)
!5210 = distinct !DILexicalBlock(scope: !5204, file: !5100, line: 62, column: 6)
!5211 = !DILocation(line: 0, scope: !5204)
!5212 = !DILocation(line: 63, column: 28, scope: !5209)
!5213 = !{i32 0, i32 32768}
!5214 = !DILocation(line: 63, column: 14, scope: !5209)
!5215 = !DILocation(line: 0, scope: !5209)
!5216 = !DILocation(line: 64, column: 3, scope: !5209)
!5217 = !DILocation(line: 66, column: 1, scope: !5204)
!5218 = distinct !DISubprogram(name: "merge_chunks", scope: !5100, file: !5100, line: 125, type: !5219, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5221)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{null, !2868, !2873, !2873}
!5221 = !{!5222, !5223, !5224, !5225}
!5222 = !DILocalVariable(name: "h", arg: 1, scope: !5218, file: !5100, line: 125, type: !2868)
!5223 = !DILocalVariable(name: "lc", arg: 2, scope: !5218, file: !5100, line: 125, type: !2873)
!5224 = !DILocalVariable(name: "rc", arg: 3, scope: !5218, file: !5100, line: 125, type: !2873)
!5225 = !DILocalVariable(name: "newsz", scope: !5218, file: !5100, line: 127, type: !5226)
!5226 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2855, line: 62, baseType: !158)
!5227 = !DILocation(line: 0, scope: !5218)
!5228 = !DILocation(line: 127, column: 20, scope: !5218)
!5229 = !DILocation(line: 127, column: 40, scope: !5218)
!5230 = !DILocation(line: 127, column: 38, scope: !5218)
!5231 = !DILocation(line: 129, column: 2, scope: !5218)
!5232 = !DILocation(line: 130, column: 25, scope: !5218)
!5233 = !DILocation(line: 130, column: 2, scope: !5218)
!5234 = !DILocation(line: 131, column: 1, scope: !5218)
!5235 = distinct !DISubprogram(name: "left_chunk", scope: !2855, file: !2855, line: 199, type: !5185, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5236)
!5236 = !{!5237, !5238}
!5237 = !DILocalVariable(name: "h", arg: 1, scope: !5235, file: !2855, line: 199, type: !2868)
!5238 = !DILocalVariable(name: "c", arg: 2, scope: !5235, file: !2855, line: 199, type: !2873)
!5239 = !DILocation(line: 0, scope: !5235)
!5240 = !DILocation(line: 201, column: 13, scope: !5235)
!5241 = !DILocation(line: 201, column: 11, scope: !5235)
!5242 = !DILocation(line: 201, column: 2, scope: !5235)
!5243 = distinct !DISubprogram(name: "free_list_add", scope: !5100, file: !5100, line: 98, type: !5156, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5244)
!5244 = !{!5245, !5246, !5247}
!5245 = !DILocalVariable(name: "h", arg: 1, scope: !5243, file: !5100, line: 98, type: !2868)
!5246 = !DILocalVariable(name: "c", arg: 2, scope: !5243, file: !5100, line: 98, type: !2873)
!5247 = !DILocalVariable(name: "bidx", scope: !5248, file: !5100, line: 101, type: !111)
!5248 = distinct !DILexicalBlock(scope: !5249, file: !5100, line: 100, column: 31)
!5249 = distinct !DILexicalBlock(scope: !5243, file: !5100, line: 100, column: 6)
!5250 = !DILocation(line: 0, scope: !5243)
!5251 = !DILocation(line: 101, column: 28, scope: !5248)
!5252 = !DILocation(line: 101, column: 14, scope: !5248)
!5253 = !DILocation(line: 0, scope: !5248)
!5254 = !DILocation(line: 102, column: 3, scope: !5248)
!5255 = !DILocation(line: 104, column: 1, scope: !5243)
!5256 = distinct !DISubprogram(name: "chunk_size", scope: !2855, file: !2855, line: 142, type: !5257, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5259)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{!5226, !2868, !2873}
!5259 = !{!5260, !5261}
!5260 = !DILocalVariable(name: "h", arg: 1, scope: !5256, file: !2855, line: 142, type: !2868)
!5261 = !DILocalVariable(name: "c", arg: 2, scope: !5256, file: !2855, line: 142, type: !2873)
!5262 = !DILocation(line: 0, scope: !5256)
!5263 = !DILocation(line: 144, column: 9, scope: !5256)
!5264 = !DILocation(line: 144, column: 42, scope: !5256)
!5265 = !DILocation(line: 144, column: 2, scope: !5256)
!5266 = distinct !DISubprogram(name: "bucket_idx", scope: !2855, file: !2855, line: 250, type: !5267, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5269)
!5267 = !DISubroutineType(types: !5268)
!5268 = !{!111, !2868, !5226}
!5269 = !{!5270, !5271, !5272}
!5270 = !DILocalVariable(name: "h", arg: 1, scope: !5266, file: !2855, line: 250, type: !2868)
!5271 = !DILocalVariable(name: "sz", arg: 2, scope: !5266, file: !2855, line: 250, type: !5226)
!5272 = !DILocalVariable(name: "usable_sz", scope: !5266, file: !2855, line: 252, type: !32)
!5273 = !DILocation(line: 0, scope: !5266)
!5274 = !DILocation(line: 252, column: 32, scope: !5266)
!5275 = !DILocation(line: 252, column: 30, scope: !5266)
!5276 = !DILocation(line: 252, column: 50, scope: !5266)
!5277 = !DILocation(line: 253, column: 14, scope: !5266)
!5278 = !{i32 0, i32 33}
!5279 = !DILocation(line: 253, column: 12, scope: !5266)
!5280 = !DILocation(line: 253, column: 2, scope: !5266)
!5281 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5100, file: !5100, line: 68, type: !5282, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5284)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{null, !2868, !2873, !111}
!5284 = !{!5285, !5286, !5287, !5288, !5290, !5293}
!5285 = !DILocalVariable(name: "h", arg: 1, scope: !5281, file: !5100, line: 68, type: !2868)
!5286 = !DILocalVariable(name: "c", arg: 2, scope: !5281, file: !5100, line: 68, type: !2873)
!5287 = !DILocalVariable(name: "bidx", arg: 3, scope: !5281, file: !5100, line: 68, type: !111)
!5288 = !DILocalVariable(name: "b", scope: !5281, file: !5100, line: 70, type: !5289)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 32)
!5290 = !DILocalVariable(name: "second", scope: !5291, file: !5100, line: 84, type: !2873)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !5100, line: 80, column: 9)
!5292 = distinct !DILexicalBlock(scope: !5281, file: !5100, line: 72, column: 6)
!5293 = !DILocalVariable(name: "first", scope: !5291, file: !5100, line: 85, type: !2873)
!5294 = !DILocation(line: 0, scope: !5281)
!5295 = !DILocation(line: 72, column: 9, scope: !5292)
!5296 = !DILocation(line: 72, column: 14, scope: !5292)
!5297 = !DILocation(line: 72, column: 6, scope: !5281)
!5298 = !DILocation(line: 76, column: 23, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5292, file: !5100, line: 72, column: 21)
!5300 = !DILocation(line: 76, column: 6, scope: !5299)
!5301 = !DILocation(line: 76, column: 20, scope: !5299)
!5302 = !DILocation(line: 77, column: 11, scope: !5299)
!5303 = !DILocation(line: 78, column: 3, scope: !5299)
!5304 = !DILocation(line: 79, column: 3, scope: !5299)
!5305 = !DILocation(line: 80, column: 2, scope: !5299)
!5306 = !DILocation(line: 0, scope: !5291)
!5307 = !DILocation(line: 85, column: 21, scope: !5291)
!5308 = !{i32 0, i32 65536}
!5309 = !DILocation(line: 87, column: 3, scope: !5291)
!5310 = !DILocation(line: 88, column: 3, scope: !5291)
!5311 = !DILocation(line: 89, column: 3, scope: !5291)
!5312 = !DILocation(line: 90, column: 3, scope: !5291)
!5313 = !DILocation(line: 96, column: 1, scope: !5281)
!5314 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2855, file: !2855, line: 187, type: !5219, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5315)
!5315 = !{!5316, !5317, !5318}
!5316 = !DILocalVariable(name: "h", arg: 1, scope: !5314, file: !2855, line: 187, type: !2868)
!5317 = !DILocalVariable(name: "c", arg: 2, scope: !5314, file: !2855, line: 187, type: !2873)
!5318 = !DILocalVariable(name: "prev", arg: 3, scope: !5314, file: !2855, line: 188, type: !2873)
!5319 = !DILocation(line: 0, scope: !5314)
!5320 = !DILocation(line: 190, column: 2, scope: !5314)
!5321 = !DILocation(line: 191, column: 1, scope: !5314)
!5322 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2855, file: !2855, line: 193, type: !5219, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5323)
!5323 = !{!5324, !5325, !5326}
!5324 = !DILocalVariable(name: "h", arg: 1, scope: !5322, file: !2855, line: 193, type: !2868)
!5325 = !DILocalVariable(name: "c", arg: 2, scope: !5322, file: !2855, line: 193, type: !2873)
!5326 = !DILocalVariable(name: "next", arg: 3, scope: !5322, file: !2855, line: 194, type: !2873)
!5327 = !DILocation(line: 0, scope: !5322)
!5328 = !DILocation(line: 196, column: 2, scope: !5322)
!5329 = !DILocation(line: 197, column: 1, scope: !5322)
!5330 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2855, file: !2855, line: 177, type: !5185, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5331)
!5331 = !{!5332, !5333}
!5332 = !DILocalVariable(name: "h", arg: 1, scope: !5330, file: !2855, line: 177, type: !2868)
!5333 = !DILocalVariable(name: "c", arg: 2, scope: !5330, file: !2855, line: 177, type: !2873)
!5334 = !DILocation(line: 0, scope: !5330)
!5335 = !DILocation(line: 179, column: 9, scope: !5330)
!5336 = !DILocation(line: 179, column: 2, scope: !5330)
!5337 = distinct !DISubprogram(name: "chunk_field", scope: !2855, file: !2855, line: 107, type: !5338, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5340)
!5338 = !DISubroutineType(types: !5339)
!5339 = !{!2873, !2868, !2873, !2854}
!5340 = !{!5341, !5342, !5343, !5344, !5345}
!5341 = !DILocalVariable(name: "h", arg: 1, scope: !5337, file: !2855, line: 107, type: !2868)
!5342 = !DILocalVariable(name: "c", arg: 2, scope: !5337, file: !2855, line: 107, type: !2873)
!5343 = !DILocalVariable(name: "f", arg: 3, scope: !5337, file: !2855, line: 108, type: !2854)
!5344 = !DILocalVariable(name: "buf", scope: !5337, file: !2855, line: 110, type: !2862)
!5345 = !DILocalVariable(name: "cmem", scope: !5337, file: !2855, line: 111, type: !133)
!5346 = !DILocation(line: 0, scope: !5337)
!5347 = !DILocation(line: 110, column: 22, scope: !5337)
!5348 = !DILocation(line: 111, column: 15, scope: !5337)
!5349 = !DILocation(line: 116, column: 11, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5351, file: !2855, line: 115, column: 9)
!5351 = distinct !DILexicalBlock(scope: !5337, file: !2855, line: 113, column: 6)
!5352 = !DILocation(line: 116, column: 10, scope: !5350)
!5353 = !DILocation(line: 118, column: 1, scope: !5337)
!5354 = distinct !DISubprogram(name: "chunk_buf", scope: !2855, file: !2855, line: 101, type: !5355, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5357)
!5355 = !DISubroutineType(types: !5356)
!5356 = !{!2862, !2868}
!5357 = !{!5358}
!5358 = !DILocalVariable(name: "h", arg: 1, scope: !5354, file: !2855, line: 101, type: !2868)
!5359 = !DILocation(line: 0, scope: !5354)
!5360 = !DILocation(line: 104, column: 9, scope: !5354)
!5361 = !DILocation(line: 104, column: 2, scope: !5354)
!5362 = distinct !DISubprogram(name: "chunk_set", scope: !2855, file: !2855, line: 120, type: !5363, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5365)
!5363 = !DISubroutineType(types: !5364)
!5364 = !{null, !2868, !2873, !2854, !2873}
!5365 = !{!5366, !5367, !5368, !5369, !5370, !5371}
!5366 = !DILocalVariable(name: "h", arg: 1, scope: !5362, file: !2855, line: 120, type: !2868)
!5367 = !DILocalVariable(name: "c", arg: 2, scope: !5362, file: !2855, line: 120, type: !2873)
!5368 = !DILocalVariable(name: "f", arg: 3, scope: !5362, file: !2855, line: 121, type: !2854)
!5369 = !DILocalVariable(name: "val", arg: 4, scope: !5362, file: !2855, line: 121, type: !2873)
!5370 = !DILocalVariable(name: "buf", scope: !5362, file: !2855, line: 125, type: !2862)
!5371 = !DILocalVariable(name: "cmem", scope: !5362, file: !2855, line: 126, type: !133)
!5372 = !DILocation(line: 0, scope: !5362)
!5373 = !DILocation(line: 125, column: 22, scope: !5362)
!5374 = !DILocation(line: 126, column: 15, scope: !5362)
!5375 = !DILocation(line: 133, column: 27, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5377, file: !2855, line: 131, column: 9)
!5377 = distinct !DILexicalBlock(scope: !5362, file: !2855, line: 128, column: 6)
!5378 = !DILocation(line: 133, column: 4, scope: !5376)
!5379 = !DILocation(line: 133, column: 3, scope: !5376)
!5380 = !DILocation(line: 133, column: 25, scope: !5376)
!5381 = !DILocation(line: 135, column: 1, scope: !5362)
!5382 = distinct !DISubprogram(name: "min_chunk_size", scope: !2855, file: !2855, line: 240, type: !5383, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5385)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!5226, !2868}
!5385 = !{!5386}
!5386 = !DILocalVariable(name: "h", arg: 1, scope: !5382, file: !2855, line: 240, type: !2868)
!5387 = !DILocation(line: 0, scope: !5382)
!5388 = !DILocation(line: 242, column: 9, scope: !5382)
!5389 = !DILocation(line: 242, column: 2, scope: !5382)
!5390 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2855, file: !2855, line: 235, type: !5391, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5393)
!5391 = !DISubroutineType(types: !5392)
!5392 = !{!5226, !2868, !249}
!5393 = !{!5394, !5395}
!5394 = !DILocalVariable(name: "h", arg: 1, scope: !5390, file: !2855, line: 235, type: !2868)
!5395 = !DILocalVariable(name: "bytes", arg: 2, scope: !5390, file: !2855, line: 235, type: !249)
!5396 = !DILocation(line: 0, scope: !5390)
!5397 = !DILocation(line: 237, column: 39, scope: !5390)
!5398 = !DILocation(line: 237, column: 9, scope: !5390)
!5399 = !DILocation(line: 237, column: 2, scope: !5390)
!5400 = distinct !DISubprogram(name: "chunksz", scope: !2855, file: !2855, line: 230, type: !5401, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5403)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{!5226, !249}
!5403 = !{!5404}
!5404 = !DILocalVariable(name: "bytes", arg: 1, scope: !5400, file: !2855, line: 230, type: !249)
!5405 = !DILocation(line: 0, scope: !5400)
!5406 = !DILocation(line: 232, column: 29, scope: !5400)
!5407 = !DILocation(line: 232, column: 35, scope: !5400)
!5408 = !DILocation(line: 232, column: 2, scope: !5400)
!5409 = distinct !DISubprogram(name: "set_chunk_size", scope: !2855, file: !2855, line: 172, type: !5410, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5412)
!5410 = !DISubroutineType(types: !5411)
!5411 = !{null, !2868, !2873, !5226}
!5412 = !{!5413, !5414, !5415}
!5413 = !DILocalVariable(name: "h", arg: 1, scope: !5409, file: !2855, line: 172, type: !2868)
!5414 = !DILocalVariable(name: "c", arg: 2, scope: !5409, file: !2855, line: 172, type: !2873)
!5415 = !DILocalVariable(name: "size", arg: 3, scope: !5409, file: !2855, line: 172, type: !5226)
!5416 = !DILocation(line: 0, scope: !5409)
!5417 = !DILocation(line: 174, column: 38, scope: !5409)
!5418 = !DILocation(line: 174, column: 2, scope: !5409)
!5419 = !DILocation(line: 175, column: 1, scope: !5409)
!5420 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2855, file: !2855, line: 209, type: !5410, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5421)
!5421 = !{!5422, !5423, !5424}
!5422 = !DILocalVariable(name: "h", arg: 1, scope: !5420, file: !2855, line: 209, type: !2868)
!5423 = !DILocalVariable(name: "c", arg: 2, scope: !5420, file: !2855, line: 209, type: !2873)
!5424 = !DILocalVariable(name: "size", arg: 3, scope: !5420, file: !2855, line: 210, type: !5226)
!5425 = !DILocation(line: 0, scope: !5420)
!5426 = !DILocation(line: 212, column: 2, scope: !5420)
!5427 = !DILocation(line: 213, column: 1, scope: !5420)
!5428 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5100, file: !5100, line: 34, type: !5282, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5429)
!5429 = !{!5430, !5431, !5432, !5433, !5434, !5437}
!5430 = !DILocalVariable(name: "h", arg: 1, scope: !5428, file: !5100, line: 34, type: !2868)
!5431 = !DILocalVariable(name: "c", arg: 2, scope: !5428, file: !5100, line: 34, type: !2873)
!5432 = !DILocalVariable(name: "bidx", arg: 3, scope: !5428, file: !5100, line: 34, type: !111)
!5433 = !DILocalVariable(name: "b", scope: !5428, file: !5100, line: 36, type: !5289)
!5434 = !DILocalVariable(name: "first", scope: !5435, file: !5100, line: 47, type: !2873)
!5435 = distinct !DILexicalBlock(scope: !5436, file: !5100, line: 46, column: 9)
!5436 = distinct !DILexicalBlock(scope: !5428, file: !5100, line: 42, column: 6)
!5437 = !DILocalVariable(name: "second", scope: !5435, file: !5100, line: 48, type: !2873)
!5438 = !DILocation(line: 0, scope: !5428)
!5439 = !DILocation(line: 36, column: 29, scope: !5428)
!5440 = !DILocation(line: 42, column: 6, scope: !5436)
!5441 = !DILocation(line: 42, column: 28, scope: !5436)
!5442 = !DILocation(line: 42, column: 6, scope: !5428)
!5443 = !DILocation(line: 44, column: 24, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5436, file: !5100, line: 42, column: 34)
!5445 = !DILocation(line: 44, column: 23, scope: !5444)
!5446 = !DILocation(line: 44, column: 6, scope: !5444)
!5447 = !DILocation(line: 44, column: 20, scope: !5444)
!5448 = !DILocation(line: 45, column: 6, scope: !5444)
!5449 = !DILocation(line: 45, column: 11, scope: !5444)
!5450 = !DILocation(line: 46, column: 2, scope: !5444)
!5451 = !DILocation(line: 47, column: 21, scope: !5435)
!5452 = !DILocation(line: 0, scope: !5435)
!5453 = !DILocation(line: 50, column: 6, scope: !5435)
!5454 = !DILocation(line: 50, column: 11, scope: !5435)
!5455 = !DILocation(line: 51, column: 3, scope: !5435)
!5456 = !DILocation(line: 52, column: 3, scope: !5435)
!5457 = !DILocation(line: 58, column: 1, scope: !5428)
!5458 = distinct !DISubprogram(name: "next_free_chunk", scope: !2855, file: !2855, line: 182, type: !5185, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5459)
!5459 = !{!5460, !5461}
!5460 = !DILocalVariable(name: "h", arg: 1, scope: !5458, file: !2855, line: 182, type: !2868)
!5461 = !DILocalVariable(name: "c", arg: 2, scope: !5458, file: !2855, line: 182, type: !2873)
!5462 = !DILocation(line: 0, scope: !5458)
!5463 = !DILocation(line: 184, column: 9, scope: !5458)
!5464 = !DILocation(line: 184, column: 2, scope: !5458)
!5465 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5100, file: !5100, line: 200, type: !5466, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5468)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{!249, !5103, !133}
!5468 = !{!5469, !5470, !5471, !5472, !5473, !5474, !5475}
!5469 = !DILocalVariable(name: "heap", arg: 1, scope: !5465, file: !5100, line: 200, type: !5103)
!5470 = !DILocalVariable(name: "mem", arg: 2, scope: !5465, file: !5100, line: 200, type: !133)
!5471 = !DILocalVariable(name: "h", scope: !5465, file: !5100, line: 202, type: !2868)
!5472 = !DILocalVariable(name: "c", scope: !5465, file: !5100, line: 203, type: !2873)
!5473 = !DILocalVariable(name: "addr", scope: !5465, file: !5100, line: 204, type: !249)
!5474 = !DILocalVariable(name: "chunk_base", scope: !5465, file: !5100, line: 205, type: !249)
!5475 = !DILocalVariable(name: "chunk_sz", scope: !5465, file: !5100, line: 206, type: !249)
!5476 = !DILocation(line: 0, scope: !5465)
!5477 = !DILocation(line: 202, column: 27, scope: !5465)
!5478 = !DILocation(line: 203, column: 16, scope: !5465)
!5479 = !DILocation(line: 204, column: 16, scope: !5465)
!5480 = !DILocation(line: 205, column: 31, scope: !5465)
!5481 = !DILocation(line: 205, column: 22, scope: !5465)
!5482 = !DILocation(line: 206, column: 20, scope: !5465)
!5483 = !DILocation(line: 206, column: 37, scope: !5465)
!5484 = !DILocation(line: 208, column: 26, scope: !5465)
!5485 = !DILocation(line: 208, column: 18, scope: !5465)
!5486 = !DILocation(line: 208, column: 2, scope: !5465)
!5487 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5100, file: !5100, line: 263, type: !5488, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5490)
!5488 = !DISubroutineType(types: !5489)
!5489 = !{!133, !5103, !249}
!5490 = !{!5491, !5492, !5493, !5494, !5495, !5496}
!5491 = !DILocalVariable(name: "heap", arg: 1, scope: !5487, file: !5100, line: 263, type: !5103)
!5492 = !DILocalVariable(name: "bytes", arg: 2, scope: !5487, file: !5100, line: 263, type: !249)
!5493 = !DILocalVariable(name: "h", scope: !5487, file: !5100, line: 265, type: !2868)
!5494 = !DILocalVariable(name: "mem", scope: !5487, file: !5100, line: 266, type: !133)
!5495 = !DILocalVariable(name: "chunk_sz", scope: !5487, file: !5100, line: 272, type: !5226)
!5496 = !DILocalVariable(name: "c", scope: !5487, file: !5100, line: 273, type: !2873)
!5497 = !DILocation(line: 0, scope: !5487)
!5498 = !DILocation(line: 265, column: 27, scope: !5487)
!5499 = !DILocation(line: 268, column: 12, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5487, file: !5100, line: 268, column: 6)
!5501 = !DILocation(line: 268, column: 18, scope: !5500)
!5502 = !DILocation(line: 268, column: 21, scope: !5500)
!5503 = !DILocation(line: 268, column: 6, scope: !5487)
!5504 = !DILocation(line: 272, column: 23, scope: !5487)
!5505 = !DILocation(line: 273, column: 16, scope: !5487)
!5506 = !DILocation(line: 274, column: 8, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5487, file: !5100, line: 274, column: 6)
!5508 = !DILocation(line: 274, column: 6, scope: !5487)
!5509 = !DILocation(line: 279, column: 6, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5487, file: !5100, line: 279, column: 6)
!5511 = !DILocation(line: 279, column: 23, scope: !5510)
!5512 = !DILocation(line: 279, column: 6, scope: !5487)
!5513 = !DILocation(line: 280, column: 24, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5510, file: !5100, line: 279, column: 35)
!5515 = !DILocation(line: 280, column: 3, scope: !5514)
!5516 = !DILocation(line: 281, column: 3, scope: !5514)
!5517 = !DILocation(line: 282, column: 2, scope: !5514)
!5518 = !DILocation(line: 284, column: 2, scope: !5487)
!5519 = !DILocation(line: 286, column: 8, scope: !5487)
!5520 = !DILocation(line: 298, column: 2, scope: !5487)
!5521 = !DILocation(line: 299, column: 1, scope: !5487)
!5522 = distinct !DISubprogram(name: "size_too_big", scope: !2855, file: !2855, line: 256, type: !5523, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5525)
!5523 = !DISubroutineType(types: !5524)
!5524 = !{!131, !2868, !249}
!5525 = !{!5526, !5527}
!5526 = !DILocalVariable(name: "h", arg: 1, scope: !5522, file: !2855, line: 256, type: !2868)
!5527 = !DILocalVariable(name: "bytes", arg: 2, scope: !5522, file: !2855, line: 256, type: !249)
!5528 = !DILocation(line: 0, scope: !5522)
!5529 = !DILocation(line: 262, column: 16, scope: !5522)
!5530 = !DILocation(line: 262, column: 36, scope: !5522)
!5531 = !DILocation(line: 262, column: 30, scope: !5522)
!5532 = !DILocation(line: 262, column: 2, scope: !5522)
!5533 = distinct !DISubprogram(name: "alloc_chunk", scope: !5100, file: !5100, line: 211, type: !5534, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5536)
!5534 = !DISubroutineType(types: !5535)
!5535 = !{!2873, !2868, !5226}
!5536 = !{!5537, !5538, !5539, !5540, !5541, !5544, !5545, !5547, !5548, !5551}
!5537 = !DILocalVariable(name: "h", arg: 1, scope: !5533, file: !5100, line: 211, type: !2868)
!5538 = !DILocalVariable(name: "sz", arg: 2, scope: !5533, file: !5100, line: 211, type: !5226)
!5539 = !DILocalVariable(name: "bi", scope: !5533, file: !5100, line: 213, type: !111)
!5540 = !DILocalVariable(name: "b", scope: !5533, file: !5100, line: 214, type: !5289)
!5541 = !DILocalVariable(name: "first", scope: !5542, file: !5100, line: 233, type: !2873)
!5542 = distinct !DILexicalBlock(scope: !5543, file: !5100, line: 232, column: 15)
!5543 = distinct !DILexicalBlock(scope: !5533, file: !5100, line: 232, column: 6)
!5544 = !DILocalVariable(name: "i", scope: !5542, file: !5100, line: 234, type: !111)
!5545 = !DILocalVariable(name: "c", scope: !5546, file: !5100, line: 236, type: !2873)
!5546 = distinct !DILexicalBlock(scope: !5542, file: !5100, line: 235, column: 6)
!5547 = !DILocalVariable(name: "bmask", scope: !5533, file: !5100, line: 249, type: !158)
!5548 = !DILocalVariable(name: "minbucket", scope: !5549, file: !5100, line: 252, type: !111)
!5549 = distinct !DILexicalBlock(scope: !5550, file: !5100, line: 251, column: 19)
!5550 = distinct !DILexicalBlock(scope: !5533, file: !5100, line: 251, column: 6)
!5551 = !DILocalVariable(name: "c", scope: !5549, file: !5100, line: 253, type: !2873)
!5552 = !DILocation(line: 0, scope: !5533)
!5553 = !DILocation(line: 213, column: 11, scope: !5533)
!5554 = !DILocation(line: 232, column: 9, scope: !5543)
!5555 = !DILocation(line: 232, column: 6, scope: !5543)
!5556 = !DILocation(line: 232, column: 6, scope: !5533)
!5557 = !DILocation(line: 236, column: 21, scope: !5546)
!5558 = !DILocation(line: 0, scope: !5542)
!5559 = !DILocation(line: 0, scope: !5546)
!5560 = !DILocation(line: 237, column: 8, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5546, file: !5100, line: 237, column: 8)
!5562 = !DILocation(line: 237, column: 25, scope: !5561)
!5563 = !DILocation(line: 237, column: 8, scope: !5546)
!5564 = !DILocation(line: 238, column: 5, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5561, file: !5100, line: 237, column: 32)
!5566 = !DILocation(line: 241, column: 14, scope: !5546)
!5567 = !DILocation(line: 241, column: 12, scope: !5546)
!5568 = !DILocation(line: 243, column: 12, scope: !5542)
!5569 = !DILocation(line: 243, column: 16, scope: !5542)
!5570 = distinct !{!5570, !5571, !5572}
!5571 = !DILocation(line: 235, column: 3, scope: !5542)
!5572 = !DILocation(line: 243, column: 35, scope: !5542)
!5573 = !DILocation(line: 249, column: 22, scope: !5533)
!5574 = !DILocation(line: 249, column: 39, scope: !5533)
!5575 = !DILocation(line: 249, column: 36, scope: !5533)
!5576 = !DILocation(line: 251, column: 12, scope: !5550)
!5577 = !DILocation(line: 251, column: 6, scope: !5533)
!5578 = !DILocation(line: 252, column: 19, scope: !5549)
!5579 = !DILocation(line: 0, scope: !5549)
!5580 = !DILocation(line: 253, column: 39, scope: !5549)
!5581 = !DILocation(line: 255, column: 3, scope: !5549)
!5582 = !DILocation(line: 261, column: 1, scope: !5533)
!5583 = distinct !DISubprogram(name: "split_chunks", scope: !5100, file: !5100, line: 109, type: !5219, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5584)
!5584 = !{!5585, !5586, !5587, !5588, !5589, !5590}
!5585 = !DILocalVariable(name: "h", arg: 1, scope: !5583, file: !5100, line: 109, type: !2868)
!5586 = !DILocalVariable(name: "lc", arg: 2, scope: !5583, file: !5100, line: 109, type: !2873)
!5587 = !DILocalVariable(name: "rc", arg: 3, scope: !5583, file: !5100, line: 109, type: !2873)
!5588 = !DILocalVariable(name: "sz0", scope: !5583, file: !5100, line: 114, type: !5226)
!5589 = !DILocalVariable(name: "lsz", scope: !5583, file: !5100, line: 115, type: !5226)
!5590 = !DILocalVariable(name: "rsz", scope: !5583, file: !5100, line: 116, type: !5226)
!5591 = !DILocation(line: 0, scope: !5583)
!5592 = !DILocation(line: 114, column: 18, scope: !5583)
!5593 = !DILocation(line: 115, column: 21, scope: !5583)
!5594 = !DILocation(line: 116, column: 22, scope: !5583)
!5595 = !DILocation(line: 118, column: 2, scope: !5583)
!5596 = !DILocation(line: 119, column: 2, scope: !5583)
!5597 = !DILocation(line: 120, column: 2, scope: !5583)
!5598 = !DILocation(line: 121, column: 25, scope: !5583)
!5599 = !DILocation(line: 121, column: 2, scope: !5583)
!5600 = !DILocation(line: 122, column: 1, scope: !5583)
!5601 = distinct !DISubprogram(name: "chunk_mem", scope: !5100, file: !5100, line: 24, type: !5602, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5604)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{!133, !2868, !2873}
!5604 = !{!5605, !5606, !5607, !5608}
!5605 = !DILocalVariable(name: "h", arg: 1, scope: !5601, file: !5100, line: 24, type: !2868)
!5606 = !DILocalVariable(name: "c", arg: 2, scope: !5601, file: !5100, line: 24, type: !2873)
!5607 = !DILocalVariable(name: "buf", scope: !5601, file: !5100, line: 26, type: !2862)
!5608 = !DILocalVariable(name: "ret", scope: !5601, file: !5100, line: 27, type: !178)
!5609 = !DILocation(line: 0, scope: !5601)
!5610 = !DILocation(line: 26, column: 22, scope: !5601)
!5611 = !DILocation(line: 27, column: 38, scope: !5601)
!5612 = !DILocation(line: 31, column: 2, scope: !5601)
!5613 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5100, file: !5100, line: 301, type: !5614, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5616)
!5614 = !DISubroutineType(types: !5615)
!5615 = !{!133, !5103, !249, !249}
!5616 = !{!5617, !5618, !5619, !5620, !5621, !5622, !5623, !5624, !5625, !5626, !5627, !5628}
!5617 = !DILocalVariable(name: "heap", arg: 1, scope: !5613, file: !5100, line: 301, type: !5103)
!5618 = !DILocalVariable(name: "align", arg: 2, scope: !5613, file: !5100, line: 301, type: !249)
!5619 = !DILocalVariable(name: "bytes", arg: 3, scope: !5613, file: !5100, line: 301, type: !249)
!5620 = !DILocalVariable(name: "h", scope: !5613, file: !5100, line: 303, type: !2868)
!5621 = !DILocalVariable(name: "gap", scope: !5613, file: !5100, line: 304, type: !249)
!5622 = !DILocalVariable(name: "rew", scope: !5613, file: !5100, line: 304, type: !249)
!5623 = !DILocalVariable(name: "padded_sz", scope: !5613, file: !5100, line: 335, type: !5226)
!5624 = !DILocalVariable(name: "c0", scope: !5613, file: !5100, line: 336, type: !2873)
!5625 = !DILocalVariable(name: "mem", scope: !5613, file: !5100, line: 341, type: !178)
!5626 = !DILocalVariable(name: "end", scope: !5613, file: !5100, line: 345, type: !2862)
!5627 = !DILocalVariable(name: "c", scope: !5613, file: !5100, line: 348, type: !2873)
!5628 = !DILocalVariable(name: "c_end", scope: !5613, file: !5100, line: 349, type: !2873)
!5629 = !DILocation(line: 0, scope: !5613)
!5630 = !DILocation(line: 303, column: 27, scope: !5613)
!5631 = !DILocation(line: 313, column: 16, scope: !5613)
!5632 = !DILocation(line: 313, column: 14, scope: !5613)
!5633 = !DILocation(line: 314, column: 12, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5613, file: !5100, line: 314, column: 6)
!5635 = !DILocation(line: 314, column: 6, scope: !5613)
!5636 = !DILocation(line: 315, column: 9, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5634, file: !5100, line: 314, column: 20)
!5638 = !DILocation(line: 316, column: 9, scope: !5637)
!5639 = !DILocation(line: 318, column: 13, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !5100, line: 318, column: 7)
!5641 = distinct !DILexicalBlock(scope: !5634, file: !5100, line: 317, column: 9)
!5642 = !DILocation(line: 318, column: 7, scope: !5641)
!5643 = !DILocation(line: 319, column: 11, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5640, file: !5100, line: 318, column: 39)
!5645 = !DILocation(line: 319, column: 4, scope: !5644)
!5646 = !DILocation(line: 0, scope: !5634)
!5647 = !DILocation(line: 326, column: 12, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5613, file: !5100, line: 326, column: 6)
!5649 = !DILocation(line: 326, column: 17, scope: !5648)
!5650 = !DILocation(line: 326, column: 20, scope: !5648)
!5651 = !DILocation(line: 326, column: 6, scope: !5613)
!5652 = !DILocation(line: 335, column: 50, scope: !5613)
!5653 = !DILocation(line: 335, column: 58, scope: !5613)
!5654 = !DILocation(line: 335, column: 24, scope: !5613)
!5655 = !DILocation(line: 336, column: 17, scope: !5613)
!5656 = !DILocation(line: 338, column: 9, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5613, file: !5100, line: 338, column: 6)
!5658 = !DILocation(line: 338, column: 6, scope: !5613)
!5659 = !DILocation(line: 341, column: 17, scope: !5613)
!5660 = !DILocation(line: 344, column: 20, scope: !5613)
!5661 = !DILocation(line: 344, column: 8, scope: !5613)
!5662 = !DILocation(line: 344, column: 47, scope: !5613)
!5663 = !DILocation(line: 345, column: 39, scope: !5613)
!5664 = !DILocation(line: 348, column: 16, scope: !5613)
!5665 = !DILocation(line: 349, column: 26, scope: !5613)
!5666 = !DILocation(line: 349, column: 24, scope: !5613)
!5667 = !DILocation(line: 353, column: 8, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5613, file: !5100, line: 353, column: 6)
!5669 = !DILocation(line: 353, column: 6, scope: !5613)
!5670 = !DILocation(line: 354, column: 3, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5668, file: !5100, line: 353, column: 14)
!5672 = !DILocation(line: 355, column: 3, scope: !5671)
!5673 = !DILocation(line: 356, column: 2, scope: !5671)
!5674 = !DILocation(line: 359, column: 6, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5613, file: !5100, line: 359, column: 6)
!5676 = !DILocation(line: 359, column: 24, scope: !5675)
!5677 = !DILocation(line: 359, column: 6, scope: !5613)
!5678 = !DILocation(line: 360, column: 3, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5675, file: !5100, line: 359, column: 33)
!5680 = !DILocation(line: 361, column: 3, scope: !5679)
!5681 = !DILocation(line: 362, column: 2, scope: !5679)
!5682 = !DILocation(line: 364, column: 2, scope: !5613)
!5683 = !DILocation(line: 377, column: 1, scope: !5613)
!5684 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5100, file: !5100, line: 379, type: !5685, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5687)
!5685 = !DISubroutineType(types: !5686)
!5686 = !{!133, !5103, !133, !249, !249}
!5687 = !{!5688, !5689, !5690, !5691, !5692, !5693, !5694, !5695, !5696, !5697, !5703, !5704}
!5688 = !DILocalVariable(name: "heap", arg: 1, scope: !5684, file: !5100, line: 379, type: !5103)
!5689 = !DILocalVariable(name: "ptr", arg: 2, scope: !5684, file: !5100, line: 379, type: !133)
!5690 = !DILocalVariable(name: "align", arg: 3, scope: !5684, file: !5100, line: 380, type: !249)
!5691 = !DILocalVariable(name: "bytes", arg: 4, scope: !5684, file: !5100, line: 380, type: !249)
!5692 = !DILocalVariable(name: "h", scope: !5684, file: !5100, line: 382, type: !2868)
!5693 = !DILocalVariable(name: "c", scope: !5684, file: !5100, line: 399, type: !2873)
!5694 = !DILocalVariable(name: "rc", scope: !5684, file: !5100, line: 400, type: !2873)
!5695 = !DILocalVariable(name: "align_gap", scope: !5684, file: !5100, line: 401, type: !249)
!5696 = !DILocalVariable(name: "chunks_need", scope: !5684, file: !5100, line: 402, type: !5226)
!5697 = !DILocalVariable(name: "split_size", scope: !5698, file: !5100, line: 435, type: !5226)
!5698 = distinct !DILexicalBlock(scope: !5699, file: !5100, line: 433, column: 61)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !5100, line: 432, column: 13)
!5700 = distinct !DILexicalBlock(scope: !5701, file: !5100, line: 409, column: 13)
!5701 = distinct !DILexicalBlock(scope: !5702, file: !5100, line: 406, column: 13)
!5702 = distinct !DILexicalBlock(scope: !5684, file: !5100, line: 404, column: 6)
!5703 = !DILocalVariable(name: "ptr2", scope: !5684, file: !5100, line: 474, type: !133)
!5704 = !DILocalVariable(name: "prev_size", scope: !5705, file: !5100, line: 477, type: !249)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !5100, line: 476, column: 20)
!5706 = distinct !DILexicalBlock(scope: !5684, file: !5100, line: 476, column: 6)
!5707 = !DILocation(line: 0, scope: !5684)
!5708 = !DILocation(line: 382, column: 27, scope: !5684)
!5709 = !DILocation(line: 385, column: 10, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5684, file: !5100, line: 385, column: 6)
!5711 = !DILocation(line: 385, column: 6, scope: !5684)
!5712 = !DILocation(line: 386, column: 10, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5710, file: !5100, line: 385, column: 19)
!5714 = !DILocation(line: 386, column: 3, scope: !5713)
!5715 = !DILocation(line: 388, column: 12, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5684, file: !5100, line: 388, column: 6)
!5717 = !DILocation(line: 388, column: 6, scope: !5684)
!5718 = !DILocation(line: 389, column: 3, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5716, file: !5100, line: 388, column: 18)
!5720 = !DILocation(line: 390, column: 3, scope: !5719)
!5721 = !DILocation(line: 395, column: 6, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5684, file: !5100, line: 395, column: 6)
!5723 = !DILocation(line: 395, column: 6, scope: !5684)
!5724 = !DILocation(line: 399, column: 16, scope: !5684)
!5725 = !DILocation(line: 400, column: 17, scope: !5684)
!5726 = !DILocation(line: 401, column: 49, scope: !5684)
!5727 = !DILocation(line: 401, column: 36, scope: !5684)
!5728 = !DILocation(line: 402, column: 52, scope: !5684)
!5729 = !DILocation(line: 402, column: 26, scope: !5684)
!5730 = !DILocation(line: 404, column: 6, scope: !5702)
!5731 = !DILocation(line: 404, column: 12, scope: !5702)
!5732 = !DILocation(line: 404, column: 40, scope: !5702)
!5733 = !DILocation(line: 404, column: 31, scope: !5702)
!5734 = !DILocation(line: 404, column: 6, scope: !5684)
!5735 = !DILocation(line: 406, column: 13, scope: !5701)
!5736 = !DILocation(line: 406, column: 30, scope: !5701)
!5737 = !DILocation(line: 406, column: 13, scope: !5702)
!5738 = !DILocation(line: 409, column: 30, scope: !5700)
!5739 = !DILocation(line: 409, column: 13, scope: !5701)
!5740 = !DILocation(line: 420, column: 24, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5700, file: !5100, line: 409, column: 45)
!5742 = !DILocation(line: 420, column: 3, scope: !5741)
!5743 = !DILocation(line: 421, column: 3, scope: !5741)
!5744 = !DILocation(line: 422, column: 3, scope: !5741)
!5745 = !DILocation(line: 431, column: 3, scope: !5741)
!5746 = !DILocation(line: 432, column: 14, scope: !5699)
!5747 = !DILocation(line: 432, column: 32, scope: !5699)
!5748 = !DILocation(line: 433, column: 26, scope: !5699)
!5749 = !DILocation(line: 433, column: 24, scope: !5699)
!5750 = !DILocation(line: 433, column: 44, scope: !5699)
!5751 = !DILocation(line: 432, column: 13, scope: !5700)
!5752 = !DILocation(line: 435, column: 38, scope: !5698)
!5753 = !DILocation(line: 0, scope: !5698)
!5754 = !DILocation(line: 445, column: 3, scope: !5698)
!5755 = !DILocation(line: 447, column: 20, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5698, file: !5100, line: 447, column: 7)
!5757 = !DILocation(line: 447, column: 18, scope: !5756)
!5758 = !DILocation(line: 447, column: 7, scope: !5698)
!5759 = !DILocation(line: 448, column: 27, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5756, file: !5100, line: 447, column: 39)
!5761 = !DILocation(line: 448, column: 4, scope: !5760)
!5762 = !DILocation(line: 449, column: 4, scope: !5760)
!5763 = !DILocation(line: 450, column: 3, scope: !5760)
!5764 = !DILocation(line: 452, column: 3, scope: !5698)
!5765 = !DILocation(line: 453, column: 3, scope: !5698)
!5766 = !DILocation(line: 474, column: 15, scope: !5684)
!5767 = !DILocation(line: 476, column: 11, scope: !5706)
!5768 = !DILocation(line: 476, column: 6, scope: !5684)
!5769 = !DILocation(line: 477, column: 42, scope: !5705)
!5770 = !DILocation(line: 477, column: 22, scope: !5705)
!5771 = !DILocation(line: 477, column: 60, scope: !5705)
!5772 = !DILocation(line: 0, scope: !5705)
!5773 = !DILocation(line: 479, column: 21, scope: !5705)
!5774 = !DILocation(line: 479, column: 3, scope: !5705)
!5775 = !DILocation(line: 480, column: 3, scope: !5705)
!5776 = !DILocation(line: 481, column: 2, scope: !5705)
!5777 = !DILocation(line: 483, column: 1, scope: !5684)
!5778 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2855, file: !2855, line: 245, type: !5779, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5781)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!249, !2868, !5226}
!5781 = !{!5782, !5783}
!5782 = !DILocalVariable(name: "h", arg: 1, scope: !5778, file: !2855, line: 245, type: !2868)
!5783 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5778, file: !2855, line: 245, type: !5226)
!5784 = !DILocation(line: 0, scope: !5778)
!5785 = !DILocation(line: 247, column: 20, scope: !5778)
!5786 = !DILocation(line: 247, column: 33, scope: !5778)
!5787 = !DILocation(line: 247, column: 2, scope: !5778)
!5788 = distinct !DISubprogram(name: "sys_heap_init", scope: !5100, file: !5100, line: 485, type: !5789, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5791)
!5789 = !DISubroutineType(types: !5790)
!5790 = !{null, !5103, !133, !249}
!5791 = !{!5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801}
!5792 = !DILocalVariable(name: "heap", arg: 1, scope: !5788, file: !5100, line: 485, type: !5103)
!5793 = !DILocalVariable(name: "mem", arg: 2, scope: !5788, file: !5100, line: 485, type: !133)
!5794 = !DILocalVariable(name: "bytes", arg: 3, scope: !5788, file: !5100, line: 485, type: !249)
!5795 = !DILocalVariable(name: "addr", scope: !5788, file: !5100, line: 502, type: !22)
!5796 = !DILocalVariable(name: "end", scope: !5788, file: !5100, line: 503, type: !22)
!5797 = !DILocalVariable(name: "heap_sz", scope: !5788, file: !5100, line: 504, type: !5226)
!5798 = !DILocalVariable(name: "h", scope: !5788, file: !5100, line: 509, type: !2868)
!5799 = !DILocalVariable(name: "nb_buckets", scope: !5788, file: !5100, line: 520, type: !111)
!5800 = !DILocalVariable(name: "chunk0_size", scope: !5788, file: !5100, line: 521, type: !5226)
!5801 = !DILocalVariable(name: "i", scope: !5802, file: !5100, line: 526, type: !111)
!5802 = distinct !DILexicalBlock(scope: !5788, file: !5100, line: 526, column: 2)
!5803 = !DILocation(line: 0, scope: !5788)
!5804 = !DILocation(line: 499, column: 8, scope: !5788)
!5805 = !DILocation(line: 502, column: 19, scope: !5788)
!5806 = !DILocation(line: 503, column: 18, scope: !5788)
!5807 = !DILocation(line: 504, column: 27, scope: !5788)
!5808 = !DILocation(line: 504, column: 35, scope: !5788)
!5809 = !DILocation(line: 509, column: 21, scope: !5788)
!5810 = !DILocation(line: 510, column: 8, scope: !5788)
!5811 = !DILocation(line: 510, column: 13, scope: !5788)
!5812 = !DILocation(line: 511, column: 5, scope: !5788)
!5813 = !DILocation(line: 511, column: 15, scope: !5788)
!5814 = !DILocation(line: 512, column: 5, scope: !5788)
!5815 = !DILocation(line: 512, column: 19, scope: !5788)
!5816 = !DILocation(line: 520, column: 19, scope: !5788)
!5817 = !DILocation(line: 522, column: 21, scope: !5788)
!5818 = !DILocation(line: 521, column: 56, scope: !5788)
!5819 = !DILocation(line: 521, column: 26, scope: !5788)
!5820 = !DILocation(line: 0, scope: !5802)
!5821 = !DILocation(line: 526, column: 20, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5802, file: !5100, line: 526, column: 2)
!5823 = !DILocation(line: 526, column: 2, scope: !5802)
!5824 = !DILocation(line: 531, column: 2, scope: !5788)
!5825 = !DILocation(line: 532, column: 2, scope: !5788)
!5826 = !DILocation(line: 533, column: 2, scope: !5788)
!5827 = !DILocation(line: 536, column: 41, scope: !5788)
!5828 = !DILocation(line: 536, column: 2, scope: !5788)
!5829 = !DILocation(line: 537, column: 2, scope: !5788)
!5830 = !DILocation(line: 540, column: 2, scope: !5788)
!5831 = !DILocation(line: 541, column: 2, scope: !5788)
!5832 = !DILocation(line: 542, column: 2, scope: !5788)
!5833 = !DILocation(line: 544, column: 2, scope: !5788)
!5834 = !DILocation(line: 545, column: 1, scope: !5788)
!5835 = !DILocation(line: 527, column: 17, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5822, file: !5100, line: 526, column: 39)
!5837 = !DILocation(line: 527, column: 22, scope: !5836)
!5838 = !DILocation(line: 526, column: 35, scope: !5822)
!5839 = distinct !{!5839, !5823, !5840}
!5840 = !DILocation(line: 528, column: 2, scope: !5802)
!5841 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2888, file: !2888, line: 1338, type: !5842, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !5850)
!5842 = !DISubroutineType(types: !5843)
!5843 = !{!111, !4303, !133, !118, !5844, !158}
!5844 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3942, line: 99, baseType: !5845)
!5845 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3942, line: 40, baseType: !5846)
!5846 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2888, baseType: !5847)
!5847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5848)
!5848 = !{!5849}
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5847, file: !2888, baseType: !133, size: 32)
!5850 = !{!5851, !5852, !5853, !5854, !5855, !5856, !5860, !5861, !5862, !5864, !5869, !5912, !5915, !5918, !5919, !5920, !5921, !5922, !5923, !5924, !5927, !5928, !5929, !5933, !5936, !5938, !5941, !5942, !5943, !5948, !5954, !5957, !5961, !5967, !5971, !5974, !5976, !5979}
!5851 = !DILocalVariable(name: "out", arg: 1, scope: !5841, file: !2888, line: 1338, type: !4303)
!5852 = !DILocalVariable(name: "ctx", arg: 2, scope: !5841, file: !2888, line: 1338, type: !133)
!5853 = !DILocalVariable(name: "fp", arg: 3, scope: !5841, file: !2888, line: 1338, type: !118)
!5854 = !DILocalVariable(name: "ap", arg: 4, scope: !5841, file: !2888, line: 1339, type: !5844)
!5855 = !DILocalVariable(name: "flags", arg: 5, scope: !5841, file: !2888, line: 1339, type: !158)
!5856 = !DILocalVariable(name: "buf", scope: !5841, file: !2888, line: 1341, type: !5857)
!5857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !5858)
!5858 = !{!5859}
!5859 = !DISubrange(count: 22)
!5860 = !DILocalVariable(name: "count", scope: !5841, file: !2888, line: 1342, type: !249)
!5861 = !DILocalVariable(name: "sint", scope: !5841, file: !2888, line: 1343, type: !2907)
!5862 = !DILocalVariable(name: "tagged_ap", scope: !5841, file: !2888, line: 1345, type: !5863)
!5863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!5864 = !DILocalVariable(name: "rc", scope: !5865, file: !2888, line: 1377, type: !111)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !2888, line: 1377, column: 4)
!5866 = distinct !DILexicalBlock(scope: !5867, file: !2888, line: 1376, column: 19)
!5867 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1376, column: 7)
!5868 = distinct !DILexicalBlock(scope: !5841, file: !2888, line: 1375, column: 19)
!5869 = !DILocalVariable(name: "state", scope: !5868, file: !2888, line: 1395, type: !5870)
!5870 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5841, file: !2888, line: 1392, size: 192, elements: !5871)
!5871 = !{!5872, !5880}
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5870, file: !2888, line: 1393, baseType: !5873, size: 64)
!5873 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2888, line: 166, size: 64, elements: !5874)
!5874 = !{!5875, !5876, !5877, !5878, !5879}
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5873, file: !2888, line: 168, baseType: !2907, size: 64)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5873, file: !2888, line: 171, baseType: !2910, size: 64)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5873, file: !2888, line: 174, baseType: !858, size: 64)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5873, file: !2888, line: 177, baseType: !856, size: 64)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5873, file: !2888, line: 180, baseType: !133, size: 32)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5870, file: !2888, line: 1394, baseType: !5881, size: 96, offset: 64)
!5881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2888, line: 189, size: 96, elements: !5882)
!5882 = !{!5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900, !5901, !5902, !5907}
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5881, file: !2888, line: 191, baseType: !131, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5881, file: !2888, line: 194, baseType: !131, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5881, file: !2888, line: 197, baseType: !131, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5881, file: !2888, line: 200, baseType: !131, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5881, file: !2888, line: 203, baseType: !131, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5881, file: !2888, line: 206, baseType: !131, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5881, file: !2888, line: 209, baseType: !131, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5881, file: !2888, line: 212, baseType: !131, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5881, file: !2888, line: 219, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5881, file: !2888, line: 222, baseType: !131, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5881, file: !2888, line: 229, baseType: !131, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5881, file: !2888, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5881, file: !2888, line: 238, baseType: !131, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5881, file: !2888, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5881, file: !2888, line: 244, baseType: !131, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5881, file: !2888, line: 247, baseType: !131, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5881, file: !2888, line: 252, baseType: !131, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5881, file: !2888, line: 257, baseType: !131, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5881, file: !2888, line: 260, baseType: !129, size: 8, offset: 24)
!5902 = !DIDerivedType(tag: DW_TAG_member, scope: !5881, file: !2888, line: 262, baseType: !5903, size: 32, offset: 32)
!5903 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5881, file: !2888, line: 262, size: 32, elements: !5904)
!5904 = !{!5905, !5906}
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5903, file: !2888, line: 267, baseType: !111, size: 32)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5903, file: !2888, line: 289, baseType: !111, size: 32)
!5907 = !DIDerivedType(tag: DW_TAG_member, scope: !5881, file: !2888, line: 292, baseType: !5908, size: 32, offset: 64)
!5908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5881, file: !2888, line: 292, size: 32, elements: !5909)
!5909 = !{!5910, !5911}
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5908, file: !2888, line: 297, baseType: !111, size: 32)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5908, file: !2888, line: 306, baseType: !111, size: 32)
!5912 = !DILocalVariable(name: "conv", scope: !5868, file: !2888, line: 1400, type: !5913)
!5913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5914)
!5914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5881, size: 32)
!5915 = !DILocalVariable(name: "value", scope: !5868, file: !2888, line: 1401, type: !5916)
!5916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5917)
!5917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5873, size: 32)
!5918 = !DILocalVariable(name: "sp", scope: !5868, file: !2888, line: 1402, type: !118)
!5919 = !DILocalVariable(name: "width", scope: !5868, file: !2888, line: 1403, type: !111)
!5920 = !DILocalVariable(name: "precision", scope: !5868, file: !2888, line: 1404, type: !111)
!5921 = !DILocalVariable(name: "bps", scope: !5868, file: !2888, line: 1405, type: !118)
!5922 = !DILocalVariable(name: "bpe", scope: !5868, file: !2888, line: 1406, type: !118)
!5923 = !DILocalVariable(name: "sign", scope: !5868, file: !2888, line: 1407, type: !120)
!5924 = !DILocalVariable(name: "arg", scope: !5925, file: !2888, line: 1432, type: !111)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !2888, line: 1431, column: 24)
!5926 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1431, column: 7)
!5927 = !DILocalVariable(name: "specifier_cat", scope: !5868, file: !2888, line: 1468, type: !2887)
!5928 = !DILocalVariable(name: "length_mod", scope: !5868, file: !2888, line: 1470, type: !2895)
!5929 = !DILocalVariable(name: "rc", scope: !5930, file: !2888, line: 1575, type: !111)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !2888, line: 1575, column: 4)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !2888, line: 1574, column: 43)
!5932 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1574, column: 7)
!5933 = !DILocalVariable(name: "rc", scope: !5934, file: !2888, line: 1584, type: !111)
!5934 = distinct !DILexicalBlock(scope: !5935, file: !2888, line: 1584, column: 4)
!5935 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1582, column: 28)
!5936 = !DILocalVariable(name: "len", scope: !5937, file: !2888, line: 1589, type: !249)
!5937 = distinct !DILexicalBlock(scope: !5935, file: !2888, line: 1586, column: 13)
!5938 = !DILocalVariable(name: "len", scope: !5939, file: !2888, line: 1641, type: !249)
!5939 = distinct !DILexicalBlock(scope: !5940, file: !2888, line: 1640, column: 24)
!5940 = distinct !DILexicalBlock(scope: !5935, file: !2888, line: 1640, column: 8)
!5941 = !DILocalVariable(name: "nj_len", scope: !5868, file: !2888, line: 1722, type: !249)
!5942 = !DILocalVariable(name: "pad_len", scope: !5868, file: !2888, line: 1723, type: !111)
!5943 = !DILocalVariable(name: "pad", scope: !5944, file: !2888, line: 1751, type: !120)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !2888, line: 1750, column: 26)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !2888, line: 1750, column: 8)
!5946 = distinct !DILexicalBlock(scope: !5947, file: !2888, line: 1747, column: 18)
!5947 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1747, column: 7)
!5948 = !DILocalVariable(name: "rc", scope: !5949, file: !2888, line: 1758, type: !111)
!5949 = distinct !DILexicalBlock(scope: !5950, file: !2888, line: 1758, column: 7)
!5950 = distinct !DILexicalBlock(scope: !5951, file: !2888, line: 1757, column: 21)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !2888, line: 1757, column: 10)
!5952 = distinct !DILexicalBlock(scope: !5953, file: !2888, line: 1756, column: 26)
!5953 = distinct !DILexicalBlock(scope: !5944, file: !2888, line: 1756, column: 9)
!5954 = !DILocalVariable(name: "rc", scope: !5955, file: !2888, line: 1765, type: !111)
!5955 = distinct !DILexicalBlock(scope: !5956, file: !2888, line: 1765, column: 6)
!5956 = distinct !DILexicalBlock(scope: !5944, file: !2888, line: 1764, column: 25)
!5957 = !DILocalVariable(name: "rc", scope: !5958, file: !2888, line: 1774, type: !111)
!5958 = distinct !DILexicalBlock(scope: !5959, file: !2888, line: 1774, column: 4)
!5959 = distinct !DILexicalBlock(scope: !5960, file: !2888, line: 1773, column: 18)
!5960 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1773, column: 7)
!5961 = !DILocalVariable(name: "rc", scope: !5962, file: !2888, line: 1819, type: !111)
!5962 = distinct !DILexicalBlock(scope: !5963, file: !2888, line: 1819, column: 5)
!5963 = distinct !DILexicalBlock(scope: !5964, file: !2888, line: 1818, column: 44)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !2888, line: 1818, column: 8)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !2888, line: 1817, column: 10)
!5966 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1777, column: 7)
!5967 = !DILocalVariable(name: "rc", scope: !5968, file: !2888, line: 1823, type: !111)
!5968 = distinct !DILexicalBlock(scope: !5969, file: !2888, line: 1823, column: 5)
!5969 = distinct !DILexicalBlock(scope: !5970, file: !2888, line: 1822, column: 26)
!5970 = distinct !DILexicalBlock(scope: !5965, file: !2888, line: 1822, column: 8)
!5971 = !DILocalVariable(name: "rc", scope: !5972, file: !2888, line: 1828, type: !111)
!5972 = distinct !DILexicalBlock(scope: !5973, file: !2888, line: 1828, column: 5)
!5973 = distinct !DILexicalBlock(scope: !5965, file: !2888, line: 1827, column: 26)
!5974 = !DILocalVariable(name: "rc", scope: !5975, file: !2888, line: 1831, type: !111)
!5975 = distinct !DILexicalBlock(scope: !5965, file: !2888, line: 1831, column: 4)
!5976 = !DILocalVariable(name: "rc", scope: !5977, file: !2888, line: 1836, type: !111)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !2888, line: 1836, column: 4)
!5978 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1835, column: 21)
!5979 = !DILabel(scope: !5935, name: "prec_int_pad0", file: !2888, line: 1634)
!5980 = !DILocation(line: 0, scope: !5841)
!5981 = !DILocation(line: 1341, column: 2, scope: !5841)
!5982 = !DILocation(line: 1341, column: 7, scope: !5841)
!5983 = !DILocation(line: 1375, column: 2, scope: !5841)
!5984 = !DILocation(line: 1342, column: 9, scope: !5841)
!5985 = !DILocation(line: 1375, column: 9, scope: !5841)
!5986 = !DILocation(line: 1377, column: 4, scope: !5865)
!5987 = !DILocation(line: 0, scope: !5865)
!5988 = !DILocation(line: 1377, column: 4, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5865, file: !2888, line: 1377, column: 4)
!5990 = distinct !{!5990, !5983, !5991}
!5991 = !DILocation(line: 1839, column: 2, scope: !5841)
!5992 = !DILocation(line: 1392, column: 3, scope: !5868)
!5993 = !DILocation(line: 1395, column: 5, scope: !5868)
!5994 = !DILocation(line: 0, scope: !5868)
!5995 = !DILocation(line: 1409, column: 8, scope: !5868)
!5996 = !DILocation(line: 1414, column: 13, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1414, column: 7)
!5998 = !DILocation(line: 1414, column: 7, scope: !5868)
!5999 = !DILocation(line: 1415, column: 12, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5997, file: !2888, line: 1414, column: 25)
!6001 = !DILocation(line: 1417, column: 14, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !6000, file: !2888, line: 1417, column: 8)
!6003 = !DILocation(line: 1417, column: 8, scope: !6000)
!6004 = !DILocation(line: 1418, column: 21, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6002, file: !2888, line: 1417, column: 19)
!6006 = !DILocation(line: 1419, column: 13, scope: !6005)
!6007 = !DILocation(line: 1420, column: 4, scope: !6005)
!6008 = !DILocation(line: 1421, column: 20, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5997, file: !2888, line: 1421, column: 14)
!6010 = !DILocation(line: 1421, column: 14, scope: !5997)
!6011 = !DILocation(line: 1431, column: 13, scope: !5926)
!6012 = !DILocation(line: 1431, column: 7, scope: !5868)
!6013 = !DILocation(line: 1432, column: 14, scope: !5925)
!6014 = !DILocation(line: 0, scope: !5925)
!6015 = !DILocation(line: 1434, column: 12, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !5925, file: !2888, line: 1434, column: 8)
!6017 = !DILocation(line: 1434, column: 8, scope: !5925)
!6018 = !DILocation(line: 1435, column: 24, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6016, file: !2888, line: 1434, column: 17)
!6020 = !DILocation(line: 1436, column: 4, scope: !6019)
!6021 = !DILocation(line: 1439, column: 20, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !5926, file: !2888, line: 1439, column: 14)
!6023 = !DILocation(line: 1439, column: 14, scope: !5926)
!6024 = !DILocation(line: 1469, column: 37, scope: !5868)
!6025 = !DILocation(line: 1448, column: 20, scope: !5868)
!6026 = !DILocation(line: 1449, column: 22, scope: !5868)
!6027 = !DILocation(line: 1471, column: 34, scope: !5868)
!6028 = !DILocation(line: 1478, column: 7, scope: !5868)
!6029 = !DILocation(line: 1479, column: 4, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6031, file: !2888, line: 1478, column: 40)
!6031 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1478, column: 7)
!6032 = !DILocation(line: 1484, column: 19, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6030, file: !2888, line: 1479, column: 24)
!6034 = !DILocation(line: 1484, column: 17, scope: !6033)
!6035 = !DILocation(line: 1485, column: 5, scope: !6033)
!6036 = !DILocation(line: 1492, column: 20, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6038, file: !2888, line: 1491, column: 12)
!6038 = distinct !DILexicalBlock(scope: !6033, file: !2888, line: 1487, column: 9)
!6039 = !DILocation(line: 1492, column: 18, scope: !6037)
!6040 = !DILocation(line: 1494, column: 5, scope: !6033)
!6041 = !DILocation(line: 1497, column: 23, scope: !6033)
!6042 = !DILocation(line: 1496, column: 17, scope: !6033)
!6043 = !DILocation(line: 1498, column: 5, scope: !6033)
!6044 = !DILocation(line: 1501, column: 23, scope: !6033)
!6045 = !DILocation(line: 1500, column: 17, scope: !6033)
!6046 = !DILocation(line: 1502, column: 5, scope: !6033)
!6047 = !DILocation(line: 1513, column: 23, scope: !6033)
!6048 = !DILocation(line: 1513, column: 6, scope: !6033)
!6049 = !DILocation(line: 1512, column: 17, scope: !6033)
!6050 = !DILocation(line: 1514, column: 5, scope: !6033)
!6051 = !DILocation(line: 0, scope: !6033)
!6052 = !DILocation(line: 1516, column: 8, scope: !6030)
!6053 = !DILocation(line: 1517, column: 19, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !2888, line: 1516, column: 33)
!6055 = distinct !DILexicalBlock(scope: !6030, file: !2888, line: 1516, column: 8)
!6056 = !DILocation(line: 1517, column: 17, scope: !6054)
!6057 = !DILocation(line: 1518, column: 4, scope: !6054)
!6058 = !DILocation(line: 1519, column: 19, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6060, file: !2888, line: 1518, column: 39)
!6060 = distinct !DILexicalBlock(scope: !6055, file: !2888, line: 1518, column: 15)
!6061 = !DILocation(line: 1519, column: 17, scope: !6059)
!6062 = !DILocation(line: 1520, column: 4, scope: !6059)
!6063 = !DILocation(line: 1522, column: 4, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !2888, line: 1521, column: 47)
!6065 = distinct !DILexicalBlock(scope: !6031, file: !2888, line: 1521, column: 14)
!6066 = !DILocation(line: 1527, column: 19, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6064, file: !2888, line: 1522, column: 24)
!6068 = !DILocation(line: 1527, column: 17, scope: !6067)
!6069 = !DILocation(line: 1528, column: 5, scope: !6067)
!6070 = !DILocation(line: 0, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6067, file: !2888, line: 1530, column: 9)
!6072 = !DILocation(line: 1540, column: 23, scope: !6067)
!6073 = !DILocation(line: 1539, column: 17, scope: !6067)
!6074 = !DILocation(line: 1542, column: 5, scope: !6067)
!6075 = !DILocation(line: 1545, column: 23, scope: !6067)
!6076 = !DILocation(line: 1544, column: 17, scope: !6067)
!6077 = !DILocation(line: 1547, column: 5, scope: !6067)
!6078 = !DILocation(line: 1551, column: 23, scope: !6067)
!6079 = !DILocation(line: 1551, column: 6, scope: !6067)
!6080 = !DILocation(line: 1550, column: 17, scope: !6067)
!6081 = !DILocation(line: 1552, column: 5, scope: !6067)
!6082 = !DILocation(line: 0, scope: !6067)
!6083 = !DILocation(line: 1554, column: 8, scope: !6064)
!6084 = !DILocation(line: 1555, column: 19, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6086, file: !2888, line: 1554, column: 33)
!6086 = distinct !DILexicalBlock(scope: !6064, file: !2888, line: 1554, column: 8)
!6087 = !DILocation(line: 1555, column: 17, scope: !6085)
!6088 = !DILocation(line: 1556, column: 4, scope: !6085)
!6089 = !DILocation(line: 1557, column: 19, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !2888, line: 1556, column: 39)
!6091 = distinct !DILexicalBlock(scope: !6086, file: !2888, line: 1556, column: 15)
!6092 = !DILocation(line: 1557, column: 17, scope: !6090)
!6093 = !DILocation(line: 1558, column: 4, scope: !6090)
!6094 = !DILocation(line: 0, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !2888, line: 1560, column: 8)
!6096 = distinct !DILexicalBlock(scope: !6097, file: !2888, line: 1559, column: 45)
!6097 = distinct !DILexicalBlock(scope: !6065, file: !2888, line: 1559, column: 14)
!6098 = !DILocation(line: 1566, column: 17, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !2888, line: 1565, column: 46)
!6100 = distinct !DILexicalBlock(scope: !6097, file: !2888, line: 1565, column: 14)
!6101 = !DILocation(line: 1566, column: 15, scope: !6099)
!6102 = !DILocation(line: 1567, column: 3, scope: !6099)
!6103 = !DILocation(line: 1574, column: 21, scope: !5932)
!6104 = !DILocation(line: 1575, column: 4, scope: !5930)
!6105 = !DILocation(line: 0, scope: !5930)
!6106 = !DILocation(line: 1575, column: 4, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !5930, file: !2888, line: 1575, column: 4)
!6108 = !DILocation(line: 1582, column: 17, scope: !5868)
!6109 = !DILocation(line: 1582, column: 3, scope: !5868)
!6110 = !DILocation(line: 1584, column: 4, scope: !5934)
!6111 = !DILocation(line: 0, scope: !5934)
!6112 = !DILocation(line: 1584, column: 4, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !5934, file: !2888, line: 1584, column: 4)
!6114 = !DILocation(line: 1587, column: 31, scope: !5937)
!6115 = !DILocation(line: 1591, column: 18, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !5937, file: !2888, line: 1591, column: 8)
!6117 = !DILocation(line: 1591, column: 8, scope: !5937)
!6118 = !DILocation(line: 1592, column: 11, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6116, file: !2888, line: 1591, column: 24)
!6120 = !DILocation(line: 0, scope: !5937)
!6121 = !DILocation(line: 1593, column: 4, scope: !6119)
!6122 = !DILocation(line: 1594, column: 11, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6116, file: !2888, line: 1593, column: 11)
!6124 = !DILocation(line: 1604, column: 51, scope: !5935)
!6125 = !DILocation(line: 1604, column: 13, scope: !5935)
!6126 = !DILocation(line: 1604, column: 11, scope: !5935)
!6127 = !DILocation(line: 1606, column: 4, scope: !5935)
!6128 = !DILocation(line: 1609, column: 14, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !5935, file: !2888, line: 1609, column: 8)
!6130 = !DILocation(line: 1609, column: 8, scope: !5935)
!6131 = !DILocation(line: 1619, column: 18, scope: !5935)
!6132 = !DILocation(line: 1620, column: 13, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !5935, file: !2888, line: 1620, column: 8)
!6134 = !DILocation(line: 1620, column: 8, scope: !5935)
!6135 = !DILocation(line: 1622, column: 36, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6133, file: !2888, line: 1620, column: 18)
!6137 = !DILocation(line: 1622, column: 17, scope: !6136)
!6138 = !DILocation(line: 1623, column: 4, scope: !6136)
!6139 = !DILocation(line: 1632, column: 29, scope: !5935)
!6140 = !DILocation(line: 1632, column: 10, scope: !5935)
!6141 = !DILocation(line: 1632, column: 4, scope: !5935)
!6142 = !DILocation(line: 1407, column: 8, scope: !5868)
!6143 = !DILocation(line: 0, scope: !5935)
!6144 = !DILocation(line: 1634, column: 3, scope: !5935)
!6145 = !DILocation(line: 1640, column: 18, scope: !5940)
!6146 = !DILocation(line: 1640, column: 8, scope: !5935)
!6147 = !DILocation(line: 1729, column: 13, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1729, column: 7)
!6149 = !DILocation(line: 1641, column: 22, scope: !5939)
!6150 = !DILocation(line: 0, scope: !5939)
!6151 = !DILocation(line: 1646, column: 21, scope: !5939)
!6152 = !DILocation(line: 1649, column: 13, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !5939, file: !2888, line: 1649, column: 9)
!6154 = !DILocation(line: 1649, column: 9, scope: !5939)
!6155 = !DILocation(line: 1650, column: 35, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6153, file: !2888, line: 1649, column: 34)
!6157 = !DILocation(line: 1650, column: 23, scope: !6156)
!6158 = !DILocation(line: 1651, column: 5, scope: !6156)
!6159 = !DILocation(line: 1660, column: 15, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !5935, file: !2888, line: 1660, column: 8)
!6161 = !DILocation(line: 1660, column: 19, scope: !6160)
!6162 = !DILocation(line: 1660, column: 8, scope: !5935)
!6163 = !DILocation(line: 1661, column: 23, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6160, file: !2888, line: 1660, column: 28)
!6165 = !DILocation(line: 1661, column: 11, scope: !6164)
!6166 = !DILocation(line: 1665, column: 22, scope: !6164)
!6167 = !DILocation(line: 1666, column: 21, scope: !6164)
!6168 = !DILocation(line: 1668, column: 5, scope: !6164)
!6169 = !DILocation(line: 1677, column: 30, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !2888, line: 1676, column: 49)
!6171 = distinct !DILexicalBlock(scope: !5935, file: !2888, line: 1676, column: 8)
!6172 = !DILocation(line: 1677, column: 5, scope: !6170)
!6173 = !DILocation(line: 1680, column: 4, scope: !5935)
!6174 = !DILocation(line: 0, scope: !6116)
!6175 = !DILocation(line: 1597, column: 14, scope: !5937)
!6176 = !DILocation(line: 1699, column: 11, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1699, column: 7)
!6178 = !DILocation(line: 1699, column: 7, scope: !5868)
!6179 = !DILocation(line: 1725, column: 7, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1725, column: 7)
!6181 = !DILocation(line: 1725, column: 12, scope: !6180)
!6182 = !DILocation(line: 1747, column: 13, scope: !5947)
!6183 = !DILocation(line: 1747, column: 7, scope: !5868)
!6184 = !DILocation(line: 1722, column: 24, scope: !5868)
!6185 = !DILocation(line: 1725, column: 7, scope: !5868)
!6186 = !DILocation(line: 1729, column: 7, scope: !5868)
!6187 = !DILocation(line: 1736, column: 13, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !5868, file: !2888, line: 1736, column: 7)
!6189 = !DILocation(line: 1735, column: 19, scope: !5868)
!6190 = !DILocation(line: 1736, column: 7, scope: !5868)
!6191 = !DILocation(line: 1748, column: 10, scope: !5946)
!6192 = !DILocation(line: 1750, column: 15, scope: !5945)
!6193 = !DILocation(line: 1750, column: 8, scope: !5946)
!6194 = !DILocation(line: 0, scope: !5944)
!6195 = !DILocation(line: 1756, column: 15, scope: !5953)
!6196 = !DILocation(line: 1756, column: 9, scope: !5944)
!6197 = !DILocation(line: 1758, column: 7, scope: !5949)
!6198 = !DILocation(line: 0, scope: !5949)
!6199 = !DILocation(line: 1758, column: 7, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !5949, file: !2888, line: 1758, column: 7)
!6201 = !DILocation(line: 1764, column: 5, scope: !5944)
!6202 = !DILocation(line: 0, scope: !5946)
!6203 = !DILocation(line: 1764, column: 20, scope: !5944)
!6204 = !DILocation(line: 1764, column: 17, scope: !5944)
!6205 = !DILocation(line: 1765, column: 6, scope: !5955)
!6206 = !DILocation(line: 0, scope: !5955)
!6207 = !DILocation(line: 1765, column: 6, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !5955, file: !2888, line: 1765, column: 6)
!6209 = distinct !{!6209, !6201, !6210}
!6210 = !DILocation(line: 1766, column: 5, scope: !5944)
!6211 = !DILocation(line: 1773, column: 12, scope: !5960)
!6212 = !DILocation(line: 1773, column: 7, scope: !5868)
!6213 = !DILocation(line: 1773, column: 7, scope: !5960)
!6214 = !DILocation(line: 1774, column: 4, scope: !5958)
!6215 = !DILocation(line: 0, scope: !5958)
!6216 = !DILocation(line: 1774, column: 4, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !5958, file: !2888, line: 1774, column: 4)
!6218 = !DILocation(line: 1818, column: 8, scope: !5964)
!6219 = !DILocation(line: 1818, column: 27, scope: !5964)
!6220 = !DILocation(line: 1818, column: 25, scope: !5964)
!6221 = !DILocation(line: 1818, column: 8, scope: !5965)
!6222 = !DILocation(line: 1819, column: 5, scope: !5962)
!6223 = !DILocation(line: 0, scope: !5962)
!6224 = !DILocation(line: 1819, column: 5, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !5962, file: !2888, line: 1819, column: 5)
!6226 = !DILocation(line: 1822, column: 14, scope: !5970)
!6227 = !DILocation(line: 1822, column: 8, scope: !5965)
!6228 = !DILocation(line: 1823, column: 5, scope: !5968)
!6229 = !DILocation(line: 0, scope: !5968)
!6230 = !DILocation(line: 1823, column: 5, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !5968, file: !2888, line: 1823, column: 5)
!6232 = !DILocation(line: 1826, column: 20, scope: !5965)
!6233 = !DILocation(line: 1827, column: 4, scope: !5965)
!6234 = !DILocation(line: 0, scope: !5965)
!6235 = !DILocation(line: 1827, column: 21, scope: !5965)
!6236 = !DILocation(line: 1827, column: 18, scope: !5965)
!6237 = !DILocation(line: 1828, column: 5, scope: !5972)
!6238 = !DILocation(line: 0, scope: !5972)
!6239 = !DILocation(line: 1828, column: 5, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !5972, file: !2888, line: 1828, column: 5)
!6241 = distinct !{!6241, !6233, !6242}
!6242 = !DILocation(line: 1829, column: 4, scope: !5965)
!6243 = !DILocation(line: 1831, column: 4, scope: !5975)
!6244 = !DILocation(line: 0, scope: !5975)
!6245 = !DILocation(line: 1831, column: 4, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !5975, file: !2888, line: 1831, column: 4)
!6247 = !DILocation(line: 1835, column: 16, scope: !5868)
!6248 = !DILocation(line: 1835, column: 3, scope: !5868)
!6249 = !DILocation(line: 1836, column: 4, scope: !5977)
!6250 = !DILocation(line: 0, scope: !5977)
!6251 = !DILocation(line: 1836, column: 4, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !5977, file: !2888, line: 1836, column: 4)
!6253 = !DILocation(line: 1837, column: 4, scope: !5978)
!6254 = distinct !{!6254, !6248, !6255}
!6255 = !DILocation(line: 1838, column: 3, scope: !5868)
!6256 = !DILocation(line: 1844, column: 1, scope: !5841)
!6257 = distinct !DISubprogram(name: "extract_conversion", scope: !2888, file: !2888, line: 642, type: !6258, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6260)
!6258 = !DISubroutineType(types: !6259)
!6259 = !{!118, !5914, !118}
!6260 = !{!6261, !6262}
!6261 = !DILocalVariable(name: "conv", arg: 1, scope: !6257, file: !2888, line: 642, type: !5914)
!6262 = !DILocalVariable(name: "sp", arg: 2, scope: !6257, file: !2888, line: 643, type: !118)
!6263 = !DILocation(line: 0, scope: !6257)
!6264 = !DILocation(line: 645, column: 10, scope: !6257)
!6265 = !DILocation(line: 653, column: 2, scope: !6257)
!6266 = !DILocation(line: 654, column: 6, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6257, file: !2888, line: 654, column: 6)
!6268 = !DILocation(line: 654, column: 10, scope: !6267)
!6269 = !DILocation(line: 654, column: 6, scope: !6257)
!6270 = !DILocation(line: 655, column: 24, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6267, file: !2888, line: 654, column: 18)
!6272 = !DILocation(line: 655, column: 19, scope: !6271)
!6273 = !DILocation(line: 656, column: 3, scope: !6271)
!6274 = !DILocation(line: 659, column: 7, scope: !6257)
!6275 = !DILocation(line: 660, column: 7, scope: !6257)
!6276 = !DILocation(line: 661, column: 7, scope: !6257)
!6277 = !DILocation(line: 662, column: 7, scope: !6257)
!6278 = !DILocation(line: 663, column: 7, scope: !6257)
!6279 = !DILocation(line: 665, column: 2, scope: !6257)
!6280 = !DILocation(line: 666, column: 1, scope: !6257)
!6281 = distinct !DISubprogram(name: "outs", scope: !2888, file: !2888, line: 1319, type: !6282, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6284)
!6282 = !DISubroutineType(types: !6283)
!6283 = !{!111, !4303, !133, !118, !118}
!6284 = !{!6285, !6286, !6287, !6288, !6289, !6290}
!6285 = !DILocalVariable(name: "out", arg: 1, scope: !6281, file: !2888, line: 1319, type: !4303)
!6286 = !DILocalVariable(name: "ctx", arg: 2, scope: !6281, file: !2888, line: 1320, type: !133)
!6287 = !DILocalVariable(name: "sp", arg: 3, scope: !6281, file: !2888, line: 1321, type: !118)
!6288 = !DILocalVariable(name: "ep", arg: 4, scope: !6281, file: !2888, line: 1322, type: !118)
!6289 = !DILocalVariable(name: "count", scope: !6281, file: !2888, line: 1324, type: !249)
!6290 = !DILocalVariable(name: "rc", scope: !6291, file: !2888, line: 1327, type: !111)
!6291 = distinct !DILexicalBlock(scope: !6281, file: !2888, line: 1326, column: 45)
!6292 = !DILocation(line: 0, scope: !6281)
!6293 = !DILocation(line: 1326, column: 2, scope: !6281)
!6294 = !DILocation(line: 1324, column: 9, scope: !6281)
!6295 = !DILocation(line: 1326, column: 13, scope: !6281)
!6296 = !DILocation(line: 1326, column: 19, scope: !6281)
!6297 = !DILocation(line: 1327, column: 21, scope: !6291)
!6298 = !DILocation(line: 1326, column: 36, scope: !6281)
!6299 = !DILocation(line: 1326, column: 39, scope: !6281)
!6300 = !DILocation(line: 1327, column: 24, scope: !6291)
!6301 = !DILocation(line: 1327, column: 16, scope: !6291)
!6302 = !DILocation(line: 1327, column: 12, scope: !6291)
!6303 = !DILocation(line: 0, scope: !6291)
!6304 = !DILocation(line: 1329, column: 10, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6291, file: !2888, line: 1329, column: 7)
!6306 = !DILocation(line: 1329, column: 7, scope: !6291)
!6307 = distinct !{!6307, !6293, !6308}
!6308 = !DILocation(line: 1333, column: 2, scope: !6281)
!6309 = !DILocation(line: 1336, column: 1, scope: !6281)
!6310 = distinct !DISubprogram(name: "encode_uint", scope: !2888, file: !2888, line: 788, type: !6311, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6313)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!253, !2910, !5914, !253, !118}
!6313 = !{!6314, !6315, !6316, !6317, !6318, !6319, !6321, !6322}
!6314 = !DILocalVariable(name: "value", arg: 1, scope: !6310, file: !2888, line: 788, type: !2910)
!6315 = !DILocalVariable(name: "conv", arg: 2, scope: !6310, file: !2888, line: 789, type: !5914)
!6316 = !DILocalVariable(name: "bps", arg: 3, scope: !6310, file: !2888, line: 790, type: !253)
!6317 = !DILocalVariable(name: "bpe", arg: 4, scope: !6310, file: !2888, line: 791, type: !118)
!6318 = !DILocalVariable(name: "upcase", scope: !6310, file: !2888, line: 793, type: !131)
!6319 = !DILocalVariable(name: "radix", scope: !6310, file: !2888, line: 794, type: !6320)
!6320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6321 = !DILocalVariable(name: "bp", scope: !6310, file: !2888, line: 795, type: !253)
!6322 = !DILocalVariable(name: "lsv", scope: !6323, file: !2888, line: 798, type: !32)
!6323 = distinct !DILexicalBlock(scope: !6310, file: !2888, line: 797, column: 5)
!6324 = !DILocation(line: 0, scope: !6310)
!6325 = !DILocation(line: 793, column: 35, scope: !6310)
!6326 = !DILocation(line: 793, column: 24, scope: !6310)
!6327 = !DILocation(line: 793, column: 16, scope: !6310)
!6328 = !DILocation(line: 794, column: 29, scope: !6310)
!6329 = !DILocation(line: 795, column: 24, scope: !6310)
!6330 = !DILocation(line: 795, column: 17, scope: !6310)
!6331 = !DILocation(line: 797, column: 2, scope: !6310)
!6332 = !DILocation(line: 802, column: 9, scope: !6323)
!6333 = !DILocation(line: 798, column: 22, scope: !6323)
!6334 = !DILocation(line: 0, scope: !6323)
!6335 = !DILocation(line: 800, column: 16, scope: !6323)
!6336 = !DILocation(line: 800, column: 11, scope: !6323)
!6337 = !DILocation(line: 800, column: 4, scope: !6323)
!6338 = !DILocation(line: 800, column: 9, scope: !6323)
!6339 = !DILocation(line: 803, column: 18, scope: !6310)
!6340 = !DILocation(line: 803, column: 24, scope: !6310)
!6341 = !DILocation(line: 803, column: 2, scope: !6323)
!6342 = distinct !{!6342, !6331, !6343}
!6343 = !DILocation(line: 803, column: 37, scope: !6310)
!6344 = !DILocation(line: 808, column: 12, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6310, file: !2888, line: 808, column: 6)
!6346 = !DILocation(line: 808, column: 6, scope: !6310)
!6347 = !DILocation(line: 809, column: 7, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6345, file: !2888, line: 808, column: 23)
!6349 = !DILocation(line: 813, column: 3, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !2888, line: 811, column: 27)
!6351 = distinct !DILexicalBlock(scope: !6352, file: !2888, line: 811, column: 14)
!6352 = distinct !DILexicalBlock(scope: !6348, file: !2888, line: 809, column: 7)
!6353 = !DILocation(line: 0, scope: !6352)
!6354 = !DILocation(line: 818, column: 2, scope: !6310)
!6355 = distinct !DISubprogram(name: "store_count", scope: !2888, file: !2888, line: 1280, type: !6356, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6360)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{null, !6358, !133, !111}
!6358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6359, size: 32)
!6359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5881)
!6360 = !{!6361, !6362, !6363}
!6361 = !DILocalVariable(name: "conv", arg: 1, scope: !6355, file: !2888, line: 1280, type: !6358)
!6362 = !DILocalVariable(name: "dp", arg: 2, scope: !6355, file: !2888, line: 1281, type: !133)
!6363 = !DILocalVariable(name: "count", arg: 3, scope: !6355, file: !2888, line: 1282, type: !111)
!6364 = !DILocation(line: 0, scope: !6355)
!6365 = !DILocation(line: 1284, column: 38, scope: !6355)
!6366 = !DILocation(line: 1284, column: 2, scope: !6355)
!6367 = !DILocation(line: 1286, column: 4, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6355, file: !2888, line: 1284, column: 50)
!6369 = !DILocation(line: 1286, column: 14, scope: !6368)
!6370 = !DILocation(line: 1287, column: 3, scope: !6368)
!6371 = !DILocation(line: 1289, column: 24, scope: !6368)
!6372 = !DILocation(line: 1289, column: 22, scope: !6368)
!6373 = !DILocation(line: 1290, column: 3, scope: !6368)
!6374 = !DILocation(line: 1292, column: 18, scope: !6368)
!6375 = !DILocation(line: 1292, column: 4, scope: !6368)
!6376 = !DILocation(line: 1292, column: 16, scope: !6368)
!6377 = !DILocation(line: 1293, column: 3, scope: !6368)
!6378 = !DILocation(line: 1295, column: 4, scope: !6368)
!6379 = !DILocation(line: 1295, column: 15, scope: !6368)
!6380 = !DILocation(line: 1296, column: 3, scope: !6368)
!6381 = !DILocation(line: 1298, column: 22, scope: !6368)
!6382 = !DILocation(line: 1298, column: 4, scope: !6368)
!6383 = !DILocation(line: 1298, column: 20, scope: !6368)
!6384 = !DILocation(line: 1299, column: 3, scope: !6368)
!6385 = !DILocation(line: 1301, column: 21, scope: !6368)
!6386 = !DILocation(line: 1301, column: 4, scope: !6368)
!6387 = !DILocation(line: 1301, column: 19, scope: !6368)
!6388 = !DILocation(line: 1302, column: 3, scope: !6368)
!6389 = !DILocation(line: 1304, column: 4, scope: !6368)
!6390 = !DILocation(line: 1304, column: 17, scope: !6368)
!6391 = !DILocation(line: 1305, column: 3, scope: !6368)
!6392 = !DILocation(line: 1307, column: 4, scope: !6368)
!6393 = !DILocation(line: 1307, column: 20, scope: !6368)
!6394 = !DILocation(line: 1308, column: 3, scope: !6368)
!6395 = !DILocation(line: 1316, column: 1, scope: !6355)
!6396 = distinct !DISubprogram(name: "isupper", scope: !6397, file: !6397, line: 16, type: !881, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6398)
!6397 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6398 = !{!6399}
!6399 = !DILocalVariable(name: "a", arg: 1, scope: !6396, file: !6397, line: 16, type: !111)
!6400 = !DILocation(line: 0, scope: !6396)
!6401 = !DILocation(line: 18, column: 29, scope: !6396)
!6402 = !DILocation(line: 18, column: 45, scope: !6396)
!6403 = !DILocation(line: 18, column: 2, scope: !6396)
!6404 = distinct !DISubprogram(name: "conversion_radix", scope: !2888, file: !2888, line: 761, type: !6405, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6407)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{!249, !120}
!6407 = !{!6408}
!6408 = !DILocalVariable(name: "specifier", arg: 1, scope: !6404, file: !2888, line: 761, type: !120)
!6409 = !DILocation(line: 0, scope: !6404)
!6410 = !DILocation(line: 763, column: 2, scope: !6404)
!6411 = !DILocation(line: 770, column: 3, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6404, file: !2888, line: 763, column: 21)
!6413 = !DILocation(line: 774, column: 3, scope: !6412)
!6414 = !DILocation(line: 0, scope: !6412)
!6415 = !DILocation(line: 776, column: 1, scope: !6404)
!6416 = distinct !DISubprogram(name: "extract_flags", scope: !2888, file: !2888, line: 339, type: !6258, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6417)
!6417 = !{!6418, !6419, !6420}
!6418 = !DILocalVariable(name: "conv", arg: 1, scope: !6416, file: !2888, line: 339, type: !5914)
!6419 = !DILocalVariable(name: "sp", arg: 2, scope: !6416, file: !2888, line: 340, type: !118)
!6420 = !DILocalVariable(name: "loop", scope: !6416, file: !2888, line: 342, type: !131)
!6421 = !DILocation(line: 0, scope: !6416)
!6422 = !DILocation(line: 344, column: 2, scope: !6416)
!6423 = !DILocation(line: 345, column: 11, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6416, file: !2888, line: 344, column: 5)
!6425 = !DILocation(line: 345, column: 3, scope: !6424)
!6426 = !DILocation(line: 351, column: 4, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6424, file: !2888, line: 345, column: 16)
!6428 = !DILocation(line: 354, column: 4, scope: !6427)
!6429 = !DILocation(line: 357, column: 4, scope: !6427)
!6430 = !DILocation(line: 360, column: 4, scope: !6427)
!6431 = !DILocation(line: 0, scope: !6427)
!6432 = !DILocation(line: 370, column: 12, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6416, file: !2888, line: 370, column: 6)
!6434 = !DILocation(line: 370, column: 22, scope: !6433)
!6435 = !DILocation(line: 371, column: 19, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6433, file: !2888, line: 370, column: 42)
!6437 = !DILocation(line: 372, column: 2, scope: !6436)
!6438 = !DILocation(line: 376, column: 2, scope: !6416)
!6439 = distinct !DISubprogram(name: "extract_width", scope: !2888, file: !2888, line: 388, type: !6258, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6440)
!6440 = !{!6441, !6442, !6443, !6444}
!6441 = !DILocalVariable(name: "conv", arg: 1, scope: !6439, file: !2888, line: 388, type: !5914)
!6442 = !DILocalVariable(name: "sp", arg: 2, scope: !6439, file: !2888, line: 389, type: !118)
!6443 = !DILocalVariable(name: "wp", scope: !6439, file: !2888, line: 398, type: !118)
!6444 = !DILocalVariable(name: "width", scope: !6439, file: !2888, line: 399, type: !249)
!6445 = !DILocation(line: 0, scope: !6439)
!6446 = !DILocation(line: 391, column: 8, scope: !6439)
!6447 = !DILocation(line: 391, column: 22, scope: !6439)
!6448 = !DILocation(line: 393, column: 6, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6439, file: !2888, line: 393, column: 6)
!6450 = !DILocation(line: 393, column: 10, scope: !6449)
!6451 = !DILocation(line: 393, column: 6, scope: !6439)
!6452 = !DILocation(line: 394, column: 20, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6449, file: !2888, line: 393, column: 18)
!6454 = !DILocation(line: 395, column: 10, scope: !6453)
!6455 = !DILocation(line: 395, column: 3, scope: !6453)
!6456 = !DILocation(line: 399, column: 17, scope: !6439)
!6457 = !DILocation(line: 401, column: 6, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6439, file: !2888, line: 401, column: 6)
!6459 = !DILocation(line: 401, column: 9, scope: !6458)
!6460 = !DILocation(line: 401, column: 6, scope: !6439)
!6461 = !DILocation(line: 402, column: 23, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6458, file: !2888, line: 401, column: 16)
!6463 = !DILocation(line: 403, column: 9, scope: !6462)
!6464 = !DILocation(line: 403, column: 21, scope: !6462)
!6465 = !DILocation(line: 405, column: 11, scope: !6462)
!6466 = !DILocation(line: 404, column: 21, scope: !6462)
!6467 = !DILocation(line: 406, column: 2, scope: !6462)
!6468 = !DILocation(line: 409, column: 1, scope: !6439)
!6469 = distinct !DISubprogram(name: "extract_prec", scope: !2888, file: !2888, line: 420, type: !6258, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6470)
!6470 = !{!6471, !6472, !6473}
!6471 = !DILocalVariable(name: "conv", arg: 1, scope: !6469, file: !2888, line: 420, type: !5914)
!6472 = !DILocalVariable(name: "sp", arg: 2, scope: !6469, file: !2888, line: 421, type: !118)
!6473 = !DILocalVariable(name: "prec", scope: !6469, file: !2888, line: 435, type: !249)
!6474 = !DILocation(line: 0, scope: !6469)
!6475 = !DILocation(line: 423, column: 24, scope: !6469)
!6476 = !DILocation(line: 423, column: 28, scope: !6469)
!6477 = !DILocation(line: 423, column: 8, scope: !6469)
!6478 = !DILocation(line: 423, column: 21, scope: !6469)
!6479 = !DILocation(line: 425, column: 6, scope: !6469)
!6480 = !DILocation(line: 428, column: 2, scope: !6469)
!6481 = !DILocation(line: 430, column: 6, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6469, file: !2888, line: 430, column: 6)
!6483 = !DILocation(line: 430, column: 10, scope: !6482)
!6484 = !DILocation(line: 430, column: 6, scope: !6469)
!6485 = !DILocation(line: 431, column: 19, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6482, file: !2888, line: 430, column: 18)
!6487 = !DILocation(line: 432, column: 10, scope: !6486)
!6488 = !DILocation(line: 432, column: 3, scope: !6486)
!6489 = !DILocation(line: 435, column: 16, scope: !6469)
!6490 = !DILocation(line: 437, column: 8, scope: !6469)
!6491 = !DILocation(line: 437, column: 19, scope: !6469)
!6492 = !DILocation(line: 439, column: 10, scope: !6469)
!6493 = !DILocation(line: 438, column: 20, scope: !6469)
!6494 = !DILocation(line: 441, column: 9, scope: !6469)
!6495 = !DILocation(line: 442, column: 1, scope: !6469)
!6496 = distinct !DISubprogram(name: "extract_length", scope: !2888, file: !2888, line: 453, type: !6258, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6497)
!6497 = !{!6498, !6499}
!6498 = !DILocalVariable(name: "conv", arg: 1, scope: !6496, file: !2888, line: 453, type: !5914)
!6499 = !DILocalVariable(name: "sp", arg: 2, scope: !6496, file: !2888, line: 454, type: !118)
!6500 = !DILocation(line: 0, scope: !6496)
!6501 = !DILocation(line: 456, column: 10, scope: !6496)
!6502 = !DILocation(line: 456, column: 2, scope: !6496)
!6503 = !DILocation(line: 458, column: 8, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6505, file: !2888, line: 458, column: 7)
!6505 = distinct !DILexicalBlock(scope: !6496, file: !2888, line: 456, column: 15)
!6506 = !DILocation(line: 458, column: 7, scope: !6504)
!6507 = !DILocation(line: 458, column: 13, scope: !6504)
!6508 = !DILocation(line: 0, scope: !6504)
!6509 = !DILocation(line: 458, column: 7, scope: !6505)
!6510 = !DILocation(line: 459, column: 21, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6504, file: !2888, line: 458, column: 21)
!6512 = !DILocation(line: 460, column: 4, scope: !6511)
!6513 = !DILocation(line: 461, column: 3, scope: !6511)
!6514 = !DILocation(line: 462, column: 21, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6504, file: !2888, line: 461, column: 10)
!6516 = !DILocation(line: 466, column: 8, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6505, file: !2888, line: 466, column: 7)
!6518 = !DILocation(line: 466, column: 7, scope: !6517)
!6519 = !DILocation(line: 466, column: 13, scope: !6517)
!6520 = !DILocation(line: 0, scope: !6517)
!6521 = !DILocation(line: 466, column: 7, scope: !6505)
!6522 = !DILocation(line: 467, column: 21, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6517, file: !2888, line: 466, column: 21)
!6524 = !DILocation(line: 468, column: 4, scope: !6523)
!6525 = !DILocation(line: 469, column: 3, scope: !6523)
!6526 = !DILocation(line: 470, column: 21, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6517, file: !2888, line: 469, column: 10)
!6528 = !DILocation(line: 474, column: 9, scope: !6505)
!6529 = !DILocation(line: 474, column: 20, scope: !6505)
!6530 = !DILocation(line: 475, column: 3, scope: !6505)
!6531 = !DILocation(line: 476, column: 3, scope: !6505)
!6532 = !DILocation(line: 478, column: 9, scope: !6505)
!6533 = !DILocation(line: 478, column: 20, scope: !6505)
!6534 = !DILocation(line: 479, column: 3, scope: !6505)
!6535 = !DILocation(line: 480, column: 3, scope: !6505)
!6536 = !DILocation(line: 482, column: 9, scope: !6505)
!6537 = !DILocation(line: 482, column: 20, scope: !6505)
!6538 = !DILocation(line: 483, column: 3, scope: !6505)
!6539 = !DILocation(line: 484, column: 3, scope: !6505)
!6540 = !DILocation(line: 486, column: 9, scope: !6505)
!6541 = !DILocation(line: 486, column: 20, scope: !6505)
!6542 = !DILocation(line: 487, column: 3, scope: !6505)
!6543 = !DILocation(line: 492, column: 21, scope: !6505)
!6544 = !DILocation(line: 493, column: 3, scope: !6505)
!6545 = !DILocation(line: 495, column: 9, scope: !6505)
!6546 = !DILocation(line: 495, column: 20, scope: !6505)
!6547 = !DILocation(line: 496, column: 3, scope: !6505)
!6548 = !DILocation(line: 498, column: 2, scope: !6496)
!6549 = distinct !DISubprogram(name: "extract_specifier", scope: !2888, file: !2888, line: 513, type: !6258, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6550)
!6550 = !{!6551, !6552, !6553, !6554}
!6551 = !DILocalVariable(name: "conv", arg: 1, scope: !6549, file: !2888, line: 513, type: !5914)
!6552 = !DILocalVariable(name: "sp", arg: 2, scope: !6549, file: !2888, line: 514, type: !118)
!6553 = !DILocalVariable(name: "unsupported", scope: !6549, file: !2888, line: 516, type: !131)
!6554 = !DILabel(scope: !6555, name: "int_conv", file: !2888, line: 526)
!6555 = distinct !DILexicalBlock(scope: !6549, file: !2888, line: 520, column: 27)
!6556 = !DILocation(line: 0, scope: !6549)
!6557 = !DILocation(line: 518, column: 20, scope: !6549)
!6558 = !DILocation(line: 518, column: 8, scope: !6549)
!6559 = !DILocation(line: 518, column: 18, scope: !6549)
!6560 = !DILocation(line: 520, column: 2, scope: !6549)
!6561 = !DILocation(line: 525, column: 3, scope: !6555)
!6562 = !DILocation(line: 0, scope: !6555)
!6563 = !DILocation(line: 526, column: 1, scope: !6555)
!6564 = !DILocation(line: 528, column: 24, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6555, file: !2888, line: 528, column: 7)
!6566 = !DILocation(line: 528, column: 7, scope: !6555)
!6567 = !DILocation(line: 535, column: 23, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6555, file: !2888, line: 535, column: 7)
!6569 = !DILocation(line: 535, column: 7, scope: !6555)
!6570 = !DILocation(line: 536, column: 36, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6568, file: !2888, line: 535, column: 31)
!6572 = !DILocation(line: 537, column: 3, scope: !6571)
!6573 = !DILocation(line: 570, column: 9, scope: !6555)
!6574 = !DILocation(line: 570, column: 23, scope: !6555)
!6575 = !DILocation(line: 575, column: 4, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6577, file: !2888, line: 573, column: 48)
!6577 = distinct !DILexicalBlock(scope: !6555, file: !2888, line: 573, column: 7)
!6578 = !DILocation(line: 603, column: 9, scope: !6555)
!6579 = !DILocation(line: 603, column: 23, scope: !6555)
!6580 = !DILocation(line: 605, column: 24, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6555, file: !2888, line: 605, column: 7)
!6582 = !DILocation(line: 605, column: 7, scope: !6555)
!6583 = !DILocation(line: 612, column: 9, scope: !6555)
!6584 = !DILocation(line: 612, column: 23, scope: !6555)
!6585 = !DILocation(line: 619, column: 24, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6555, file: !2888, line: 619, column: 7)
!6587 = !DILocation(line: 619, column: 7, scope: !6555)
!6588 = !DILocation(line: 625, column: 9, scope: !6555)
!6589 = !DILocation(line: 625, column: 17, scope: !6555)
!6590 = !DILocation(line: 626, column: 3, scope: !6555)
!6591 = !DILocation(line: 629, column: 20, scope: !6549)
!6592 = !DILocation(line: 629, column: 8, scope: !6549)
!6593 = !DILocation(line: 518, column: 23, scope: !6549)
!6594 = !DILocation(line: 631, column: 2, scope: !6549)
!6595 = distinct !DISubprogram(name: "extract_decimal", scope: !2888, file: !2888, line: 318, type: !6596, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6598)
!6596 = !DISubroutineType(types: !6597)
!6597 = !{!249, !859}
!6598 = !{!6599, !6600, !6601}
!6599 = !DILocalVariable(name: "str", arg: 1, scope: !6595, file: !2888, line: 318, type: !859)
!6600 = !DILocalVariable(name: "sp", scope: !6595, file: !2888, line: 320, type: !118)
!6601 = !DILocalVariable(name: "val", scope: !6595, file: !2888, line: 321, type: !249)
!6602 = !DILocation(line: 0, scope: !6595)
!6603 = !DILocation(line: 320, column: 19, scope: !6595)
!6604 = !DILocation(line: 323, column: 37, scope: !6595)
!6605 = !DILocation(line: 323, column: 17, scope: !6595)
!6606 = !DILocation(line: 323, column: 9, scope: !6595)
!6607 = !DILocation(line: 323, column: 2, scope: !6595)
!6608 = !DILocation(line: 324, column: 13, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6595, file: !2888, line: 323, column: 43)
!6610 = !DILocation(line: 324, column: 24, scope: !6609)
!6611 = !DILocation(line: 324, column: 19, scope: !6609)
!6612 = !DILocation(line: 324, column: 27, scope: !6609)
!6613 = distinct !{!6613, !6607, !6614}
!6614 = !DILocation(line: 325, column: 2, scope: !6595)
!6615 = !DILocation(line: 326, column: 7, scope: !6595)
!6616 = !DILocation(line: 327, column: 2, scope: !6595)
!6617 = distinct !DISubprogram(name: "isdigit", scope: !6397, file: !6397, line: 43, type: !881, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !6618)
!6618 = !{!6619}
!6619 = !DILocalVariable(name: "a", arg: 1, scope: !6617, file: !6397, line: 43, type: !111)
!6620 = !DILocation(line: 0, scope: !6617)
!6621 = !DILocation(line: 45, column: 29, scope: !6617)
!6622 = !DILocation(line: 45, column: 45, scope: !6617)
!6623 = !DILocation(line: 45, column: 2, scope: !6617)
!6624 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6625, file: !6625, line: 9, type: !416, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !247)
!6625 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!6626 = !DILocation(line: 11, column: 1, scope: !6624)
!6627 = !{i64 2147559580, i64 2147559623, i64 2147559663}
!6628 = !DILocation(line: 12, column: 1, scope: !6624)
!6629 = !{i64 2147563807, i64 2147563850, i64 2147563890}
!6630 = !DILocation(line: 13, column: 1, scope: !6624)
!6631 = !{i64 2147564016, i64 2147564059, i64 2147564099}
!6632 = !DILocation(line: 14, column: 1, scope: !6624)
!6633 = !{i64 2147564233, i64 2147564276, i64 2147564316}
!6634 = !DILocation(line: 15, column: 1, scope: !6624)
!6635 = !{i64 2147564402, i64 2147564445, i64 2147564485}
!6636 = !DILocation(line: 16, column: 1, scope: !6624)
!6637 = !{i64 2147564587, i64 2147564630, i64 2147564670}
!6638 = !DILocation(line: 17, column: 1, scope: !6624)
!6639 = !{i64 2147564804, i64 2147564847, i64 2147564887}
!6640 = !DILocation(line: 18, column: 1, scope: !6624)
!6641 = !{i64 2147564967, i64 2147565010, i64 2147565050}
!6642 = !DILocation(line: 19, column: 1, scope: !6624)
!6643 = !{i64 2147565151, i64 2147565194, i64 2147565234}
!6644 = !DILocation(line: 20, column: 1, scope: !6624)
!6645 = !{i64 2147565331, i64 2147565374, i64 2147565414}
!6646 = !DILocation(line: 21, column: 1, scope: !6624)
!6647 = !{i64 2147565574, i64 2147565617, i64 2147565657}
!6648 = !DILocation(line: 22, column: 1, scope: !6624)
!6649 = !{i64 2147565810, i64 2147565853, i64 2147565893}
!6650 = !DILocation(line: 23, column: 1, scope: !6624)
!6651 = !{i64 2147566013, i64 2147566056, i64 2147566096}
!6652 = !DILocation(line: 24, column: 1, scope: !6624)
!6653 = !{i64 2147566216, i64 2147566259, i64 2147566299}
!6654 = !DILocation(line: 25, column: 1, scope: !6624)
!6655 = !{i64 2147566415, i64 2147566458, i64 2147566498}
!6656 = !DILocation(line: 26, column: 1, scope: !6624)
!6657 = !{i64 2147566590, i64 2147566633, i64 2147566673}
!6658 = !DILocation(line: 27, column: 1, scope: !6624)
!6659 = !{i64 2147566798, i64 2147566841, i64 2147566881}
!6660 = !DILocation(line: 28, column: 1, scope: !6624)
!6661 = !{i64 2147567002, i64 2147567045, i64 2147567085}
!6662 = !DILocation(line: 29, column: 1, scope: !6624)
!6663 = !{i64 2147567195, i64 2147567238, i64 2147567278}
!6664 = !DILocation(line: 30, column: 1, scope: !6624)
!6665 = !{i64 2147567397, i64 2147567440, i64 2147567480}
!6666 = !DILocation(line: 31, column: 1, scope: !6624)
!6667 = !{i64 2147567596, i64 2147567639, i64 2147567679}
!6668 = !DILocation(line: 32, column: 1, scope: !6624)
!6669 = !{i64 2147567823, i64 2147567866, i64 2147567906}
!6670 = !DILocation(line: 33, column: 1, scope: !6624)
!6671 = !{i64 2147568038, i64 2147568081, i64 2147568121}
!6672 = !DILocation(line: 34, column: 1, scope: !6624)
!6673 = !{i64 2147568225, i64 2147568268, i64 2147568308}
!6674 = !DILocation(line: 35, column: 1, scope: !6624)
!6675 = !{i64 2147568397, i64 2147568440, i64 2147568480}
!6676 = !DILocation(line: 36, column: 1, scope: !6624)
!6677 = !{i64 2147568599, i64 2147568642, i64 2147568682}
!6678 = !DILocation(line: 37, column: 1, scope: !6624)
!6679 = !{i64 2147568798, i64 2147568841, i64 2147568881}
!6680 = !DILocation(line: 38, column: 1, scope: !6624)
!6681 = !{i64 2147568973, i64 2147569016, i64 2147569056}
!6682 = !DILocation(line: 39, column: 1, scope: !6624)
!6683 = !{i64 2147569226, i64 2147569269, i64 2147569309}
!6684 = !DILocation(line: 40, column: 1, scope: !6624)
!6685 = !{i64 2147569464, i64 2147569507, i64 2147569547}
!6686 = !DILocation(line: 41, column: 1, scope: !6624)
!6687 = !{i64 2147569699, i64 2147569742, i64 2147569782}
!6688 = !DILocation(line: 42, column: 1, scope: !6624)
!6689 = !{i64 2147569925, i64 2147569968, i64 2147570008}
!6690 = !DILocation(line: 43, column: 1, scope: !6624)
!6691 = !{i64 2147570160, i64 2147570203, i64 2147570243}
!6692 = !DILocation(line: 44, column: 1, scope: !6624)
!6693 = !{i64 2147570395, i64 2147570438, i64 2147570478}
!6694 = !DILocation(line: 45, column: 1, scope: !6624)
!6695 = !{i64 2147570636, i64 2147570679, i64 2147570719}
!6696 = !DILocation(line: 46, column: 1, scope: !6624)
!6697 = !{i64 2147570871, i64 2147570914, i64 2147570954}
!6698 = !DILocation(line: 47, column: 1, scope: !6624)
!6699 = !{i64 2147571100, i64 2147571143, i64 2147571183}
!6700 = !DILocation(line: 48, column: 1, scope: !6624)
!6701 = !{i64 2147571335, i64 2147571378, i64 2147571418}
!6702 = !DILocation(line: 49, column: 1, scope: !6624)
!6703 = !{i64 2147571585, i64 2147571628, i64 2147571668}
!6704 = !DILocation(line: 50, column: 1, scope: !6624)
!6705 = !{i64 2147571814, i64 2147571857, i64 2147571897}
!6706 = !DILocation(line: 51, column: 1, scope: !6624)
!6707 = !{i64 2147572022, i64 2147572065, i64 2147572105}
!6708 = !DILocation(line: 52, column: 1, scope: !6624)
!6709 = !{i64 2147572233, i64 2147572276, i64 2147572316}
!6710 = !DILocation(line: 53, column: 1, scope: !6624)
!6711 = !{i64 2147572468, i64 2147572511, i64 2147572551}
!6712 = !DILocation(line: 54, column: 1, scope: !6624)
!6713 = !{i64 2147576758, i64 2147576801, i64 2147576841}
!6714 = !DILocation(line: 55, column: 1, scope: !6624)
!6715 = !{i64 2147576975, i64 2147577018, i64 2147577058}
!6716 = !DILocation(line: 56, column: 1, scope: !6624)
!6717 = !{i64 2147577204, i64 2147577247, i64 2147577287}
!6718 = !DILocation(line: 57, column: 1, scope: !6624)
!6719 = !{i64 2147577442, i64 2147577485, i64 2147577525}
!6720 = !DILocation(line: 58, column: 1, scope: !6624)
!6721 = !{i64 2147577674, i64 2147577717, i64 2147577757}
!6722 = !DILocation(line: 59, column: 1, scope: !6624)
!6723 = !{i64 2147577900, i64 2147577943, i64 2147577983}
!6724 = !DILocation(line: 60, column: 1, scope: !6624)
!6725 = !{i64 2147578117, i64 2147578160, i64 2147578200}
!6726 = !DILocation(line: 61, column: 1, scope: !6624)
!6727 = !{i64 2147578349, i64 2147578392, i64 2147578432}
!6728 = !DILocation(line: 62, column: 1, scope: !6624)
!6729 = !{i64 2147578575, i64 2147578618, i64 2147578658}
!6730 = !DILocation(line: 63, column: 1, scope: !6624)
!6731 = !{i64 2147578789, i64 2147578832, i64 2147578872}
!6732 = !DILocation(line: 64, column: 1, scope: !6624)
!6733 = !{i64 2147579009, i64 2147579052, i64 2147579092}
!6734 = !DILocation(line: 65, column: 1, scope: !6624)
!6735 = !{i64 2147579241, i64 2147579284, i64 2147579324}
!6736 = !DILocation(line: 66, column: 1, scope: !6624)
!6737 = !{i64 2147579449, i64 2147579492, i64 2147579532}
!6738 = !DILocation(line: 67, column: 1, scope: !6624)
!6739 = !{i64 2147579654, i64 2147579697, i64 2147579737}
!6740 = !DILocation(line: 68, column: 1, scope: !6624)
!6741 = !{i64 2147579871, i64 2147579914, i64 2147579954}
!6742 = !DILocation(line: 69, column: 1, scope: !6624)
!6743 = !{i64 2147580085, i64 2147580128, i64 2147580168}
!6744 = !DILocation(line: 70, column: 1, scope: !6624)
!6745 = !{i64 2147580311, i64 2147580354, i64 2147580394}
!6746 = !DILocation(line: 71, column: 1, scope: !6624)
!6747 = !{i64 2147580531, i64 2147580574, i64 2147580614}
!6748 = !DILocation(line: 72, column: 1, scope: !6624)
!6749 = !{i64 2147580736, i64 2147580779, i64 2147580819}
!6750 = !DILocation(line: 73, column: 1, scope: !6624)
!6751 = !{i64 2147580968, i64 2147581011, i64 2147581051}
!6752 = !DILocation(line: 74, column: 1, scope: !6624)
!6753 = !{i64 2147581203, i64 2147581246, i64 2147581286}
!6754 = !DILocation(line: 75, column: 1, scope: !6624)
!6755 = !{i64 2147581453, i64 2147581496, i64 2147581536}
!6756 = !DILocation(line: 76, column: 1, scope: !6624)
!6757 = !{i64 2147581703, i64 2147581746, i64 2147581786}
!6758 = !DILocation(line: 77, column: 1, scope: !6624)
!6759 = !{i64 2147581941, i64 2147581984, i64 2147582024}
!6760 = !DILocation(line: 78, column: 1, scope: !6624)
!6761 = !{i64 2147582152, i64 2147582195, i64 2147582235}
!6762 = !DILocation(line: 79, column: 1, scope: !6624)
!6763 = !{i64 2147582369, i64 2147582412, i64 2147582452}
!6764 = !DILocation(line: 80, column: 1, scope: !6624)
!6765 = !{i64 2147582565, i64 2147582608, i64 2147582648}
!6766 = !DILocation(line: 81, column: 1, scope: !6624)
!6767 = !{i64 2147582767, i64 2147582810, i64 2147582850}
!6768 = !DILocation(line: 82, column: 1, scope: !6624)
!6769 = !{i64 2147582954, i64 2147582997, i64 2147583037}
!6770 = !DILocation(line: 83, column: 1, scope: !6624)
!6771 = !{i64 2147583144, i64 2147583187, i64 2147583227}
!6772 = !DILocation(line: 84, column: 1, scope: !6624)
!6773 = !{i64 2147583331, i64 2147583374, i64 2147583414}
!6774 = !DILocation(line: 85, column: 1, scope: !6624)
!6775 = !{i64 2147583527, i64 2147583570, i64 2147583610}
!6776 = !DILocation(line: 86, column: 1, scope: !6624)
!6777 = !{i64 2147583723, i64 2147583766, i64 2147583806}
!6778 = !DILocation(line: 87, column: 1, scope: !6624)
!6779 = !{i64 2147583934, i64 2147583977, i64 2147584017}
!6780 = !DILocation(line: 88, column: 1, scope: !6624)
!6781 = !{i64 2147584142, i64 2147584185, i64 2147584225}
!6782 = !DILocation(line: 89, column: 1, scope: !6624)
!6783 = !{i64 2147584326, i64 2147584369, i64 2147584409}
!6784 = !DILocation(line: 90, column: 1, scope: !6624)
!6785 = !{i64 2147584522, i64 2147584565, i64 2147584605}
!6786 = !DILocation(line: 91, column: 1, scope: !6624)
!6787 = !{i64 2147584715, i64 2147584758, i64 2147584798}
!6788 = !DILocation(line: 92, column: 1, scope: !6624)
!6789 = !{i64 2147584962, i64 2147585005, i64 2147585045}
!6790 = !DILocation(line: 93, column: 1, scope: !6624)
!6791 = !{i64 2147585185, i64 2147585228, i64 2147585268}
!6792 = !DILocation(line: 94, column: 1, scope: !6624)
!6793 = !{i64 2147585390, i64 2147585433, i64 2147585473}
!6794 = !DILocation(line: 95, column: 1, scope: !6624)
!6795 = !{i64 2147589644, i64 2147589687, i64 2147589727}
!6796 = !DILocation(line: 96, column: 1, scope: !6624)
!6797 = !{i64 2147589810, i64 2147589853, i64 2147589893}
!6798 = !DILocation(line: 97, column: 1, scope: !6624)
!6799 = !{i64 2147589994, i64 2147590037, i64 2147590077}
!6800 = !DILocation(line: 98, column: 1, scope: !6624)
!6801 = !{i64 2147590184, i64 2147590227, i64 2147590267}
!6802 = !DILocation(line: 99, column: 1, scope: !6624)
!6803 = !{i64 2147590368, i64 2147590411, i64 2147590451}
!6804 = !DILocation(line: 100, column: 1, scope: !6624)
!6805 = !{i64 2147590582, i64 2147590625, i64 2147590665}
!6806 = !DILocation(line: 101, column: 1, scope: !6624)
!6807 = !{i64 2147590793, i64 2147590836, i64 2147590876}
!6808 = !DILocation(line: 102, column: 1, scope: !6624)
!6809 = !{i64 2147591016, i64 2147591059, i64 2147591099}
!6810 = !DILocation(line: 103, column: 1, scope: !6624)
!6811 = !{i64 2147591200, i64 2147591243, i64 2147591283}
!6812 = !DILocation(line: 104, column: 1, scope: !6624)
!6813 = !{i64 2147591366, i64 2147591409, i64 2147591449}
!6814 = !DILocation(line: 105, column: 1, scope: !6624)
!6815 = !{i64 2147591547, i64 2147591590, i64 2147591630}
!6816 = !DILocation(line: 106, column: 1, scope: !6624)
!6817 = !{i64 2147591740, i64 2147591783, i64 2147591823}
!6818 = !DILocation(line: 107, column: 1, scope: !6624)
!6819 = !{i64 2147591966, i64 2147592009, i64 2147592049}
!6820 = !DILocation(line: 108, column: 1, scope: !6624)
!6821 = !{i64 2147592180, i64 2147592223, i64 2147592263}
!6822 = !DILocation(line: 109, column: 1, scope: !6624)
!6823 = !{i64 2147592406, i64 2147592449, i64 2147592489}
!6824 = !DILocation(line: 110, column: 1, scope: !6624)
!6825 = !{i64 2147592623, i64 2147592666, i64 2147592706}
!6826 = !DILocation(line: 111, column: 1, scope: !6624)
!6827 = !{i64 2147592900, i64 2147592943, i64 2147592983}
!6828 = !DILocation(line: 112, column: 1, scope: !6624)
!6829 = !{i64 2147593126, i64 2147593169, i64 2147593209}
!6830 = !DILocation(line: 113, column: 1, scope: !6624)
!6831 = !{i64 2147593334, i64 2147593377, i64 2147593417}
!6832 = !DILocation(line: 114, column: 1, scope: !6624)
!6833 = !{i64 2147593530, i64 2147593573, i64 2147593613}
!6834 = !DILocation(line: 115, column: 1, scope: !6624)
!6835 = !{i64 2147593795, i64 2147593838, i64 2147593878}
!6836 = !DILocation(line: 116, column: 1, scope: !6624)
!6837 = !{i64 2147594009, i64 2147594052, i64 2147594092}
!6838 = !DILocation(line: 117, column: 1, scope: !6624)
!6839 = !{i64 2147594172, i64 2147594215, i64 2147594255}
!6840 = !DILocation(line: 118, column: 1, scope: !6624)
!6841 = !{i64 2147594359, i64 2147594402, i64 2147594442}
!6842 = !DILocation(line: 119, column: 1, scope: !6624)
!6843 = !{i64 2147594567, i64 2147594610, i64 2147594650}
!6844 = !DILocation(line: 120, column: 1, scope: !6624)
!6845 = !{i64 2147594763, i64 2147594806, i64 2147594846}
!6846 = !DILocation(line: 121, column: 1, scope: !6624)
!6847 = !{i64 2147594956, i64 2147594999, i64 2147595039}
!6848 = !DILocation(line: 122, column: 1, scope: !6624)
!6849 = !{i64 2147595138, i64 2147595181, i64 2147595221}
!6850 = !DILocation(line: 123, column: 1, scope: !6624)
!6851 = !{i64 2147595352, i64 2147595395, i64 2147595435}
!6852 = !DILocation(line: 124, column: 1, scope: !6624)
!6853 = !{i64 2147595551, i64 2147595594, i64 2147595634}
!6854 = !DILocation(line: 125, column: 1, scope: !6624)
!6855 = !{i64 2147595786, i64 2147595829, i64 2147595869}
!6856 = !DILocation(line: 126, column: 1, scope: !6624)
!6857 = !{i64 2147596036, i64 2147596079, i64 2147596119}
!6858 = !DILocation(line: 127, column: 1, scope: !6624)
!6859 = !{i64 2147596238, i64 2147596281, i64 2147596321}
!6860 = !DILocation(line: 128, column: 1, scope: !6624)
!6861 = !{i64 2147596461, i64 2147596504, i64 2147596544}
!6862 = !DILocation(line: 129, column: 1, scope: !6624)
!6863 = !{i64 2147596675, i64 2147596718, i64 2147596758}
!6864 = !DILocation(line: 130, column: 1, scope: !6624)
!6865 = !{i64 2147596919, i64 2147596962, i64 2147597002}
!6866 = !DILocation(line: 131, column: 1, scope: !6624)
!6867 = !{i64 2147597148, i64 2147597191, i64 2147597231}
!6868 = !DILocation(line: 132, column: 1, scope: !6624)
!6869 = !{i64 2147597374, i64 2147597417, i64 2147597457}
!6870 = !DILocation(line: 133, column: 1, scope: !6624)
!6871 = !{i64 2147597633, i64 2147597676, i64 2147597716}
!6872 = !DILocation(line: 134, column: 1, scope: !6624)
!6873 = !{i64 2147597853, i64 2147597896, i64 2147597936}
!6874 = !DILocation(line: 135, column: 1, scope: !6624)
!6875 = !{i64 2147598085, i64 2147598128, i64 2147598168}
!6876 = !DILocation(line: 136, column: 1, scope: !6624)
!6877 = !{i64 2147598326, i64 2147598369, i64 2147598409}
!6878 = !DILocation(line: 137, column: 1, scope: !6624)
!6879 = !{i64 2147602628, i64 2147602671, i64 2147602711}
!6880 = !DILocation(line: 138, column: 1, scope: !6624)
!6881 = !{i64 2147602851, i64 2147602894, i64 2147602934}
!6882 = !DILocation(line: 139, column: 1, scope: !6624)
!6883 = !{i64 2147603068, i64 2147603111, i64 2147603151}
!6884 = !DILocation(line: 140, column: 1, scope: !6624)
!6885 = !{i64 2147603309, i64 2147603352, i64 2147603392}
!6886 = !DILocation(line: 141, column: 1, scope: !6624)
!6887 = !{i64 2147603496, i64 2147603539, i64 2147603579}
!6888 = !DILocation(line: 142, column: 1, scope: !6624)
!6889 = !{i64 2147603725, i64 2147603768, i64 2147603808}
!6890 = !DILocation(line: 143, column: 1, scope: !6624)
!6891 = !{i64 2147603939, i64 2147603982, i64 2147604022}
!6892 = !DILocation(line: 144, column: 1, scope: !6624)
!6893 = !{i64 2147604141, i64 2147604184, i64 2147604224}
!6894 = !DILocation(line: 145, column: 1, scope: !6624)
!6895 = !{i64 2147604337, i64 2147604380, i64 2147604420}
!6896 = !DILocation(line: 146, column: 1, scope: !6624)
!6897 = !{i64 2147604549, i64 2147604592, i64 2147604632}
!6898 = !DILocation(line: 147, column: 1, scope: !6624)
!6899 = !{i64 2147604770, i64 2147604813, i64 2147604853}
!6900 = !DILocation(line: 148, column: 1, scope: !6624)
!6901 = !{i64 2147604984, i64 2147605027, i64 2147605067}
!6902 = !DILocation(line: 149, column: 1, scope: !6624)
!6903 = !{i64 2147605174, i64 2147605217, i64 2147605257}
!6904 = !DILocation(line: 150, column: 1, scope: !6624)
!6905 = !{i64 2147605373, i64 2147605416, i64 2147605456}
!6906 = !DILocation(line: 151, column: 1, scope: !6624)
!6907 = !{i64 2147605578, i64 2147605621, i64 2147605661}
!6908 = !DILocation(line: 152, column: 1, scope: !6624)
!6909 = !{i64 2147605798, i64 2147605841, i64 2147605881}
!6910 = !DILocation(line: 153, column: 1, scope: !6624)
!6911 = !{i64 2147605999, i64 2147606042, i64 2147606082}
!6912 = !DILocation(line: 154, column: 1, scope: !6624)
!6913 = !{i64 2147606198, i64 2147606241, i64 2147606281}
!6914 = !DILocation(line: 155, column: 1, scope: !6624)
!6915 = !{i64 2147606367, i64 2147606410, i64 2147606450}
!6916 = !DILocation(line: 156, column: 1, scope: !6624)
!6917 = !{i64 2147606551, i64 2147606594, i64 2147606634}
!6918 = !DILocation(line: 157, column: 1, scope: !6624)
!6919 = !{i64 2147606735, i64 2147606778, i64 2147606818}
!6920 = !DILocation(line: 158, column: 1, scope: !6624)
!6921 = !{i64 2147606922, i64 2147606965, i64 2147607005}
!6922 = !DILocation(line: 159, column: 1, scope: !6624)
!6923 = !{i64 2147607106, i64 2147607149, i64 2147607189}
!6924 = !DILocation(line: 160, column: 1, scope: !6624)
!6925 = !{i64 2147607293, i64 2147607336, i64 2147607376}
!6926 = !DILocation(line: 161, column: 1, scope: !6624)
!6927 = !{i64 2147607505, i64 2147607548, i64 2147607588}
!6928 = !DILocation(line: 162, column: 1, scope: !6624)
!6929 = !{i64 2147607743, i64 2147607786, i64 2147607826}
!6930 = !DILocation(line: 163, column: 1, scope: !6624)
!6931 = !{i64 2147607973, i64 2147608016, i64 2147608056}
!6932 = !DILocation(line: 164, column: 1, scope: !6624)
!6933 = !{i64 2147608202, i64 2147608245, i64 2147608285}
!6934 = !DILocation(line: 165, column: 1, scope: !6624)
!6935 = !{i64 2147608389, i64 2147608432, i64 2147608472}
!6936 = !DILocation(line: 166, column: 1, scope: !6624)
!6937 = !{i64 2147608585, i64 2147608628, i64 2147608668}
!6938 = !DILocation(line: 167, column: 1, scope: !6624)
!6939 = !{i64 2147608793, i64 2147608836, i64 2147608876}
!6940 = !DILocation(line: 168, column: 1, scope: !6624)
!6941 = !{i64 2147609005, i64 2147609048, i64 2147609088}
!6942 = !DILocation(line: 169, column: 1, scope: !6624)
!6943 = !{i64 2147609204, i64 2147609247, i64 2147609287}
!6944 = !DILocation(line: 170, column: 1, scope: !6624)
!6945 = !{i64 2147609442, i64 2147609485, i64 2147609525}
!6946 = !DILocation(line: 171, column: 1, scope: !6624)
!6947 = !{i64 2147609638, i64 2147609681, i64 2147609721}
!6948 = !DILocation(line: 172, column: 1, scope: !6624)
!6949 = !{i64 2147609840, i64 2147609883, i64 2147609923}
!6950 = !DILocation(line: 173, column: 1, scope: !6624)
!6951 = !{i64 2147610033, i64 2147610076, i64 2147610116}
!6952 = !DILocation(line: 174, column: 1, scope: !6624)
!6953 = !{i64 2147610267, i64 2147610310, i64 2147610350}
!6954 = !DILocation(line: 175, column: 1, scope: !6624)
!6955 = !{i64 2147610430, i64 2147610473, i64 2147610513}
!6956 = !DILocation(line: 176, column: 1, scope: !6624)
!6957 = !{i64 2147610669, i64 2147610712, i64 2147610752}
!6958 = !DILocation(line: 177, column: 1, scope: !6624)
!6959 = !{i64 2147610908, i64 2147610951, i64 2147610991}
!6960 = !DILocation(line: 178, column: 1, scope: !6624)
!6961 = !{i64 2147611144, i64 2147611187, i64 2147611227}
!6962 = !DILocation(line: 179, column: 1, scope: !6624)
!6963 = !{i64 2147611374, i64 2147611417, i64 2147611457}
!6964 = !DILocation(line: 180, column: 1, scope: !6624)
!6965 = !{i64 2147611561, i64 2147611604, i64 2147611644}
!6966 = !DILocation(line: 181, column: 1, scope: !6624)
!6967 = !{i64 2147615821, i64 2147615864, i64 2147615904}
!6968 = !DILocation(line: 182, column: 1, scope: !6624)
!6969 = !{i64 2147616092, i64 2147616135, i64 2147616175}
!6970 = !DILocation(line: 183, column: 1, scope: !6624)
!6971 = !{i64 2147616267, i64 2147616310, i64 2147616350}
!6972 = !DILocation(line: 184, column: 1, scope: !6624)
!6973 = !{i64 2147616501, i64 2147616544, i64 2147616584}
!6974 = !DILocation(line: 185, column: 1, scope: !6624)
!6975 = !{i64 2147616709, i64 2147616752, i64 2147616792}
!6976 = !DILocation(line: 186, column: 1, scope: !6624)
!6977 = !{i64 2147616927, i64 2147616970, i64 2147617010}
!6978 = !DILocation(line: 187, column: 1, scope: !6624)
!6979 = !{i64 2147617117, i64 2147617160, i64 2147617200}
!6980 = !DILocation(line: 188, column: 1, scope: !6624)
!6981 = !{i64 2147617349, i64 2147617392, i64 2147617432}
!6982 = !DILocation(line: 189, column: 1, scope: !6624)
!6983 = !{i64 2147617569, i64 2147617612, i64 2147617652}
!6984 = !DILocation(line: 190, column: 1, scope: !6624)
!6985 = !{i64 2147617765, i64 2147617808, i64 2147617848}
!6986 = !DILocation(line: 191, column: 1, scope: !6624)
!6987 = !{i64 2147617971, i64 2147618014, i64 2147618054}
!6988 = !DILocation(line: 192, column: 1, scope: !6624)
!6989 = !{i64 2147618176, i64 2147618219, i64 2147618259}
!6990 = !DILocation(line: 193, column: 1, scope: !6624)
!6991 = !{i64 2147618402, i64 2147618445, i64 2147618485}
!6992 = !DILocation(line: 194, column: 1, scope: !6624)
!6993 = !{i64 2147618610, i64 2147618653, i64 2147618693}
!6994 = !DILocation(line: 195, column: 1, scope: !6624)
!6995 = !{i64 2147618806, i64 2147618849, i64 2147618889}
!6996 = !DILocation(line: 196, column: 1, scope: !6624)
!6997 = !{i64 2147619038, i64 2147619081, i64 2147619121}
!6998 = !DILocation(line: 197, column: 1, scope: !6624)
!6999 = !{i64 2147619216, i64 2147619259, i64 2147619299}
!7000 = !DILocation(line: 198, column: 1, scope: !6624)
!7001 = !{i64 2147619425, i64 2147619468, i64 2147619508}
!7002 = !DILocation(line: 199, column: 1, scope: !6624)
!7003 = !{i64 2147619633, i64 2147619676, i64 2147619716}
!7004 = !DILocation(line: 200, column: 1, scope: !6624)
!7005 = !{i64 2147619829, i64 2147619872, i64 2147619912}
!7006 = !DILocation(line: 201, column: 1, scope: !6624)
!7007 = !{i64 2147620061, i64 2147620104, i64 2147620144}
!7008 = !DILocation(line: 202, column: 1, scope: !6624)
!7009 = !{i64 2147620263, i64 2147620306, i64 2147620346}
!7010 = !DILocation(line: 203, column: 1, scope: !6624)
!7011 = !{i64 2147620513, i64 2147620556, i64 2147620596}
!7012 = !DILocation(line: 204, column: 1, scope: !6624)
!7013 = !{i64 2147620751, i64 2147620794, i64 2147620834}
!7014 = !DILocation(line: 205, column: 1, scope: !6624)
!7015 = !{i64 2147620959, i64 2147621002, i64 2147621042}
!7016 = !DILocation(line: 206, column: 1, scope: !6624)
!7017 = !{i64 2147621155, i64 2147621198, i64 2147621238}
!7018 = !DILocation(line: 207, column: 1, scope: !6624)
!7019 = !{i64 2147621333, i64 2147621376, i64 2147621416}
!7020 = !DILocation(line: 208, column: 1, scope: !6624)
!7021 = !{i64 2147621550, i64 2147621593, i64 2147621633}
!7022 = !DILocation(line: 209, column: 1, scope: !6624)
!7023 = !{i64 2147621755, i64 2147621798, i64 2147621838}
!7024 = !DILocation(line: 210, column: 1, scope: !6624)
!7025 = !{i64 2147621990, i64 2147622033, i64 2147622073}
!7026 = !DILocation(line: 211, column: 1, scope: !6624)
!7027 = !{i64 2147622213, i64 2147622256, i64 2147622296}
!7028 = !DILocation(line: 212, column: 1, scope: !6624)
!7029 = !{i64 2147622430, i64 2147622473, i64 2147622513}
!7030 = !DILocation(line: 213, column: 1, scope: !6624)
!7031 = !{i64 2147622635, i64 2147622678, i64 2147622718}
!7032 = !DILocation(line: 214, column: 1, scope: !6624)
!7033 = !{i64 2147622843, i64 2147622886, i64 2147622926}
!7034 = !DILocation(line: 215, column: 1, scope: !6624)
!7035 = !{i64 2147623039, i64 2147623082, i64 2147623122}
!7036 = !DILocation(line: 216, column: 1, scope: !6624)
!7037 = !{i64 2147623253, i64 2147623296, i64 2147623336}
!7038 = !DILocation(line: 217, column: 1, scope: !6624)
!7039 = !{i64 2147623461, i64 2147623504, i64 2147623544}
!7040 = !DILocation(line: 218, column: 1, scope: !6624)
!7041 = !{i64 2147623651, i64 2147623694, i64 2147623734}
!7042 = !DILocation(line: 219, column: 1, scope: !6624)
!7043 = !{i64 2147623865, i64 2147623908, i64 2147623948}
!7044 = !DILocation(line: 220, column: 1, scope: !6624)
!7045 = !{i64 2147624127, i64 2147624170, i64 2147624210}
!7046 = !DILocation(line: 221, column: 1, scope: !6624)
!7047 = !{i64 2147624338, i64 2147624381, i64 2147624421}
!7048 = !DILocation(line: 222, column: 1, scope: !6624)
!7049 = !{i64 2147624582, i64 2147624625, i64 2147624665}
!7050 = !DILocation(line: 223, column: 1, scope: !6624)
!7051 = !{i64 2147628854, i64 2147628897, i64 2147628937}
!7052 = !DILocation(line: 224, column: 1, scope: !6624)
!7053 = !{i64 2147629083, i64 2147629126, i64 2147629166}
!7054 = !DILocation(line: 225, column: 1, scope: !6624)
!7055 = !{i64 2147629348, i64 2147629391, i64 2147629431}
!7056 = !DILocation(line: 226, column: 1, scope: !6624)
!7057 = !{i64 2147629553, i64 2147629596, i64 2147629636}
!7058 = !DILocation(line: 227, column: 1, scope: !6624)
!7059 = !{i64 2147629749, i64 2147629792, i64 2147629832}
!7060 = !DILocation(line: 228, column: 1, scope: !6624)
!7061 = !{i64 2147629972, i64 2147630015, i64 2147630055}
!7062 = !DILocation(line: 229, column: 1, scope: !6624)
!7063 = !{i64 2147630135, i64 2147630178, i64 2147630218}
!7064 = !DILocation(line: 230, column: 1, scope: !6624)
!7065 = !{i64 2147630340, i64 2147630383, i64 2147630423}
!7066 = !DILocation(line: 231, column: 1, scope: !6624)
!7067 = !{i64 2147630560, i64 2147630603, i64 2147630643}
!7068 = !DILocation(line: 232, column: 1, scope: !6624)
!7069 = !{i64 2147630774, i64 2147630817, i64 2147630857}
!7070 = !DILocation(line: 233, column: 1, scope: !6624)
!7071 = !{i64 2147631018, i64 2147631061, i64 2147631101}
!7072 = !DILocation(line: 234, column: 1, scope: !6624)
!7073 = !{i64 2147631250, i64 2147631293, i64 2147631333}
!7074 = !DILocation(line: 235, column: 1, scope: !6624)
!7075 = !{i64 2147631464, i64 2147631507, i64 2147631547}
!7076 = !DILocation(line: 236, column: 1, scope: !6624)
!7077 = !{i64 2147631675, i64 2147631718, i64 2147631758}
!7078 = !DILocation(line: 237, column: 1, scope: !6624)
!7079 = !{i64 2147631868, i64 2147631911, i64 2147631951}
!7080 = !DILocation(line: 238, column: 1, scope: !6624)
!7081 = !{i64 2147632067, i64 2147632110, i64 2147632150}
!7082 = !DILocation(line: 239, column: 1, scope: !6624)
!7083 = !{i64 2147632239, i64 2147632282, i64 2147632322}
!7084 = !DILocation(line: 240, column: 1, scope: !6624)
!7085 = !{i64 2147632432, i64 2147632475, i64 2147632515}
!7086 = !DILocation(line: 241, column: 1, scope: !6624)
!7087 = !{i64 2147632628, i64 2147632671, i64 2147632711}
!7088 = !DILocation(line: 242, column: 1, scope: !6624)
!7089 = !{i64 2147632791, i64 2147632834, i64 2147632874}
!7090 = !DILocation(line: 243, column: 1, scope: !6624)
!7091 = !{i64 2147632993, i64 2147633036, i64 2147633076}
!7092 = !DILocation(line: 244, column: 1, scope: !6624)
!7093 = !{i64 2147633198, i64 2147633241, i64 2147633281}
!7094 = !DILocation(line: 245, column: 1, scope: !6624)
!7095 = !{i64 2147633406, i64 2147633449, i64 2147633489}
!7096 = !DILocation(line: 246, column: 1, scope: !6624)
!7097 = !{i64 2147633599, i64 2147633642, i64 2147633682}
!7098 = !DILocation(line: 247, column: 1, scope: !6624)
!7099 = !{i64 2147633786, i64 2147633829, i64 2147633869}
!7100 = !DILocation(line: 248, column: 1, scope: !6624)
!7101 = !{i64 2147634013, i64 2147634056, i64 2147634096}
!7102 = !DILocation(line: 249, column: 1, scope: !6624)
!7103 = !{i64 2147634179, i64 2147634222, i64 2147634262}
!7104 = !DILocation(line: 250, column: 1, scope: !6624)
!7105 = !{i64 2147634417, i64 2147634460, i64 2147634500}
!7106 = !DILocation(line: 251, column: 1, scope: !6624)
!7107 = !{i64 2147634622, i64 2147634665, i64 2147634705}
!7108 = !DILocation(line: 252, column: 1, scope: !6624)
!7109 = !{i64 2147634872, i64 2147634915, i64 2147634955}
!7110 = !DILocation(line: 253, column: 1, scope: !6624)
!7111 = !{i64 2147635080, i64 2147635123, i64 2147635163}
!7112 = !DILocation(line: 254, column: 1, scope: !6624)
!7113 = !{i64 2147635276, i64 2147635319, i64 2147635359}
!7114 = !DILocation(line: 255, column: 1, scope: !6624)
!7115 = !{i64 2147635493, i64 2147635536, i64 2147635576}
!7116 = !DILocation(line: 256, column: 1, scope: !6624)
!7117 = !{i64 2147635785, i64 2147635828, i64 2147635868}
!7118 = !DILocation(line: 257, column: 1, scope: !6624)
!7119 = !{i64 2147636017, i64 2147636060, i64 2147636100}
!7120 = !DILocation(line: 258, column: 1, scope: !6624)
!7121 = !{i64 2147636234, i64 2147636277, i64 2147636317}
!7122 = !DILocation(line: 259, column: 1, scope: !6624)
!7123 = !{i64 2147636441, i64 2147636484, i64 2147636524}
!7124 = !DILocation(line: 260, column: 1, scope: !6624)
!7125 = !{i64 2147636642, i64 2147636685, i64 2147636725}
!7126 = !DILocation(line: 261, column: 1, scope: !6624)
!7127 = !{i64 2147636874, i64 2147636917, i64 2147636957}
!7128 = !DILocation(line: 262, column: 1, scope: !6624)
!7129 = !{i64 2147637082, i64 2147637125, i64 2147637165}
!7130 = !DILocation(line: 263, column: 1, scope: !6624)
!7131 = !{i64 2147637272, i64 2147637315, i64 2147637355}
!7132 = !DILocation(line: 264, column: 1, scope: !6624)
!7133 = !{i64 2147637498, i64 2147637541, i64 2147637581}
!7134 = !DILocation(line: 265, column: 1, scope: !6624)
!7135 = !{i64 2147637687, i64 2147637730, i64 2147637770}
!7136 = !DILocation(line: 266, column: 1, scope: !6624)
!7137 = !{i64 2147642019, i64 2147642062, i64 2147642102}
!7138 = !DILocation(line: 267, column: 1, scope: !6624)
!7139 = !{i64 2147642239, i64 2147642282, i64 2147642322}
!7140 = !DILocation(line: 268, column: 1, scope: !6624)
!7141 = !{i64 2147642492, i64 2147642535, i64 2147642575}
!7142 = !DILocation(line: 269, column: 1, scope: !6624)
!7143 = !{i64 2147642700, i64 2147642743, i64 2147642783}
!7144 = !DILocation(line: 270, column: 1, scope: !6624)
!7145 = !{i64 2147642932, i64 2147642975, i64 2147643015}
!7146 = !DILocation(line: 271, column: 1, scope: !6624)
!7147 = !{i64 2147643143, i64 2147643186, i64 2147643226}
!7148 = !DILocation(line: 272, column: 1, scope: !6624)
!7149 = !{i64 2147643333, i64 2147643376, i64 2147643416}
!7150 = !DILocation(line: 273, column: 1, scope: !6624)
!7151 = !{i64 2147643547, i64 2147643590, i64 2147643630}
!7152 = !DILocation(line: 274, column: 1, scope: !6624)
!7153 = !{i64 2147643746, i64 2147643789, i64 2147643829}
!7154 = !DILocation(line: 275, column: 1, scope: !6624)
!7155 = !{i64 2147643933, i64 2147643976, i64 2147644016}
!7156 = !DILocation(line: 276, column: 1, scope: !6624)
!7157 = !{i64 2147644141, i64 2147644184, i64 2147644224}
!7158 = !DILocation(line: 277, column: 1, scope: !6624)
!7159 = !{i64 2147644370, i64 2147644413, i64 2147644453}
!7160 = !DILocation(line: 278, column: 1, scope: !6624)
!7161 = !{i64 2147644572, i64 2147644615, i64 2147644655}
!7162 = !DILocation(line: 279, column: 1, scope: !6624)
!7163 = !{i64 2147644771, i64 2147644814, i64 2147644854}
!7164 = !DILocation(line: 280, column: 1, scope: !6624)
!7165 = !{i64 2147644988, i64 2147645031, i64 2147645071}
!7166 = !DILocation(line: 282, column: 1, scope: !6624)
!7167 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !1297, file: !1297, line: 225, type: !1304, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7168)
!7168 = !{!7169}
!7169 = !DILocalVariable(name: "arg", arg: 1, scope: !7167, file: !1297, line: 225, type: !1306)
!7170 = !DILocation(line: 0, scope: !7167)
!7171 = !DILocation(line: 230, column: 2, scope: !7167)
!7172 = !DILocation(line: 233, column: 2, scope: !7167)
!7173 = !DILocation(line: 236, column: 2, scope: !7167)
!7174 = !DILocation(line: 255, column: 2, scope: !7167)
!7175 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !1297, file: !1297, line: 50, type: !416, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !247)
!7176 = !DILocation(line: 53, column: 2, scope: !7175)
!7177 = !DILocation(line: 54, column: 1, scope: !7175)
!7178 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !1297, file: !1297, line: 14, type: !416, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !247)
!7179 = !DILocation(line: 23, column: 2, scope: !7178)
!7180 = !DILocation(line: 24, column: 2, scope: !7178)
!7181 = !DILocation(line: 25, column: 2, scope: !7178)
!7182 = !DILocation(line: 27, column: 2, scope: !7178)
!7183 = !DILocation(line: 31, column: 2, scope: !7178)
!7184 = !DILocation(line: 33, column: 2, scope: !7178)
!7185 = !DILocation(line: 36, column: 2, scope: !7178)
!7186 = !DILocation(line: 37, column: 2, scope: !7178)
!7187 = !DILocation(line: 40, column: 2, scope: !7178)
!7188 = !DILocation(line: 41, column: 2, scope: !7178)
!7189 = !DILocation(line: 42, column: 2, scope: !7178)
!7190 = !DILocation(line: 43, column: 2, scope: !7178)
!7191 = !DILocation(line: 44, column: 2, scope: !7178)
!7192 = !DILocation(line: 47, column: 2, scope: !7178)
!7193 = !DILocation(line: 48, column: 1, scope: !7178)
!7194 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !1297, file: !1297, line: 57, type: !416, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !247)
!7195 = !DILocation(line: 61, column: 2, scope: !7194)
!7196 = !DILocation(line: 63, column: 2, scope: !7194)
!7197 = !DILocation(line: 80, column: 1, scope: !7194)
!7198 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !7199, file: !7199, line: 164, type: !7200, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7202)
!7199 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7200 = !DISubroutineType(types: !7201)
!7201 = !{null, !1243, !158, !128, !131, !131}
!7202 = !{!7203, !7204, !7205, !7206, !7207}
!7203 = !DILocalVariable(name: "base", arg: 1, scope: !7198, file: !7199, line: 164, type: !1243)
!7204 = !DILocalVariable(name: "pdap", arg: 2, scope: !7198, file: !7199, line: 164, type: !158)
!7205 = !DILocalVariable(name: "perm", arg: 3, scope: !7198, file: !7199, line: 164, type: !128)
!7206 = !DILocalVariable(name: "sreq", arg: 4, scope: !7198, file: !7199, line: 164, type: !131)
!7207 = !DILocalVariable(name: "lock", arg: 5, scope: !7198, file: !7199, line: 164, type: !131)
!7208 = !DILocation(line: 0, scope: !7198)
!7209 = !DILocation(line: 166, column: 24, scope: !7198)
!7210 = !DILocation(line: 166, column: 5, scope: !7198)
!7211 = !DILocation(line: 166, column: 22, scope: !7198)
!7212 = !DILocation(line: 167, column: 1, scope: !7198)
!7213 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !889, file: !889, line: 454, type: !7214, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7216)
!7214 = !DISubroutineType(types: !7215)
!7215 = !{null, !1171, !158, !158}
!7216 = !{!7217, !7218, !7219}
!7217 = !DILocalVariable(name: "base", arg: 1, scope: !7213, file: !889, line: 454, type: !1171)
!7218 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !7213, file: !889, line: 454, type: !158)
!7219 = !DILocalVariable(name: "control", arg: 3, scope: !7213, file: !889, line: 454, type: !158)
!7220 = !DILocation(line: 0, scope: !7213)
!7221 = !DILocation(line: 456, column: 5, scope: !7213)
!7222 = !DILocation(line: 456, column: 22, scope: !7213)
!7223 = !DILocation(line: 457, column: 1, scope: !7213)
!7224 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !889, file: !889, line: 379, type: !7225, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7227)
!7225 = !DISubroutineType(types: !7226)
!7226 = !{null, !1171, !158}
!7227 = !{!7228, !7229}
!7228 = !DILocalVariable(name: "base", arg: 1, scope: !7224, file: !889, line: 379, type: !1171)
!7229 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !7224, file: !889, line: 379, type: !158)
!7230 = !DILocation(line: 0, scope: !7224)
!7231 = !DILocation(line: 381, column: 26, scope: !7224)
!7232 = !DILocation(line: 382, column: 1, scope: !7224)
!7233 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !7234, file: !7234, line: 136, type: !7235, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7237)
!7234 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7235 = !DISubroutineType(types: !7236)
!7236 = !{null, !1284}
!7237 = !{!7238}
!7238 = !DILocalVariable(name: "base", arg: 1, scope: !7233, file: !7234, line: 136, type: !1284)
!7239 = !DILocation(line: 0, scope: !7233)
!7240 = !DILocation(line: 138, column: 16, scope: !7233)
!7241 = !DILocation(line: 139, column: 1, scope: !7233)
!7242 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !7199, file: !7199, line: 136, type: !7243, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7245)
!7243 = !DISubroutineType(types: !7244)
!7244 = !{null, !1243, !158, !158, !131}
!7245 = !{!7246, !7247, !7248, !7249}
!7246 = !DILocalVariable(name: "base", arg: 1, scope: !7242, file: !7199, line: 136, type: !1243)
!7247 = !DILocalVariable(name: "mda", arg: 2, scope: !7242, file: !7199, line: 136, type: !158)
!7248 = !DILocalVariable(name: "domainId", arg: 3, scope: !7242, file: !7199, line: 136, type: !158)
!7249 = !DILocalVariable(name: "lock", arg: 4, scope: !7242, file: !7199, line: 136, type: !131)
!7250 = !DILocation(line: 0, scope: !7242)
!7251 = !DILocation(line: 140, column: 20, scope: !7242)
!7252 = !DILocation(line: 141, column: 1, scope: !7242)
!7253 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7254, file: !7254, line: 14, type: !4873, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !7255)
!7254 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7255 = !{!7256, !7257}
!7256 = !DILocalVariable(name: "fmt", arg: 1, scope: !7253, file: !7254, line: 14, type: !118)
!7257 = !DILocalVariable(name: "ap", scope: !7253, file: !7254, line: 16, type: !7258)
!7258 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3942, line: 99, baseType: !7259)
!7259 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3942, line: 40, baseType: !7260)
!7260 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7254, baseType: !7261)
!7261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7262)
!7262 = !{!7263}
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7261, file: !7254, line: 16, baseType: !133, size: 32)
!7264 = !DILocation(line: 0, scope: !7253)
!7265 = !DILocation(line: 16, column: 2, scope: !7253)
!7266 = !DILocation(line: 16, column: 10, scope: !7253)
!7267 = !DILocation(line: 18, column: 2, scope: !7253)
!7268 = !DILocation(line: 19, column: 2, scope: !7253)
!7269 = !DILocation(line: 20, column: 2, scope: !7253)
!7270 = !DILocation(line: 21, column: 1, scope: !7253)
!7271 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7254, file: !7254, line: 23, type: !7272, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !7274)
!7272 = !DISubroutineType(types: !7273)
!7273 = !{null, !118, !7258}
!7274 = !{!7275, !7276}
!7275 = !DILocalVariable(name: "fmt", arg: 1, scope: !7271, file: !7254, line: 23, type: !118)
!7276 = !DILocalVariable(name: "ap", arg: 2, scope: !7271, file: !7254, line: 23, type: !7258)
!7277 = !DILocation(line: 0, scope: !7271)
!7278 = !DILocation(line: 25, column: 2, scope: !7271)
!7279 = !DILocation(line: 26, column: 1, scope: !7271)
!7280 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7254, file: !7254, line: 52, type: !7281, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !7283)
!7281 = !DISubroutineType(types: !7282)
!7282 = !{null, !111, !13, !249}
!7283 = !{!7284, !7285, !7286, !7287}
!7284 = !DILocalVariable(name: "level", arg: 1, scope: !7280, file: !7254, line: 52, type: !111)
!7285 = !DILocalVariable(name: "data", arg: 2, scope: !7280, file: !7254, line: 52, type: !13)
!7286 = !DILocalVariable(name: "size", arg: 3, scope: !7280, file: !7254, line: 52, type: !249)
!7287 = !DILocalVariable(name: "data_buffer", scope: !7280, file: !7254, line: 54, type: !118)
!7288 = !DILocation(line: 0, scope: !7280)
!7289 = !DILocation(line: 55, column: 14, scope: !7280)
!7290 = !DILocation(line: 55, column: 2, scope: !7280)
!7291 = !DILocation(line: 56, column: 3, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7280, file: !7254, line: 55, column: 20)
!7293 = !DILocation(line: 57, column: 3, scope: !7292)
!7294 = !DILocation(line: 59, column: 7, scope: !7292)
!7295 = distinct !{!7295, !7290, !7296}
!7296 = !DILocation(line: 65, column: 2, scope: !7280)
!7297 = !DILocation(line: 66, column: 1, scope: !7280)
!7298 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7299, file: !7299, line: 175, type: !7300, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !7302)
!7299 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7300 = !DISubroutineType(types: !7301)
!7301 = !{!120, !111}
!7302 = !{!7303}
!7303 = !DILocalVariable(name: "level", arg: 1, scope: !7298, file: !7299, line: 175, type: !111)
!7304 = !DILocation(line: 0, scope: !7298)
!7305 = !DILocation(line: 177, column: 2, scope: !7298)
!7306 = !DILocation(line: 189, column: 1, scope: !7298)
!7307 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7254, file: !7254, line: 28, type: !7308, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !7310)
!7308 = !DISubroutineType(types: !7309)
!7309 = !{null, !118, !249}
!7310 = !{!7311, !7312, !7313, !7315, !7317}
!7311 = !DILocalVariable(name: "data", arg: 1, scope: !7307, file: !7254, line: 28, type: !118)
!7312 = !DILocalVariable(name: "length", arg: 2, scope: !7307, file: !7254, line: 28, type: !249)
!7313 = !DILocalVariable(name: "i", scope: !7314, file: !7254, line: 30, type: !249)
!7314 = distinct !DILexicalBlock(scope: !7307, file: !7254, line: 30, column: 2)
!7315 = !DILocalVariable(name: "i", scope: !7316, file: !7254, line: 40, type: !249)
!7316 = distinct !DILexicalBlock(scope: !7307, file: !7254, line: 40, column: 2)
!7317 = !DILocalVariable(name: "c", scope: !7318, file: !7254, line: 42, type: !129)
!7318 = distinct !DILexicalBlock(scope: !7319, file: !7254, line: 41, column: 19)
!7319 = distinct !DILexicalBlock(scope: !7320, file: !7254, line: 41, column: 7)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !7254, line: 40, column: 54)
!7321 = distinct !DILexicalBlock(scope: !7316, file: !7254, line: 40, column: 2)
!7322 = !DILocation(line: 0, scope: !7307)
!7323 = !DILocation(line: 0, scope: !7314)
!7324 = !DILocation(line: 30, column: 2, scope: !7314)
!7325 = !DILocation(line: 38, column: 2, scope: !7307)
!7326 = !DILocation(line: 0, scope: !7316)
!7327 = !DILocation(line: 40, column: 2, scope: !7316)
!7328 = !DILocation(line: 31, column: 9, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !7254, line: 31, column: 7)
!7330 = distinct !DILexicalBlock(scope: !7331, file: !7254, line: 30, column: 54)
!7331 = distinct !DILexicalBlock(scope: !7314, file: !7254, line: 30, column: 2)
!7332 = !DILocation(line: 31, column: 7, scope: !7330)
!7333 = !DILocation(line: 32, column: 35, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7329, file: !7254, line: 31, column: 19)
!7335 = !DILocation(line: 32, column: 20, scope: !7334)
!7336 = !DILocation(line: 32, column: 4, scope: !7334)
!7337 = !DILocation(line: 33, column: 3, scope: !7334)
!7338 = !DILocation(line: 34, column: 4, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7329, file: !7254, line: 33, column: 10)
!7340 = !DILocation(line: 30, column: 50, scope: !7331)
!7341 = !DILocation(line: 30, column: 24, scope: !7331)
!7342 = distinct !{!7342, !7324, !7343}
!7343 = !DILocation(line: 36, column: 2, scope: !7314)
!7344 = !DILocation(line: 49, column: 2, scope: !7307)
!7345 = !DILocation(line: 50, column: 1, scope: !7307)
!7346 = !DILocation(line: 41, column: 9, scope: !7319)
!7347 = !DILocation(line: 41, column: 7, scope: !7320)
!7348 = !DILocation(line: 42, column: 22, scope: !7318)
!7349 = !DILocation(line: 0, scope: !7318)
!7350 = !DILocation(line: 44, column: 25, scope: !7318)
!7351 = !DILocation(line: 44, column: 17, scope: !7318)
!7352 = !DILocation(line: 44, column: 33, scope: !7318)
!7353 = !DILocation(line: 44, column: 4, scope: !7318)
!7354 = !DILocation(line: 45, column: 3, scope: !7318)
!7355 = !DILocation(line: 46, column: 4, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7319, file: !7254, line: 45, column: 10)
!7357 = !DILocation(line: 40, column: 50, scope: !7321)
!7358 = !DILocation(line: 40, column: 24, scope: !7321)
!7359 = distinct !{!7359, !7327, !7360}
!7360 = !DILocation(line: 48, column: 2, scope: !7316)
!7361 = distinct !DISubprogram(name: "isprint", scope: !6397, file: !6397, line: 37, type: !881, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !7362)
!7362 = !{!7363}
!7363 = !DILocalVariable(name: "c", arg: 1, scope: !7361, file: !6397, line: 37, type: !111)
!7364 = !DILocation(line: 0, scope: !7361)
!7365 = !DILocation(line: 39, column: 38, scope: !7361)
!7366 = !DILocation(line: 39, column: 2, scope: !7361)
!7367 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7368, file: !7368, line: 57, type: !7369, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7415)
!7368 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7369 = !DISubroutineType(types: !7370)
!7370 = !{null, !32, !7371}
!7371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7372, size: 32)
!7372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7373)
!7373 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3044, line: 141, baseType: !7374)
!7374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3044, line: 97, size: 256, elements: !7375)
!7375 = !{!7376}
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7374, file: !3044, line: 107, baseType: !7377, size: 256)
!7377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3044, line: 98, size: 256, elements: !7378)
!7378 = !{!7379, !7384, !7389, !7394, !7399, !7404, !7409, !7414}
!7379 = !DIDerivedType(tag: DW_TAG_member, scope: !7377, file: !3044, line: 99, baseType: !7380, size: 32)
!7380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7377, file: !3044, line: 99, size: 32, elements: !7381)
!7381 = !{!7382, !7383}
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7380, file: !3044, line: 99, baseType: !158, size: 32)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7380, file: !3044, line: 99, baseType: !158, size: 32)
!7384 = !DIDerivedType(tag: DW_TAG_member, scope: !7377, file: !3044, line: 100, baseType: !7385, size: 32, offset: 32)
!7385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7377, file: !3044, line: 100, size: 32, elements: !7386)
!7386 = !{!7387, !7388}
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7385, file: !3044, line: 100, baseType: !158, size: 32)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7385, file: !3044, line: 100, baseType: !158, size: 32)
!7389 = !DIDerivedType(tag: DW_TAG_member, scope: !7377, file: !3044, line: 101, baseType: !7390, size: 32, offset: 64)
!7390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7377, file: !3044, line: 101, size: 32, elements: !7391)
!7391 = !{!7392, !7393}
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7390, file: !3044, line: 101, baseType: !158, size: 32)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7390, file: !3044, line: 101, baseType: !158, size: 32)
!7394 = !DIDerivedType(tag: DW_TAG_member, scope: !7377, file: !3044, line: 102, baseType: !7395, size: 32, offset: 96)
!7395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7377, file: !3044, line: 102, size: 32, elements: !7396)
!7396 = !{!7397, !7398}
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7395, file: !3044, line: 102, baseType: !158, size: 32)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7395, file: !3044, line: 102, baseType: !158, size: 32)
!7399 = !DIDerivedType(tag: DW_TAG_member, scope: !7377, file: !3044, line: 103, baseType: !7400, size: 32, offset: 128)
!7400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7377, file: !3044, line: 103, size: 32, elements: !7401)
!7401 = !{!7402, !7403}
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7400, file: !3044, line: 103, baseType: !158, size: 32)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7400, file: !3044, line: 103, baseType: !158, size: 32)
!7404 = !DIDerivedType(tag: DW_TAG_member, scope: !7377, file: !3044, line: 104, baseType: !7405, size: 32, offset: 160)
!7405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7377, file: !3044, line: 104, size: 32, elements: !7406)
!7406 = !{!7407, !7408}
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7405, file: !3044, line: 104, baseType: !158, size: 32)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7405, file: !3044, line: 104, baseType: !158, size: 32)
!7409 = !DIDerivedType(tag: DW_TAG_member, scope: !7377, file: !3044, line: 105, baseType: !7410, size: 32, offset: 192)
!7410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7377, file: !3044, line: 105, size: 32, elements: !7411)
!7411 = !{!7412, !7413}
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7410, file: !3044, line: 105, baseType: !158, size: 32)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7410, file: !3044, line: 105, baseType: !158, size: 32)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7377, file: !3044, line: 106, baseType: !158, size: 32, offset: 224)
!7415 = !{!7416, !7417}
!7416 = !DILocalVariable(name: "reason", arg: 1, scope: !7367, file: !7368, line: 57, type: !32)
!7417 = !DILocalVariable(name: "esf", arg: 2, scope: !7367, file: !7368, line: 57, type: !7371)
!7418 = !DILocation(line: 0, scope: !7367)
!7419 = !DILocation(line: 60, column: 10, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7367, file: !7368, line: 60, column: 6)
!7421 = !DILocation(line: 60, column: 6, scope: !7367)
!7422 = !DILocation(line: 61, column: 3, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7420, file: !7368, line: 60, column: 19)
!7424 = !DILocation(line: 62, column: 2, scope: !7423)
!7425 = !DILocation(line: 63, column: 2, scope: !7367)
!7426 = !DILocation(line: 64, column: 1, scope: !7367)
!7427 = distinct !DISubprogram(name: "esf_dump", scope: !7368, file: !7368, line: 20, type: !7428, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7430)
!7428 = !DISubroutineType(types: !7429)
!7429 = !{null, !7371}
!7430 = !{!7431}
!7431 = !DILocalVariable(name: "esf", arg: 1, scope: !7427, file: !7368, line: 20, type: !7371)
!7432 = !DILocation(line: 0, scope: !7427)
!7433 = !DILocation(line: 22, column: 2, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7435, file: !7368, line: 22, column: 2)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !7368, line: 22, column: 2)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !7368, line: 22, column: 2)
!7437 = distinct !DILexicalBlock(scope: !7427, file: !7368, line: 22, column: 2)
!7438 = !DILocation(line: 24, column: 2, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !7368, line: 24, column: 2)
!7440 = distinct !DILexicalBlock(scope: !7441, file: !7368, line: 24, column: 2)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !7368, line: 24, column: 2)
!7442 = distinct !DILexicalBlock(scope: !7427, file: !7368, line: 24, column: 2)
!7443 = !DILocation(line: 26, column: 2, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !7368, line: 26, column: 2)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !7368, line: 26, column: 2)
!7446 = distinct !DILexicalBlock(scope: !7447, file: !7368, line: 26, column: 2)
!7447 = distinct !DILexicalBlock(scope: !7427, file: !7368, line: 26, column: 2)
!7448 = !DILocation(line: 53, column: 2, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7450, file: !7368, line: 53, column: 2)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !7368, line: 53, column: 2)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !7368, line: 53, column: 2)
!7452 = distinct !DILexicalBlock(scope: !7427, file: !7368, line: 53, column: 2)
!7453 = !DILocation(line: 55, column: 1, scope: !7427)
!7454 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7368, file: !7368, line: 82, type: !7455, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7470)
!7455 = !DISubroutineType(types: !7456)
!7456 = !{null, !7371, !7457}
!7457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7458, size: 32)
!7458 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !339, line: 37, baseType: !7459)
!7459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !7460)
!7460 = !{!7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469}
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7459, file: !339, line: 26, baseType: !158, size: 32)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7459, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7459, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7459, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7459, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7459, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7459, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7459, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7459, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!7470 = !{!7471, !7472, !7473}
!7471 = !DILocalVariable(name: "esf", arg: 1, scope: !7454, file: !7368, line: 82, type: !7371)
!7472 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7454, file: !7368, line: 82, type: !7457)
!7473 = !DILocalVariable(name: "reason", scope: !7454, file: !7368, line: 88, type: !32)
!7474 = !DILocation(line: 0, scope: !7454)
!7475 = !DILocation(line: 88, column: 35, scope: !7454)
!7476 = !DILocation(line: 108, column: 2, scope: !7454)
!7477 = !DILocation(line: 131, column: 1, scope: !7454)
!7478 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7368, file: !7368, line: 133, type: !7479, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7481)
!7479 = !DISubroutineType(types: !7480)
!7480 = !{null, !133}
!7481 = !{!7482, !7483, !7484}
!7482 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7478, file: !7368, line: 133, type: !133)
!7483 = !DILocalVariable(name: "ssf_contents", scope: !7478, file: !7368, line: 135, type: !1852)
!7484 = !DILocalVariable(name: "oops_esf", scope: !7478, file: !7368, line: 136, type: !7373)
!7485 = !DILocation(line: 0, scope: !7478)
!7486 = !DILocation(line: 136, column: 2, scope: !7478)
!7487 = !DILocation(line: 136, column: 15, scope: !7478)
!7488 = !DILocation(line: 139, column: 22, scope: !7478)
!7489 = !DILocation(line: 139, column: 17, scope: !7478)
!7490 = !DILocation(line: 139, column: 20, scope: !7478)
!7491 = !DILocation(line: 141, column: 2, scope: !7478)
!7492 = !DILocation(line: 142, column: 2, scope: !7478)
!7493 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7494, file: !7494, line: 40, type: !7495, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !7497)
!7494 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7495 = !DISubroutineType(types: !7496)
!7496 = !{null, !32}
!7497 = !{!7498}
!7498 = !DILocalVariable(name: "irq", arg: 1, scope: !7493, file: !7494, line: 40, type: !32)
!7499 = !DILocation(line: 0, scope: !7493)
!7500 = !DILocation(line: 42, column: 2, scope: !7493)
!7501 = !DILocation(line: 43, column: 1, scope: !7493)
!7502 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !2045, file: !2045, line: 1684, type: !7503, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !7505)
!7503 = !DISubroutineType(types: !7504)
!7504 = !{null, !2938}
!7505 = !{!7506}
!7506 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7502, file: !2045, line: 1684, type: !2938)
!7507 = !DILocation(line: 0, scope: !7502)
!7508 = !DILocation(line: 1686, column: 23, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7502, file: !2045, line: 1686, column: 7)
!7510 = !DILocation(line: 1686, column: 7, scope: !7502)
!7511 = !DILocation(line: 1688, column: 5, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7509, file: !2045, line: 1687, column: 3)
!7513 = !{i64 2154445242}
!7514 = !DILocation(line: 1689, column: 81, scope: !7512)
!7515 = !DILocation(line: 1689, column: 60, scope: !7512)
!7516 = !DILocation(line: 1689, column: 34, scope: !7512)
!7517 = !DILocation(line: 1689, column: 5, scope: !7512)
!7518 = !DILocation(line: 1689, column: 43, scope: !7512)
!7519 = !DILocation(line: 1690, column: 5, scope: !7512)
!7520 = !{i64 2154445356}
!7521 = !DILocation(line: 1691, column: 3, scope: !7512)
!7522 = !DILocation(line: 1692, column: 1, scope: !7502)
!7523 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7494, file: !7494, line: 45, type: !7495, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !7524)
!7524 = !{!7525}
!7525 = !DILocalVariable(name: "irq", arg: 1, scope: !7523, file: !7494, line: 45, type: !32)
!7526 = !DILocation(line: 0, scope: !7523)
!7527 = !DILocation(line: 47, column: 2, scope: !7523)
!7528 = !DILocation(line: 48, column: 1, scope: !7523)
!7529 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !2045, file: !2045, line: 1722, type: !7503, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !7530)
!7530 = !{!7531}
!7531 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7529, file: !2045, line: 1722, type: !2938)
!7532 = !DILocation(line: 0, scope: !7529)
!7533 = !DILocation(line: 1724, column: 23, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7529, file: !2045, line: 1724, column: 7)
!7535 = !DILocation(line: 1724, column: 7, scope: !7529)
!7536 = !DILocation(line: 1726, column: 81, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7534, file: !2045, line: 1725, column: 3)
!7538 = !DILocation(line: 1726, column: 60, scope: !7537)
!7539 = !DILocation(line: 1726, column: 34, scope: !7537)
!7540 = !DILocation(line: 1726, column: 5, scope: !7537)
!7541 = !DILocation(line: 1726, column: 43, scope: !7537)
!7542 = !DILocation(line: 271, column: 3, scope: !7543, inlinedAt: !7545)
!7543 = distinct !DISubprogram(name: "__DSB", scope: !7544, file: !7544, line: 269, type: !416, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !247)
!7544 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7545 = distinct !DILocation(line: 1727, column: 5, scope: !7537)
!7546 = !{i64 6899629}
!7547 = !DILocation(line: 260, column: 3, scope: !7548, inlinedAt: !7549)
!7548 = distinct !DISubprogram(name: "__ISB", scope: !7544, file: !7544, line: 258, type: !416, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !247)
!7549 = distinct !DILocation(line: 1728, column: 5, scope: !7537)
!7550 = !{i64 6899346}
!7551 = !DILocation(line: 1729, column: 3, scope: !7537)
!7552 = !DILocation(line: 1730, column: 1, scope: !7529)
!7553 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7494, file: !7494, line: 50, type: !7554, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !7556)
!7554 = !DISubroutineType(types: !7555)
!7555 = !{!111, !32}
!7556 = !{!7557}
!7557 = !DILocalVariable(name: "irq", arg: 1, scope: !7553, file: !7494, line: 50, type: !32)
!7558 = !DILocation(line: 0, scope: !7553)
!7559 = !DILocation(line: 52, column: 20, scope: !7553)
!7560 = !DILocation(line: 52, column: 9, scope: !7553)
!7561 = !DILocation(line: 52, column: 41, scope: !7553)
!7562 = !DILocation(line: 52, column: 39, scope: !7553)
!7563 = !DILocation(line: 52, column: 2, scope: !7553)
!7564 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7494, file: !7494, line: 64, type: !7565, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !7567)
!7565 = !DISubroutineType(types: !7566)
!7566 = !{null, !32, !32, !158}
!7567 = !{!7568, !7569, !7570}
!7568 = !DILocalVariable(name: "irq", arg: 1, scope: !7564, file: !7494, line: 64, type: !32)
!7569 = !DILocalVariable(name: "prio", arg: 2, scope: !7564, file: !7494, line: 64, type: !32)
!7570 = !DILocalVariable(name: "flags", arg: 3, scope: !7564, file: !7494, line: 64, type: !158)
!7571 = !DILocation(line: 0, scope: !7564)
!7572 = !DILocation(line: 83, column: 8, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !7494, line: 82, column: 9)
!7574 = distinct !DILexicalBlock(scope: !7564, file: !7494, line: 76, column: 6)
!7575 = !DILocation(line: 95, column: 2, scope: !7564)
!7576 = !DILocation(line: 96, column: 1, scope: !7564)
!7577 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2045, file: !2045, line: 1814, type: !7578, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !7580)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{null, !2938, !158}
!7580 = !{!7581, !7582}
!7581 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7577, file: !2045, line: 1814, type: !2938)
!7582 = !DILocalVariable(name: "priority", arg: 2, scope: !7577, file: !2045, line: 1814, type: !158)
!7583 = !DILocation(line: 0, scope: !7577)
!7584 = !DILocation(line: 0, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7577, file: !2045, line: 1816, column: 7)
!7586 = !DILocation(line: 1816, column: 7, scope: !7577)
!7587 = !DILocation(line: 1824, column: 1, scope: !7577)
!7588 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7494, file: !7494, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !7589)
!7589 = !{!7590}
!7590 = !DILocalVariable(name: "unused", arg: 1, scope: !7588, file: !7494, line: 155, type: !13)
!7591 = !DILocation(line: 0, scope: !7588)
!7592 = !DILocation(line: 159, column: 2, scope: !7588)
!7593 = !DILocation(line: 160, column: 1, scope: !7588)
!7594 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7595, file: !7595, line: 87, type: !416, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !247)
!7595 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7596 = !DILocation(line: 89, column: 2, scope: !7594)
!7597 = !DILocation(line: 90, column: 2, scope: !7594)
!7598 = !DILocation(line: 91, column: 1, scope: !7594)
!7599 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7595, file: !7595, line: 23, type: !416, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !247)
!7600 = !DISubprogram(name: "z_arm_int_exit", scope: !7601, file: !7601, line: 153, type: !416, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !247)
!7601 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7602 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7603, file: !7603, line: 256, type: !416, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !247)
!7603 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7604 = !DILocation(line: 258, column: 2, scope: !7602)
!7605 = !DILocation(line: 260, column: 2, scope: !7602)
!7606 = !DILocation(line: 262, column: 2, scope: !7602)
!7607 = !DILocation(line: 263, column: 2, scope: !7602)
!7608 = !DILocation(line: 267, column: 2, scope: !7602)
!7609 = !DILocation(line: 268, column: 2, scope: !7602)
!7610 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7603, file: !7603, line: 53, type: !416, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !247)
!7611 = !DILocation(line: 55, column: 12, scope: !7610)
!7612 = !DILocation(line: 271, column: 3, scope: !7613, inlinedAt: !7614)
!7613 = distinct !DISubprogram(name: "__DSB", scope: !7544, file: !7544, line: 269, type: !416, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !247)
!7614 = distinct !DILocation(line: 56, column: 2, scope: !7610)
!7615 = !{i64 6935403}
!7616 = !DILocation(line: 260, column: 3, scope: !7617, inlinedAt: !7618)
!7617 = distinct !DISubprogram(name: "__ISB", scope: !7544, file: !7544, line: 258, type: !416, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !247)
!7618 = distinct !DILocation(line: 57, column: 2, scope: !7610)
!7619 = !{i64 6935120}
!7620 = !DILocation(line: 58, column: 1, scope: !7610)
!7621 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7603, file: !7603, line: 96, type: !416, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !247)
!7622 = !DILocation(line: 103, column: 13, scope: !7621)
!7623 = !DILocation(line: 975, column: 3, scope: !7624, inlinedAt: !7629)
!7624 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7544, file: !7544, line: 971, type: !7625, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !7627)
!7625 = !DISubroutineType(types: !7626)
!7626 = !{!158}
!7627 = !{!7628}
!7628 = !DILocalVariable(name: "result", scope: !7624, file: !7544, line: 973, type: !158)
!7629 = distinct !DILocation(line: 189, column: 16, scope: !7621)
!7630 = !{i64 6956233}
!7631 = !DILocation(line: 0, scope: !7624, inlinedAt: !7629)
!7632 = !DILocation(line: 189, column: 32, scope: !7621)
!7633 = !DILocalVariable(name: "control", arg: 1, scope: !7634, file: !7544, line: 1001, type: !158)
!7634 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7544, file: !7544, line: 1001, type: !7635, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !7637)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{null, !158}
!7637 = !{!7633}
!7638 = !DILocation(line: 0, scope: !7634, inlinedAt: !7639)
!7639 = distinct !DILocation(line: 189, column: 2, scope: !7621)
!7640 = !DILocation(line: 1003, column: 3, scope: !7634, inlinedAt: !7639)
!7641 = !{i64 6956953}
!7642 = !DILocation(line: 260, column: 3, scope: !7617, inlinedAt: !7643)
!7643 = distinct !DILocation(line: 1004, column: 3, scope: !7634, inlinedAt: !7639)
!7644 = !DILocation(line: 191, column: 1, scope: !7621)
!7645 = distinct !DISubprogram(name: "arch_swap", scope: !7646, file: !7646, line: 33, type: !7554, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !7647)
!7646 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7647 = !{!7648}
!7648 = !DILocalVariable(name: "key", arg: 1, scope: !7645, file: !7646, line: 33, type: !32)
!7649 = !DILocation(line: 0, scope: !7645)
!7650 = !DILocation(line: 36, column: 2, scope: !7645)
!7651 = !DILocation(line: 36, column: 17, scope: !7645)
!7652 = !DILocation(line: 36, column: 25, scope: !7645)
!7653 = !DILocation(line: 37, column: 37, scope: !7645)
!7654 = !DILocation(line: 37, column: 17, scope: !7645)
!7655 = !DILocation(line: 37, column: 35, scope: !7645)
!7656 = !DILocation(line: 41, column: 12, scope: !7645)
!7657 = !DILocalVariable(name: "key", arg: 1, scope: !7658, file: !7659, line: 84, type: !32)
!7658 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !7660)
!7659 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7660 = !{!7657}
!7661 = !DILocation(line: 0, scope: !7658, inlinedAt: !7662)
!7662 = distinct !DILocation(line: 44, column: 2, scope: !7645)
!7663 = !DILocation(line: 95, column: 2, scope: !7658, inlinedAt: !7662)
!7664 = !{i64 2841898}
!7665 = !DILocation(line: 53, column: 9, scope: !7645)
!7666 = !DILocation(line: 53, column: 24, scope: !7645)
!7667 = !DILocation(line: 53, column: 2, scope: !7645)
!7668 = distinct !DISubprogram(name: "arch_new_thread", scope: !7669, file: !7669, line: 56, type: !7670, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !7772)
!7669 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7670 = !DISubroutineType(types: !7671)
!7671 = !{null, !7672, !7767, !253, !403, !133, !133, !133}
!7672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7673, size: 32)
!7673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !7674)
!7674 = !{!7675, !7733, !7745, !7746, !7747, !7748, !7749, !7762}
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7673, file: !290, line: 247, baseType: !7676, size: 384)
!7676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !7677)
!7677 = !{!7678, !7702, !7709, !7710, !7711, !7720, !7721, !7722}
!7678 = !DIDerivedType(tag: DW_TAG_member, scope: !7676, file: !290, line: 60, baseType: !7679, size: 64)
!7679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7676, file: !290, line: 60, size: 64, elements: !7680)
!7680 = !{!7681, !7696}
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7679, file: !290, line: 61, baseType: !7682, size: 64)
!7682 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !7683)
!7683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !7684)
!7684 = !{!7685, !7691}
!7685 = !DIDerivedType(tag: DW_TAG_member, scope: !7683, file: !230, line: 38, baseType: !7686, size: 32)
!7686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7683, file: !230, line: 38, size: 32, elements: !7687)
!7687 = !{!7688, !7690}
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7686, file: !230, line: 39, baseType: !7689, size: 32)
!7689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7683, size: 32)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7686, file: !230, line: 40, baseType: !7689, size: 32)
!7691 = !DIDerivedType(tag: DW_TAG_member, scope: !7683, file: !230, line: 42, baseType: !7692, size: 32, offset: 32)
!7692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7683, file: !230, line: 42, size: 32, elements: !7693)
!7693 = !{!7694, !7695}
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7692, file: !230, line: 43, baseType: !7689, size: 32)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7692, file: !230, line: 44, baseType: !7689, size: 32)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7679, file: !290, line: 62, baseType: !7697, size: 64)
!7697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !7698)
!7698 = !{!7699}
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7697, file: !302, line: 50, baseType: !7700, size: 64)
!7700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7701, size: 64, elements: !307)
!7701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7697, size: 32)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7676, file: !290, line: 68, baseType: !7703, size: 32, offset: 64)
!7703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7704, size: 32)
!7704 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !7705)
!7705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !7706)
!7706 = !{!7707}
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7705, file: !225, line: 232, baseType: !7708, size: 64)
!7708 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !7683)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7676, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7676, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!7711 = !DIDerivedType(tag: DW_TAG_member, scope: !7676, file: !290, line: 90, baseType: !7712, size: 16, offset: 112)
!7712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7676, file: !290, line: 90, size: 16, elements: !7713)
!7713 = !{!7714, !7719}
!7714 = !DIDerivedType(tag: DW_TAG_member, scope: !7712, file: !290, line: 91, baseType: !7715, size: 16)
!7715 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7712, file: !290, line: 91, size: 16, elements: !7716)
!7716 = !{!7717, !7718}
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7715, file: !290, line: 96, baseType: !320, size: 8)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7715, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7712, file: !290, line: 100, baseType: !272, size: 16)
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7676, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7676, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7676, file: !290, line: 131, baseType: !7723, size: 192, offset: 192)
!7723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !7724)
!7724 = !{!7725, !7726, !7732}
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7723, file: !225, line: 245, baseType: !7682, size: 64)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7723, file: !225, line: 246, baseType: !7727, size: 32, offset: 64)
!7727 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !7728)
!7728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7729, size: 32)
!7729 = !DISubroutineType(types: !7730)
!7730 = !{null, !7731}
!7731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7723, size: 32)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7723, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7673, file: !290, line: 250, baseType: !7734, size: 288, offset: 384)
!7734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !7735)
!7735 = !{!7736, !7737, !7738, !7739, !7740, !7741, !7742, !7743, !7744}
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7734, file: !339, line: 26, baseType: !158, size: 32)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7734, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7734, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7734, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7734, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7734, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7734, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7734, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7734, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7673, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7673, file: !290, line: 256, baseType: !7704, size: 64, offset: 704)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7673, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7673, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7673, file: !290, line: 325, baseType: !7750, size: 32, offset: 1056)
!7750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7751, size: 32)
!7751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !7752)
!7752 = !{!7753, !7759, !7760}
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7751, file: !221, line: 5074, baseType: !7754, size: 96)
!7754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !7755)
!7755 = !{!7756, !7757, !7758}
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7754, file: !363, line: 57, baseType: !366, size: 32)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7754, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7754, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7751, file: !221, line: 5075, baseType: !7704, size: 64, offset: 96)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7751, file: !221, line: 5076, baseType: !7761, offset: 160)
!7761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7673, file: !290, line: 343, baseType: !7763, size: 64, offset: 1088)
!7763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !7764)
!7764 = !{!7765, !7766}
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7763, file: !339, line: 63, baseType: !158, size: 32)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7763, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!7767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7768, size: 32)
!7768 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !396, line: 44, baseType: !7769)
!7769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !398, line: 47, size: 8, elements: !7770)
!7770 = !{!7771}
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7769, file: !398, line: 48, baseType: !120, size: 8)
!7772 = !{!7773, !7774, !7775, !7776, !7777, !7778, !7779, !7780}
!7773 = !DILocalVariable(name: "thread", arg: 1, scope: !7668, file: !7669, line: 56, type: !7672)
!7774 = !DILocalVariable(name: "stack", arg: 2, scope: !7668, file: !7669, line: 56, type: !7767)
!7775 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7668, file: !7669, line: 57, type: !253)
!7776 = !DILocalVariable(name: "entry", arg: 4, scope: !7668, file: !7669, line: 57, type: !403)
!7777 = !DILocalVariable(name: "p1", arg: 5, scope: !7668, file: !7669, line: 58, type: !133)
!7778 = !DILocalVariable(name: "p2", arg: 6, scope: !7668, file: !7669, line: 58, type: !133)
!7779 = !DILocalVariable(name: "p3", arg: 7, scope: !7668, file: !7669, line: 58, type: !133)
!7780 = !DILocalVariable(name: "iframe", scope: !7668, file: !7669, line: 60, type: !3042)
!7781 = !DILocation(line: 0, scope: !7668)
!7782 = !DILocation(line: 85, column: 11, scope: !7668)
!7783 = !DILocation(line: 93, column: 10, scope: !7668)
!7784 = !DILocation(line: 98, column: 13, scope: !7668)
!7785 = !DILocation(line: 100, column: 15, scope: !7668)
!7786 = !DILocation(line: 100, column: 10, scope: !7668)
!7787 = !DILocation(line: 100, column: 13, scope: !7668)
!7788 = !DILocation(line: 101, column: 15, scope: !7668)
!7789 = !DILocation(line: 101, column: 10, scope: !7668)
!7790 = !DILocation(line: 101, column: 13, scope: !7668)
!7791 = !DILocation(line: 102, column: 15, scope: !7668)
!7792 = !DILocation(line: 102, column: 10, scope: !7668)
!7793 = !DILocation(line: 102, column: 13, scope: !7668)
!7794 = !DILocation(line: 103, column: 15, scope: !7668)
!7795 = !DILocation(line: 103, column: 10, scope: !7668)
!7796 = !DILocation(line: 103, column: 13, scope: !7668)
!7797 = !DILocation(line: 106, column: 10, scope: !7668)
!7798 = !DILocation(line: 106, column: 15, scope: !7668)
!7799 = !DILocation(line: 122, column: 29, scope: !7668)
!7800 = !DILocation(line: 122, column: 23, scope: !7668)
!7801 = !DILocation(line: 122, column: 27, scope: !7668)
!7802 = !DILocation(line: 123, column: 15, scope: !7668)
!7803 = !DILocation(line: 123, column: 23, scope: !7668)
!7804 = !DILocation(line: 143, column: 1, scope: !7668)
!7805 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7669, file: !7669, line: 530, type: !7806, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !7808)
!7806 = !DISubroutineType(types: !7807)
!7807 = !{null, !7672, !253, !403}
!7808 = !{!7809, !7810, !7811}
!7809 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7805, file: !7669, line: 530, type: !7672)
!7810 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7805, file: !7669, line: 530, type: !253)
!7811 = !DILocalVariable(name: "_main", arg: 3, scope: !7805, file: !7669, line: 531, type: !403)
!7812 = !DILocation(line: 0, scope: !7805)
!7813 = !DILocation(line: 535, column: 11, scope: !7805)
!7814 = !DILocation(line: 576, column: 2, scope: !7805)
!7815 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7816 = !DILocation(line: 603, column: 2, scope: !7805)
!7817 = distinct !DISubprogram(name: "z_arm_fault", scope: !7818, file: !7818, line: 1036, type: !7819, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !7834)
!7818 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7819 = !DISubroutineType(types: !7820)
!7820 = !{null, !158, !158, !158, !7821}
!7821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7822, size: 32)
!7822 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !339, line: 37, baseType: !7823)
!7823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !7824)
!7824 = !{!7825, !7826, !7827, !7828, !7829, !7830, !7831, !7832, !7833}
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7823, file: !339, line: 26, baseType: !158, size: 32)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7823, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7823, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7823, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7823, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7823, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7823, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7823, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7823, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!7834 = !{!7835, !7836, !7837, !7838, !7839, !7840, !7841, !7842, !7843, !7844}
!7835 = !DILocalVariable(name: "msp", arg: 1, scope: !7817, file: !7818, line: 1036, type: !158)
!7836 = !DILocalVariable(name: "psp", arg: 2, scope: !7817, file: !7818, line: 1036, type: !158)
!7837 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7817, file: !7818, line: 1036, type: !158)
!7838 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7817, file: !7818, line: 1037, type: !7821)
!7839 = !DILocalVariable(name: "reason", scope: !7817, file: !7818, line: 1039, type: !158)
!7840 = !DILocalVariable(name: "fault", scope: !7817, file: !7818, line: 1040, type: !111)
!7841 = !DILocalVariable(name: "recoverable", scope: !7817, file: !7818, line: 1041, type: !131)
!7842 = !DILocalVariable(name: "nested_exc", scope: !7817, file: !7818, line: 1041, type: !131)
!7843 = !DILocalVariable(name: "esf", scope: !7817, file: !7818, line: 1042, type: !3110)
!7844 = !DILocalVariable(name: "esf_copy", scope: !7817, file: !7818, line: 1047, type: !3111)
!7845 = !DILocation(line: 0, scope: !7817)
!7846 = !DILocation(line: 1040, column: 19, scope: !7817)
!7847 = !DILocation(line: 1040, column: 24, scope: !7817)
!7848 = !DILocation(line: 1041, column: 2, scope: !7817)
!7849 = !DILocation(line: 1047, column: 2, scope: !7817)
!7850 = !DILocation(line: 1047, column: 15, scope: !7817)
!7851 = !DILocalVariable(name: "key", arg: 1, scope: !7852, file: !7659, line: 84, type: !32)
!7852 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !7853)
!7853 = !{!7851}
!7854 = !DILocation(line: 0, scope: !7852, inlinedAt: !7855)
!7855 = distinct !DILocation(line: 1050, column: 2, scope: !7817)
!7856 = !DILocation(line: 95, column: 2, scope: !7852, inlinedAt: !7855)
!7857 = !{i64 2875142}
!7858 = !DILocation(line: 1055, column: 9, scope: !7817)
!7859 = !DILocation(line: 1063, column: 11, scope: !7817)
!7860 = !DILocation(line: 1064, column: 6, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7817, file: !7818, line: 1064, column: 6)
!7862 = !DILocation(line: 1064, column: 6, scope: !7817)
!7863 = !DILocation(line: 1070, column: 20, scope: !7817)
!7864 = !DILocation(line: 1070, column: 2, scope: !7817)
!7865 = !DILocation(line: 1089, column: 6, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7817, file: !7818, line: 1089, column: 6)
!7867 = !DILocation(line: 0, scope: !7866)
!7868 = !DILocation(line: 1089, column: 6, scope: !7817)
!7869 = !DILocation(line: 1090, column: 28, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7871, file: !7818, line: 1090, column: 7)
!7871 = distinct !DILexicalBlock(scope: !7866, file: !7818, line: 1089, column: 18)
!7872 = !DILocation(line: 1090, column: 44, scope: !7870)
!7873 = !DILocation(line: 1090, column: 7, scope: !7871)
!7874 = !DILocation(line: 1091, column: 24, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7870, file: !7818, line: 1090, column: 50)
!7876 = !DILocation(line: 1092, column: 3, scope: !7875)
!7877 = !DILocation(line: 1094, column: 23, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7866, file: !7818, line: 1093, column: 9)
!7879 = !DILocation(line: 1097, column: 2, scope: !7817)
!7880 = !DILocation(line: 1098, column: 1, scope: !7817)
!7881 = distinct !DISubprogram(name: "get_esf", scope: !7818, file: !7818, line: 894, type: !7882, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !7884)
!7882 = !DISubroutineType(types: !7883)
!7883 = !{!3110, !158, !158, !158, !206}
!7884 = !{!7885, !7886, !7887, !7888, !7889, !7890}
!7885 = !DILocalVariable(name: "msp", arg: 1, scope: !7881, file: !7818, line: 894, type: !158)
!7886 = !DILocalVariable(name: "psp", arg: 2, scope: !7881, file: !7818, line: 894, type: !158)
!7887 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7881, file: !7818, line: 894, type: !158)
!7888 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7881, file: !7818, line: 895, type: !206)
!7889 = !DILocalVariable(name: "alternative_state_exc", scope: !7881, file: !7818, line: 897, type: !131)
!7890 = !DILocalVariable(name: "ptr_esf", scope: !7881, file: !7818, line: 898, type: !3110)
!7891 = !DILocation(line: 0, scope: !7881)
!7892 = !DILocation(line: 900, column: 14, scope: !7881)
!7893 = !DILocation(line: 902, column: 49, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7881, file: !7818, line: 902, column: 6)
!7895 = !DILocation(line: 902, column: 6, scope: !7881)
!7896 = !DILocation(line: 983, column: 44, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7881, file: !7818, line: 983, column: 6)
!7898 = !DILocation(line: 985, column: 3, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !7818, line: 985, column: 3)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !7818, line: 985, column: 3)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !7818, line: 985, column: 3)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !7818, line: 985, column: 3)
!7903 = distinct !DILexicalBlock(scope: !7897, file: !7818, line: 984, column: 47)
!7904 = !DILocation(line: 986, column: 3, scope: !7903)
!7905 = !DILocation(line: 983, column: 18, scope: !7897)
!7906 = !DILocation(line: 991, column: 7, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7908, file: !7818, line: 990, column: 30)
!7908 = distinct !DILexicalBlock(scope: !7881, file: !7818, line: 990, column: 6)
!7909 = !DILocation(line: 998, column: 16, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !7818, line: 995, column: 10)
!7911 = distinct !DILexicalBlock(scope: !7907, file: !7818, line: 991, column: 7)
!7912 = !DILocation(line: 1002, column: 2, scope: !7881)
!7913 = !DILocation(line: 1003, column: 1, scope: !7881)
!7914 = distinct !DISubprogram(name: "fault_handle", scope: !7818, file: !7818, line: 786, type: !7915, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !7917)
!7915 = !DISubroutineType(types: !7916)
!7916 = !{!158, !3110, !111, !206}
!7917 = !{!7918, !7919, !7920, !7921}
!7918 = !DILocalVariable(name: "esf", arg: 1, scope: !7914, file: !7818, line: 786, type: !3110)
!7919 = !DILocalVariable(name: "fault", arg: 2, scope: !7914, file: !7818, line: 786, type: !111)
!7920 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7914, file: !7818, line: 786, type: !206)
!7921 = !DILocalVariable(name: "reason", scope: !7914, file: !7818, line: 788, type: !158)
!7922 = !DILocation(line: 0, scope: !7914)
!7923 = !DILocation(line: 790, column: 15, scope: !7914)
!7924 = !DILocation(line: 792, column: 2, scope: !7914)
!7925 = !DILocation(line: 794, column: 12, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7914, file: !7818, line: 792, column: 17)
!7927 = !DILocation(line: 795, column: 3, scope: !7926)
!7928 = !DILocation(line: 800, column: 12, scope: !7926)
!7929 = !DILocation(line: 801, column: 3, scope: !7926)
!7930 = !DILocation(line: 803, column: 12, scope: !7926)
!7931 = !DILocation(line: 804, column: 3, scope: !7926)
!7932 = !DILocation(line: 806, column: 12, scope: !7926)
!7933 = !DILocation(line: 807, column: 3, scope: !7926)
!7934 = !DILocation(line: 814, column: 3, scope: !7926)
!7935 = !DILocation(line: 815, column: 3, scope: !7926)
!7936 = !DILocation(line: 820, column: 3, scope: !7926)
!7937 = !DILocation(line: 821, column: 3, scope: !7926)
!7938 = !DILocation(line: 829, column: 2, scope: !7914)
!7939 = distinct !DISubprogram(name: "hard_fault", scope: !7818, file: !7818, line: 709, type: !7940, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !7942)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!158, !3110, !206}
!7942 = !{!7943, !7944, !7945}
!7943 = !DILocalVariable(name: "esf", arg: 1, scope: !7939, file: !7818, line: 709, type: !3110)
!7944 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7939, file: !7818, line: 709, type: !206)
!7945 = !DILocalVariable(name: "reason", scope: !7939, file: !7818, line: 711, type: !158)
!7946 = !DILocation(line: 0, scope: !7939)
!7947 = !DILocation(line: 713, column: 2, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !7818, line: 713, column: 2)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !7818, line: 713, column: 2)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !7818, line: 713, column: 2)
!7951 = distinct !DILexicalBlock(scope: !7939, file: !7818, line: 713, column: 2)
!7952 = !DILocation(line: 732, column: 15, scope: !7939)
!7953 = !DILocation(line: 734, column: 12, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7939, file: !7818, line: 734, column: 6)
!7955 = !DILocation(line: 734, column: 17, scope: !7954)
!7956 = !DILocation(line: 734, column: 41, scope: !7954)
!7957 = !DILocation(line: 734, column: 6, scope: !7939)
!7958 = !DILocation(line: 735, column: 3, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !7818, line: 735, column: 3)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !7818, line: 735, column: 3)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !7818, line: 735, column: 3)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !7818, line: 735, column: 3)
!7963 = distinct !DILexicalBlock(scope: !7954, file: !7818, line: 734, column: 47)
!7964 = !DILocation(line: 736, column: 2, scope: !7963)
!7965 = !DILocation(line: 736, column: 19, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7954, file: !7818, line: 736, column: 13)
!7967 = !DILocation(line: 736, column: 49, scope: !7966)
!7968 = !DILocation(line: 736, column: 13, scope: !7954)
!7969 = !DILocation(line: 737, column: 3, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7971, file: !7818, line: 737, column: 3)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !7818, line: 737, column: 3)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !7818, line: 737, column: 3)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !7818, line: 737, column: 3)
!7974 = distinct !DILexicalBlock(scope: !7966, file: !7818, line: 736, column: 55)
!7975 = !DILocation(line: 738, column: 2, scope: !7974)
!7976 = !DILocation(line: 738, column: 19, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7966, file: !7818, line: 738, column: 13)
!7978 = !DILocation(line: 738, column: 24, scope: !7977)
!7979 = !DILocation(line: 738, column: 47, scope: !7977)
!7980 = !DILocation(line: 738, column: 13, scope: !7966)
!7981 = !DILocation(line: 739, column: 3, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7983, file: !7818, line: 739, column: 3)
!7983 = distinct !DILexicalBlock(scope: !7984, file: !7818, line: 739, column: 3)
!7984 = distinct !DILexicalBlock(scope: !7985, file: !7818, line: 739, column: 3)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !7818, line: 739, column: 3)
!7986 = distinct !DILexicalBlock(scope: !7977, file: !7818, line: 738, column: 53)
!7987 = !DILocation(line: 740, column: 7, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7986, file: !7818, line: 740, column: 7)
!7989 = !DILocation(line: 740, column: 7, scope: !7986)
!7990 = !DILocation(line: 741, column: 4, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7992, file: !7818, line: 741, column: 4)
!7992 = distinct !DILexicalBlock(scope: !7993, file: !7818, line: 741, column: 4)
!7993 = distinct !DILexicalBlock(scope: !7994, file: !7818, line: 741, column: 4)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !7818, line: 741, column: 4)
!7995 = distinct !DILexicalBlock(scope: !7988, file: !7818, line: 740, column: 38)
!7996 = !DILocation(line: 742, column: 24, scope: !7995)
!7997 = !DILocation(line: 743, column: 3, scope: !7995)
!7998 = !DILocation(line: 743, column: 20, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7988, file: !7818, line: 743, column: 14)
!8000 = !DILocation(line: 743, column: 25, scope: !7999)
!8001 = !DILocation(line: 743, column: 52, scope: !7999)
!8002 = !DILocation(line: 743, column: 14, scope: !7988)
!8003 = !DILocation(line: 744, column: 13, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7999, file: !7818, line: 743, column: 58)
!8005 = !DILocation(line: 745, column: 3, scope: !8004)
!8006 = !DILocation(line: 745, column: 20, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7999, file: !7818, line: 745, column: 14)
!8008 = !DILocation(line: 745, column: 25, scope: !8007)
!8009 = !DILocation(line: 745, column: 52, scope: !8007)
!8010 = !DILocation(line: 745, column: 14, scope: !7999)
!8011 = !DILocation(line: 746, column: 13, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8007, file: !7818, line: 745, column: 58)
!8013 = !DILocation(line: 747, column: 3, scope: !8012)
!8014 = !DILocation(line: 747, column: 20, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8007, file: !7818, line: 747, column: 14)
!8016 = !DILocation(line: 747, column: 52, scope: !8015)
!8017 = !DILocation(line: 747, column: 14, scope: !8007)
!8018 = !DILocation(line: 748, column: 13, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8015, file: !7818, line: 747, column: 58)
!8020 = !DILocation(line: 753, column: 3, scope: !8019)
!8021 = !DILocation(line: 766, column: 2, scope: !7939)
!8022 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7818, file: !7818, line: 229, type: !7915, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !8023)
!8023 = !{!8024, !8025, !8026, !8027, !8028, !8029}
!8024 = !DILocalVariable(name: "esf", arg: 1, scope: !8022, file: !7818, line: 229, type: !3110)
!8025 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8022, file: !7818, line: 229, type: !111)
!8026 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8022, file: !7818, line: 230, type: !206)
!8027 = !DILocalVariable(name: "reason", scope: !8022, file: !7818, line: 232, type: !158)
!8028 = !DILocalVariable(name: "mmfar", scope: !8022, file: !7818, line: 233, type: !158)
!8029 = !DILocalVariable(name: "temp", scope: !8030, file: !7818, line: 254, type: !158)
!8030 = distinct !DILexicalBlock(scope: !8031, file: !7818, line: 244, column: 48)
!8031 = distinct !DILexicalBlock(scope: !8022, file: !7818, line: 244, column: 6)
!8032 = !DILocation(line: 0, scope: !8022)
!8033 = !DILocation(line: 235, column: 2, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !7818, line: 235, column: 2)
!8035 = distinct !DILexicalBlock(scope: !8036, file: !7818, line: 235, column: 2)
!8036 = distinct !DILexicalBlock(scope: !8037, file: !7818, line: 235, column: 2)
!8037 = distinct !DILexicalBlock(scope: !8022, file: !7818, line: 235, column: 2)
!8038 = !DILocation(line: 237, column: 12, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8022, file: !7818, line: 237, column: 6)
!8040 = !DILocation(line: 237, column: 17, scope: !8039)
!8041 = !DILocation(line: 237, column: 41, scope: !8039)
!8042 = !DILocation(line: 237, column: 6, scope: !8022)
!8043 = !DILocation(line: 238, column: 3, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !7818, line: 238, column: 3)
!8045 = distinct !DILexicalBlock(scope: !8046, file: !7818, line: 238, column: 3)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !7818, line: 238, column: 3)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !7818, line: 238, column: 3)
!8048 = distinct !DILexicalBlock(scope: !8039, file: !7818, line: 237, column: 47)
!8049 = !DILocation(line: 240, column: 2, scope: !8048)
!8050 = !DILocation(line: 241, column: 12, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8022, file: !7818, line: 241, column: 6)
!8052 = !DILocation(line: 241, column: 17, scope: !8051)
!8053 = !DILocation(line: 241, column: 43, scope: !8051)
!8054 = !DILocation(line: 241, column: 6, scope: !8022)
!8055 = !DILocation(line: 242, column: 3, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8057, file: !7818, line: 242, column: 3)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !7818, line: 242, column: 3)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !7818, line: 242, column: 3)
!8059 = distinct !DILexicalBlock(scope: !8060, file: !7818, line: 242, column: 3)
!8060 = distinct !DILexicalBlock(scope: !8051, file: !7818, line: 241, column: 49)
!8061 = !DILocation(line: 243, column: 2, scope: !8060)
!8062 = !DILocation(line: 244, column: 12, scope: !8031)
!8063 = !DILocation(line: 244, column: 17, scope: !8031)
!8064 = !DILocation(line: 244, column: 42, scope: !8031)
!8065 = !DILocation(line: 244, column: 6, scope: !8022)
!8066 = !DILocation(line: 245, column: 3, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !7818, line: 245, column: 3)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !7818, line: 245, column: 3)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !7818, line: 245, column: 3)
!8070 = distinct !DILexicalBlock(scope: !8030, file: !7818, line: 245, column: 3)
!8071 = !DILocation(line: 254, column: 24, scope: !8030)
!8072 = !DILocation(line: 0, scope: !8030)
!8073 = !DILocation(line: 256, column: 13, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8030, file: !7818, line: 256, column: 7)
!8075 = !DILocation(line: 256, column: 18, scope: !8074)
!8076 = !DILocation(line: 256, column: 44, scope: !8074)
!8077 = !DILocation(line: 256, column: 7, scope: !8030)
!8078 = !DILocation(line: 258, column: 4, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !7818, line: 258, column: 4)
!8080 = distinct !DILexicalBlock(scope: !8081, file: !7818, line: 258, column: 4)
!8081 = distinct !DILexicalBlock(scope: !8082, file: !7818, line: 258, column: 4)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !7818, line: 258, column: 4)
!8083 = distinct !DILexicalBlock(scope: !8074, file: !7818, line: 256, column: 50)
!8084 = !DILocation(line: 259, column: 24, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8083, file: !7818, line: 259, column: 8)
!8086 = !DILocation(line: 259, column: 8, scope: !8083)
!8087 = !DILocation(line: 261, column: 15, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8085, file: !7818, line: 259, column: 30)
!8089 = !DILocation(line: 262, column: 4, scope: !8088)
!8090 = !DILocation(line: 265, column: 12, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8022, file: !7818, line: 265, column: 6)
!8092 = !DILocation(line: 265, column: 17, scope: !8091)
!8093 = !DILocation(line: 265, column: 42, scope: !8091)
!8094 = !DILocation(line: 265, column: 6, scope: !8022)
!8095 = !DILocation(line: 266, column: 3, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !7818, line: 266, column: 3)
!8097 = distinct !DILexicalBlock(scope: !8098, file: !7818, line: 266, column: 3)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !7818, line: 266, column: 3)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !7818, line: 266, column: 3)
!8100 = distinct !DILexicalBlock(scope: !8091, file: !7818, line: 265, column: 48)
!8101 = !DILocation(line: 267, column: 2, scope: !8100)
!8102 = !DILocation(line: 269, column: 12, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8022, file: !7818, line: 269, column: 6)
!8104 = !DILocation(line: 269, column: 17, scope: !8103)
!8105 = !DILocation(line: 269, column: 41, scope: !8103)
!8106 = !DILocation(line: 269, column: 6, scope: !8022)
!8107 = !DILocation(line: 270, column: 3, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !7818, line: 270, column: 3)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !7818, line: 270, column: 3)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !7818, line: 270, column: 3)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !7818, line: 270, column: 3)
!8112 = distinct !DILexicalBlock(scope: !8103, file: !7818, line: 269, column: 47)
!8113 = !DILocation(line: 272, column: 2, scope: !8112)
!8114 = !DILocation(line: 288, column: 12, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8022, file: !7818, line: 288, column: 6)
!8116 = !DILocation(line: 288, column: 17, scope: !8115)
!8117 = !DILocation(line: 288, column: 41, scope: !8115)
!8118 = !DILocation(line: 289, column: 9, scope: !8115)
!8119 = !DILocation(line: 288, column: 6, scope: !8022)
!8120 = !DILocation(line: 360, column: 12, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8022, file: !7818, line: 360, column: 6)
!8122 = !DILocation(line: 360, column: 17, scope: !8121)
!8123 = !DILocation(line: 360, column: 41, scope: !8121)
!8124 = !DILocation(line: 360, column: 6, scope: !8022)
!8125 = !DILocation(line: 361, column: 14, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8121, file: !7818, line: 360, column: 47)
!8127 = !DILocation(line: 362, column: 2, scope: !8126)
!8128 = !DILocation(line: 366, column: 12, scope: !8022)
!8129 = !DILocation(line: 369, column: 15, scope: !8022)
!8130 = !DILocation(line: 371, column: 2, scope: !8022)
!8131 = distinct !DISubprogram(name: "bus_fault", scope: !7818, file: !7818, line: 383, type: !8132, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !8134)
!8132 = !DISubroutineType(types: !8133)
!8133 = !{!111, !3110, !111, !206}
!8134 = !{!8135, !8136, !8137, !8138, !8139}
!8135 = !DILocalVariable(name: "esf", arg: 1, scope: !8131, file: !7818, line: 383, type: !3110)
!8136 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8131, file: !7818, line: 383, type: !111)
!8137 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8131, file: !7818, line: 383, type: !206)
!8138 = !DILocalVariable(name: "reason", scope: !8131, file: !7818, line: 385, type: !158)
!8139 = !DILocalVariable(name: "bfar", scope: !8140, file: !7818, line: 405, type: !158)
!8140 = distinct !DILexicalBlock(scope: !8141, file: !7818, line: 395, column: 42)
!8141 = distinct !DILexicalBlock(scope: !8131, file: !7818, line: 395, column: 6)
!8142 = !DILocation(line: 0, scope: !8131)
!8143 = !DILocation(line: 387, column: 2, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8145, file: !7818, line: 387, column: 2)
!8145 = distinct !DILexicalBlock(scope: !8146, file: !7818, line: 387, column: 2)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !7818, line: 387, column: 2)
!8147 = distinct !DILexicalBlock(scope: !8131, file: !7818, line: 387, column: 2)
!8148 = !DILocation(line: 389, column: 11, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8131, file: !7818, line: 389, column: 6)
!8150 = !DILocation(line: 389, column: 16, scope: !8149)
!8151 = !DILocation(line: 389, column: 6, scope: !8131)
!8152 = !DILocation(line: 390, column: 3, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8154, file: !7818, line: 390, column: 3)
!8154 = distinct !DILexicalBlock(scope: !8155, file: !7818, line: 390, column: 3)
!8155 = distinct !DILexicalBlock(scope: !8156, file: !7818, line: 390, column: 3)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !7818, line: 390, column: 3)
!8157 = distinct !DILexicalBlock(scope: !8149, file: !7818, line: 389, column: 39)
!8158 = !DILocation(line: 391, column: 2, scope: !8157)
!8159 = !DILocation(line: 392, column: 11, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8131, file: !7818, line: 392, column: 6)
!8161 = !DILocation(line: 392, column: 16, scope: !8160)
!8162 = !DILocation(line: 392, column: 6, scope: !8131)
!8163 = !DILocation(line: 393, column: 3, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8165, file: !7818, line: 393, column: 3)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !7818, line: 393, column: 3)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !7818, line: 393, column: 3)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !7818, line: 393, column: 3)
!8168 = distinct !DILexicalBlock(scope: !8160, file: !7818, line: 392, column: 41)
!8169 = !DILocation(line: 394, column: 2, scope: !8168)
!8170 = !DILocation(line: 395, column: 11, scope: !8141)
!8171 = !DILocation(line: 395, column: 16, scope: !8141)
!8172 = !DILocation(line: 395, column: 6, scope: !8131)
!8173 = !DILocation(line: 396, column: 3, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8175, file: !7818, line: 396, column: 3)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !7818, line: 396, column: 3)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !7818, line: 396, column: 3)
!8177 = distinct !DILexicalBlock(scope: !8140, file: !7818, line: 396, column: 3)
!8178 = !DILocation(line: 405, column: 3, scope: !8140)
!8179 = !DILocation(line: 0, scope: !8140)
!8180 = !DILocation(line: 407, column: 13, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8140, file: !7818, line: 407, column: 7)
!8182 = !DILocation(line: 407, column: 18, scope: !8181)
!8183 = !DILocation(line: 407, column: 44, scope: !8181)
!8184 = !DILocation(line: 407, column: 7, scope: !8140)
!8185 = !DILocation(line: 408, column: 4, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !7818, line: 408, column: 4)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !7818, line: 408, column: 4)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !7818, line: 408, column: 4)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !7818, line: 408, column: 4)
!8190 = distinct !DILexicalBlock(scope: !8181, file: !7818, line: 407, column: 50)
!8191 = !DILocation(line: 409, column: 24, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8190, file: !7818, line: 409, column: 8)
!8193 = !DILocation(line: 409, column: 8, scope: !8190)
!8194 = !DILocation(line: 411, column: 15, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8192, file: !7818, line: 409, column: 30)
!8196 = !DILocation(line: 412, column: 4, scope: !8195)
!8197 = !DILocation(line: 415, column: 11, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8131, file: !7818, line: 415, column: 6)
!8199 = !DILocation(line: 415, column: 16, scope: !8198)
!8200 = !DILocation(line: 415, column: 6, scope: !8131)
!8201 = !DILocation(line: 416, column: 3, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !7818, line: 416, column: 3)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !7818, line: 416, column: 3)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !7818, line: 416, column: 3)
!8205 = distinct !DILexicalBlock(scope: !8206, file: !7818, line: 416, column: 3)
!8206 = distinct !DILexicalBlock(scope: !8198, file: !7818, line: 415, column: 44)
!8207 = !DILocation(line: 417, column: 2, scope: !8206)
!8208 = !DILocation(line: 418, column: 12, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8131, file: !7818, line: 418, column: 6)
!8210 = !DILocation(line: 418, column: 17, scope: !8209)
!8211 = !DILocation(line: 418, column: 41, scope: !8209)
!8212 = !DILocation(line: 418, column: 6, scope: !8131)
!8213 = !DILocation(line: 423, column: 18, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8209, file: !7818, line: 423, column: 13)
!8215 = !DILocation(line: 423, column: 23, scope: !8214)
!8216 = !DILocation(line: 423, column: 13, scope: !8209)
!8217 = !DILocation(line: 0, scope: !8209)
!8218 = !DILocation(line: 524, column: 12, scope: !8131)
!8219 = !DILocation(line: 526, column: 15, scope: !8131)
!8220 = !DILocation(line: 528, column: 2, scope: !8131)
!8221 = distinct !DISubprogram(name: "usage_fault", scope: !7818, file: !7818, line: 539, type: !8222, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !8226)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{!158, !8224}
!8224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8225, size: 32)
!8225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3111)
!8226 = !{!8227, !8228}
!8227 = !DILocalVariable(name: "esf", arg: 1, scope: !8221, file: !7818, line: 539, type: !8224)
!8228 = !DILocalVariable(name: "reason", scope: !8221, file: !7818, line: 541, type: !158)
!8229 = !DILocation(line: 0, scope: !8221)
!8230 = !DILocation(line: 543, column: 2, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !7818, line: 543, column: 2)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !7818, line: 543, column: 2)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !7818, line: 543, column: 2)
!8234 = distinct !DILexicalBlock(scope: !8221, file: !7818, line: 543, column: 2)
!8235 = !DILocation(line: 546, column: 12, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8221, file: !7818, line: 546, column: 6)
!8237 = !DILocation(line: 546, column: 17, scope: !8236)
!8238 = !DILocation(line: 546, column: 43, scope: !8236)
!8239 = !DILocation(line: 546, column: 6, scope: !8221)
!8240 = !DILocation(line: 547, column: 3, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8242, file: !7818, line: 547, column: 3)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !7818, line: 547, column: 3)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !7818, line: 547, column: 3)
!8244 = distinct !DILexicalBlock(scope: !8245, file: !7818, line: 547, column: 3)
!8245 = distinct !DILexicalBlock(scope: !8236, file: !7818, line: 546, column: 49)
!8246 = !DILocation(line: 548, column: 2, scope: !8245)
!8247 = !DILocation(line: 549, column: 12, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8221, file: !7818, line: 549, column: 6)
!8249 = !DILocation(line: 549, column: 17, scope: !8248)
!8250 = !DILocation(line: 549, column: 43, scope: !8248)
!8251 = !DILocation(line: 549, column: 6, scope: !8221)
!8252 = !DILocation(line: 550, column: 3, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8254, file: !7818, line: 550, column: 3)
!8254 = distinct !DILexicalBlock(scope: !8255, file: !7818, line: 550, column: 3)
!8255 = distinct !DILexicalBlock(scope: !8256, file: !7818, line: 550, column: 3)
!8256 = distinct !DILexicalBlock(scope: !8257, file: !7818, line: 550, column: 3)
!8257 = distinct !DILexicalBlock(scope: !8248, file: !7818, line: 549, column: 49)
!8258 = !DILocation(line: 551, column: 2, scope: !8257)
!8259 = !DILocation(line: 567, column: 12, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8221, file: !7818, line: 567, column: 6)
!8261 = !DILocation(line: 567, column: 17, scope: !8260)
!8262 = !DILocation(line: 567, column: 38, scope: !8260)
!8263 = !DILocation(line: 567, column: 6, scope: !8221)
!8264 = !DILocation(line: 568, column: 3, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !7818, line: 568, column: 3)
!8266 = distinct !DILexicalBlock(scope: !8267, file: !7818, line: 568, column: 3)
!8267 = distinct !DILexicalBlock(scope: !8268, file: !7818, line: 568, column: 3)
!8268 = distinct !DILexicalBlock(scope: !8269, file: !7818, line: 568, column: 3)
!8269 = distinct !DILexicalBlock(scope: !8260, file: !7818, line: 567, column: 44)
!8270 = !DILocation(line: 569, column: 2, scope: !8269)
!8271 = !DILocation(line: 570, column: 12, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8221, file: !7818, line: 570, column: 6)
!8273 = !DILocation(line: 570, column: 17, scope: !8272)
!8274 = !DILocation(line: 570, column: 39, scope: !8272)
!8275 = !DILocation(line: 570, column: 6, scope: !8221)
!8276 = !DILocation(line: 571, column: 3, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !7818, line: 571, column: 3)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !7818, line: 571, column: 3)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !7818, line: 571, column: 3)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !7818, line: 571, column: 3)
!8281 = distinct !DILexicalBlock(scope: !8272, file: !7818, line: 570, column: 45)
!8282 = !DILocation(line: 572, column: 2, scope: !8281)
!8283 = !DILocation(line: 573, column: 12, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8221, file: !7818, line: 573, column: 6)
!8285 = !DILocation(line: 573, column: 17, scope: !8284)
!8286 = !DILocation(line: 573, column: 42, scope: !8284)
!8287 = !DILocation(line: 573, column: 6, scope: !8221)
!8288 = !DILocation(line: 574, column: 3, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8290, file: !7818, line: 574, column: 3)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !7818, line: 574, column: 3)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !7818, line: 574, column: 3)
!8292 = distinct !DILexicalBlock(scope: !8293, file: !7818, line: 574, column: 3)
!8293 = distinct !DILexicalBlock(scope: !8284, file: !7818, line: 573, column: 48)
!8294 = !DILocation(line: 575, column: 2, scope: !8293)
!8295 = !DILocation(line: 576, column: 12, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8221, file: !7818, line: 576, column: 6)
!8297 = !DILocation(line: 576, column: 17, scope: !8296)
!8298 = !DILocation(line: 576, column: 44, scope: !8296)
!8299 = !DILocation(line: 576, column: 6, scope: !8221)
!8300 = !DILocation(line: 577, column: 3, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !7818, line: 577, column: 3)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !7818, line: 577, column: 3)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !7818, line: 577, column: 3)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !7818, line: 577, column: 3)
!8305 = distinct !DILexicalBlock(scope: !8296, file: !7818, line: 576, column: 50)
!8306 = !DILocation(line: 578, column: 2, scope: !8305)
!8307 = !DILocation(line: 581, column: 12, scope: !8221)
!8308 = !DILocation(line: 583, column: 2, scope: !8221)
!8309 = distinct !DISubprogram(name: "debug_monitor", scope: !7818, file: !7818, line: 632, type: !8310, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !8312)
!8310 = !DISubroutineType(types: !8311)
!8311 = !{null, !3110, !206}
!8312 = !{!8313, !8314}
!8313 = !DILocalVariable(name: "esf", arg: 1, scope: !8309, file: !7818, line: 632, type: !3110)
!8314 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8309, file: !7818, line: 632, type: !206)
!8315 = !DILocation(line: 0, scope: !8309)
!8316 = !DILocation(line: 634, column: 15, scope: !8309)
!8317 = !DILocation(line: 636, column: 2, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !7818, line: 636, column: 2)
!8319 = distinct !DILexicalBlock(scope: !8320, file: !7818, line: 636, column: 2)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !7818, line: 636, column: 2)
!8321 = distinct !DILexicalBlock(scope: !8309, file: !7818, line: 636, column: 2)
!8322 = !DILocation(line: 652, column: 1, scope: !8309)
!8323 = distinct !DISubprogram(name: "reserved_exception", scope: !7818, file: !7818, line: 776, type: !8324, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !8326)
!8324 = !DISubroutineType(types: !8325)
!8325 = !{null, !8224, !111}
!8326 = !{!8327, !8328}
!8327 = !DILocalVariable(name: "esf", arg: 1, scope: !8323, file: !7818, line: 776, type: !8224)
!8328 = !DILocalVariable(name: "fault", arg: 2, scope: !8323, file: !7818, line: 776, type: !111)
!8329 = !DILocation(line: 0, scope: !8323)
!8330 = !DILocation(line: 780, column: 2, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !7818, line: 780, column: 2)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !7818, line: 780, column: 2)
!8333 = distinct !DILexicalBlock(scope: !8334, file: !7818, line: 780, column: 2)
!8334 = distinct !DILexicalBlock(scope: !8323, file: !7818, line: 780, column: 2)
!8335 = !DILocation(line: 783, column: 1, scope: !8323)
!8336 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7818, file: !7818, line: 658, type: !8337, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !8339)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{!131, !3110}
!8339 = !{!8340, !8341, !8342}
!8340 = !DILocalVariable(name: "esf", arg: 1, scope: !8336, file: !7818, line: 658, type: !3110)
!8341 = !DILocalVariable(name: "ret_addr", scope: !8336, file: !7818, line: 660, type: !2883)
!8342 = !DILocalVariable(name: "fault_insn", scope: !8336, file: !7818, line: 686, type: !272)
!8343 = !DILocation(line: 0, scope: !8336)
!8344 = !DILocation(line: 660, column: 46, scope: !8336)
!8345 = !DILocation(line: 660, column: 23, scope: !8336)
!8346 = !DILocation(line: 682, column: 11, scope: !8336)
!8347 = !DILocation(line: 271, column: 3, scope: !8348, inlinedAt: !8349)
!8348 = distinct !DISubprogram(name: "__DSB", scope: !7544, file: !7544, line: 269, type: !416, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !247)
!8349 = distinct !DILocation(line: 683, column: 2, scope: !8336)
!8350 = !{i64 6962507}
!8351 = !DILocation(line: 260, column: 3, scope: !8352, inlinedAt: !8353)
!8352 = distinct !DISubprogram(name: "__ISB", scope: !7544, file: !7544, line: 258, type: !416, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !247)
!8353 = distinct !DILocation(line: 684, column: 2, scope: !8336)
!8354 = !{i64 6962224}
!8355 = !DILocation(line: 686, column: 35, scope: !8336)
!8356 = !DILocation(line: 686, column: 24, scope: !8336)
!8357 = !DILocation(line: 688, column: 11, scope: !8336)
!8358 = !DILocation(line: 271, column: 3, scope: !8348, inlinedAt: !8359)
!8359 = distinct !DILocation(line: 689, column: 2, scope: !8336)
!8360 = !DILocation(line: 260, column: 3, scope: !8352, inlinedAt: !8361)
!8361 = distinct !DILocation(line: 690, column: 2, scope: !8336)
!8362 = !DILocation(line: 693, column: 45, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8336, file: !7818, line: 693, column: 6)
!8364 = !DILocation(line: 699, column: 1, scope: !8336)
!8365 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7818, file: !7818, line: 1107, type: !416, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !247)
!8366 = !DILocation(line: 1111, column: 11, scope: !8365)
!8367 = !DILocation(line: 1136, column: 1, scope: !8365)
!8368 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8369, file: !8369, line: 26, type: !416, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !8370)
!8369 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8370 = !{!8371}
!8371 = !DILocalVariable(name: "irq", scope: !8368, file: !8369, line: 28, type: !111)
!8372 = !DILocation(line: 0, scope: !8368)
!8373 = !DILocation(line: 30, column: 2, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8368, file: !8369, line: 30, column: 2)
!8375 = !DILocation(line: 31, column: 3, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8377, file: !8369, line: 30, column: 39)
!8377 = distinct !DILexicalBlock(scope: !8374, file: !8369, line: 30, column: 2)
!8378 = !DILocation(line: 30, column: 35, scope: !8377)
!8379 = !DILocation(line: 30, column: 13, scope: !8377)
!8380 = distinct !{!8380, !8373, !8381}
!8381 = !DILocation(line: 32, column: 2, scope: !8374)
!8382 = !DILocation(line: 33, column: 1, scope: !8368)
!8383 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2045, file: !2045, line: 1814, type: !7578, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !8384)
!8384 = !{!8385, !8386}
!8385 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8383, file: !2045, line: 1814, type: !2938)
!8386 = !DILocalVariable(name: "priority", arg: 2, scope: !8383, file: !2045, line: 1814, type: !158)
!8387 = !DILocation(line: 0, scope: !8383)
!8388 = !DILocation(line: 1816, column: 7, scope: !8383)
!8389 = !DILocation(line: 0, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8383, file: !2045, line: 1816, column: 7)
!8391 = !DILocation(line: 1824, column: 1, scope: !8383)
!8392 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8393, file: !8393, line: 27, type: !8394, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8492)
!8393 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8394 = !DISubroutineType(types: !8395)
!8395 = !{null, !8396}
!8396 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !290, line: 347, baseType: !8397)
!8397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8398, size: 32)
!8398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !8399)
!8399 = !{!8400, !8458, !8470, !8471, !8472, !8473, !8474, !8487}
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8398, file: !290, line: 247, baseType: !8401, size: 384)
!8401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !8402)
!8402 = !{!8403, !8427, !8434, !8435, !8436, !8445, !8446, !8447}
!8403 = !DIDerivedType(tag: DW_TAG_member, scope: !8401, file: !290, line: 60, baseType: !8404, size: 64)
!8404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8401, file: !290, line: 60, size: 64, elements: !8405)
!8405 = !{!8406, !8421}
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8404, file: !290, line: 61, baseType: !8407, size: 64)
!8407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !8408)
!8408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !8409)
!8409 = !{!8410, !8416}
!8410 = !DIDerivedType(tag: DW_TAG_member, scope: !8408, file: !230, line: 38, baseType: !8411, size: 32)
!8411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8408, file: !230, line: 38, size: 32, elements: !8412)
!8412 = !{!8413, !8415}
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8411, file: !230, line: 39, baseType: !8414, size: 32)
!8414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8408, size: 32)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8411, file: !230, line: 40, baseType: !8414, size: 32)
!8416 = !DIDerivedType(tag: DW_TAG_member, scope: !8408, file: !230, line: 42, baseType: !8417, size: 32, offset: 32)
!8417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8408, file: !230, line: 42, size: 32, elements: !8418)
!8418 = !{!8419, !8420}
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8417, file: !230, line: 43, baseType: !8414, size: 32)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8417, file: !230, line: 44, baseType: !8414, size: 32)
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8404, file: !290, line: 62, baseType: !8422, size: 64)
!8422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !8423)
!8423 = !{!8424}
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8422, file: !302, line: 50, baseType: !8425, size: 64)
!8425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8426, size: 64, elements: !307)
!8426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8422, size: 32)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8401, file: !290, line: 68, baseType: !8428, size: 32, offset: 64)
!8428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8429, size: 32)
!8429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !8430)
!8430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !8431)
!8431 = !{!8432}
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8430, file: !225, line: 232, baseType: !8433, size: 64)
!8433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !8408)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8401, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8401, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!8436 = !DIDerivedType(tag: DW_TAG_member, scope: !8401, file: !290, line: 90, baseType: !8437, size: 16, offset: 112)
!8437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8401, file: !290, line: 90, size: 16, elements: !8438)
!8438 = !{!8439, !8444}
!8439 = !DIDerivedType(tag: DW_TAG_member, scope: !8437, file: !290, line: 91, baseType: !8440, size: 16)
!8440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8437, file: !290, line: 91, size: 16, elements: !8441)
!8441 = !{!8442, !8443}
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8440, file: !290, line: 96, baseType: !320, size: 8)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8440, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8437, file: !290, line: 100, baseType: !272, size: 16)
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8401, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8401, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8401, file: !290, line: 131, baseType: !8448, size: 192, offset: 192)
!8448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !8449)
!8449 = !{!8450, !8451, !8457}
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8448, file: !225, line: 245, baseType: !8407, size: 64)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8448, file: !225, line: 246, baseType: !8452, size: 32, offset: 64)
!8452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !8453)
!8453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8454, size: 32)
!8454 = !DISubroutineType(types: !8455)
!8455 = !{null, !8456}
!8456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8448, size: 32)
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8448, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8398, file: !290, line: 250, baseType: !8459, size: 288, offset: 384)
!8459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !8460)
!8460 = !{!8461, !8462, !8463, !8464, !8465, !8466, !8467, !8468, !8469}
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8459, file: !339, line: 26, baseType: !158, size: 32)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8459, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8459, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8459, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8459, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8459, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8459, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8459, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!8469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8459, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8398, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8398, file: !290, line: 256, baseType: !8429, size: 64, offset: 704)
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8398, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8398, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8398, file: !290, line: 325, baseType: !8475, size: 32, offset: 1056)
!8475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8476, size: 32)
!8476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !8477)
!8477 = !{!8478, !8484, !8485}
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8476, file: !221, line: 5074, baseType: !8479, size: 96)
!8479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !8480)
!8480 = !{!8481, !8482, !8483}
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8479, file: !363, line: 57, baseType: !366, size: 32)
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8479, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8479, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8476, file: !221, line: 5075, baseType: !8429, size: 64, offset: 96)
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8476, file: !221, line: 5076, baseType: !8486, offset: 160)
!8486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!8487 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8398, file: !290, line: 343, baseType: !8488, size: 64, offset: 1088)
!8488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !8489)
!8489 = !{!8490, !8491}
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8488, file: !339, line: 63, baseType: !158, size: 32)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8488, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!8492 = !{!8493}
!8493 = !DILocalVariable(name: "thread", arg: 1, scope: !8392, file: !8393, line: 27, type: !8396)
!8494 = !DILocation(line: 0, scope: !8392)
!8495 = !DILocation(line: 29, column: 6, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8392, file: !8393, line: 29, column: 6)
!8497 = !DILocation(line: 29, column: 15, scope: !8496)
!8498 = !DILocation(line: 29, column: 6, scope: !8392)
!8499 = !DILocation(line: 1031, column: 3, scope: !8500, inlinedAt: !8503)
!8500 = distinct !DISubprogram(name: "__get_IPSR", scope: !7544, file: !7544, line: 1027, type: !7625, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8501)
!8501 = !{!8502}
!8502 = !DILocalVariable(name: "result", scope: !8500, file: !7544, line: 1029, type: !158)
!8503 = distinct !DILocation(line: 48, column: 10, scope: !8504, inlinedAt: !8508)
!8504 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8505, file: !8505, line: 46, type: !8506, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !247)
!8505 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8506 = !DISubroutineType(types: !8507)
!8507 = !{!131}
!8508 = distinct !DILocation(line: 30, column: 7, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !8393, line: 30, column: 7)
!8510 = distinct !DILexicalBlock(scope: !8496, file: !8393, line: 29, column: 26)
!8511 = !{i64 6963731}
!8512 = !DILocation(line: 0, scope: !8500, inlinedAt: !8503)
!8513 = !DILocation(line: 48, column: 9, scope: !8504, inlinedAt: !8508)
!8514 = !DILocation(line: 30, column: 7, scope: !8510)
!8515 = !DILocation(line: 42, column: 14, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8509, file: !8393, line: 30, column: 25)
!8517 = !DILocation(line: 48, column: 15, scope: !8516)
!8518 = !DILocation(line: 49, column: 3, scope: !8516)
!8519 = !DILocation(line: 52, column: 2, scope: !8392)
!8520 = !DILocation(line: 53, column: 1, scope: !8392)
!8521 = distinct !DISubprogram(name: "strcpy", scope: !8522, file: !8522, line: 20, type: !8523, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8527)
!8522 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8523 = !DISubroutineType(types: !8524)
!8524 = !{!253, !8525, !8526}
!8525 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !253)
!8526 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!8527 = !{!8528, !8529, !8530}
!8528 = !DILocalVariable(name: "d", arg: 1, scope: !8521, file: !8522, line: 20, type: !8525)
!8529 = !DILocalVariable(name: "s", arg: 2, scope: !8521, file: !8522, line: 20, type: !8526)
!8530 = !DILocalVariable(name: "dest", scope: !8521, file: !8522, line: 22, type: !253)
!8531 = !DILocation(line: 0, scope: !8521)
!8532 = !DILocation(line: 24, column: 9, scope: !8521)
!8533 = !DILocation(line: 24, column: 12, scope: !8521)
!8534 = !DILocation(line: 24, column: 2, scope: !8521)
!8535 = !DILocation(line: 25, column: 6, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8521, file: !8522, line: 24, column: 21)
!8537 = !DILocation(line: 26, column: 4, scope: !8536)
!8538 = !DILocation(line: 27, column: 4, scope: !8536)
!8539 = distinct !{!8539, !8534, !8540}
!8540 = !DILocation(line: 28, column: 2, scope: !8521)
!8541 = !DILocation(line: 30, column: 5, scope: !8521)
!8542 = !DILocation(line: 32, column: 2, scope: !8521)
!8543 = distinct !DISubprogram(name: "strncpy", scope: !8522, file: !8522, line: 42, type: !8544, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8546)
!8544 = !DISubroutineType(types: !8545)
!8545 = !{!253, !8525, !8526, !249}
!8546 = !{!8547, !8548, !8549, !8550}
!8547 = !DILocalVariable(name: "d", arg: 1, scope: !8543, file: !8522, line: 42, type: !8525)
!8548 = !DILocalVariable(name: "s", arg: 2, scope: !8543, file: !8522, line: 42, type: !8526)
!8549 = !DILocalVariable(name: "n", arg: 3, scope: !8543, file: !8522, line: 42, type: !249)
!8550 = !DILocalVariable(name: "dest", scope: !8543, file: !8522, line: 44, type: !253)
!8551 = !DILocation(line: 0, scope: !8543)
!8552 = !DILocation(line: 46, column: 12, scope: !8543)
!8553 = !DILocation(line: 46, column: 17, scope: !8543)
!8554 = !DILocation(line: 46, column: 20, scope: !8543)
!8555 = !DILocation(line: 46, column: 23, scope: !8543)
!8556 = !DILocation(line: 46, column: 2, scope: !8543)
!8557 = !DILocation(line: 47, column: 6, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8543, file: !8522, line: 46, column: 32)
!8559 = !DILocation(line: 48, column: 4, scope: !8558)
!8560 = !DILocation(line: 49, column: 4, scope: !8558)
!8561 = !DILocation(line: 50, column: 4, scope: !8558)
!8562 = distinct !{!8562, !8556, !8563}
!8563 = !DILocation(line: 51, column: 2, scope: !8543)
!8564 = !DILocation(line: 54, column: 6, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8543, file: !8522, line: 53, column: 16)
!8566 = !DILocation(line: 55, column: 4, scope: !8565)
!8567 = !DILocation(line: 56, column: 4, scope: !8565)
!8568 = !DILocation(line: 53, column: 11, scope: !8543)
!8569 = !DILocation(line: 53, column: 2, scope: !8543)
!8570 = distinct !{!8570, !8569, !8571}
!8571 = !DILocation(line: 57, column: 2, scope: !8543)
!8572 = !DILocation(line: 59, column: 2, scope: !8543)
!8573 = distinct !DISubprogram(name: "strchr", scope: !8522, file: !8522, line: 69, type: !8574, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8576)
!8574 = !DISubroutineType(types: !8575)
!8575 = !{!253, !118, !111}
!8576 = !{!8577, !8578, !8579}
!8577 = !DILocalVariable(name: "s", arg: 1, scope: !8573, file: !8522, line: 69, type: !118)
!8578 = !DILocalVariable(name: "c", arg: 2, scope: !8573, file: !8522, line: 69, type: !111)
!8579 = !DILocalVariable(name: "tmp", scope: !8573, file: !8522, line: 71, type: !120)
!8580 = !DILocation(line: 0, scope: !8573)
!8581 = !DILocation(line: 73, column: 2, scope: !8573)
!8582 = !DILocation(line: 73, column: 10, scope: !8573)
!8583 = !DILocation(line: 73, column: 13, scope: !8573)
!8584 = !DILocation(line: 73, column: 21, scope: !8573)
!8585 = !DILocation(line: 74, column: 4, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8573, file: !8522, line: 73, column: 38)
!8587 = distinct !{!8587, !8581, !8588}
!8588 = !DILocation(line: 75, column: 2, scope: !8573)
!8589 = !DILocation(line: 77, column: 9, scope: !8573)
!8590 = !DILocation(line: 77, column: 2, scope: !8573)
!8591 = distinct !DISubprogram(name: "strrchr", scope: !8522, file: !8522, line: 87, type: !8574, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8592)
!8592 = !{!8593, !8594, !8595}
!8593 = !DILocalVariable(name: "s", arg: 1, scope: !8591, file: !8522, line: 87, type: !118)
!8594 = !DILocalVariable(name: "c", arg: 2, scope: !8591, file: !8522, line: 87, type: !111)
!8595 = !DILocalVariable(name: "match", scope: !8591, file: !8522, line: 89, type: !253)
!8596 = !DILocation(line: 0, scope: !8591)
!8597 = !DILocation(line: 91, column: 2, scope: !8591)
!8598 = !DILocation(line: 92, column: 7, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8600, file: !8522, line: 92, column: 7)
!8600 = distinct !DILexicalBlock(scope: !8591, file: !8522, line: 91, column: 5)
!8601 = !DILocation(line: 92, column: 10, scope: !8599)
!8602 = !DILocation(line: 92, column: 7, scope: !8600)
!8603 = !DILocation(line: 95, column: 13, scope: !8591)
!8604 = !DILocation(line: 95, column: 2, scope: !8600)
!8605 = distinct !{!8605, !8597, !8606}
!8606 = !DILocation(line: 95, column: 15, scope: !8591)
!8607 = !DILocation(line: 97, column: 2, scope: !8591)
!8608 = distinct !DISubprogram(name: "strlen", scope: !8522, file: !8522, line: 107, type: !8609, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8611)
!8609 = !DISubroutineType(types: !8610)
!8610 = !{!249, !118}
!8611 = !{!8612, !8613}
!8612 = !DILocalVariable(name: "s", arg: 1, scope: !8608, file: !8522, line: 107, type: !118)
!8613 = !DILocalVariable(name: "n", scope: !8608, file: !8522, line: 109, type: !249)
!8614 = !DILocation(line: 0, scope: !8608)
!8615 = !DILocation(line: 111, column: 9, scope: !8608)
!8616 = !DILocation(line: 111, column: 12, scope: !8608)
!8617 = !DILocation(line: 111, column: 2, scope: !8608)
!8618 = !DILocation(line: 112, column: 4, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8608, file: !8522, line: 111, column: 21)
!8620 = !DILocation(line: 113, column: 4, scope: !8619)
!8621 = distinct !{!8621, !8617, !8622}
!8622 = !DILocation(line: 114, column: 2, scope: !8608)
!8623 = !DILocation(line: 116, column: 2, scope: !8608)
!8624 = distinct !DISubprogram(name: "strnlen", scope: !8522, file: !8522, line: 126, type: !8625, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8627)
!8625 = !DISubroutineType(types: !8626)
!8626 = !{!249, !118, !249}
!8627 = !{!8628, !8629, !8630}
!8628 = !DILocalVariable(name: "s", arg: 1, scope: !8624, file: !8522, line: 126, type: !118)
!8629 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8624, file: !8522, line: 126, type: !249)
!8630 = !DILocalVariable(name: "n", scope: !8624, file: !8522, line: 128, type: !249)
!8631 = !DILocation(line: 0, scope: !8624)
!8632 = !DILocation(line: 130, column: 9, scope: !8624)
!8633 = !DILocation(line: 130, column: 12, scope: !8624)
!8634 = !DILocation(line: 130, column: 20, scope: !8624)
!8635 = !DILocation(line: 130, column: 2, scope: !8624)
!8636 = !DILocation(line: 131, column: 4, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8624, file: !8522, line: 130, column: 35)
!8638 = !DILocation(line: 132, column: 4, scope: !8637)
!8639 = distinct !{!8639, !8635, !8640}
!8640 = !DILocation(line: 133, column: 2, scope: !8624)
!8641 = !DILocation(line: 135, column: 2, scope: !8624)
!8642 = distinct !DISubprogram(name: "strcmp", scope: !8522, file: !8522, line: 145, type: !8643, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8645)
!8643 = !DISubroutineType(types: !8644)
!8644 = !{!111, !118, !118}
!8645 = !{!8646, !8647}
!8646 = !DILocalVariable(name: "s1", arg: 1, scope: !8642, file: !8522, line: 145, type: !118)
!8647 = !DILocalVariable(name: "s2", arg: 2, scope: !8642, file: !8522, line: 145, type: !118)
!8648 = !DILocation(line: 0, scope: !8642)
!8649 = !DILocation(line: 147, column: 10, scope: !8642)
!8650 = !DILocation(line: 147, column: 17, scope: !8642)
!8651 = !DILocation(line: 147, column: 14, scope: !8642)
!8652 = !DILocation(line: 147, column: 22, scope: !8642)
!8653 = !DILocation(line: 148, column: 5, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8642, file: !8522, line: 147, column: 40)
!8655 = !DILocation(line: 149, column: 5, scope: !8654)
!8656 = distinct !{!8656, !8657, !8658}
!8657 = !DILocation(line: 147, column: 2, scope: !8642)
!8658 = !DILocation(line: 150, column: 2, scope: !8642)
!8659 = !DILocation(line: 152, column: 9, scope: !8642)
!8660 = !DILocation(line: 152, column: 15, scope: !8642)
!8661 = !DILocation(line: 152, column: 13, scope: !8642)
!8662 = !DILocation(line: 152, column: 2, scope: !8642)
!8663 = distinct !DISubprogram(name: "strncmp", scope: !8522, file: !8522, line: 162, type: !8664, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8666)
!8664 = !DISubroutineType(types: !8665)
!8665 = !{!111, !118, !118, !249}
!8666 = !{!8667, !8668, !8669}
!8667 = !DILocalVariable(name: "s1", arg: 1, scope: !8663, file: !8522, line: 162, type: !118)
!8668 = !DILocalVariable(name: "s2", arg: 2, scope: !8663, file: !8522, line: 162, type: !118)
!8669 = !DILocalVariable(name: "n", arg: 3, scope: !8663, file: !8522, line: 162, type: !249)
!8670 = !DILocation(line: 0, scope: !8663)
!8671 = !DILocation(line: 164, column: 17, scope: !8663)
!8672 = !DILocation(line: 164, column: 21, scope: !8663)
!8673 = !DILocation(line: 164, column: 28, scope: !8663)
!8674 = !DILocation(line: 164, column: 25, scope: !8663)
!8675 = !DILocation(line: 164, column: 33, scope: !8663)
!8676 = !DILocation(line: 165, column: 5, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8663, file: !8522, line: 164, column: 51)
!8678 = !DILocation(line: 166, column: 5, scope: !8677)
!8679 = !DILocation(line: 167, column: 4, scope: !8677)
!8680 = distinct !{!8680, !8681, !8682}
!8681 = !DILocation(line: 164, column: 2, scope: !8663)
!8682 = !DILocation(line: 168, column: 2, scope: !8663)
!8683 = !DILocation(line: 170, column: 25, scope: !8663)
!8684 = !DILocation(line: 170, column: 31, scope: !8663)
!8685 = !DILocation(line: 170, column: 29, scope: !8663)
!8686 = !DILocation(line: 170, column: 9, scope: !8663)
!8687 = !DILocation(line: 170, column: 2, scope: !8663)
!8688 = distinct !DISubprogram(name: "strtok_r", scope: !8522, file: !8522, line: 180, type: !8689, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8691)
!8689 = !DISubroutineType(types: !8690)
!8690 = !{!253, !253, !118, !864}
!8691 = !{!8692, !8693, !8694, !8695, !8696}
!8692 = !DILocalVariable(name: "str", arg: 1, scope: !8688, file: !8522, line: 180, type: !253)
!8693 = !DILocalVariable(name: "sep", arg: 2, scope: !8688, file: !8522, line: 180, type: !118)
!8694 = !DILocalVariable(name: "state", arg: 3, scope: !8688, file: !8522, line: 180, type: !864)
!8695 = !DILocalVariable(name: "start", scope: !8688, file: !8522, line: 182, type: !253)
!8696 = !DILocalVariable(name: "end", scope: !8688, file: !8522, line: 182, type: !253)
!8697 = !DILocation(line: 0, scope: !8688)
!8698 = !DILocation(line: 184, column: 10, scope: !8688)
!8699 = !DILocation(line: 184, column: 22, scope: !8688)
!8700 = !DILocation(line: 187, column: 9, scope: !8688)
!8701 = !DILocation(line: 187, column: 16, scope: !8688)
!8702 = !DILocation(line: 187, column: 19, scope: !8688)
!8703 = !DILocation(line: 187, column: 2, scope: !8688)
!8704 = !DILocation(line: 188, column: 8, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8688, file: !8522, line: 187, column: 40)
!8706 = distinct !{!8706, !8703, !8707}
!8707 = !DILocation(line: 189, column: 2, scope: !8688)
!8708 = !DILocation(line: 198, column: 9, scope: !8688)
!8709 = !DILocation(line: 198, column: 18, scope: !8688)
!8710 = !DILocation(line: 198, column: 17, scope: !8688)
!8711 = !DILocation(line: 198, column: 2, scope: !8688)
!8712 = !DILocation(line: 199, column: 6, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8688, file: !8522, line: 198, column: 37)
!8714 = !DILocation(line: 198, column: 14, scope: !8688)
!8715 = distinct !{!8715, !8711, !8716}
!8716 = !DILocation(line: 200, column: 2, scope: !8688)
!8717 = !DILocation(line: 203, column: 8, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !8522, line: 202, column: 20)
!8719 = distinct !DILexicalBlock(scope: !8688, file: !8522, line: 202, column: 6)
!8720 = !DILocation(line: 204, column: 16, scope: !8718)
!8721 = !DILocation(line: 205, column: 2, scope: !8718)
!8722 = !DILocation(line: 210, column: 1, scope: !8688)
!8723 = distinct !DISubprogram(name: "strcat", scope: !8522, file: !8522, line: 212, type: !8523, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8724)
!8724 = !{!8725, !8726}
!8725 = !DILocalVariable(name: "dest", arg: 1, scope: !8723, file: !8522, line: 212, type: !8525)
!8726 = !DILocalVariable(name: "src", arg: 2, scope: !8723, file: !8522, line: 212, type: !8526)
!8727 = !DILocation(line: 0, scope: !8723)
!8728 = !DILocation(line: 214, column: 16, scope: !8723)
!8729 = !DILocation(line: 214, column: 14, scope: !8723)
!8730 = !DILocation(line: 214, column: 2, scope: !8723)
!8731 = !DILocation(line: 215, column: 2, scope: !8723)
!8732 = distinct !DISubprogram(name: "strncat", scope: !8522, file: !8522, line: 218, type: !8544, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8733)
!8733 = !{!8734, !8735, !8736, !8737, !8738}
!8734 = !DILocalVariable(name: "dest", arg: 1, scope: !8732, file: !8522, line: 218, type: !8525)
!8735 = !DILocalVariable(name: "src", arg: 2, scope: !8732, file: !8522, line: 218, type: !8526)
!8736 = !DILocalVariable(name: "n", arg: 3, scope: !8732, file: !8522, line: 219, type: !249)
!8737 = !DILocalVariable(name: "orig_dest", scope: !8732, file: !8522, line: 221, type: !253)
!8738 = !DILocalVariable(name: "len", scope: !8732, file: !8522, line: 222, type: !249)
!8739 = !DILocation(line: 0, scope: !8732)
!8740 = !DILocation(line: 222, column: 15, scope: !8732)
!8741 = !DILocation(line: 224, column: 7, scope: !8732)
!8742 = !DILocation(line: 225, column: 14, scope: !8732)
!8743 = !DILocation(line: 225, column: 19, scope: !8732)
!8744 = !DILocation(line: 225, column: 11, scope: !8732)
!8745 = !DILocation(line: 225, column: 23, scope: !8732)
!8746 = !DILocation(line: 225, column: 28, scope: !8732)
!8747 = !DILocation(line: 225, column: 2, scope: !8732)
!8748 = !DILocation(line: 226, column: 17, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8732, file: !8522, line: 225, column: 38)
!8750 = !DILocation(line: 226, column: 8, scope: !8749)
!8751 = !DILocation(line: 226, column: 11, scope: !8749)
!8752 = distinct !{!8752, !8747, !8753}
!8753 = !DILocation(line: 227, column: 2, scope: !8732)
!8754 = !DILocation(line: 228, column: 8, scope: !8732)
!8755 = !DILocation(line: 230, column: 2, scope: !8732)
!8756 = distinct !DISubprogram(name: "memcmp", scope: !8522, file: !8522, line: 239, type: !8757, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8759)
!8757 = !DISubroutineType(types: !8758)
!8758 = !{!111, !13, !13, !249}
!8759 = !{!8760, !8761, !8762, !8763, !8764}
!8760 = !DILocalVariable(name: "m1", arg: 1, scope: !8756, file: !8522, line: 239, type: !13)
!8761 = !DILocalVariable(name: "m2", arg: 2, scope: !8756, file: !8522, line: 239, type: !13)
!8762 = !DILocalVariable(name: "n", arg: 3, scope: !8756, file: !8522, line: 239, type: !249)
!8763 = !DILocalVariable(name: "c1", scope: !8756, file: !8522, line: 241, type: !118)
!8764 = !DILocalVariable(name: "c2", scope: !8756, file: !8522, line: 242, type: !118)
!8765 = !DILocation(line: 0, scope: !8756)
!8766 = !DILocation(line: 244, column: 7, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8756, file: !8522, line: 244, column: 6)
!8768 = !DILocation(line: 244, column: 6, scope: !8756)
!8769 = !DILocation(line: 248, column: 10, scope: !8756)
!8770 = !DILocation(line: 248, column: 14, scope: !8756)
!8771 = !DILocation(line: 248, column: 19, scope: !8756)
!8772 = !DILocation(line: 248, column: 2, scope: !8756)
!8773 = !DILocation(line: 248, column: 23, scope: !8756)
!8774 = !DILocation(line: 248, column: 30, scope: !8756)
!8775 = !DILocation(line: 248, column: 27, scope: !8756)
!8776 = !DILocation(line: 249, column: 5, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8756, file: !8522, line: 248, column: 36)
!8778 = !DILocation(line: 250, column: 5, scope: !8777)
!8779 = distinct !{!8779, !8772, !8780}
!8780 = !DILocation(line: 251, column: 2, scope: !8756)
!8781 = !DILocation(line: 253, column: 9, scope: !8756)
!8782 = !DILocation(line: 253, column: 15, scope: !8756)
!8783 = !DILocation(line: 253, column: 13, scope: !8756)
!8784 = !DILocation(line: 253, column: 2, scope: !8756)
!8785 = !DILocation(line: 254, column: 1, scope: !8756)
!8786 = distinct !DISubprogram(name: "memmove", scope: !8522, file: !8522, line: 263, type: !8787, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8789)
!8787 = !DISubroutineType(types: !8788)
!8788 = !{!133, !133, !13, !249}
!8789 = !{!8790, !8791, !8792, !8793, !8794}
!8790 = !DILocalVariable(name: "d", arg: 1, scope: !8786, file: !8522, line: 263, type: !133)
!8791 = !DILocalVariable(name: "s", arg: 2, scope: !8786, file: !8522, line: 263, type: !13)
!8792 = !DILocalVariable(name: "n", arg: 3, scope: !8786, file: !8522, line: 263, type: !249)
!8793 = !DILocalVariable(name: "dest", scope: !8786, file: !8522, line: 265, type: !253)
!8794 = !DILocalVariable(name: "src", scope: !8786, file: !8522, line: 266, type: !118)
!8795 = !DILocation(line: 0, scope: !8786)
!8796 = !DILocation(line: 268, column: 21, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8786, file: !8522, line: 268, column: 6)
!8798 = !DILocation(line: 268, column: 28, scope: !8797)
!8799 = !DILocation(line: 268, column: 6, scope: !8786)
!8800 = !DILocation(line: 280, column: 12, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8797, file: !8522, line: 278, column: 9)
!8802 = !DILocation(line: 280, column: 3, scope: !8801)
!8803 = !DILocation(line: 275, column: 5, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !8522, line: 274, column: 17)
!8805 = distinct !DILexicalBlock(scope: !8797, file: !8522, line: 268, column: 33)
!8806 = !DILocation(line: 276, column: 14, scope: !8804)
!8807 = !DILocation(line: 276, column: 4, scope: !8804)
!8808 = !DILocation(line: 276, column: 12, scope: !8804)
!8809 = !DILocation(line: 274, column: 12, scope: !8805)
!8810 = !DILocation(line: 274, column: 3, scope: !8805)
!8811 = distinct !{!8811, !8810, !8812}
!8812 = !DILocation(line: 277, column: 3, scope: !8805)
!8813 = !DILocation(line: 281, column: 12, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8801, file: !8522, line: 280, column: 17)
!8815 = !DILocation(line: 281, column: 10, scope: !8814)
!8816 = !DILocation(line: 282, column: 8, scope: !8814)
!8817 = !DILocation(line: 283, column: 7, scope: !8814)
!8818 = !DILocation(line: 284, column: 5, scope: !8814)
!8819 = distinct !{!8819, !8802, !8820}
!8820 = !DILocation(line: 285, column: 3, scope: !8801)
!8821 = !DILocation(line: 288, column: 2, scope: !8786)
!8822 = distinct !DISubprogram(name: "memcpy", scope: !8522, file: !8522, line: 298, type: !8823, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8827)
!8823 = !DISubroutineType(types: !8824)
!8824 = !{!133, !8825, !8826, !249}
!8825 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !133)
!8826 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8827 = !{!8828, !8829, !8830, !8831, !8832}
!8828 = !DILocalVariable(name: "d", arg: 1, scope: !8822, file: !8522, line: 298, type: !8825)
!8829 = !DILocalVariable(name: "s", arg: 2, scope: !8822, file: !8522, line: 298, type: !8826)
!8830 = !DILocalVariable(name: "n", arg: 3, scope: !8822, file: !8522, line: 298, type: !249)
!8831 = !DILocalVariable(name: "d_byte", scope: !8822, file: !8522, line: 302, type: !140)
!8832 = !DILocalVariable(name: "s_byte", scope: !8822, file: !8522, line: 303, type: !3229)
!8833 = !DILocation(line: 0, scope: !8822)
!8834 = !DILocation(line: 337, column: 11, scope: !8822)
!8835 = !DILocation(line: 337, column: 2, scope: !8822)
!8836 = !DILocation(line: 338, column: 25, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8822, file: !8522, line: 337, column: 16)
!8838 = !DILocation(line: 338, column: 17, scope: !8837)
!8839 = !DILocation(line: 338, column: 11, scope: !8837)
!8840 = !DILocation(line: 338, column: 15, scope: !8837)
!8841 = !DILocation(line: 339, column: 4, scope: !8837)
!8842 = distinct !{!8842, !8835, !8843}
!8843 = !DILocation(line: 340, column: 2, scope: !8822)
!8844 = !DILocation(line: 342, column: 2, scope: !8822)
!8845 = distinct !DISubprogram(name: "memset", scope: !8522, file: !8522, line: 352, type: !8846, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8848)
!8846 = !DISubroutineType(types: !8847)
!8847 = !{!133, !133, !111, !249}
!8848 = !{!8849, !8850, !8851, !8852, !8853}
!8849 = !DILocalVariable(name: "buf", arg: 1, scope: !8845, file: !8522, line: 352, type: !133)
!8850 = !DILocalVariable(name: "c", arg: 2, scope: !8845, file: !8522, line: 352, type: !111)
!8851 = !DILocalVariable(name: "n", arg: 3, scope: !8845, file: !8522, line: 352, type: !249)
!8852 = !DILocalVariable(name: "d_byte", scope: !8845, file: !8522, line: 356, type: !140)
!8853 = !DILocalVariable(name: "c_byte", scope: !8845, file: !8522, line: 357, type: !129)
!8854 = !DILocation(line: 0, scope: !8845)
!8855 = !DILocation(line: 357, column: 25, scope: !8845)
!8856 = !DILocation(line: 389, column: 11, scope: !8845)
!8857 = !DILocation(line: 389, column: 2, scope: !8845)
!8858 = !DILocation(line: 390, column: 11, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8845, file: !8522, line: 389, column: 16)
!8860 = !DILocation(line: 390, column: 15, scope: !8859)
!8861 = !DILocation(line: 391, column: 4, scope: !8859)
!8862 = distinct !{!8862, !8857, !8863}
!8863 = !DILocation(line: 392, column: 2, scope: !8845)
!8864 = !DILocation(line: 394, column: 2, scope: !8845)
!8865 = distinct !DISubprogram(name: "memchr", scope: !8522, file: !8522, line: 404, type: !8866, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8868)
!8866 = !DISubroutineType(types: !8867)
!8867 = !{!133, !13, !111, !249}
!8868 = !{!8869, !8870, !8871, !8872}
!8869 = !DILocalVariable(name: "s", arg: 1, scope: !8865, file: !8522, line: 404, type: !13)
!8870 = !DILocalVariable(name: "c", arg: 2, scope: !8865, file: !8522, line: 404, type: !111)
!8871 = !DILocalVariable(name: "n", arg: 3, scope: !8865, file: !8522, line: 404, type: !249)
!8872 = !DILocalVariable(name: "p", scope: !8873, file: !8522, line: 407, type: !3229)
!8873 = distinct !DILexicalBlock(scope: !8874, file: !8522, line: 406, column: 14)
!8874 = distinct !DILexicalBlock(scope: !8865, file: !8522, line: 406, column: 6)
!8875 = !DILocation(line: 0, scope: !8865)
!8876 = !DILocation(line: 406, column: 8, scope: !8874)
!8877 = !DILocation(line: 406, column: 6, scope: !8865)
!8878 = !DILocation(line: 409, column: 3, scope: !8873)
!8879 = !DILocation(line: 0, scope: !8873)
!8880 = !DILocation(line: 410, column: 8, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8882, file: !8522, line: 410, column: 8)
!8882 = distinct !DILexicalBlock(scope: !8873, file: !8522, line: 409, column: 6)
!8883 = !DILocation(line: 410, column: 13, scope: !8881)
!8884 = !DILocation(line: 410, column: 8, scope: !8882)
!8885 = distinct !{!8885, !8878, !8886}
!8886 = !DILocation(line: 414, column: 20, scope: !8873)
!8887 = !DILocation(line: 417, column: 2, scope: !8865)
!8888 = !DILocation(line: 418, column: 1, scope: !8865)
!8889 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1319, file: !1319, line: 23, type: !4797, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8890)
!8890 = !{!8891}
!8891 = !DILocalVariable(name: "hook", arg: 1, scope: !8889, file: !1319, line: 23, type: !880)
!8892 = !DILocation(line: 0, scope: !8889)
!8893 = !DILocation(line: 25, column: 15, scope: !8889)
!8894 = !DILocation(line: 26, column: 1, scope: !8889)
!8895 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1319, file: !1319, line: 14, type: !881, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8896)
!8896 = !{!8897}
!8897 = !DILocalVariable(name: "c", arg: 1, scope: !8895, file: !1319, line: 14, type: !111)
!8898 = !DILocation(line: 0, scope: !8895)
!8899 = !DILocation(line: 18, column: 2, scope: !8895)
!8900 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1319, file: !1319, line: 28, type: !8901, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8903)
!8901 = !DISubroutineType(types: !8902)
!8902 = !{!111, !111, !1315}
!8903 = !{!8904, !8905}
!8904 = !DILocalVariable(name: "c", arg: 1, scope: !8900, file: !1319, line: 28, type: !111)
!8905 = !DILocalVariable(name: "stream", arg: 2, scope: !8900, file: !1319, line: 28, type: !1315)
!8906 = !DILocation(line: 0, scope: !8900)
!8907 = !DILocation(line: 30, column: 27, scope: !8900)
!8908 = !DILocation(line: 30, column: 50, scope: !8900)
!8909 = !DILocation(line: 30, column: 9, scope: !8900)
!8910 = !DILocation(line: 30, column: 2, scope: !8900)
!8911 = distinct !DISubprogram(name: "fputc", scope: !1319, file: !1319, line: 41, type: !8901, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8912)
!8912 = !{!8913, !8914}
!8913 = !DILocalVariable(name: "c", arg: 1, scope: !8911, file: !1319, line: 41, type: !111)
!8914 = !DILocalVariable(name: "stream", arg: 2, scope: !8911, file: !1319, line: 41, type: !1315)
!8915 = !DILocation(line: 0, scope: !8911)
!8916 = !DILocation(line: 43, column: 9, scope: !8911)
!8917 = !DILocation(line: 43, column: 2, scope: !8911)
!8918 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8919, file: !8919, line: 72, type: !8901, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8920)
!8919 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!8920 = !{!8921, !8922}
!8921 = !DILocalVariable(name: "c", arg: 1, scope: !8918, file: !8919, line: 72, type: !111)
!8922 = !DILocalVariable(name: "stream", arg: 2, scope: !8918, file: !8919, line: 72, type: !1315)
!8923 = !DILocation(line: 0, scope: !8918)
!8924 = !DILocation(line: 81, column: 2, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8918, file: !8919, line: 81, column: 2)
!8926 = !{i64 2151100276}
!8927 = !DILocation(line: 82, column: 9, scope: !8918)
!8928 = !DILocation(line: 82, column: 2, scope: !8918)
!8929 = distinct !DISubprogram(name: "fputs", scope: !1319, file: !1319, line: 46, type: !8930, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8933)
!8930 = !DISubroutineType(types: !8931)
!8931 = !{!111, !8526, !8932}
!8932 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1315)
!8933 = !{!8934, !8935, !8936, !8937}
!8934 = !DILocalVariable(name: "s", arg: 1, scope: !8929, file: !1319, line: 46, type: !8526)
!8935 = !DILocalVariable(name: "stream", arg: 2, scope: !8929, file: !1319, line: 46, type: !8932)
!8936 = !DILocalVariable(name: "len", scope: !8929, file: !1319, line: 48, type: !111)
!8937 = !DILocalVariable(name: "ret", scope: !8929, file: !1319, line: 49, type: !111)
!8938 = !DILocation(line: 0, scope: !8929)
!8939 = !DILocation(line: 48, column: 12, scope: !8929)
!8940 = !DILocation(line: 51, column: 8, scope: !8929)
!8941 = !DILocation(line: 53, column: 13, scope: !8929)
!8942 = !DILocation(line: 53, column: 9, scope: !8929)
!8943 = !DILocation(line: 53, column: 2, scope: !8929)
!8944 = distinct !DISubprogram(name: "fwrite", scope: !1319, file: !1319, line: 99, type: !8945, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8947)
!8945 = !DISubroutineType(types: !8946)
!8946 = !{!249, !8826, !249, !249, !8932}
!8947 = !{!8948, !8949, !8950, !8951}
!8948 = !DILocalVariable(name: "ptr", arg: 1, scope: !8944, file: !1319, line: 99, type: !8826)
!8949 = !DILocalVariable(name: "size", arg: 2, scope: !8944, file: !1319, line: 99, type: !249)
!8950 = !DILocalVariable(name: "nitems", arg: 3, scope: !8944, file: !1319, line: 99, type: !249)
!8951 = !DILocalVariable(name: "stream", arg: 4, scope: !8944, file: !1319, line: 100, type: !8932)
!8952 = !DILocation(line: 0, scope: !8944)
!8953 = !DILocation(line: 102, column: 9, scope: !8944)
!8954 = !DILocation(line: 102, column: 2, scope: !8944)
!8955 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8919, file: !8919, line: 96, type: !8945, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8956)
!8956 = !{!8957, !8958, !8959, !8960}
!8957 = !DILocalVariable(name: "ptr", arg: 1, scope: !8955, file: !8919, line: 96, type: !8826)
!8958 = !DILocalVariable(name: "size", arg: 2, scope: !8955, file: !8919, line: 96, type: !249)
!8959 = !DILocalVariable(name: "nitems", arg: 3, scope: !8955, file: !8919, line: 96, type: !249)
!8960 = !DILocalVariable(name: "stream", arg: 4, scope: !8955, file: !8919, line: 96, type: !8932)
!8961 = !DILocation(line: 0, scope: !8955)
!8962 = !DILocation(line: 107, column: 2, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8955, file: !8919, line: 107, column: 2)
!8964 = !{i64 2151100380}
!8965 = !DILocation(line: 108, column: 9, scope: !8955)
!8966 = !DILocation(line: 108, column: 2, scope: !8955)
!8967 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1319, file: !1319, line: 56, type: !8945, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8968)
!8968 = !{!8969, !8970, !8971, !8972, !8973, !8974, !8975, !8976}
!8969 = !DILocalVariable(name: "ptr", arg: 1, scope: !8967, file: !1319, line: 56, type: !8826)
!8970 = !DILocalVariable(name: "size", arg: 2, scope: !8967, file: !1319, line: 56, type: !249)
!8971 = !DILocalVariable(name: "nitems", arg: 3, scope: !8967, file: !1319, line: 57, type: !249)
!8972 = !DILocalVariable(name: "stream", arg: 4, scope: !8967, file: !1319, line: 57, type: !8932)
!8973 = !DILocalVariable(name: "i", scope: !8967, file: !1319, line: 59, type: !249)
!8974 = !DILocalVariable(name: "j", scope: !8967, file: !1319, line: 60, type: !249)
!8975 = !DILocalVariable(name: "p", scope: !8967, file: !1319, line: 61, type: !3229)
!8976 = !DILabel(scope: !8967, name: "done", file: !1319, line: 82)
!8977 = !DILocation(line: 0, scope: !8967)
!8978 = !DILocation(line: 63, column: 14, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8967, file: !1319, line: 63, column: 6)
!8980 = !DILocation(line: 63, column: 24, scope: !8979)
!8981 = !DILocation(line: 72, column: 3, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8967, file: !1319, line: 70, column: 5)
!8983 = !DILocation(line: 0, scope: !8982)
!8984 = !DILocation(line: 73, column: 8, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !1319, line: 73, column: 8)
!8986 = distinct !DILexicalBlock(scope: !8982, file: !1319, line: 72, column: 6)
!8987 = !DILocation(line: 73, column: 29, scope: !8985)
!8988 = !DILocation(line: 73, column: 27, scope: !8985)
!8989 = !DILocation(line: 73, column: 21, scope: !8985)
!8990 = !DILocation(line: 73, column: 33, scope: !8985)
!8991 = !DILocation(line: 73, column: 8, scope: !8986)
!8992 = !DILocation(line: 76, column: 5, scope: !8986)
!8993 = !DILocation(line: 77, column: 14, scope: !8982)
!8994 = !DILocation(line: 77, column: 3, scope: !8986)
!8995 = distinct !{!8995, !8981, !8996}
!8996 = !DILocation(line: 77, column: 17, scope: !8982)
!8997 = !DILocation(line: 79, column: 4, scope: !8982)
!8998 = !DILocation(line: 80, column: 13, scope: !8967)
!8999 = !DILocation(line: 80, column: 2, scope: !8982)
!9000 = distinct !{!9000, !9001, !9002}
!9001 = !DILocation(line: 70, column: 2, scope: !8967)
!9002 = !DILocation(line: 80, column: 16, scope: !8967)
!9003 = !DILocation(line: 82, column: 1, scope: !8967)
!9004 = !DILocation(line: 83, column: 17, scope: !8967)
!9005 = !DILocation(line: 83, column: 2, scope: !8967)
!9006 = !DILocation(line: 84, column: 1, scope: !8967)
!9007 = distinct !DISubprogram(name: "puts", scope: !1319, file: !1319, line: 106, type: !9008, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !9010)
!9008 = !DISubroutineType(types: !9009)
!9009 = !{!111, !118}
!9010 = !{!9011}
!9011 = !DILocalVariable(name: "s", arg: 1, scope: !9007, file: !1319, line: 106, type: !118)
!9012 = !DILocation(line: 0, scope: !9007)
!9013 = !DILocation(line: 108, column: 6, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9007, file: !1319, line: 108, column: 6)
!9015 = !DILocation(line: 108, column: 23, scope: !9014)
!9016 = !DILocation(line: 108, column: 6, scope: !9007)
!9017 = !DILocation(line: 112, column: 9, scope: !9007)
!9018 = !DILocation(line: 112, column: 29, scope: !9007)
!9019 = !DILocation(line: 112, column: 2, scope: !9007)
!9020 = !DILocation(line: 113, column: 1, scope: !9007)
!9021 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !1326, file: !1326, line: 12, type: !9022, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9028)
!9022 = !DISubroutineType(types: !9023)
!9023 = !{!9024, !207}
!9024 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !203, line: 67, baseType: !9025)
!9025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !203, line: 65, size: 64, elements: !9026)
!9026 = !{!9027}
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9025, file: !203, line: 66, baseType: !202, size: 64)
!9028 = !{!9029, !9030}
!9029 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9021, file: !1326, line: 12, type: !207)
!9030 = !DILocalVariable(name: "now_ticks", scope: !9021, file: !1326, line: 14, type: !204)
!9031 = !DILocation(line: 0, scope: !9021)
!9032 = !DILocation(line: 14, column: 22, scope: !9021)
!9033 = !DILocation(line: 16, column: 9, scope: !9021)
!9034 = !DILocation(line: 17, column: 1, scope: !9021)
!9035 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !1326, file: !1326, line: 103, type: !9036, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9178)
!9036 = !DISubroutineType(types: !9037)
!9037 = !{!111, !9038, !13, !9024}
!9038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9039, size: 32)
!9039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9040)
!9040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !214, line: 29, size: 224, elements: !9041)
!9041 = !{!9042, !9043, !9044, !9045, !9046, !9047, !9150}
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9040, file: !214, line: 32, baseType: !269, size: 32)
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9040, file: !214, line: 35, baseType: !271, size: 16, offset: 32)
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9040, file: !214, line: 40, baseType: !275, size: 32, offset: 64)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9040, file: !214, line: 45, baseType: !275, size: 32, offset: 96)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9040, file: !214, line: 51, baseType: !278, size: 32, offset: 128)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9040, file: !214, line: 56, baseType: !9048, size: 32, offset: 160)
!9048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9049, size: 32)
!9049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !221, line: 2720, size: 160, elements: !9050)
!9050 = !{!9051, !9070, !9148, !9149}
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9049, file: !221, line: 2722, baseType: !9052, size: 64)
!9052 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !9053)
!9053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !9054)
!9054 = !{!9055}
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9053, file: !225, line: 232, baseType: !9056, size: 64)
!9056 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !9057)
!9057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !9058)
!9058 = !{!9059, !9065}
!9059 = !DIDerivedType(tag: DW_TAG_member, scope: !9057, file: !230, line: 38, baseType: !9060, size: 32)
!9060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9057, file: !230, line: 38, size: 32, elements: !9061)
!9061 = !{!9062, !9064}
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9060, file: !230, line: 39, baseType: !9063, size: 32)
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9057, size: 32)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9060, file: !230, line: 40, baseType: !9063, size: 32)
!9065 = !DIDerivedType(tag: DW_TAG_member, scope: !9057, file: !230, line: 42, baseType: !9066, size: 32, offset: 32)
!9066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9057, file: !230, line: 42, size: 32, elements: !9067)
!9067 = !{!9068, !9069}
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9066, file: !230, line: 43, baseType: !9063, size: 32)
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9066, file: !230, line: 44, baseType: !9063, size: 32)
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9049, file: !221, line: 2724, baseType: !9071, size: 32, offset: 64)
!9071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9072, size: 32)
!9072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !9073)
!9073 = !{!9074, !9114, !9126, !9127, !9128, !9129, !9130, !9143}
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9072, file: !290, line: 247, baseType: !9075, size: 384)
!9075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !9076)
!9076 = !{!9077, !9088, !9090, !9091, !9092, !9101, !9102, !9103}
!9077 = !DIDerivedType(tag: DW_TAG_member, scope: !9075, file: !290, line: 60, baseType: !9078, size: 64)
!9078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9075, file: !290, line: 60, size: 64, elements: !9079)
!9079 = !{!9080, !9082}
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9078, file: !290, line: 61, baseType: !9081, size: 64)
!9081 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !9057)
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9078, file: !290, line: 62, baseType: !9083, size: 64)
!9083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !9084)
!9084 = !{!9085}
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9083, file: !302, line: 50, baseType: !9086, size: 64)
!9086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9087, size: 64, elements: !307)
!9087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9083, size: 32)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9075, file: !290, line: 68, baseType: !9089, size: 32, offset: 64)
!9089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9052, size: 32)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9075, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9075, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!9092 = !DIDerivedType(tag: DW_TAG_member, scope: !9075, file: !290, line: 90, baseType: !9093, size: 16, offset: 112)
!9093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9075, file: !290, line: 90, size: 16, elements: !9094)
!9094 = !{!9095, !9100}
!9095 = !DIDerivedType(tag: DW_TAG_member, scope: !9093, file: !290, line: 91, baseType: !9096, size: 16)
!9096 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9093, file: !290, line: 91, size: 16, elements: !9097)
!9097 = !{!9098, !9099}
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9096, file: !290, line: 96, baseType: !320, size: 8)
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9096, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9093, file: !290, line: 100, baseType: !272, size: 16)
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9075, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9075, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9075, file: !290, line: 131, baseType: !9104, size: 192, offset: 192)
!9104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !9105)
!9105 = !{!9106, !9107, !9113}
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9104, file: !225, line: 245, baseType: !9081, size: 64)
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9104, file: !225, line: 246, baseType: !9108, size: 32, offset: 64)
!9108 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !9109)
!9109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9110, size: 32)
!9110 = !DISubroutineType(types: !9111)
!9111 = !{null, !9112}
!9112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9104, size: 32)
!9113 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9104, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9072, file: !290, line: 250, baseType: !9115, size: 288, offset: 384)
!9115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !9116)
!9116 = !{!9117, !9118, !9119, !9120, !9121, !9122, !9123, !9124, !9125}
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9115, file: !339, line: 26, baseType: !158, size: 32)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9115, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!9119 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9115, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9115, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!9121 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9115, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9115, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9115, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9115, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9115, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9072, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9072, file: !290, line: 256, baseType: !9052, size: 64, offset: 704)
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9072, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9072, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9072, file: !290, line: 325, baseType: !9131, size: 32, offset: 1056)
!9131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9132, size: 32)
!9132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !9133)
!9133 = !{!9134, !9140, !9141}
!9134 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9132, file: !221, line: 5074, baseType: !9135, size: 96)
!9135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !9136)
!9136 = !{!9137, !9138, !9139}
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9135, file: !363, line: 57, baseType: !366, size: 32)
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9135, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9135, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9132, file: !221, line: 5075, baseType: !9052, size: 64, offset: 96)
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9132, file: !221, line: 5076, baseType: !9142, offset: 160)
!9142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9072, file: !290, line: 343, baseType: !9144, size: 64, offset: 1088)
!9144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !9145)
!9145 = !{!9146, !9147}
!9146 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9144, file: !339, line: 63, baseType: !158, size: 32)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9144, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9049, file: !221, line: 2727, baseType: !158, size: 32, offset: 96)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9049, file: !221, line: 2730, baseType: !111, size: 32, offset: 128)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9040, file: !214, line: 67, baseType: !9151, size: 32, offset: 192)
!9151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9152, size: 32)
!9152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9153)
!9153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9154, size: 32)
!9154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9155)
!9155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !214, line: 85, size: 96, elements: !9156)
!9156 = !{!9157, !9158, !9173}
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9155, file: !214, line: 91, baseType: !131, size: 8)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9155, file: !214, line: 93, baseType: !9159, size: 32, offset: 32)
!9159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9160)
!9160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9161, size: 32)
!9161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !221, line: 4204, size: 320, elements: !9162)
!9162 = !{!9163, !9164, !9165, !9166, !9167, !9168, !9169, !9170, !9171, !9172}
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9161, file: !221, line: 4206, baseType: !9052, size: 64)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9161, file: !221, line: 4208, baseType: !9142, offset: 64)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9161, file: !221, line: 4210, baseType: !249, size: 32, offset: 64)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9161, file: !221, line: 4212, baseType: !158, size: 32, offset: 96)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9161, file: !221, line: 4214, baseType: !253, size: 32, offset: 128)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9161, file: !221, line: 4216, baseType: !253, size: 32, offset: 160)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9161, file: !221, line: 4218, baseType: !253, size: 32, offset: 192)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9161, file: !221, line: 4220, baseType: !253, size: 32, offset: 224)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9161, file: !221, line: 4222, baseType: !158, size: 32, offset: 256)
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9161, file: !221, line: 4227, baseType: !128, size: 8, offset: 288)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9155, file: !214, line: 96, baseType: !9174, size: 32, offset: 64)
!9174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9175)
!9175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9176, size: 32)
!9176 = !DISubroutineType(types: !9177)
!9177 = !{null, !9038}
!9178 = !{!9179, !9180, !9181, !9182, !9183}
!9179 = !DILocalVariable(name: "chan", arg: 1, scope: !9035, file: !1326, line: 103, type: !9038)
!9180 = !DILocalVariable(name: "msg", arg: 2, scope: !9035, file: !1326, line: 103, type: !13)
!9181 = !DILocalVariable(name: "timeout", arg: 3, scope: !9035, file: !1326, line: 103, type: !9024)
!9182 = !DILocalVariable(name: "err", scope: !9035, file: !1326, line: 105, type: !111)
!9183 = !DILocalVariable(name: "end_ticks", scope: !9035, file: !1326, line: 106, type: !207)
!9184 = !DILocation(line: 0, scope: !9035)
!9185 = !DILocation(line: 106, column: 23, scope: !9035)
!9186 = !DILocation(line: 112, column: 12, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9035, file: !1326, line: 112, column: 6)
!9188 = !DILocation(line: 112, column: 22, scope: !9187)
!9189 = !DILocation(line: 112, column: 30, scope: !9187)
!9190 = !DILocation(line: 112, column: 61, scope: !9187)
!9191 = !DILocation(line: 112, column: 55, scope: !9187)
!9192 = !DILocation(line: 112, column: 34, scope: !9187)
!9193 = !DILocation(line: 112, column: 6, scope: !9035)
!9194 = !DILocation(line: 116, column: 27, scope: !9035)
!9195 = !DILocation(line: 116, column: 8, scope: !9035)
!9196 = !DILocation(line: 117, column: 6, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9035, file: !1326, line: 117, column: 6)
!9198 = !DILocation(line: 117, column: 6, scope: !9035)
!9199 = !DILocation(line: 121, column: 15, scope: !9035)
!9200 = !DILocation(line: 121, column: 35, scope: !9035)
!9201 = !DILocation(line: 121, column: 29, scope: !9035)
!9202 = !DILocation(line: 121, column: 2, scope: !9035)
!9203 = !DILocation(line: 123, column: 8, scope: !9035)
!9204 = !DILocation(line: 125, column: 23, scope: !9035)
!9205 = !DILocation(line: 125, column: 2, scope: !9035)
!9206 = !DILocation(line: 127, column: 2, scope: !9035)
!9207 = !DILocation(line: 128, column: 1, scope: !9035)
!9208 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3900, file: !3900, line: 927, type: !9209, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9211)
!9209 = !DISubroutineType(types: !9210)
!9210 = !{!111, !9048, !9024}
!9211 = !{!9212, !9213}
!9212 = !DILocalVariable(name: "mutex", arg: 1, scope: !9208, file: !3900, line: 927, type: !9048)
!9213 = !DILocalVariable(name: "timeout", arg: 2, scope: !9208, file: !3900, line: 927, type: !9024)
!9214 = !DILocation(line: 0, scope: !9208)
!9215 = !DILocation(line: 936, column: 2, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9208, file: !3900, line: 936, column: 2)
!9217 = !{i64 2151042017}
!9218 = !DILocation(line: 937, column: 9, scope: !9208)
!9219 = !DILocation(line: 937, column: 2, scope: !9208)
!9220 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !1326, file: !1326, line: 66, type: !9221, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9223)
!9221 = !DISubroutineType(types: !9222)
!9222 = !{!111, !9038, !207}
!9223 = !{!9224, !9225, !9226, !9227, !9228, !9230}
!9224 = !DILocalVariable(name: "chan", arg: 1, scope: !9220, file: !1326, line: 66, type: !9038)
!9225 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9220, file: !1326, line: 66, type: !207)
!9226 = !DILocalVariable(name: "last_error", scope: !9220, file: !1326, line: 68, type: !111)
!9227 = !DILocalVariable(name: "err", scope: !9220, file: !1326, line: 68, type: !111)
!9228 = !DILocalVariable(name: "obs", scope: !9229, file: !1326, line: 70, type: !9151)
!9229 = distinct !DILexicalBlock(scope: !9220, file: !1326, line: 70, column: 2)
!9230 = !DILocalVariable(name: "obs", scope: !9231, file: !1326, line: 81, type: !9151)
!9231 = distinct !DILexicalBlock(scope: !9220, file: !1326, line: 81, column: 2)
!9232 = !DILocation(line: 0, scope: !9220)
!9233 = !DILocation(line: 70, column: 54, scope: !9229)
!9234 = !DILocation(line: 0, scope: !9229)
!9235 = !DILocation(line: 70, column: 65, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9229, file: !1326, line: 70, column: 2)
!9237 = !DILocation(line: 70, column: 70, scope: !9236)
!9238 = !DILocation(line: 70, column: 2, scope: !9229)
!9239 = !DILocation(line: 81, column: 54, scope: !9231)
!9240 = !DILocation(line: 81, column: 65, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9231, file: !1326, line: 81, column: 2)
!9242 = !DILocation(line: 0, scope: !9231)
!9243 = !DILocation(line: 81, column: 70, scope: !9241)
!9244 = !DILocation(line: 81, column: 2, scope: !9231)
!9245 = !DILocation(line: 71, column: 15, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9247, file: !1326, line: 71, column: 7)
!9247 = distinct !DILexicalBlock(scope: !9236, file: !1326, line: 70, column: 86)
!9248 = !DILocation(line: 71, column: 23, scope: !9246)
!9249 = !DILocation(line: 71, column: 35, scope: !9246)
!9250 = !DILocation(line: 71, column: 44, scope: !9246)
!9251 = !DILocation(line: 71, column: 7, scope: !9247)
!9252 = !DILocation(line: 72, column: 4, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9246, file: !1326, line: 71, column: 54)
!9254 = !DILocation(line: 73, column: 3, scope: !9253)
!9255 = !DILocation(line: 70, column: 79, scope: !9236)
!9256 = distinct !{!9256, !9238, !9257}
!9257 = !DILocation(line: 74, column: 2, scope: !9229)
!9258 = !DILocation(line: 100, column: 2, scope: !9220)
!9259 = !DILocation(line: 82, column: 15, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9261, file: !1326, line: 82, column: 7)
!9261 = distinct !DILexicalBlock(scope: !9241, file: !1326, line: 81, column: 86)
!9262 = !DILocation(line: 82, column: 23, scope: !9260)
!9263 = !DILocation(line: 82, column: 35, scope: !9260)
!9264 = !DILocation(line: 82, column: 41, scope: !9260)
!9265 = !DILocation(line: 82, column: 7, scope: !9261)
!9266 = !DILocation(line: 83, column: 43, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9260, file: !1326, line: 82, column: 51)
!9268 = !DILocation(line: 83, column: 10, scope: !9267)
!9269 = !DILocation(line: 86, column: 8, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9267, file: !1326, line: 86, column: 8)
!9271 = !DILocation(line: 86, column: 8, scope: !9267)
!9272 = !DILocation(line: 87, column: 5, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !1326, line: 87, column: 5)
!9274 = distinct !DILexicalBlock(scope: !9275, file: !1326, line: 87, column: 5)
!9275 = distinct !DILexicalBlock(scope: !9276, file: !1326, line: 87, column: 5)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !1326, line: 87, column: 5)
!9277 = distinct !DILexicalBlock(scope: !9270, file: !1326, line: 86, column: 13)
!9278 = !DILocation(line: 90, column: 4, scope: !9277)
!9279 = !DILocation(line: 81, column: 79, scope: !9241)
!9280 = distinct !{!9280, !9244, !9281}
!9281 = !DILocation(line: 92, column: 2, scope: !9231)
!9282 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3900, file: !3900, line: 944, type: !9283, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9285)
!9283 = !DISubroutineType(types: !9284)
!9284 = !{!111, !9048}
!9285 = !{!9286}
!9286 = !DILocalVariable(name: "mutex", arg: 1, scope: !9282, file: !3900, line: 944, type: !9048)
!9287 = !DILocation(line: 0, scope: !9282)
!9288 = !DILocation(line: 952, column: 2, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9282, file: !3900, line: 952, column: 2)
!9290 = !{i64 2151042085}
!9291 = !DILocation(line: 953, column: 9, scope: !9282)
!9292 = !DILocation(line: 953, column: 2, scope: !9282)
!9293 = distinct !DISubprogram(name: "k_msgq_put", scope: !3900, file: !3900, line: 1129, type: !9294, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9296)
!9294 = !DISubroutineType(types: !9295)
!9295 = !{!111, !9160, !13, !9024}
!9296 = !{!9297, !9298, !9299}
!9297 = !DILocalVariable(name: "msgq", arg: 1, scope: !9293, file: !3900, line: 1129, type: !9160)
!9298 = !DILocalVariable(name: "data", arg: 2, scope: !9293, file: !3900, line: 1129, type: !13)
!9299 = !DILocalVariable(name: "timeout", arg: 3, scope: !9293, file: !3900, line: 1129, type: !9024)
!9300 = !DILocation(line: 0, scope: !9293)
!9301 = !DILocation(line: 1139, column: 2, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9293, file: !3900, line: 1139, column: 2)
!9303 = !{i64 2151042833}
!9304 = !DILocation(line: 1140, column: 9, scope: !9293)
!9305 = !DILocation(line: 1140, column: 2, scope: !9293)
!9306 = distinct !DISubprogram(name: "zbus_chan_read", scope: !1326, file: !1326, line: 130, type: !9307, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9309)
!9307 = !DISubroutineType(types: !9308)
!9308 = !{!111, !9038, !133, !9024}
!9309 = !{!9310, !9311, !9312, !9313}
!9310 = !DILocalVariable(name: "chan", arg: 1, scope: !9306, file: !1326, line: 130, type: !9038)
!9311 = !DILocalVariable(name: "msg", arg: 2, scope: !9306, file: !1326, line: 130, type: !133)
!9312 = !DILocalVariable(name: "timeout", arg: 3, scope: !9306, file: !1326, line: 130, type: !9024)
!9313 = !DILocalVariable(name: "err", scope: !9306, file: !1326, line: 132, type: !111)
!9314 = !DILocation(line: 0, scope: !9306)
!9315 = !DILocation(line: 138, column: 27, scope: !9306)
!9316 = !DILocation(line: 138, column: 8, scope: !9306)
!9317 = !DILocation(line: 139, column: 6, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9306, file: !1326, line: 139, column: 6)
!9319 = !DILocation(line: 139, column: 6, scope: !9306)
!9320 = !DILocation(line: 143, column: 20, scope: !9306)
!9321 = !DILocation(line: 143, column: 35, scope: !9306)
!9322 = !DILocation(line: 143, column: 29, scope: !9306)
!9323 = !DILocation(line: 143, column: 2, scope: !9306)
!9324 = !DILocation(line: 145, column: 30, scope: !9306)
!9325 = !DILocation(line: 145, column: 9, scope: !9306)
!9326 = !DILocation(line: 145, column: 2, scope: !9306)
!9327 = !DILocation(line: 146, column: 1, scope: !9306)
!9328 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !1326, file: !1326, line: 148, type: !9329, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9331)
!9329 = !DISubroutineType(types: !9330)
!9330 = !{!111, !9038, !9024}
!9331 = !{!9332, !9333, !9334, !9335}
!9332 = !DILocalVariable(name: "chan", arg: 1, scope: !9328, file: !1326, line: 148, type: !9038)
!9333 = !DILocalVariable(name: "timeout", arg: 2, scope: !9328, file: !1326, line: 148, type: !9024)
!9334 = !DILocalVariable(name: "err", scope: !9328, file: !1326, line: 150, type: !111)
!9335 = !DILocalVariable(name: "end_ticks", scope: !9328, file: !1326, line: 151, type: !207)
!9336 = !DILocation(line: 0, scope: !9328)
!9337 = !DILocation(line: 151, column: 23, scope: !9328)
!9338 = !DILocation(line: 156, column: 27, scope: !9328)
!9339 = !DILocation(line: 156, column: 8, scope: !9328)
!9340 = !DILocation(line: 157, column: 6, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9328, file: !1326, line: 157, column: 6)
!9342 = !DILocation(line: 157, column: 6, scope: !9328)
!9343 = !DILocation(line: 161, column: 8, scope: !9328)
!9344 = !DILocation(line: 163, column: 23, scope: !9328)
!9345 = !DILocation(line: 163, column: 2, scope: !9328)
!9346 = !DILocation(line: 165, column: 2, scope: !9328)
!9347 = !DILocation(line: 166, column: 1, scope: !9328)
!9348 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !1326, file: !1326, line: 168, type: !9329, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9349)
!9349 = !{!9350, !9351, !9352}
!9350 = !DILocalVariable(name: "chan", arg: 1, scope: !9348, file: !1326, line: 168, type: !9038)
!9351 = !DILocalVariable(name: "timeout", arg: 2, scope: !9348, file: !1326, line: 168, type: !9024)
!9352 = !DILocalVariable(name: "err", scope: !9348, file: !1326, line: 173, type: !111)
!9353 = !DILocation(line: 0, scope: !9348)
!9354 = !DILocation(line: 173, column: 31, scope: !9348)
!9355 = !DILocation(line: 173, column: 12, scope: !9348)
!9356 = !DILocation(line: 180, column: 1, scope: !9348)
!9357 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !1326, file: !1326, line: 182, type: !9358, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9360)
!9358 = !DISubroutineType(types: !9359)
!9359 = !{!111, !9038}
!9360 = !{!9361, !9362}
!9361 = !DILocalVariable(name: "chan", arg: 1, scope: !9357, file: !1326, line: 182, type: !9038)
!9362 = !DILocalVariable(name: "err", scope: !9357, file: !1326, line: 187, type: !111)
!9363 = !DILocation(line: 0, scope: !9357)
!9364 = !DILocation(line: 187, column: 33, scope: !9357)
!9365 = !DILocation(line: 187, column: 12, scope: !9357)
!9366 = !DILocation(line: 189, column: 2, scope: !9357)
!9367 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !1326, file: !1326, line: 192, type: !9368, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9371)
!9368 = !DISubroutineType(types: !9369)
!9369 = !{!111, !9153, !9370, !9024}
!9370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9038, size: 32)
!9371 = !{!9372, !9373, !9374}
!9372 = !DILocalVariable(name: "sub", arg: 1, scope: !9367, file: !1326, line: 192, type: !9153)
!9373 = !DILocalVariable(name: "chan", arg: 2, scope: !9367, file: !1326, line: 192, type: !9370)
!9374 = !DILocalVariable(name: "timeout", arg: 3, scope: !9367, file: !1326, line: 193, type: !9024)
!9375 = !DILocation(line: 0, scope: !9367)
!9376 = !DILocation(line: 199, column: 11, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9367, file: !1326, line: 199, column: 6)
!9378 = !DILocation(line: 199, column: 17, scope: !9377)
!9379 = !DILocation(line: 199, column: 6, scope: !9367)
!9380 = !DILocation(line: 203, column: 32, scope: !9367)
!9381 = !DILocation(line: 203, column: 9, scope: !9367)
!9382 = !DILocation(line: 203, column: 2, scope: !9367)
!9383 = !DILocation(line: 204, column: 1, scope: !9367)
!9384 = distinct !DISubprogram(name: "k_msgq_get", scope: !3900, file: !3900, line: 1147, type: !9385, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1322, retainedNodes: !9387)
!9385 = !DISubroutineType(types: !9386)
!9386 = !{!111, !9160, !133, !9024}
!9387 = !{!9388, !9389, !9390}
!9388 = !DILocalVariable(name: "msgq", arg: 1, scope: !9384, file: !3900, line: 1147, type: !9160)
!9389 = !DILocalVariable(name: "data", arg: 2, scope: !9384, file: !3900, line: 1147, type: !133)
!9390 = !DILocalVariable(name: "timeout", arg: 3, scope: !9384, file: !3900, line: 1147, type: !9024)
!9391 = !DILocation(line: 0, scope: !9384)
!9392 = !DILocation(line: 1157, column: 2, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9384, file: !3900, line: 1157, column: 2)
!9394 = !{i64 2151042901}
!9395 = !DILocation(line: 1158, column: 9, scope: !9384)
!9396 = !DILocation(line: 1158, column: 2, scope: !9384)
!9397 = distinct !DISubprogram(name: "uart_console_init", scope: !1419, file: !1419, line: 588, type: !1366, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9398)
!9398 = !{!9399}
!9399 = !DILocalVariable(name: "arg", arg: 1, scope: !9397, file: !1419, line: 588, type: !1345)
!9400 = !DILocation(line: 0, scope: !9397)
!9401 = !DILocation(line: 593, column: 7, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9397, file: !1419, line: 593, column: 6)
!9403 = !DILocation(line: 593, column: 6, scope: !9397)
!9404 = !DILocation(line: 597, column: 2, scope: !9397)
!9405 = !DILocation(line: 599, column: 2, scope: !9397)
!9406 = !DILocation(line: 600, column: 1, scope: !9397)
!9407 = distinct !DISubprogram(name: "device_is_ready", scope: !9408, file: !9408, line: 47, type: !9409, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9411)
!9408 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/uart_bridge")
!9409 = !DISubroutineType(types: !9410)
!9410 = !{!131, !1345}
!9411 = !{!9412}
!9412 = !DILocalVariable(name: "dev", arg: 1, scope: !9407, file: !9408, line: 47, type: !1345)
!9413 = !DILocation(line: 0, scope: !9407)
!9414 = !DILocation(line: 55, column: 2, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9407, file: !9408, line: 55, column: 2)
!9416 = !{i64 2151369950}
!9417 = !DILocation(line: 56, column: 9, scope: !9407)
!9418 = !DILocation(line: 56, column: 2, scope: !9407)
!9419 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1419, file: !1419, line: 573, type: !416, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !247)
!9420 = !DILocation(line: 576, column: 2, scope: !9419)
!9421 = !DILocation(line: 579, column: 2, scope: !9419)
!9422 = !DILocation(line: 581, column: 1, scope: !9419)
!9423 = distinct !DISubprogram(name: "console_out", scope: !1419, file: !1419, line: 77, type: !881, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9424)
!9424 = !{!9425}
!9425 = !DILocalVariable(name: "c", arg: 1, scope: !9423, file: !1419, line: 77, type: !111)
!9426 = !DILocation(line: 0, scope: !9423)
!9427 = !DILocation(line: 89, column: 11, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9423, file: !1419, line: 89, column: 6)
!9429 = !DILocation(line: 89, column: 6, scope: !9423)
!9430 = !DILocation(line: 90, column: 3, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9428, file: !1419, line: 89, column: 17)
!9432 = !DILocation(line: 91, column: 2, scope: !9431)
!9433 = !DILocation(line: 92, column: 34, scope: !9423)
!9434 = !DILocation(line: 92, column: 2, scope: !9423)
!9435 = !DILocation(line: 94, column: 2, scope: !9423)
!9436 = distinct !DISubprogram(name: "uart_poll_out", scope: !3801, file: !3801, line: 95, type: !1362, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9437)
!9437 = !{!9438, !9439}
!9438 = !DILocalVariable(name: "dev", arg: 1, scope: !9436, file: !3801, line: 95, type: !1345)
!9439 = !DILocalVariable(name: "out_char", arg: 2, scope: !9436, file: !3801, line: 95, type: !129)
!9440 = !DILocation(line: 0, scope: !9436)
!9441 = !DILocation(line: 105, column: 2, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9436, file: !3801, line: 105, column: 2)
!9443 = !{i64 2151453195}
!9444 = !DILocation(line: 106, column: 2, scope: !9436)
!9445 = !DILocation(line: 107, column: 1, scope: !9436)
!9446 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !105, file: !105, line: 574, type: !1362, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9447)
!9447 = !{!9448, !9449, !9450}
!9448 = !DILocalVariable(name: "dev", arg: 1, scope: !9446, file: !105, line: 574, type: !1345)
!9449 = !DILocalVariable(name: "out_char", arg: 2, scope: !9446, file: !105, line: 575, type: !129)
!9450 = !DILocalVariable(name: "api", scope: !9446, file: !105, line: 577, type: !1337)
!9451 = !DILocation(line: 0, scope: !9446)
!9452 = !DILocation(line: 578, column: 40, scope: !9446)
!9453 = !DILocation(line: 580, column: 7, scope: !9446)
!9454 = !DILocation(line: 580, column: 2, scope: !9446)
!9455 = !DILocation(line: 581, column: 1, scope: !9446)
!9456 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !115, file: !115, line: 730, type: !9409, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9457)
!9457 = !{!9458}
!9458 = !DILocalVariable(name: "dev", arg: 1, scope: !9456, file: !115, line: 730, type: !1345)
!9459 = !DILocation(line: 0, scope: !9456)
!9460 = !DILocation(line: 732, column: 9, scope: !9456)
!9461 = !DILocation(line: 732, column: 2, scope: !9456)
!9462 = distinct !DISubprogram(name: "uart_register_input", scope: !1419, file: !1419, line: 560, type: !9463, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9508)
!9463 = !DISubroutineType(types: !9464)
!9464 = !{null, !9465, !9465, !9505}
!9465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9466, size: 32)
!9466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !221, line: 2208, size: 128, elements: !9467)
!9467 = !{!9468}
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9466, file: !221, line: 2209, baseType: !9469, size: 128)
!9469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !221, line: 1709, size: 128, elements: !9470)
!9470 = !{!9471, !9484, !9486}
!9471 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9469, file: !221, line: 1710, baseType: !9472, size: 64)
!9472 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9473, line: 46, baseType: !9474)
!9473 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9473, line: 41, size: 64, elements: !9475)
!9475 = !{!9476, !9483}
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9474, file: !9473, line: 42, baseType: !9477, size: 32)
!9477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9478, size: 32)
!9478 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9473, line: 39, baseType: !9479)
!9479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9473, line: 35, size: 32, elements: !9480)
!9480 = !{!9481}
!9481 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9479, file: !9473, line: 36, baseType: !9482, size: 32)
!9482 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9473, line: 32, baseType: !158)
!9483 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9474, file: !9473, line: 43, baseType: !9477, size: 32, offset: 32)
!9484 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9469, file: !221, line: 1711, baseType: !9485, offset: 64)
!9485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!9486 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9469, file: !221, line: 1712, baseType: !9487, size: 64, offset: 64)
!9487 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !9488)
!9488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !9489)
!9489 = !{!9490}
!9490 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9488, file: !225, line: 232, baseType: !9491, size: 64)
!9491 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !9492)
!9492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !9493)
!9493 = !{!9494, !9500}
!9494 = !DIDerivedType(tag: DW_TAG_member, scope: !9492, file: !230, line: 38, baseType: !9495, size: 32)
!9495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9492, file: !230, line: 38, size: 32, elements: !9496)
!9496 = !{!9497, !9499}
!9497 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9495, file: !230, line: 39, baseType: !9498, size: 32)
!9498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9492, size: 32)
!9499 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9495, file: !230, line: 40, baseType: !9498, size: 32)
!9500 = !DIDerivedType(tag: DW_TAG_member, scope: !9492, file: !230, line: 42, baseType: !9501, size: 32, offset: 32)
!9501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9492, file: !230, line: 42, size: 32, elements: !9502)
!9502 = !{!9503, !9504}
!9503 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9501, file: !230, line: 43, baseType: !9498, size: 32)
!9504 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9501, file: !230, line: 44, baseType: !9498, size: 32)
!9505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9506, size: 32)
!9506 = !DISubroutineType(types: !9507)
!9507 = !{!128, !253, !128}
!9508 = !{!9509, !9510, !9511}
!9509 = !DILocalVariable(name: "avail", arg: 1, scope: !9462, file: !1419, line: 560, type: !9465)
!9510 = !DILocalVariable(name: "lines", arg: 2, scope: !9462, file: !1419, line: 560, type: !9465)
!9511 = !DILocalVariable(name: "completion", arg: 3, scope: !9462, file: !1419, line: 561, type: !9505)
!9512 = !DILocation(line: 0, scope: !9462)
!9513 = !DILocation(line: 566, column: 1, scope: !9462)
!9514 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1532, file: !1532, line: 40, type: !1454, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9515)
!9515 = !{!9516, !9517, !9518, !9519, !9521, !9522, !9527, !9528}
!9516 = !DILocalVariable(name: "port", arg: 1, scope: !9514, file: !1532, line: 40, type: !1456)
!9517 = !DILocalVariable(name: "pin", arg: 2, scope: !9514, file: !1532, line: 40, type: !1471)
!9518 = !DILocalVariable(name: "flags", arg: 3, scope: !9514, file: !1532, line: 41, type: !1472)
!9519 = !DILocalVariable(name: "config", scope: !9514, file: !1532, line: 43, type: !9520)
!9520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!9521 = !DILocalVariable(name: "base", scope: !9514, file: !1532, line: 44, type: !1569)
!9522 = !DILocalVariable(name: "pin_cfg", scope: !9514, file: !1532, line: 52, type: !9523)
!9523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1585, line: 59, size: 160, elements: !9524)
!9524 = !{!9525, !9526}
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9523, file: !1585, line: 60, baseType: !1584, size: 128)
!9526 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9523, file: !1585, line: 61, baseType: !158, size: 32, offset: 128)
!9527 = !DILocalVariable(name: "gpio_cfg_reg", scope: !9514, file: !1532, line: 54, type: !1295)
!9528 = !DILocalVariable(name: "reg", scope: !9514, file: !1532, line: 56, type: !158)
!9529 = !DILocation(line: 0, scope: !9514)
!9530 = !DILocation(line: 43, column: 47, scope: !9514)
!9531 = !DILocation(line: 44, column: 28, scope: !9514)
!9532 = !DILocation(line: 46, column: 35, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9514, file: !1532, line: 46, column: 6)
!9534 = !DILocation(line: 52, column: 2, scope: !9514)
!9535 = !DILocation(line: 52, column: 25, scope: !9514)
!9536 = !DILocation(line: 55, column: 32, scope: !9514)
!9537 = !DILocation(line: 55, column: 24, scope: !9514)
!9538 = !DILocation(line: 55, column: 47, scope: !9514)
!9539 = !DILocation(line: 55, column: 3, scope: !9514)
!9540 = !DILocation(line: 56, column: 17, scope: !9514)
!9541 = !DILocation(line: 66, column: 13, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9514, file: !1532, line: 66, column: 6)
!9543 = !DILocation(line: 66, column: 34, scope: !9542)
!9544 = !DILocation(line: 66, column: 6, scope: !9514)
!9545 = !DILocation(line: 70, column: 36, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9514, file: !1532, line: 70, column: 6)
!9547 = !DILocation(line: 70, column: 14, scope: !9546)
!9548 = !DILocation(line: 70, column: 30, scope: !9546)
!9549 = !DILocation(line: 72, column: 7, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9546, file: !1532, line: 70, column: 72)
!9551 = !DILocation(line: 73, column: 8, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !1532, line: 72, column: 38)
!9553 = distinct !DILexicalBlock(scope: !9550, file: !1532, line: 72, column: 7)
!9554 = !DILocation(line: 74, column: 3, scope: !9552)
!9555 = !DILocation(line: 75, column: 8, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9553, file: !1532, line: 74, column: 10)
!9557 = !DILocation(line: 79, column: 7, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9546, file: !1532, line: 77, column: 9)
!9559 = !DILocation(line: 0, scope: !9546)
!9560 = !DILocation(line: 84, column: 27, scope: !9514)
!9561 = !DILocation(line: 84, column: 26, scope: !9514)
!9562 = !DILocation(line: 84, column: 2, scope: !9514)
!9563 = !DILocation(line: 86, column: 10, scope: !9514)
!9564 = !DILocation(line: 86, column: 25, scope: !9514)
!9565 = !DILocation(line: 87, column: 2, scope: !9514)
!9566 = !DILocation(line: 98, column: 2, scope: !9514)
!9567 = !DILocation(line: 99, column: 2, scope: !9514)
!9568 = !DILocation(line: 101, column: 6, scope: !9514)
!9569 = !DILocation(line: 103, column: 14, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !1532, line: 103, column: 7)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !1532, line: 101, column: 35)
!9572 = distinct !DILexicalBlock(scope: !9514, file: !1532, line: 101, column: 6)
!9573 = !DILocation(line: 103, column: 38, scope: !9570)
!9574 = !DILocation(line: 103, column: 7, scope: !9571)
!9575 = !DILocation(line: 105, column: 21, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9570, file: !1532, line: 105, column: 14)
!9577 = !DILocation(line: 105, column: 46, scope: !9576)
!9578 = !DILocation(line: 105, column: 14, scope: !9570)
!9579 = !DILocation(line: 0, scope: !9570)
!9580 = !DILocation(line: 110, column: 3, scope: !9571)
!9581 = !DILocation(line: 111, column: 2, scope: !9571)
!9582 = !DILocation(line: 113, column: 3, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9572, file: !1532, line: 111, column: 9)
!9584 = !DILocation(line: 117, column: 1, scope: !9514)
!9585 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1532, file: !1532, line: 119, type: !9586, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9588)
!9586 = !DISubroutineType(types: !9587)
!9587 = !{!111, !1456, !1852}
!9588 = !{!9589, !9590, !9591, !9592}
!9589 = !DILocalVariable(name: "port", arg: 1, scope: !9585, file: !1532, line: 119, type: !1456)
!9590 = !DILocalVariable(name: "value", arg: 2, scope: !9585, file: !1532, line: 119, type: !1852)
!9591 = !DILocalVariable(name: "config", scope: !9585, file: !1532, line: 121, type: !9520)
!9592 = !DILocalVariable(name: "base", scope: !9585, file: !1532, line: 122, type: !1569)
!9593 = !DILocation(line: 0, scope: !9585)
!9594 = !DILocation(line: 121, column: 47, scope: !9585)
!9595 = !DILocation(line: 122, column: 28, scope: !9585)
!9596 = !DILocation(line: 124, column: 11, scope: !9585)
!9597 = !DILocation(line: 124, column: 9, scope: !9585)
!9598 = !DILocation(line: 126, column: 2, scope: !9585)
!9599 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1532, file: !1532, line: 129, type: !1481, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9600)
!9600 = !{!9601, !9602, !9603, !9604, !9605}
!9601 = !DILocalVariable(name: "port", arg: 1, scope: !9599, file: !1532, line: 129, type: !1456)
!9602 = !DILocalVariable(name: "mask", arg: 2, scope: !9599, file: !1532, line: 130, type: !1483)
!9603 = !DILocalVariable(name: "value", arg: 3, scope: !9599, file: !1532, line: 131, type: !1478)
!9604 = !DILocalVariable(name: "config", scope: !9599, file: !1532, line: 133, type: !9520)
!9605 = !DILocalVariable(name: "base", scope: !9599, file: !1532, line: 134, type: !1569)
!9606 = !DILocation(line: 0, scope: !9599)
!9607 = !DILocation(line: 133, column: 47, scope: !9599)
!9608 = !DILocation(line: 134, column: 28, scope: !9599)
!9609 = !DILocation(line: 137, column: 5, scope: !9599)
!9610 = !DILocation(line: 137, column: 32, scope: !9599)
!9611 = !DILocation(line: 137, column: 30, scope: !9599)
!9612 = !DILocation(line: 137, column: 48, scope: !9599)
!9613 = !DILocation(line: 137, column: 39, scope: !9599)
!9614 = !DILocation(line: 136, column: 2, scope: !9599)
!9615 = !DILocation(line: 139, column: 2, scope: !9599)
!9616 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1532, file: !1532, line: 142, type: !1486, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9617)
!9617 = !{!9618, !9619, !9620, !9621}
!9618 = !DILocalVariable(name: "port", arg: 1, scope: !9616, file: !1532, line: 142, type: !1456)
!9619 = !DILocalVariable(name: "pins", arg: 2, scope: !9616, file: !1532, line: 143, type: !1483)
!9620 = !DILocalVariable(name: "config", scope: !9616, file: !1532, line: 145, type: !9520)
!9621 = !DILocalVariable(name: "base", scope: !9616, file: !1532, line: 146, type: !1569)
!9622 = !DILocation(line: 0, scope: !9616)
!9623 = !DILocation(line: 145, column: 47, scope: !9616)
!9624 = !DILocation(line: 146, column: 28, scope: !9616)
!9625 = !DILocation(line: 148, column: 29, scope: !9616)
!9626 = !DILocation(line: 148, column: 54, scope: !9616)
!9627 = !DILocation(line: 148, column: 2, scope: !9616)
!9628 = !DILocation(line: 150, column: 2, scope: !9616)
!9629 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1532, file: !1532, line: 153, type: !1486, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9630)
!9630 = !{!9631, !9632, !9633, !9634}
!9631 = !DILocalVariable(name: "port", arg: 1, scope: !9629, file: !1532, line: 153, type: !1456)
!9632 = !DILocalVariable(name: "pins", arg: 2, scope: !9629, file: !1532, line: 154, type: !1483)
!9633 = !DILocalVariable(name: "config", scope: !9629, file: !1532, line: 156, type: !9520)
!9634 = !DILocalVariable(name: "base", scope: !9629, file: !1532, line: 157, type: !1569)
!9635 = !DILocation(line: 0, scope: !9629)
!9636 = !DILocation(line: 156, column: 47, scope: !9629)
!9637 = !DILocation(line: 157, column: 28, scope: !9629)
!9638 = !DILocation(line: 159, column: 29, scope: !9629)
!9639 = !DILocation(line: 159, column: 56, scope: !9629)
!9640 = !DILocation(line: 159, column: 54, scope: !9629)
!9641 = !DILocation(line: 159, column: 2, scope: !9629)
!9642 = !DILocation(line: 161, column: 2, scope: !9629)
!9643 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1532, file: !1532, line: 164, type: !1486, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9644)
!9644 = !{!9645, !9646, !9647, !9648}
!9645 = !DILocalVariable(name: "port", arg: 1, scope: !9643, file: !1532, line: 164, type: !1456)
!9646 = !DILocalVariable(name: "pins", arg: 2, scope: !9643, file: !1532, line: 165, type: !1483)
!9647 = !DILocalVariable(name: "config", scope: !9643, file: !1532, line: 167, type: !9520)
!9648 = !DILocalVariable(name: "base", scope: !9643, file: !1532, line: 168, type: !1569)
!9649 = !DILocation(line: 0, scope: !9643)
!9650 = !DILocation(line: 167, column: 47, scope: !9643)
!9651 = !DILocation(line: 168, column: 28, scope: !9643)
!9652 = !DILocation(line: 170, column: 29, scope: !9643)
!9653 = !DILocation(line: 170, column: 54, scope: !9643)
!9654 = !DILocation(line: 170, column: 2, scope: !9643)
!9655 = !DILocation(line: 172, column: 2, scope: !9643)
!9656 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1532, file: !1532, line: 175, type: !1492, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9657)
!9657 = !{!9658, !9659, !9660, !9661, !9662, !9663, !9664, !9665, !9666, !9667}
!9658 = !DILocalVariable(name: "port", arg: 1, scope: !9656, file: !1532, line: 175, type: !1456)
!9659 = !DILocalVariable(name: "pin", arg: 2, scope: !9656, file: !1532, line: 176, type: !1471)
!9660 = !DILocalVariable(name: "mode", arg: 3, scope: !9656, file: !1532, line: 177, type: !1431)
!9661 = !DILocalVariable(name: "trig", arg: 4, scope: !9656, file: !1532, line: 178, type: !1437)
!9662 = !DILocalVariable(name: "config", scope: !9656, file: !1532, line: 180, type: !9520)
!9663 = !DILocalVariable(name: "base", scope: !9656, file: !1532, line: 181, type: !1569)
!9664 = !DILocalVariable(name: "icr_reg", scope: !9656, file: !1532, line: 182, type: !1295)
!9665 = !DILocalVariable(name: "key", scope: !9656, file: !1532, line: 183, type: !32)
!9666 = !DILocalVariable(name: "icr_val", scope: !9656, file: !1532, line: 184, type: !158)
!9667 = !DILocalVariable(name: "shift", scope: !9656, file: !1532, line: 185, type: !128)
!9668 = !DILocation(line: 0, scope: !9656)
!9669 = !DILocation(line: 180, column: 47, scope: !9656)
!9670 = !DILocation(line: 181, column: 28, scope: !9656)
!9671 = !DILocation(line: 187, column: 14, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9656, file: !1532, line: 187, column: 6)
!9673 = !DILocation(line: 187, column: 21, scope: !9672)
!9674 = !DILocation(line: 187, column: 19, scope: !9672)
!9675 = !DILocation(line: 187, column: 31, scope: !9672)
!9676 = !DILocation(line: 188, column: 6, scope: !9672)
!9677 = !DILocation(line: 193, column: 12, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9656, file: !1532, line: 193, column: 6)
!9679 = !DILocation(line: 193, column: 35, scope: !9678)
!9680 = !DILocation(line: 195, column: 42, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9678, file: !1532, line: 195, column: 13)
!9682 = !DILocation(line: 198, column: 19, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9681, file: !1532, line: 198, column: 13)
!9684 = !DILocation(line: 198, column: 43, scope: !9683)
!9685 = !DILocation(line: 0, scope: !9678)
!9686 = !DILocation(line: 205, column: 10, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9656, file: !1532, line: 205, column: 6)
!9688 = !DILocation(line: 205, column: 6, scope: !9656)
!9689 = !DILocation(line: 206, column: 14, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9687, file: !1532, line: 205, column: 17)
!9691 = !DILocation(line: 207, column: 21, scope: !9690)
!9692 = !DILocation(line: 208, column: 2, scope: !9690)
!9693 = !DILocation(line: 208, column: 17, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9687, file: !1532, line: 208, column: 13)
!9695 = !DILocation(line: 208, column: 13, scope: !9687)
!9696 = !DILocation(line: 209, column: 14, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9694, file: !1532, line: 208, column: 24)
!9698 = !DILocation(line: 210, column: 21, scope: !9697)
!9699 = !DILocation(line: 0, scope: !9687)
!9700 = !DILocation(line: 55, column: 2, scope: !9701, inlinedAt: !9707)
!9701 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7659, file: !7659, line: 42, type: !9702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9704)
!9702 = !DISubroutineType(types: !9703)
!9703 = !{!32}
!9704 = !{!9705, !9706}
!9705 = !DILocalVariable(name: "key", scope: !9701, file: !7659, line: 44, type: !32)
!9706 = !DILocalVariable(name: "tmp", scope: !9701, file: !7659, line: 53, type: !32)
!9707 = distinct !DILocation(line: 215, column: 8, scope: !9656)
!9708 = !{i64 3016479}
!9709 = !DILocation(line: 0, scope: !9701, inlinedAt: !9707)
!9710 = !DILocation(line: 217, column: 14, scope: !9656)
!9711 = !DILocation(line: 217, column: 33, scope: !9656)
!9712 = !DILocation(line: 217, column: 30, scope: !9656)
!9713 = !DILocation(line: 217, column: 25, scope: !9656)
!9714 = !DILocation(line: 217, column: 23, scope: !9656)
!9715 = !DILocation(line: 217, column: 52, scope: !9656)
!9716 = !DILocation(line: 217, column: 41, scope: !9656)
!9717 = !DILocation(line: 217, column: 11, scope: !9656)
!9718 = !DILocation(line: 219, column: 2, scope: !9656)
!9719 = !DILocation(line: 220, column: 2, scope: !9656)
!9720 = !DILocation(line: 221, column: 2, scope: !9656)
!9721 = !DILocalVariable(name: "key", arg: 1, scope: !9722, file: !7659, line: 84, type: !32)
!9722 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9723)
!9723 = !{!9721}
!9724 = !DILocation(line: 0, scope: !9722, inlinedAt: !9725)
!9725 = distinct !DILocation(line: 223, column: 2, scope: !9656)
!9726 = !DILocation(line: 95, column: 2, scope: !9722, inlinedAt: !9725)
!9727 = !{i64 3017296}
!9728 = !DILocation(line: 225, column: 2, scope: !9656)
!9729 = !DILocation(line: 226, column: 1, scope: !9656)
!9730 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1532, file: !1532, line: 228, type: !1496, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9731)
!9731 = !{!9732, !9733, !9734, !9735}
!9732 = !DILocalVariable(name: "port", arg: 1, scope: !9730, file: !1532, line: 228, type: !1456)
!9733 = !DILocalVariable(name: "cb", arg: 2, scope: !9730, file: !1532, line: 229, type: !1498)
!9734 = !DILocalVariable(name: "set", arg: 3, scope: !9730, file: !1532, line: 229, type: !131)
!9735 = !DILocalVariable(name: "data", scope: !9730, file: !1532, line: 231, type: !9736)
!9736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!9737 = !DILocation(line: 0, scope: !9730)
!9738 = !DILocation(line: 231, column: 37, scope: !9730)
!9739 = !DILocation(line: 233, column: 37, scope: !9730)
!9740 = !DILocation(line: 233, column: 9, scope: !9730)
!9741 = !DILocation(line: 233, column: 2, scope: !9730)
!9742 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9743, file: !9743, line: 38, type: !9744, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9747)
!9743 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9744 = !DISubroutineType(types: !9745)
!9745 = !{!111, !9746, !1498, !131}
!9746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!9747 = !{!9748, !9749, !9750}
!9748 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9742, file: !9743, line: 38, type: !9746)
!9749 = !DILocalVariable(name: "callback", arg: 2, scope: !9742, file: !9743, line: 39, type: !1498)
!9750 = !DILocalVariable(name: "set", arg: 3, scope: !9742, file: !9743, line: 40, type: !131)
!9751 = !DILocation(line: 0, scope: !9742)
!9752 = !DILocation(line: 45, column: 7, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9742, file: !9743, line: 45, column: 6)
!9754 = !DILocation(line: 45, column: 6, scope: !9742)
!9755 = !DILocation(line: 46, column: 56, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9757, file: !9743, line: 46, column: 7)
!9757 = distinct !DILexicalBlock(scope: !9753, file: !9743, line: 45, column: 38)
!9758 = !DILocation(line: 46, column: 8, scope: !9756)
!9759 = !DILocation(line: 46, column: 7, scope: !9757)
!9760 = !DILocation(line: 51, column: 13, scope: !9753)
!9761 = !DILocation(line: 56, column: 43, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9763, file: !9743, line: 55, column: 11)
!9763 = distinct !DILexicalBlock(scope: !9742, file: !9743, line: 55, column: 6)
!9764 = !DILocation(line: 56, column: 3, scope: !9762)
!9765 = !DILocation(line: 57, column: 2, scope: !9762)
!9766 = !DILocation(line: 60, column: 1, scope: !9742)
!9767 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1503, file: !1503, line: 261, type: !9768, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9770)
!9768 = !DISubroutineType(types: !9769)
!9769 = !{!131, !9746}
!9770 = !{!9771}
!9771 = !DILocalVariable(name: "list", arg: 1, scope: !9767, file: !1503, line: 261, type: !9746)
!9772 = !DILocation(line: 0, scope: !9767)
!9773 = !DILocation(line: 261, column: 1, scope: !9767)
!9774 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1503, file: !1503, line: 417, type: !9775, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9777)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{!131, !9746, !1558}
!9777 = !{!9778, !9779, !9780, !9781}
!9778 = !DILocalVariable(name: "list", arg: 1, scope: !9774, file: !1503, line: 417, type: !9746)
!9779 = !DILocalVariable(name: "node", arg: 2, scope: !9774, file: !1503, line: 417, type: !1558)
!9780 = !DILocalVariable(name: "prev", scope: !9774, file: !1503, line: 417, type: !1558)
!9781 = !DILocalVariable(name: "test", scope: !9774, file: !1503, line: 417, type: !1558)
!9782 = !DILocation(line: 0, scope: !9774)
!9783 = !DILocation(line: 417, column: 1, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9774, file: !1503, line: 417, column: 1)
!9785 = !DILocation(line: 417, column: 1, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9784, file: !1503, line: 417, column: 1)
!9787 = !DILocation(line: 417, column: 1, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9789, file: !1503, line: 417, column: 1)
!9789 = distinct !DILexicalBlock(scope: !9786, file: !1503, line: 417, column: 1)
!9790 = !DILocation(line: 417, column: 1, scope: !9789)
!9791 = distinct !{!9791, !9783, !9783}
!9792 = !DILocation(line: 417, column: 1, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9788, file: !1503, line: 417, column: 1)
!9794 = !DILocation(line: 417, column: 1, scope: !9774)
!9795 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1503, file: !1503, line: 298, type: !9796, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9798)
!9796 = !DISubroutineType(types: !9797)
!9797 = !{null, !9746, !1558}
!9798 = !{!9799, !9800}
!9799 = !DILocalVariable(name: "list", arg: 1, scope: !9795, file: !1503, line: 298, type: !9746)
!9800 = !DILocalVariable(name: "node", arg: 2, scope: !9795, file: !1503, line: 298, type: !1558)
!9801 = !DILocation(line: 0, scope: !9795)
!9802 = !DILocation(line: 298, column: 1, scope: !9795)
!9803 = !DILocation(line: 298, column: 1, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9795, file: !1503, line: 298, column: 1)
!9805 = !DILocation(line: 298, column: 1, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9804, file: !1503, line: 298, column: 1)
!9807 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1503, file: !1503, line: 231, type: !9808, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9810)
!9808 = !DISubroutineType(types: !9809)
!9809 = !{!1558, !9746}
!9810 = !{!9811}
!9811 = !DILocalVariable(name: "list", arg: 1, scope: !9807, file: !1503, line: 231, type: !9746)
!9812 = !DILocation(line: 0, scope: !9807)
!9813 = !DILocation(line: 233, column: 15, scope: !9807)
!9814 = !DILocation(line: 233, column: 2, scope: !9807)
!9815 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1503, file: !1503, line: 209, type: !9816, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9818)
!9816 = !DISubroutineType(types: !9817)
!9817 = !{null, !1558, !1558}
!9818 = !{!9819, !9820}
!9819 = !DILocalVariable(name: "parent", arg: 1, scope: !9815, file: !1503, line: 209, type: !1558)
!9820 = !DILocalVariable(name: "child", arg: 2, scope: !9815, file: !1503, line: 209, type: !1558)
!9821 = !DILocation(line: 0, scope: !9815)
!9822 = !DILocation(line: 211, column: 10, scope: !9815)
!9823 = !DILocation(line: 211, column: 15, scope: !9815)
!9824 = !DILocation(line: 212, column: 1, scope: !9815)
!9825 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1503, file: !1503, line: 214, type: !9796, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9826)
!9826 = !{!9827, !9828}
!9827 = !DILocalVariable(name: "list", arg: 1, scope: !9825, file: !1503, line: 214, type: !9746)
!9828 = !DILocalVariable(name: "node", arg: 2, scope: !9825, file: !1503, line: 214, type: !1558)
!9829 = !DILocation(line: 0, scope: !9825)
!9830 = !DILocation(line: 216, column: 8, scope: !9825)
!9831 = !DILocation(line: 216, column: 13, scope: !9825)
!9832 = !DILocation(line: 217, column: 1, scope: !9825)
!9833 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1503, file: !1503, line: 243, type: !9808, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9834)
!9834 = !{!9835}
!9835 = !DILocalVariable(name: "list", arg: 1, scope: !9833, file: !1503, line: 243, type: !9746)
!9836 = !DILocation(line: 0, scope: !9833)
!9837 = !DILocation(line: 245, column: 15, scope: !9833)
!9838 = !DILocation(line: 245, column: 2, scope: !9833)
!9839 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1503, file: !1503, line: 219, type: !9796, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9840)
!9840 = !{!9841, !9842}
!9841 = !DILocalVariable(name: "list", arg: 1, scope: !9839, file: !1503, line: 219, type: !9746)
!9842 = !DILocalVariable(name: "node", arg: 2, scope: !9839, file: !1503, line: 219, type: !1558)
!9843 = !DILocation(line: 0, scope: !9839)
!9844 = !DILocation(line: 221, column: 8, scope: !9839)
!9845 = !DILocation(line: 221, column: 13, scope: !9839)
!9846 = !DILocation(line: 222, column: 1, scope: !9839)
!9847 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1503, file: !1503, line: 401, type: !9848, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9850)
!9848 = !DISubroutineType(types: !9849)
!9849 = !{null, !9746, !1558, !1558}
!9850 = !{!9851, !9852, !9853}
!9851 = !DILocalVariable(name: "list", arg: 1, scope: !9847, file: !1503, line: 401, type: !9746)
!9852 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9847, file: !1503, line: 401, type: !1558)
!9853 = !DILocalVariable(name: "node", arg: 3, scope: !9847, file: !1503, line: 401, type: !1558)
!9854 = !DILocation(line: 0, scope: !9847)
!9855 = !DILocation(line: 401, column: 1, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9847, file: !1503, line: 401, column: 1)
!9857 = !DILocation(line: 0, scope: !9856)
!9858 = !DILocation(line: 401, column: 1, scope: !9847)
!9859 = !DILocation(line: 401, column: 1, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9856, file: !1503, line: 401, column: 1)
!9861 = !DILocation(line: 401, column: 1, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9860, file: !1503, line: 401, column: 1)
!9863 = !DILocation(line: 401, column: 1, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9862, file: !1503, line: 401, column: 1)
!9865 = !DILocation(line: 401, column: 1, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9856, file: !1503, line: 401, column: 1)
!9867 = !DILocation(line: 401, column: 1, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9866, file: !1503, line: 401, column: 1)
!9869 = !DILocation(line: 401, column: 1, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9868, file: !1503, line: 401, column: 1)
!9871 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1503, file: !1503, line: 285, type: !9872, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9874)
!9872 = !DISubroutineType(types: !9873)
!9873 = !{!1558, !1558}
!9874 = !{!9875}
!9875 = !DILocalVariable(name: "node", arg: 1, scope: !9871, file: !1503, line: 285, type: !1558)
!9876 = !DILocation(line: 0, scope: !9871)
!9877 = !DILocation(line: 285, column: 1, scope: !9871)
!9878 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1503, file: !1503, line: 274, type: !9872, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9879)
!9879 = !{!9880}
!9880 = !DILocalVariable(name: "node", arg: 1, scope: !9878, file: !1503, line: 274, type: !1558)
!9881 = !DILocation(line: 0, scope: !9878)
!9882 = !DILocation(line: 274, column: 1, scope: !9878)
!9883 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1503, file: !1503, line: 204, type: !9872, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9884)
!9884 = !{!9885}
!9885 = !DILocalVariable(name: "node", arg: 1, scope: !9883, file: !1503, line: 204, type: !1558)
!9886 = !DILocation(line: 0, scope: !9883)
!9887 = !DILocation(line: 206, column: 15, scope: !9883)
!9888 = !DILocation(line: 206, column: 2, scope: !9883)
!9889 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !1443, file: !1443, line: 131, type: !9890, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9892)
!9890 = !DISubroutineType(types: !9891)
!9891 = !{!158, !1569}
!9892 = !{!9893}
!9893 = !DILocalVariable(name: "base", arg: 1, scope: !9889, file: !1443, line: 131, type: !1569)
!9894 = !DILocation(line: 0, scope: !9889)
!9895 = !DILocation(line: 133, column: 12, scope: !9889)
!9896 = !DILocation(line: 133, column: 5, scope: !9889)
!9897 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !1443, file: !1443, line: 178, type: !9898, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9900)
!9898 = !DISubroutineType(types: !9899)
!9899 = !{null, !1569, !158}
!9900 = !{!9901, !9902}
!9901 = !DILocalVariable(name: "base", arg: 1, scope: !9897, file: !1443, line: 178, type: !1569)
!9902 = !DILocalVariable(name: "portVal", arg: 2, scope: !9897, file: !1443, line: 178, type: !158)
!9903 = !DILocation(line: 0, scope: !9897)
!9904 = !DILocation(line: 180, column: 5, scope: !9897)
!9905 = !DILocation(line: 180, column: 23, scope: !9897)
!9906 = !DILocation(line: 181, column: 1, scope: !9897)
!9907 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1532, file: !1532, line: 236, type: !9908, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9910)
!9908 = !DISubroutineType(types: !9909)
!9909 = !{null, !1456}
!9910 = !{!9911, !9912, !9913, !9914}
!9911 = !DILocalVariable(name: "port", arg: 1, scope: !9907, file: !1532, line: 236, type: !1456)
!9912 = !DILocalVariable(name: "config", scope: !9907, file: !1532, line: 238, type: !9520)
!9913 = !DILocalVariable(name: "data", scope: !9907, file: !1532, line: 239, type: !9736)
!9914 = !DILocalVariable(name: "int_status", scope: !9907, file: !1532, line: 240, type: !158)
!9915 = !DILocation(line: 0, scope: !9907)
!9916 = !DILocation(line: 238, column: 47, scope: !9907)
!9917 = !DILocation(line: 239, column: 37, scope: !9907)
!9918 = !DILocation(line: 242, column: 23, scope: !9907)
!9919 = !DILocation(line: 242, column: 29, scope: !9907)
!9920 = !DILocation(line: 244, column: 20, scope: !9907)
!9921 = !DILocation(line: 246, column: 29, scope: !9907)
!9922 = !DILocation(line: 246, column: 2, scope: !9907)
!9923 = !DILocation(line: 247, column: 1, scope: !9907)
!9924 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9743, file: !9743, line: 69, type: !9925, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1428, retainedNodes: !9927)
!9925 = !DISubroutineType(types: !9926)
!9926 = !{null, !9746, !1456, !158}
!9927 = !{!9928, !9929, !9930, !9931, !9932}
!9928 = !DILocalVariable(name: "list", arg: 1, scope: !9924, file: !9743, line: 69, type: !9746)
!9929 = !DILocalVariable(name: "port", arg: 2, scope: !9924, file: !9743, line: 70, type: !1456)
!9930 = !DILocalVariable(name: "pins", arg: 3, scope: !9924, file: !9743, line: 71, type: !158)
!9931 = !DILocalVariable(name: "cb", scope: !9924, file: !9743, line: 73, type: !1498)
!9932 = !DILocalVariable(name: "tmp", scope: !9924, file: !9743, line: 73, type: !1498)
!9933 = !DILocation(line: 0, scope: !9924)
!9934 = !DILocation(line: 75, column: 2, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9924, file: !9743, line: 75, column: 2)
!9936 = !DILocation(line: 0, scope: !9935)
!9937 = !DILocation(line: 76, column: 11, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9939, file: !9743, line: 76, column: 7)
!9939 = distinct !DILexicalBlock(scope: !9940, file: !9743, line: 75, column: 57)
!9940 = distinct !DILexicalBlock(scope: !9935, file: !9743, line: 75, column: 2)
!9941 = !DILocation(line: 76, column: 20, scope: !9938)
!9942 = !DILocation(line: 76, column: 7, scope: !9939)
!9943 = !DILocation(line: 78, column: 8, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9938, file: !9743, line: 76, column: 28)
!9945 = !DILocation(line: 78, column: 4, scope: !9944)
!9946 = !DILocation(line: 79, column: 3, scope: !9944)
!9947 = !DILocation(line: 75, column: 2, scope: !9940)
!9948 = !DILocation(line: 81, column: 1, scope: !9924)
!9949 = !DILocation(line: 0, scope: !1597)
!9950 = !DILocation(line: 318, column: 1, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !1597, file: !1532, line: 318, column: 1)
!9952 = !DILocation(line: 318, column: 1, scope: !1597)
!9953 = !DILocation(line: 318, column: 1, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !1597, file: !1532, line: 318, column: 1)
!9955 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1817, file: !1817, line: 114, type: !1715, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !9956)
!9956 = !{!9957, !9958, !9959, !9960}
!9957 = !DILocalVariable(name: "dev", arg: 1, scope: !9955, file: !1817, line: 114, type: !1717)
!9958 = !DILocalVariable(name: "c", arg: 2, scope: !9955, file: !1817, line: 114, type: !140)
!9959 = !DILocalVariable(name: "uart", scope: !9955, file: !1817, line: 116, type: !1788)
!9960 = !DILocalVariable(name: "ret", scope: !9955, file: !1817, line: 117, type: !111)
!9961 = !DILocation(line: 0, scope: !9955)
!9962 = !DILocation(line: 116, column: 20, scope: !9955)
!9963 = !DILocation(line: 119, column: 6, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9955, file: !1817, line: 119, column: 6)
!9965 = !DILocation(line: 119, column: 6, scope: !9955)
!9966 = !DILocation(line: 120, column: 8, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9964, file: !1817, line: 119, column: 55)
!9968 = !DILocation(line: 120, column: 6, scope: !9967)
!9969 = !DILocation(line: 122, column: 7, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9967, file: !1817, line: 122, column: 7)
!9971 = !DILocation(line: 122, column: 7, scope: !9967)
!9972 = !DILocation(line: 123, column: 4, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9970, file: !1817, line: 122, column: 54)
!9974 = !DILocation(line: 124, column: 3, scope: !9973)
!9975 = !DILocation(line: 128, column: 2, scope: !9955)
!9976 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1817, file: !1817, line: 105, type: !1734, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !9977)
!9977 = !{!9978, !9979, !9980}
!9978 = !DILocalVariable(name: "dev", arg: 1, scope: !9976, file: !1817, line: 105, type: !1717)
!9979 = !DILocalVariable(name: "c", arg: 2, scope: !9976, file: !1817, line: 105, type: !129)
!9980 = !DILocalVariable(name: "uart", scope: !9976, file: !1817, line: 107, type: !1788)
!9981 = !DILocation(line: 0, scope: !9976)
!9982 = !DILocation(line: 107, column: 20, scope: !9976)
!9983 = !DILocation(line: 109, column: 2, scope: !9976)
!9984 = !DILocation(line: 109, column: 10, scope: !9976)
!9985 = distinct !{!9985, !9983, !9986}
!9986 = !DILocation(line: 110, column: 2, scope: !9976)
!9987 = !DILocation(line: 111, column: 2, scope: !9976)
!9988 = !DILocation(line: 112, column: 1, scope: !9976)
!9989 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1817, file: !1817, line: 133, type: !1760, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !9990)
!9990 = !{!9991, !9992, !9993, !9994, !9995}
!9991 = !DILocalVariable(name: "dev", arg: 1, scope: !9989, file: !1817, line: 133, type: !1717)
!9992 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9989, file: !1817, line: 134, type: !172)
!9993 = !DILocalVariable(name: "size", arg: 3, scope: !9989, file: !1817, line: 135, type: !111)
!9994 = !DILocalVariable(name: "uart", scope: !9989, file: !1817, line: 137, type: !1788)
!9995 = !DILocalVariable(name: "num_tx", scope: !9989, file: !1817, line: 138, type: !32)
!9996 = !DILocation(line: 0, scope: !9989)
!9997 = !DILocation(line: 137, column: 20, scope: !9989)
!9998 = !DILocation(line: 140, column: 26, scope: !9989)
!9999 = !DILocation(line: 140, column: 31, scope: !9989)
!10000 = !DILocation(line: 141, column: 6, scope: !9989)
!10001 = !DILocation(line: 140, column: 2, scope: !9989)
!10002 = !DILocation(line: 143, column: 22, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9989, file: !1817, line: 141, column: 51)
!10004 = !DILocation(line: 143, column: 3, scope: !10003)
!10005 = !DILocation(line: 144, column: 9, scope: !10003)
!10006 = distinct !{!10006, !10001, !10007}
!10007 = !DILocation(line: 145, column: 2, scope: !9989)
!10008 = !DILocation(line: 147, column: 2, scope: !9989)
!10009 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1817, file: !1817, line: 150, type: !1764, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10010)
!10010 = !{!10011, !10012, !10013, !10014, !10015}
!10011 = !DILocalVariable(name: "dev", arg: 1, scope: !10009, file: !1817, line: 150, type: !1717)
!10012 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10009, file: !1817, line: 150, type: !178)
!10013 = !DILocalVariable(name: "size", arg: 3, scope: !10009, file: !1817, line: 151, type: !179)
!10014 = !DILocalVariable(name: "uart", scope: !10009, file: !1817, line: 153, type: !1788)
!10015 = !DILocalVariable(name: "num_rx", scope: !10009, file: !1817, line: 154, type: !32)
!10016 = !DILocation(line: 0, scope: !10009)
!10017 = !DILocation(line: 153, column: 20, scope: !10009)
!10018 = !DILocation(line: 156, column: 26, scope: !10009)
!10019 = !DILocation(line: 156, column: 31, scope: !10009)
!10020 = !DILocation(line: 157, column: 6, scope: !10009)
!10021 = !DILocation(line: 156, column: 2, scope: !10009)
!10022 = !DILocation(line: 159, column: 23, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10009, file: !1817, line: 157, column: 51)
!10024 = !DILocation(line: 159, column: 17, scope: !10023)
!10025 = !DILocation(line: 159, column: 3, scope: !10023)
!10026 = !DILocation(line: 159, column: 21, scope: !10023)
!10027 = distinct !{!10027, !10021, !10028}
!10028 = !DILocation(line: 160, column: 2, scope: !10009)
!10029 = !DILocation(line: 162, column: 6, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10009, file: !1817, line: 162, column: 6)
!10031 = !DILocation(line: 162, column: 6, scope: !10009)
!10032 = !DILocation(line: 163, column: 3, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10030, file: !1817, line: 162, column: 53)
!10034 = !DILocation(line: 164, column: 2, scope: !10033)
!10035 = !DILocation(line: 166, column: 2, scope: !10009)
!10036 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1817, file: !1817, line: 169, type: !1768, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10037)
!10037 = !{!10038, !10039}
!10038 = !DILocalVariable(name: "dev", arg: 1, scope: !10036, file: !1817, line: 169, type: !1717)
!10039 = !DILocalVariable(name: "uart", scope: !10036, file: !1817, line: 171, type: !1788)
!10040 = !DILocation(line: 0, scope: !10036)
!10041 = !DILocation(line: 171, column: 20, scope: !10036)
!10042 = !DILocation(line: 173, column: 2, scope: !10036)
!10043 = !DILocation(line: 174, column: 1, scope: !10036)
!10044 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1817, file: !1817, line: 176, type: !1768, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10045)
!10045 = !{!10046, !10047}
!10046 = !DILocalVariable(name: "dev", arg: 1, scope: !10044, file: !1817, line: 176, type: !1717)
!10047 = !DILocalVariable(name: "uart", scope: !10044, file: !1817, line: 178, type: !1788)
!10048 = !DILocation(line: 0, scope: !10044)
!10049 = !DILocation(line: 178, column: 20, scope: !10044)
!10050 = !DILocation(line: 180, column: 2, scope: !10044)
!10051 = !DILocation(line: 181, column: 1, scope: !10044)
!10052 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1817, file: !1817, line: 183, type: !1738, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10053)
!10053 = !{!10054, !10055}
!10054 = !DILocalVariable(name: "dev", arg: 1, scope: !10052, file: !1817, line: 183, type: !1717)
!10055 = !DILocalVariable(name: "uart", scope: !10052, file: !1817, line: 185, type: !1788)
!10056 = !DILocation(line: 0, scope: !10052)
!10057 = !DILocation(line: 185, column: 20, scope: !10052)
!10058 = !DILocation(line: 187, column: 9, scope: !10052)
!10059 = !DILocation(line: 187, column: 2, scope: !10052)
!10060 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1817, file: !1817, line: 190, type: !1768, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10061)
!10061 = !{!10062, !10063}
!10062 = !DILocalVariable(name: "dev", arg: 1, scope: !10060, file: !1817, line: 190, type: !1717)
!10063 = !DILocalVariable(name: "uart", scope: !10060, file: !1817, line: 192, type: !1788)
!10064 = !DILocation(line: 0, scope: !10060)
!10065 = !DILocation(line: 192, column: 20, scope: !10060)
!10066 = !DILocation(line: 194, column: 2, scope: !10060)
!10067 = !DILocation(line: 195, column: 1, scope: !10060)
!10068 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1817, file: !1817, line: 197, type: !1768, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10069)
!10069 = !{!10070, !10071}
!10070 = !DILocalVariable(name: "dev", arg: 1, scope: !10068, file: !1817, line: 197, type: !1717)
!10071 = !DILocalVariable(name: "uart", scope: !10068, file: !1817, line: 199, type: !1788)
!10072 = !DILocation(line: 0, scope: !10068)
!10073 = !DILocation(line: 199, column: 20, scope: !10068)
!10074 = !DILocation(line: 201, column: 2, scope: !10068)
!10075 = !DILocation(line: 202, column: 1, scope: !10068)
!10076 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1817, file: !1817, line: 204, type: !1738, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10077)
!10077 = !{!10078, !10079}
!10078 = !DILocalVariable(name: "dev", arg: 1, scope: !10076, file: !1817, line: 204, type: !1717)
!10079 = !DILocalVariable(name: "uart", scope: !10076, file: !1817, line: 206, type: !1788)
!10080 = !DILocation(line: 0, scope: !10076)
!10081 = !DILocation(line: 206, column: 20, scope: !10076)
!10082 = !DILocation(line: 208, column: 9, scope: !10076)
!10083 = !DILocation(line: 208, column: 2, scope: !10076)
!10084 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1817, file: !1817, line: 211, type: !1768, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10085)
!10085 = !{!10086, !10087}
!10086 = !DILocalVariable(name: "dev", arg: 1, scope: !10084, file: !1817, line: 211, type: !1717)
!10087 = !DILocalVariable(name: "uart", scope: !10084, file: !1817, line: 213, type: !1788)
!10088 = !DILocation(line: 0, scope: !10084)
!10089 = !DILocation(line: 213, column: 20, scope: !10084)
!10090 = !DILocation(line: 215, column: 2, scope: !10084)
!10091 = !DILocation(line: 216, column: 2, scope: !10084)
!10092 = !DILocation(line: 217, column: 1, scope: !10084)
!10093 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1817, file: !1817, line: 219, type: !1768, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10094)
!10094 = !{!10095, !10096}
!10095 = !DILocalVariable(name: "dev", arg: 1, scope: !10093, file: !1817, line: 219, type: !1717)
!10096 = !DILocalVariable(name: "uart", scope: !10093, file: !1817, line: 221, type: !1788)
!10097 = !DILocation(line: 0, scope: !10093)
!10098 = !DILocation(line: 221, column: 20, scope: !10093)
!10099 = !DILocation(line: 223, column: 2, scope: !10093)
!10100 = !DILocation(line: 224, column: 2, scope: !10093)
!10101 = !DILocation(line: 225, column: 1, scope: !10093)
!10102 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1817, file: !1817, line: 227, type: !1738, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10103)
!10103 = !{!10104, !10105}
!10104 = !DILocalVariable(name: "dev", arg: 1, scope: !10102, file: !1817, line: 227, type: !1717)
!10105 = !DILocalVariable(name: "uart", scope: !10102, file: !1817, line: 229, type: !1788)
!10106 = !DILocation(line: 0, scope: !10102)
!10107 = !DILocation(line: 229, column: 20, scope: !10102)
!10108 = !DILocation(line: 231, column: 9, scope: !10102)
!10109 = !DILocation(line: 231, column: 53, scope: !10102)
!10110 = !DILocation(line: 232, column: 3, scope: !10102)
!10111 = !DILocation(line: 231, column: 2, scope: !10102)
!10112 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1817, file: !1817, line: 235, type: !1738, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10113)
!10113 = !{!10114}
!10114 = !DILocalVariable(name: "dev", arg: 1, scope: !10112, file: !1817, line: 235, type: !1717)
!10115 = !DILocation(line: 0, scope: !10112)
!10116 = !DILocation(line: 237, column: 2, scope: !10112)
!10117 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1817, file: !1817, line: 240, type: !1782, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10118)
!10118 = !{!10119, !10120, !10121, !10122}
!10119 = !DILocalVariable(name: "dev", arg: 1, scope: !10117, file: !1817, line: 240, type: !1717)
!10120 = !DILocalVariable(name: "cb", arg: 2, scope: !10117, file: !1817, line: 241, type: !1784)
!10121 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10117, file: !1817, line: 242, type: !133)
!10122 = !DILocalVariable(name: "data", scope: !10117, file: !1817, line: 244, type: !10123)
!10123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!10124 = !DILocation(line: 0, scope: !10117)
!10125 = !DILocation(line: 244, column: 36, scope: !10117)
!10126 = !DILocation(line: 246, column: 8, scope: !10117)
!10127 = !DILocation(line: 246, column: 17, scope: !10117)
!10128 = !DILocation(line: 247, column: 8, scope: !10117)
!10129 = !DILocation(line: 247, column: 16, scope: !10117)
!10130 = !DILocation(line: 248, column: 1, scope: !10117)
!10131 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1624, file: !1624, line: 392, type: !10132, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10134)
!10132 = !DISubroutineType(types: !10133)
!10133 = !{!131, !1788, !158}
!10134 = !{!10135, !10136, !10137}
!10135 = !DILocalVariable(name: "base", arg: 1, scope: !10131, file: !1624, line: 392, type: !1788)
!10136 = !DILocalVariable(name: "flag", arg: 2, scope: !10131, file: !1624, line: 392, type: !158)
!10137 = !DILocalVariable(name: "uart_reg", scope: !10131, file: !1624, line: 393, type: !1295)
!10138 = !DILocation(line: 0, scope: !10131)
!10139 = !DILocation(line: 395, column: 29, scope: !10131)
!10140 = !DILocation(line: 395, column: 52, scope: !10131)
!10141 = !DILocation(line: 395, column: 44, scope: !10131)
!10142 = !DILocation(line: 395, column: 16, scope: !10131)
!10143 = !DILocation(line: 396, column: 20, scope: !10131)
!10144 = !DILocation(line: 396, column: 39, scope: !10131)
!10145 = !DILocation(line: 396, column: 12, scope: !10131)
!10146 = !DILocation(line: 396, column: 5, scope: !10131)
!10147 = distinct !DISubprogram(name: "UART_Getchar", scope: !1624, file: !1624, line: 358, type: !10148, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10150)
!10148 = !DISubroutineType(types: !10149)
!10149 = !{!128, !1788}
!10150 = !{!10151}
!10151 = !DILocalVariable(name: "base", arg: 1, scope: !10147, file: !1624, line: 358, type: !1788)
!10152 = !DILocation(line: 0, scope: !10147)
!10153 = !DILocation(line: 360, column: 22, scope: !10147)
!10154 = !DILocation(line: 360, column: 12, scope: !10147)
!10155 = !DILocation(line: 360, column: 5, scope: !10147)
!10156 = distinct !DISubprogram(name: "UART_Putchar", scope: !1624, file: !1624, line: 346, type: !10157, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10159)
!10157 = !DISubroutineType(types: !10158)
!10158 = !{null, !1788, !128}
!10159 = !{!10160, !10161}
!10160 = !DILocalVariable(name: "base", arg: 1, scope: !10156, file: !1624, line: 346, type: !1788)
!10161 = !DILocalVariable(name: "data", arg: 2, scope: !10156, file: !1624, line: 346, type: !128)
!10162 = !DILocation(line: 0, scope: !10156)
!10163 = !DILocation(line: 348, column: 28, scope: !10156)
!10164 = !DILocation(line: 348, column: 5, scope: !10156)
!10165 = !DILocation(line: 348, column: 25, scope: !10156)
!10166 = !DILocation(line: 349, column: 1, scope: !10156)
!10167 = !DILocation(line: 0, scope: !1888)
!10168 = !DILocation(line: 339, column: 1, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !1888, file: !1817, line: 339, column: 1)
!10170 = !DILocation(line: 339, column: 1, scope: !1888)
!10171 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1817, file: !1817, line: 260, type: !1768, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10172)
!10172 = !{!10173, !10174}
!10173 = !DILocalVariable(name: "dev", arg: 1, scope: !10171, file: !1817, line: 260, type: !1717)
!10174 = !DILocalVariable(name: "data", scope: !10171, file: !1817, line: 262, type: !10123)
!10175 = !DILocation(line: 0, scope: !10171)
!10176 = !DILocation(line: 262, column: 36, scope: !10171)
!10177 = !DILocation(line: 264, column: 12, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10171, file: !1817, line: 264, column: 6)
!10179 = !DILocation(line: 264, column: 6, scope: !10178)
!10180 = !DILocation(line: 264, column: 6, scope: !10171)
!10181 = !DILocation(line: 265, column: 29, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10178, file: !1817, line: 264, column: 22)
!10183 = !DILocation(line: 265, column: 3, scope: !10182)
!10184 = !DILocation(line: 266, column: 2, scope: !10182)
!10185 = !DILocation(line: 267, column: 1, scope: !10171)
!10186 = distinct !DISubprogram(name: "uart_imx_init", scope: !1817, file: !1817, line: 56, type: !1738, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10187)
!10187 = !{!10188, !10189, !10190, !10191, !10192, !10193}
!10188 = !DILocalVariable(name: "dev", arg: 1, scope: !10186, file: !1817, line: 56, type: !1717)
!10189 = !DILocalVariable(name: "uart", scope: !10186, file: !1817, line: 58, type: !1788)
!10190 = !DILocalVariable(name: "config", scope: !10186, file: !1817, line: 59, type: !1814)
!10191 = !DILocalVariable(name: "old_level", scope: !10186, file: !1817, line: 60, type: !32)
!10192 = !DILocalVariable(name: "err", scope: !10186, file: !1817, line: 61, type: !111)
!10193 = !DILocalVariable(name: "initConfig", scope: !10186, file: !1817, line: 67, type: !10194)
!10194 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1624, line: 57, baseType: !10195)
!10195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1624, line: 49, size: 192, elements: !10196)
!10196 = !{!10197, !10198, !10199, !10200, !10201, !10202}
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !10195, file: !1624, line: 51, baseType: !158, size: 32)
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !10195, file: !1624, line: 52, baseType: !158, size: 32, offset: 32)
!10199 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !10195, file: !1624, line: 53, baseType: !158, size: 32, offset: 64)
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !10195, file: !1624, line: 54, baseType: !158, size: 32, offset: 96)
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10195, file: !1624, line: 55, baseType: !158, size: 32, offset: 128)
!10202 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10195, file: !1624, line: 56, baseType: !158, size: 32, offset: 160)
!10203 = !DILocation(line: 0, scope: !10186)
!10204 = !DILocation(line: 58, column: 20, scope: !10186)
!10205 = !DILocation(line: 55, column: 2, scope: !10206, inlinedAt: !10210)
!10206 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7659, file: !7659, line: 42, type: !9702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10207)
!10207 = !{!10208, !10209}
!10208 = !DILocalVariable(name: "key", scope: !10206, file: !7659, line: 44, type: !32)
!10209 = !DILocalVariable(name: "tmp", scope: !10206, file: !7659, line: 53, type: !32)
!10210 = distinct !DILocation(line: 64, column: 14, scope: !10186)
!10211 = !{i64 2847508}
!10212 = !DILocation(line: 0, scope: !10206, inlinedAt: !10210)
!10213 = !DILocation(line: 67, column: 2, scope: !10186)
!10214 = !DILocation(line: 67, column: 21, scope: !10186)
!10215 = !DILocation(line: 67, column: 34, scope: !10186)
!10216 = !DILocation(line: 68, column: 23, scope: !10186)
!10217 = !DILocation(line: 75, column: 36, scope: !10186)
!10218 = !DILocation(line: 75, column: 8, scope: !10186)
!10219 = !DILocation(line: 76, column: 6, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10186, file: !1817, line: 76, column: 6)
!10221 = !DILocation(line: 76, column: 6, scope: !10186)
!10222 = !DILocation(line: 81, column: 26, scope: !10186)
!10223 = !DILocation(line: 81, column: 24, scope: !10186)
!10224 = !DILocation(line: 83, column: 2, scope: !10186)
!10225 = !DILocation(line: 86, column: 2, scope: !10186)
!10226 = !DILocation(line: 87, column: 2, scope: !10186)
!10227 = !DILocalVariable(name: "key", arg: 1, scope: !10228, file: !7659, line: 84, type: !32)
!10228 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10229)
!10229 = !{!10227}
!10230 = !DILocation(line: 0, scope: !10228, inlinedAt: !10231)
!10231 = distinct !DILocation(line: 90, column: 2, scope: !10186)
!10232 = !DILocation(line: 95, column: 2, scope: !10228, inlinedAt: !10231)
!10233 = !{i64 2848325}
!10234 = !DILocation(line: 93, column: 10, scope: !10186)
!10235 = !DILocation(line: 93, column: 2, scope: !10186)
!10236 = !DILocation(line: 97, column: 34, scope: !10186)
!10237 = !DILocation(line: 97, column: 26, scope: !10186)
!10238 = !DILocation(line: 97, column: 2, scope: !10186)
!10239 = !DILocation(line: 100, column: 2, scope: !10186)
!10240 = !DILocation(line: 102, column: 2, scope: !10186)
!10241 = !DILocation(line: 103, column: 1, scope: !10186)
!10242 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1826, file: !1826, line: 342, type: !10243, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10245)
!10243 = !DISubroutineType(types: !10244)
!10244 = !{!111, !1823, !128}
!10245 = !{!10246, !10247, !10248, !10249}
!10246 = !DILocalVariable(name: "config", arg: 1, scope: !10242, file: !1826, line: 342, type: !1823)
!10247 = !DILocalVariable(name: "id", arg: 2, scope: !10242, file: !1826, line: 343, type: !128)
!10248 = !DILocalVariable(name: "ret", scope: !10242, file: !1826, line: 345, type: !111)
!10249 = !DILocalVariable(name: "state", scope: !10242, file: !1826, line: 346, type: !1829)
!10250 = !DILocation(line: 0, scope: !10242)
!10251 = !DILocation(line: 346, column: 2, scope: !10242)
!10252 = !DILocation(line: 348, column: 8, scope: !10242)
!10253 = !DILocation(line: 349, column: 10, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10242, file: !1826, line: 349, column: 6)
!10255 = !DILocation(line: 349, column: 6, scope: !10242)
!10256 = !DILocation(line: 353, column: 44, scope: !10242)
!10257 = !DILocation(line: 353, column: 9, scope: !10242)
!10258 = !DILocation(line: 353, column: 2, scope: !10242)
!10259 = !DILocation(line: 354, column: 1, scope: !10242)
!10260 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1624, file: !1624, line: 444, type: !10157, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10261)
!10261 = !{!10262, !10263}
!10262 = !DILocalVariable(name: "base", arg: 1, scope: !10260, file: !1624, line: 444, type: !1788)
!10263 = !DILocalVariable(name: "watermark", arg: 2, scope: !10260, file: !1624, line: 444, type: !128)
!10264 = !DILocation(line: 0, scope: !10260)
!10265 = !DILocation(line: 447, column: 28, scope: !10260)
!10266 = !DILocation(line: 447, column: 48, scope: !10260)
!10267 = !DILocation(line: 447, column: 72, scope: !10260)
!10268 = !DILocation(line: 447, column: 25, scope: !10260)
!10269 = !DILocation(line: 448, column: 1, scope: !10260)
!10270 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1624, file: !1624, line: 458, type: !10157, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10271)
!10271 = !{!10272, !10273}
!10272 = !DILocalVariable(name: "base", arg: 1, scope: !10270, file: !1624, line: 458, type: !1788)
!10273 = !DILocalVariable(name: "watermark", arg: 2, scope: !10270, file: !1624, line: 458, type: !128)
!10274 = !DILocation(line: 0, scope: !10270)
!10275 = !DILocation(line: 461, column: 28, scope: !10270)
!10276 = !DILocation(line: 461, column: 48, scope: !10270)
!10277 = !DILocation(line: 461, column: 72, scope: !10270)
!10278 = !DILocation(line: 461, column: 25, scope: !10270)
!10279 = !DILocation(line: 462, column: 1, scope: !10270)
!10280 = distinct !DISubprogram(name: "UART_Enable", scope: !1624, file: !1624, line: 242, type: !10281, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10283)
!10281 = !DISubroutineType(types: !10282)
!10282 = !{null, !1788}
!10283 = !{!10284}
!10284 = !DILocalVariable(name: "base", arg: 1, scope: !10280, file: !1624, line: 242, type: !1788)
!10285 = !DILocation(line: 0, scope: !10280)
!10286 = !DILocation(line: 244, column: 5, scope: !10280)
!10287 = !DILocation(line: 244, column: 25, scope: !10280)
!10288 = !DILocation(line: 245, column: 1, scope: !10280)
!10289 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1826, file: !1826, line: 316, type: !10290, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10292)
!10290 = !DISubroutineType(types: !10291)
!10291 = !{!111, !1823, !1829}
!10292 = !{!10293, !10294, !10295}
!10293 = !DILocalVariable(name: "config", arg: 1, scope: !10289, file: !1826, line: 317, type: !1823)
!10294 = !DILocalVariable(name: "state", arg: 2, scope: !10289, file: !1826, line: 318, type: !1829)
!10295 = !DILocalVariable(name: "reg", scope: !10289, file: !1826, line: 320, type: !22)
!10296 = !DILocation(line: 0, scope: !10289)
!10297 = !DILocation(line: 329, column: 39, scope: !10289)
!10298 = !DILocation(line: 329, column: 52, scope: !10289)
!10299 = !DILocation(line: 329, column: 9, scope: !10289)
!10300 = !DILocation(line: 329, column: 2, scope: !10289)
!10301 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2124, file: !2124, line: 270, type: !2130, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10302)
!10302 = !{!10303}
!10303 = !DILocalVariable(name: "dev", arg: 1, scope: !10301, file: !2124, line: 270, type: !2132)
!10304 = !DILocation(line: 0, scope: !10301)
!10305 = !DILocation(line: 274, column: 2, scope: !10301)
!10306 = !DILocation(line: 275, column: 12, scope: !10301)
!10307 = !DILocation(line: 276, column: 15, scope: !10301)
!10308 = !DILocation(line: 277, column: 16, scope: !10301)
!10309 = !DILocation(line: 278, column: 15, scope: !10301)
!10310 = !DILocation(line: 279, column: 16, scope: !10301)
!10311 = !DILocation(line: 282, column: 2, scope: !10301)
!10312 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2045, file: !2045, line: 1814, type: !7578, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10313)
!10313 = !{!10314, !10315}
!10314 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10312, file: !2045, line: 1814, type: !2938)
!10315 = !DILocalVariable(name: "priority", arg: 2, scope: !10312, file: !2045, line: 1814, type: !158)
!10316 = !DILocation(line: 0, scope: !10312)
!10317 = !DILocation(line: 1822, column: 46, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10319, file: !2045, line: 1821, column: 3)
!10319 = distinct !DILexicalBlock(scope: !10312, file: !2045, line: 1816, column: 7)
!10320 = !DILocation(line: 1824, column: 1, scope: !10312)
!10321 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2124, file: !2124, line: 118, type: !7479, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10322)
!10322 = !{!10323, !10324}
!10323 = !DILocalVariable(name: "arg", arg: 1, scope: !10321, file: !2124, line: 118, type: !133)
!10324 = !DILocalVariable(name: "dticks", scope: !10321, file: !2124, line: 121, type: !158)
!10325 = !DILocation(line: 0, scope: !10321)
!10326 = !DILocation(line: 124, column: 2, scope: !10321)
!10327 = !DILocation(line: 129, column: 17, scope: !10321)
!10328 = !DILocation(line: 129, column: 14, scope: !10321)
!10329 = !DILocation(line: 130, column: 15, scope: !10321)
!10330 = !DILocation(line: 145, column: 27, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10332, file: !2124, line: 132, column: 16)
!10332 = distinct !DILexicalBlock(scope: !10321, file: !2124, line: 132, column: 6)
!10333 = !DILocation(line: 145, column: 25, scope: !10331)
!10334 = !DILocation(line: 145, column: 45, scope: !10331)
!10335 = !DILocation(line: 146, column: 30, scope: !10331)
!10336 = !DILocation(line: 146, column: 20, scope: !10331)
!10337 = !DILocation(line: 147, column: 3, scope: !10331)
!10338 = !DILocation(line: 151, column: 2, scope: !10321)
!10339 = !DILocation(line: 152, column: 1, scope: !10321)
!10340 = distinct !DISubprogram(name: "elapsed", scope: !2124, file: !2124, line: 85, type: !7625, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10341)
!10341 = !{!10342, !10343, !10344}
!10342 = !DILocalVariable(name: "val1", scope: !10340, file: !2124, line: 87, type: !158)
!10343 = !DILocalVariable(name: "ctrl", scope: !10340, file: !2124, line: 88, type: !158)
!10344 = !DILocalVariable(name: "val2", scope: !10340, file: !2124, line: 89, type: !158)
!10345 = !DILocation(line: 87, column: 27, scope: !10340)
!10346 = !DILocation(line: 0, scope: !10340)
!10347 = !DILocation(line: 88, column: 27, scope: !10340)
!10348 = !DILocation(line: 89, column: 27, scope: !10340)
!10349 = !DILocation(line: 105, column: 12, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10340, file: !2124, line: 105, column: 6)
!10351 = !DILocation(line: 106, column: 6, scope: !10350)
!10352 = !DILocation(line: 107, column: 16, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10350, file: !2124, line: 106, column: 24)
!10354 = !DILocation(line: 111, column: 18, scope: !10353)
!10355 = !DILocation(line: 112, column: 2, scope: !10353)
!10356 = !DILocation(line: 114, column: 20, scope: !10340)
!10357 = !DILocation(line: 114, column: 30, scope: !10340)
!10358 = !DILocation(line: 114, column: 28, scope: !10340)
!10359 = !DILocation(line: 114, column: 2, scope: !10340)
!10360 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2124, file: !2124, line: 154, type: !10361, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10363)
!10361 = !DISubroutineType(types: !10362)
!10362 = !{null, !413, !131}
!10363 = !{!10364, !10365, !10366, !10367, !10368, !10369, !10370, !10375, !10376}
!10364 = !DILocalVariable(name: "ticks", arg: 1, scope: !10360, file: !2124, line: 154, type: !413)
!10365 = !DILocalVariable(name: "idle", arg: 2, scope: !10360, file: !2124, line: 154, type: !131)
!10366 = !DILocalVariable(name: "delay", scope: !10360, file: !2124, line: 169, type: !158)
!10367 = !DILocalVariable(name: "val1", scope: !10360, file: !2124, line: 170, type: !158)
!10368 = !DILocalVariable(name: "val2", scope: !10360, file: !2124, line: 170, type: !158)
!10369 = !DILocalVariable(name: "last_load_", scope: !10360, file: !2124, line: 171, type: !158)
!10370 = !DILocalVariable(name: "key", scope: !10360, file: !2124, line: 176, type: !10371)
!10371 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !246, line: 106, baseType: !10372)
!10372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !246, line: 32, size: 32, elements: !10373)
!10373 = !{!10374}
!10374 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10372, file: !246, line: 33, baseType: !111, size: 32)
!10375 = !DILocalVariable(name: "pending", scope: !10360, file: !2124, line: 178, type: !158)
!10376 = !DILocalVariable(name: "unannounced", scope: !10360, file: !2124, line: 185, type: !158)
!10377 = !DILocation(line: 0, scope: !10360)
!10378 = !DILocation(line: 162, column: 49, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10360, file: !2124, line: 162, column: 6)
!10380 = !DILocation(line: 163, column: 17, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10379, file: !2124, line: 162, column: 78)
!10382 = !DILocation(line: 164, column: 13, scope: !10381)
!10383 = !DILocation(line: 165, column: 3, scope: !10381)
!10384 = !DILocation(line: 171, column: 24, scope: !10360)
!10385 = !DILocation(line: 173, column: 10, scope: !10360)
!10386 = !DILocation(line: 174, column: 10, scope: !10360)
!10387 = !DILocalVariable(name: "l", arg: 1, scope: !10388, file: !246, line: 136, type: !10391)
!10388 = distinct !DISubprogram(name: "k_spin_lock", scope: !246, file: !246, line: 136, type: !10389, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10392)
!10389 = !DISubroutineType(types: !10390)
!10390 = !{!10371, !10391}
!10391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!10392 = !{!10387, !10393}
!10393 = !DILocalVariable(name: "k", scope: !10388, file: !246, line: 139, type: !10371)
!10394 = !DILocation(line: 0, scope: !10388, inlinedAt: !10395)
!10395 = distinct !DILocation(line: 176, column: 25, scope: !10360)
!10396 = !DILocation(line: 55, column: 2, scope: !10397, inlinedAt: !10401)
!10397 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7659, file: !7659, line: 42, type: !9702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10398)
!10398 = !{!10399, !10400}
!10399 = !DILocalVariable(name: "key", scope: !10397, file: !7659, line: 44, type: !32)
!10400 = !DILocalVariable(name: "tmp", scope: !10397, file: !7659, line: 53, type: !32)
!10401 = distinct !DILocation(line: 145, column: 10, scope: !10388, inlinedAt: !10395)
!10402 = !{i64 2949512}
!10403 = !DILocation(line: 0, scope: !10397, inlinedAt: !10401)
!10404 = !DILocation(line: 178, column: 21, scope: !10360)
!10405 = !DILocation(line: 180, column: 18, scope: !10360)
!10406 = !DILocation(line: 182, column: 14, scope: !10360)
!10407 = !DILocation(line: 183, column: 15, scope: !10360)
!10408 = !DILocation(line: 185, column: 39, scope: !10360)
!10409 = !DILocation(line: 185, column: 37, scope: !10360)
!10410 = !DILocation(line: 187, column: 27, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10360, file: !2124, line: 187, column: 6)
!10412 = !DILocation(line: 187, column: 6, scope: !10360)
!10413 = !DILocation(line: 202, column: 27, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10411, file: !2124, line: 195, column: 9)
!10415 = !DILocation(line: 202, column: 48, scope: !10414)
!10416 = !DILocation(line: 203, column: 9, scope: !10414)
!10417 = !DILocation(line: 204, column: 11, scope: !10414)
!10418 = !DILocation(line: 205, column: 13, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10414, file: !2124, line: 205, column: 7)
!10420 = !DILocation(line: 205, column: 7, scope: !10414)
!10421 = !DILocation(line: 0, scope: !10411)
!10422 = !DILocation(line: 212, column: 18, scope: !10360)
!10423 = !DILocation(line: 214, column: 28, scope: !10360)
!10424 = !DILocation(line: 214, column: 16, scope: !10360)
!10425 = !DILocation(line: 215, column: 15, scope: !10360)
!10426 = !DILocation(line: 227, column: 11, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10360, file: !2124, line: 227, column: 6)
!10428 = !DILocation(line: 227, column: 6, scope: !10360)
!10429 = !DILocation(line: 228, column: 15, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10427, file: !2124, line: 227, column: 19)
!10431 = !DILocation(line: 228, column: 38, scope: !10430)
!10432 = !DILocation(line: 228, column: 24, scope: !10430)
!10433 = !DILocation(line: 229, column: 2, scope: !10430)
!10434 = !DILocation(line: 230, column: 24, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10427, file: !2124, line: 229, column: 9)
!10436 = !DILocation(line: 230, column: 15, scope: !10435)
!10437 = !DILocation(line: 0, scope: !10427)
!10438 = !DILocalVariable(name: "key", arg: 2, scope: !10439, file: !246, line: 190, type: !10371)
!10439 = distinct !DISubprogram(name: "k_spin_unlock", scope: !246, file: !246, line: 189, type: !10440, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10442)
!10440 = !DISubroutineType(types: !10441)
!10441 = !{null, !10391, !10371}
!10442 = !{!10443, !10438}
!10443 = !DILocalVariable(name: "l", arg: 1, scope: !10439, file: !246, line: 189, type: !10391)
!10444 = !DILocation(line: 0, scope: !10439, inlinedAt: !10445)
!10445 = distinct !DILocation(line: 232, column: 2, scope: !10360)
!10446 = !DILocalVariable(name: "key", arg: 1, scope: !10447, file: !7659, line: 84, type: !32)
!10447 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10448)
!10448 = !{!10446}
!10449 = !DILocation(line: 0, scope: !10447, inlinedAt: !10450)
!10450 = distinct !DILocation(line: 215, column: 2, scope: !10439, inlinedAt: !10445)
!10451 = !DILocation(line: 95, column: 2, scope: !10447, inlinedAt: !10450)
!10452 = !{i64 2950329}
!10453 = !DILocation(line: 234, column: 1, scope: !10360)
!10454 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2124, file: !2124, line: 236, type: !7625, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10455)
!10455 = !{!10456, !10457}
!10456 = !DILocalVariable(name: "key", scope: !10454, file: !2124, line: 242, type: !10371)
!10457 = !DILocalVariable(name: "cyc", scope: !10454, file: !2124, line: 243, type: !158)
!10458 = !DILocation(line: 0, scope: !10388, inlinedAt: !10459)
!10459 = distinct !DILocation(line: 242, column: 25, scope: !10454)
!10460 = !DILocation(line: 55, column: 2, scope: !10397, inlinedAt: !10461)
!10461 = distinct !DILocation(line: 145, column: 10, scope: !10388, inlinedAt: !10459)
!10462 = !DILocation(line: 0, scope: !10397, inlinedAt: !10461)
!10463 = !DILocation(line: 0, scope: !10454)
!10464 = !DILocation(line: 243, column: 17, scope: !10454)
!10465 = !DILocation(line: 243, column: 29, scope: !10454)
!10466 = !DILocation(line: 243, column: 27, scope: !10454)
!10467 = !DILocation(line: 243, column: 43, scope: !10454)
!10468 = !DILocation(line: 243, column: 41, scope: !10454)
!10469 = !DILocation(line: 0, scope: !10439, inlinedAt: !10470)
!10470 = distinct !DILocation(line: 245, column: 2, scope: !10454)
!10471 = !DILocation(line: 0, scope: !10447, inlinedAt: !10472)
!10472 = distinct !DILocation(line: 215, column: 2, scope: !10439, inlinedAt: !10470)
!10473 = !DILocation(line: 95, column: 2, scope: !10447, inlinedAt: !10472)
!10474 = !DILocation(line: 246, column: 13, scope: !10454)
!10475 = !DILocation(line: 246, column: 2, scope: !10454)
!10476 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2124, file: !2124, line: 249, type: !7625, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !10477)
!10477 = !{!10478, !10479}
!10478 = !DILocalVariable(name: "key", scope: !10476, file: !2124, line: 251, type: !10371)
!10479 = !DILocalVariable(name: "ret", scope: !10476, file: !2124, line: 252, type: !158)
!10480 = !DILocation(line: 0, scope: !10388, inlinedAt: !10481)
!10481 = distinct !DILocation(line: 251, column: 25, scope: !10476)
!10482 = !DILocation(line: 55, column: 2, scope: !10397, inlinedAt: !10483)
!10483 = distinct !DILocation(line: 145, column: 10, scope: !10388, inlinedAt: !10481)
!10484 = !DILocation(line: 0, scope: !10397, inlinedAt: !10483)
!10485 = !DILocation(line: 0, scope: !10476)
!10486 = !DILocation(line: 252, column: 17, scope: !10476)
!10487 = !DILocation(line: 252, column: 29, scope: !10476)
!10488 = !DILocation(line: 252, column: 27, scope: !10476)
!10489 = !DILocation(line: 0, scope: !10439, inlinedAt: !10490)
!10490 = distinct !DILocation(line: 254, column: 2, scope: !10476)
!10491 = !DILocation(line: 0, scope: !10447, inlinedAt: !10492)
!10492 = distinct !DILocation(line: 215, column: 2, scope: !10439, inlinedAt: !10490)
!10493 = !DILocation(line: 95, column: 2, scope: !10447, inlinedAt: !10492)
!10494 = !DILocation(line: 255, column: 2, scope: !10476)
!10495 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2124, file: !2124, line: 258, type: !416, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !247)
!10496 = !DILocation(line: 260, column: 6, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10495, file: !2124, line: 260, column: 6)
!10498 = !DILocation(line: 260, column: 16, scope: !10497)
!10499 = !DILocation(line: 260, column: 6, scope: !10495)
!10500 = !DILocation(line: 261, column: 17, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10497, file: !2124, line: 260, column: 34)
!10502 = !DILocation(line: 262, column: 2, scope: !10501)
!10503 = !DILocation(line: 263, column: 1, scope: !10495)
!10504 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2124, file: !2124, line: 265, type: !416, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !247)
!10505 = !DILocation(line: 267, column: 16, scope: !10504)
!10506 = !DILocation(line: 268, column: 1, scope: !10504)
!10507 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10508, file: !10508, line: 9, type: !10509, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3231, retainedNodes: !10539)
!10508 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10509 = !DISubroutineType(types: !10510)
!10510 = !{!111, !10511, !128, !10538}
!10511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10512, size: 32)
!10512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10513)
!10513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1826, line: 60, size: 64, elements: !10514)
!10514 = !{!10515, !10537}
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10513, file: !1826, line: 69, baseType: !10516, size: 32)
!10516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10517, size: 32)
!10517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10518)
!10518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1826, line: 50, size: 64, elements: !10519)
!10519 = !{!10520, !10535, !10536}
!10520 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10518, file: !1826, line: 52, baseType: !10521, size: 32)
!10521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10522, size: 32)
!10522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10523)
!10523 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1585, line: 64, baseType: !10524)
!10524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1585, line: 59, size: 160, elements: !10525)
!10525 = !{!10526, !10534}
!10526 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10524, file: !1585, line: 60, baseType: !10527, size: 128)
!10527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1585, line: 51, size: 128, elements: !10528)
!10528 = !{!10529, !10530, !10531, !10532, !10533}
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !10527, file: !1585, line: 52, baseType: !158, size: 32)
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !10527, file: !1585, line: 53, baseType: !158, size: 32, offset: 32)
!10531 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !10527, file: !1585, line: 54, baseType: !158, size: 32, offset: 64)
!10532 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !10527, file: !1585, line: 55, baseType: !128, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10533 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !10527, file: !1585, line: 56, baseType: !158, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10524, file: !1585, line: 61, baseType: !158, size: 32, offset: 128)
!10535 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10518, file: !1826, line: 54, baseType: !128, size: 8, offset: 32)
!10536 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10518, file: !1826, line: 56, baseType: !128, size: 8, offset: 40)
!10537 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10513, file: !1826, line: 71, baseType: !128, size: 8, offset: 32)
!10538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10516, size: 32)
!10539 = !{!10540, !10541, !10542}
!10540 = !DILocalVariable(name: "config", arg: 1, scope: !10507, file: !10508, line: 9, type: !10511)
!10541 = !DILocalVariable(name: "id", arg: 2, scope: !10507, file: !10508, line: 9, type: !128)
!10542 = !DILocalVariable(name: "state", arg: 3, scope: !10507, file: !10508, line: 10, type: !10538)
!10543 = !DILocation(line: 0, scope: !10507)
!10544 = !DILocation(line: 12, column: 20, scope: !10507)
!10545 = !DILocation(line: 13, column: 27, scope: !10507)
!10546 = !DILocation(line: 13, column: 42, scope: !10507)
!10547 = !DILocation(line: 13, column: 19, scope: !10507)
!10548 = !DILocation(line: 13, column: 16, scope: !10507)
!10549 = !DILocation(line: 13, column: 2, scope: !10507)
!10550 = distinct !{!10550, !10549, !10551}
!10551 = !DILocation(line: 19, column: 2, scope: !10507)
!10552 = !DILocation(line: 14, column: 23, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10554, file: !10508, line: 14, column: 7)
!10554 = distinct !DILexicalBlock(scope: !10507, file: !10508, line: 13, column: 54)
!10555 = !DILocation(line: 14, column: 10, scope: !10553)
!10556 = !DILocation(line: 18, column: 11, scope: !10554)
!10557 = !DILocation(line: 14, column: 7, scope: !10554)
!10558 = !DILocation(line: 22, column: 1, scope: !10507)
!10559 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !2163, file: !2163, line: 51, type: !2169, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2159, retainedNodes: !10560)
!10560 = !{!10561}
!10561 = !DILocalVariable(name: "dev", arg: 1, scope: !10559, file: !2163, line: 51, type: !2171)
!10562 = !DILocation(line: 0, scope: !10559)
!10563 = !DILocation(line: 66, column: 2, scope: !10559)
!10564 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2163, file: !2163, line: 10, type: !10565, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2159, retainedNodes: !10581)
!10565 = !DISubroutineType(types: !10566)
!10566 = !{!111, !10567, !128, !22}
!10567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10568, size: 32)
!10568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10569)
!10569 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1585, line: 64, baseType: !10570)
!10570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1585, line: 59, size: 160, elements: !10571)
!10571 = !{!10572, !10580}
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10570, file: !1585, line: 60, baseType: !10573, size: 128)
!10573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1585, line: 51, size: 128, elements: !10574)
!10574 = !{!10575, !10576, !10577, !10578, !10579}
!10575 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !10573, file: !1585, line: 52, baseType: !158, size: 32)
!10576 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !10573, file: !1585, line: 53, baseType: !158, size: 32, offset: 32)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !10573, file: !1585, line: 54, baseType: !158, size: 32, offset: 64)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !10573, file: !1585, line: 55, baseType: !128, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !10573, file: !1585, line: 56, baseType: !158, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10580 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10570, file: !1585, line: 61, baseType: !158, size: 32, offset: 128)
!10581 = !{!10582, !10583, !10584, !10585, !10587, !10590, !10591, !10592, !10593, !10594}
!10582 = !DILocalVariable(name: "pins", arg: 1, scope: !10564, file: !2163, line: 10, type: !10567)
!10583 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10564, file: !2163, line: 10, type: !128)
!10584 = !DILocalVariable(name: "reg", arg: 3, scope: !10564, file: !2163, line: 11, type: !22)
!10585 = !DILocalVariable(name: "i", scope: !10586, file: !2163, line: 14, type: !128)
!10586 = distinct !DILexicalBlock(scope: !10564, file: !2163, line: 14, column: 2)
!10587 = !DILocalVariable(name: "mux_register", scope: !10588, file: !2163, line: 15, type: !158)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !2163, line: 14, column: 41)
!10589 = distinct !DILexicalBlock(scope: !10586, file: !2163, line: 14, column: 2)
!10590 = !DILocalVariable(name: "mux_mode", scope: !10588, file: !2163, line: 16, type: !158)
!10591 = !DILocalVariable(name: "input_register", scope: !10588, file: !2163, line: 17, type: !158)
!10592 = !DILocalVariable(name: "input_daisy", scope: !10588, file: !2163, line: 18, type: !158)
!10593 = !DILocalVariable(name: "config_register", scope: !10588, file: !2163, line: 19, type: !158)
!10594 = !DILocalVariable(name: "pin_ctrl_flags", scope: !10588, file: !2163, line: 20, type: !158)
!10595 = !DILocation(line: 0, scope: !10564)
!10596 = !DILocation(line: 0, scope: !10586)
!10597 = !DILocation(line: 14, column: 25, scope: !10589)
!10598 = !DILocation(line: 14, column: 2, scope: !10586)
!10599 = !DILocation(line: 48, column: 2, scope: !10564)
!10600 = !DILocation(line: 15, column: 42, scope: !10588)
!10601 = !DILocation(line: 0, scope: !10588)
!10602 = !DILocation(line: 16, column: 38, scope: !10588)
!10603 = !DILocation(line: 17, column: 44, scope: !10588)
!10604 = !DILocation(line: 19, column: 45, scope: !10588)
!10605 = !DILocation(line: 20, column: 37, scope: !10588)
!10606 = !DILocation(line: 35, column: 4, scope: !10588)
!10607 = !DILocation(line: 36, column: 4, scope: !10588)
!10608 = !DILocation(line: 35, column: 45, scope: !10588)
!10609 = !DILocation(line: 34, column: 5, scope: !10588)
!10610 = !DILocation(line: 34, column: 53, scope: !10588)
!10611 = !DILocation(line: 37, column: 7, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10588, file: !2163, line: 37, column: 7)
!10613 = !DILocation(line: 37, column: 7, scope: !10588)
!10614 = !DILocation(line: 18, column: 41, scope: !10588)
!10615 = !DILocation(line: 39, column: 5, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10612, file: !2163, line: 37, column: 23)
!10617 = !DILocation(line: 38, column: 6, scope: !10616)
!10618 = !DILocation(line: 38, column: 56, scope: !10616)
!10619 = !DILocation(line: 40, column: 3, scope: !10616)
!10620 = !DILocation(line: 41, column: 7, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10588, file: !2163, line: 41, column: 7)
!10622 = !DILocation(line: 41, column: 7, scope: !10588)
!10623 = !DILocation(line: 43, column: 20, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10621, file: !2163, line: 41, column: 24)
!10625 = !DILocation(line: 42, column: 6, scope: !10624)
!10626 = !DILocation(line: 42, column: 57, scope: !10624)
!10627 = !DILocation(line: 44, column: 3, scope: !10624)
!10628 = !DILocation(line: 14, column: 37, scope: !10589)
!10629 = distinct !{!10629, !10598, !10630}
!10630 = !DILocation(line: 47, column: 2, scope: !10586)
!10631 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !10632, file: !10632, line: 43, type: !10633, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3233, retainedNodes: !10687)
!10632 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10633 = !DISubroutineType(types: !10634)
!10634 = !{null, !10635, !158, !158, !158}
!10635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10636, size: 32)
!10636 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !1173, line: 4575, baseType: !10637)
!10637 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 4532, size: 390144, elements: !10638)
!10638 = !{!10639, !10640, !10641, !10642, !10643, !10644, !10652, !10653, !10661, !10662}
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !10637, file: !1173, line: 4533, baseType: !1177, size: 32)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !10637, file: !1173, line: 4534, baseType: !1177, size: 32, offset: 32)
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !10637, file: !1173, line: 4535, baseType: !1177, size: 32, offset: 64)
!10642 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !10637, file: !1173, line: 4536, baseType: !1177, size: 32, offset: 96)
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10637, file: !1173, line: 4537, baseType: !1182, size: 16256, offset: 128)
!10644 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !10637, file: !1173, line: 4543, baseType: !10645, size: 4224, offset: 16384)
!10645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10646, size: 4224, elements: !1193)
!10646 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10637, file: !1173, line: 4538, size: 128, elements: !10647)
!10647 = !{!10648, !10649, !10650, !10651}
!10648 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !10646, file: !1173, line: 4539, baseType: !1177, size: 32)
!10649 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !10646, file: !1173, line: 4540, baseType: !1177, size: 32, offset: 32)
!10650 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !10646, file: !1173, line: 4541, baseType: !1177, size: 32, offset: 64)
!10651 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !10646, file: !1173, line: 4542, baseType: !1177, size: 32, offset: 96)
!10652 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10637, file: !1173, line: 4544, baseType: !1196, size: 110464, offset: 20608)
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !10637, file: !1173, line: 4550, baseType: !10654, size: 24448, offset: 131072)
!10654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10655, size: 24448, elements: !1207)
!10655 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10637, file: !1173, line: 4545, size: 128, elements: !10656)
!10656 = !{!10657, !10658, !10659, !10660}
!10657 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !10655, file: !1173, line: 4546, baseType: !1177, size: 32)
!10658 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !10655, file: !1173, line: 4547, baseType: !1177, size: 32, offset: 32)
!10659 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !10655, file: !1173, line: 4548, baseType: !1177, size: 32, offset: 64)
!10660 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !10655, file: !1173, line: 4549, baseType: !1177, size: 32, offset: 96)
!10661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10637, file: !1173, line: 4551, baseType: !1210, size: 106624, offset: 155520)
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !10637, file: !1173, line: 4574, baseType: !10663, size: 128000, offset: 262144)
!10663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10664, size: 128000, elements: !1241)
!10664 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10637, file: !1173, line: 4552, size: 1024, elements: !10665)
!10665 = !{!10666, !10667, !10668, !10669, !10670, !10671, !10672, !10673, !10674, !10675, !10676, !10677, !10678, !10679, !10680, !10681, !10682, !10683, !10684, !10685, !10686}
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !10664, file: !1173, line: 4553, baseType: !1177, size: 32)
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !10664, file: !1173, line: 4554, baseType: !1177, size: 32, offset: 32)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !10664, file: !1173, line: 4555, baseType: !1177, size: 32, offset: 64)
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !10664, file: !1173, line: 4556, baseType: !1177, size: 32, offset: 96)
!10670 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !10664, file: !1173, line: 4557, baseType: !1177, size: 32, offset: 128)
!10671 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !10664, file: !1173, line: 4558, baseType: !1177, size: 32, offset: 160)
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !10664, file: !1173, line: 4559, baseType: !1177, size: 32, offset: 192)
!10673 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !10664, file: !1173, line: 4560, baseType: !1177, size: 32, offset: 224)
!10674 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !10664, file: !1173, line: 4561, baseType: !1177, size: 32, offset: 256)
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !10664, file: !1173, line: 4562, baseType: !1177, size: 32, offset: 288)
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !10664, file: !1173, line: 4563, baseType: !1177, size: 32, offset: 320)
!10677 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !10664, file: !1173, line: 4564, baseType: !1177, size: 32, offset: 352)
!10678 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !10664, file: !1173, line: 4565, baseType: !1177, size: 32, offset: 384)
!10679 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !10664, file: !1173, line: 4566, baseType: !1177, size: 32, offset: 416)
!10680 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !10664, file: !1173, line: 4567, baseType: !1177, size: 32, offset: 448)
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !10664, file: !1173, line: 4568, baseType: !1177, size: 32, offset: 480)
!10682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10664, file: !1173, line: 4569, baseType: !1234, size: 384, offset: 512)
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !10664, file: !1173, line: 4570, baseType: !1177, size: 32, offset: 896)
!10684 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !10664, file: !1173, line: 4571, baseType: !1177, size: 32, offset: 928)
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !10664, file: !1173, line: 4572, baseType: !1177, size: 32, offset: 960)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !10664, file: !1173, line: 4573, baseType: !1177, size: 32, offset: 992)
!10687 = !{!10688, !10689, !10690, !10691}
!10688 = !DILocalVariable(name: "base", arg: 1, scope: !10631, file: !10632, line: 43, type: !10635)
!10689 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10631, file: !10632, line: 43, type: !158)
!10690 = !DILocalVariable(name: "pre", arg: 3, scope: !10631, file: !10632, line: 43, type: !158)
!10691 = !DILocalVariable(name: "post", arg: 4, scope: !10631, file: !10632, line: 43, type: !158)
!10692 = !DILocation(line: 0, scope: !10631)
!10693 = !DILocation(line: 48, column: 25, scope: !10631)
!10694 = !DILocation(line: 48, column: 42, scope: !10631)
!10695 = !DILocation(line: 50, column: 24, scope: !10631)
!10696 = !DILocation(line: 50, column: 56, scope: !10631)
!10697 = !DILocation(line: 49, column: 94, scope: !10631)
!10698 = !DILocation(line: 50, column: 54, scope: !10631)
!10699 = !DILocation(line: 48, column: 22, scope: !10631)
!10700 = !DILocation(line: 51, column: 1, scope: !10631)
!10701 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !10632, file: !10632, line: 59, type: !10702, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3233, retainedNodes: !10704)
!10702 = !DISubroutineType(types: !10703)
!10703 = !{null, !10635, !158, !1852, !1852}
!10704 = !{!10705, !10706, !10707, !10708}
!10705 = !DILocalVariable(name: "base", arg: 1, scope: !10701, file: !10632, line: 59, type: !10635)
!10706 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10701, file: !10632, line: 59, type: !158)
!10707 = !DILocalVariable(name: "pre", arg: 3, scope: !10701, file: !10632, line: 59, type: !1852)
!10708 = !DILocalVariable(name: "post", arg: 4, scope: !10701, file: !10632, line: 59, type: !1852)
!10709 = !DILocation(line: 0, scope: !10701)
!10710 = !DILocation(line: 63, column: 13, scope: !10701)
!10711 = !DILocation(line: 63, column: 63, scope: !10701)
!10712 = !DILocation(line: 63, column: 10, scope: !10701)
!10713 = !DILocation(line: 64, column: 14, scope: !10701)
!10714 = !DILocation(line: 64, column: 31, scope: !10701)
!10715 = !DILocation(line: 64, column: 11, scope: !10701)
!10716 = !DILocation(line: 65, column: 1, scope: !10701)
!10717 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !10632, file: !10632, line: 73, type: !10718, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3233, retainedNodes: !10720)
!10718 = !DISubroutineType(types: !10719)
!10719 = !{null, !10635, !158, !158, !158, !158}
!10720 = !{!10721, !10722, !10723, !10724, !10725}
!10721 = !DILocalVariable(name: "base", arg: 1, scope: !10717, file: !10632, line: 73, type: !10635)
!10722 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10717, file: !10632, line: 73, type: !158)
!10723 = !DILocalVariable(name: "mux", arg: 3, scope: !10717, file: !10632, line: 73, type: !158)
!10724 = !DILocalVariable(name: "pre", arg: 4, scope: !10717, file: !10632, line: 73, type: !158)
!10725 = !DILocalVariable(name: "post", arg: 5, scope: !10717, file: !10632, line: 73, type: !158)
!10726 = !DILocation(line: 0, scope: !10717)
!10727 = !DILocation(line: 78, column: 25, scope: !10717)
!10728 = !DILocation(line: 78, column: 42, scope: !10717)
!10729 = !DILocation(line: 80, column: 24, scope: !10717)
!10730 = !DILocation(line: 80, column: 51, scope: !10717)
!10731 = !DILocation(line: 80, column: 83, scope: !10717)
!10732 = !DILocation(line: 79, column: 121, scope: !10717)
!10733 = !DILocation(line: 80, column: 49, scope: !10717)
!10734 = !DILocation(line: 80, column: 81, scope: !10717)
!10735 = !DILocation(line: 78, column: 22, scope: !10717)
!10736 = !DILocation(line: 81, column: 1, scope: !10717)
!10737 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !10738, file: !10738, line: 43, type: !10739, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !10741)
!10738 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10739 = !DISubroutineType(types: !10740)
!10740 = !{!158, !3249}
!10741 = !{!10742}
!10742 = !DILocalVariable(name: "base", arg: 1, scope: !10737, file: !10738, line: 43, type: !3249)
!10743 = !DILocation(line: 0, scope: !10737)
!10744 = !DILocation(line: 45, column: 9, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10737, file: !10738, line: 45, column: 9)
!10746 = !DILocation(line: 45, column: 9, scope: !10737)
!10747 = !DILocation(line: 48, column: 26, scope: !10737)
!10748 = !DILocation(line: 48, column: 45, scope: !10737)
!10749 = !DILocation(line: 48, column: 23, scope: !10737)
!10750 = !DILocation(line: 48, column: 5, scope: !10737)
!10751 = !DILocation(line: 49, column: 1, scope: !10737)
!10752 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !3240, file: !3240, line: 220, type: !10753, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !10755)
!10753 = !DISubroutineType(types: !10754)
!10754 = !{!131, !3249, !158}
!10755 = !{!10756, !10757}
!10756 = !DILocalVariable(name: "base", arg: 1, scope: !10752, file: !3240, line: 220, type: !3249)
!10757 = !DILocalVariable(name: "pllControl", arg: 2, scope: !10752, file: !3240, line: 220, type: !158)
!10758 = !DILocation(line: 0, scope: !10752)
!10759 = !DILocation(line: 222, column: 19, scope: !10752)
!10760 = !DILocation(line: 222, column: 58, scope: !10752)
!10761 = !DILocation(line: 222, column: 12, scope: !10752)
!10762 = !DILocation(line: 222, column: 5, scope: !10752)
!10763 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !10738, file: !10738, line: 57, type: !10739, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !10764)
!10764 = !{!10765}
!10765 = !DILocalVariable(name: "base", arg: 1, scope: !10763, file: !10738, line: 57, type: !3249)
!10766 = !DILocation(line: 0, scope: !10763)
!10767 = !DILocation(line: 59, column: 9, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10763, file: !10738, line: 59, column: 9)
!10769 = !DILocation(line: 59, column: 9, scope: !10763)
!10770 = !DILocation(line: 62, column: 9, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10763, file: !10738, line: 62, column: 9)
!10772 = !DILocation(line: 62, column: 28, scope: !10771)
!10773 = !DILocation(line: 0, scope: !10771)
!10774 = !DILocation(line: 66, column: 1, scope: !10763)
!10775 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !10738, file: !10738, line: 74, type: !10739, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !10776)
!10776 = !{!10777, !10778, !10779, !10780}
!10777 = !DILocalVariable(name: "base", arg: 1, scope: !10775, file: !10738, line: 74, type: !3249)
!10778 = !DILocalVariable(name: "divSelect", scope: !10775, file: !10738, line: 76, type: !128)
!10779 = !DILocalVariable(name: "divTestSelect", scope: !10775, file: !10738, line: 76, type: !128)
!10780 = !DILocalVariable(name: "factor", scope: !10775, file: !10738, line: 77, type: !3312)
!10781 = !DILocation(line: 0, scope: !10775)
!10782 = !DILocation(line: 79, column: 9, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10775, file: !10738, line: 79, column: 9)
!10784 = !DILocation(line: 79, column: 9, scope: !10775)
!10785 = !DILocation(line: 82, column: 17, scope: !10775)
!10786 = !DILocation(line: 83, column: 22, scope: !10775)
!10787 = !DILocation(line: 83, column: 100, scope: !10775)
!10788 = !DILocation(line: 83, column: 21, scope: !10775)
!10789 = !DILocation(line: 86, column: 5, scope: !10775)
!10790 = !DILocation(line: 100, column: 9, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10775, file: !10738, line: 100, column: 9)
!10792 = !DILocation(line: 100, column: 41, scope: !10791)
!10793 = !DILocation(line: 100, column: 9, scope: !10775)
!10794 = !DILocation(line: 102, column: 27, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10791, file: !10738, line: 101, column: 5)
!10796 = !DILocation(line: 102, column: 59, scope: !10795)
!10797 = !DILocation(line: 102, column: 19, scope: !10795)
!10798 = !DILocation(line: 103, column: 27, scope: !10795)
!10799 = !DILocation(line: 103, column: 62, scope: !10795)
!10800 = !DILocation(line: 103, column: 19, scope: !10795)
!10801 = !DILocation(line: 102, column: 95, scope: !10795)
!10802 = !DILocation(line: 104, column: 27, scope: !10795)
!10803 = !DILocation(line: 104, column: 60, scope: !10795)
!10804 = !DILocation(line: 104, column: 19, scope: !10795)
!10805 = !DILocation(line: 103, column: 98, scope: !10795)
!10806 = !DILocation(line: 105, column: 39, scope: !10795)
!10807 = !DILocation(line: 105, column: 27, scope: !10795)
!10808 = !DILocation(line: 105, column: 60, scope: !10795)
!10809 = !DILocation(line: 105, column: 70, scope: !10795)
!10810 = !DILocation(line: 105, column: 57, scope: !10795)
!10811 = !DILocation(line: 105, column: 16, scope: !10795)
!10812 = !DILocation(line: 105, column: 9, scope: !10795)
!10813 = !DILocation(line: 109, column: 28, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10791, file: !10738, line: 108, column: 5)
!10815 = !DILocation(line: 109, column: 48, scope: !10814)
!10816 = !DILocation(line: 109, column: 46, scope: !10814)
!10817 = !DILocation(line: 109, column: 9, scope: !10814)
!10818 = !DILocation(line: 111, column: 1, scope: !10775)
!10819 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !10738, file: !10738, line: 119, type: !10739, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !10820)
!10820 = !{!10821}
!10821 = !DILocalVariable(name: "base", arg: 1, scope: !10819, file: !10738, line: 119, type: !3249)
!10822 = !DILocation(line: 0, scope: !10819)
!10823 = !DILocation(line: 121, column: 9, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10819, file: !10738, line: 121, column: 9)
!10825 = !DILocation(line: 125, column: 1, scope: !10819)
!10826 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !10738, file: !10738, line: 133, type: !10739, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !10827)
!10827 = !{!10828, !10829, !10830, !10831, !10832}
!10828 = !DILocalVariable(name: "base", arg: 1, scope: !10826, file: !10738, line: 133, type: !3249)
!10829 = !DILocalVariable(name: "divSelect", scope: !10826, file: !10738, line: 135, type: !128)
!10830 = !DILocalVariable(name: "divPostSelect", scope: !10826, file: !10738, line: 135, type: !128)
!10831 = !DILocalVariable(name: "divTestSelect", scope: !10826, file: !10738, line: 135, type: !128)
!10832 = !DILocalVariable(name: "factor", scope: !10826, file: !10738, line: 136, type: !3312)
!10833 = !DILocation(line: 0, scope: !10826)
!10834 = !DILocation(line: 138, column: 9, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10826, file: !10738, line: 138, column: 9)
!10836 = !DILocation(line: 138, column: 9, scope: !10826)
!10837 = !DILocation(line: 141, column: 17, scope: !10826)
!10838 = !DILocation(line: 142, column: 22, scope: !10826)
!10839 = !DILocation(line: 142, column: 101, scope: !10826)
!10840 = !DILocation(line: 142, column: 21, scope: !10826)
!10841 = !DILocation(line: 144, column: 22, scope: !10826)
!10842 = !DILocation(line: 144, column: 104, scope: !10826)
!10843 = !DILocation(line: 144, column: 21, scope: !10826)
!10844 = !DILocation(line: 147, column: 5, scope: !10826)
!10845 = !DILocation(line: 161, column: 5, scope: !10826)
!10846 = !DILocation(line: 175, column: 9, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10826, file: !10738, line: 175, column: 9)
!10848 = !DILocation(line: 175, column: 43, scope: !10847)
!10849 = !DILocation(line: 175, column: 9, scope: !10826)
!10850 = !DILocation(line: 177, column: 27, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10847, file: !10738, line: 176, column: 5)
!10852 = !DILocation(line: 177, column: 61, scope: !10851)
!10853 = !DILocation(line: 177, column: 19, scope: !10851)
!10854 = !DILocation(line: 178, column: 27, scope: !10851)
!10855 = !DILocation(line: 178, column: 64, scope: !10851)
!10856 = !DILocation(line: 178, column: 19, scope: !10851)
!10857 = !DILocation(line: 177, column: 99, scope: !10851)
!10858 = !DILocation(line: 179, column: 27, scope: !10851)
!10859 = !DILocation(line: 179, column: 62, scope: !10851)
!10860 = !DILocation(line: 179, column: 19, scope: !10851)
!10861 = !DILocation(line: 178, column: 102, scope: !10851)
!10862 = !DILocation(line: 180, column: 40, scope: !10851)
!10863 = !DILocation(line: 180, column: 58, scope: !10851)
!10864 = !DILocation(line: 180, column: 27, scope: !10851)
!10865 = !DILocation(line: 180, column: 79, scope: !10851)
!10866 = !DILocation(line: 180, column: 89, scope: !10851)
!10867 = !DILocation(line: 180, column: 76, scope: !10851)
!10868 = !DILocation(line: 180, column: 16, scope: !10851)
!10869 = !DILocation(line: 180, column: 9, scope: !10851)
!10870 = !DILocation(line: 184, column: 29, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10847, file: !10738, line: 183, column: 5)
!10872 = !DILocation(line: 184, column: 47, scope: !10871)
!10873 = !DILocation(line: 184, column: 67, scope: !10871)
!10874 = !DILocation(line: 184, column: 65, scope: !10871)
!10875 = !DILocation(line: 184, column: 9, scope: !10871)
!10876 = !DILocation(line: 186, column: 1, scope: !10826)
!10877 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !10738, file: !10738, line: 194, type: !10739, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !10878)
!10878 = !{!10879, !10880, !10881, !10882, !10883}
!10879 = !DILocalVariable(name: "base", arg: 1, scope: !10877, file: !10738, line: 194, type: !3249)
!10880 = !DILocalVariable(name: "divSelect", scope: !10877, file: !10738, line: 196, type: !128)
!10881 = !DILocalVariable(name: "divPostSelect", scope: !10877, file: !10738, line: 196, type: !128)
!10882 = !DILocalVariable(name: "divTestSelect", scope: !10877, file: !10738, line: 196, type: !128)
!10883 = !DILocalVariable(name: "factor", scope: !10877, file: !10738, line: 197, type: !3312)
!10884 = !DILocation(line: 0, scope: !10877)
!10885 = !DILocation(line: 199, column: 9, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10877, file: !10738, line: 199, column: 9)
!10887 = !DILocation(line: 199, column: 9, scope: !10877)
!10888 = !DILocation(line: 202, column: 17, scope: !10877)
!10889 = !DILocation(line: 203, column: 22, scope: !10877)
!10890 = !DILocation(line: 203, column: 101, scope: !10877)
!10891 = !DILocation(line: 203, column: 21, scope: !10877)
!10892 = !DILocation(line: 205, column: 22, scope: !10877)
!10893 = !DILocation(line: 205, column: 104, scope: !10877)
!10894 = !DILocation(line: 205, column: 21, scope: !10877)
!10895 = !DILocation(line: 208, column: 5, scope: !10877)
!10896 = !DILocation(line: 222, column: 5, scope: !10877)
!10897 = !DILocation(line: 236, column: 9, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10877, file: !10738, line: 236, column: 9)
!10899 = !DILocation(line: 236, column: 43, scope: !10898)
!10900 = !DILocation(line: 236, column: 9, scope: !10877)
!10901 = !DILocation(line: 238, column: 27, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10898, file: !10738, line: 237, column: 5)
!10903 = !DILocation(line: 238, column: 61, scope: !10902)
!10904 = !DILocation(line: 238, column: 19, scope: !10902)
!10905 = !DILocation(line: 239, column: 27, scope: !10902)
!10906 = !DILocation(line: 239, column: 64, scope: !10902)
!10907 = !DILocation(line: 239, column: 19, scope: !10902)
!10908 = !DILocation(line: 238, column: 99, scope: !10902)
!10909 = !DILocation(line: 240, column: 27, scope: !10902)
!10910 = !DILocation(line: 240, column: 62, scope: !10902)
!10911 = !DILocation(line: 240, column: 19, scope: !10902)
!10912 = !DILocation(line: 239, column: 102, scope: !10902)
!10913 = !DILocation(line: 241, column: 40, scope: !10902)
!10914 = !DILocation(line: 241, column: 58, scope: !10902)
!10915 = !DILocation(line: 241, column: 27, scope: !10902)
!10916 = !DILocation(line: 241, column: 79, scope: !10902)
!10917 = !DILocation(line: 241, column: 89, scope: !10902)
!10918 = !DILocation(line: 241, column: 76, scope: !10902)
!10919 = !DILocation(line: 241, column: 16, scope: !10902)
!10920 = !DILocation(line: 241, column: 9, scope: !10902)
!10921 = !DILocation(line: 245, column: 29, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10898, file: !10738, line: 244, column: 5)
!10923 = !DILocation(line: 245, column: 47, scope: !10922)
!10924 = !DILocation(line: 245, column: 67, scope: !10922)
!10925 = !DILocation(line: 245, column: 65, scope: !10922)
!10926 = !DILocation(line: 245, column: 9, scope: !10922)
!10927 = !DILocation(line: 247, column: 1, scope: !10877)
!10928 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !10738, file: !10738, line: 255, type: !10929, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !10931)
!10929 = !DISubroutineType(types: !10930)
!10930 = !{!158, !3249, !158}
!10931 = !{!10932, !10933, !10934, !10935}
!10932 = !DILocalVariable(name: "base", arg: 1, scope: !10928, file: !10738, line: 255, type: !3249)
!10933 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !10928, file: !10738, line: 255, type: !158)
!10934 = !DILocalVariable(name: "main", scope: !10928, file: !10738, line: 257, type: !158)
!10935 = !DILocalVariable(name: "frac", scope: !10928, file: !10738, line: 257, type: !158)
!10936 = !DILocation(line: 0, scope: !10928)
!10937 = !DILocation(line: 262, column: 12, scope: !10928)
!10938 = !DILocation(line: 263, column: 12, scope: !10928)
!10939 = !DILocation(line: 265, column: 17, scope: !10928)
!10940 = !DILocation(line: 265, column: 24, scope: !10928)
!10941 = !DILocation(line: 265, column: 5, scope: !10928)
!10942 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !3240, file: !3240, line: 373, type: !10929, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !10943)
!10943 = !{!10944, !10945}
!10944 = !DILocalVariable(name: "base", arg: 1, scope: !10942, file: !3240, line: 373, type: !3249)
!10945 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !10942, file: !3240, line: 373, type: !158)
!10946 = !DILocation(line: 0, scope: !10942)
!10947 = !DILocation(line: 375, column: 13, scope: !10942)
!10948 = !DILocation(line: 375, column: 52, scope: !10942)
!10949 = !DILocation(line: 375, column: 49, scope: !10942)
!10950 = !DILocation(line: 375, column: 85, scope: !10942)
!10951 = !DILocation(line: 375, column: 5, scope: !10942)
!10952 = distinct !DISubprogram(name: "GPIO_Init", scope: !10953, file: !10953, line: 47, type: !10954, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3313, retainedNodes: !10978)
!10953 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10954 = !DISubroutineType(types: !10955)
!10955 = !{null, !10956, !10968}
!10956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10957, size: 32)
!10957 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !1173, line: 19729, baseType: !10958)
!10958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 19720, size: 256, elements: !10959)
!10959 = !{!10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967}
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !10958, file: !1173, line: 19721, baseType: !1177, size: 32)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !10958, file: !1173, line: 19722, baseType: !1177, size: 32, offset: 32)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !10958, file: !1173, line: 19723, baseType: !1248, size: 32, offset: 64)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !10958, file: !1173, line: 19724, baseType: !1177, size: 32, offset: 96)
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !10958, file: !1173, line: 19725, baseType: !1177, size: 32, offset: 128)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !10958, file: !1173, line: 19726, baseType: !1177, size: 32, offset: 160)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !10958, file: !1173, line: 19727, baseType: !1177, size: 32, offset: 192)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !10958, file: !1173, line: 19728, baseType: !1177, size: 32, offset: 224)
!10968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10969, size: 32)
!10969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10970)
!10970 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !1443, line: 78, baseType: !10971)
!10971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !1443, line: 73, size: 96, elements: !10972)
!10972 = !{!10973, !10974, !10976}
!10973 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10971, file: !1443, line: 75, baseType: !158, size: 32)
!10974 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10971, file: !1443, line: 76, baseType: !10975, size: 32, offset: 32)
!10975 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !1443, line: 53, baseType: !3316)
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !10971, file: !1443, line: 77, baseType: !10977, size: 32, offset: 64)
!10977 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !1443, line: 63, baseType: !3320)
!10978 = !{!10979, !10980, !10981, !10982}
!10979 = !DILocalVariable(name: "base", arg: 1, scope: !10952, file: !10953, line: 47, type: !10956)
!10980 = !DILocalVariable(name: "initConfig", arg: 2, scope: !10952, file: !10953, line: 47, type: !10968)
!10981 = !DILocalVariable(name: "pin", scope: !10952, file: !10953, line: 49, type: !158)
!10982 = !DILocalVariable(name: "icr", scope: !10952, file: !10953, line: 50, type: !1295)
!10983 = !DILocation(line: 0, scope: !10952)
!10984 = !DILocation(line: 53, column: 5, scope: !10952)
!10985 = !DILocation(line: 53, column: 24, scope: !10952)
!10986 = !DILocation(line: 54, column: 2, scope: !10952)
!10987 = !DILocation(line: 54, column: 26, scope: !10952)
!10988 = !DILocation(line: 57, column: 23, scope: !10952)
!10989 = !DILocation(line: 60, column: 21, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10952, file: !10953, line: 60, column: 9)
!10991 = !DILocation(line: 60, column: 31, scope: !10990)
!10992 = !DILocation(line: 0, scope: !10990)
!10993 = !DILocation(line: 60, column: 9, scope: !10952)
!10994 = !DILocation(line: 61, column: 9, scope: !10990)
!10995 = !DILocation(line: 61, column: 29, scope: !10990)
!10996 = !DILocation(line: 63, column: 32, scope: !10990)
!10997 = !DILocation(line: 63, column: 9, scope: !10990)
!10998 = !DILocation(line: 63, column: 29, scope: !10990)
!10999 = !DILocation(line: 66, column: 12, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10952, file: !10953, line: 66, column: 8)
!11001 = !DILocation(line: 66, column: 8, scope: !10952)
!11002 = !DILocation(line: 73, column: 24, scope: !10952)
!11003 = !DILocation(line: 73, column: 5, scope: !10952)
!11004 = !DILocation(line: 77, column: 30, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !10953, line: 76, column: 9)
!11006 = distinct !DILexicalBlock(scope: !10952, file: !10953, line: 74, column: 5)
!11007 = !DILocation(line: 77, column: 26, scope: !11005)
!11008 = !DILocation(line: 77, column: 21, scope: !11005)
!11009 = !DILocation(line: 77, column: 18, scope: !11005)
!11010 = !DILocation(line: 78, column: 13, scope: !11005)
!11011 = !DILocation(line: 82, column: 21, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11006, file: !10953, line: 81, column: 9)
!11013 = !DILocation(line: 82, column: 38, scope: !11012)
!11014 = !DILocation(line: 82, column: 34, scope: !11012)
!11015 = !DILocation(line: 82, column: 29, scope: !11012)
!11016 = !DILocation(line: 82, column: 26, scope: !11012)
!11017 = !DILocation(line: 82, column: 53, scope: !11012)
!11018 = !DILocation(line: 82, column: 47, scope: !11012)
!11019 = !DILocation(line: 83, column: 13, scope: !11012)
!11020 = !DILocation(line: 87, column: 21, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11006, file: !10953, line: 86, column: 9)
!11022 = !DILocation(line: 87, column: 38, scope: !11021)
!11023 = !DILocation(line: 87, column: 34, scope: !11021)
!11024 = !DILocation(line: 87, column: 29, scope: !11021)
!11025 = !DILocation(line: 87, column: 26, scope: !11021)
!11026 = !DILocation(line: 87, column: 53, scope: !11021)
!11027 = !DILocation(line: 87, column: 47, scope: !11021)
!11028 = !DILocation(line: 88, column: 13, scope: !11021)
!11029 = !DILocation(line: 92, column: 29, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11006, file: !10953, line: 91, column: 9)
!11031 = !DILocation(line: 92, column: 25, scope: !11030)
!11032 = !DILocation(line: 92, column: 18, scope: !11030)
!11033 = !DILocation(line: 93, column: 13, scope: !11030)
!11034 = !DILocation(line: 0, scope: !11006)
!11035 = !DILocation(line: 100, column: 1, scope: !10952)
!11036 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !10953, file: !10953, line: 111, type: !11037, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3313, retainedNodes: !11040)
!11037 = !DISubroutineType(types: !11038)
!11038 = !{null, !10956, !158, !11039}
!11039 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !1443, line: 70, baseType: !1442)
!11040 = !{!11041, !11042, !11043}
!11041 = !DILocalVariable(name: "base", arg: 1, scope: !11036, file: !10953, line: 111, type: !10956)
!11042 = !DILocalVariable(name: "pin", arg: 2, scope: !11036, file: !10953, line: 111, type: !158)
!11043 = !DILocalVariable(name: "pinVal", arg: 3, scope: !11036, file: !10953, line: 111, type: !11039)
!11044 = !DILocation(line: 0, scope: !11036)
!11045 = !DILocation(line: 114, column: 16, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11036, file: !10953, line: 114, column: 9)
!11047 = !DILocation(line: 0, scope: !11046)
!11048 = !DILocation(line: 114, column: 9, scope: !11036)
!11049 = !DILocation(line: 116, column: 9, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11046, file: !10953, line: 115, column: 5)
!11051 = !DILocation(line: 116, column: 27, scope: !11050)
!11052 = !DILocation(line: 117, column: 5, scope: !11050)
!11053 = !DILocation(line: 120, column: 30, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11046, file: !10953, line: 119, column: 5)
!11055 = !DILocation(line: 120, column: 9, scope: !11054)
!11056 = !DILocation(line: 120, column: 27, scope: !11054)
!11057 = !DILocation(line: 122, column: 1, scope: !11036)
!11058 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !10953, file: !10953, line: 133, type: !11059, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3313, retainedNodes: !11061)
!11059 = !DISubroutineType(types: !11060)
!11060 = !{null, !10956, !158, !131}
!11061 = !{!11062, !11063, !11064}
!11062 = !DILocalVariable(name: "base", arg: 1, scope: !11058, file: !10953, line: 133, type: !10956)
!11063 = !DILocalVariable(name: "pin", arg: 2, scope: !11058, file: !10953, line: 133, type: !158)
!11064 = !DILocalVariable(name: "enable", arg: 3, scope: !11058, file: !10953, line: 133, type: !131)
!11065 = !DILocation(line: 0, scope: !11058)
!11066 = !DILocation(line: 0, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11058, file: !10953, line: 137, column: 8)
!11068 = !DILocation(line: 137, column: 8, scope: !11058)
!11069 = !DILocation(line: 138, column: 9, scope: !11067)
!11070 = !DILocation(line: 138, column: 28, scope: !11067)
!11071 = !DILocation(line: 140, column: 31, scope: !11067)
!11072 = !DILocation(line: 140, column: 9, scope: !11067)
!11073 = !DILocation(line: 140, column: 28, scope: !11067)
!11074 = !DILocation(line: 141, column: 1, scope: !11058)
!11075 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !10953, file: !10953, line: 150, type: !11059, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3313, retainedNodes: !11076)
!11076 = !{!11077, !11078, !11079}
!11077 = !DILocalVariable(name: "base", arg: 1, scope: !11075, file: !10953, line: 150, type: !10956)
!11078 = !DILocalVariable(name: "pin", arg: 2, scope: !11075, file: !10953, line: 150, type: !158)
!11079 = !DILocalVariable(name: "enable", arg: 3, scope: !11075, file: !10953, line: 150, type: !131)
!11080 = !DILocation(line: 0, scope: !11075)
!11081 = !DILocation(line: 0, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11075, file: !10953, line: 154, column: 8)
!11083 = !DILocation(line: 154, column: 8, scope: !11075)
!11084 = !DILocation(line: 155, column: 9, scope: !11082)
!11085 = !DILocation(line: 155, column: 33, scope: !11082)
!11086 = !DILocation(line: 157, column: 36, scope: !11082)
!11087 = !DILocation(line: 157, column: 9, scope: !11082)
!11088 = !DILocation(line: 157, column: 33, scope: !11082)
!11089 = !DILocation(line: 158, column: 1, scope: !11075)
!11090 = distinct !DISubprogram(name: "UART_Init", scope: !11091, file: !11091, line: 47, type: !11092, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11128)
!11091 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11092 = !DISubroutineType(types: !11093)
!11093 = !{null, !11094, !11117}
!11094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11095, size: 32)
!11095 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !1173, line: 41342, baseType: !11096)
!11096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 41322, size: 1504, elements: !11097)
!11097 = !{!11098, !11099, !11100, !11101, !11102, !11103, !11104, !11105, !11106, !11107, !11108, !11109, !11110, !11111, !11112, !11113, !11114, !11115, !11116}
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !11096, file: !1173, line: 41323, baseType: !1248, size: 32)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11096, file: !1173, line: 41324, baseType: !1794, size: 480, offset: 32)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !11096, file: !1173, line: 41325, baseType: !1177, size: 32, offset: 512)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11096, file: !1173, line: 41326, baseType: !1794, size: 480, offset: 544)
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !11096, file: !1173, line: 41327, baseType: !1177, size: 32, offset: 1024)
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !11096, file: !1173, line: 41328, baseType: !1177, size: 32, offset: 1056)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !11096, file: !1173, line: 41329, baseType: !1177, size: 32, offset: 1088)
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !11096, file: !1173, line: 41330, baseType: !1177, size: 32, offset: 1120)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !11096, file: !1173, line: 41331, baseType: !1177, size: 32, offset: 1152)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !11096, file: !1173, line: 41332, baseType: !1177, size: 32, offset: 1184)
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !11096, file: !1173, line: 41333, baseType: !1177, size: 32, offset: 1216)
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !11096, file: !1173, line: 41334, baseType: !1177, size: 32, offset: 1248)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !11096, file: !1173, line: 41335, baseType: !1177, size: 32, offset: 1280)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !11096, file: !1173, line: 41336, baseType: !1177, size: 32, offset: 1312)
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !11096, file: !1173, line: 41337, baseType: !1177, size: 32, offset: 1344)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !11096, file: !1173, line: 41338, baseType: !1248, size: 32, offset: 1376)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !11096, file: !1173, line: 41339, baseType: !1177, size: 32, offset: 1408)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !11096, file: !1173, line: 41340, baseType: !1177, size: 32, offset: 1440)
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !11096, file: !1173, line: 41341, baseType: !1177, size: 32, offset: 1472)
!11117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11118, size: 32)
!11118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11119)
!11119 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1624, line: 57, baseType: !11120)
!11120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1624, line: 49, size: 192, elements: !11121)
!11121 = !{!11122, !11123, !11124, !11125, !11126, !11127}
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !11120, file: !1624, line: 51, baseType: !158, size: 32)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !11120, file: !1624, line: 52, baseType: !158, size: 32, offset: 32)
!11124 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !11120, file: !1624, line: 53, baseType: !158, size: 32, offset: 64)
!11125 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !11120, file: !1624, line: 54, baseType: !158, size: 32, offset: 96)
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11120, file: !1624, line: 55, baseType: !158, size: 32, offset: 128)
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !11120, file: !1624, line: 56, baseType: !158, size: 32, offset: 160)
!11128 = !{!11129, !11130}
!11129 = !DILocalVariable(name: "base", arg: 1, scope: !11090, file: !11091, line: 47, type: !11094)
!11130 = !DILocalVariable(name: "initConfig", arg: 2, scope: !11090, file: !11091, line: 47, type: !11117)
!11131 = !DILocation(line: 0, scope: !11090)
!11132 = !DILocation(line: 52, column: 5, scope: !11090)
!11133 = !DILocation(line: 52, column: 25, scope: !11090)
!11134 = !DILocation(line: 55, column: 5, scope: !11090)
!11135 = !DILocation(line: 60, column: 41, scope: !11090)
!11136 = !DILocation(line: 61, column: 41, scope: !11090)
!11137 = !DILocation(line: 62, column: 41, scope: !11090)
!11138 = !DILocation(line: 63, column: 41, scope: !11090)
!11139 = !DILocation(line: 60, column: 5, scope: !11090)
!11140 = !DILocation(line: 60, column: 25, scope: !11090)
!11141 = !DILocation(line: 61, column: 52, scope: !11090)
!11142 = !DILocation(line: 62, column: 52, scope: !11090)
!11143 = !DILocation(line: 63, column: 52, scope: !11090)
!11144 = !DILocation(line: 68, column: 5, scope: !11090)
!11145 = !DILocation(line: 68, column: 25, scope: !11090)
!11146 = !DILocation(line: 72, column: 40, scope: !11090)
!11147 = !DILocation(line: 72, column: 63, scope: !11090)
!11148 = !DILocation(line: 72, column: 5, scope: !11090)
!11149 = !DILocation(line: 73, column: 1, scope: !11090)
!11150 = distinct !DISubprogram(name: "UART_Deinit", scope: !11091, file: !11091, line: 82, type: !11151, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11153)
!11151 = !DISubroutineType(types: !11152)
!11152 = !{null, !11094}
!11153 = !{!11154}
!11154 = !DILocalVariable(name: "base", arg: 1, scope: !11150, file: !11091, line: 82, type: !11094)
!11155 = !DILocation(line: 0, scope: !11150)
!11156 = !DILocation(line: 85, column: 5, scope: !11150)
!11157 = !DILocation(line: 85, column: 25, scope: !11150)
!11158 = !DILocation(line: 88, column: 26, scope: !11150)
!11159 = !DILocation(line: 89, column: 5, scope: !11150)
!11160 = !DILocation(line: 89, column: 26, scope: !11150)
!11161 = !DILocation(line: 90, column: 5, scope: !11150)
!11162 = !DILocation(line: 90, column: 26, scope: !11150)
!11163 = !DILocation(line: 93, column: 5, scope: !11150)
!11164 = !DILocation(line: 93, column: 26, scope: !11150)
!11165 = !DILocation(line: 94, column: 5, scope: !11150)
!11166 = !DILocation(line: 94, column: 26, scope: !11150)
!11167 = !DILocation(line: 95, column: 5, scope: !11150)
!11168 = !DILocation(line: 95, column: 26, scope: !11150)
!11169 = !DILocation(line: 96, column: 5, scope: !11150)
!11170 = !DILocation(line: 96, column: 26, scope: !11150)
!11171 = !DILocation(line: 97, column: 5, scope: !11150)
!11172 = !DILocation(line: 97, column: 26, scope: !11150)
!11173 = !DILocation(line: 98, column: 5, scope: !11150)
!11174 = !DILocation(line: 98, column: 26, scope: !11150)
!11175 = !DILocation(line: 99, column: 5, scope: !11150)
!11176 = !DILocation(line: 99, column: 26, scope: !11150)
!11177 = !DILocation(line: 103, column: 25, scope: !11150)
!11178 = !DILocation(line: 104, column: 5, scope: !11150)
!11179 = !DILocation(line: 104, column: 14, scope: !11150)
!11180 = !DILocation(line: 104, column: 34, scope: !11150)
!11181 = !DILocation(line: 104, column: 12, scope: !11150)
!11182 = distinct !{!11182, !11178, !11183}
!11183 = !DILocation(line: 104, column: 57, scope: !11150)
!11184 = !DILocation(line: 105, column: 1, scope: !11150)
!11185 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !11091, file: !11091, line: 113, type: !11186, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11188)
!11186 = !DISubroutineType(types: !11187)
!11187 = !{null, !11094, !158, !158}
!11188 = !{!11189, !11190, !11191, !11192, !11193, !11194, !11195, !11196, !11197, !11200, !11201}
!11189 = !DILocalVariable(name: "base", arg: 1, scope: !11185, file: !11091, line: 113, type: !11094)
!11190 = !DILocalVariable(name: "clockRate", arg: 2, scope: !11185, file: !11091, line: 113, type: !158)
!11191 = !DILocalVariable(name: "baudRate", arg: 3, scope: !11185, file: !11091, line: 113, type: !158)
!11192 = !DILocalVariable(name: "numerator", scope: !11185, file: !11091, line: 115, type: !158)
!11193 = !DILocalVariable(name: "denominator", scope: !11185, file: !11091, line: 116, type: !158)
!11194 = !DILocalVariable(name: "divisor", scope: !11185, file: !11091, line: 117, type: !158)
!11195 = !DILocalVariable(name: "refFreqDiv", scope: !11185, file: !11091, line: 118, type: !158)
!11196 = !DILocalVariable(name: "divider", scope: !11185, file: !11091, line: 119, type: !158)
!11197 = !DILocalVariable(name: "m", scope: !11198, file: !11091, line: 141, type: !158)
!11198 = distinct !DILexicalBlock(scope: !11199, file: !11091, line: 140, column: 5)
!11199 = distinct !DILexicalBlock(scope: !11185, file: !11091, line: 138, column: 9)
!11200 = !DILocalVariable(name: "n", scope: !11198, file: !11091, line: 142, type: !158)
!11201 = !DILocalVariable(name: "max", scope: !11198, file: !11091, line: 143, type: !158)
!11202 = !DILocation(line: 0, scope: !11185)
!11203 = !DILocation(line: 123, column: 28, scope: !11185)
!11204 = !DILocation(line: 126, column: 24, scope: !11185)
!11205 = !DILocation(line: 126, column: 5, scope: !11185)
!11206 = !DILocation(line: 129, column: 33, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11185, file: !11091, line: 127, column: 5)
!11208 = distinct !{!11208, !11205, !11209}
!11209 = !DILocation(line: 131, column: 5, scope: !11185)
!11210 = !DILocation(line: 133, column: 27, scope: !11185)
!11211 = !DILocation(line: 134, column: 35, scope: !11185)
!11212 = !DILocation(line: 138, column: 20, scope: !11199)
!11213 = !DILocation(line: 138, column: 48, scope: !11199)
!11214 = !DILocation(line: 141, column: 33, scope: !11198)
!11215 = !DILocation(line: 141, column: 38, scope: !11198)
!11216 = !DILocation(line: 141, column: 65, scope: !11198)
!11217 = !DILocation(line: 0, scope: !11198)
!11218 = !DILocation(line: 142, column: 35, scope: !11198)
!11219 = !DILocation(line: 142, column: 40, scope: !11198)
!11220 = !DILocation(line: 142, column: 61, scope: !11198)
!11221 = !DILocation(line: 143, column: 26, scope: !11198)
!11222 = !DILocation(line: 143, column: 24, scope: !11198)
!11223 = !DILocation(line: 144, column: 19, scope: !11198)
!11224 = !DILocation(line: 145, column: 21, scope: !11198)
!11225 = !DILocation(line: 146, column: 15, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11198, file: !11091, line: 146, column: 13)
!11227 = !DILocation(line: 146, column: 13, scope: !11198)
!11228 = !DILocation(line: 148, column: 15, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11198, file: !11091, line: 148, column: 13)
!11230 = !DILocation(line: 148, column: 13, scope: !11198)
!11231 = !DILocation(line: 150, column: 5, scope: !11198)
!11232 = !DILocation(line: 151, column: 26, scope: !11185)
!11233 = !DILocation(line: 151, column: 31, scope: !11185)
!11234 = !DILocation(line: 151, column: 52, scope: !11185)
!11235 = !DILocation(line: 153, column: 5, scope: !11185)
!11236 = !DILocation(line: 0, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11185, file: !11091, line: 154, column: 5)
!11238 = !DILocation(line: 180, column: 5, scope: !11185)
!11239 = !DILocation(line: 180, column: 25, scope: !11185)
!11240 = !DILocation(line: 181, column: 25, scope: !11185)
!11241 = !DILocation(line: 182, column: 27, scope: !11185)
!11242 = !DILocation(line: 182, column: 5, scope: !11185)
!11243 = !DILocation(line: 182, column: 25, scope: !11185)
!11244 = !DILocation(line: 183, column: 27, scope: !11185)
!11245 = !DILocation(line: 183, column: 5, scope: !11185)
!11246 = !DILocation(line: 183, column: 25, scope: !11185)
!11247 = !DILocation(line: 184, column: 28, scope: !11185)
!11248 = !DILocation(line: 184, column: 5, scope: !11185)
!11249 = !DILocation(line: 184, column: 26, scope: !11185)
!11250 = !DILocation(line: 185, column: 1, scope: !11185)
!11251 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !11091, file: !11091, line: 194, type: !11252, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11254)
!11252 = !DISubroutineType(types: !11253)
!11253 = !{null, !11094, !158, !131}
!11254 = !{!11255, !11256, !11257}
!11255 = !DILocalVariable(name: "base", arg: 1, scope: !11251, file: !11091, line: 194, type: !11094)
!11256 = !DILocalVariable(name: "direction", arg: 2, scope: !11251, file: !11091, line: 194, type: !158)
!11257 = !DILocalVariable(name: "invert", arg: 3, scope: !11251, file: !11091, line: 194, type: !131)
!11258 = !DILocation(line: 0, scope: !11251)
!11259 = !DILocation(line: 0, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11251, file: !11091, line: 198, column: 9)
!11261 = !DILocation(line: 198, column: 9, scope: !11251)
!11262 = !DILocation(line: 200, column: 13, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11260, file: !11091, line: 199, column: 5)
!11264 = !DILocation(line: 201, column: 13, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11263, file: !11091, line: 200, column: 13)
!11266 = !DILocation(line: 201, column: 33, scope: !11265)
!11267 = !DILocation(line: 202, column: 23, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11263, file: !11091, line: 202, column: 13)
!11269 = !DILocation(line: 202, column: 13, scope: !11263)
!11270 = !DILocation(line: 203, column: 13, scope: !11268)
!11271 = !DILocation(line: 203, column: 33, scope: !11268)
!11272 = !DILocation(line: 207, column: 13, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11260, file: !11091, line: 206, column: 5)
!11274 = !DILocation(line: 208, column: 13, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11273, file: !11091, line: 207, column: 13)
!11276 = !DILocation(line: 208, column: 33, scope: !11275)
!11277 = !DILocation(line: 209, column: 23, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11273, file: !11091, line: 209, column: 13)
!11279 = !DILocation(line: 209, column: 13, scope: !11273)
!11280 = !DILocation(line: 210, column: 13, scope: !11278)
!11281 = !DILocation(line: 210, column: 33, scope: !11278)
!11282 = !DILocation(line: 212, column: 1, scope: !11251)
!11283 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !11091, file: !11091, line: 224, type: !11284, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11286)
!11284 = !DISubroutineType(types: !11285)
!11285 = !{null, !11094, !131}
!11286 = !{!11287, !11288}
!11287 = !DILocalVariable(name: "base", arg: 1, scope: !11283, file: !11091, line: 224, type: !11094)
!11288 = !DILocalVariable(name: "enable", arg: 2, scope: !11283, file: !11091, line: 224, type: !131)
!11289 = !DILocation(line: 0, scope: !11283)
!11290 = !DILocation(line: 0, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11283, file: !11091, line: 226, column: 9)
!11292 = !DILocation(line: 226, column: 9, scope: !11283)
!11293 = !DILocation(line: 230, column: 1, scope: !11283)
!11294 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !11091, file: !11091, line: 239, type: !11284, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11295)
!11295 = !{!11296, !11297}
!11296 = !DILocalVariable(name: "base", arg: 1, scope: !11294, file: !11091, line: 239, type: !11094)
!11297 = !DILocalVariable(name: "enable", arg: 2, scope: !11294, file: !11091, line: 239, type: !131)
!11298 = !DILocation(line: 0, scope: !11294)
!11299 = !DILocation(line: 0, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11294, file: !11091, line: 241, column: 9)
!11301 = !DILocation(line: 241, column: 9, scope: !11294)
!11302 = !DILocation(line: 245, column: 1, scope: !11294)
!11303 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !11091, file: !11091, line: 258, type: !11252, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11304)
!11304 = !{!11305, !11306, !11307, !11308, !11309}
!11305 = !DILocalVariable(name: "base", arg: 1, scope: !11303, file: !11091, line: 258, type: !11094)
!11306 = !DILocalVariable(name: "intSource", arg: 2, scope: !11303, file: !11091, line: 258, type: !158)
!11307 = !DILocalVariable(name: "enable", arg: 3, scope: !11303, file: !11091, line: 258, type: !131)
!11308 = !DILocalVariable(name: "uart_reg", scope: !11303, file: !11091, line: 260, type: !1295)
!11309 = !DILocalVariable(name: "uart_mask", scope: !11303, file: !11091, line: 261, type: !158)
!11310 = !DILocation(line: 0, scope: !11303)
!11311 = !DILocation(line: 263, column: 29, scope: !11303)
!11312 = !DILocation(line: 263, column: 57, scope: !11303)
!11313 = !DILocation(line: 263, column: 44, scope: !11303)
!11314 = !DILocation(line: 263, column: 16, scope: !11303)
!11315 = !DILocation(line: 264, column: 34, scope: !11303)
!11316 = !DILocation(line: 264, column: 20, scope: !11303)
!11317 = !DILocation(line: 266, column: 9, scope: !11303)
!11318 = !DILocation(line: 267, column: 19, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11303, file: !11091, line: 266, column: 9)
!11320 = !DILocation(line: 267, column: 9, scope: !11319)
!11321 = !DILocation(line: 269, column: 22, scope: !11319)
!11322 = !DILocation(line: 269, column: 19, scope: !11319)
!11323 = !DILocation(line: 0, scope: !11319)
!11324 = !DILocation(line: 270, column: 1, scope: !11303)
!11325 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !11091, file: !11091, line: 299, type: !11326, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11328)
!11326 = !DISubroutineType(types: !11327)
!11327 = !{null, !11094, !158}
!11328 = !{!11329, !11330, !11331, !11332}
!11329 = !DILocalVariable(name: "base", arg: 1, scope: !11325, file: !11091, line: 299, type: !11094)
!11330 = !DILocalVariable(name: "flag", arg: 2, scope: !11325, file: !11091, line: 299, type: !158)
!11331 = !DILocalVariable(name: "uart_reg", scope: !11325, file: !11091, line: 301, type: !1295)
!11332 = !DILocalVariable(name: "uart_mask", scope: !11325, file: !11091, line: 302, type: !158)
!11333 = !DILocation(line: 0, scope: !11325)
!11334 = !DILocation(line: 304, column: 29, scope: !11325)
!11335 = !DILocation(line: 304, column: 52, scope: !11325)
!11336 = !DILocation(line: 304, column: 44, scope: !11325)
!11337 = !DILocation(line: 304, column: 16, scope: !11325)
!11338 = !DILocation(line: 305, column: 29, scope: !11325)
!11339 = !DILocation(line: 305, column: 20, scope: !11325)
!11340 = !DILocation(line: 308, column: 15, scope: !11325)
!11341 = !DILocation(line: 309, column: 1, scope: !11325)
!11342 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !11091, file: !11091, line: 322, type: !11252, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11343)
!11343 = !{!11344, !11345, !11346, !11347, !11348}
!11344 = !DILocalVariable(name: "base", arg: 1, scope: !11342, file: !11091, line: 322, type: !11094)
!11345 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !11342, file: !11091, line: 322, type: !158)
!11346 = !DILocalVariable(name: "enable", arg: 3, scope: !11342, file: !11091, line: 322, type: !131)
!11347 = !DILocalVariable(name: "uart_reg", scope: !11342, file: !11091, line: 324, type: !1295)
!11348 = !DILocalVariable(name: "uart_mask", scope: !11342, file: !11091, line: 325, type: !158)
!11349 = !DILocation(line: 0, scope: !11342)
!11350 = !DILocation(line: 327, column: 29, scope: !11342)
!11351 = !DILocation(line: 327, column: 57, scope: !11342)
!11352 = !DILocation(line: 327, column: 44, scope: !11342)
!11353 = !DILocation(line: 327, column: 16, scope: !11342)
!11354 = !DILocation(line: 328, column: 34, scope: !11342)
!11355 = !DILocation(line: 328, column: 20, scope: !11342)
!11356 = !DILocation(line: 329, column: 9, scope: !11342)
!11357 = !DILocation(line: 330, column: 19, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11342, file: !11091, line: 329, column: 9)
!11359 = !DILocation(line: 330, column: 9, scope: !11358)
!11360 = !DILocation(line: 332, column: 22, scope: !11358)
!11361 = !DILocation(line: 332, column: 19, scope: !11358)
!11362 = !DILocation(line: 0, scope: !11358)
!11363 = !DILocation(line: 333, column: 1, scope: !11342)
!11364 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !11091, file: !11091, line: 345, type: !11284, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11365)
!11365 = !{!11366, !11367}
!11366 = !DILocalVariable(name: "base", arg: 1, scope: !11364, file: !11091, line: 345, type: !11094)
!11367 = !DILocalVariable(name: "enable", arg: 2, scope: !11364, file: !11091, line: 345, type: !131)
!11368 = !DILocation(line: 0, scope: !11364)
!11369 = !DILocation(line: 0, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11364, file: !11091, line: 347, column: 9)
!11371 = !DILocation(line: 347, column: 9, scope: !11364)
!11372 = !DILocation(line: 351, column: 1, scope: !11364)
!11373 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !11091, file: !11091, line: 362, type: !11284, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11374)
!11374 = !{!11375, !11376}
!11375 = !DILocalVariable(name: "base", arg: 1, scope: !11373, file: !11091, line: 362, type: !11094)
!11376 = !DILocalVariable(name: "enable", arg: 2, scope: !11373, file: !11091, line: 362, type: !131)
!11377 = !DILocation(line: 0, scope: !11373)
!11378 = !DILocation(line: 0, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11373, file: !11091, line: 364, column: 9)
!11380 = !DILocation(line: 364, column: 9, scope: !11373)
!11381 = !DILocation(line: 368, column: 1, scope: !11373)
!11382 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !11091, file: !11091, line: 379, type: !11284, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11383)
!11383 = !{!11384, !11385}
!11384 = !DILocalVariable(name: "base", arg: 1, scope: !11382, file: !11091, line: 379, type: !11094)
!11385 = !DILocalVariable(name: "active", arg: 2, scope: !11382, file: !11091, line: 379, type: !131)
!11386 = !DILocation(line: 0, scope: !11382)
!11387 = !DILocation(line: 0, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11382, file: !11091, line: 381, column: 9)
!11389 = !DILocation(line: 381, column: 9, scope: !11382)
!11390 = !DILocation(line: 385, column: 1, scope: !11382)
!11391 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !11091, file: !11091, line: 394, type: !11326, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11392)
!11392 = !{!11393, !11394}
!11393 = !DILocalVariable(name: "base", arg: 1, scope: !11391, file: !11091, line: 394, type: !11094)
!11394 = !DILocalVariable(name: "mode", arg: 2, scope: !11391, file: !11091, line: 394, type: !158)
!11395 = !DILocation(line: 0, scope: !11391)
!11396 = !DILocation(line: 398, column: 26, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11391, file: !11091, line: 398, column: 9)
!11398 = !DILocation(line: 0, scope: !11397)
!11399 = !DILocation(line: 398, column: 9, scope: !11391)
!11400 = !DILocation(line: 402, column: 1, scope: !11391)
!11401 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !11091, file: !11091, line: 412, type: !11284, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11402)
!11402 = !{!11403, !11404}
!11403 = !DILocalVariable(name: "base", arg: 1, scope: !11401, file: !11091, line: 412, type: !11094)
!11404 = !DILocalVariable(name: "active", arg: 2, scope: !11401, file: !11091, line: 412, type: !131)
!11405 = !DILocation(line: 0, scope: !11401)
!11406 = !DILocation(line: 0, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11401, file: !11091, line: 414, column: 9)
!11408 = !DILocation(line: 414, column: 9, scope: !11401)
!11409 = !DILocation(line: 418, column: 1, scope: !11401)
!11410 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !11091, file: !11091, line: 427, type: !11284, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11411)
!11411 = !{!11412, !11413}
!11412 = !DILocalVariable(name: "base", arg: 1, scope: !11410, file: !11091, line: 427, type: !11094)
!11413 = !DILocalVariable(name: "active", arg: 2, scope: !11410, file: !11091, line: 427, type: !131)
!11414 = !DILocation(line: 0, scope: !11410)
!11415 = !DILocation(line: 0, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11410, file: !11091, line: 429, column: 9)
!11417 = !DILocation(line: 429, column: 9, scope: !11410)
!11418 = !DILocation(line: 433, column: 1, scope: !11410)
!11419 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !11091, file: !11091, line: 442, type: !11284, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11420)
!11420 = !{!11421, !11422}
!11421 = !DILocalVariable(name: "base", arg: 1, scope: !11419, file: !11091, line: 442, type: !11094)
!11422 = !DILocalVariable(name: "active", arg: 2, scope: !11419, file: !11091, line: 442, type: !131)
!11423 = !DILocation(line: 0, scope: !11419)
!11424 = !DILocation(line: 0, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11419, file: !11091, line: 444, column: 9)
!11426 = !DILocation(line: 444, column: 9, scope: !11419)
!11427 = !DILocation(line: 448, column: 1, scope: !11419)
!11428 = distinct !DISubprogram(name: "UART_Putchar9", scope: !11091, file: !11091, line: 460, type: !11429, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11431)
!11429 = !DISubroutineType(types: !11430)
!11430 = !{null, !11094, !272}
!11431 = !{!11432, !11433}
!11432 = !DILocalVariable(name: "base", arg: 1, scope: !11428, file: !11091, line: 460, type: !11094)
!11433 = !DILocalVariable(name: "data", arg: 2, scope: !11428, file: !11091, line: 460, type: !272)
!11434 = !DILocation(line: 0, scope: !11428)
!11435 = !DILocation(line: 464, column: 9, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11428, file: !11091, line: 464, column: 9)
!11437 = !DILocation(line: 0, scope: !11436)
!11438 = !DILocation(line: 464, column: 9, scope: !11428)
!11439 = !DILocation(line: 468, column: 33, scope: !11428)
!11440 = !DILocation(line: 468, column: 5, scope: !11428)
!11441 = !DILocation(line: 468, column: 25, scope: !11428)
!11442 = !DILocation(line: 469, column: 1, scope: !11428)
!11443 = distinct !DISubprogram(name: "UART_Getchar9", scope: !11091, file: !11091, line: 478, type: !11444, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11446)
!11444 = !DISubroutineType(types: !11445)
!11445 = !{!272, !11094}
!11446 = !{!11447, !11448}
!11447 = !DILocalVariable(name: "base", arg: 1, scope: !11443, file: !11091, line: 478, type: !11094)
!11448 = !DILocalVariable(name: "rxData", scope: !11443, file: !11091, line: 480, type: !272)
!11449 = !DILocation(line: 0, scope: !11443)
!11450 = !DILocation(line: 480, column: 23, scope: !11443)
!11451 = !DILocation(line: 482, column: 9, scope: !11443)
!11452 = !DILocation(line: 491, column: 5, scope: !11443)
!11453 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !11091, file: !11091, line: 501, type: !11284, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11454)
!11454 = !{!11455, !11456}
!11455 = !DILocalVariable(name: "base", arg: 1, scope: !11453, file: !11091, line: 501, type: !11094)
!11456 = !DILocalVariable(name: "enable", arg: 2, scope: !11453, file: !11091, line: 501, type: !131)
!11457 = !DILocation(line: 0, scope: !11453)
!11458 = !DILocation(line: 0, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11453, file: !11091, line: 503, column: 9)
!11460 = !DILocation(line: 503, column: 9, scope: !11453)
!11461 = !DILocation(line: 507, column: 1, scope: !11453)
!11462 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !11091, file: !11091, line: 516, type: !11284, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11463)
!11463 = !{!11464, !11465}
!11464 = !DILocalVariable(name: "base", arg: 1, scope: !11462, file: !11091, line: 516, type: !11094)
!11465 = !DILocalVariable(name: "enable", arg: 2, scope: !11462, file: !11091, line: 516, type: !131)
!11466 = !DILocation(line: 0, scope: !11462)
!11467 = !DILocation(line: 0, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11462, file: !11091, line: 518, column: 9)
!11469 = !DILocation(line: 518, column: 9, scope: !11462)
!11470 = !DILocation(line: 522, column: 1, scope: !11462)
!11471 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !11091, file: !11091, line: 534, type: !11284, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11472)
!11472 = !{!11473, !11474}
!11473 = !DILocalVariable(name: "base", arg: 1, scope: !11471, file: !11091, line: 534, type: !11094)
!11474 = !DILocalVariable(name: "enable", arg: 2, scope: !11471, file: !11091, line: 534, type: !131)
!11475 = !DILocation(line: 0, scope: !11471)
!11476 = !DILocation(line: 0, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11471, file: !11091, line: 536, column: 9)
!11478 = !DILocation(line: 536, column: 9, scope: !11471)
!11479 = !DILocation(line: 540, column: 1, scope: !11471)
!11480 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !11091, file: !11091, line: 550, type: !11326, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11481)
!11481 = !{!11482, !11483}
!11482 = !DILocalVariable(name: "base", arg: 1, scope: !11480, file: !11091, line: 550, type: !11094)
!11483 = !DILocalVariable(name: "voteClock", arg: 2, scope: !11480, file: !11091, line: 550, type: !158)
!11484 = !DILocation(line: 0, scope: !11480)
!11485 = !DILocation(line: 555, column: 35, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11480, file: !11091, line: 555, column: 9)
!11487 = !DILocation(line: 0, scope: !11486)
!11488 = !DILocation(line: 555, column: 9, scope: !11480)
!11489 = !DILocation(line: 559, column: 1, scope: !11480)
!11490 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !11091, file: !11091, line: 571, type: !11284, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11491)
!11491 = !{!11492, !11493}
!11492 = !DILocalVariable(name: "base", arg: 1, scope: !11490, file: !11091, line: 571, type: !11094)
!11493 = !DILocalVariable(name: "enable", arg: 2, scope: !11490, file: !11091, line: 571, type: !131)
!11494 = !DILocation(line: 0, scope: !11490)
!11495 = !DILocation(line: 0, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11490, file: !11091, line: 573, column: 9)
!11497 = !DILocation(line: 573, column: 9, scope: !11490)
!11498 = !DILocation(line: 577, column: 1, scope: !11490)
!11499 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !11091, file: !11091, line: 587, type: !11284, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11500)
!11500 = !{!11501, !11502}
!11501 = !DILocalVariable(name: "base", arg: 1, scope: !11499, file: !11091, line: 587, type: !11094)
!11502 = !DILocalVariable(name: "active", arg: 2, scope: !11499, file: !11091, line: 587, type: !131)
!11503 = !DILocation(line: 0, scope: !11499)
!11504 = !DILocation(line: 0, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11499, file: !11091, line: 589, column: 9)
!11506 = !DILocation(line: 589, column: 9, scope: !11499)
!11507 = !DILocation(line: 593, column: 1, scope: !11499)
!11508 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !11091, file: !11091, line: 602, type: !11284, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3327, retainedNodes: !11509)
!11509 = !{!11510, !11511}
!11510 = !DILocalVariable(name: "base", arg: 1, scope: !11508, file: !11091, line: 602, type: !11094)
!11511 = !DILocalVariable(name: "enable", arg: 2, scope: !11508, file: !11091, line: 602, type: !131)
!11512 = !DILocation(line: 0, scope: !11508)
!11513 = !DILocation(line: 0, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11508, file: !11091, line: 604, column: 9)
!11515 = !DILocation(line: 604, column: 9, scope: !11508)
!11516 = !DILocation(line: 608, column: 1, scope: !11508)
!11517 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !11518, file: !11518, line: 42, type: !11519, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !11535)
!11518 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11519 = !DISubroutineType(types: !11520)
!11520 = !{!158, !11521}
!11521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11522, size: 32)
!11522 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !1173, line: 20831, baseType: !11523)
!11523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 20820, size: 320, elements: !11524)
!11524 = !{!11525, !11526, !11527, !11528, !11529, !11530, !11531, !11532, !11533, !11534}
!11525 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !11523, file: !1173, line: 20821, baseType: !1177, size: 32)
!11526 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !11523, file: !1173, line: 20822, baseType: !1177, size: 32, offset: 32)
!11527 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !11523, file: !1173, line: 20823, baseType: !1177, size: 32, offset: 64)
!11528 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !11523, file: !1173, line: 20824, baseType: !1177, size: 32, offset: 96)
!11529 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !11523, file: !1173, line: 20825, baseType: !1177, size: 32, offset: 128)
!11530 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !11523, file: !1173, line: 20826, baseType: !1177, size: 32, offset: 160)
!11531 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !11523, file: !1173, line: 20827, baseType: !1177, size: 32, offset: 192)
!11532 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !11523, file: !1173, line: 20828, baseType: !1248, size: 32, offset: 224)
!11533 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !11523, file: !1173, line: 20829, baseType: !1248, size: 32, offset: 256)
!11534 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !11523, file: !1173, line: 20830, baseType: !1248, size: 32, offset: 288)
!11535 = !{!11536, !11537, !11538, !11539, !11540}
!11536 = !DILocalVariable(name: "base", arg: 1, scope: !11517, file: !11518, line: 42, type: !11521)
!11537 = !DILocalVariable(name: "root", scope: !11517, file: !11518, line: 44, type: !158)
!11538 = !DILocalVariable(name: "hz", scope: !11517, file: !11518, line: 45, type: !158)
!11539 = !DILocalVariable(name: "pre", scope: !11517, file: !11518, line: 46, type: !158)
!11540 = !DILocalVariable(name: "post", scope: !11517, file: !11518, line: 46, type: !158)
!11541 = !DILocation(line: 0, scope: !11517)
!11542 = !DILocation(line: 46, column: 2, scope: !11517)
!11543 = !DILocation(line: 48, column: 10, scope: !11517)
!11544 = !DILocation(line: 48, column: 2, scope: !11517)
!11545 = !DILocation(line: 56, column: 3, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11517, file: !11518, line: 48, column: 26)
!11547 = !DILocation(line: 0, scope: !11546)
!11548 = !DILocation(line: 61, column: 2, scope: !11517)
!11549 = !DILocation(line: 66, column: 8, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11517, file: !11518, line: 61, column: 16)
!11551 = !DILocation(line: 67, column: 3, scope: !11550)
!11552 = !DILocation(line: 0, scope: !11550)
!11553 = !DILocation(line: 72, column: 15, scope: !11517)
!11554 = !DILocation(line: 72, column: 19, scope: !11517)
!11555 = !DILocation(line: 72, column: 12, scope: !11517)
!11556 = !DILocation(line: 72, column: 27, scope: !11517)
!11557 = !DILocation(line: 72, column: 32, scope: !11517)
!11558 = !DILocation(line: 72, column: 24, scope: !11517)
!11559 = !DILocation(line: 72, column: 2, scope: !11517)
!11560 = !DILocation(line: 73, column: 1, scope: !11517)
!11561 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !889, file: !889, line: 368, type: !11562, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !11564)
!11562 = !DISubroutineType(types: !11563)
!11563 = !{!158, !3353, !158}
!11564 = !{!11565, !11566}
!11565 = !DILocalVariable(name: "base", arg: 1, scope: !11561, file: !889, line: 368, type: !3353)
!11566 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11561, file: !889, line: 368, type: !158)
!11567 = !DILocation(line: 0, scope: !11561)
!11568 = !DILocation(line: 370, column: 13, scope: !11561)
!11569 = !DILocation(line: 370, column: 58, scope: !11561)
!11570 = !DILocation(line: 370, column: 5, scope: !11561)
!11571 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !11518, file: !11518, line: 81, type: !11572, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !11592)
!11572 = !DISubroutineType(types: !11573)
!11573 = !{!158, !11574}
!11574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11575, size: 32)
!11575 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !1173, line: 12462, baseType: !11576)
!11576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 12450, size: 544, elements: !11577)
!11577 = !{!11578, !11579, !11580, !11581, !11582, !11583, !11584, !11585, !11586, !11587, !11591}
!11578 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !11576, file: !1173, line: 12451, baseType: !1248, size: 32)
!11579 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !11576, file: !1173, line: 12452, baseType: !1177, size: 32, offset: 32)
!11580 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !11576, file: !1173, line: 12453, baseType: !1177, size: 32, offset: 64)
!11581 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !11576, file: !1173, line: 12454, baseType: !1177, size: 32, offset: 96)
!11582 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !11576, file: !1173, line: 12455, baseType: !1177, size: 32, offset: 128)
!11583 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !11576, file: !1173, line: 12456, baseType: !1177, size: 32, offset: 160)
!11584 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !11576, file: !1173, line: 12457, baseType: !1177, size: 32, offset: 192)
!11585 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !11576, file: !1173, line: 12458, baseType: !1177, size: 32, offset: 224)
!11586 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !11576, file: !1173, line: 12459, baseType: !1177, size: 32, offset: 256)
!11587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11576, file: !1173, line: 12460, baseType: !11588, size: 224, offset: 288)
!11588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 224, elements: !11589)
!11589 = !{!11590}
!11590 = !DISubrange(count: 28)
!11591 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !11576, file: !1173, line: 12461, baseType: !1177, size: 32, offset: 512)
!11592 = !{!11593, !11594, !11595, !11596, !11597}
!11593 = !DILocalVariable(name: "base", arg: 1, scope: !11571, file: !11518, line: 81, type: !11574)
!11594 = !DILocalVariable(name: "root", scope: !11571, file: !11518, line: 83, type: !158)
!11595 = !DILocalVariable(name: "hz", scope: !11571, file: !11518, line: 84, type: !158)
!11596 = !DILocalVariable(name: "pre", scope: !11571, file: !11518, line: 85, type: !158)
!11597 = !DILocalVariable(name: "post", scope: !11571, file: !11518, line: 85, type: !158)
!11598 = !DILocation(line: 0, scope: !11571)
!11599 = !DILocation(line: 85, column: 2, scope: !11571)
!11600 = !DILocation(line: 87, column: 10, scope: !11571)
!11601 = !DILocation(line: 87, column: 2, scope: !11571)
!11602 = !DILocation(line: 95, column: 3, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11571, file: !11518, line: 87, column: 26)
!11604 = !DILocation(line: 0, scope: !11603)
!11605 = !DILocation(line: 100, column: 2, scope: !11571)
!11606 = !DILocation(line: 105, column: 8, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11571, file: !11518, line: 100, column: 16)
!11608 = !DILocation(line: 106, column: 3, scope: !11607)
!11609 = !DILocation(line: 0, scope: !11607)
!11610 = !DILocation(line: 111, column: 15, scope: !11571)
!11611 = !DILocation(line: 111, column: 19, scope: !11571)
!11612 = !DILocation(line: 111, column: 12, scope: !11571)
!11613 = !DILocation(line: 111, column: 27, scope: !11571)
!11614 = !DILocation(line: 111, column: 32, scope: !11571)
!11615 = !DILocation(line: 111, column: 24, scope: !11571)
!11616 = !DILocation(line: 111, column: 2, scope: !11571)
!11617 = !DILocation(line: 112, column: 1, scope: !11571)
!11618 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !11518, file: !11518, line: 120, type: !11619, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !11663)
!11619 = !DISubroutineType(types: !11620)
!11620 = !{!158, !11621}
!11621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11622, size: 32)
!11622 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !1173, line: 3477, baseType: !11623)
!11623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 3446, size: 20256, elements: !11624)
!11624 = !{!11625, !11626, !11627, !11628, !11630, !11631, !11632, !11633, !11634, !11635, !11636, !11637, !11638, !11639, !11640, !11641, !11643, !11644, !11645, !11646, !11647, !11657, !11659, !11661, !11662}
!11625 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !11623, file: !1173, line: 3447, baseType: !1177, size: 32)
!11626 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !11623, file: !1173, line: 3448, baseType: !1177, size: 32, offset: 32)
!11627 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !11623, file: !1173, line: 3449, baseType: !1177, size: 32, offset: 64)
!11628 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11623, file: !1173, line: 3450, baseType: !11629, size: 32, offset: 96)
!11629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 32, elements: !2112)
!11630 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !11623, file: !1173, line: 3451, baseType: !1177, size: 32, offset: 128)
!11631 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !11623, file: !1173, line: 3452, baseType: !1177, size: 32, offset: 160)
!11632 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !11623, file: !1173, line: 3453, baseType: !1177, size: 32, offset: 192)
!11633 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !11623, file: !1173, line: 3454, baseType: !1177, size: 32, offset: 224)
!11634 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !11623, file: !1173, line: 3455, baseType: !1177, size: 32, offset: 256)
!11635 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !11623, file: !1173, line: 3456, baseType: !1177, size: 32, offset: 288)
!11636 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !11623, file: !1173, line: 3457, baseType: !1177, size: 32, offset: 320)
!11637 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !11623, file: !1173, line: 3458, baseType: !1177, size: 32, offset: 352)
!11638 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !11623, file: !1173, line: 3459, baseType: !1177, size: 32, offset: 384)
!11639 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !11623, file: !1173, line: 3460, baseType: !1177, size: 32, offset: 416)
!11640 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !11623, file: !1173, line: 3461, baseType: !1248, size: 32, offset: 448)
!11641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11623, file: !1173, line: 3462, baseType: !11642, size: 64, offset: 480)
!11642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 64, elements: !2058)
!11643 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !11623, file: !1173, line: 3463, baseType: !1248, size: 32, offset: 544)
!11644 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !11623, file: !1173, line: 3464, baseType: !1177, size: 32, offset: 576)
!11645 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !11623, file: !1173, line: 3465, baseType: !1248, size: 32, offset: 608)
!11646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11623, file: !1173, line: 3466, baseType: !1234, size: 384, offset: 640)
!11647 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !11623, file: !1173, line: 3472, baseType: !11648, size: 8192, offset: 1024)
!11648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11649, size: 8192, elements: !11655)
!11649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11623, file: !1173, line: 3467, size: 128, elements: !11650)
!11650 = !{!11651, !11652, !11653, !11654}
!11651 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !11649, file: !1173, line: 3468, baseType: !1177, size: 32)
!11652 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !11649, file: !1173, line: 3469, baseType: !1177, size: 32, offset: 32)
!11653 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !11649, file: !1173, line: 3470, baseType: !1177, size: 32, offset: 64)
!11654 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !11649, file: !1173, line: 3471, baseType: !1177, size: 32, offset: 96)
!11655 = !{!11656}
!11656 = !DISubrange(count: 64)
!11657 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !11623, file: !1173, line: 3473, baseType: !11658, size: 8192, offset: 9216)
!11658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 8192, elements: !623)
!11659 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !11623, file: !1173, line: 3474, baseType: !11660, size: 2048, offset: 17408)
!11660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1177, size: 2048, elements: !11655)
!11661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !11623, file: !1173, line: 3475, baseType: !3254, size: 768, offset: 19456)
!11662 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !11623, file: !1173, line: 3476, baseType: !1177, size: 32, offset: 20224)
!11663 = !{!11664, !11665, !11666, !11667, !11668}
!11664 = !DILocalVariable(name: "base", arg: 1, scope: !11618, file: !11518, line: 120, type: !11621)
!11665 = !DILocalVariable(name: "root", scope: !11618, file: !11518, line: 122, type: !158)
!11666 = !DILocalVariable(name: "hz", scope: !11618, file: !11518, line: 123, type: !158)
!11667 = !DILocalVariable(name: "pre", scope: !11618, file: !11518, line: 124, type: !158)
!11668 = !DILocalVariable(name: "post", scope: !11618, file: !11518, line: 124, type: !158)
!11669 = !DILocation(line: 0, scope: !11618)
!11670 = !DILocation(line: 124, column: 2, scope: !11618)
!11671 = !DILocation(line: 126, column: 10, scope: !11618)
!11672 = !DILocation(line: 126, column: 2, scope: !11618)
!11673 = !DILocation(line: 134, column: 3, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11618, file: !11518, line: 126, column: 26)
!11675 = !DILocation(line: 0, scope: !11674)
!11676 = !DILocation(line: 139, column: 2, scope: !11618)
!11677 = !DILocation(line: 144, column: 8, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11618, file: !11518, line: 139, column: 16)
!11679 = !DILocation(line: 144, column: 45, scope: !11678)
!11680 = !DILocation(line: 145, column: 3, scope: !11678)
!11681 = !DILocation(line: 147, column: 8, scope: !11678)
!11682 = !DILocation(line: 148, column: 3, scope: !11678)
!11683 = !DILocation(line: 0, scope: !11678)
!11684 = !DILocation(line: 153, column: 15, scope: !11618)
!11685 = !DILocation(line: 153, column: 19, scope: !11618)
!11686 = !DILocation(line: 153, column: 12, scope: !11618)
!11687 = !DILocation(line: 153, column: 27, scope: !11618)
!11688 = !DILocation(line: 153, column: 32, scope: !11618)
!11689 = !DILocation(line: 153, column: 24, scope: !11618)
!11690 = !DILocation(line: 153, column: 2, scope: !11618)
!11691 = !DILocation(line: 154, column: 1, scope: !11618)
!11692 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !11518, file: !11518, line: 162, type: !11693, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !11709)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{!158, !11695}
!11695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11696, size: 32)
!11696 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !1173, line: 21082, baseType: !11697)
!11697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 21072, size: 144, elements: !11698)
!11698 = !{!11699, !11700, !11702, !11703, !11704, !11705, !11706, !11707, !11708}
!11699 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !11697, file: !1173, line: 21073, baseType: !1289, size: 16)
!11700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11697, file: !1173, line: 21074, baseType: !11701, size: 16, offset: 16)
!11701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 16, elements: !307)
!11702 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !11697, file: !1173, line: 21075, baseType: !1289, size: 16, offset: 32)
!11703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11697, file: !1173, line: 21076, baseType: !11701, size: 16, offset: 48)
!11704 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !11697, file: !1173, line: 21077, baseType: !1289, size: 16, offset: 64)
!11705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11697, file: !1173, line: 21078, baseType: !11701, size: 16, offset: 80)
!11706 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !11697, file: !1173, line: 21079, baseType: !1289, size: 16, offset: 96)
!11707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !11697, file: !1173, line: 21080, baseType: !11701, size: 16, offset: 112)
!11708 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !11697, file: !1173, line: 21081, baseType: !1289, size: 16, offset: 128)
!11709 = !{!11710, !11711, !11712, !11713, !11714}
!11710 = !DILocalVariable(name: "base", arg: 1, scope: !11692, file: !11518, line: 162, type: !11695)
!11711 = !DILocalVariable(name: "root", scope: !11692, file: !11518, line: 164, type: !158)
!11712 = !DILocalVariable(name: "hz", scope: !11692, file: !11518, line: 165, type: !158)
!11713 = !DILocalVariable(name: "pre", scope: !11692, file: !11518, line: 166, type: !158)
!11714 = !DILocalVariable(name: "post", scope: !11692, file: !11518, line: 166, type: !158)
!11715 = !DILocation(line: 0, scope: !11692)
!11716 = !DILocation(line: 166, column: 2, scope: !11692)
!11717 = !DILocation(line: 168, column: 10, scope: !11692)
!11718 = !DILocation(line: 168, column: 2, scope: !11692)
!11719 = !DILocation(line: 0, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11692, file: !11518, line: 168, column: 26)
!11721 = !DILocation(line: 189, column: 2, scope: !11692)
!11722 = !DILocation(line: 194, column: 8, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11692, file: !11518, line: 189, column: 16)
!11724 = !DILocation(line: 194, column: 45, scope: !11723)
!11725 = !DILocation(line: 195, column: 3, scope: !11723)
!11726 = !DILocation(line: 0, scope: !11723)
!11727 = !DILocation(line: 200, column: 15, scope: !11692)
!11728 = !DILocation(line: 200, column: 19, scope: !11692)
!11729 = !DILocation(line: 200, column: 12, scope: !11692)
!11730 = !DILocation(line: 200, column: 27, scope: !11692)
!11731 = !DILocation(line: 200, column: 32, scope: !11692)
!11732 = !DILocation(line: 200, column: 24, scope: !11692)
!11733 = !DILocation(line: 200, column: 2, scope: !11692)
!11734 = !DILocation(line: 201, column: 1, scope: !11692)
!11735 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !11518, file: !11518, line: 209, type: !11736, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !11761)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{!158, !11738}
!11738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11739, size: 32)
!11739 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !1173, line: 41342, baseType: !11740)
!11740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 41322, size: 1504, elements: !11741)
!11741 = !{!11742, !11743, !11744, !11745, !11746, !11747, !11748, !11749, !11750, !11751, !11752, !11753, !11754, !11755, !11756, !11757, !11758, !11759, !11760}
!11742 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !11740, file: !1173, line: 41323, baseType: !1248, size: 32)
!11743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11740, file: !1173, line: 41324, baseType: !1794, size: 480, offset: 32)
!11744 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !11740, file: !1173, line: 41325, baseType: !1177, size: 32, offset: 512)
!11745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11740, file: !1173, line: 41326, baseType: !1794, size: 480, offset: 544)
!11746 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !11740, file: !1173, line: 41327, baseType: !1177, size: 32, offset: 1024)
!11747 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !11740, file: !1173, line: 41328, baseType: !1177, size: 32, offset: 1056)
!11748 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !11740, file: !1173, line: 41329, baseType: !1177, size: 32, offset: 1088)
!11749 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !11740, file: !1173, line: 41330, baseType: !1177, size: 32, offset: 1120)
!11750 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !11740, file: !1173, line: 41331, baseType: !1177, size: 32, offset: 1152)
!11751 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !11740, file: !1173, line: 41332, baseType: !1177, size: 32, offset: 1184)
!11752 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !11740, file: !1173, line: 41333, baseType: !1177, size: 32, offset: 1216)
!11753 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !11740, file: !1173, line: 41334, baseType: !1177, size: 32, offset: 1248)
!11754 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !11740, file: !1173, line: 41335, baseType: !1177, size: 32, offset: 1280)
!11755 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !11740, file: !1173, line: 41336, baseType: !1177, size: 32, offset: 1312)
!11756 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !11740, file: !1173, line: 41337, baseType: !1177, size: 32, offset: 1344)
!11757 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !11740, file: !1173, line: 41338, baseType: !1248, size: 32, offset: 1376)
!11758 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !11740, file: !1173, line: 41339, baseType: !1177, size: 32, offset: 1408)
!11759 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !11740, file: !1173, line: 41340, baseType: !1177, size: 32, offset: 1440)
!11760 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !11740, file: !1173, line: 41341, baseType: !1177, size: 32, offset: 1472)
!11761 = !{!11762, !11763, !11764, !11765, !11766}
!11762 = !DILocalVariable(name: "base", arg: 1, scope: !11735, file: !11518, line: 209, type: !11738)
!11763 = !DILocalVariable(name: "root", scope: !11735, file: !11518, line: 211, type: !158)
!11764 = !DILocalVariable(name: "hz", scope: !11735, file: !11518, line: 212, type: !158)
!11765 = !DILocalVariable(name: "pre", scope: !11735, file: !11518, line: 213, type: !158)
!11766 = !DILocalVariable(name: "post", scope: !11735, file: !11518, line: 213, type: !158)
!11767 = !DILocation(line: 0, scope: !11735)
!11768 = !DILocation(line: 213, column: 2, scope: !11735)
!11769 = !DILocation(line: 215, column: 10, scope: !11735)
!11770 = !DILocation(line: 215, column: 2, scope: !11735)
!11771 = !DILocation(line: 223, column: 3, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11735, file: !11518, line: 215, column: 26)
!11773 = !DILocation(line: 227, column: 3, scope: !11772)
!11774 = !DILocation(line: 231, column: 3, scope: !11772)
!11775 = !DILocation(line: 235, column: 3, scope: !11772)
!11776 = !DILocation(line: 239, column: 3, scope: !11772)
!11777 = !DILocation(line: 243, column: 3, scope: !11772)
!11778 = !DILocation(line: 0, scope: !11772)
!11779 = !DILocation(line: 248, column: 2, scope: !11735)
!11780 = !DILocation(line: 253, column: 8, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11735, file: !11518, line: 248, column: 16)
!11782 = !DILocation(line: 253, column: 45, scope: !11781)
!11783 = !DILocation(line: 254, column: 3, scope: !11781)
!11784 = !DILocation(line: 256, column: 8, scope: !11781)
!11785 = !DILocation(line: 257, column: 3, scope: !11781)
!11786 = !DILocation(line: 0, scope: !11781)
!11787 = !DILocation(line: 262, column: 15, scope: !11735)
!11788 = !DILocation(line: 262, column: 19, scope: !11735)
!11789 = !DILocation(line: 262, column: 12, scope: !11735)
!11790 = !DILocation(line: 262, column: 27, scope: !11735)
!11791 = !DILocation(line: 262, column: 32, scope: !11735)
!11792 = !DILocation(line: 262, column: 24, scope: !11735)
!11793 = !DILocation(line: 262, column: 2, scope: !11735)
!11794 = !DILocation(line: 263, column: 1, scope: !11735)
!11795 = distinct !DISubprogram(name: "z_device_state_init", scope: !11796, file: !11796, line: 23, type: !416, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3464, retainedNodes: !11797)
!11796 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11797 = !{!11798}
!11798 = !DILocalVariable(name: "dev", scope: !11795, file: !11796, line: 25, type: !11799)
!11799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11800, size: 32)
!11800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11801)
!11801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 378, size: 192, elements: !11802)
!11802 = !{!11803, !11804, !11805, !11806, !11812, !11813}
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11801, file: !115, line: 380, baseType: !118, size: 32)
!11804 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11801, file: !115, line: 382, baseType: !13, size: 32, offset: 32)
!11805 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11801, file: !115, line: 384, baseType: !13, size: 32, offset: 64)
!11806 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11801, file: !115, line: 386, baseType: !11807, size: 32, offset: 96)
!11807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11808, size: 32)
!11808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !115, line: 351, size: 16, elements: !11809)
!11809 = !{!11810, !11811}
!11810 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11808, file: !115, line: 359, baseType: !128, size: 8)
!11811 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11808, file: !115, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11812 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11801, file: !115, line: 388, baseType: !133, size: 32, offset: 128)
!11813 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11801, file: !115, line: 396, baseType: !135, size: 32, offset: 160)
!11814 = !DILocation(line: 0, scope: !11795)
!11815 = !DILocation(line: 31, column: 1, scope: !11795)
!11816 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11796, file: !11796, line: 33, type: !11817, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3464, retainedNodes: !11819)
!11817 = !DISubroutineType(types: !11818)
!11818 = !{!11799, !118}
!11819 = !{!11820, !11821}
!11820 = !DILocalVariable(name: "name", arg: 1, scope: !11816, file: !11796, line: 33, type: !118)
!11821 = !DILocalVariable(name: "dev", scope: !11816, file: !11796, line: 35, type: !11799)
!11822 = !DILocation(line: 0, scope: !11816)
!11823 = !DILocation(line: 40, column: 12, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11816, file: !11796, line: 40, column: 6)
!11825 = !DILocation(line: 40, column: 21, scope: !11824)
!11826 = !DILocation(line: 40, column: 25, scope: !11824)
!11827 = !DILocation(line: 40, column: 33, scope: !11824)
!11828 = !DILocation(line: 40, column: 6, scope: !11816)
!11829 = !DILocation(line: 55, column: 2, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11816, file: !11796, line: 55, column: 2)
!11831 = !DILocation(line: 50, column: 7, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11833, file: !11796, line: 50, column: 7)
!11833 = distinct !DILexicalBlock(scope: !11834, file: !11796, line: 49, column: 57)
!11834 = distinct !DILexicalBlock(scope: !11835, file: !11796, line: 49, column: 2)
!11835 = distinct !DILexicalBlock(scope: !11816, file: !11796, line: 49, column: 2)
!11836 = !DILocation(line: 50, column: 30, scope: !11832)
!11837 = !DILocation(line: 50, column: 39, scope: !11832)
!11838 = !DILocation(line: 50, column: 44, scope: !11832)
!11839 = !DILocation(line: 50, column: 7, scope: !11833)
!11840 = !DILocation(line: 49, column: 53, scope: !11834)
!11841 = !DILocation(line: 49, column: 33, scope: !11834)
!11842 = !DILocation(line: 49, column: 2, scope: !11835)
!11843 = distinct !{!11843, !11842, !11844}
!11844 = !DILocation(line: 53, column: 2, scope: !11835)
!11845 = !DILocation(line: 56, column: 7, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11847, file: !11796, line: 56, column: 7)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !11796, line: 55, column: 57)
!11848 = distinct !DILexicalBlock(scope: !11830, file: !11796, line: 55, column: 2)
!11849 = !DILocation(line: 56, column: 30, scope: !11846)
!11850 = !DILocation(line: 56, column: 52, scope: !11846)
!11851 = !DILocation(line: 56, column: 34, scope: !11846)
!11852 = !DILocation(line: 56, column: 58, scope: !11846)
!11853 = !DILocation(line: 56, column: 7, scope: !11847)
!11854 = !DILocation(line: 55, column: 53, scope: !11848)
!11855 = !DILocation(line: 55, column: 33, scope: !11848)
!11856 = distinct !{!11856, !11829, !11857}
!11857 = !DILocation(line: 59, column: 2, scope: !11830)
!11858 = !DILocation(line: 62, column: 1, scope: !11816)
!11859 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11796, file: !11796, line: 93, type: !11860, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3464, retainedNodes: !11862)
!11860 = !DISubroutineType(types: !11861)
!11861 = !{!131, !11799}
!11862 = !{!11863}
!11863 = !DILocalVariable(name: "dev", arg: 1, scope: !11859, file: !11796, line: 93, type: !11799)
!11864 = !DILocation(line: 0, scope: !11859)
!11865 = !DILocation(line: 99, column: 10, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11859, file: !11796, line: 99, column: 6)
!11867 = !DILocation(line: 99, column: 6, scope: !11859)
!11868 = !DILocation(line: 103, column: 14, scope: !11859)
!11869 = !DILocation(line: 103, column: 21, scope: !11859)
!11870 = !DILocation(line: 103, column: 33, scope: !11859)
!11871 = !DILocation(line: 103, column: 49, scope: !11859)
!11872 = !DILocation(line: 103, column: 58, scope: !11859)
!11873 = !DILocation(line: 104, column: 1, scope: !11859)
!11874 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11796, file: !11796, line: 87, type: !11875, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3464, retainedNodes: !11878)
!11875 = !DISubroutineType(types: !11876)
!11876 = !{!249, !11877}
!11877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11799, size: 32)
!11878 = !{!11879}
!11879 = !DILocalVariable(name: "devices", arg: 1, scope: !11874, file: !11796, line: 87, type: !11877)
!11880 = !DILocation(line: 0, scope: !11874)
!11881 = !DILocation(line: 89, column: 11, scope: !11874)
!11882 = !DILocation(line: 90, column: 2, scope: !11874)
!11883 = distinct !DISubprogram(name: "device_required_foreach", scope: !11796, file: !11796, line: 125, type: !11884, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3464, retainedNodes: !11890)
!11884 = !DISubroutineType(types: !11885)
!11885 = !{!111, !11799, !11886, !133}
!11886 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !115, line: 471, baseType: !11887)
!11887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11888, size: 32)
!11888 = !DISubroutineType(types: !11889)
!11889 = !{!111, !11799, !133}
!11890 = !{!11891, !11892, !11893, !11894, !11895}
!11891 = !DILocalVariable(name: "dev", arg: 1, scope: !11883, file: !11796, line: 125, type: !11799)
!11892 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11883, file: !11796, line: 126, type: !11886)
!11893 = !DILocalVariable(name: "context", arg: 3, scope: !11883, file: !11796, line: 127, type: !133)
!11894 = !DILocalVariable(name: "handle_count", scope: !11883, file: !11796, line: 129, type: !249)
!11895 = !DILocalVariable(name: "handles", scope: !11883, file: !11796, line: 130, type: !135)
!11896 = !DILocation(line: 0, scope: !11883)
!11897 = !DILocation(line: 129, column: 2, scope: !11883)
!11898 = !DILocation(line: 129, column: 9, scope: !11883)
!11899 = !DILocation(line: 130, column: 35, scope: !11883)
!11900 = !DILocation(line: 132, column: 33, scope: !11883)
!11901 = !DILocation(line: 132, column: 9, scope: !11883)
!11902 = !DILocation(line: 133, column: 1, scope: !11883)
!11903 = !DILocation(line: 132, column: 2, scope: !11883)
!11904 = distinct !DISubprogram(name: "device_required_handles_get", scope: !115, file: !115, line: 493, type: !11905, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3464, retainedNodes: !11907)
!11905 = !DISubroutineType(types: !11906)
!11906 = !{!135, !11799, !2915}
!11907 = !{!11908, !11909, !11910, !11911}
!11908 = !DILocalVariable(name: "dev", arg: 1, scope: !11904, file: !115, line: 493, type: !11799)
!11909 = !DILocalVariable(name: "count", arg: 2, scope: !11904, file: !115, line: 493, type: !2915)
!11910 = !DILocalVariable(name: "rv", scope: !11904, file: !115, line: 495, type: !135)
!11911 = !DILocalVariable(name: "i", scope: !11912, file: !115, line: 498, type: !249)
!11912 = distinct !DILexicalBlock(scope: !11913, file: !115, line: 497, column: 18)
!11913 = distinct !DILexicalBlock(scope: !11904, file: !115, line: 497, column: 6)
!11914 = !DILocation(line: 0, scope: !11904)
!11915 = !DILocation(line: 495, column: 35, scope: !11904)
!11916 = !DILocation(line: 497, column: 9, scope: !11913)
!11917 = !DILocation(line: 497, column: 6, scope: !11904)
!11918 = !DILocation(line: 0, scope: !11912)
!11919 = !DILocation(line: 500, column: 11, scope: !11912)
!11920 = !DILocation(line: 500, column: 40, scope: !11912)
!11921 = !DILocation(line: 502, column: 4, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11912, file: !115, line: 501, column: 40)
!11923 = distinct !{!11923, !11924, !11925}
!11924 = !DILocation(line: 500, column: 3, scope: !11912)
!11925 = !DILocation(line: 503, column: 3, scope: !11912)
!11926 = !DILocation(line: 504, column: 10, scope: !11912)
!11927 = !DILocation(line: 505, column: 2, scope: !11912)
!11928 = !DILocation(line: 507, column: 2, scope: !11904)
!11929 = distinct !DISubprogram(name: "device_visitor", scope: !11796, file: !11796, line: 106, type: !11930, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3464, retainedNodes: !11932)
!11930 = !DISubroutineType(types: !11931)
!11931 = !{!111, !135, !249, !11886, !133}
!11932 = !{!11933, !11934, !11935, !11936, !11937, !11939, !11942, !11943}
!11933 = !DILocalVariable(name: "handles", arg: 1, scope: !11929, file: !11796, line: 106, type: !135)
!11934 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11929, file: !11796, line: 107, type: !249)
!11935 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11929, file: !11796, line: 108, type: !11886)
!11936 = !DILocalVariable(name: "context", arg: 4, scope: !11929, file: !11796, line: 109, type: !133)
!11937 = !DILocalVariable(name: "i", scope: !11938, file: !11796, line: 112, type: !249)
!11938 = distinct !DILexicalBlock(scope: !11929, file: !11796, line: 112, column: 2)
!11939 = !DILocalVariable(name: "dh", scope: !11940, file: !11796, line: 113, type: !137)
!11940 = distinct !DILexicalBlock(scope: !11941, file: !11796, line: 112, column: 44)
!11941 = distinct !DILexicalBlock(scope: !11938, file: !11796, line: 112, column: 2)
!11942 = !DILocalVariable(name: "rdev", scope: !11940, file: !11796, line: 114, type: !11799)
!11943 = !DILocalVariable(name: "rc", scope: !11940, file: !11796, line: 115, type: !111)
!11944 = !DILocation(line: 0, scope: !11929)
!11945 = !DILocation(line: 0, scope: !11938)
!11946 = !DILocation(line: 112, column: 23, scope: !11941)
!11947 = !DILocation(line: 112, column: 2, scope: !11938)
!11948 = distinct !{!11948, !11947, !11949}
!11949 = !DILocation(line: 120, column: 2, scope: !11938)
!11950 = !DILocation(line: 113, column: 24, scope: !11940)
!11951 = !DILocation(line: 0, scope: !11940)
!11952 = !DILocation(line: 114, column: 31, scope: !11940)
!11953 = !DILocation(line: 115, column: 12, scope: !11940)
!11954 = !DILocation(line: 117, column: 10, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11940, file: !11796, line: 117, column: 7)
!11956 = !DILocation(line: 112, column: 39, scope: !11941)
!11957 = !DILocation(line: 123, column: 1, scope: !11929)
!11958 = distinct !DISubprogram(name: "device_from_handle", scope: !115, file: !115, line: 439, type: !11959, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3464, retainedNodes: !11961)
!11959 = !DISubroutineType(types: !11960)
!11960 = !{!11799, !137}
!11961 = !{!11962, !11963, !11964}
!11962 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11958, file: !115, line: 439, type: !137)
!11963 = !DILocalVariable(name: "dev", scope: !11958, file: !115, line: 443, type: !11799)
!11964 = !DILocalVariable(name: "numdev", scope: !11958, file: !115, line: 444, type: !249)
!11965 = !DILocation(line: 0, scope: !11958)
!11966 = !DILocation(line: 446, column: 7, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11958, file: !115, line: 446, column: 6)
!11968 = !DILocation(line: 446, column: 18, scope: !11967)
!11969 = !DILocation(line: 446, column: 23, scope: !11967)
!11970 = !DILocation(line: 450, column: 2, scope: !11958)
!11971 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11796, file: !11796, line: 135, type: !11884, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3464, retainedNodes: !11972)
!11972 = !{!11973, !11974, !11975, !11976, !11977}
!11973 = !DILocalVariable(name: "dev", arg: 1, scope: !11971, file: !11796, line: 135, type: !11799)
!11974 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11971, file: !11796, line: 136, type: !11886)
!11975 = !DILocalVariable(name: "context", arg: 3, scope: !11971, file: !11796, line: 137, type: !133)
!11976 = !DILocalVariable(name: "handle_count", scope: !11971, file: !11796, line: 139, type: !249)
!11977 = !DILocalVariable(name: "handles", scope: !11971, file: !11796, line: 140, type: !135)
!11978 = !DILocation(line: 0, scope: !11971)
!11979 = !DILocation(line: 139, column: 2, scope: !11971)
!11980 = !DILocation(line: 139, column: 9, scope: !11971)
!11981 = !DILocation(line: 140, column: 35, scope: !11971)
!11982 = !DILocation(line: 142, column: 33, scope: !11971)
!11983 = !DILocation(line: 142, column: 9, scope: !11971)
!11984 = !DILocation(line: 143, column: 1, scope: !11971)
!11985 = !DILocation(line: 142, column: 2, scope: !11971)
!11986 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !115, file: !115, line: 573, type: !11905, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3464, retainedNodes: !11987)
!11987 = !{!11988, !11989, !11990, !11991, !11992}
!11988 = !DILocalVariable(name: "dev", arg: 1, scope: !11986, file: !115, line: 573, type: !11799)
!11989 = !DILocalVariable(name: "count", arg: 2, scope: !11986, file: !115, line: 573, type: !2915)
!11990 = !DILocalVariable(name: "rv", scope: !11986, file: !115, line: 575, type: !135)
!11991 = !DILocalVariable(name: "region", scope: !11986, file: !115, line: 576, type: !249)
!11992 = !DILocalVariable(name: "i", scope: !11986, file: !115, line: 577, type: !249)
!11993 = !DILocation(line: 0, scope: !11986)
!11994 = !DILocation(line: 575, column: 35, scope: !11986)
!11995 = !DILocation(line: 579, column: 9, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11986, file: !115, line: 579, column: 6)
!11997 = !DILocation(line: 579, column: 6, scope: !11986)
!11998 = !DILocation(line: 582, column: 8, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !12000, file: !115, line: 582, column: 8)
!12000 = distinct !DILexicalBlock(scope: !12001, file: !115, line: 581, column: 23)
!12001 = distinct !DILexicalBlock(scope: !11996, file: !115, line: 579, column: 18)
!12002 = !DILocation(line: 582, column: 12, scope: !11999)
!12003 = !DILocation(line: 585, column: 6, scope: !12000)
!12004 = !DILocation(line: 0, scope: !12001)
!12005 = !DILocation(line: 581, column: 17, scope: !12001)
!12006 = !DILocation(line: 581, column: 3, scope: !12001)
!12007 = !DILocation(line: 588, column: 10, scope: !12001)
!12008 = !DILocation(line: 588, column: 16, scope: !12001)
!12009 = !DILocation(line: 589, column: 4, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12001, file: !115, line: 588, column: 39)
!12011 = !DILocation(line: 588, column: 3, scope: !12001)
!12012 = distinct !{!12012, !12011, !12013}
!12013 = !DILocation(line: 590, column: 3, scope: !12001)
!12014 = !DILocation(line: 591, column: 10, scope: !12001)
!12015 = !DILocation(line: 592, column: 2, scope: !12001)
!12016 = !DILocation(line: 575, column: 25, scope: !11986)
!12017 = !DILocation(line: 594, column: 2, scope: !11986)
!12018 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2192, file: !2192, line: 49, type: !12019, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2189, retainedNodes: !247)
!12019 = !DISubroutineType(types: !12020)
!12020 = !{!860}
!12021 = !DILocation(line: 51, column: 10, scope: !12018)
!12022 = !DILocation(line: 51, column: 20, scope: !12018)
!12023 = !DILocation(line: 51, column: 2, scope: !12018)
!12024 = distinct !DISubprogram(name: "coredump", scope: !3471, file: !3471, line: 209, type: !12025, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12166)
!12025 = !DISubroutineType(types: !12026)
!12026 = !{null, !32, !12027, !12071}
!12027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12028, size: 32)
!12028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12029)
!12029 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3044, line: 141, baseType: !12030)
!12030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3044, line: 97, size: 256, elements: !12031)
!12031 = !{!12032}
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12030, file: !3044, line: 107, baseType: !12033, size: 256)
!12033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3044, line: 98, size: 256, elements: !12034)
!12034 = !{!12035, !12040, !12045, !12050, !12055, !12060, !12065, !12070}
!12035 = !DIDerivedType(tag: DW_TAG_member, scope: !12033, file: !3044, line: 99, baseType: !12036, size: 32)
!12036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12033, file: !3044, line: 99, size: 32, elements: !12037)
!12037 = !{!12038, !12039}
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12036, file: !3044, line: 99, baseType: !158, size: 32)
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12036, file: !3044, line: 99, baseType: !158, size: 32)
!12040 = !DIDerivedType(tag: DW_TAG_member, scope: !12033, file: !3044, line: 100, baseType: !12041, size: 32, offset: 32)
!12041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12033, file: !3044, line: 100, size: 32, elements: !12042)
!12042 = !{!12043, !12044}
!12043 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12041, file: !3044, line: 100, baseType: !158, size: 32)
!12044 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12041, file: !3044, line: 100, baseType: !158, size: 32)
!12045 = !DIDerivedType(tag: DW_TAG_member, scope: !12033, file: !3044, line: 101, baseType: !12046, size: 32, offset: 64)
!12046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12033, file: !3044, line: 101, size: 32, elements: !12047)
!12047 = !{!12048, !12049}
!12048 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12046, file: !3044, line: 101, baseType: !158, size: 32)
!12049 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12046, file: !3044, line: 101, baseType: !158, size: 32)
!12050 = !DIDerivedType(tag: DW_TAG_member, scope: !12033, file: !3044, line: 102, baseType: !12051, size: 32, offset: 96)
!12051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12033, file: !3044, line: 102, size: 32, elements: !12052)
!12052 = !{!12053, !12054}
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12051, file: !3044, line: 102, baseType: !158, size: 32)
!12054 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12051, file: !3044, line: 102, baseType: !158, size: 32)
!12055 = !DIDerivedType(tag: DW_TAG_member, scope: !12033, file: !3044, line: 103, baseType: !12056, size: 32, offset: 128)
!12056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12033, file: !3044, line: 103, size: 32, elements: !12057)
!12057 = !{!12058, !12059}
!12058 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12056, file: !3044, line: 103, baseType: !158, size: 32)
!12059 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12056, file: !3044, line: 103, baseType: !158, size: 32)
!12060 = !DIDerivedType(tag: DW_TAG_member, scope: !12033, file: !3044, line: 104, baseType: !12061, size: 32, offset: 160)
!12061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12033, file: !3044, line: 104, size: 32, elements: !12062)
!12062 = !{!12063, !12064}
!12063 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12061, file: !3044, line: 104, baseType: !158, size: 32)
!12064 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12061, file: !3044, line: 104, baseType: !158, size: 32)
!12065 = !DIDerivedType(tag: DW_TAG_member, scope: !12033, file: !3044, line: 105, baseType: !12066, size: 32, offset: 192)
!12066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12033, file: !3044, line: 105, size: 32, elements: !12067)
!12067 = !{!12068, !12069}
!12068 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12066, file: !3044, line: 105, baseType: !158, size: 32)
!12069 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12066, file: !3044, line: 105, baseType: !158, size: 32)
!12070 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12033, file: !3044, line: 106, baseType: !158, size: 32, offset: 224)
!12071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12072, size: 32)
!12072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !290, line: 245, size: 1152, elements: !12073)
!12073 = !{!12074, !12132, !12144, !12145, !12146, !12147, !12148, !12161}
!12074 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12072, file: !290, line: 247, baseType: !12075, size: 384)
!12075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !290, line: 57, size: 384, elements: !12076)
!12076 = !{!12077, !12101, !12108, !12109, !12110, !12119, !12120, !12121}
!12077 = !DIDerivedType(tag: DW_TAG_member, scope: !12075, file: !290, line: 60, baseType: !12078, size: 64)
!12078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12075, file: !290, line: 60, size: 64, elements: !12079)
!12079 = !{!12080, !12095}
!12080 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12078, file: !290, line: 61, baseType: !12081, size: 64)
!12081 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !230, line: 49, baseType: !12082)
!12082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !230, line: 37, size: 64, elements: !12083)
!12083 = !{!12084, !12090}
!12084 = !DIDerivedType(tag: DW_TAG_member, scope: !12082, file: !230, line: 38, baseType: !12085, size: 32)
!12085 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12082, file: !230, line: 38, size: 32, elements: !12086)
!12086 = !{!12087, !12089}
!12087 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12085, file: !230, line: 39, baseType: !12088, size: 32)
!12088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12082, size: 32)
!12089 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12085, file: !230, line: 40, baseType: !12088, size: 32)
!12090 = !DIDerivedType(tag: DW_TAG_member, scope: !12082, file: !230, line: 42, baseType: !12091, size: 32, offset: 32)
!12091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12082, file: !230, line: 42, size: 32, elements: !12092)
!12092 = !{!12093, !12094}
!12093 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12091, file: !230, line: 43, baseType: !12088, size: 32)
!12094 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12091, file: !230, line: 44, baseType: !12088, size: 32)
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12078, file: !290, line: 62, baseType: !12096, size: 64)
!12096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !12097)
!12097 = !{!12098}
!12098 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12096, file: !302, line: 50, baseType: !12099, size: 64)
!12099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12100, size: 64, elements: !307)
!12100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12096, size: 32)
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12075, file: !290, line: 68, baseType: !12102, size: 32, offset: 64)
!12102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12103, size: 32)
!12103 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !12104)
!12104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !12105)
!12105 = !{!12106}
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12104, file: !225, line: 232, baseType: !12107, size: 64)
!12107 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !12082)
!12108 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12075, file: !290, line: 71, baseType: !128, size: 8, offset: 96)
!12109 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12075, file: !290, line: 74, baseType: !128, size: 8, offset: 104)
!12110 = !DIDerivedType(tag: DW_TAG_member, scope: !12075, file: !290, line: 90, baseType: !12111, size: 16, offset: 112)
!12111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12075, file: !290, line: 90, size: 16, elements: !12112)
!12112 = !{!12113, !12118}
!12113 = !DIDerivedType(tag: DW_TAG_member, scope: !12111, file: !290, line: 91, baseType: !12114, size: 16)
!12114 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12111, file: !290, line: 91, size: 16, elements: !12115)
!12115 = !{!12116, !12117}
!12116 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12114, file: !290, line: 96, baseType: !320, size: 8)
!12117 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12114, file: !290, line: 97, baseType: !128, size: 8, offset: 8)
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12111, file: !290, line: 100, baseType: !272, size: 16)
!12119 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12075, file: !290, line: 107, baseType: !158, size: 32, offset: 128)
!12120 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12075, file: !290, line: 127, baseType: !133, size: 32, offset: 160)
!12121 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12075, file: !290, line: 131, baseType: !12122, size: 192, offset: 192)
!12122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !225, line: 244, size: 192, elements: !12123)
!12123 = !{!12124, !12125, !12131}
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12122, file: !225, line: 245, baseType: !12081, size: 64)
!12125 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12122, file: !225, line: 246, baseType: !12126, size: 32, offset: 64)
!12126 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !225, line: 242, baseType: !12127)
!12127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12128, size: 32)
!12128 = !DISubroutineType(types: !12129)
!12129 = !{null, !12130}
!12130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12122, size: 32)
!12131 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12122, file: !225, line: 249, baseType: !204, size: 64, offset: 128)
!12132 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12072, file: !290, line: 250, baseType: !12133, size: 288, offset: 384)
!12133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !339, line: 25, size: 288, elements: !12134)
!12134 = !{!12135, !12136, !12137, !12138, !12139, !12140, !12141, !12142, !12143}
!12135 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12133, file: !339, line: 26, baseType: !158, size: 32)
!12136 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12133, file: !339, line: 27, baseType: !158, size: 32, offset: 32)
!12137 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12133, file: !339, line: 28, baseType: !158, size: 32, offset: 64)
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12133, file: !339, line: 29, baseType: !158, size: 32, offset: 96)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12133, file: !339, line: 30, baseType: !158, size: 32, offset: 128)
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12133, file: !339, line: 31, baseType: !158, size: 32, offset: 160)
!12141 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12133, file: !339, line: 32, baseType: !158, size: 32, offset: 192)
!12142 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12133, file: !339, line: 33, baseType: !158, size: 32, offset: 224)
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12133, file: !339, line: 34, baseType: !158, size: 32, offset: 256)
!12144 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12072, file: !290, line: 253, baseType: !133, size: 32, offset: 672)
!12145 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12072, file: !290, line: 256, baseType: !12103, size: 64, offset: 704)
!12146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12072, file: !290, line: 279, baseType: !353, size: 256, offset: 768)
!12147 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12072, file: !290, line: 294, baseType: !111, size: 32, offset: 1024)
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12072, file: !290, line: 325, baseType: !12149, size: 32, offset: 1056)
!12149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12150, size: 32)
!12150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !12151)
!12151 = !{!12152, !12158, !12159}
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12150, file: !221, line: 5074, baseType: !12153, size: 96)
!12153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !12154)
!12154 = !{!12155, !12156, !12157}
!12155 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12153, file: !363, line: 57, baseType: !366, size: 32)
!12156 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12153, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12153, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12150, file: !221, line: 5075, baseType: !12103, size: 64, offset: 96)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12150, file: !221, line: 5076, baseType: !12160, offset: 160)
!12160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12072, file: !290, line: 343, baseType: !12162, size: 64, offset: 1088)
!12162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !339, line: 60, size: 64, elements: !12163)
!12163 = !{!12164, !12165}
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12162, file: !339, line: 63, baseType: !158, size: 32)
!12165 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12162, file: !339, line: 66, baseType: !158, size: 32, offset: 32)
!12166 = !{!12167, !12168, !12169}
!12167 = !DILocalVariable(name: "reason", arg: 1, scope: !12024, file: !3471, line: 209, type: !32)
!12168 = !DILocalVariable(name: "esf", arg: 2, scope: !12024, file: !3471, line: 209, type: !12027)
!12169 = !DILocalVariable(name: "thread", arg: 3, scope: !12024, file: !3471, line: 210, type: !12071)
!12170 = !DILocation(line: 0, scope: !12024)
!12171 = !DILocation(line: 212, column: 1, scope: !12024)
!12172 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3471, file: !3471, line: 214, type: !12173, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12175)
!12173 = !DISubroutineType(types: !12174)
!12174 = !{null, !22, !22}
!12175 = !{!12176, !12177}
!12176 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12172, file: !3471, line: 214, type: !22)
!12177 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12172, file: !3471, line: 214, type: !22)
!12178 = !DILocation(line: 0, scope: !12172)
!12179 = !DILocation(line: 216, column: 1, scope: !12172)
!12180 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3471, file: !3471, line: 218, type: !12181, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12183)
!12181 = !DISubroutineType(types: !12182)
!12182 = !{null, !178, !249}
!12183 = !{!12184, !12185}
!12184 = !DILocalVariable(name: "buf", arg: 1, scope: !12180, file: !3471, line: 218, type: !178)
!12185 = !DILocalVariable(name: "buflen", arg: 2, scope: !12180, file: !3471, line: 218, type: !249)
!12186 = !DILocation(line: 0, scope: !12180)
!12187 = !DILocation(line: 220, column: 1, scope: !12180)
!12188 = distinct !DISubprogram(name: "coredump_query", scope: !3471, file: !3471, line: 222, type: !12189, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12191)
!12189 = !DISubroutineType(types: !12190)
!12190 = !{!111, !3470, !133}
!12191 = !{!12192, !12193}
!12192 = !DILocalVariable(name: "query_id", arg: 1, scope: !12188, file: !3471, line: 222, type: !3470)
!12193 = !DILocalVariable(name: "arg", arg: 2, scope: !12188, file: !3471, line: 222, type: !133)
!12194 = !DILocation(line: 0, scope: !12188)
!12195 = !DILocation(line: 224, column: 2, scope: !12188)
!12196 = distinct !DISubprogram(name: "coredump_cmd", scope: !3471, file: !3471, line: 227, type: !12197, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12199)
!12197 = !DISubroutineType(types: !12198)
!12198 = !{!111, !3477, !133}
!12199 = !{!12200, !12201}
!12200 = !DILocalVariable(name: "query_id", arg: 1, scope: !12196, file: !3471, line: 227, type: !3477)
!12201 = !DILocalVariable(name: "arg", arg: 2, scope: !12196, file: !3471, line: 227, type: !133)
!12202 = !DILocation(line: 0, scope: !12196)
!12203 = !DILocation(line: 229, column: 2, scope: !12196)
!12204 = distinct !DISubprogram(name: "arch_system_halt", scope: !12205, file: !12205, line: 23, type: !7495, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12206)
!12205 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12206 = !{!12207}
!12207 = !DILocalVariable(name: "reason", arg: 1, scope: !12204, file: !12205, line: 23, type: !32)
!12208 = !DILocation(line: 0, scope: !12204)
!12209 = !DILocation(line: 55, column: 2, scope: !12210, inlinedAt: !12214)
!12210 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7659, file: !7659, line: 42, type: !9702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12211)
!12211 = !{!12212, !12213}
!12212 = !DILocalVariable(name: "key", scope: !12210, file: !7659, line: 44, type: !32)
!12213 = !DILocalVariable(name: "tmp", scope: !12210, file: !7659, line: 53, type: !32)
!12214 = distinct !DILocation(line: 31, column: 8, scope: !12204)
!12215 = !{i64 2844059}
!12216 = !DILocation(line: 0, scope: !12210, inlinedAt: !12214)
!12217 = !DILocation(line: 32, column: 2, scope: !12204)
!12218 = !DILocation(line: 32, column: 2, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12220, file: !12205, line: 32, column: 2)
!12220 = distinct !DILexicalBlock(scope: !12204, file: !12205, line: 32, column: 2)
!12221 = distinct !{!12221, !12222, !12223}
!12222 = !DILocation(line: 32, column: 2, scope: !12220)
!12223 = !DILocation(line: 34, column: 2, scope: !12220)
!12224 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12205, file: !12205, line: 39, type: !12225, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12227)
!12225 = !DISubroutineType(types: !12226)
!12226 = !{null, !32, !12027}
!12227 = !{!12228, !12229}
!12228 = !DILocalVariable(name: "reason", arg: 1, scope: !12224, file: !12205, line: 39, type: !32)
!12229 = !DILocalVariable(name: "esf", arg: 2, scope: !12224, file: !12205, line: 40, type: !12027)
!12230 = !DILocation(line: 0, scope: !12224)
!12231 = !DILocation(line: 45, column: 2, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !12205, line: 45, column: 2)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !12205, line: 45, column: 2)
!12234 = distinct !DILexicalBlock(scope: !12235, file: !12205, line: 45, column: 2)
!12235 = distinct !DILexicalBlock(scope: !12224, file: !12205, line: 45, column: 2)
!12236 = !DILocation(line: 46, column: 2, scope: !12224)
!12237 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12205, file: !12205, line: 81, type: !7495, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12238)
!12238 = !{!12239}
!12239 = !DILocalVariable(name: "reason", arg: 1, scope: !12237, file: !12205, line: 81, type: !32)
!12240 = !DILocation(line: 0, scope: !12237)
!12241 = !DILocation(line: 83, column: 2, scope: !12237)
!12242 = distinct !DISubprogram(name: "z_fatal_error", scope: !12205, file: !12205, line: 96, type: !12225, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12243)
!12243 = !{!12244, !12245, !12246, !12247}
!12244 = !DILocalVariable(name: "reason", arg: 1, scope: !12242, file: !12205, line: 96, type: !32)
!12245 = !DILocalVariable(name: "esf", arg: 2, scope: !12242, file: !12205, line: 96, type: !12027)
!12246 = !DILocalVariable(name: "key", scope: !12242, file: !12205, line: 102, type: !32)
!12247 = !DILocalVariable(name: "thread", scope: !12242, file: !12205, line: 103, type: !12071)
!12248 = !DILocation(line: 0, scope: !12242)
!12249 = !DILocation(line: 55, column: 2, scope: !12210, inlinedAt: !12250)
!12250 = distinct !DILocation(line: 102, column: 21, scope: !12242)
!12251 = !DILocation(line: 0, scope: !12210, inlinedAt: !12250)
!12252 = !DILocation(line: 104, column: 4, scope: !12242)
!12253 = !DILocation(line: 109, column: 2, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12255, file: !12205, line: 109, column: 2)
!12255 = distinct !DILexicalBlock(scope: !12256, file: !12205, line: 109, column: 2)
!12256 = distinct !DILexicalBlock(scope: !12257, file: !12205, line: 109, column: 2)
!12257 = distinct !DILexicalBlock(scope: !12242, file: !12205, line: 109, column: 2)
!12258 = !DILocation(line: 119, column: 11, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12242, file: !12205, line: 119, column: 6)
!12260 = !DILocation(line: 119, column: 20, scope: !12259)
!12261 = !DILocalVariable(name: "esf", arg: 1, scope: !12262, file: !8505, line: 71, type: !12027)
!12262 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8505, file: !8505, line: 71, type: !12263, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12265)
!12263 = !DISubroutineType(types: !12264)
!12264 = !{!131, !12027}
!12265 = !{!12261}
!12266 = !DILocation(line: 0, scope: !12262, inlinedAt: !12267)
!12267 = distinct !DILocation(line: 119, column: 23, scope: !12259)
!12268 = !DILocation(line: 73, column: 21, scope: !12262, inlinedAt: !12267)
!12269 = !DILocation(line: 73, column: 26, scope: !12262, inlinedAt: !12267)
!12270 = !DILocation(line: 73, column: 9, scope: !12262, inlinedAt: !12267)
!12271 = !DILocation(line: 119, column: 6, scope: !12242)
!12272 = !DILocation(line: 120, column: 3, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !12205, line: 120, column: 3)
!12274 = distinct !DILexicalBlock(scope: !12275, file: !12205, line: 120, column: 3)
!12275 = distinct !DILexicalBlock(scope: !12276, file: !12205, line: 120, column: 3)
!12276 = distinct !DILexicalBlock(scope: !12277, file: !12205, line: 120, column: 3)
!12277 = distinct !DILexicalBlock(scope: !12259, file: !12205, line: 119, column: 57)
!12278 = !DILocation(line: 121, column: 2, scope: !12277)
!12279 = !DILocation(line: 124, column: 2, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12281, file: !12205, line: 124, column: 2)
!12281 = distinct !DILexicalBlock(scope: !12282, file: !12205, line: 124, column: 2)
!12282 = distinct !DILexicalBlock(scope: !12283, file: !12205, line: 124, column: 2)
!12283 = distinct !DILexicalBlock(scope: !12242, file: !12205, line: 124, column: 2)
!12284 = !DILocation(line: 131, column: 2, scope: !12242)
!12285 = !DILocation(line: 0, scope: !12262, inlinedAt: !12286)
!12286 = distinct !DILocation(line: 151, column: 24, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12288, file: !12205, line: 151, column: 7)
!12288 = distinct !DILexicalBlock(scope: !12289, file: !12205, line: 146, column: 32)
!12289 = distinct !DILexicalBlock(scope: !12242, file: !12205, line: 146, column: 6)
!12290 = !DILocation(line: 151, column: 7, scope: !12288)
!12291 = !DILocation(line: 151, column: 21, scope: !12287)
!12292 = !DILocalVariable(name: "key", arg: 1, scope: !12293, file: !7659, line: 84, type: !32)
!12293 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12294)
!12294 = !{!12292}
!12295 = !DILocation(line: 0, scope: !12293, inlinedAt: !12296)
!12296 = distinct !DILocation(line: 186, column: 2, scope: !12242)
!12297 = !DILocation(line: 95, column: 2, scope: !12293, inlinedAt: !12296)
!12298 = !{i64 2844876}
!12299 = !DILocation(line: 189, column: 3, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12301, file: !12205, line: 188, column: 41)
!12301 = distinct !DILexicalBlock(scope: !12242, file: !12205, line: 188, column: 6)
!12302 = !DILocation(line: 191, column: 1, scope: !12242)
!12303 = distinct !DISubprogram(name: "k_current_get", scope: !221, file: !221, line: 530, type: !12304, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !247)
!12304 = !DISubroutineType(types: !12305)
!12305 = !{!12306}
!12306 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !290, line: 347, baseType: !12071)
!12307 = !DILocation(line: 535, column: 9, scope: !12303)
!12308 = !DILocation(line: 535, column: 2, scope: !12303)
!12309 = distinct !DISubprogram(name: "reason_to_str", scope: !12205, file: !12205, line: 62, type: !12310, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12312)
!12310 = !DISubroutineType(types: !12311)
!12311 = !{!118, !32}
!12312 = !{!12313}
!12313 = !DILocalVariable(name: "reason", arg: 1, scope: !12309, file: !12205, line: 62, type: !32)
!12314 = !DILocation(line: 0, scope: !12309)
!12315 = !DILocation(line: 64, column: 2, scope: !12309)
!12316 = !DILocation(line: 0, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12309, file: !12205, line: 64, column: 18)
!12318 = !DILocation(line: 78, column: 1, scope: !12309)
!12319 = distinct !DISubprogram(name: "thread_name_get", scope: !12205, file: !12205, line: 51, type: !12320, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12322)
!12320 = !DISubroutineType(types: !12321)
!12321 = !{!118, !12071}
!12322 = !{!12323, !12324}
!12323 = !DILocalVariable(name: "thread", arg: 1, scope: !12319, file: !12205, line: 51, type: !12071)
!12324 = !DILocalVariable(name: "thread_name", scope: !12319, file: !12205, line: 53, type: !118)
!12325 = !DILocation(line: 0, scope: !12319)
!12326 = !DILocation(line: 53, column: 36, scope: !12319)
!12327 = !DILocation(line: 53, column: 28, scope: !12319)
!12328 = !DILocation(line: 53, column: 47, scope: !12319)
!12329 = !DILocation(line: 55, column: 19, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12319, file: !12205, line: 55, column: 6)
!12331 = !DILocation(line: 55, column: 28, scope: !12330)
!12332 = !DILocation(line: 55, column: 32, scope: !12330)
!12333 = !DILocation(line: 55, column: 47, scope: !12330)
!12334 = !DILocation(line: 55, column: 6, scope: !12319)
!12335 = !DILocation(line: 57, column: 2, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12330, file: !12205, line: 55, column: 57)
!12337 = !DILocation(line: 59, column: 2, scope: !12319)
!12338 = distinct !DISubprogram(name: "k_thread_abort", scope: !3900, file: !3900, line: 188, type: !12339, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !12341)
!12339 = !DISubroutineType(types: !12340)
!12340 = !{null, !12306}
!12341 = !{!12342}
!12342 = !DILocalVariable(name: "thread", arg: 1, scope: !12338, file: !3900, line: 188, type: !12306)
!12343 = !DILocation(line: 0, scope: !12338)
!12344 = !DILocation(line: 197, column: 2, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12338, file: !3900, line: 197, column: 2)
!12346 = !{i64 2151038612}
!12347 = !DILocation(line: 198, column: 2, scope: !12338)
!12348 = !DILocation(line: 199, column: 1, scope: !12338)
!12349 = distinct !DISubprogram(name: "z_current_get", scope: !3900, file: !3900, line: 173, type: !12304, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3467, retainedNodes: !247)
!12350 = !DILocation(line: 180, column: 2, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12349, file: !3900, line: 180, column: 2)
!12352 = !{i64 2151038544}
!12353 = !DILocation(line: 181, column: 9, scope: !12349)
!12354 = !DILocation(line: 181, column: 2, scope: !12349)
!12355 = distinct !DISubprogram(name: "z_early_memset", scope: !2199, file: !2199, line: 108, type: !12356, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12358)
!12356 = !DISubroutineType(types: !12357)
!12357 = !{null, !133, !111, !249}
!12358 = !{!12359, !12360, !12361}
!12359 = !DILocalVariable(name: "dst", arg: 1, scope: !12355, file: !2199, line: 108, type: !133)
!12360 = !DILocalVariable(name: "c", arg: 2, scope: !12355, file: !2199, line: 108, type: !111)
!12361 = !DILocalVariable(name: "n", arg: 3, scope: !12355, file: !2199, line: 108, type: !249)
!12362 = !DILocation(line: 0, scope: !12355)
!12363 = !DILocation(line: 110, column: 9, scope: !12355)
!12364 = !DILocation(line: 111, column: 1, scope: !12355)
!12365 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2199, file: !2199, line: 121, type: !12366, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12368)
!12366 = !DISubroutineType(types: !12367)
!12367 = !{null, !133, !13, !249}
!12368 = !{!12369, !12370, !12371}
!12369 = !DILocalVariable(name: "dst", arg: 1, scope: !12365, file: !2199, line: 121, type: !133)
!12370 = !DILocalVariable(name: "src", arg: 2, scope: !12365, file: !2199, line: 121, type: !13)
!12371 = !DILocalVariable(name: "n", arg: 3, scope: !12365, file: !2199, line: 121, type: !249)
!12372 = !DILocation(line: 0, scope: !12365)
!12373 = !DILocation(line: 123, column: 9, scope: !12365)
!12374 = !DILocation(line: 124, column: 1, scope: !12365)
!12375 = distinct !DISubprogram(name: "z_bss_zero", scope: !2199, file: !2199, line: 132, type: !416, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !247)
!12376 = !DILocation(line: 143, column: 2, scope: !12375)
!12377 = !DILocation(line: 168, column: 1, scope: !12375)
!12378 = distinct !DISubprogram(name: "z_init_cpu", scope: !2199, file: !2199, line: 372, type: !12379, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12381)
!12379 = !DISubroutineType(types: !12380)
!12380 = !{null, !111}
!12381 = !{!12382}
!12382 = !DILocalVariable(name: "id", arg: 1, scope: !12378, file: !2199, line: 372, type: !111)
!12383 = !DILocation(line: 0, scope: !12378)
!12384 = !DILocation(line: 374, column: 2, scope: !12378)
!12385 = !DILocation(line: 375, column: 34, scope: !12378)
!12386 = !DILocation(line: 375, column: 19, scope: !12378)
!12387 = !DILocation(line: 375, column: 31, scope: !12378)
!12388 = !DILocation(line: 376, column: 24, scope: !12378)
!12389 = !DILocation(line: 376, column: 19, scope: !12378)
!12390 = !DILocation(line: 376, column: 22, scope: !12378)
!12391 = !DILocation(line: 378, column: 26, scope: !12378)
!12392 = !DILocation(line: 378, column: 4, scope: !12378)
!12393 = !DILocation(line: 378, column: 50, scope: !12378)
!12394 = !DILocation(line: 377, column: 19, scope: !12378)
!12395 = !DILocation(line: 377, column: 29, scope: !12378)
!12396 = !DILocation(line: 384, column: 1, scope: !12378)
!12397 = distinct !DISubprogram(name: "init_idle_thread", scope: !2199, file: !2199, line: 343, type: !12379, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12398)
!12398 = !{!12399, !12400, !12401, !12404}
!12399 = !DILocalVariable(name: "i", arg: 1, scope: !12397, file: !2199, line: 343, type: !111)
!12400 = !DILocalVariable(name: "thread", scope: !12397, file: !2199, line: 345, type: !2291)
!12401 = !DILocalVariable(name: "stack", scope: !12397, file: !2199, line: 346, type: !12402)
!12402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12403, size: 32)
!12403 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !396, line: 44, baseType: !2400)
!12404 = !DILocalVariable(name: "tname", scope: !12397, file: !2199, line: 354, type: !253)
!12405 = !DILocation(line: 0, scope: !12397)
!12406 = !DILocation(line: 345, column: 29, scope: !12397)
!12407 = !DILocation(line: 346, column: 28, scope: !12397)
!12408 = !DILocation(line: 362, column: 37, scope: !12397)
!12409 = !DILocation(line: 362, column: 36, scope: !12397)
!12410 = !DILocation(line: 361, column: 2, scope: !12397)
!12411 = !DILocation(line: 365, column: 2, scope: !12397)
!12412 = !DILocation(line: 370, column: 1, scope: !12397)
!12413 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !398, file: !398, line: 331, type: !12414, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12416)
!12414 = !DISubroutineType(types: !12415)
!12415 = !{!253, !12402}
!12416 = !{!12417}
!12417 = !DILocalVariable(name: "sym", arg: 1, scope: !12413, file: !398, line: 331, type: !12402)
!12418 = !DILocation(line: 0, scope: !12413)
!12419 = !DILocation(line: 333, column: 9, scope: !12413)
!12420 = !DILocation(line: 333, column: 2, scope: !12413)
!12421 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12422, file: !12422, line: 155, type: !12423, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12425)
!12422 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12423 = !DISubroutineType(types: !12424)
!12424 = !{null, !2291}
!12425 = !{!12426}
!12426 = !DILocalVariable(name: "thread", arg: 1, scope: !12421, file: !12422, line: 155, type: !2291)
!12427 = !DILocation(line: 0, scope: !12421)
!12428 = !DILocation(line: 157, column: 15, scope: !12421)
!12429 = !DILocation(line: 157, column: 28, scope: !12421)
!12430 = !DILocation(line: 158, column: 1, scope: !12421)
!12431 = distinct !DISubprogram(name: "z_cstart", scope: !2199, file: !2199, line: 501, type: !416, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12432)
!12432 = !{!12433}
!12433 = !DILocalVariable(name: "dummy_thread", scope: !12431, file: !2199, line: 518, type: !2292)
!12434 = !DILocation(line: 507, column: 2, scope: !12431)
!12435 = !DILocation(line: 43, column: 14, scope: !12436, inlinedAt: !12440)
!12436 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12437, file: !12437, line: 40, type: !416, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12438)
!12437 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12438 = !{!12439}
!12439 = !DILocalVariable(name: "msp", scope: !12436, file: !12437, line: 42, type: !158)
!12440 = distinct !DILocation(line: 44, column: 2, scope: !12441, inlinedAt: !12443)
!12441 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12442, file: !12442, line: 42, type: !416, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !247)
!12442 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12443 = distinct !DILocation(line: 510, column: 2, scope: !12431)
!12444 = !DILocation(line: 43, column: 3, scope: !12436, inlinedAt: !12440)
!12445 = !DILocation(line: 43, column: 60, scope: !12436, inlinedAt: !12440)
!12446 = !DILocation(line: 0, scope: !12436, inlinedAt: !12440)
!12447 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12448, file: !7544, line: 1153, type: !158)
!12448 = distinct !DISubprogram(name: "__set_MSP", scope: !7544, file: !7544, line: 1153, type: !7635, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12449)
!12449 = !{!12447}
!12450 = !DILocation(line: 0, scope: !12448, inlinedAt: !12451)
!12451 = distinct !DILocation(line: 46, column: 2, scope: !12436, inlinedAt: !12440)
!12452 = !DILocation(line: 1155, column: 3, scope: !12448, inlinedAt: !12451)
!12453 = !{i64 7499252}
!12454 = !DILocation(line: 62, column: 11, scope: !12436, inlinedAt: !12440)
!12455 = !DILocation(line: 102, column: 2, scope: !12456, inlinedAt: !12457)
!12456 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8505, file: !8505, line: 97, type: !416, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !247)
!12457 = distinct !DILocation(line: 45, column: 2, scope: !12441, inlinedAt: !12443)
!12458 = !DILocation(line: 108, column: 2, scope: !12456, inlinedAt: !12457)
!12459 = !DILocation(line: 112, column: 2, scope: !12456, inlinedAt: !12457)
!12460 = !DILocation(line: 113, column: 2, scope: !12456, inlinedAt: !12457)
!12461 = !DILocation(line: 114, column: 2, scope: !12456, inlinedAt: !12457)
!12462 = !DILocation(line: 116, column: 2, scope: !12456, inlinedAt: !12457)
!12463 = !DILocation(line: 123, column: 13, scope: !12456, inlinedAt: !12457)
!12464 = !DILocation(line: 46, column: 2, scope: !12441, inlinedAt: !12443)
!12465 = !DILocation(line: 47, column: 2, scope: !12441, inlinedAt: !12443)
!12466 = !DILocation(line: 174, column: 12, scope: !12467, inlinedAt: !12468)
!12467 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8505, file: !8505, line: 169, type: !416, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !247)
!12468 = distinct !DILocation(line: 48, column: 2, scope: !12441, inlinedAt: !12443)
!12469 = !DILocation(line: 179, column: 12, scope: !12467, inlinedAt: !12468)
!12470 = !DILocation(line: 518, column: 2, scope: !12431)
!12471 = !DILocation(line: 518, column: 18, scope: !12431)
!12472 = !DILocation(line: 520, column: 2, scope: !12431)
!12473 = !DILocation(line: 523, column: 2, scope: !12431)
!12474 = !DILocation(line: 526, column: 2, scope: !12431)
!12475 = !DILocation(line: 527, column: 2, scope: !12431)
!12476 = !DILocation(line: 543, column: 24, scope: !12431)
!12477 = !DILocation(line: 543, column: 2, scope: !12431)
!12478 = !DILocation(line: 0, scope: !2421)
!12479 = !DILocation(line: 246, column: 15, scope: !2439)
!12480 = !DILocation(line: 246, column: 36, scope: !2438)
!12481 = !DILocation(line: 246, column: 2, scope: !2439)
!12482 = !DILocation(line: 247, column: 37, scope: !2437)
!12483 = !DILocation(line: 0, scope: !2437)
!12484 = !DILocation(line: 248, column: 19, scope: !2437)
!12485 = !DILocation(line: 248, column: 12, scope: !2437)
!12486 = !DILocation(line: 250, column: 11, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !2437, file: !2199, line: 250, column: 7)
!12488 = !DILocation(line: 250, column: 7, scope: !2437)
!12489 = !DILocation(line: 254, column: 11, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12491, file: !2199, line: 254, column: 8)
!12491 = distinct !DILexicalBlock(scope: !12487, file: !2199, line: 250, column: 20)
!12492 = !DILocation(line: 254, column: 8, scope: !12491)
!12493 = !DILocation(line: 255, column: 9, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12490, file: !2199, line: 254, column: 17)
!12495 = !DILocation(line: 258, column: 9, scope: !12494)
!12496 = !DILocation(line: 261, column: 28, scope: !12494)
!12497 = !DILocation(line: 261, column: 10, scope: !12494)
!12498 = !DILocation(line: 261, column: 17, scope: !12494)
!12499 = !DILocation(line: 261, column: 26, scope: !12494)
!12500 = !DILocation(line: 262, column: 4, scope: !12494)
!12501 = !DILocation(line: 263, column: 9, scope: !12491)
!12502 = !DILocation(line: 263, column: 16, scope: !12491)
!12503 = !DILocation(line: 263, column: 28, scope: !12491)
!12504 = !DILocation(line: 264, column: 3, scope: !12491)
!12505 = !DILocation(line: 246, column: 60, scope: !2438)
!12506 = distinct !{!12506, !12481, !12507}
!12507 = !DILocation(line: 265, column: 2, scope: !2439)
!12508 = !DILocation(line: 266, column: 1, scope: !2421)
!12509 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2045, file: !2045, line: 1814, type: !7578, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12510)
!12510 = !{!12511, !12512}
!12511 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12509, file: !2045, line: 1814, type: !2938)
!12512 = !DILocalVariable(name: "priority", arg: 2, scope: !12509, file: !2045, line: 1814, type: !158)
!12513 = !DILocation(line: 0, scope: !12509)
!12514 = !DILocation(line: 1822, column: 48, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12516, file: !2045, line: 1821, column: 3)
!12516 = distinct !DILexicalBlock(scope: !12509, file: !2045, line: 1816, column: 7)
!12517 = !DILocation(line: 1822, column: 32, scope: !12515)
!12518 = !DILocation(line: 1822, column: 40, scope: !12515)
!12519 = !DILocation(line: 1822, column: 5, scope: !12515)
!12520 = !DILocation(line: 1822, column: 46, scope: !12515)
!12521 = !DILocation(line: 1824, column: 1, scope: !12509)
!12522 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12442, file: !12442, line: 32, type: !416, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !247)
!12523 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12524, file: !12524, line: 215, type: !12423, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12525)
!12524 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12525 = !{!12526}
!12526 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12523, file: !12524, line: 215, type: !2291)
!12527 = !DILocation(line: 0, scope: !12523)
!12528 = !DILocation(line: 217, column: 21, scope: !12523)
!12529 = !DILocation(line: 217, column: 34, scope: !12523)
!12530 = !DILocation(line: 221, column: 21, scope: !12523)
!12531 = !DILocation(line: 221, column: 34, scope: !12523)
!12532 = !DILocation(line: 232, column: 16, scope: !12523)
!12533 = !DILocation(line: 232, column: 30, scope: !12523)
!12534 = !DILocation(line: 239, column: 24, scope: !12523)
!12535 = !DILocation(line: 240, column: 1, scope: !12523)
!12536 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2199, file: !2199, line: 399, type: !12537, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12539)
!12537 = !DISubroutineType(types: !12538)
!12538 = !{!253}
!12539 = !{!12540}
!12540 = !DILocalVariable(name: "stack_ptr", scope: !12536, file: !2199, line: 401, type: !253)
!12541 = !DILocation(line: 404, column: 2, scope: !12536)
!12542 = !DILocation(line: 416, column: 24, scope: !12536)
!12543 = !DILocation(line: 418, column: 14, scope: !12536)
!12544 = !DILocation(line: 0, scope: !12536)
!12545 = !DILocation(line: 423, column: 2, scope: !12536)
!12546 = !DILocation(line: 424, column: 2, scope: !12536)
!12547 = !DILocation(line: 426, column: 2, scope: !12536)
!12548 = !DILocation(line: 428, column: 2, scope: !12536)
!12549 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2199, file: !2199, line: 432, type: !12550, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12552)
!12550 = !DISubroutineType(types: !12551)
!12551 = !{null, !253}
!12552 = !{!12553}
!12553 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12549, file: !2199, line: 432, type: !253)
!12554 = !DILocation(line: 0, scope: !12549)
!12555 = !DILocation(line: 435, column: 2, scope: !12549)
!12556 = !DILocation(line: 445, column: 2, scope: !12549)
!12557 = distinct !DISubprogram(name: "bg_thread_main", scope: !2199, file: !2199, line: 277, type: !405, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !12558)
!12558 = !{!12559, !12560, !12561}
!12559 = !DILocalVariable(name: "unused1", arg: 1, scope: !12557, file: !2199, line: 277, type: !133)
!12560 = !DILocalVariable(name: "unused2", arg: 2, scope: !12557, file: !2199, line: 277, type: !133)
!12561 = !DILocalVariable(name: "unused3", arg: 3, scope: !12557, file: !2199, line: 277, type: !133)
!12562 = !DILocation(line: 0, scope: !12557)
!12563 = !DILocation(line: 291, column: 20, scope: !12557)
!12564 = !DILocation(line: 293, column: 2, scope: !12557)
!12565 = !DILocation(line: 297, column: 2, scope: !12557)
!12566 = !DILocation(line: 305, column: 2, scope: !12557)
!12567 = !DILocation(line: 307, column: 2, scope: !12557)
!12568 = !DILocation(line: 330, column: 8, scope: !12557)
!12569 = !DILocation(line: 333, column: 34, scope: !12557)
!12570 = !DILocation(line: 339, column: 1, scope: !12557)
!12571 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2450, file: !2450, line: 45, type: !12572, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12580)
!12572 = !DISubroutineType(types: !12573)
!12573 = !{null, !12574, !133}
!12574 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !221, line: 103, baseType: !12575)
!12575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12576, size: 32)
!12576 = !DISubroutineType(types: !12577)
!12577 = !{null, !12578, !133}
!12578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12579, size: 32)
!12579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2455)
!12580 = !{!12581, !12582}
!12581 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12571, file: !2450, line: 45, type: !12574)
!12582 = !DILocalVariable(name: "user_data", arg: 2, scope: !12571, file: !2450, line: 45, type: !133)
!12583 = !DILocation(line: 0, scope: !12571)
!12584 = !DILocation(line: 71, column: 1, scope: !12571)
!12585 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2450, file: !2450, line: 73, type: !12572, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12586)
!12586 = !{!12587, !12588}
!12587 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12585, file: !2450, line: 73, type: !12574)
!12588 = !DILocalVariable(name: "user_data", arg: 2, scope: !12585, file: !2450, line: 73, type: !133)
!12589 = !DILocation(line: 0, scope: !12585)
!12590 = !DILocation(line: 95, column: 1, scope: !12585)
!12591 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2450, file: !2450, line: 97, type: !8506, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !247)
!12592 = !DILocation(line: 1031, column: 3, scope: !12593, inlinedAt: !12596)
!12593 = distinct !DISubprogram(name: "__get_IPSR", scope: !7544, file: !7544, line: 1027, type: !7625, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12594)
!12594 = !{!12595}
!12595 = !DILocalVariable(name: "result", scope: !12593, file: !7544, line: 1029, type: !158)
!12596 = distinct !DILocation(line: 48, column: 10, scope: !12597, inlinedAt: !12598)
!12597 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8505, file: !8505, line: 46, type: !8506, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !247)
!12598 = distinct !DILocation(line: 99, column: 9, scope: !12591)
!12599 = !{i64 7014072}
!12600 = !DILocation(line: 0, scope: !12593, inlinedAt: !12596)
!12601 = !DILocation(line: 48, column: 9, scope: !12597, inlinedAt: !12598)
!12602 = !DILocation(line: 99, column: 2, scope: !12591)
!12603 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2450, file: !2450, line: 106, type: !416, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !247)
!12604 = !DILocation(line: 108, column: 2, scope: !12603)
!12605 = !DILocation(line: 108, column: 17, scope: !12603)
!12606 = !DILocation(line: 108, column: 30, scope: !12603)
!12607 = !DILocation(line: 109, column: 1, scope: !12603)
!12608 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2450, file: !2450, line: 116, type: !416, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !247)
!12609 = !DILocation(line: 118, column: 2, scope: !12608)
!12610 = !DILocation(line: 118, column: 17, scope: !12608)
!12611 = !DILocation(line: 118, column: 30, scope: !12608)
!12612 = !DILocation(line: 119, column: 1, scope: !12608)
!12613 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2450, file: !2450, line: 126, type: !8506, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !247)
!12614 = !DILocation(line: 128, column: 10, scope: !12613)
!12615 = !DILocation(line: 128, column: 25, scope: !12613)
!12616 = !DILocation(line: 128, column: 38, scope: !12613)
!12617 = !DILocation(line: 128, column: 53, scope: !12613)
!12618 = !DILocation(line: 128, column: 2, scope: !12613)
!12619 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2450, file: !2450, line: 187, type: !12620, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12622)
!12620 = !DISubroutineType(types: !12621)
!12621 = !{!111, !2454, !118}
!12622 = !{!12623, !12624}
!12623 = !DILocalVariable(name: "thread", arg: 1, scope: !12619, file: !2450, line: 187, type: !2454)
!12624 = !DILocalVariable(name: "value", arg: 2, scope: !12619, file: !2450, line: 187, type: !118)
!12625 = !DILocation(line: 0, scope: !12619)
!12626 = !DILocation(line: 190, column: 13, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12619, file: !2450, line: 190, column: 6)
!12628 = !DILocation(line: 190, column: 6, scope: !12619)
!12629 = !DILocation(line: 194, column: 10, scope: !12619)
!12630 = !DILocation(line: 194, column: 2, scope: !12619)
!12631 = !DILocation(line: 195, column: 2, scope: !12619)
!12632 = !DILocation(line: 195, column: 47, scope: !12619)
!12633 = !DILocation(line: 199, column: 2, scope: !12619)
!12634 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2450, file: !2450, line: 238, type: !12635, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12637)
!12635 = !DISubroutineType(types: !12636)
!12636 = !{!118, !2454}
!12637 = !{!12638}
!12638 = !DILocalVariable(name: "thread", arg: 1, scope: !12634, file: !2450, line: 238, type: !2454)
!12639 = !DILocation(line: 0, scope: !12634)
!12640 = !DILocation(line: 241, column: 23, scope: !12634)
!12641 = !DILocation(line: 241, column: 2, scope: !12634)
!12642 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2450, file: !2450, line: 248, type: !12643, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12645)
!12643 = !DISubroutineType(types: !12644)
!12644 = !{!111, !2453, !253, !249}
!12645 = !{!12646, !12647, !12648}
!12646 = !DILocalVariable(name: "thread", arg: 1, scope: !12642, file: !2450, line: 248, type: !2453)
!12647 = !DILocalVariable(name: "buf", arg: 2, scope: !12642, file: !2450, line: 248, type: !253)
!12648 = !DILocalVariable(name: "size", arg: 3, scope: !12642, file: !2450, line: 248, type: !249)
!12649 = !DILocation(line: 0, scope: !12642)
!12650 = !DILocation(line: 251, column: 15, scope: !12642)
!12651 = !DILocation(line: 251, column: 2, scope: !12642)
!12652 = !DILocation(line: 252, column: 2, scope: !12642)
!12653 = !DILocation(line: 0, scope: !2449)
!12654 = !DILocation(line: 281, column: 11, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !2449, file: !2450, line: 281, column: 6)
!12656 = !DILocation(line: 281, column: 20, scope: !12655)
!12657 = !DILocation(line: 275, column: 45, scope: !2449)
!12658 = !DILocation(line: 285, column: 10, scope: !2449)
!12659 = !DILocation(line: 0, scope: !2566)
!12660 = !DILocation(line: 293, column: 39, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !2566, file: !2450, line: 293, column: 2)
!12662 = !DILocation(line: 293, column: 2, scope: !2566)
!12663 = !DILocation(line: 273, column: 14, scope: !2449)
!12664 = !DILocation(line: 309, column: 2, scope: !2449)
!12665 = !DILocation(line: 309, column: 11, scope: !2449)
!12666 = !DILocation(line: 311, column: 2, scope: !2449)
!12667 = !DILocation(line: 293, column: 26, scope: !12661)
!12668 = !DILocation(line: 294, column: 9, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12661, file: !2450, line: 293, column: 54)
!12670 = !DILocation(line: 295, column: 21, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12669, file: !2450, line: 295, column: 7)
!12672 = !DILocation(line: 295, column: 28, scope: !12671)
!12673 = !DILocation(line: 295, column: 7, scope: !12669)
!12674 = !DILocation(line: 299, column: 25, scope: !12669)
!12675 = !DILocation(line: 299, column: 41, scope: !12669)
!12676 = !DILocation(line: 300, column: 7, scope: !12669)
!12677 = !DILocation(line: 300, column: 26, scope: !12669)
!12678 = !DILocation(line: 299, column: 10, scope: !12669)
!12679 = !DILocation(line: 299, column: 7, scope: !12669)
!12680 = !DILocation(line: 302, column: 16, scope: !12669)
!12681 = !DILocation(line: 304, column: 20, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12669, file: !2450, line: 304, column: 7)
!12683 = !DILocation(line: 304, column: 7, scope: !12669)
!12684 = !DILocation(line: 305, column: 26, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12682, file: !2450, line: 304, column: 26)
!12686 = !DILocation(line: 305, column: 42, scope: !12685)
!12687 = !DILocation(line: 305, column: 11, scope: !12685)
!12688 = !DILocation(line: 305, column: 8, scope: !12685)
!12689 = !DILocation(line: 306, column: 3, scope: !12685)
!12690 = !DILocation(line: 293, column: 50, scope: !12661)
!12691 = !DILocation(line: 312, column: 1, scope: !2449)
!12692 = distinct !DISubprogram(name: "copy_bytes", scope: !2450, file: !2450, line: 261, type: !12693, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12695)
!12693 = !DISubroutineType(types: !12694)
!12694 = !{!249, !253, !249, !118, !249}
!12695 = !{!12696, !12697, !12698, !12699, !12700}
!12696 = !DILocalVariable(name: "dest", arg: 1, scope: !12692, file: !2450, line: 261, type: !253)
!12697 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12692, file: !2450, line: 261, type: !249)
!12698 = !DILocalVariable(name: "src", arg: 3, scope: !12692, file: !2450, line: 261, type: !118)
!12699 = !DILocalVariable(name: "src_size", arg: 4, scope: !12692, file: !2450, line: 261, type: !249)
!12700 = !DILocalVariable(name: "bytes_to_copy", scope: !12692, file: !2450, line: 263, type: !249)
!12701 = !DILocation(line: 0, scope: !12692)
!12702 = !DILocation(line: 265, column: 18, scope: !12692)
!12703 = !DILocation(line: 266, column: 2, scope: !12692)
!12704 = !DILocation(line: 268, column: 2, scope: !12692)
!12705 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2450, file: !2450, line: 383, type: !12706, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12708)
!12706 = !DISubroutineType(types: !12707)
!12707 = !{null, !2454}
!12708 = !{!12709}
!12709 = !DILocalVariable(name: "thread", arg: 1, scope: !12705, file: !2450, line: 383, type: !2454)
!12710 = !DILocation(line: 0, scope: !12705)
!12711 = !DILocation(line: 387, column: 2, scope: !12705)
!12712 = !DILocation(line: 388, column: 1, scope: !12705)
!12713 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2450, file: !2450, line: 528, type: !12714, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12721)
!12714 = !DISubroutineType(types: !12715)
!12715 = !{!253, !2454, !12716, !249, !403, !133, !133, !133, !111, !158, !118}
!12716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12717, size: 32)
!12717 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !396, line: 44, baseType: !12718)
!12718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !398, line: 47, size: 8, elements: !12719)
!12719 = !{!12720}
!12720 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12718, file: !398, line: 48, baseType: !120, size: 8)
!12721 = !{!12722, !12723, !12724, !12725, !12726, !12727, !12728, !12729, !12730, !12731, !12732}
!12722 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12713, file: !2450, line: 528, type: !2454)
!12723 = !DILocalVariable(name: "stack", arg: 2, scope: !12713, file: !2450, line: 529, type: !12716)
!12724 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12713, file: !2450, line: 529, type: !249)
!12725 = !DILocalVariable(name: "entry", arg: 4, scope: !12713, file: !2450, line: 530, type: !403)
!12726 = !DILocalVariable(name: "p1", arg: 5, scope: !12713, file: !2450, line: 531, type: !133)
!12727 = !DILocalVariable(name: "p2", arg: 6, scope: !12713, file: !2450, line: 531, type: !133)
!12728 = !DILocalVariable(name: "p3", arg: 7, scope: !12713, file: !2450, line: 531, type: !133)
!12729 = !DILocalVariable(name: "prio", arg: 8, scope: !12713, file: !2450, line: 532, type: !111)
!12730 = !DILocalVariable(name: "options", arg: 9, scope: !12713, file: !2450, line: 532, type: !158)
!12731 = !DILocalVariable(name: "name", arg: 10, scope: !12713, file: !2450, line: 532, type: !118)
!12732 = !DILocalVariable(name: "stack_ptr", scope: !12713, file: !2450, line: 534, type: !253)
!12733 = !DILocation(line: 0, scope: !12713)
!12734 = !DILocation(line: 550, column: 28, scope: !12713)
!12735 = !DILocation(line: 550, column: 2, scope: !12713)
!12736 = !DILocation(line: 553, column: 34, scope: !12713)
!12737 = !DILocation(line: 553, column: 2, scope: !12713)
!12738 = !DILocation(line: 554, column: 14, scope: !12713)
!12739 = !DILocation(line: 564, column: 2, scope: !12713)
!12740 = !DILocation(line: 567, column: 14, scope: !12713)
!12741 = !DILocation(line: 567, column: 24, scope: !12713)
!12742 = !DILocation(line: 594, column: 11, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12713, file: !2450, line: 594, column: 6)
!12744 = !DILocation(line: 0, scope: !12743)
!12745 = !DILocation(line: 594, column: 6, scope: !12713)
!12746 = !DILocation(line: 595, column: 3, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12743, file: !2450, line: 594, column: 20)
!12748 = !DILocation(line: 598, column: 3, scope: !12747)
!12749 = !DILocation(line: 598, column: 52, scope: !12747)
!12750 = !DILocation(line: 599, column: 2, scope: !12747)
!12751 = !DILocation(line: 600, column: 23, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12743, file: !2450, line: 599, column: 9)
!12753 = !DILocation(line: 612, column: 7, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12713, file: !2450, line: 612, column: 6)
!12755 = !DILocation(line: 612, column: 6, scope: !12713)
!12756 = !DILocation(line: 627, column: 40, scope: !12713)
!12757 = !DILocation(line: 637, column: 2, scope: !12713)
!12758 = !DILocation(line: 613, column: 15, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12754, file: !2450, line: 612, column: 17)
!12760 = !DILocation(line: 613, column: 29, scope: !12759)
!12761 = !DILocation(line: 638, column: 1, scope: !12713)
!12762 = distinct !DISubprogram(name: "z_waitq_init", scope: !12763, file: !12763, line: 47, type: !12764, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12766)
!12763 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12764 = !DISubroutineType(types: !12765)
!12765 = !{null, !2485}
!12766 = !{!12767}
!12767 = !DILocalVariable(name: "w", arg: 1, scope: !12762, file: !12763, line: 47, type: !2485)
!12768 = !DILocation(line: 0, scope: !12762)
!12769 = !DILocation(line: 49, column: 21, scope: !12762)
!12770 = !DILocation(line: 49, column: 2, scope: !12762)
!12771 = !DILocation(line: 50, column: 1, scope: !12762)
!12772 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2450, file: !2450, line: 791, type: !12773, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12776)
!12773 = !DISubroutineType(types: !12774)
!12774 = !{null, !12775, !111, !158, !32}
!12775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!12776 = !{!12777, !12778, !12779, !12780}
!12777 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12772, file: !2450, line: 791, type: !12775)
!12778 = !DILocalVariable(name: "priority", arg: 2, scope: !12772, file: !2450, line: 791, type: !111)
!12779 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12772, file: !2450, line: 792, type: !158)
!12780 = !DILocalVariable(name: "options", arg: 4, scope: !12772, file: !2450, line: 792, type: !32)
!12781 = !DILocation(line: 0, scope: !12772)
!12782 = !DILocation(line: 795, column: 15, scope: !12772)
!12783 = !DILocation(line: 795, column: 25, scope: !12772)
!12784 = !DILocation(line: 796, column: 30, scope: !12772)
!12785 = !DILocation(line: 796, column: 15, scope: !12772)
!12786 = !DILocation(line: 796, column: 28, scope: !12772)
!12787 = !DILocation(line: 797, column: 30, scope: !12772)
!12788 = !DILocation(line: 797, column: 15, scope: !12772)
!12789 = !DILocation(line: 797, column: 28, scope: !12772)
!12790 = !DILocation(line: 799, column: 22, scope: !12772)
!12791 = !DILocation(line: 799, column: 15, scope: !12772)
!12792 = !DILocation(line: 799, column: 20, scope: !12772)
!12793 = !DILocation(line: 801, column: 15, scope: !12772)
!12794 = !DILocation(line: 801, column: 28, scope: !12772)
!12795 = !DILocation(line: 814, column: 2, scope: !12772)
!12796 = !DILocation(line: 815, column: 1, scope: !12772)
!12797 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2450, file: !2450, line: 449, type: !12798, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12800)
!12798 = !DISubroutineType(types: !12799)
!12799 = !{!253, !2454, !12716, !249}
!12800 = !{!12801, !12802, !12803, !12804, !12805, !12806, !12807, !12808}
!12801 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12797, file: !2450, line: 449, type: !2454)
!12802 = !DILocalVariable(name: "stack", arg: 2, scope: !12797, file: !2450, line: 450, type: !12716)
!12803 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12797, file: !2450, line: 450, type: !249)
!12804 = !DILocalVariable(name: "stack_obj_size", scope: !12797, file: !2450, line: 452, type: !249)
!12805 = !DILocalVariable(name: "stack_buf_size", scope: !12797, file: !2450, line: 452, type: !249)
!12806 = !DILocalVariable(name: "stack_ptr", scope: !12797, file: !2450, line: 453, type: !253)
!12807 = !DILocalVariable(name: "stack_buf_start", scope: !12797, file: !2450, line: 453, type: !253)
!12808 = !DILocalVariable(name: "delta", scope: !12797, file: !2450, line: 454, type: !249)
!12809 = !DILocation(line: 0, scope: !12797)
!12810 = !DILocation(line: 465, column: 20, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12797, file: !2450, line: 463, column: 2)
!12812 = !DILocation(line: 473, column: 28, scope: !12797)
!12813 = !DILocation(line: 520, column: 2, scope: !12797)
!12814 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12815, file: !12815, line: 40, type: !12816, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12818)
!12815 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12816 = !DISubroutineType(types: !12817)
!12817 = !{null, !12775}
!12818 = !{!12819}
!12819 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12814, file: !12815, line: 40, type: !12775)
!12820 = !DILocation(line: 0, scope: !12814)
!12821 = !DILocation(line: 42, column: 31, scope: !12814)
!12822 = !DILocation(line: 42, column: 2, scope: !12814)
!12823 = !DILocation(line: 43, column: 1, scope: !12814)
!12824 = distinct !DISubprogram(name: "z_init_timeout", scope: !12815, file: !12815, line: 25, type: !2511, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12825)
!12825 = !{!12826}
!12826 = !DILocalVariable(name: "to", arg: 1, scope: !12824, file: !12815, line: 25, type: !2513)
!12827 = !DILocation(line: 0, scope: !12824)
!12828 = !DILocation(line: 27, column: 22, scope: !12824)
!12829 = !DILocation(line: 27, column: 2, scope: !12824)
!12830 = !DILocation(line: 28, column: 1, scope: !12824)
!12831 = distinct !DISubprogram(name: "sys_dnode_init", scope: !230, file: !230, line: 211, type: !12832, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12834)
!12832 = !DISubroutineType(types: !12833)
!12833 = !{null, !2552}
!12834 = !{!12835}
!12835 = !DILocalVariable(name: "node", arg: 1, scope: !12831, file: !230, line: 211, type: !2552)
!12836 = !DILocation(line: 0, scope: !12831)
!12837 = !DILocation(line: 213, column: 8, scope: !12831)
!12838 = !DILocation(line: 213, column: 13, scope: !12831)
!12839 = !DILocation(line: 214, column: 8, scope: !12831)
!12840 = !DILocation(line: 214, column: 13, scope: !12831)
!12841 = !DILocation(line: 215, column: 1, scope: !12831)
!12842 = distinct !DISubprogram(name: "sys_dlist_init", scope: !230, file: !230, line: 197, type: !12843, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12846)
!12843 = !DISubroutineType(types: !12844)
!12844 = !{null, !12845}
!12845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!12846 = !{!12847}
!12847 = !DILocalVariable(name: "list", arg: 1, scope: !12842, file: !230, line: 197, type: !12845)
!12848 = !DILocation(line: 0, scope: !12842)
!12849 = !DILocation(line: 199, column: 8, scope: !12842)
!12850 = !DILocation(line: 199, column: 13, scope: !12842)
!12851 = !DILocation(line: 200, column: 8, scope: !12842)
!12852 = !DILocation(line: 200, column: 13, scope: !12842)
!12853 = !DILocation(line: 201, column: 1, scope: !12842)
!12854 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2450, file: !2450, line: 641, type: !12855, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12861)
!12855 = !DISubroutineType(types: !12856)
!12856 = !{!2453, !2454, !12716, !249, !403, !133, !133, !133, !111, !158, !12857}
!12857 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !203, line: 67, baseType: !12858)
!12858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !203, line: 65, size: 64, elements: !12859)
!12859 = !{!12860}
!12860 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12858, file: !203, line: 66, baseType: !202, size: 64)
!12861 = !{!12862, !12863, !12864, !12865, !12866, !12867, !12868, !12869, !12870, !12871}
!12862 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12854, file: !2450, line: 641, type: !2454)
!12863 = !DILocalVariable(name: "stack", arg: 2, scope: !12854, file: !2450, line: 642, type: !12716)
!12864 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12854, file: !2450, line: 643, type: !249)
!12865 = !DILocalVariable(name: "entry", arg: 4, scope: !12854, file: !2450, line: 643, type: !403)
!12866 = !DILocalVariable(name: "p1", arg: 5, scope: !12854, file: !2450, line: 644, type: !133)
!12867 = !DILocalVariable(name: "p2", arg: 6, scope: !12854, file: !2450, line: 644, type: !133)
!12868 = !DILocalVariable(name: "p3", arg: 7, scope: !12854, file: !2450, line: 644, type: !133)
!12869 = !DILocalVariable(name: "prio", arg: 8, scope: !12854, file: !2450, line: 645, type: !111)
!12870 = !DILocalVariable(name: "options", arg: 9, scope: !12854, file: !2450, line: 645, type: !158)
!12871 = !DILocalVariable(name: "delay", arg: 10, scope: !12854, file: !2450, line: 645, type: !12857)
!12872 = !DILocation(line: 0, scope: !12854)
!12873 = !DILocation(line: 649, column: 2, scope: !12854)
!12874 = !DILocation(line: 652, column: 7, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12854, file: !2450, line: 652, column: 6)
!12876 = !DILocation(line: 652, column: 6, scope: !12854)
!12877 = !DILocation(line: 653, column: 3, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12875, file: !2450, line: 652, column: 39)
!12879 = !DILocation(line: 654, column: 2, scope: !12878)
!12880 = !DILocation(line: 656, column: 2, scope: !12854)
!12881 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2450, file: !2450, line: 401, type: !12882, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12884)
!12882 = !DISubroutineType(types: !12883)
!12883 = !{null, !2454, !12857}
!12884 = !{!12885, !12886}
!12885 = !DILocalVariable(name: "thread", arg: 1, scope: !12881, file: !2450, line: 401, type: !2454)
!12886 = !DILocalVariable(name: "delay", arg: 2, scope: !12881, file: !2450, line: 401, type: !12857)
!12887 = !DILocation(line: 0, scope: !12881)
!12888 = !DILocation(line: 404, column: 6, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12881, file: !2450, line: 404, column: 6)
!12890 = !DILocation(line: 404, column: 6, scope: !12881)
!12891 = !DILocation(line: 405, column: 3, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12889, file: !2450, line: 404, column: 38)
!12893 = !DILocation(line: 406, column: 2, scope: !12892)
!12894 = !DILocation(line: 407, column: 3, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12889, file: !2450, line: 406, column: 9)
!12896 = !DILocation(line: 413, column: 1, scope: !12881)
!12897 = distinct !DISubprogram(name: "k_thread_start", scope: !3900, file: !3900, line: 205, type: !12898, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12900)
!12898 = !DISubroutineType(types: !12899)
!12899 = !{null, !2453}
!12900 = !{!12901}
!12901 = !DILocalVariable(name: "thread", arg: 1, scope: !12897, file: !3900, line: 205, type: !2453)
!12902 = !DILocation(line: 0, scope: !12897)
!12903 = !DILocation(line: 214, column: 2, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12897, file: !3900, line: 214, column: 2)
!12905 = !{i64 2151063836}
!12906 = !DILocation(line: 215, column: 2, scope: !12897)
!12907 = !DILocation(line: 216, column: 1, scope: !12897)
!12908 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12815, file: !12815, line: 47, type: !12882, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12909)
!12909 = !{!12910, !12911}
!12910 = !DILocalVariable(name: "thread", arg: 1, scope: !12908, file: !12815, line: 47, type: !2454)
!12911 = !DILocalVariable(name: "ticks", arg: 2, scope: !12908, file: !12815, line: 47, type: !12857)
!12912 = !DILocation(line: 0, scope: !12908)
!12913 = !DILocation(line: 49, column: 30, scope: !12908)
!12914 = !DILocation(line: 49, column: 2, scope: !12908)
!12915 = !DILocation(line: 50, column: 1, scope: !12908)
!12916 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2450, file: !2450, line: 748, type: !416, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12917)
!12917 = !{!12918, !12935}
!12918 = !DILocalVariable(name: "thread_data", scope: !12919, file: !2450, line: 750, type: !12920)
!12919 = distinct !DILexicalBlock(scope: !12916, file: !2450, line: 750, column: 2)
!12920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12921, size: 32)
!12921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !221, line: 620, size: 384, elements: !12922)
!12922 = !{!12923, !12924, !12925, !12926, !12927, !12928, !12929, !12930, !12931, !12932, !12933, !12934}
!12923 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12921, file: !221, line: 621, baseType: !2454, size: 32)
!12924 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12921, file: !221, line: 622, baseType: !12716, size: 32, offset: 32)
!12925 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12921, file: !221, line: 623, baseType: !32, size: 32, offset: 64)
!12926 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12921, file: !221, line: 624, baseType: !403, size: 32, offset: 96)
!12927 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12921, file: !221, line: 625, baseType: !133, size: 32, offset: 128)
!12928 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12921, file: !221, line: 626, baseType: !133, size: 32, offset: 160)
!12929 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12921, file: !221, line: 627, baseType: !133, size: 32, offset: 192)
!12930 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12921, file: !221, line: 628, baseType: !111, size: 32, offset: 224)
!12931 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12921, file: !221, line: 629, baseType: !158, size: 32, offset: 256)
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12921, file: !221, line: 630, baseType: !413, size: 32, offset: 288)
!12933 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12921, file: !221, line: 631, baseType: !415, size: 32, offset: 320)
!12934 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12921, file: !221, line: 632, baseType: !118, size: 32, offset: 352)
!12935 = !DILocalVariable(name: "thread_data", scope: !12936, file: !2450, line: 781, type: !12920)
!12936 = distinct !DILexicalBlock(scope: !12916, file: !2450, line: 781, column: 2)
!12937 = !DILocation(line: 0, scope: !12919)
!12938 = !DILocation(line: 750, column: 2, scope: !12919)
!12939 = !DILocation(line: 780, column: 2, scope: !12916)
!12940 = !DILocation(line: 0, scope: !12936)
!12941 = !DILocation(line: 781, column: 2, scope: !12936)
!12942 = !DILocation(line: 752, column: 17, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12944, file: !2450, line: 750, column: 38)
!12944 = distinct !DILexicalBlock(scope: !12919, file: !2450, line: 750, column: 2)
!12945 = !DILocation(line: 753, column: 17, scope: !12943)
!12946 = !DILocation(line: 754, column: 17, scope: !12943)
!12947 = !DILocation(line: 755, column: 17, scope: !12943)
!12948 = !DILocation(line: 756, column: 17, scope: !12943)
!12949 = !DILocation(line: 757, column: 17, scope: !12943)
!12950 = !DILocation(line: 758, column: 17, scope: !12943)
!12951 = !DILocation(line: 759, column: 17, scope: !12943)
!12952 = !DILocation(line: 760, column: 17, scope: !12943)
!12953 = !DILocation(line: 761, column: 17, scope: !12943)
!12954 = !DILocation(line: 751, column: 3, scope: !12943)
!12955 = !DILocation(line: 763, column: 16, scope: !12943)
!12956 = !DILocation(line: 763, column: 29, scope: !12943)
!12957 = !DILocation(line: 763, column: 39, scope: !12943)
!12958 = !DILocation(line: 750, column: 2, scope: !12944)
!12959 = !DILocation(line: 750, column: 2, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12944, file: !2450, line: 750, column: 2)
!12961 = distinct !{!12961, !12938, !12962}
!12962 = !DILocation(line: 764, column: 2, scope: !12919)
!12963 = !DILocation(line: 787, column: 2, scope: !12916)
!12964 = !DILocation(line: 788, column: 1, scope: !12916)
!12965 = !DILocation(line: 782, column: 20, scope: !12966)
!12966 = distinct !DILexicalBlock(scope: !12967, file: !2450, line: 782, column: 7)
!12967 = distinct !DILexicalBlock(scope: !12968, file: !2450, line: 781, column: 38)
!12968 = distinct !DILexicalBlock(scope: !12936, file: !2450, line: 781, column: 2)
!12969 = !DILocation(line: 782, column: 31, scope: !12966)
!12970 = !DILocation(line: 782, column: 7, scope: !12967)
!12971 = !DILocation(line: 783, column: 37, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12966, file: !2450, line: 782, column: 51)
!12973 = !DILocation(line: 784, column: 10, scope: !12972)
!12974 = !DILocation(line: 783, column: 4, scope: !12972)
!12975 = !DILocation(line: 785, column: 3, scope: !12972)
!12976 = !DILocation(line: 781, column: 2, scope: !12968)
!12977 = !DILocation(line: 781, column: 2, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12968, file: !2450, line: 781, column: 2)
!12979 = distinct !{!12979, !12941, !12980}
!12980 = !DILocation(line: 786, column: 2, scope: !12936)
!12981 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3858, file: !3858, line: 403, type: !3859, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12982)
!12982 = !{!12983}
!12983 = !DILocalVariable(name: "t", arg: 1, scope: !12981, file: !3858, line: 403, type: !207)
!12984 = !DILocation(line: 0, scope: !12981)
!12985 = !DILocalVariable(name: "t", arg: 1, scope: !12986, file: !3858, line: 102, type: !207)
!12986 = distinct !DISubprogram(name: "z_tmcvt", scope: !3858, file: !3858, line: 102, type: !3866, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !12987)
!12987 = !{!12985, !12988, !12989, !12990, !12991, !12992, !12993, !12994, !12995, !12996, !12997}
!12988 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12986, file: !3858, line: 102, type: !158)
!12989 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12986, file: !3858, line: 103, type: !158)
!12990 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12986, file: !3858, line: 103, type: !131)
!12991 = !DILocalVariable(name: "result32", arg: 5, scope: !12986, file: !3858, line: 104, type: !131)
!12992 = !DILocalVariable(name: "round_up", arg: 6, scope: !12986, file: !3858, line: 104, type: !131)
!12993 = !DILocalVariable(name: "round_off", arg: 7, scope: !12986, file: !3858, line: 105, type: !131)
!12994 = !DILocalVariable(name: "mul_ratio", scope: !12986, file: !3858, line: 107, type: !131)
!12995 = !DILocalVariable(name: "div_ratio", scope: !12986, file: !3858, line: 109, type: !131)
!12996 = !DILocalVariable(name: "off", scope: !12986, file: !3858, line: 116, type: !207)
!12997 = !DILocalVariable(name: "rdivisor", scope: !12998, file: !3858, line: 119, type: !158)
!12998 = distinct !DILexicalBlock(scope: !12999, file: !3858, line: 118, column: 18)
!12999 = distinct !DILexicalBlock(scope: !12986, file: !3858, line: 118, column: 6)
!13000 = !DILocation(line: 0, scope: !12986, inlinedAt: !13001)
!13001 = distinct !DILocation(line: 406, column: 9, scope: !12981)
!13002 = !DILocation(line: 145, column: 13, scope: !13003, inlinedAt: !13001)
!13003 = distinct !DILexicalBlock(scope: !13004, file: !3858, line: 144, column: 10)
!13004 = distinct !DILexicalBlock(scope: !13005, file: !3858, line: 142, column: 7)
!13005 = distinct !DILexicalBlock(scope: !13006, file: !3858, line: 141, column: 24)
!13006 = distinct !DILexicalBlock(scope: !13007, file: !3858, line: 141, column: 13)
!13007 = distinct !DILexicalBlock(scope: !12986, file: !3858, line: 134, column: 6)
!13008 = !DILocation(line: 406, column: 2, scope: !12981)
!13009 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2450, file: !2450, line: 817, type: !4969, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !13010)
!13010 = !{!13011, !13012, !13013, !13014}
!13011 = !DILocalVariable(name: "entry", arg: 1, scope: !13009, file: !2450, line: 817, type: !403)
!13012 = !DILocalVariable(name: "p1", arg: 2, scope: !13009, file: !2450, line: 818, type: !133)
!13013 = !DILocalVariable(name: "p2", arg: 3, scope: !13009, file: !2450, line: 818, type: !133)
!13014 = !DILocalVariable(name: "p3", arg: 4, scope: !13009, file: !2450, line: 818, type: !133)
!13015 = !DILocation(line: 0, scope: !13009)
!13016 = !DILocation(line: 822, column: 2, scope: !13009)
!13017 = !DILocation(line: 822, column: 17, scope: !13009)
!13018 = !DILocation(line: 822, column: 30, scope: !13009)
!13019 = !DILocation(line: 823, column: 2, scope: !13009)
!13020 = !DILocation(line: 845, column: 2, scope: !13009)
!13021 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2450, file: !2450, line: 888, type: !13022, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !13024)
!13022 = !DISubroutineType(types: !13023)
!13023 = !{!111, !2454}
!13024 = !{!13025}
!13025 = !DILocalVariable(name: "thread", arg: 1, scope: !13021, file: !2450, line: 888, type: !2454)
!13026 = !DILocation(line: 0, scope: !13021)
!13027 = !DILocation(line: 893, column: 2, scope: !13021)
!13028 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2450, file: !2450, line: 897, type: !13029, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !13031)
!13029 = !DISubroutineType(types: !13030)
!13030 = !{!111, !2454, !32}
!13031 = !{!13032, !13033}
!13032 = !DILocalVariable(name: "thread", arg: 1, scope: !13028, file: !2450, line: 897, type: !2454)
!13033 = !DILocalVariable(name: "options", arg: 2, scope: !13028, file: !2450, line: 897, type: !32)
!13034 = !DILocation(line: 0, scope: !13028)
!13035 = !DILocation(line: 902, column: 2, scope: !13028)
!13036 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2450, file: !2450, line: 1072, type: !13037, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !13042)
!13037 = !DISubroutineType(types: !13038)
!13038 = !{!111, !2453, !13039}
!13039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13040, size: 32)
!13040 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !290, line: 234, baseType: !13041)
!13041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !290, line: 192, elements: !247)
!13042 = !{!13043, !13044}
!13043 = !DILocalVariable(name: "thread", arg: 1, scope: !13036, file: !2450, line: 1072, type: !2453)
!13044 = !DILocalVariable(name: "stats", arg: 2, scope: !13036, file: !2450, line: 1073, type: !13039)
!13045 = !DILocation(line: 0, scope: !13036)
!13046 = !DILocation(line: 1075, column: 14, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13036, file: !2450, line: 1075, column: 6)
!13048 = !DILocation(line: 1075, column: 23, scope: !13047)
!13049 = !DILocation(line: 1086, column: 1, scope: !13036)
!13050 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2450, file: !2450, line: 1088, type: !13051, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !13053)
!13051 = !DISubroutineType(types: !13052)
!13052 = !{!111, !13039}
!13053 = !{!13054}
!13054 = !DILocalVariable(name: "stats", arg: 1, scope: !13050, file: !2450, line: 1088, type: !13039)
!13055 = !DILocation(line: 0, scope: !13050)
!13056 = !DILocation(line: 1094, column: 12, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13050, file: !2450, line: 1094, column: 6)
!13058 = !DILocation(line: 1120, column: 1, scope: !13050)
!13059 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13060, file: !13060, line: 20, type: !416, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3485, retainedNodes: !247)
!13060 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13061 = !DILocation(line: 30, column: 2, scope: !13059)
!13062 = !DILocation(line: 31, column: 1, scope: !13059)
!13063 = distinct !DISubprogram(name: "idle", scope: !13060, file: !13060, line: 33, type: !405, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3485, retainedNodes: !13064)
!13064 = !{!13065, !13066, !13067}
!13065 = !DILocalVariable(name: "unused1", arg: 1, scope: !13063, file: !13060, line: 33, type: !133)
!13066 = !DILocalVariable(name: "unused2", arg: 2, scope: !13063, file: !13060, line: 33, type: !133)
!13067 = !DILocalVariable(name: "unused3", arg: 3, scope: !13063, file: !13060, line: 33, type: !133)
!13068 = !DILocation(line: 0, scope: !13063)
!13069 = !DILocation(line: 41, column: 2, scope: !13063)
!13070 = !DILocation(line: 55, column: 2, scope: !13071, inlinedAt: !13075)
!13071 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7659, file: !7659, line: 42, type: !9702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3485, retainedNodes: !13072)
!13072 = !{!13073, !13074}
!13073 = !DILocalVariable(name: "key", scope: !13071, file: !7659, line: 44, type: !32)
!13074 = !DILocalVariable(name: "tmp", scope: !13071, file: !7659, line: 53, type: !32)
!13075 = distinct !DILocation(line: 62, column: 10, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13063, file: !13060, line: 41, column: 15)
!13077 = !{i64 2842401}
!13078 = !DILocation(line: 0, scope: !13071, inlinedAt: !13075)
!13079 = !DILocation(line: 86, column: 3, scope: !13076)
!13080 = distinct !{!13080, !13069, !13081}
!13081 = !DILocation(line: 105, column: 2, scope: !13063)
!13082 = distinct !DISubprogram(name: "k_cpu_idle", scope: !221, file: !221, line: 5627, type: !416, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3485, retainedNodes: !247)
!13083 = !DILocation(line: 5629, column: 2, scope: !13082)
!13084 = !DILocation(line: 5630, column: 1, scope: !13082)
!13085 = !DISubprogram(name: "arch_cpu_idle", scope: !396, file: !396, line: 167, type: !416, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !247)
!13086 = distinct !DISubprogram(name: "k_msgq_init", scope: !13087, file: !13087, line: 35, type: !13088, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13103)
!13087 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13088 = !DISubroutineType(types: !13089)
!13089 = !{null, !13090, !253, !249, !158}
!13090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13091, size: 32)
!13091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !221, line: 4204, size: 320, elements: !13092)
!13092 = !{!13093, !13094, !13095, !13096, !13097, !13098, !13099, !13100, !13101, !13102}
!13093 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13091, file: !221, line: 4206, baseType: !3523, size: 64)
!13094 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13091, file: !221, line: 4208, baseType: !3580, offset: 64)
!13095 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13091, file: !221, line: 4210, baseType: !249, size: 32, offset: 64)
!13096 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13091, file: !221, line: 4212, baseType: !158, size: 32, offset: 96)
!13097 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !13091, file: !221, line: 4214, baseType: !253, size: 32, offset: 128)
!13098 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !13091, file: !221, line: 4216, baseType: !253, size: 32, offset: 160)
!13099 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !13091, file: !221, line: 4218, baseType: !253, size: 32, offset: 192)
!13100 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !13091, file: !221, line: 4220, baseType: !253, size: 32, offset: 224)
!13101 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13091, file: !221, line: 4222, baseType: !158, size: 32, offset: 256)
!13102 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13091, file: !221, line: 4227, baseType: !128, size: 8, offset: 288)
!13103 = !{!13104, !13105, !13106, !13107}
!13104 = !DILocalVariable(name: "msgq", arg: 1, scope: !13086, file: !13087, line: 35, type: !13090)
!13105 = !DILocalVariable(name: "buffer", arg: 2, scope: !13086, file: !13087, line: 35, type: !253)
!13106 = !DILocalVariable(name: "msg_size", arg: 3, scope: !13086, file: !13087, line: 35, type: !249)
!13107 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !13086, file: !13087, line: 36, type: !158)
!13108 = !DILocation(line: 0, scope: !13086)
!13109 = !DILocation(line: 38, column: 8, scope: !13086)
!13110 = !DILocation(line: 38, column: 17, scope: !13086)
!13111 = !DILocation(line: 39, column: 8, scope: !13086)
!13112 = !DILocation(line: 39, column: 17, scope: !13086)
!13113 = !DILocation(line: 40, column: 8, scope: !13086)
!13114 = !DILocation(line: 40, column: 21, scope: !13086)
!13115 = !DILocation(line: 41, column: 40, scope: !13086)
!13116 = !DILocation(line: 41, column: 28, scope: !13086)
!13117 = !DILocation(line: 41, column: 8, scope: !13086)
!13118 = !DILocation(line: 41, column: 19, scope: !13086)
!13119 = !DILocation(line: 42, column: 8, scope: !13086)
!13120 = !DILocation(line: 42, column: 17, scope: !13086)
!13121 = !DILocation(line: 43, column: 8, scope: !13086)
!13122 = !DILocation(line: 43, column: 18, scope: !13086)
!13123 = !DILocation(line: 44, column: 8, scope: !13086)
!13124 = !DILocation(line: 44, column: 18, scope: !13086)
!13125 = !DILocation(line: 45, column: 8, scope: !13086)
!13126 = !DILocation(line: 45, column: 14, scope: !13086)
!13127 = !DILocation(line: 46, column: 22, scope: !13086)
!13128 = !DILocation(line: 46, column: 2, scope: !13086)
!13129 = !DILocation(line: 55, column: 1, scope: !13086)
!13130 = distinct !DISubprogram(name: "z_waitq_init", scope: !12763, file: !12763, line: 47, type: !13131, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13133)
!13131 = !DISubroutineType(types: !13132)
!13132 = !{null, !3522}
!13133 = !{!13134}
!13134 = !DILocalVariable(name: "w", arg: 1, scope: !13130, file: !12763, line: 47, type: !3522)
!13135 = !DILocation(line: 0, scope: !13130)
!13136 = !DILocation(line: 49, column: 21, scope: !13130)
!13137 = !DILocation(line: 49, column: 2, scope: !13130)
!13138 = !DILocation(line: 50, column: 1, scope: !13130)
!13139 = distinct !DISubprogram(name: "sys_dlist_init", scope: !230, file: !230, line: 197, type: !13140, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13143)
!13140 = !DISubroutineType(types: !13141)
!13141 = !{null, !13142}
!13142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 32)
!13143 = !{!13144}
!13144 = !DILocalVariable(name: "list", arg: 1, scope: !13139, file: !230, line: 197, type: !13142)
!13145 = !DILocation(line: 0, scope: !13139)
!13146 = !DILocation(line: 199, column: 8, scope: !13139)
!13147 = !DILocation(line: 199, column: 13, scope: !13139)
!13148 = !DILocation(line: 200, column: 8, scope: !13139)
!13149 = !DILocation(line: 200, column: 13, scope: !13139)
!13150 = !DILocation(line: 201, column: 1, scope: !13139)
!13151 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !13087, file: !13087, line: 57, type: !13152, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13154)
!13152 = !DISubroutineType(types: !13153)
!13153 = !{!111, !13090, !249, !158}
!13154 = !{!13155, !13156, !13157, !13158, !13159, !13160}
!13155 = !DILocalVariable(name: "msgq", arg: 1, scope: !13151, file: !13087, line: 57, type: !13090)
!13156 = !DILocalVariable(name: "msg_size", arg: 2, scope: !13151, file: !13087, line: 57, type: !249)
!13157 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !13151, file: !13087, line: 58, type: !158)
!13158 = !DILocalVariable(name: "buffer", scope: !13151, file: !13087, line: 60, type: !133)
!13159 = !DILocalVariable(name: "ret", scope: !13151, file: !13087, line: 61, type: !111)
!13160 = !DILocalVariable(name: "total_size", scope: !13151, file: !13087, line: 62, type: !249)
!13161 = !DILocation(line: 0, scope: !13151)
!13162 = !DILocation(line: 62, column: 2, scope: !13151)
!13163 = !DILocation(line: 66, column: 6, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13151, file: !13087, line: 66, column: 6)
!13165 = !DILocation(line: 66, column: 6, scope: !13151)
!13166 = !DILocation(line: 69, column: 28, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13164, file: !13087, line: 68, column: 9)
!13168 = !DILocation(line: 69, column: 12, scope: !13167)
!13169 = !DILocation(line: 70, column: 14, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13167, file: !13087, line: 70, column: 7)
!13171 = !DILocation(line: 70, column: 7, scope: !13167)
!13172 = !DILocation(line: 71, column: 4, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13170, file: !13087, line: 70, column: 23)
!13174 = !DILocation(line: 72, column: 10, scope: !13173)
!13175 = !DILocation(line: 72, column: 16, scope: !13173)
!13176 = !DILocation(line: 74, column: 3, scope: !13173)
!13177 = !DILocation(line: 0, scope: !13164)
!13178 = !DILocation(line: 82, column: 1, scope: !13151)
!13179 = !DILocation(line: 81, column: 2, scope: !13151)
!13180 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13181, file: !13181, line: 105, type: !13182, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13184)
!13181 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13182 = !DISubroutineType(types: !13183)
!13183 = !{!131, !249, !249, !2915}
!13184 = !{!13185, !13186, !13187}
!13185 = !DILocalVariable(name: "a", arg: 1, scope: !13180, file: !13181, line: 105, type: !249)
!13186 = !DILocalVariable(name: "b", arg: 2, scope: !13180, file: !13181, line: 105, type: !249)
!13187 = !DILocalVariable(name: "result", arg: 3, scope: !13180, file: !13181, line: 105, type: !2915)
!13188 = !DILocation(line: 0, scope: !13180)
!13189 = !DILocation(line: 107, column: 9, scope: !13180)
!13190 = !DILocation(line: 107, column: 2, scope: !13180)
!13191 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13192, file: !13192, line: 102, type: !13193, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13194)
!13192 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13193 = !DISubroutineType(types: !3466)
!13194 = !{!13195}
!13195 = !DILocalVariable(name: "size", arg: 1, scope: !13191, file: !13192, line: 102, type: !249)
!13196 = !DILocation(line: 0, scope: !13191)
!13197 = !DILocation(line: 104, column: 9, scope: !13191)
!13198 = !DILocation(line: 104, column: 2, scope: !13191)
!13199 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !13192, file: !13192, line: 87, type: !13200, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !247)
!13200 = !DISubroutineType(types: !13201)
!13201 = !{!133, !249, !249}
!13202 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !13087, file: !13087, line: 95, type: !13203, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13205)
!13203 = !DISubroutineType(types: !13204)
!13204 = !{!111, !13090}
!13205 = !{!13206}
!13206 = !DILocalVariable(name: "msgq", arg: 1, scope: !13202, file: !13087, line: 95, type: !13090)
!13207 = !DILocation(line: 0, scope: !13202)
!13208 = !DILocation(line: 99, column: 2, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13202, file: !13087, line: 99, column: 2)
!13210 = !DILocation(line: 99, column: 2, scope: !13202)
!13211 = !DILocation(line: 105, column: 13, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13202, file: !13087, line: 105, column: 6)
!13213 = !DILocation(line: 105, column: 19, scope: !13212)
!13214 = !DILocation(line: 105, column: 40, scope: !13212)
!13215 = !DILocation(line: 105, column: 6, scope: !13202)
!13216 = !DILocation(line: 106, column: 16, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13212, file: !13087, line: 105, column: 47)
!13218 = !DILocation(line: 106, column: 3, scope: !13217)
!13219 = !DILocation(line: 107, column: 15, scope: !13217)
!13220 = !DILocation(line: 108, column: 2, scope: !13217)
!13221 = !DILocation(line: 113, column: 1, scope: !13202)
!13222 = distinct !DISubprogram(name: "z_waitq_head", scope: !12763, file: !12763, line: 52, type: !13223, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13225)
!13223 = !DISubroutineType(types: !13224)
!13224 = !{!3505, !3522}
!13225 = !{!13226}
!13226 = !DILocalVariable(name: "w", arg: 1, scope: !13222, file: !12763, line: 52, type: !3522)
!13227 = !DILocation(line: 0, scope: !13222)
!13228 = !DILocation(line: 54, column: 52, scope: !13222)
!13229 = !DILocation(line: 54, column: 28, scope: !13222)
!13230 = !DILocation(line: 54, column: 9, scope: !13222)
!13231 = !DILocation(line: 54, column: 2, scope: !13222)
!13232 = !DISubprogram(name: "k_free", scope: !221, file: !221, line: 5272, type: !7479, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !247)
!13233 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !230, file: !230, line: 294, type: !13234, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13236)
!13234 = !DISubroutineType(types: !13235)
!13235 = !{!3490, !13142}
!13236 = !{!13237}
!13237 = !DILocalVariable(name: "list", arg: 1, scope: !13233, file: !230, line: 294, type: !13142)
!13238 = !DILocation(line: 0, scope: !13233)
!13239 = !DILocation(line: 296, column: 9, scope: !13233)
!13240 = !DILocation(line: 296, column: 49, scope: !13233)
!13241 = !DILocation(line: 296, column: 2, scope: !13233)
!13242 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !230, file: !230, line: 266, type: !13243, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13245)
!13243 = !DISubroutineType(types: !13244)
!13244 = !{!131, !13142}
!13245 = !{!13246}
!13246 = !DILocalVariable(name: "list", arg: 1, scope: !13242, file: !230, line: 266, type: !13142)
!13247 = !DILocation(line: 0, scope: !13242)
!13248 = !DILocation(line: 268, column: 15, scope: !13242)
!13249 = !DILocation(line: 268, column: 20, scope: !13242)
!13250 = !DILocation(line: 268, column: 2, scope: !13242)
!13251 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !13087, file: !13087, line: 116, type: !13252, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13258)
!13252 = !DISubroutineType(types: !13253)
!13253 = !{!111, !13090, !13, !13254}
!13254 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !203, line: 67, baseType: !13255)
!13255 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !203, line: 65, size: 64, elements: !13256)
!13256 = !{!13257}
!13257 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13255, file: !203, line: 66, baseType: !202, size: 64)
!13258 = !{!13259, !13260, !13261, !13262, !13263, !13268}
!13259 = !DILocalVariable(name: "msgq", arg: 1, scope: !13251, file: !13087, line: 116, type: !13090)
!13260 = !DILocalVariable(name: "data", arg: 2, scope: !13251, file: !13087, line: 116, type: !13)
!13261 = !DILocalVariable(name: "timeout", arg: 3, scope: !13251, file: !13087, line: 116, type: !13254)
!13262 = !DILocalVariable(name: "pending_thread", scope: !13251, file: !13087, line: 120, type: !3505)
!13263 = !DILocalVariable(name: "key", scope: !13251, file: !13087, line: 121, type: !13264)
!13264 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !246, line: 106, baseType: !13265)
!13265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !246, line: 32, size: 32, elements: !13266)
!13266 = !{!13267}
!13267 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13265, file: !246, line: 33, baseType: !111, size: 32)
!13268 = !DILocalVariable(name: "result", scope: !13251, file: !13087, line: 122, type: !111)
!13269 = !DILocation(line: 0, scope: !13251)
!13270 = !DILocation(line: 124, column: 27, scope: !13251)
!13271 = !DILocalVariable(name: "l", arg: 1, scope: !13272, file: !246, line: 136, type: !13275)
!13272 = distinct !DISubprogram(name: "k_spin_lock", scope: !246, file: !246, line: 136, type: !13273, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13276)
!13273 = !DISubroutineType(types: !13274)
!13274 = !{!13264, !13275}
!13275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 32)
!13276 = !{!13271, !13277}
!13277 = !DILocalVariable(name: "k", scope: !13272, file: !246, line: 139, type: !13264)
!13278 = !DILocation(line: 0, scope: !13272, inlinedAt: !13279)
!13279 = distinct !DILocation(line: 124, column: 8, scope: !13251)
!13280 = !DILocation(line: 55, column: 2, scope: !13281, inlinedAt: !13285)
!13281 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7659, file: !7659, line: 42, type: !9702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13282)
!13282 = !{!13283, !13284}
!13283 = !DILocalVariable(name: "key", scope: !13281, file: !7659, line: 44, type: !32)
!13284 = !DILocalVariable(name: "tmp", scope: !13281, file: !7659, line: 53, type: !32)
!13285 = distinct !DILocation(line: 145, column: 10, scope: !13272, inlinedAt: !13279)
!13286 = !{i64 2848538}
!13287 = !DILocation(line: 0, scope: !13281, inlinedAt: !13285)
!13288 = !DILocation(line: 128, column: 12, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13251, file: !13087, line: 128, column: 6)
!13290 = !DILocation(line: 128, column: 30, scope: !13289)
!13291 = !DILocation(line: 128, column: 22, scope: !13289)
!13292 = !DILocation(line: 128, column: 6, scope: !13251)
!13293 = !DILocation(line: 130, column: 49, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13289, file: !13087, line: 128, column: 40)
!13295 = !DILocation(line: 130, column: 20, scope: !13294)
!13296 = !DILocation(line: 131, column: 22, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13294, file: !13087, line: 131, column: 7)
!13298 = !DILocation(line: 131, column: 7, scope: !13294)
!13299 = !DILocation(line: 135, column: 38, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13297, file: !13087, line: 131, column: 31)
!13301 = !DILocation(line: 136, column: 17, scope: !13300)
!13302 = !DILocation(line: 135, column: 10, scope: !13300)
!13303 = !DILocalVariable(name: "thread", arg: 1, scope: !13304, file: !12442, line: 65, type: !3505)
!13304 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12442, file: !12442, line: 65, type: !13305, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13307)
!13305 = !DISubroutineType(types: !13306)
!13306 = !{null, !3505, !32}
!13307 = !{!13303, !13308}
!13308 = !DILocalVariable(name: "value", arg: 2, scope: !13304, file: !12442, line: 65, type: !32)
!13309 = !DILocation(line: 0, scope: !13304, inlinedAt: !13310)
!13310 = distinct !DILocation(line: 138, column: 4, scope: !13300)
!13311 = !DILocation(line: 67, column: 15, scope: !13304, inlinedAt: !13310)
!13312 = !DILocation(line: 67, column: 33, scope: !13304, inlinedAt: !13310)
!13313 = !DILocation(line: 139, column: 4, scope: !13300)
!13314 = !DILocation(line: 140, column: 4, scope: !13300)
!13315 = !DILocation(line: 141, column: 4, scope: !13300)
!13316 = !DILocation(line: 144, column: 23, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13297, file: !13087, line: 142, column: 10)
!13318 = !DILocation(line: 144, column: 46, scope: !13317)
!13319 = !DILocation(line: 144, column: 10, scope: !13317)
!13320 = !DILocation(line: 145, column: 29, scope: !13317)
!13321 = !DILocation(line: 145, column: 20, scope: !13317)
!13322 = !DILocation(line: 146, column: 33, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13317, file: !13087, line: 146, column: 8)
!13324 = !DILocation(line: 146, column: 24, scope: !13323)
!13325 = !DILocation(line: 146, column: 8, scope: !13317)
!13326 = !DILocation(line: 147, column: 29, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13323, file: !13087, line: 146, column: 45)
!13328 = !DILocation(line: 147, column: 21, scope: !13327)
!13329 = !DILocation(line: 148, column: 4, scope: !13327)
!13330 = !DILocation(line: 149, column: 19, scope: !13317)
!13331 = !DILocation(line: 155, column: 2, scope: !13294)
!13332 = !DILocation(line: 155, column: 13, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13289, file: !13087, line: 155, column: 13)
!13334 = !DILocation(line: 155, column: 13, scope: !13289)
!13335 = !DILocation(line: 162, column: 3, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13333, file: !13087, line: 158, column: 9)
!13337 = !DILocation(line: 162, column: 18, scope: !13336)
!13338 = !DILocation(line: 162, column: 28, scope: !13336)
!13339 = !DILocation(line: 164, column: 49, scope: !13336)
!13340 = !DILocation(line: 164, column: 12, scope: !13336)
!13341 = !DILocation(line: 166, column: 3, scope: !13336)
!13342 = !DILocation(line: 0, scope: !13289)
!13343 = !DILocalVariable(name: "key", arg: 2, scope: !13344, file: !246, line: 190, type: !13264)
!13344 = distinct !DISubprogram(name: "k_spin_unlock", scope: !246, file: !246, line: 189, type: !13345, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13347)
!13345 = !DISubroutineType(types: !13346)
!13346 = !{null, !13275, !13264}
!13347 = !{!13348, !13343}
!13348 = !DILocalVariable(name: "l", arg: 1, scope: !13344, file: !246, line: 189, type: !13275)
!13349 = !DILocation(line: 0, scope: !13344, inlinedAt: !13350)
!13350 = distinct !DILocation(line: 171, column: 2, scope: !13251)
!13351 = !DILocalVariable(name: "key", arg: 1, scope: !13352, file: !7659, line: 84, type: !32)
!13352 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13353)
!13353 = !{!13351}
!13354 = !DILocation(line: 0, scope: !13352, inlinedAt: !13355)
!13355 = distinct !DILocation(line: 215, column: 2, scope: !13344, inlinedAt: !13350)
!13356 = !DILocation(line: 95, column: 2, scope: !13352, inlinedAt: !13355)
!13357 = !{i64 2849355}
!13358 = !DILocation(line: 173, column: 2, scope: !13251)
!13359 = !DILocation(line: 174, column: 1, scope: !13251)
!13360 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !13087, file: !13087, line: 188, type: !13361, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13369)
!13361 = !DISubroutineType(types: !13362)
!13362 = !{null, !13090, !13363}
!13363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13364, size: 32)
!13364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !221, line: 4259, size: 96, elements: !13365)
!13365 = !{!13366, !13367, !13368}
!13366 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13364, file: !221, line: 4261, baseType: !249, size: 32)
!13367 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13364, file: !221, line: 4263, baseType: !158, size: 32, offset: 32)
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13364, file: !221, line: 4265, baseType: !158, size: 32, offset: 64)
!13369 = !{!13370, !13371}
!13370 = !DILocalVariable(name: "msgq", arg: 1, scope: !13360, file: !13087, line: 188, type: !13090)
!13371 = !DILocalVariable(name: "attrs", arg: 2, scope: !13360, file: !13087, line: 188, type: !13363)
!13372 = !DILocation(line: 0, scope: !13360)
!13373 = !DILocation(line: 190, column: 26, scope: !13360)
!13374 = !DILocation(line: 190, column: 9, scope: !13360)
!13375 = !DILocation(line: 190, column: 18, scope: !13360)
!13376 = !DILocation(line: 191, column: 26, scope: !13360)
!13377 = !DILocation(line: 191, column: 9, scope: !13360)
!13378 = !DILocation(line: 191, column: 18, scope: !13360)
!13379 = !DILocation(line: 192, column: 27, scope: !13360)
!13380 = !DILocation(line: 192, column: 9, scope: !13360)
!13381 = !DILocation(line: 192, column: 19, scope: !13360)
!13382 = !DILocation(line: 193, column: 1, scope: !13360)
!13383 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !13087, file: !13087, line: 206, type: !13384, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13386)
!13384 = !DISubroutineType(types: !13385)
!13385 = !{!111, !13090, !133, !13254}
!13386 = !{!13387, !13388, !13389, !13390, !13391, !13392}
!13387 = !DILocalVariable(name: "msgq", arg: 1, scope: !13383, file: !13087, line: 206, type: !13090)
!13388 = !DILocalVariable(name: "data", arg: 2, scope: !13383, file: !13087, line: 206, type: !133)
!13389 = !DILocalVariable(name: "timeout", arg: 3, scope: !13383, file: !13087, line: 206, type: !13254)
!13390 = !DILocalVariable(name: "key", scope: !13383, file: !13087, line: 210, type: !13264)
!13391 = !DILocalVariable(name: "pending_thread", scope: !13383, file: !13087, line: 211, type: !3505)
!13392 = !DILocalVariable(name: "result", scope: !13383, file: !13087, line: 212, type: !111)
!13393 = !DILocation(line: 0, scope: !13383)
!13394 = !DILocation(line: 214, column: 27, scope: !13383)
!13395 = !DILocation(line: 0, scope: !13272, inlinedAt: !13396)
!13396 = distinct !DILocation(line: 214, column: 8, scope: !13383)
!13397 = !DILocation(line: 55, column: 2, scope: !13281, inlinedAt: !13398)
!13398 = distinct !DILocation(line: 145, column: 10, scope: !13272, inlinedAt: !13396)
!13399 = !DILocation(line: 0, scope: !13281, inlinedAt: !13398)
!13400 = !DILocation(line: 218, column: 12, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13383, file: !13087, line: 218, column: 6)
!13402 = !DILocation(line: 218, column: 22, scope: !13401)
!13403 = !DILocation(line: 218, column: 6, scope: !13383)
!13404 = !DILocation(line: 220, column: 28, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13401, file: !13087, line: 218, column: 28)
!13406 = !DILocation(line: 220, column: 44, scope: !13405)
!13407 = !DILocation(line: 220, column: 9, scope: !13405)
!13408 = !DILocation(line: 221, column: 27, scope: !13405)
!13409 = !DILocation(line: 221, column: 18, scope: !13405)
!13410 = !DILocation(line: 222, column: 31, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13405, file: !13087, line: 222, column: 7)
!13412 = !DILocation(line: 222, column: 22, scope: !13411)
!13413 = !DILocation(line: 222, column: 7, scope: !13405)
!13414 = !DILocation(line: 223, column: 27, scope: !13415)
!13415 = distinct !DILexicalBlock(scope: !13411, file: !13087, line: 222, column: 43)
!13416 = !DILocation(line: 223, column: 19, scope: !13415)
!13417 = !DILocation(line: 224, column: 3, scope: !13415)
!13418 = !DILocation(line: 225, column: 18, scope: !13405)
!13419 = !DILocation(line: 228, column: 49, scope: !13405)
!13420 = !DILocation(line: 228, column: 20, scope: !13405)
!13421 = !DILocation(line: 229, column: 22, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13405, file: !13087, line: 229, column: 7)
!13423 = !DILocation(line: 229, column: 7, scope: !13405)
!13424 = !DILocation(line: 233, column: 23, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13422, file: !13087, line: 229, column: 31)
!13426 = !DILocation(line: 233, column: 55, scope: !13425)
!13427 = !DILocation(line: 234, column: 17, scope: !13425)
!13428 = !DILocation(line: 233, column: 10, scope: !13425)
!13429 = !DILocation(line: 235, column: 29, scope: !13425)
!13430 = !DILocation(line: 235, column: 20, scope: !13425)
!13431 = !DILocation(line: 236, column: 33, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13425, file: !13087, line: 236, column: 8)
!13433 = !DILocation(line: 236, column: 24, scope: !13432)
!13434 = !DILocation(line: 236, column: 8, scope: !13425)
!13435 = !DILocation(line: 237, column: 29, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13432, file: !13087, line: 236, column: 45)
!13437 = !DILocation(line: 237, column: 21, scope: !13436)
!13438 = !DILocation(line: 238, column: 4, scope: !13436)
!13439 = !DILocation(line: 239, column: 19, scope: !13425)
!13440 = !DILocation(line: 0, scope: !13304, inlinedAt: !13441)
!13441 = distinct !DILocation(line: 242, column: 4, scope: !13425)
!13442 = !DILocation(line: 67, column: 15, scope: !13304, inlinedAt: !13441)
!13443 = !DILocation(line: 67, column: 33, scope: !13304, inlinedAt: !13441)
!13444 = !DILocation(line: 243, column: 4, scope: !13425)
!13445 = !DILocation(line: 244, column: 4, scope: !13425)
!13446 = !DILocation(line: 248, column: 4, scope: !13425)
!13447 = !DILocation(line: 251, column: 13, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13401, file: !13087, line: 251, column: 13)
!13449 = !DILocation(line: 251, column: 13, scope: !13401)
!13450 = !DILocation(line: 258, column: 3, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13448, file: !13087, line: 254, column: 9)
!13452 = !DILocation(line: 258, column: 18, scope: !13451)
!13453 = !DILocation(line: 258, column: 28, scope: !13451)
!13454 = !DILocation(line: 260, column: 49, scope: !13451)
!13455 = !DILocation(line: 260, column: 12, scope: !13451)
!13456 = !DILocation(line: 262, column: 3, scope: !13451)
!13457 = !DILocation(line: 0, scope: !13401)
!13458 = !DILocation(line: 0, scope: !13344, inlinedAt: !13459)
!13459 = distinct !DILocation(line: 267, column: 2, scope: !13383)
!13460 = !DILocation(line: 0, scope: !13352, inlinedAt: !13461)
!13461 = distinct !DILocation(line: 215, column: 2, scope: !13344, inlinedAt: !13459)
!13462 = !DILocation(line: 95, column: 2, scope: !13352, inlinedAt: !13461)
!13463 = !DILocation(line: 269, column: 2, scope: !13383)
!13464 = !DILocation(line: 270, column: 1, scope: !13383)
!13465 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !13087, file: !13087, line: 284, type: !13466, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13468)
!13466 = !DISubroutineType(types: !13467)
!13467 = !{!111, !13090, !133}
!13468 = !{!13469, !13470, !13471, !13472}
!13469 = !DILocalVariable(name: "msgq", arg: 1, scope: !13465, file: !13087, line: 284, type: !13090)
!13470 = !DILocalVariable(name: "data", arg: 2, scope: !13465, file: !13087, line: 284, type: !133)
!13471 = !DILocalVariable(name: "key", scope: !13465, file: !13087, line: 286, type: !13264)
!13472 = !DILocalVariable(name: "result", scope: !13465, file: !13087, line: 287, type: !111)
!13473 = !DILocation(line: 0, scope: !13465)
!13474 = !DILocation(line: 0, scope: !13272, inlinedAt: !13475)
!13475 = distinct !DILocation(line: 289, column: 8, scope: !13465)
!13476 = !DILocation(line: 55, column: 2, scope: !13281, inlinedAt: !13477)
!13477 = distinct !DILocation(line: 145, column: 10, scope: !13272, inlinedAt: !13475)
!13478 = !DILocation(line: 0, scope: !13281, inlinedAt: !13477)
!13479 = !DILocation(line: 291, column: 12, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13465, file: !13087, line: 291, column: 6)
!13481 = !DILocation(line: 291, column: 22, scope: !13480)
!13482 = !DILocation(line: 291, column: 6, scope: !13465)
!13483 = !DILocation(line: 293, column: 28, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13480, file: !13087, line: 291, column: 28)
!13485 = !DILocation(line: 293, column: 44, scope: !13484)
!13486 = !DILocation(line: 293, column: 9, scope: !13484)
!13487 = !DILocation(line: 295, column: 2, scope: !13484)
!13488 = !DILocation(line: 0, scope: !13480)
!13489 = !DILocation(line: 0, scope: !13344, inlinedAt: !13490)
!13490 = distinct !DILocation(line: 302, column: 2, scope: !13465)
!13491 = !DILocation(line: 0, scope: !13352, inlinedAt: !13492)
!13492 = distinct !DILocation(line: 215, column: 2, scope: !13344, inlinedAt: !13490)
!13493 = !DILocation(line: 95, column: 2, scope: !13352, inlinedAt: !13492)
!13494 = !DILocation(line: 304, column: 2, scope: !13465)
!13495 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !13087, file: !13087, line: 318, type: !13496, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !13498)
!13496 = !DISubroutineType(types: !13497)
!13497 = !{null, !13090}
!13498 = !{!13499, !13500, !13501}
!13499 = !DILocalVariable(name: "msgq", arg: 1, scope: !13495, file: !13087, line: 318, type: !13090)
!13500 = !DILocalVariable(name: "key", scope: !13495, file: !13087, line: 320, type: !13264)
!13501 = !DILocalVariable(name: "pending_thread", scope: !13495, file: !13087, line: 321, type: !3505)
!13502 = !DILocation(line: 0, scope: !13495)
!13503 = !DILocation(line: 0, scope: !13272, inlinedAt: !13504)
!13504 = distinct !DILocation(line: 323, column: 8, scope: !13495)
!13505 = !DILocation(line: 55, column: 2, scope: !13281, inlinedAt: !13506)
!13506 = distinct !DILocation(line: 145, column: 10, scope: !13272, inlinedAt: !13504)
!13507 = !DILocation(line: 0, scope: !13281, inlinedAt: !13506)
!13508 = !DILocation(line: 328, column: 27, scope: !13495)
!13509 = !DILocation(line: 328, column: 65, scope: !13495)
!13510 = !DILocation(line: 328, column: 2, scope: !13495)
!13511 = !DILocation(line: 0, scope: !13304, inlinedAt: !13512)
!13512 = distinct !DILocation(line: 329, column: 3, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13495, file: !13087, line: 328, column: 74)
!13514 = !DILocation(line: 67, column: 15, scope: !13304, inlinedAt: !13512)
!13515 = !DILocation(line: 67, column: 33, scope: !13304, inlinedAt: !13512)
!13516 = !DILocation(line: 330, column: 3, scope: !13513)
!13517 = distinct !{!13517, !13510, !13518}
!13518 = !DILocation(line: 331, column: 2, scope: !13495)
!13519 = !DILocation(line: 323, column: 27, scope: !13495)
!13520 = !DILocation(line: 333, column: 8, scope: !13495)
!13521 = !DILocation(line: 333, column: 18, scope: !13495)
!13522 = !DILocation(line: 334, column: 25, scope: !13495)
!13523 = !DILocation(line: 334, column: 8, scope: !13495)
!13524 = !DILocation(line: 334, column: 17, scope: !13495)
!13525 = !DILocation(line: 336, column: 2, scope: !13495)
!13526 = !DILocation(line: 337, column: 1, scope: !13495)
!13527 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2670, file: !2670, line: 49, type: !13528, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13537)
!13528 = !DISubroutineType(types: !13529)
!13529 = !{!111, !13530}
!13530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13531, size: 32)
!13531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !221, line: 2720, size: 160, elements: !13532)
!13532 = !{!13533, !13534, !13535, !13536}
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13531, file: !221, line: 2722, baseType: !2606, size: 64)
!13534 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13531, file: !221, line: 2724, baseType: !2588, size: 32, offset: 64)
!13535 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13531, file: !221, line: 2727, baseType: !158, size: 32, offset: 96)
!13536 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13531, file: !221, line: 2730, baseType: !111, size: 32, offset: 128)
!13537 = !{!13538}
!13538 = !DILocalVariable(name: "mutex", arg: 1, scope: !13527, file: !2670, line: 49, type: !13530)
!13539 = !DILocation(line: 0, scope: !13527)
!13540 = !DILocation(line: 51, column: 9, scope: !13527)
!13541 = !DILocation(line: 51, column: 15, scope: !13527)
!13542 = !DILocation(line: 52, column: 9, scope: !13527)
!13543 = !DILocation(line: 52, column: 20, scope: !13527)
!13544 = !DILocation(line: 54, column: 23, scope: !13527)
!13545 = !DILocation(line: 54, column: 2, scope: !13527)
!13546 = !DILocation(line: 60, column: 2, scope: !13527)
!13547 = distinct !DISubprogram(name: "z_waitq_init", scope: !12763, file: !12763, line: 47, type: !13548, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13550)
!13548 = !DISubroutineType(types: !13549)
!13549 = !{null, !2605}
!13550 = !{!13551}
!13551 = !DILocalVariable(name: "w", arg: 1, scope: !13547, file: !12763, line: 47, type: !2605)
!13552 = !DILocation(line: 0, scope: !13547)
!13553 = !DILocation(line: 49, column: 21, scope: !13547)
!13554 = !DILocation(line: 49, column: 2, scope: !13547)
!13555 = !DILocation(line: 50, column: 1, scope: !13547)
!13556 = distinct !DISubprogram(name: "sys_dlist_init", scope: !230, file: !230, line: 197, type: !13557, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13560)
!13557 = !DISubroutineType(types: !13558)
!13558 = !{null, !13559}
!13559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!13560 = !{!13561}
!13561 = !DILocalVariable(name: "list", arg: 1, scope: !13556, file: !230, line: 197, type: !13559)
!13562 = !DILocation(line: 0, scope: !13556)
!13563 = !DILocation(line: 199, column: 8, scope: !13556)
!13564 = !DILocation(line: 199, column: 13, scope: !13556)
!13565 = !DILocation(line: 200, column: 8, scope: !13556)
!13566 = !DILocation(line: 200, column: 13, scope: !13556)
!13567 = !DILocation(line: 201, column: 1, scope: !13556)
!13568 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2670, file: !2670, line: 95, type: !13569, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13575)
!13569 = !DISubroutineType(types: !13570)
!13570 = !{!111, !13530, !13571}
!13571 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !203, line: 67, baseType: !13572)
!13572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !203, line: 65, size: 64, elements: !13573)
!13573 = !{!13574}
!13574 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13572, file: !203, line: 66, baseType: !202, size: 64)
!13575 = !{!13576, !13577, !13578, !13579, !13584, !13585, !13586}
!13576 = !DILocalVariable(name: "mutex", arg: 1, scope: !13568, file: !2670, line: 95, type: !13530)
!13577 = !DILocalVariable(name: "timeout", arg: 2, scope: !13568, file: !2670, line: 95, type: !13571)
!13578 = !DILocalVariable(name: "new_prio", scope: !13568, file: !2670, line: 97, type: !111)
!13579 = !DILocalVariable(name: "key", scope: !13568, file: !2670, line: 98, type: !13580)
!13580 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !246, line: 106, baseType: !13581)
!13581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !246, line: 32, size: 32, elements: !13582)
!13582 = !{!13583}
!13583 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13581, file: !246, line: 33, baseType: !111, size: 32)
!13584 = !DILocalVariable(name: "resched", scope: !13568, file: !2670, line: 99, type: !131)
!13585 = !DILocalVariable(name: "got_mutex", scope: !13568, file: !2670, line: 146, type: !111)
!13586 = !DILocalVariable(name: "waiter", scope: !13587, file: !2670, line: 169, type: !2588)
!13587 = distinct !DILexicalBlock(scope: !13588, file: !2670, line: 168, column: 36)
!13588 = distinct !DILexicalBlock(scope: !13568, file: !2670, line: 168, column: 6)
!13589 = !DILocation(line: 0, scope: !13568)
!13590 = !DILocalVariable(name: "l", arg: 1, scope: !13591, file: !246, line: 136, type: !13594)
!13591 = distinct !DISubprogram(name: "k_spin_lock", scope: !246, file: !246, line: 136, type: !13592, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13595)
!13592 = !DISubroutineType(types: !13593)
!13593 = !{!13580, !13594}
!13594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 32)
!13595 = !{!13590, !13596}
!13596 = !DILocalVariable(name: "k", scope: !13591, file: !246, line: 139, type: !13580)
!13597 = !DILocation(line: 0, scope: !13591, inlinedAt: !13598)
!13598 = distinct !DILocation(line: 105, column: 8, scope: !13568)
!13599 = !DILocation(line: 55, column: 2, scope: !13600, inlinedAt: !13604)
!13600 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7659, file: !7659, line: 42, type: !9702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13601)
!13601 = !{!13602, !13603}
!13602 = !DILocalVariable(name: "key", scope: !13600, file: !7659, line: 44, type: !32)
!13603 = !DILocalVariable(name: "tmp", scope: !13600, file: !7659, line: 53, type: !32)
!13604 = distinct !DILocation(line: 145, column: 10, scope: !13591, inlinedAt: !13598)
!13605 = !{i64 2846809}
!13606 = !DILocation(line: 0, scope: !13600, inlinedAt: !13604)
!13607 = !DILocation(line: 107, column: 6, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13568, file: !2670, line: 107, column: 6)
!13609 = !DILocation(line: 107, column: 6, scope: !13568)
!13610 = !{!"branch_weights", i32 2000, i32 1}
!13611 = !DILocation(line: 110, column: 6, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13608, file: !2670, line: 107, column: 71)
!13613 = !DILocation(line: 110, column: 21, scope: !13612)
!13614 = !DILocation(line: 109, column: 28, scope: !13612)
!13615 = !DILocation(line: 111, column: 13, scope: !13612)
!13616 = !DILocation(line: 114, column: 18, scope: !13612)
!13617 = !DILocation(line: 109, column: 10, scope: !13612)
!13618 = !DILocation(line: 109, column: 26, scope: !13612)
!13619 = !DILocation(line: 113, column: 20, scope: !13612)
!13620 = !DILocation(line: 114, column: 10, scope: !13612)
!13621 = !DILocation(line: 114, column: 16, scope: !13612)
!13622 = !DILocalVariable(name: "key", arg: 2, scope: !13623, file: !246, line: 190, type: !13580)
!13623 = distinct !DISubprogram(name: "k_spin_unlock", scope: !246, file: !246, line: 189, type: !13624, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13626)
!13624 = !DISubroutineType(types: !13625)
!13625 = !{null, !13594, !13580}
!13626 = !{!13627, !13622}
!13627 = !DILocalVariable(name: "l", arg: 1, scope: !13623, file: !246, line: 189, type: !13594)
!13628 = !DILocation(line: 0, scope: !13623, inlinedAt: !13629)
!13629 = distinct !DILocation(line: 120, column: 3, scope: !13612)
!13630 = !DILocalVariable(name: "key", arg: 1, scope: !13631, file: !7659, line: 84, type: !32)
!13631 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13632)
!13632 = !{!13630}
!13633 = !DILocation(line: 0, scope: !13631, inlinedAt: !13634)
!13634 = distinct !DILocation(line: 215, column: 2, scope: !13623, inlinedAt: !13629)
!13635 = !DILocation(line: 95, column: 2, scope: !13631, inlinedAt: !13634)
!13636 = !{i64 2847626}
!13637 = !DILocation(line: 124, column: 3, scope: !13612)
!13638 = !DILocation(line: 127, column: 6, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13568, file: !2670, line: 127, column: 6)
!13640 = !DILocation(line: 127, column: 6, scope: !13568)
!13641 = !{!"branch_weights", i32 1, i32 2000}
!13642 = !DILocation(line: 0, scope: !13623, inlinedAt: !13643)
!13643 = distinct !DILocation(line: 128, column: 3, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13639, file: !2670, line: 127, column: 50)
!13645 = !DILocation(line: 0, scope: !13631, inlinedAt: !13646)
!13646 = distinct !DILocation(line: 215, column: 2, scope: !13623, inlinedAt: !13643)
!13647 = !DILocation(line: 95, column: 2, scope: !13631, inlinedAt: !13646)
!13648 = !DILocation(line: 132, column: 3, scope: !13644)
!13649 = !DILocation(line: 137, column: 53, scope: !13568)
!13650 = !DILocation(line: 137, column: 38, scope: !13568)
!13651 = !DILocation(line: 138, column: 29, scope: !13568)
!13652 = !DILocation(line: 138, column: 10, scope: !13568)
!13653 = !DILocation(line: 137, column: 13, scope: !13568)
!13654 = !DILocation(line: 142, column: 6, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13568, file: !2670, line: 142, column: 6)
!13656 = !DILocation(line: 142, column: 6, scope: !13568)
!13657 = !DILocation(line: 143, column: 13, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13655, file: !2670, line: 142, column: 59)
!13659 = !DILocation(line: 144, column: 2, scope: !13658)
!13660 = !DILocation(line: 146, column: 50, scope: !13568)
!13661 = !DILocation(line: 146, column: 18, scope: !13568)
!13662 = !DILocation(line: 153, column: 16, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13568, file: !2670, line: 153, column: 6)
!13664 = !DILocation(line: 153, column: 6, scope: !13568)
!13665 = !DILocation(line: 0, scope: !13591, inlinedAt: !13666)
!13666 = distinct !DILocation(line: 162, column: 8, scope: !13568)
!13667 = !DILocation(line: 55, column: 2, scope: !13600, inlinedAt: !13668)
!13668 = distinct !DILocation(line: 145, column: 10, scope: !13591, inlinedAt: !13666)
!13669 = !DILocation(line: 0, scope: !13600, inlinedAt: !13668)
!13670 = !DILocation(line: 168, column: 6, scope: !13588)
!13671 = !DILocation(line: 168, column: 6, scope: !13568)
!13672 = !DILocation(line: 169, column: 29, scope: !13587)
!13673 = !DILocation(line: 0, scope: !13587)
!13674 = !DILocation(line: 171, column: 22, scope: !13587)
!13675 = !DILocation(line: 171, column: 14, scope: !13587)
!13676 = !DILocation(line: 172, column: 42, scope: !13587)
!13677 = !DILocation(line: 172, column: 29, scope: !13587)
!13678 = !DILocation(line: 172, column: 55, scope: !13587)
!13679 = !DILocation(line: 172, column: 4, scope: !13587)
!13680 = !DILocation(line: 173, column: 11, scope: !13587)
!13681 = !DILocation(line: 177, column: 13, scope: !13587)
!13682 = !DILocation(line: 177, column: 48, scope: !13587)
!13683 = !DILocation(line: 180, column: 6, scope: !13568)
!13684 = !DILocation(line: 181, column: 3, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13686, file: !2670, line: 180, column: 15)
!13686 = distinct !DILexicalBlock(scope: !13568, file: !2670, line: 180, column: 6)
!13687 = !DILocation(line: 182, column: 2, scope: !13685)
!13688 = !DILocation(line: 0, scope: !13623, inlinedAt: !13689)
!13689 = distinct !DILocation(line: 183, column: 3, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13686, file: !2670, line: 182, column: 9)
!13691 = !DILocation(line: 0, scope: !13631, inlinedAt: !13692)
!13692 = distinct !DILocation(line: 215, column: 2, scope: !13623, inlinedAt: !13689)
!13693 = !DILocation(line: 95, column: 2, scope: !13631, inlinedAt: !13692)
!13694 = !DILocation(line: 189, column: 1, scope: !13568)
!13695 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2670, file: !2670, line: 72, type: !13696, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13698)
!13696 = !DISubroutineType(types: !13697)
!13697 = !{!413, !413, !413}
!13698 = !{!13699, !13700, !13701}
!13699 = !DILocalVariable(name: "target", arg: 1, scope: !13695, file: !2670, line: 72, type: !413)
!13700 = !DILocalVariable(name: "limit", arg: 2, scope: !13695, file: !2670, line: 72, type: !413)
!13701 = !DILocalVariable(name: "new_prio", scope: !13695, file: !2670, line: 74, type: !111)
!13702 = !DILocation(line: 0, scope: !13695)
!13703 = !DILocation(line: 74, column: 17, scope: !13695)
!13704 = !DILocation(line: 76, column: 13, scope: !13695)
!13705 = !DILocation(line: 78, column: 2, scope: !13695)
!13706 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12422, file: !12422, line: 211, type: !13707, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13709)
!13707 = !DISubroutineType(types: !13708)
!13708 = !{!131, !111, !111}
!13709 = !{!13710, !13711}
!13710 = !DILocalVariable(name: "prio", arg: 1, scope: !13706, file: !12422, line: 211, type: !111)
!13711 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13706, file: !12422, line: 211, type: !111)
!13712 = !DILocation(line: 0, scope: !13706)
!13713 = !DILocation(line: 213, column: 9, scope: !13706)
!13714 = !DILocation(line: 213, column: 2, scope: !13706)
!13715 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2670, file: !2670, line: 81, type: !13716, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13718)
!13716 = !DISubroutineType(types: !13717)
!13717 = !{!131, !13530, !413}
!13718 = !{!13719, !13720}
!13719 = !DILocalVariable(name: "mutex", arg: 1, scope: !13715, file: !2670, line: 81, type: !13530)
!13720 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13715, file: !2670, line: 81, type: !413)
!13721 = !DILocation(line: 0, scope: !13715)
!13722 = !DILocation(line: 83, column: 13, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13715, file: !2670, line: 83, column: 6)
!13724 = !DILocation(line: 83, column: 25, scope: !13723)
!13725 = !DILocation(line: 83, column: 6, scope: !13723)
!13726 = !DILocation(line: 83, column: 30, scope: !13723)
!13727 = !DILocation(line: 83, column: 6, scope: !13715)
!13728 = !DILocation(line: 90, column: 10, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13723, file: !2670, line: 83, column: 43)
!13730 = !DILocation(line: 90, column: 3, scope: !13729)
!13731 = !DILocation(line: 93, column: 1, scope: !13715)
!13732 = distinct !DISubprogram(name: "z_waitq_head", scope: !12763, file: !12763, line: 52, type: !13733, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13735)
!13733 = !DISubroutineType(types: !13734)
!13734 = !{!2588, !2605}
!13735 = !{!13736}
!13736 = !DILocalVariable(name: "w", arg: 1, scope: !13732, file: !12763, line: 52, type: !2605)
!13737 = !DILocation(line: 0, scope: !13732)
!13738 = !DILocation(line: 54, column: 52, scope: !13732)
!13739 = !DILocation(line: 54, column: 28, scope: !13732)
!13740 = !DILocation(line: 54, column: 9, scope: !13732)
!13741 = !DILocation(line: 54, column: 2, scope: !13732)
!13742 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !230, file: !230, line: 294, type: !13743, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13745)
!13743 = !DISubroutineType(types: !13744)
!13744 = !{!2573, !13559}
!13745 = !{!13746}
!13746 = !DILocalVariable(name: "list", arg: 1, scope: !13742, file: !230, line: 294, type: !13559)
!13747 = !DILocation(line: 0, scope: !13742)
!13748 = !DILocation(line: 296, column: 9, scope: !13742)
!13749 = !DILocation(line: 296, column: 49, scope: !13742)
!13750 = !DILocation(line: 296, column: 2, scope: !13742)
!13751 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !230, file: !230, line: 266, type: !13752, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13754)
!13752 = !DISubroutineType(types: !13753)
!13753 = !{!131, !13559}
!13754 = !{!13755}
!13755 = !DILocalVariable(name: "list", arg: 1, scope: !13751, file: !230, line: 266, type: !13559)
!13756 = !DILocation(line: 0, scope: !13751)
!13757 = !DILocation(line: 268, column: 15, scope: !13751)
!13758 = !DILocation(line: 268, column: 20, scope: !13751)
!13759 = !DILocation(line: 268, column: 2, scope: !13751)
!13760 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12422, file: !12422, line: 206, type: !13707, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13761)
!13761 = !{!13762, !13763}
!13762 = !DILocalVariable(name: "prio1", arg: 1, scope: !13760, file: !12422, line: 206, type: !111)
!13763 = !DILocalVariable(name: "prio2", arg: 2, scope: !13760, file: !12422, line: 206, type: !111)
!13764 = !DILocation(line: 0, scope: !13760)
!13765 = !DILocation(line: 208, column: 15, scope: !13760)
!13766 = !DILocation(line: 208, column: 2, scope: !13760)
!13767 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12422, file: !12422, line: 186, type: !881, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13768)
!13768 = !{!13769}
!13769 = !DILocalVariable(name: "prio", arg: 1, scope: !13767, file: !12422, line: 186, type: !111)
!13770 = !DILocation(line: 0, scope: !13767)
!13771 = !DILocation(line: 188, column: 9, scope: !13767)
!13772 = !DILocation(line: 188, column: 2, scope: !13767)
!13773 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12422, file: !12422, line: 181, type: !13774, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13776)
!13774 = !DISubroutineType(types: !13775)
!13775 = !{!131, !111}
!13776 = !{!13777}
!13777 = !DILocalVariable(name: "prio", arg: 1, scope: !13773, file: !12422, line: 181, type: !111)
!13778 = !DILocation(line: 0, scope: !13773)
!13779 = !DILocation(line: 183, column: 14, scope: !13773)
!13780 = !DILocation(line: 183, column: 2, scope: !13773)
!13781 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2670, file: !2670, line: 201, type: !13528, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13782)
!13782 = !{!13783, !13784, !13785, !13786}
!13783 = !DILocalVariable(name: "mutex", arg: 1, scope: !13781, file: !2670, line: 201, type: !13530)
!13784 = !DILocalVariable(name: "new_owner", scope: !13781, file: !2670, line: 203, type: !2588)
!13785 = !DILocalVariable(name: "key", scope: !13781, file: !2670, line: 242, type: !13580)
!13786 = !DILabel(scope: !13781, name: "k_mutex_unlock_return", file: !2670, line: 270)
!13787 = !DILocation(line: 0, scope: !13781)
!13788 = !DILocation(line: 209, column: 2, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13781, file: !2670, line: 209, column: 2)
!13790 = !DILocation(line: 209, column: 2, scope: !13781)
!13791 = !DILocation(line: 217, column: 2, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13781, file: !2670, line: 217, column: 2)
!13793 = !DILocation(line: 217, column: 2, scope: !13781)
!13794 = !DILocation(line: 237, column: 13, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13781, file: !2670, line: 237, column: 6)
!13796 = !DILocation(line: 237, column: 24, scope: !13795)
!13797 = !DILocation(line: 237, column: 6, scope: !13781)
!13798 = !DILocation(line: 238, column: 20, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13795, file: !2670, line: 237, column: 30)
!13800 = !DILocation(line: 239, column: 3, scope: !13799)
!13801 = !DILocation(line: 0, scope: !13591, inlinedAt: !13802)
!13802 = distinct !DILocation(line: 242, column: 25, scope: !13781)
!13803 = !DILocation(line: 55, column: 2, scope: !13600, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 145, column: 10, scope: !13591, inlinedAt: !13802)
!13805 = !DILocation(line: 0, scope: !13600, inlinedAt: !13804)
!13806 = !DILocation(line: 244, column: 34, scope: !13781)
!13807 = !DILocation(line: 244, column: 2, scope: !13781)
!13808 = !DILocation(line: 247, column: 44, scope: !13781)
!13809 = !DILocation(line: 247, column: 14, scope: !13781)
!13810 = !DILocation(line: 249, column: 15, scope: !13781)
!13811 = !DILocation(line: 254, column: 16, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13781, file: !2670, line: 254, column: 6)
!13813 = !DILocation(line: 254, column: 6, scope: !13781)
!13814 = !DILocation(line: 260, column: 44, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13812, file: !2670, line: 254, column: 25)
!13816 = !DILocation(line: 260, column: 28, scope: !13815)
!13817 = !DILocation(line: 260, column: 26, scope: !13815)
!13818 = !DILocalVariable(name: "thread", arg: 1, scope: !13819, file: !12442, line: 65, type: !2588)
!13819 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12442, file: !12442, line: 65, type: !13820, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !13822)
!13820 = !DISubroutineType(types: !13821)
!13821 = !{null, !2588, !32}
!13822 = !{!13818, !13823}
!13823 = !DILocalVariable(name: "value", arg: 2, scope: !13819, file: !12442, line: 65, type: !32)
!13824 = !DILocation(line: 0, scope: !13819, inlinedAt: !13825)
!13825 = distinct !DILocation(line: 261, column: 3, scope: !13815)
!13826 = !DILocation(line: 67, column: 15, scope: !13819, inlinedAt: !13825)
!13827 = !DILocation(line: 67, column: 33, scope: !13819, inlinedAt: !13825)
!13828 = !DILocation(line: 262, column: 3, scope: !13815)
!13829 = !DILocation(line: 263, column: 3, scope: !13815)
!13830 = !DILocation(line: 264, column: 2, scope: !13815)
!13831 = !DILocation(line: 265, column: 21, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13812, file: !2670, line: 264, column: 9)
!13833 = !DILocation(line: 0, scope: !13623, inlinedAt: !13834)
!13834 = distinct !DILocation(line: 266, column: 3, scope: !13832)
!13835 = !DILocation(line: 0, scope: !13631, inlinedAt: !13836)
!13836 = distinct !DILocation(line: 215, column: 2, scope: !13623, inlinedAt: !13834)
!13837 = !DILocation(line: 95, column: 2, scope: !13631, inlinedAt: !13836)
!13838 = !DILocation(line: 274, column: 1, scope: !13781)
!13839 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2776, file: !2776, line: 93, type: !13840, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13842)
!13840 = !DISubroutineType(types: !13841)
!13841 = !{!413, !2676, !2676}
!13842 = !{!13843, !13844, !13845, !13846}
!13843 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13839, file: !2776, line: 93, type: !2676)
!13844 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13839, file: !2776, line: 94, type: !2676)
!13845 = !DILocalVariable(name: "b1", scope: !13839, file: !2776, line: 97, type: !413)
!13846 = !DILocalVariable(name: "b2", scope: !13839, file: !2776, line: 98, type: !413)
!13847 = !DILocation(line: 0, scope: !13839)
!13848 = !DILocation(line: 97, column: 30, scope: !13839)
!13849 = !DILocation(line: 98, column: 30, scope: !13839)
!13850 = !DILocation(line: 100, column: 9, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13839, file: !2776, line: 100, column: 6)
!13852 = !DILocation(line: 100, column: 6, scope: !13839)
!13853 = !DILocation(line: 125, column: 1, scope: !13839)
!13854 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2776, file: !2776, line: 428, type: !13855, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13857)
!13855 = !DISubroutineType(types: !13856)
!13856 = !{null, !2676}
!13857 = !{!13858}
!13858 = !DILocalVariable(name: "curr", arg: 1, scope: !13854, file: !2776, line: 428, type: !2676)
!13859 = !DILocation(line: 0, scope: !13854)
!13860 = !DILocation(line: 434, column: 6, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13854, file: !2776, line: 434, column: 6)
!13862 = !DILocation(line: 434, column: 23, scope: !13861)
!13863 = !DILocation(line: 434, column: 6, scope: !13854)
!13864 = !DILocation(line: 435, column: 50, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !13861, file: !2776, line: 434, column: 29)
!13866 = !DILocation(line: 435, column: 48, scope: !13865)
!13867 = !DILocation(line: 435, column: 29, scope: !13865)
!13868 = !DILocation(line: 436, column: 24, scope: !13865)
!13869 = !DILocation(line: 436, column: 3, scope: !13865)
!13870 = !DILocation(line: 437, column: 2, scope: !13865)
!13871 = !DILocation(line: 438, column: 1, scope: !13854)
!13872 = distinct !DISubprogram(name: "slice_time", scope: !2776, file: !2776, line: 407, type: !13873, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13875)
!13873 = !DISubroutineType(types: !13874)
!13874 = !{!111, !2676}
!13875 = !{!13876, !13877}
!13876 = !DILocalVariable(name: "curr", arg: 1, scope: !13872, file: !2776, line: 407, type: !2676)
!13877 = !DILocalVariable(name: "ret", scope: !13872, file: !2776, line: 409, type: !111)
!13878 = !DILocation(line: 0, scope: !13872)
!13879 = !DILocation(line: 409, column: 12, scope: !13872)
!13880 = !DILocation(line: 416, column: 2, scope: !13872)
!13881 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2776, file: !2776, line: 440, type: !13882, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13884)
!13882 = !DISubroutineType(types: !13883)
!13883 = !{null, !413, !111}
!13884 = !{!13885, !13886, !13887, !13893}
!13885 = !DILocalVariable(name: "slice", arg: 1, scope: !13881, file: !2776, line: 440, type: !413)
!13886 = !DILocalVariable(name: "prio", arg: 2, scope: !13881, file: !2776, line: 440, type: !111)
!13887 = !DILocalVariable(name: "__i", scope: !13888, file: !2776, line: 442, type: !13889)
!13888 = distinct !DILexicalBlock(scope: !13881, file: !2776, line: 442, column: 2)
!13889 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !246, line: 106, baseType: !13890)
!13890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !246, line: 32, size: 32, elements: !13891)
!13891 = !{!13892}
!13892 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13890, file: !246, line: 33, baseType: !111, size: 32)
!13893 = !DILocalVariable(name: "__key", scope: !13888, file: !2776, line: 442, type: !13889)
!13894 = !DILocation(line: 0, scope: !13881)
!13895 = !DILocation(line: 0, scope: !13888)
!13896 = !DILocalVariable(name: "l", arg: 1, scope: !13897, file: !246, line: 136, type: !13900)
!13897 = distinct !DISubprogram(name: "k_spin_lock", scope: !246, file: !246, line: 136, type: !13898, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13901)
!13898 = !DISubroutineType(types: !13899)
!13899 = !{!13889, !13900}
!13900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 32)
!13901 = !{!13896, !13902}
!13902 = !DILocalVariable(name: "k", scope: !13897, file: !246, line: 139, type: !13889)
!13903 = !DILocation(line: 0, scope: !13897, inlinedAt: !13904)
!13904 = distinct !DILocation(line: 442, column: 2, scope: !13888)
!13905 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !13910)
!13906 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7659, file: !7659, line: 42, type: !9702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13907)
!13907 = !{!13908, !13909}
!13908 = !DILocalVariable(name: "key", scope: !13906, file: !7659, line: 44, type: !32)
!13909 = !DILocalVariable(name: "tmp", scope: !13906, file: !7659, line: 53, type: !32)
!13910 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !13904)
!13911 = !{i64 2886372}
!13912 = !DILocation(line: 0, scope: !13906, inlinedAt: !13910)
!13913 = !DILocation(line: 443, column: 29, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13915, file: !2776, line: 442, column: 26)
!13915 = distinct !DILexicalBlock(scope: !13888, file: !2776, line: 442, column: 2)
!13916 = !DILocation(line: 444, column: 17, scope: !13914)
!13917 = !DILocation(line: 445, column: 51, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13914, file: !2776, line: 445, column: 7)
!13919 = !DILocation(line: 445, column: 7, scope: !13914)
!13920 = !DILocation(line: 0, scope: !13914)
!13921 = !DILocation(line: 451, column: 18, scope: !13914)
!13922 = !DILocation(line: 452, column: 3, scope: !13914)
!13923 = !DILocalVariable(name: "key", arg: 2, scope: !13924, file: !246, line: 190, type: !13889)
!13924 = distinct !DISubprogram(name: "k_spin_unlock", scope: !246, file: !246, line: 189, type: !13925, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13927)
!13925 = !DISubroutineType(types: !13926)
!13926 = !{null, !13900, !13889}
!13927 = !{!13928, !13923}
!13928 = !DILocalVariable(name: "l", arg: 1, scope: !13924, file: !246, line: 189, type: !13900)
!13929 = !DILocation(line: 0, scope: !13924, inlinedAt: !13930)
!13930 = distinct !DILocation(line: 442, column: 2, scope: !13915)
!13931 = !DILocalVariable(name: "key", arg: 1, scope: !13932, file: !7659, line: 84, type: !32)
!13932 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13933)
!13933 = !{!13931}
!13934 = !DILocation(line: 0, scope: !13932, inlinedAt: !13935)
!13935 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !13930)
!13936 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !13935)
!13937 = !{i64 2887189}
!13938 = !DILocation(line: 454, column: 1, scope: !13881)
!13939 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3858, file: !3858, line: 389, type: !13940, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13942)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{!158, !158}
!13942 = !{!13943}
!13943 = !DILocalVariable(name: "t", arg: 1, scope: !13939, file: !3858, line: 389, type: !158)
!13944 = !DILocation(line: 0, scope: !13939)
!13945 = !DILocalVariable(name: "t", arg: 1, scope: !13946, file: !3858, line: 102, type: !207)
!13946 = distinct !DISubprogram(name: "z_tmcvt", scope: !3858, file: !3858, line: 102, type: !3866, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13947)
!13947 = !{!13945, !13948, !13949, !13950, !13951, !13952, !13953, !13954, !13955, !13956, !13957}
!13948 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13946, file: !3858, line: 102, type: !158)
!13949 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13946, file: !3858, line: 103, type: !158)
!13950 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13946, file: !3858, line: 103, type: !131)
!13951 = !DILocalVariable(name: "result32", arg: 5, scope: !13946, file: !3858, line: 104, type: !131)
!13952 = !DILocalVariable(name: "round_up", arg: 6, scope: !13946, file: !3858, line: 104, type: !131)
!13953 = !DILocalVariable(name: "round_off", arg: 7, scope: !13946, file: !3858, line: 105, type: !131)
!13954 = !DILocalVariable(name: "mul_ratio", scope: !13946, file: !3858, line: 107, type: !131)
!13955 = !DILocalVariable(name: "div_ratio", scope: !13946, file: !3858, line: 109, type: !131)
!13956 = !DILocalVariable(name: "off", scope: !13946, file: !3858, line: 116, type: !207)
!13957 = !DILocalVariable(name: "rdivisor", scope: !13958, file: !3858, line: 119, type: !158)
!13958 = distinct !DILexicalBlock(scope: !13959, file: !3858, line: 118, column: 18)
!13959 = distinct !DILexicalBlock(scope: !13946, file: !3858, line: 118, column: 6)
!13960 = !DILocation(line: 0, scope: !13946, inlinedAt: !13961)
!13961 = distinct !DILocation(line: 392, column: 9, scope: !13939)
!13962 = !DILocation(line: 143, column: 25, scope: !13963, inlinedAt: !13961)
!13963 = distinct !DILexicalBlock(scope: !13964, file: !3858, line: 142, column: 17)
!13964 = distinct !DILexicalBlock(scope: !13965, file: !3858, line: 142, column: 7)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !3858, line: 141, column: 24)
!13966 = distinct !DILexicalBlock(scope: !13967, file: !3858, line: 141, column: 13)
!13967 = distinct !DILexicalBlock(scope: !13946, file: !3858, line: 134, column: 6)
!13968 = !DILocation(line: 392, column: 2, scope: !13939)
!13969 = distinct !DISubprogram(name: "z_time_slice", scope: !2776, file: !2776, line: 502, type: !12379, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !13970)
!13970 = !{!13971, !13972}
!13971 = !DILocalVariable(name: "ticks", arg: 1, scope: !13969, file: !2776, line: 502, type: !111)
!13972 = !DILocalVariable(name: "key", scope: !13969, file: !2776, line: 511, type: !13889)
!13973 = !DILocation(line: 0, scope: !13969)
!13974 = !DILocation(line: 0, scope: !13897, inlinedAt: !13975)
!13975 = distinct !DILocation(line: 511, column: 25, scope: !13969)
!13976 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !13977)
!13977 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !13975)
!13978 = !DILocation(line: 0, scope: !13906, inlinedAt: !13977)
!13979 = !DILocation(line: 514, column: 6, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13969, file: !2776, line: 514, column: 6)
!13981 = !DILocation(line: 514, column: 25, scope: !13980)
!13982 = !DILocation(line: 514, column: 22, scope: !13980)
!13983 = !DILocation(line: 514, column: 6, scope: !13969)
!13984 = !DILocation(line: 515, column: 3, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13980, file: !2776, line: 514, column: 35)
!13986 = !DILocation(line: 0, scope: !13924, inlinedAt: !13987)
!13987 = distinct !DILocation(line: 516, column: 3, scope: !13985)
!13988 = !DILocation(line: 0, scope: !13932, inlinedAt: !13989)
!13989 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !13987)
!13990 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !13989)
!13991 = !DILocation(line: 517, column: 3, scope: !13985)
!13992 = !DILocation(line: 519, column: 18, scope: !13969)
!13993 = !DILocation(line: 522, column: 6, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13969, file: !2776, line: 522, column: 6)
!13995 = !DILocation(line: 522, column: 27, scope: !13994)
!13996 = !DILocation(line: 522, column: 30, scope: !13994)
!13997 = !DILocation(line: 522, column: 6, scope: !13969)
!13998 = !DILocation(line: 523, column: 30, scope: !13999)
!13999 = distinct !DILexicalBlock(scope: !14000, file: !2776, line: 523, column: 7)
!14000 = distinct !DILexicalBlock(scope: !13994, file: !2776, line: 522, column: 51)
!14001 = !DILocation(line: 523, column: 13, scope: !13999)
!14002 = !DILocation(line: 523, column: 7, scope: !14000)
!14003 = !DILocation(line: 530, column: 10, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !13999, file: !2776, line: 523, column: 43)
!14005 = !DILocation(line: 531, column: 3, scope: !14004)
!14006 = !DILocation(line: 532, column: 30, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !13999, file: !2776, line: 531, column: 10)
!14008 = !DILocation(line: 535, column: 29, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !13994, file: !2776, line: 534, column: 9)
!14010 = !DILocation(line: 0, scope: !13924, inlinedAt: !14011)
!14011 = distinct !DILocation(line: 537, column: 2, scope: !13969)
!14012 = !DILocation(line: 0, scope: !13932, inlinedAt: !14013)
!14013 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14011)
!14014 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14013)
!14015 = !DILocation(line: 538, column: 1, scope: !13969)
!14016 = distinct !DISubprogram(name: "sliceable", scope: !2776, file: !2776, line: 468, type: !14017, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14019)
!14017 = !DISubroutineType(types: !14018)
!14018 = !{!131, !2676}
!14019 = !{!14020, !14021}
!14020 = !DILocalVariable(name: "thread", arg: 1, scope: !14016, file: !2776, line: 468, type: !2676)
!14021 = !DILocalVariable(name: "ret", scope: !14016, file: !2776, line: 470, type: !131)
!14022 = !DILocation(line: 0, scope: !14016)
!14023 = !DILocation(line: 470, column: 13, scope: !14016)
!14024 = !DILocation(line: 471, column: 3, scope: !14016)
!14025 = !DILocation(line: 471, column: 7, scope: !14016)
!14026 = !DILocation(line: 472, column: 3, scope: !14016)
!14027 = !DILocation(line: 472, column: 37, scope: !14016)
!14028 = !DILocation(line: 472, column: 24, scope: !14016)
!14029 = !DILocation(line: 472, column: 43, scope: !14016)
!14030 = !DILocation(line: 472, column: 7, scope: !14016)
!14031 = !DILocation(line: 473, column: 3, scope: !14016)
!14032 = !DILocation(line: 473, column: 7, scope: !14016)
!14033 = !DILocation(line: 473, column: 6, scope: !14016)
!14034 = !DILocation(line: 479, column: 2, scope: !14016)
!14035 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2776, file: !2776, line: 482, type: !14036, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14038)
!14036 = !DISubroutineType(types: !14037)
!14037 = !{!13889, !13889}
!14038 = !{!14039, !14040}
!14039 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14035, file: !2776, line: 482, type: !13889)
!14040 = !DILocalVariable(name: "curr", scope: !14035, file: !2776, line: 484, type: !2676)
!14041 = !DILocation(line: 0, scope: !14035)
!14042 = !DILocation(line: 484, column: 26, scope: !14035)
!14043 = !DILocation(line: 493, column: 7, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14035, file: !2776, line: 493, column: 6)
!14045 = !DILocation(line: 493, column: 6, scope: !14035)
!14046 = !DILocation(line: 494, column: 3, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14044, file: !2776, line: 493, column: 49)
!14048 = !DILocation(line: 495, column: 2, scope: !14047)
!14049 = !DILocation(line: 496, column: 2, scope: !14035)
!14050 = !DILocation(line: 499, column: 1, scope: !14035)
!14051 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12422, file: !12422, line: 106, type: !14017, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14052)
!14052 = !{!14053, !14054}
!14053 = !DILocalVariable(name: "thread", arg: 1, scope: !14051, file: !12422, line: 106, type: !2676)
!14054 = !DILocalVariable(name: "state", scope: !14051, file: !12422, line: 108, type: !128)
!14055 = !DILocation(line: 0, scope: !14051)
!14056 = !DILocation(line: 108, column: 31, scope: !14051)
!14057 = !DILocation(line: 110, column: 16, scope: !14051)
!14058 = !DILocation(line: 111, column: 41, scope: !14051)
!14059 = !DILocation(line: 110, column: 2, scope: !14051)
!14060 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2776, file: !2776, line: 393, type: !13855, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14061)
!14061 = !{!14062}
!14062 = !DILocalVariable(name: "thread", arg: 1, scope: !14060, file: !2776, line: 393, type: !2676)
!14063 = !DILocation(line: 0, scope: !14060)
!14064 = !DILocation(line: 395, column: 6, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14060, file: !2776, line: 395, column: 6)
!14066 = !DILocation(line: 395, column: 6, scope: !14060)
!14067 = !DILocalVariable(name: "thread", arg: 1, scope: !14068, file: !2776, line: 264, type: !2676)
!14068 = distinct !DISubprogram(name: "dequeue_thread", scope: !2776, file: !2776, line: 264, type: !13855, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14069)
!14069 = !{!14067}
!14070 = !DILocation(line: 0, scope: !14068, inlinedAt: !14071)
!14071 = distinct !DILocation(line: 396, column: 3, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14065, file: !2776, line: 395, column: 34)
!14073 = !DILocation(line: 266, column: 15, scope: !14068, inlinedAt: !14071)
!14074 = !DILocation(line: 266, column: 28, scope: !14068, inlinedAt: !14071)
!14075 = !DILocalVariable(name: "thread", arg: 1, scope: !14076, file: !2776, line: 232, type: !2676)
!14076 = distinct !DISubprogram(name: "runq_remove", scope: !2776, file: !2776, line: 232, type: !13855, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14077)
!14077 = !{!14075}
!14078 = !DILocation(line: 0, scope: !14076, inlinedAt: !14079)
!14079 = distinct !DILocation(line: 268, column: 3, scope: !14080, inlinedAt: !14071)
!14080 = distinct !DILexicalBlock(scope: !14081, file: !2776, line: 267, column: 35)
!14081 = distinct !DILexicalBlock(scope: !14068, file: !2776, line: 267, column: 6)
!14082 = !DILocation(line: 234, column: 2, scope: !14076, inlinedAt: !14079)
!14083 = !DILocation(line: 397, column: 2, scope: !14072)
!14084 = !DILocalVariable(name: "thread", arg: 1, scope: !14085, file: !2776, line: 250, type: !2676)
!14085 = distinct !DISubprogram(name: "queue_thread", scope: !2776, file: !2776, line: 250, type: !13855, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14086)
!14086 = !{!14084}
!14087 = !DILocation(line: 0, scope: !14085, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 398, column: 2, scope: !14060)
!14089 = !DILocation(line: 252, column: 15, scope: !14085, inlinedAt: !14088)
!14090 = !DILocation(line: 252, column: 28, scope: !14085, inlinedAt: !14088)
!14091 = !DILocalVariable(name: "thread", arg: 1, scope: !14092, file: !2776, line: 227, type: !2676)
!14092 = distinct !DISubprogram(name: "runq_add", scope: !2776, file: !2776, line: 227, type: !13855, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14093)
!14093 = !{!14091}
!14094 = !DILocation(line: 0, scope: !14092, inlinedAt: !14095)
!14095 = distinct !DILocation(line: 254, column: 3, scope: !14096, inlinedAt: !14088)
!14096 = distinct !DILexicalBlock(scope: !14097, file: !2776, line: 253, column: 35)
!14097 = distinct !DILexicalBlock(scope: !14085, file: !2776, line: 253, column: 6)
!14098 = !DILocalVariable(name: "pq", arg: 1, scope: !14099, file: !2776, line: 181, type: !14102)
!14099 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2776, file: !2776, line: 181, type: !14100, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14103)
!14100 = !DISubroutineType(types: !14101)
!14101 = !{null, !14102, !2676}
!14102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!14103 = !{!14098, !14104, !14105}
!14104 = !DILocalVariable(name: "thread", arg: 2, scope: !14099, file: !2776, line: 182, type: !2676)
!14105 = !DILocalVariable(name: "t", scope: !14099, file: !2776, line: 184, type: !2676)
!14106 = !DILocation(line: 0, scope: !14099, inlinedAt: !14107)
!14107 = distinct !DILocation(line: 229, column: 2, scope: !14092, inlinedAt: !14095)
!14108 = !DILocation(line: 188, column: 2, scope: !14109, inlinedAt: !14107)
!14109 = distinct !DILexicalBlock(scope: !14099, file: !2776, line: 188, column: 2)
!14110 = !DILocation(line: 188, column: 2, scope: !14111, inlinedAt: !14107)
!14111 = distinct !DILexicalBlock(scope: !14109, file: !2776, line: 188, column: 2)
!14112 = !DILocation(line: 0, scope: !14109, inlinedAt: !14107)
!14113 = !DILocation(line: 189, column: 7, scope: !14114, inlinedAt: !14107)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !2776, line: 189, column: 7)
!14115 = distinct !DILexicalBlock(scope: !14111, file: !2776, line: 188, column: 56)
!14116 = !DILocation(line: 189, column: 35, scope: !14114, inlinedAt: !14107)
!14117 = !DILocation(line: 189, column: 7, scope: !14115, inlinedAt: !14107)
!14118 = !DILocation(line: 191, column: 21, scope: !14119, inlinedAt: !14107)
!14119 = distinct !DILexicalBlock(scope: !14114, file: !2776, line: 189, column: 40)
!14120 = !DILocation(line: 190, column: 4, scope: !14119, inlinedAt: !14107)
!14121 = !DILocation(line: 192, column: 4, scope: !14119, inlinedAt: !14107)
!14122 = distinct !{!14122, !14108, !14123}
!14123 = !DILocation(line: 194, column: 2, scope: !14109, inlinedAt: !14107)
!14124 = !DILocation(line: 196, column: 37, scope: !14099, inlinedAt: !14107)
!14125 = !DILocation(line: 196, column: 2, scope: !14099, inlinedAt: !14107)
!14126 = !DILocation(line: 197, column: 1, scope: !14099, inlinedAt: !14107)
!14127 = !DILocation(line: 399, column: 25, scope: !14060)
!14128 = !DILocation(line: 399, column: 22, scope: !14060)
!14129 = !DILocation(line: 399, column: 2, scope: !14060)
!14130 = !DILocation(line: 400, column: 1, scope: !14060)
!14131 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12422, file: !12422, line: 136, type: !14017, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14132)
!14132 = !{!14133}
!14133 = !DILocalVariable(name: "thread", arg: 1, scope: !14131, file: !12422, line: 136, type: !2676)
!14134 = !DILocation(line: 0, scope: !14131)
!14135 = !DILocation(line: 138, column: 9, scope: !14131)
!14136 = !DILocation(line: 138, column: 2, scope: !14131)
!14137 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2776, file: !2776, line: 1137, type: !14100, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14138)
!14138 = !{!14139, !14140}
!14139 = !DILocalVariable(name: "pq", arg: 1, scope: !14137, file: !2776, line: 1137, type: !14102)
!14140 = !DILocalVariable(name: "thread", arg: 2, scope: !14137, file: !2776, line: 1137, type: !2676)
!14141 = !DILocation(line: 0, scope: !14137)
!14142 = !DILocation(line: 1141, column: 33, scope: !14137)
!14143 = !DILocation(line: 1141, column: 2, scope: !14137)
!14144 = !DILocation(line: 1142, column: 1, scope: !14137)
!14145 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !230, file: !230, line: 294, type: !14146, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14148)
!14146 = !DISubroutineType(types: !14147)
!14147 = !{!2772, !14102}
!14148 = !{!14149}
!14149 = !DILocalVariable(name: "list", arg: 1, scope: !14145, file: !230, line: 294, type: !14102)
!14150 = !DILocation(line: 0, scope: !14145)
!14151 = !DILocation(line: 296, column: 9, scope: !14145)
!14152 = !DILocation(line: 296, column: 49, scope: !14145)
!14153 = !DILocation(line: 296, column: 2, scope: !14145)
!14154 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !230, file: !230, line: 443, type: !14155, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14157)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{null, !2772, !2772}
!14157 = !{!14158, !14159, !14160}
!14158 = !DILocalVariable(name: "successor", arg: 1, scope: !14154, file: !230, line: 443, type: !2772)
!14159 = !DILocalVariable(name: "node", arg: 2, scope: !14154, file: !230, line: 443, type: !2772)
!14160 = !DILocalVariable(name: "prev", scope: !14154, file: !230, line: 445, type: !14161)
!14161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2772)
!14162 = !DILocation(line: 0, scope: !14154)
!14163 = !DILocation(line: 445, column: 39, scope: !14154)
!14164 = !DILocation(line: 447, column: 8, scope: !14154)
!14165 = !DILocation(line: 447, column: 13, scope: !14154)
!14166 = !DILocation(line: 448, column: 8, scope: !14154)
!14167 = !DILocation(line: 448, column: 13, scope: !14154)
!14168 = !DILocation(line: 449, column: 8, scope: !14154)
!14169 = !DILocation(line: 449, column: 13, scope: !14154)
!14170 = !DILocation(line: 450, column: 18, scope: !14154)
!14171 = !DILocation(line: 451, column: 1, scope: !14154)
!14172 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !230, file: !230, line: 341, type: !14173, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14175)
!14173 = !DISubroutineType(types: !14174)
!14174 = !{!2772, !14102, !2772}
!14175 = !{!14176, !14177}
!14176 = !DILocalVariable(name: "list", arg: 1, scope: !14172, file: !230, line: 341, type: !14102)
!14177 = !DILocalVariable(name: "node", arg: 2, scope: !14172, file: !230, line: 342, type: !2772)
!14178 = !DILocation(line: 0, scope: !14172)
!14179 = !DILocation(line: 344, column: 15, scope: !14172)
!14180 = !DILocation(line: 344, column: 9, scope: !14172)
!14181 = !DILocation(line: 344, column: 26, scope: !14172)
!14182 = !DILocation(line: 344, column: 2, scope: !14172)
!14183 = distinct !DISubprogram(name: "sys_dlist_append", scope: !230, file: !230, line: 404, type: !14184, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14186)
!14184 = !DISubroutineType(types: !14185)
!14185 = !{null, !14102, !2772}
!14186 = !{!14187, !14188, !14189}
!14187 = !DILocalVariable(name: "list", arg: 1, scope: !14183, file: !230, line: 404, type: !14102)
!14188 = !DILocalVariable(name: "node", arg: 2, scope: !14183, file: !230, line: 404, type: !2772)
!14189 = !DILocalVariable(name: "tail", scope: !14183, file: !230, line: 406, type: !14161)
!14190 = !DILocation(line: 0, scope: !14183)
!14191 = !DILocation(line: 406, column: 34, scope: !14183)
!14192 = !DILocation(line: 408, column: 8, scope: !14183)
!14193 = !DILocation(line: 408, column: 13, scope: !14183)
!14194 = !DILocation(line: 409, column: 8, scope: !14183)
!14195 = !DILocation(line: 409, column: 13, scope: !14183)
!14196 = !DILocation(line: 411, column: 8, scope: !14183)
!14197 = !DILocation(line: 411, column: 13, scope: !14183)
!14198 = !DILocation(line: 412, column: 13, scope: !14183)
!14199 = !DILocation(line: 413, column: 1, scope: !14183)
!14200 = distinct !DISubprogram(name: "update_cache", scope: !2776, file: !2776, line: 559, type: !12379, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14201)
!14201 = !{!14202, !14203}
!14202 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14200, file: !2776, line: 559, type: !111)
!14203 = !DILocalVariable(name: "thread", scope: !14200, file: !2776, line: 562, type: !2676)
!14204 = !DILocation(line: 0, scope: !14200)
!14205 = !DILocation(line: 239, column: 9, scope: !14206, inlinedAt: !14209)
!14206 = distinct !DISubprogram(name: "runq_best", scope: !2776, file: !2776, line: 237, type: !14207, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !247)
!14207 = !DISubroutineType(types: !14208)
!14208 = !{!2676}
!14209 = distinct !DILocation(line: 314, column: 28, scope: !14210, inlinedAt: !14213)
!14210 = distinct !DISubprogram(name: "next_up", scope: !2776, file: !2776, line: 312, type: !14207, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14211)
!14211 = !{!14212}
!14212 = !DILocalVariable(name: "thread", scope: !14210, file: !2776, line: 314, type: !2676)
!14213 = distinct !DILocation(line: 562, column: 28, scope: !14200)
!14214 = !DILocation(line: 0, scope: !14210, inlinedAt: !14213)
!14215 = !DILocation(line: 340, column: 17, scope: !14210, inlinedAt: !14213)
!14216 = !DILocation(line: 340, column: 9, scope: !14210, inlinedAt: !14213)
!14217 = !DILocalVariable(name: "thread", arg: 1, scope: !14218, file: !2776, line: 127, type: !2676)
!14218 = distinct !DISubprogram(name: "should_preempt", scope: !2776, file: !2776, line: 127, type: !14219, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14221)
!14219 = !DISubroutineType(types: !14220)
!14220 = !{!131, !2676, !111}
!14221 = !{!14217, !14222}
!14222 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14218, file: !2776, line: 128, type: !111)
!14223 = !DILocation(line: 0, scope: !14218, inlinedAt: !14224)
!14224 = distinct !DILocation(line: 564, column: 6, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14200, file: !2776, line: 564, column: 6)
!14226 = !DILocation(line: 133, column: 17, scope: !14227, inlinedAt: !14224)
!14227 = distinct !DILexicalBlock(scope: !14218, file: !2776, line: 133, column: 6)
!14228 = !DILocation(line: 0, scope: !14225)
!14229 = !DILocation(line: 133, column: 6, scope: !14218, inlinedAt: !14224)
!14230 = !DILocation(line: 140, column: 6, scope: !14231, inlinedAt: !14224)
!14231 = distinct !DILexicalBlock(scope: !14218, file: !2776, line: 140, column: 6)
!14232 = !DILocation(line: 140, column: 6, scope: !14218, inlinedAt: !14224)
!14233 = !DILocation(line: 150, column: 9, scope: !14234, inlinedAt: !14224)
!14234 = distinct !DILexicalBlock(scope: !14218, file: !2776, line: 149, column: 6)
!14235 = !DILocation(line: 149, column: 6, scope: !14218, inlinedAt: !14224)
!14236 = !DILocation(line: 157, column: 6, scope: !14237, inlinedAt: !14224)
!14237 = distinct !DILexicalBlock(scope: !14218, file: !2776, line: 157, column: 6)
!14238 = !DILocation(line: 564, column: 6, scope: !14200)
!14239 = !DILocation(line: 566, column: 14, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !2776, line: 566, column: 7)
!14241 = distinct !DILexicalBlock(scope: !14225, file: !2776, line: 564, column: 42)
!14242 = !DILocation(line: 566, column: 7, scope: !14241)
!14243 = !DILocation(line: 567, column: 4, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14240, file: !2776, line: 566, column: 27)
!14245 = !DILocation(line: 568, column: 3, scope: !14244)
!14246 = !DILocation(line: 585, column: 1, scope: !14200)
!14247 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2776, file: !2776, line: 1144, type: !14248, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14250)
!14248 = !DISubroutineType(types: !14249)
!14249 = !{!2676, !14102}
!14250 = !{!14251, !14252, !14253}
!14251 = !DILocalVariable(name: "pq", arg: 1, scope: !14247, file: !2776, line: 1144, type: !14102)
!14252 = !DILocalVariable(name: "thread", scope: !14247, file: !2776, line: 1146, type: !2676)
!14253 = !DILocalVariable(name: "n", scope: !14247, file: !2776, line: 1147, type: !2772)
!14254 = !DILocation(line: 0, scope: !14247)
!14255 = !DILocation(line: 1147, column: 19, scope: !14247)
!14256 = !DILocation(line: 1152, column: 2, scope: !14247)
!14257 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12422, file: !12422, line: 115, type: !14017, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14258)
!14258 = !{!14259}
!14259 = !DILocalVariable(name: "thread", arg: 1, scope: !14257, file: !12422, line: 115, type: !2676)
!14260 = !DILocation(line: 0, scope: !14257)
!14261 = !DILocation(line: 117, column: 46, scope: !14257)
!14262 = !DILocation(line: 117, column: 10, scope: !14257)
!14263 = !DILocation(line: 117, column: 9, scope: !14257)
!14264 = !DILocation(line: 117, column: 2, scope: !14257)
!14265 = distinct !DISubprogram(name: "is_preempt", scope: !2776, file: !2776, line: 62, type: !13873, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14266)
!14266 = !{!14267}
!14267 = !DILocalVariable(name: "thread", arg: 1, scope: !14265, file: !2776, line: 62, type: !2676)
!14268 = !DILocation(line: 0, scope: !14265)
!14269 = !DILocation(line: 65, column: 22, scope: !14265)
!14270 = !DILocation(line: 65, column: 30, scope: !14265)
!14271 = !DILocation(line: 65, column: 2, scope: !14265)
!14272 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12815, file: !12815, line: 35, type: !14273, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14277)
!14273 = !DISubroutineType(types: !14274)
!14274 = !{!131, !14275}
!14275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14276, size: 32)
!14276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2727)
!14277 = !{!14278}
!14278 = !DILocalVariable(name: "to", arg: 1, scope: !14272, file: !12815, line: 35, type: !14275)
!14279 = !DILocation(line: 0, scope: !14272)
!14280 = !DILocation(line: 37, column: 35, scope: !14272)
!14281 = !DILocation(line: 37, column: 10, scope: !14272)
!14282 = !DILocation(line: 37, column: 9, scope: !14272)
!14283 = !DILocation(line: 37, column: 2, scope: !14272)
!14284 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !230, file: !230, line: 225, type: !14285, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14289)
!14285 = !DISubroutineType(types: !14286)
!14286 = !{!131, !14287}
!14287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14288, size: 32)
!14288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2686)
!14289 = !{!14290}
!14290 = !DILocalVariable(name: "node", arg: 1, scope: !14284, file: !230, line: 225, type: !14287)
!14291 = !DILocation(line: 0, scope: !14284)
!14292 = !DILocation(line: 227, column: 15, scope: !14284)
!14293 = !DILocation(line: 227, column: 20, scope: !14284)
!14294 = !DILocation(line: 227, column: 2, scope: !14284)
!14295 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !230, file: !230, line: 325, type: !14173, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14296)
!14296 = !{!14297, !14298}
!14297 = !DILocalVariable(name: "list", arg: 1, scope: !14295, file: !230, line: 325, type: !14102)
!14298 = !DILocalVariable(name: "node", arg: 2, scope: !14295, file: !230, line: 326, type: !2772)
!14299 = !DILocation(line: 0, scope: !14295)
!14300 = !DILocation(line: 328, column: 24, scope: !14295)
!14301 = !DILocation(line: 328, column: 15, scope: !14295)
!14302 = !DILocation(line: 328, column: 9, scope: !14295)
!14303 = !DILocation(line: 328, column: 45, scope: !14295)
!14304 = !DILocation(line: 328, column: 2, scope: !14295)
!14305 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !230, file: !230, line: 266, type: !14306, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14308)
!14306 = !DISubroutineType(types: !14307)
!14307 = !{!131, !14102}
!14308 = !{!14309}
!14309 = !DILocalVariable(name: "list", arg: 1, scope: !14305, file: !230, line: 266, type: !14102)
!14310 = !DILocation(line: 0, scope: !14305)
!14311 = !DILocation(line: 268, column: 15, scope: !14305)
!14312 = !DILocation(line: 268, column: 20, scope: !14305)
!14313 = !DILocation(line: 268, column: 2, scope: !14305)
!14314 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !230, file: !230, line: 496, type: !14315, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14317)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{null, !2772}
!14317 = !{!14318, !14319, !14320}
!14318 = !DILocalVariable(name: "node", arg: 1, scope: !14314, file: !230, line: 496, type: !2772)
!14319 = !DILocalVariable(name: "prev", scope: !14314, file: !230, line: 498, type: !14161)
!14320 = !DILocalVariable(name: "next", scope: !14314, file: !230, line: 499, type: !14161)
!14321 = !DILocation(line: 0, scope: !14314)
!14322 = !DILocation(line: 498, column: 34, scope: !14314)
!14323 = !DILocation(line: 499, column: 34, scope: !14314)
!14324 = !DILocation(line: 501, column: 8, scope: !14314)
!14325 = !DILocation(line: 501, column: 13, scope: !14314)
!14326 = !DILocation(line: 502, column: 8, scope: !14314)
!14327 = !DILocation(line: 502, column: 13, scope: !14314)
!14328 = !DILocation(line: 503, column: 2, scope: !14314)
!14329 = !DILocation(line: 504, column: 1, scope: !14314)
!14330 = distinct !DISubprogram(name: "sys_dnode_init", scope: !230, file: !230, line: 211, type: !14315, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14331)
!14331 = !{!14332}
!14332 = !DILocalVariable(name: "node", arg: 1, scope: !14330, file: !230, line: 211, type: !2772)
!14333 = !DILocation(line: 0, scope: !14330)
!14334 = !DILocation(line: 213, column: 8, scope: !14330)
!14335 = !DILocation(line: 213, column: 13, scope: !14330)
!14336 = !DILocation(line: 214, column: 8, scope: !14330)
!14337 = !DILocation(line: 214, column: 13, scope: !14330)
!14338 = !DILocation(line: 215, column: 1, scope: !14330)
!14339 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12422, file: !12422, line: 131, type: !14340, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14342)
!14340 = !DISubroutineType(types: !14341)
!14341 = !{!131, !2676, !158}
!14342 = !{!14343, !14344}
!14343 = !DILocalVariable(name: "thread", arg: 1, scope: !14339, file: !12422, line: 131, type: !2676)
!14344 = !DILocalVariable(name: "state", arg: 2, scope: !14339, file: !12422, line: 131, type: !158)
!14345 = !DILocation(line: 0, scope: !14339)
!14346 = !DILocation(line: 133, column: 23, scope: !14339)
!14347 = !DILocation(line: 133, column: 45, scope: !14339)
!14348 = !DILocation(line: 133, column: 2, scope: !14339)
!14349 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12422, file: !12422, line: 211, type: !13707, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14350)
!14350 = !{!14351, !14352}
!14351 = !DILocalVariable(name: "prio", arg: 1, scope: !14349, file: !12422, line: 211, type: !111)
!14352 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14349, file: !12422, line: 211, type: !111)
!14353 = !DILocation(line: 0, scope: !14349)
!14354 = !DILocation(line: 213, column: 9, scope: !14349)
!14355 = !DILocation(line: 213, column: 2, scope: !14349)
!14356 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12422, file: !12422, line: 83, type: !14017, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14357)
!14357 = !{!14358}
!14358 = !DILocalVariable(name: "thread", arg: 1, scope: !14356, file: !12422, line: 83, type: !2676)
!14359 = !DILocation(line: 0, scope: !14356)
!14360 = !DILocation(line: 89, column: 16, scope: !14356)
!14361 = !DILocation(line: 89, column: 2, scope: !14356)
!14362 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12422, file: !12422, line: 206, type: !13707, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14363)
!14363 = !{!14364, !14365}
!14364 = !DILocalVariable(name: "prio1", arg: 1, scope: !14362, file: !12422, line: 206, type: !111)
!14365 = !DILocalVariable(name: "prio2", arg: 2, scope: !14362, file: !12422, line: 206, type: !111)
!14366 = !DILocation(line: 0, scope: !14362)
!14367 = !DILocation(line: 208, column: 15, scope: !14362)
!14368 = !DILocation(line: 208, column: 2, scope: !14362)
!14369 = distinct !DISubprogram(name: "z_ready_thread", scope: !2776, file: !2776, line: 635, type: !13855, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14370)
!14370 = !{!14371, !14372, !14374}
!14371 = !DILocalVariable(name: "thread", arg: 1, scope: !14369, file: !2776, line: 635, type: !2676)
!14372 = !DILocalVariable(name: "__i", scope: !14373, file: !2776, line: 637, type: !13889)
!14373 = distinct !DILexicalBlock(scope: !14369, file: !2776, line: 637, column: 2)
!14374 = !DILocalVariable(name: "__key", scope: !14373, file: !2776, line: 637, type: !13889)
!14375 = !DILocation(line: 0, scope: !14369)
!14376 = !DILocation(line: 0, scope: !14373)
!14377 = !DILocation(line: 0, scope: !13897, inlinedAt: !14378)
!14378 = distinct !DILocation(line: 637, column: 2, scope: !14373)
!14379 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14380)
!14380 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14378)
!14381 = !DILocation(line: 0, scope: !13906, inlinedAt: !14380)
!14382 = !DILocation(line: 639, column: 4, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14384, file: !2776, line: 638, column: 41)
!14384 = distinct !DILexicalBlock(scope: !14385, file: !2776, line: 638, column: 7)
!14385 = distinct !DILexicalBlock(scope: !14386, file: !2776, line: 637, column: 26)
!14386 = distinct !DILexicalBlock(scope: !14373, file: !2776, line: 637, column: 2)
!14387 = !DILocation(line: 0, scope: !13924, inlinedAt: !14388)
!14388 = distinct !DILocation(line: 637, column: 2, scope: !14386)
!14389 = !DILocation(line: 0, scope: !13932, inlinedAt: !14390)
!14390 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14388)
!14391 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14390)
!14392 = !DILocation(line: 642, column: 1, scope: !14369)
!14393 = distinct !DISubprogram(name: "ready_thread", scope: !2776, file: !2776, line: 617, type: !13855, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14394)
!14394 = !{!14395}
!14395 = !DILocalVariable(name: "thread", arg: 1, scope: !14393, file: !2776, line: 617, type: !2676)
!14396 = !DILocation(line: 0, scope: !14393)
!14397 = !DILocation(line: 626, column: 7, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14393, file: !2776, line: 626, column: 6)
!14399 = !DILocation(line: 626, column: 34, scope: !14398)
!14400 = !DILocation(line: 626, column: 37, scope: !14398)
!14401 = !DILocation(line: 626, column: 6, scope: !14393)
!14402 = !DILocation(line: 0, scope: !14085, inlinedAt: !14403)
!14403 = distinct !DILocation(line: 629, column: 3, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14398, file: !2776, line: 626, column: 64)
!14405 = !DILocation(line: 252, column: 15, scope: !14085, inlinedAt: !14403)
!14406 = !DILocation(line: 252, column: 28, scope: !14085, inlinedAt: !14403)
!14407 = !DILocation(line: 0, scope: !14092, inlinedAt: !14408)
!14408 = distinct !DILocation(line: 254, column: 3, scope: !14096, inlinedAt: !14403)
!14409 = !DILocation(line: 0, scope: !14099, inlinedAt: !14410)
!14410 = distinct !DILocation(line: 229, column: 2, scope: !14092, inlinedAt: !14408)
!14411 = !DILocation(line: 188, column: 2, scope: !14109, inlinedAt: !14410)
!14412 = !DILocation(line: 188, column: 2, scope: !14111, inlinedAt: !14410)
!14413 = !DILocation(line: 0, scope: !14109, inlinedAt: !14410)
!14414 = !DILocation(line: 189, column: 7, scope: !14114, inlinedAt: !14410)
!14415 = !DILocation(line: 189, column: 35, scope: !14114, inlinedAt: !14410)
!14416 = !DILocation(line: 189, column: 7, scope: !14115, inlinedAt: !14410)
!14417 = !DILocation(line: 191, column: 21, scope: !14119, inlinedAt: !14410)
!14418 = !DILocation(line: 190, column: 4, scope: !14119, inlinedAt: !14410)
!14419 = !DILocation(line: 192, column: 4, scope: !14119, inlinedAt: !14410)
!14420 = distinct !{!14420, !14411, !14421}
!14421 = !DILocation(line: 194, column: 2, scope: !14109, inlinedAt: !14410)
!14422 = !DILocation(line: 196, column: 37, scope: !14099, inlinedAt: !14410)
!14423 = !DILocation(line: 196, column: 2, scope: !14099, inlinedAt: !14410)
!14424 = !DILocation(line: 197, column: 1, scope: !14099, inlinedAt: !14410)
!14425 = !DILocation(line: 630, column: 3, scope: !14404)
!14426 = !DILocation(line: 632, column: 2, scope: !14404)
!14427 = !DILocation(line: 633, column: 1, scope: !14393)
!14428 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12422, file: !12422, line: 120, type: !14017, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14429)
!14429 = !{!14430}
!14430 = !DILocalVariable(name: "thread", arg: 1, scope: !14428, file: !12422, line: 120, type: !2676)
!14431 = !DILocation(line: 0, scope: !14428)
!14432 = !DILocation(line: 122, column: 12, scope: !14428)
!14433 = !DILocation(line: 122, column: 62, scope: !14428)
!14434 = !DILocation(line: 123, column: 4, scope: !14428)
!14435 = !DILocation(line: 122, column: 2, scope: !14428)
!14436 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2776, file: !2776, line: 644, type: !13855, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14437)
!14437 = !{!14438, !14439, !14441}
!14438 = !DILocalVariable(name: "thread", arg: 1, scope: !14436, file: !2776, line: 644, type: !2676)
!14439 = !DILocalVariable(name: "__i", scope: !14440, file: !2776, line: 646, type: !13889)
!14440 = distinct !DILexicalBlock(scope: !14436, file: !2776, line: 646, column: 2)
!14441 = !DILocalVariable(name: "__key", scope: !14440, file: !2776, line: 646, type: !13889)
!14442 = !DILocation(line: 0, scope: !14436)
!14443 = !DILocation(line: 0, scope: !14440)
!14444 = !DILocation(line: 0, scope: !13897, inlinedAt: !14445)
!14445 = distinct !DILocation(line: 646, column: 2, scope: !14440)
!14446 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14447)
!14447 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14445)
!14448 = !DILocation(line: 0, scope: !13906, inlinedAt: !14447)
!14449 = !DILocation(line: 647, column: 3, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14451, file: !2776, line: 646, column: 26)
!14451 = distinct !DILexicalBlock(scope: !14440, file: !2776, line: 646, column: 2)
!14452 = !DILocation(line: 0, scope: !13924, inlinedAt: !14453)
!14453 = distinct !DILocation(line: 646, column: 2, scope: !14451)
!14454 = !DILocation(line: 0, scope: !13932, inlinedAt: !14455)
!14455 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14453)
!14456 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14455)
!14457 = !DILocation(line: 649, column: 1, scope: !14436)
!14458 = distinct !DISubprogram(name: "z_sched_start", scope: !2776, file: !2776, line: 651, type: !13855, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14459)
!14459 = !{!14460, !14461}
!14460 = !DILocalVariable(name: "thread", arg: 1, scope: !14458, file: !2776, line: 651, type: !2676)
!14461 = !DILocalVariable(name: "key", scope: !14458, file: !2776, line: 653, type: !13889)
!14462 = !DILocation(line: 0, scope: !14458)
!14463 = !DILocation(line: 0, scope: !13897, inlinedAt: !14464)
!14464 = distinct !DILocation(line: 653, column: 25, scope: !14458)
!14465 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14466)
!14466 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14464)
!14467 = !DILocation(line: 0, scope: !13906, inlinedAt: !14466)
!14468 = !DILocation(line: 655, column: 6, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14458, file: !2776, line: 655, column: 6)
!14470 = !DILocation(line: 655, column: 6, scope: !14458)
!14471 = !DILocation(line: 0, scope: !13924, inlinedAt: !14472)
!14472 = distinct !DILocation(line: 656, column: 3, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14469, file: !2776, line: 655, column: 36)
!14474 = !DILocation(line: 0, scope: !13932, inlinedAt: !14475)
!14475 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14472)
!14476 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14475)
!14477 = !DILocation(line: 657, column: 3, scope: !14473)
!14478 = !DILocation(line: 660, column: 2, scope: !14458)
!14479 = !DILocation(line: 661, column: 2, scope: !14458)
!14480 = !DILocation(line: 662, column: 2, scope: !14458)
!14481 = !DILocation(line: 663, column: 1, scope: !14458)
!14482 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12422, file: !12422, line: 126, type: !14017, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14483)
!14483 = !{!14484}
!14484 = !DILocalVariable(name: "thread", arg: 1, scope: !14482, file: !12422, line: 126, type: !2676)
!14485 = !DILocation(line: 0, scope: !14482)
!14486 = !DILocation(line: 128, column: 23, scope: !14482)
!14487 = !DILocation(line: 128, column: 36, scope: !14482)
!14488 = !DILocation(line: 128, column: 56, scope: !14482)
!14489 = !DILocation(line: 128, column: 2, scope: !14482)
!14490 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12422, file: !12422, line: 155, type: !13855, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14491)
!14491 = !{!14492}
!14492 = !DILocalVariable(name: "thread", arg: 1, scope: !14490, file: !12422, line: 155, type: !2676)
!14493 = !DILocation(line: 0, scope: !14490)
!14494 = !DILocation(line: 157, column: 15, scope: !14490)
!14495 = !DILocation(line: 157, column: 28, scope: !14490)
!14496 = !DILocation(line: 158, column: 1, scope: !14490)
!14497 = distinct !DISubprogram(name: "z_reschedule", scope: !2776, file: !2776, line: 967, type: !13925, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14498)
!14498 = !{!14499, !14500}
!14499 = !DILocalVariable(name: "lock", arg: 1, scope: !14497, file: !2776, line: 967, type: !13900)
!14500 = !DILocalVariable(name: "key", arg: 2, scope: !14497, file: !2776, line: 967, type: !13889)
!14501 = !DILocation(line: 0, scope: !14497)
!14502 = !DILocation(line: 969, column: 6, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14497, file: !2776, line: 969, column: 6)
!14504 = !DILocation(line: 969, column: 23, scope: !14503)
!14505 = !DILocation(line: 969, column: 26, scope: !14503)
!14506 = !DILocation(line: 969, column: 6, scope: !14497)
!14507 = !DILocalVariable(name: "key", arg: 2, scope: !14508, file: !12524, line: 193, type: !13889)
!14508 = distinct !DISubprogram(name: "z_swap", scope: !12524, file: !12524, line: 193, type: !14509, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14511)
!14509 = !DISubroutineType(types: !14510)
!14510 = !{!111, !13900, !13889}
!14511 = !{!14512, !14507}
!14512 = !DILocalVariable(name: "lock", arg: 1, scope: !14508, file: !12524, line: 193, type: !13900)
!14513 = !DILocation(line: 0, scope: !14508, inlinedAt: !14514)
!14514 = distinct !DILocation(line: 970, column: 3, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14503, file: !2776, line: 969, column: 39)
!14516 = !DILocation(line: 196, column: 9, scope: !14508, inlinedAt: !14514)
!14517 = !DILocation(line: 971, column: 2, scope: !14515)
!14518 = !DILocation(line: 0, scope: !13924, inlinedAt: !14519)
!14519 = distinct !DILocation(line: 972, column: 3, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14503, file: !2776, line: 971, column: 9)
!14521 = !DILocation(line: 0, scope: !13932, inlinedAt: !14522)
!14522 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14519)
!14523 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14522)
!14524 = !DILocation(line: 975, column: 1, scope: !14497)
!14525 = distinct !DISubprogram(name: "resched", scope: !2776, file: !2776, line: 940, type: !14526, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14528)
!14526 = !DISubroutineType(types: !14527)
!14527 = !{!131, !158}
!14528 = !{!14529}
!14529 = !DILocalVariable(name: "key", arg: 1, scope: !14525, file: !2776, line: 940, type: !158)
!14530 = !DILocation(line: 0, scope: !14525)
!14531 = !DILocalVariable(name: "key", arg: 1, scope: !14532, file: !7659, line: 112, type: !32)
!14532 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7659, file: !7659, line: 112, type: !14533, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14535)
!14533 = !DISubroutineType(types: !14534)
!14534 = !{!131, !32}
!14535 = !{!14531}
!14536 = !DILocation(line: 0, scope: !14532, inlinedAt: !14537)
!14537 = distinct !DILocation(line: 946, column: 9, scope: !14525)
!14538 = !DILocation(line: 115, column: 13, scope: !14532, inlinedAt: !14537)
!14539 = !DILocation(line: 946, column: 32, scope: !14525)
!14540 = !DILocation(line: 1031, column: 3, scope: !14541, inlinedAt: !14544)
!14541 = distinct !DISubprogram(name: "__get_IPSR", scope: !7544, file: !7544, line: 1027, type: !7625, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14542)
!14542 = !{!14543}
!14543 = !DILocalVariable(name: "result", scope: !14541, file: !7544, line: 1029, type: !158)
!14544 = distinct !DILocation(line: 48, column: 10, scope: !14545, inlinedAt: !14546)
!14545 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8505, file: !8505, line: 46, type: !8506, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !247)
!14546 = distinct !DILocation(line: 946, column: 36, scope: !14525)
!14547 = !{i64 7009188}
!14548 = !DILocation(line: 0, scope: !14541, inlinedAt: !14544)
!14549 = !DILocation(line: 48, column: 9, scope: !14545, inlinedAt: !14546)
!14550 = !DILocation(line: 946, column: 2, scope: !14525)
!14551 = distinct !DISubprogram(name: "need_swap", scope: !2776, file: !2776, line: 953, type: !8506, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14552)
!14552 = !{!14553}
!14553 = !DILocalVariable(name: "new_thread", scope: !14551, file: !2776, line: 959, type: !2676)
!14554 = !DILocation(line: 962, column: 31, scope: !14551)
!14555 = !DILocation(line: 0, scope: !14551)
!14556 = !DILocation(line: 963, column: 23, scope: !14551)
!14557 = !DILocation(line: 963, column: 20, scope: !14551)
!14558 = !DILocation(line: 963, column: 2, scope: !14551)
!14559 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12524, file: !12524, line: 181, type: !7554, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14560)
!14560 = !{!14561, !14562}
!14561 = !DILocalVariable(name: "key", arg: 1, scope: !14559, file: !12524, line: 181, type: !32)
!14562 = !DILocalVariable(name: "ret", scope: !14559, file: !12524, line: 183, type: !111)
!14563 = !DILocation(line: 0, scope: !14559)
!14564 = !DILocation(line: 185, column: 8, scope: !14559)
!14565 = !DILocation(line: 186, column: 2, scope: !14559)
!14566 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2776, file: !2776, line: 665, type: !13855, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14567)
!14567 = !{!14568, !14569, !14571}
!14568 = !DILocalVariable(name: "thread", arg: 1, scope: !14566, file: !2776, line: 665, type: !2676)
!14569 = !DILocalVariable(name: "__i", scope: !14570, file: !2776, line: 671, type: !13889)
!14570 = distinct !DILexicalBlock(scope: !14566, file: !2776, line: 671, column: 2)
!14571 = !DILocalVariable(name: "__key", scope: !14570, file: !2776, line: 671, type: !13889)
!14572 = !DILocation(line: 0, scope: !14566)
!14573 = !DILocation(line: 669, column: 8, scope: !14566)
!14574 = !DILocation(line: 0, scope: !14570)
!14575 = !DILocation(line: 0, scope: !13897, inlinedAt: !14576)
!14576 = distinct !DILocation(line: 671, column: 2, scope: !14570)
!14577 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14578)
!14578 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14576)
!14579 = !DILocation(line: 0, scope: !13906, inlinedAt: !14578)
!14580 = !DILocation(line: 672, column: 7, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14582, file: !2776, line: 672, column: 7)
!14582 = distinct !DILexicalBlock(scope: !14583, file: !2776, line: 671, column: 26)
!14583 = distinct !DILexicalBlock(scope: !14570, file: !2776, line: 671, column: 2)
!14584 = !DILocation(line: 672, column: 7, scope: !14582)
!14585 = !DILocation(line: 0, scope: !14068, inlinedAt: !14586)
!14586 = distinct !DILocation(line: 673, column: 4, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14581, file: !2776, line: 672, column: 35)
!14588 = !DILocation(line: 266, column: 15, scope: !14068, inlinedAt: !14586)
!14589 = !DILocation(line: 266, column: 28, scope: !14068, inlinedAt: !14586)
!14590 = !DILocation(line: 0, scope: !14076, inlinedAt: !14591)
!14591 = distinct !DILocation(line: 268, column: 3, scope: !14080, inlinedAt: !14586)
!14592 = !DILocation(line: 234, column: 2, scope: !14076, inlinedAt: !14591)
!14593 = !DILocation(line: 674, column: 3, scope: !14587)
!14594 = !DILocation(line: 675, column: 3, scope: !14582)
!14595 = !DILocation(line: 676, column: 26, scope: !14582)
!14596 = !DILocation(line: 676, column: 23, scope: !14582)
!14597 = !DILocation(line: 676, column: 3, scope: !14582)
!14598 = !DILocation(line: 0, scope: !13924, inlinedAt: !14599)
!14599 = distinct !DILocation(line: 671, column: 2, scope: !14583)
!14600 = !DILocation(line: 0, scope: !13932, inlinedAt: !14601)
!14601 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14599)
!14602 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14601)
!14603 = !DILocation(line: 679, column: 16, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14566, file: !2776, line: 679, column: 6)
!14605 = !DILocation(line: 679, column: 13, scope: !14604)
!14606 = !DILocation(line: 679, column: 6, scope: !14566)
!14607 = !DILocation(line: 680, column: 3, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14604, file: !2776, line: 679, column: 26)
!14609 = !DILocation(line: 681, column: 2, scope: !14608)
!14610 = !DILocation(line: 684, column: 1, scope: !14566)
!14611 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12815, file: !12815, line: 52, type: !13873, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14612)
!14612 = !{!14613}
!14613 = !DILocalVariable(name: "thread", arg: 1, scope: !14611, file: !12815, line: 52, type: !2676)
!14614 = !DILocation(line: 0, scope: !14611)
!14615 = !DILocation(line: 54, column: 39, scope: !14611)
!14616 = !DILocation(line: 54, column: 9, scope: !14611)
!14617 = !DILocation(line: 54, column: 2, scope: !14611)
!14618 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12422, file: !12422, line: 141, type: !13855, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14619)
!14619 = !{!14620}
!14620 = !DILocalVariable(name: "thread", arg: 1, scope: !14618, file: !12422, line: 141, type: !2676)
!14621 = !DILocation(line: 0, scope: !14618)
!14622 = !DILocation(line: 143, column: 15, scope: !14618)
!14623 = !DILocation(line: 143, column: 28, scope: !14618)
!14624 = !DILocation(line: 146, column: 1, scope: !14618)
!14625 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12422, file: !12422, line: 73, type: !416, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !247)
!14626 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 75, column: 30, scope: !14625)
!14628 = !DILocation(line: 0, scope: !13906, inlinedAt: !14627)
!14629 = !DILocation(line: 75, column: 9, scope: !14625)
!14630 = !DILocation(line: 76, column: 1, scope: !14625)
!14631 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2776, file: !2776, line: 977, type: !7635, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14632)
!14632 = !{!14633}
!14633 = !DILocalVariable(name: "key", arg: 1, scope: !14631, file: !2776, line: 977, type: !158)
!14634 = !DILocation(line: 0, scope: !14631)
!14635 = !DILocation(line: 979, column: 6, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14631, file: !2776, line: 979, column: 6)
!14637 = !DILocation(line: 979, column: 6, scope: !14631)
!14638 = !DILocation(line: 980, column: 3, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14636, file: !2776, line: 979, column: 20)
!14640 = !DILocation(line: 981, column: 2, scope: !14639)
!14641 = !DILocation(line: 0, scope: !13932, inlinedAt: !14642)
!14642 = distinct !DILocation(line: 982, column: 3, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14636, file: !2776, line: 981, column: 9)
!14644 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14642)
!14645 = !DILocation(line: 985, column: 1, scope: !14631)
!14646 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2776, file: !2776, line: 695, type: !13855, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14647)
!14647 = !{!14648, !14649}
!14648 = !DILocalVariable(name: "thread", arg: 1, scope: !14646, file: !2776, line: 695, type: !2676)
!14649 = !DILocalVariable(name: "key", scope: !14646, file: !2776, line: 699, type: !13889)
!14650 = !DILocation(line: 0, scope: !14646)
!14651 = !DILocation(line: 0, scope: !13897, inlinedAt: !14652)
!14652 = distinct !DILocation(line: 699, column: 25, scope: !14646)
!14653 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14654)
!14654 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14652)
!14655 = !DILocation(line: 0, scope: !13906, inlinedAt: !14654)
!14656 = !DILocation(line: 702, column: 7, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14646, file: !2776, line: 702, column: 6)
!14658 = !DILocation(line: 702, column: 6, scope: !14646)
!14659 = !DILocation(line: 0, scope: !13924, inlinedAt: !14660)
!14660 = distinct !DILocation(line: 703, column: 3, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14657, file: !2776, line: 702, column: 38)
!14662 = !DILocation(line: 0, scope: !13932, inlinedAt: !14663)
!14663 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14660)
!14664 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14663)
!14665 = !DILocation(line: 704, column: 3, scope: !14661)
!14666 = !DILocation(line: 707, column: 2, scope: !14646)
!14667 = !DILocation(line: 708, column: 2, scope: !14646)
!14668 = !DILocation(line: 710, column: 2, scope: !14646)
!14669 = !DILocation(line: 713, column: 1, scope: !14646)
!14670 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12422, file: !12422, line: 96, type: !14017, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14671)
!14671 = !{!14672}
!14672 = !DILocalVariable(name: "thread", arg: 1, scope: !14670, file: !12422, line: 96, type: !2676)
!14673 = !DILocation(line: 0, scope: !14670)
!14674 = !DILocation(line: 98, column: 23, scope: !14670)
!14675 = !DILocation(line: 98, column: 36, scope: !14670)
!14676 = !DILocation(line: 98, column: 57, scope: !14670)
!14677 = !DILocation(line: 98, column: 2, scope: !14670)
!14678 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12422, file: !12422, line: 148, type: !13855, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14679)
!14679 = !{!14680}
!14680 = !DILocalVariable(name: "thread", arg: 1, scope: !14678, file: !12422, line: 148, type: !2676)
!14681 = !DILocation(line: 0, scope: !14678)
!14682 = !DILocation(line: 150, column: 15, scope: !14678)
!14683 = !DILocation(line: 150, column: 28, scope: !14678)
!14684 = !DILocation(line: 153, column: 1, scope: !14678)
!14685 = distinct !DISubprogram(name: "z_pend_thread", scope: !2776, file: !2776, line: 770, type: !14686, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14692)
!14686 = !DISubroutineType(types: !14687)
!14687 = !{null, !2676, !2707, !14688}
!14688 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !203, line: 67, baseType: !14689)
!14689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !203, line: 65, size: 64, elements: !14690)
!14690 = !{!14691}
!14691 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14689, file: !203, line: 66, baseType: !202, size: 64)
!14692 = !{!14693, !14694, !14695, !14696, !14698}
!14693 = !DILocalVariable(name: "thread", arg: 1, scope: !14685, file: !2776, line: 770, type: !2676)
!14694 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14685, file: !2776, line: 770, type: !2707)
!14695 = !DILocalVariable(name: "timeout", arg: 3, scope: !14685, file: !2776, line: 771, type: !14688)
!14696 = !DILocalVariable(name: "__i", scope: !14697, file: !2776, line: 774, type: !13889)
!14697 = distinct !DILexicalBlock(scope: !14685, file: !2776, line: 774, column: 2)
!14698 = !DILocalVariable(name: "__key", scope: !14697, file: !2776, line: 774, type: !13889)
!14699 = !DILocation(line: 0, scope: !14685)
!14700 = !DILocation(line: 0, scope: !14697)
!14701 = !DILocation(line: 0, scope: !13897, inlinedAt: !14702)
!14702 = distinct !DILocation(line: 774, column: 2, scope: !14697)
!14703 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14704)
!14704 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14702)
!14705 = !DILocation(line: 0, scope: !13906, inlinedAt: !14704)
!14706 = !DILocation(line: 775, column: 3, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14708, file: !2776, line: 774, column: 26)
!14708 = distinct !DILexicalBlock(scope: !14697, file: !2776, line: 774, column: 2)
!14709 = !DILocation(line: 0, scope: !13924, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 774, column: 2, scope: !14708)
!14711 = !DILocation(line: 0, scope: !13932, inlinedAt: !14712)
!14712 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14710)
!14713 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14712)
!14714 = !DILocation(line: 777, column: 1, scope: !14685)
!14715 = distinct !DISubprogram(name: "pend_locked", scope: !2776, file: !2776, line: 760, type: !14686, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14716)
!14716 = !{!14717, !14718, !14719}
!14717 = !DILocalVariable(name: "thread", arg: 1, scope: !14715, file: !2776, line: 760, type: !2676)
!14718 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14715, file: !2776, line: 760, type: !2707)
!14719 = !DILocalVariable(name: "timeout", arg: 3, scope: !14715, file: !2776, line: 761, type: !14688)
!14720 = !DILocation(line: 0, scope: !14715)
!14721 = !DILocation(line: 766, column: 2, scope: !14715)
!14722 = !DILocation(line: 767, column: 2, scope: !14715)
!14723 = !DILocation(line: 768, column: 1, scope: !14715)
!14724 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2776, file: !2776, line: 740, type: !14725, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14727)
!14725 = !DISubroutineType(types: !14726)
!14726 = !{null, !2676, !2707}
!14727 = !{!14728, !14729}
!14728 = !DILocalVariable(name: "thread", arg: 1, scope: !14724, file: !2776, line: 740, type: !2676)
!14729 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14724, file: !2776, line: 740, type: !2707)
!14730 = !DILocation(line: 0, scope: !14724)
!14731 = !DILocation(line: 742, column: 2, scope: !14724)
!14732 = !DILocation(line: 743, column: 2, scope: !14724)
!14733 = !DILocation(line: 747, column: 13, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14724, file: !2776, line: 747, column: 6)
!14735 = !DILocation(line: 747, column: 6, scope: !14724)
!14736 = !DILocation(line: 748, column: 16, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14734, file: !2776, line: 747, column: 22)
!14738 = !DILocation(line: 748, column: 26, scope: !14737)
!14739 = !DILocation(line: 749, column: 28, scope: !14737)
!14740 = !DILocation(line: 0, scope: !14099, inlinedAt: !14741)
!14741 = distinct !DILocation(line: 749, column: 3, scope: !14737)
!14742 = !DILocation(line: 188, column: 2, scope: !14109, inlinedAt: !14741)
!14743 = !DILocation(line: 188, column: 2, scope: !14111, inlinedAt: !14741)
!14744 = !DILocation(line: 0, scope: !14109, inlinedAt: !14741)
!14745 = !DILocation(line: 189, column: 7, scope: !14114, inlinedAt: !14741)
!14746 = !DILocation(line: 189, column: 35, scope: !14114, inlinedAt: !14741)
!14747 = !DILocation(line: 189, column: 7, scope: !14115, inlinedAt: !14741)
!14748 = !DILocation(line: 191, column: 21, scope: !14119, inlinedAt: !14741)
!14749 = !DILocation(line: 190, column: 4, scope: !14119, inlinedAt: !14741)
!14750 = !DILocation(line: 192, column: 4, scope: !14119, inlinedAt: !14741)
!14751 = distinct !{!14751, !14742, !14752}
!14752 = !DILocation(line: 194, column: 2, scope: !14109, inlinedAt: !14741)
!14753 = !DILocation(line: 196, column: 37, scope: !14099, inlinedAt: !14741)
!14754 = !DILocation(line: 196, column: 2, scope: !14099, inlinedAt: !14741)
!14755 = !DILocation(line: 197, column: 1, scope: !14099, inlinedAt: !14741)
!14756 = !DILocation(line: 751, column: 1, scope: !14724)
!14757 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2776, file: !2776, line: 753, type: !14758, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14760)
!14758 = !DISubroutineType(types: !14759)
!14759 = !{null, !2676, !14688}
!14760 = !{!14761, !14762}
!14761 = !DILocalVariable(name: "thread", arg: 1, scope: !14757, file: !2776, line: 753, type: !2676)
!14762 = !DILocalVariable(name: "timeout", arg: 2, scope: !14757, file: !2776, line: 753, type: !14688)
!14763 = !DILocation(line: 0, scope: !14757)
!14764 = !DILocation(line: 755, column: 7, scope: !14765)
!14765 = distinct !DILexicalBlock(scope: !14757, file: !2776, line: 755, column: 6)
!14766 = !DILocation(line: 755, column: 6, scope: !14757)
!14767 = !DILocation(line: 756, column: 3, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14765, file: !2776, line: 755, column: 41)
!14769 = !DILocation(line: 757, column: 2, scope: !14768)
!14770 = !DILocation(line: 758, column: 1, scope: !14757)
!14771 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12815, file: !12815, line: 47, type: !14758, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14772)
!14772 = !{!14773, !14774}
!14773 = !DILocalVariable(name: "thread", arg: 1, scope: !14771, file: !12815, line: 47, type: !2676)
!14774 = !DILocalVariable(name: "ticks", arg: 2, scope: !14771, file: !12815, line: 47, type: !14688)
!14775 = !DILocation(line: 0, scope: !14771)
!14776 = !DILocation(line: 49, column: 30, scope: !14771)
!14777 = !DILocation(line: 49, column: 2, scope: !14771)
!14778 = !DILocation(line: 50, column: 1, scope: !14771)
!14779 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2776, file: !2776, line: 795, type: !2733, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14780)
!14780 = !{!14781, !14782, !14783, !14785, !14786}
!14781 = !DILocalVariable(name: "timeout", arg: 1, scope: !14779, file: !2776, line: 795, type: !2735)
!14782 = !DILocalVariable(name: "thread", scope: !14779, file: !2776, line: 797, type: !2676)
!14783 = !DILocalVariable(name: "__i", scope: !14784, file: !2776, line: 800, type: !13889)
!14784 = distinct !DILexicalBlock(scope: !14779, file: !2776, line: 800, column: 2)
!14785 = !DILocalVariable(name: "__key", scope: !14784, file: !2776, line: 800, type: !13889)
!14786 = !DILocalVariable(name: "killed", scope: !14787, file: !2776, line: 801, type: !131)
!14787 = distinct !DILexicalBlock(scope: !14788, file: !2776, line: 800, column: 26)
!14788 = distinct !DILexicalBlock(scope: !14784, file: !2776, line: 800, column: 2)
!14789 = !DILocation(line: 0, scope: !14779)
!14790 = !DILocation(line: 797, column: 28, scope: !14779)
!14791 = !DILocation(line: 0, scope: !14784)
!14792 = !DILocation(line: 0, scope: !13897, inlinedAt: !14793)
!14793 = distinct !DILocation(line: 800, column: 2, scope: !14784)
!14794 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14795)
!14795 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14793)
!14796 = !DILocation(line: 0, scope: !13906, inlinedAt: !14795)
!14797 = !DILocation(line: 801, column: 27, scope: !14787)
!14798 = !DILocation(line: 801, column: 32, scope: !14787)
!14799 = !DILocation(line: 801, column: 61, scope: !14787)
!14800 = !DILocation(line: 0, scope: !14787)
!14801 = !DILocation(line: 804, column: 7, scope: !14787)
!14802 = !DILocation(line: 805, column: 21, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14804, file: !2776, line: 805, column: 8)
!14804 = distinct !DILexicalBlock(scope: !14805, file: !2776, line: 804, column: 16)
!14805 = distinct !DILexicalBlock(scope: !14787, file: !2776, line: 804, column: 7)
!14806 = !DILocation(line: 805, column: 31, scope: !14803)
!14807 = !DILocation(line: 805, column: 8, scope: !14804)
!14808 = !DILocation(line: 806, column: 5, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14803, file: !2776, line: 805, column: 40)
!14810 = !DILocation(line: 807, column: 4, scope: !14809)
!14811 = !DILocation(line: 808, column: 4, scope: !14804)
!14812 = !DILocation(line: 809, column: 4, scope: !14804)
!14813 = !DILocation(line: 810, column: 4, scope: !14804)
!14814 = !DILocation(line: 811, column: 3, scope: !14804)
!14815 = !DILocation(line: 0, scope: !13924, inlinedAt: !14816)
!14816 = distinct !DILocation(line: 800, column: 2, scope: !14788)
!14817 = !DILocation(line: 0, scope: !13932, inlinedAt: !14818)
!14818 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14816)
!14819 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14818)
!14820 = !DILocation(line: 813, column: 1, scope: !14779)
!14821 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2776, file: !2776, line: 779, type: !13855, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14822)
!14822 = !{!14823}
!14823 = !DILocalVariable(name: "thread", arg: 1, scope: !14821, file: !2776, line: 779, type: !2676)
!14824 = !DILocation(line: 0, scope: !14821)
!14825 = !DILocation(line: 781, column: 2, scope: !14821)
!14826 = !DILocation(line: 782, column: 2, scope: !14821)
!14827 = !DILocation(line: 783, column: 15, scope: !14821)
!14828 = !DILocation(line: 783, column: 25, scope: !14821)
!14829 = !DILocation(line: 784, column: 1, scope: !14821)
!14830 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12422, file: !12422, line: 165, type: !13855, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14831)
!14831 = !{!14832}
!14832 = !DILocalVariable(name: "thread", arg: 1, scope: !14830, file: !12422, line: 165, type: !2676)
!14833 = !DILocation(line: 0, scope: !14830)
!14834 = !DILocation(line: 167, column: 15, scope: !14830)
!14835 = !DILocation(line: 167, column: 28, scope: !14830)
!14836 = !DILocation(line: 168, column: 1, scope: !14830)
!14837 = distinct !DISubprogram(name: "unready_thread", scope: !2776, file: !2776, line: 731, type: !13855, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14838)
!14838 = !{!14839}
!14839 = !DILocalVariable(name: "thread", arg: 1, scope: !14837, file: !2776, line: 731, type: !2676)
!14840 = !DILocation(line: 0, scope: !14837)
!14841 = !DILocation(line: 733, column: 6, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14837, file: !2776, line: 733, column: 6)
!14843 = !DILocation(line: 733, column: 6, scope: !14837)
!14844 = !DILocation(line: 0, scope: !14068, inlinedAt: !14845)
!14845 = distinct !DILocation(line: 734, column: 3, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14842, file: !2776, line: 733, column: 34)
!14847 = !DILocation(line: 266, column: 15, scope: !14068, inlinedAt: !14845)
!14848 = !DILocation(line: 266, column: 28, scope: !14068, inlinedAt: !14845)
!14849 = !DILocation(line: 0, scope: !14076, inlinedAt: !14850)
!14850 = distinct !DILocation(line: 268, column: 3, scope: !14080, inlinedAt: !14845)
!14851 = !DILocation(line: 234, column: 2, scope: !14076, inlinedAt: !14850)
!14852 = !DILocation(line: 735, column: 2, scope: !14846)
!14853 = !DILocation(line: 736, column: 25, scope: !14837)
!14854 = !DILocation(line: 736, column: 22, scope: !14837)
!14855 = !DILocation(line: 736, column: 2, scope: !14837)
!14856 = !DILocation(line: 737, column: 1, scope: !14837)
!14857 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12422, file: !12422, line: 160, type: !13855, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14858)
!14858 = !{!14859}
!14859 = !DILocalVariable(name: "thread", arg: 1, scope: !14857, file: !12422, line: 160, type: !2676)
!14860 = !DILocation(line: 0, scope: !14857)
!14861 = !DILocation(line: 162, column: 15, scope: !14857)
!14862 = !DILocation(line: 162, column: 28, scope: !14857)
!14863 = !DILocation(line: 163, column: 1, scope: !14857)
!14864 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2776, file: !2776, line: 786, type: !13855, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14865)
!14865 = !{!14866, !14867, !14869}
!14866 = !DILocalVariable(name: "thread", arg: 1, scope: !14864, file: !2776, line: 786, type: !2676)
!14867 = !DILocalVariable(name: "__i", scope: !14868, file: !2776, line: 788, type: !13889)
!14868 = distinct !DILexicalBlock(scope: !14864, file: !2776, line: 788, column: 2)
!14869 = !DILocalVariable(name: "__key", scope: !14868, file: !2776, line: 788, type: !13889)
!14870 = !DILocation(line: 0, scope: !14864)
!14871 = !DILocation(line: 0, scope: !14868)
!14872 = !DILocation(line: 0, scope: !13897, inlinedAt: !14873)
!14873 = distinct !DILocation(line: 788, column: 2, scope: !14868)
!14874 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14875)
!14875 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14873)
!14876 = !DILocation(line: 0, scope: !13906, inlinedAt: !14875)
!14877 = !DILocation(line: 789, column: 3, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14879, file: !2776, line: 788, column: 26)
!14879 = distinct !DILexicalBlock(scope: !14868, file: !2776, line: 788, column: 2)
!14880 = !DILocation(line: 0, scope: !13924, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 788, column: 2, scope: !14879)
!14882 = !DILocation(line: 0, scope: !13932, inlinedAt: !14883)
!14883 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14881)
!14884 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14883)
!14885 = !DILocation(line: 791, column: 1, scope: !14864)
!14886 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2776, file: !2776, line: 816, type: !14887, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14889)
!14887 = !DISubroutineType(types: !14888)
!14888 = !{!111, !158, !2707, !14688}
!14889 = !{!14890, !14891, !14892, !14893, !14894, !14896}
!14890 = !DILocalVariable(name: "key", arg: 1, scope: !14886, file: !2776, line: 816, type: !158)
!14891 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14886, file: !2776, line: 816, type: !2707)
!14892 = !DILocalVariable(name: "timeout", arg: 3, scope: !14886, file: !2776, line: 816, type: !14688)
!14893 = !DILocalVariable(name: "ret", scope: !14886, file: !2776, line: 828, type: !111)
!14894 = !DILocalVariable(name: "__i", scope: !14895, file: !2776, line: 829, type: !13889)
!14895 = distinct !DILexicalBlock(scope: !14886, file: !2776, line: 829, column: 2)
!14896 = !DILocalVariable(name: "__key", scope: !14895, file: !2776, line: 829, type: !13889)
!14897 = !DILocation(line: 0, scope: !14886)
!14898 = !DILocation(line: 823, column: 14, scope: !14886)
!14899 = !DILocation(line: 823, column: 2, scope: !14886)
!14900 = !DILocation(line: 826, column: 20, scope: !14886)
!14901 = !DILocation(line: 826, column: 18, scope: !14886)
!14902 = !DILocation(line: 828, column: 12, scope: !14886)
!14903 = !DILocation(line: 0, scope: !14895)
!14904 = !DILocation(line: 0, scope: !13897, inlinedAt: !14905)
!14905 = distinct !DILocation(line: 829, column: 2, scope: !14895)
!14906 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14905)
!14908 = !DILocation(line: 0, scope: !13906, inlinedAt: !14907)
!14909 = !DILocation(line: 830, column: 7, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14911, file: !2776, line: 830, column: 7)
!14911 = distinct !DILexicalBlock(scope: !14912, file: !2776, line: 829, column: 26)
!14912 = distinct !DILexicalBlock(scope: !14895, file: !2776, line: 829, column: 2)
!14913 = !DILocation(line: 830, column: 26, scope: !14910)
!14914 = !DILocation(line: 830, column: 23, scope: !14910)
!14915 = !DILocation(line: 830, column: 7, scope: !14911)
!14916 = !DILocation(line: 831, column: 20, scope: !14917)
!14917 = distinct !DILexicalBlock(scope: !14910, file: !2776, line: 830, column: 36)
!14918 = !DILocation(line: 832, column: 3, scope: !14917)
!14919 = !DILocation(line: 0, scope: !13924, inlinedAt: !14920)
!14920 = distinct !DILocation(line: 829, column: 2, scope: !14912)
!14921 = !DILocation(line: 0, scope: !13932, inlinedAt: !14922)
!14922 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14920)
!14923 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14922)
!14924 = !DILocation(line: 834, column: 2, scope: !14886)
!14925 = distinct !DISubprogram(name: "z_pend_curr", scope: !2776, file: !2776, line: 840, type: !14926, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14928)
!14926 = !DISubroutineType(types: !14927)
!14927 = !{!111, !13900, !13889, !2707, !14688}
!14928 = !{!14929, !14930, !14931, !14932}
!14929 = !DILocalVariable(name: "lock", arg: 1, scope: !14925, file: !2776, line: 840, type: !13900)
!14930 = !DILocalVariable(name: "key", arg: 2, scope: !14925, file: !2776, line: 840, type: !13889)
!14931 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14925, file: !2776, line: 841, type: !2707)
!14932 = !DILocalVariable(name: "timeout", arg: 4, scope: !14925, file: !2776, line: 841, type: !14688)
!14933 = !DILocation(line: 0, scope: !14925)
!14934 = !DILocation(line: 844, column: 20, scope: !14925)
!14935 = !DILocation(line: 844, column: 18, scope: !14925)
!14936 = !DILocation(line: 0, scope: !13897, inlinedAt: !14937)
!14937 = distinct !DILocation(line: 856, column: 9, scope: !14925)
!14938 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14939)
!14939 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14937)
!14940 = !DILocation(line: 0, scope: !13906, inlinedAt: !14939)
!14941 = !DILocation(line: 857, column: 14, scope: !14925)
!14942 = !DILocation(line: 857, column: 2, scope: !14925)
!14943 = !DILocation(line: 0, scope: !14508, inlinedAt: !14944)
!14944 = distinct !DILocation(line: 859, column: 9, scope: !14925)
!14945 = !DILocation(line: 196, column: 9, scope: !14508, inlinedAt: !14944)
!14946 = !DILocation(line: 859, column: 2, scope: !14925)
!14947 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2776, file: !2776, line: 862, type: !14948, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14950)
!14948 = !DISubroutineType(types: !14949)
!14949 = !{!2676, !2707}
!14950 = !{!14951, !14952, !14953, !14955}
!14951 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14947, file: !2776, line: 862, type: !2707)
!14952 = !DILocalVariable(name: "thread", scope: !14947, file: !2776, line: 864, type: !2676)
!14953 = !DILocalVariable(name: "__i", scope: !14954, file: !2776, line: 866, type: !13889)
!14954 = distinct !DILexicalBlock(scope: !14947, file: !2776, line: 866, column: 2)
!14955 = !DILocalVariable(name: "__key", scope: !14954, file: !2776, line: 866, type: !13889)
!14956 = !DILocation(line: 0, scope: !14947)
!14957 = !DILocation(line: 0, scope: !14954)
!14958 = !DILocation(line: 0, scope: !13897, inlinedAt: !14959)
!14959 = distinct !DILocation(line: 866, column: 2, scope: !14954)
!14960 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14961)
!14961 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14959)
!14962 = !DILocation(line: 0, scope: !13906, inlinedAt: !14961)
!14963 = !DILocation(line: 867, column: 12, scope: !14964)
!14964 = distinct !DILexicalBlock(scope: !14965, file: !2776, line: 866, column: 26)
!14965 = distinct !DILexicalBlock(scope: !14954, file: !2776, line: 866, column: 2)
!14966 = !DILocation(line: 869, column: 14, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14964, file: !2776, line: 869, column: 7)
!14968 = !DILocation(line: 869, column: 7, scope: !14964)
!14969 = !DILocation(line: 870, column: 4, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14967, file: !2776, line: 869, column: 23)
!14971 = !DILocation(line: 871, column: 3, scope: !14970)
!14972 = !DILocation(line: 0, scope: !13924, inlinedAt: !14973)
!14973 = distinct !DILocation(line: 866, column: 2, scope: !14965)
!14974 = !DILocation(line: 0, scope: !13932, inlinedAt: !14975)
!14975 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !14973)
!14976 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !14975)
!14977 = !DILocation(line: 874, column: 2, scope: !14947)
!14978 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2776, file: !2776, line: 877, type: !14948, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !14979)
!14979 = !{!14980, !14981, !14982, !14984}
!14980 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14978, file: !2776, line: 877, type: !2707)
!14981 = !DILocalVariable(name: "thread", scope: !14978, file: !2776, line: 879, type: !2676)
!14982 = !DILocalVariable(name: "__i", scope: !14983, file: !2776, line: 881, type: !13889)
!14983 = distinct !DILexicalBlock(scope: !14978, file: !2776, line: 881, column: 2)
!14984 = !DILocalVariable(name: "__key", scope: !14983, file: !2776, line: 881, type: !13889)
!14985 = !DILocation(line: 0, scope: !14978)
!14986 = !DILocation(line: 0, scope: !14983)
!14987 = !DILocation(line: 0, scope: !13897, inlinedAt: !14988)
!14988 = distinct !DILocation(line: 881, column: 2, scope: !14983)
!14989 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !14990)
!14990 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !14988)
!14991 = !DILocation(line: 0, scope: !13906, inlinedAt: !14990)
!14992 = !DILocation(line: 882, column: 12, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14994, file: !2776, line: 881, column: 26)
!14994 = distinct !DILexicalBlock(scope: !14983, file: !2776, line: 881, column: 2)
!14995 = !DILocation(line: 884, column: 14, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14993, file: !2776, line: 884, column: 7)
!14997 = !DILocation(line: 884, column: 7, scope: !14993)
!14998 = !DILocation(line: 885, column: 4, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14996, file: !2776, line: 884, column: 23)
!15000 = !DILocation(line: 886, column: 10, scope: !14999)
!15001 = !DILocation(line: 887, column: 3, scope: !14999)
!15002 = !DILocation(line: 0, scope: !13924, inlinedAt: !15003)
!15003 = distinct !DILocation(line: 881, column: 2, scope: !14994)
!15004 = !DILocation(line: 0, scope: !13932, inlinedAt: !15005)
!15005 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !15003)
!15006 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !15005)
!15007 = !DILocation(line: 890, column: 2, scope: !14978)
!15008 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2776, file: !2776, line: 893, type: !13855, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15009)
!15009 = !{!15010}
!15010 = !DILocalVariable(name: "thread", arg: 1, scope: !15008, file: !2776, line: 893, type: !2676)
!15011 = !DILocation(line: 0, scope: !15008)
!15012 = !DILocation(line: 0, scope: !14864, inlinedAt: !15013)
!15013 = distinct !DILocation(line: 895, column: 2, scope: !15008)
!15014 = !DILocation(line: 0, scope: !14868, inlinedAt: !15013)
!15015 = !DILocation(line: 0, scope: !13897, inlinedAt: !15016)
!15016 = distinct !DILocation(line: 788, column: 2, scope: !14868, inlinedAt: !15013)
!15017 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !15018)
!15018 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !15016)
!15019 = !DILocation(line: 0, scope: !13906, inlinedAt: !15018)
!15020 = !DILocation(line: 789, column: 3, scope: !14878, inlinedAt: !15013)
!15021 = !DILocation(line: 0, scope: !13924, inlinedAt: !15022)
!15022 = distinct !DILocation(line: 788, column: 2, scope: !14879, inlinedAt: !15013)
!15023 = !DILocation(line: 0, scope: !13932, inlinedAt: !15024)
!15024 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !15022)
!15025 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !15024)
!15026 = !DILocation(line: 896, column: 8, scope: !15008)
!15027 = !DILocation(line: 897, column: 1, scope: !15008)
!15028 = distinct !DISubprogram(name: "z_set_prio", scope: !2776, file: !2776, line: 902, type: !14219, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15029)
!15029 = !{!15030, !15031, !15032, !15033, !15035}
!15030 = !DILocalVariable(name: "thread", arg: 1, scope: !15028, file: !2776, line: 902, type: !2676)
!15031 = !DILocalVariable(name: "prio", arg: 2, scope: !15028, file: !2776, line: 902, type: !111)
!15032 = !DILocalVariable(name: "need_sched", scope: !15028, file: !2776, line: 904, type: !131)
!15033 = !DILocalVariable(name: "__i", scope: !15034, file: !2776, line: 906, type: !13889)
!15034 = distinct !DILexicalBlock(scope: !15028, file: !2776, line: 906, column: 2)
!15035 = !DILocalVariable(name: "__key", scope: !15034, file: !2776, line: 906, type: !13889)
!15036 = !DILocation(line: 0, scope: !15028)
!15037 = !DILocation(line: 0, scope: !15034)
!15038 = !DILocation(line: 0, scope: !13897, inlinedAt: !15039)
!15039 = distinct !DILocation(line: 906, column: 2, scope: !15034)
!15040 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !15039)
!15042 = !DILocation(line: 0, scope: !13906, inlinedAt: !15041)
!15043 = !DILocation(line: 907, column: 16, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15045, file: !2776, line: 906, column: 26)
!15045 = distinct !DILexicalBlock(scope: !15034, file: !2776, line: 906, column: 2)
!15046 = !DILocation(line: 909, column: 7, scope: !15044)
!15047 = !DILocation(line: 0, scope: !14068, inlinedAt: !15048)
!15048 = distinct !DILocation(line: 912, column: 5, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15050, file: !2776, line: 911, column: 63)
!15050 = distinct !DILexicalBlock(scope: !15051, file: !2776, line: 911, column: 8)
!15051 = distinct !DILexicalBlock(scope: !15052, file: !2776, line: 909, column: 19)
!15052 = distinct !DILexicalBlock(scope: !15044, file: !2776, line: 909, column: 7)
!15053 = !DILocation(line: 266, column: 28, scope: !14068, inlinedAt: !15048)
!15054 = !DILocation(line: 0, scope: !14076, inlinedAt: !15055)
!15055 = distinct !DILocation(line: 268, column: 3, scope: !14080, inlinedAt: !15048)
!15056 = !DILocation(line: 234, column: 2, scope: !14076, inlinedAt: !15055)
!15057 = !DILocation(line: 913, column: 23, scope: !15049)
!15058 = !DILocation(line: 0, scope: !14085, inlinedAt: !15059)
!15059 = distinct !DILocation(line: 914, column: 5, scope: !15049)
!15060 = !DILocation(line: 252, column: 28, scope: !14085, inlinedAt: !15059)
!15061 = !DILocation(line: 0, scope: !14092, inlinedAt: !15062)
!15062 = distinct !DILocation(line: 254, column: 3, scope: !14096, inlinedAt: !15059)
!15063 = !DILocation(line: 0, scope: !14099, inlinedAt: !15064)
!15064 = distinct !DILocation(line: 229, column: 2, scope: !14092, inlinedAt: !15062)
!15065 = !DILocation(line: 188, column: 2, scope: !14109, inlinedAt: !15064)
!15066 = !DILocation(line: 188, column: 2, scope: !14111, inlinedAt: !15064)
!15067 = !DILocation(line: 0, scope: !14109, inlinedAt: !15064)
!15068 = !DILocation(line: 189, column: 7, scope: !14114, inlinedAt: !15064)
!15069 = !DILocation(line: 189, column: 35, scope: !14114, inlinedAt: !15064)
!15070 = !DILocation(line: 189, column: 7, scope: !14115, inlinedAt: !15064)
!15071 = !DILocation(line: 190, column: 4, scope: !14119, inlinedAt: !15064)
!15072 = !DILocation(line: 192, column: 4, scope: !14119, inlinedAt: !15064)
!15073 = distinct !{!15073, !15065, !15074}
!15074 = !DILocation(line: 194, column: 2, scope: !14109, inlinedAt: !15064)
!15075 = !DILocation(line: 196, column: 2, scope: !14099, inlinedAt: !15064)
!15076 = !DILocation(line: 197, column: 1, scope: !14099, inlinedAt: !15064)
!15077 = !DILocation(line: 918, column: 4, scope: !15051)
!15078 = !DILocation(line: 919, column: 3, scope: !15051)
!15079 = !DILocation(line: 920, column: 22, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15052, file: !2776, line: 919, column: 10)
!15081 = !DILocation(line: 0, scope: !13924, inlinedAt: !15082)
!15082 = distinct !DILocation(line: 906, column: 2, scope: !15045)
!15083 = !DILocation(line: 0, scope: !13932, inlinedAt: !15084)
!15084 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !15082)
!15085 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !15084)
!15086 = !DILocation(line: 926, column: 2, scope: !15028)
!15087 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2776, file: !2776, line: 929, type: !15088, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15090)
!15088 = !DISubroutineType(types: !15089)
!15089 = !{null, !2676, !111}
!15090 = !{!15091, !15092, !15093}
!15091 = !DILocalVariable(name: "thread", arg: 1, scope: !15087, file: !2776, line: 929, type: !2676)
!15092 = !DILocalVariable(name: "prio", arg: 2, scope: !15087, file: !2776, line: 929, type: !111)
!15093 = !DILocalVariable(name: "need_sched", scope: !15087, file: !2776, line: 931, type: !131)
!15094 = !DILocation(line: 0, scope: !15087)
!15095 = !DILocation(line: 931, column: 20, scope: !15087)
!15096 = !DILocation(line: 935, column: 17, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15087, file: !2776, line: 935, column: 6)
!15098 = !DILocation(line: 935, column: 20, scope: !15097)
!15099 = !DILocation(line: 935, column: 35, scope: !15097)
!15100 = !DILocation(line: 935, column: 48, scope: !15097)
!15101 = !DILocation(line: 935, column: 6, scope: !15087)
!15102 = !DILocation(line: 936, column: 3, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15097, file: !2776, line: 935, column: 55)
!15104 = !DILocation(line: 937, column: 2, scope: !15103)
!15105 = !DILocation(line: 938, column: 1, scope: !15087)
!15106 = distinct !DISubprogram(name: "k_sched_lock", scope: !2776, file: !2776, line: 987, type: !416, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15107)
!15107 = !{!15108, !15110}
!15108 = !DILocalVariable(name: "__i", scope: !15109, file: !2776, line: 989, type: !13889)
!15109 = distinct !DILexicalBlock(scope: !15106, file: !2776, line: 989, column: 2)
!15110 = !DILocalVariable(name: "__key", scope: !15109, file: !2776, line: 989, type: !13889)
!15111 = !DILocation(line: 0, scope: !15109)
!15112 = !DILocation(line: 0, scope: !13897, inlinedAt: !15113)
!15113 = distinct !DILocation(line: 989, column: 2, scope: !15109)
!15114 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !15115)
!15115 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !15113)
!15116 = !DILocation(line: 0, scope: !13906, inlinedAt: !15115)
!15117 = !DILocation(line: 992, column: 3, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15119, file: !2776, line: 989, column: 26)
!15119 = distinct !DILexicalBlock(scope: !15109, file: !2776, line: 989, column: 2)
!15120 = !DILocation(line: 0, scope: !13924, inlinedAt: !15121)
!15121 = distinct !DILocation(line: 989, column: 2, scope: !15119)
!15122 = !DILocation(line: 0, scope: !13932, inlinedAt: !15123)
!15123 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !15121)
!15124 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !15123)
!15125 = !DILocation(line: 994, column: 1, scope: !15106)
!15126 = distinct !DISubprogram(name: "z_sched_lock", scope: !12422, file: !12422, line: 251, type: !416, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !247)
!15127 = !DILocation(line: 256, column: 4, scope: !15126)
!15128 = !DILocation(line: 256, column: 19, scope: !15126)
!15129 = !DILocation(line: 256, column: 2, scope: !15126)
!15130 = !DILocation(line: 258, column: 2, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15126, file: !12422, line: 258, column: 2)
!15132 = !{i64 2154791787}
!15133 = !DILocation(line: 259, column: 1, scope: !15126)
!15134 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2776, file: !2776, line: 996, type: !416, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15135)
!15135 = !{!15136, !15138}
!15136 = !DILocalVariable(name: "__i", scope: !15137, file: !2776, line: 998, type: !13889)
!15137 = distinct !DILexicalBlock(scope: !15134, file: !2776, line: 998, column: 2)
!15138 = !DILocalVariable(name: "__key", scope: !15137, file: !2776, line: 998, type: !13889)
!15139 = !DILocation(line: 0, scope: !15137)
!15140 = !DILocation(line: 0, scope: !13897, inlinedAt: !15141)
!15141 = distinct !DILocation(line: 998, column: 2, scope: !15137)
!15142 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !15143)
!15143 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !15141)
!15144 = !DILocation(line: 0, scope: !13906, inlinedAt: !15143)
!15145 = !DILocation(line: 1002, column: 5, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15147, file: !2776, line: 998, column: 26)
!15147 = distinct !DILexicalBlock(scope: !15137, file: !2776, line: 998, column: 2)
!15148 = !DILocation(line: 1002, column: 20, scope: !15146)
!15149 = !DILocation(line: 1002, column: 3, scope: !15146)
!15150 = !DILocation(line: 1003, column: 3, scope: !15146)
!15151 = !DILocation(line: 0, scope: !13924, inlinedAt: !15152)
!15152 = distinct !DILocation(line: 998, column: 2, scope: !15147)
!15153 = !DILocation(line: 0, scope: !13932, inlinedAt: !15154)
!15154 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !15152)
!15155 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !15154)
!15156 = !DILocation(line: 1011, column: 2, scope: !15134)
!15157 = !DILocation(line: 1012, column: 1, scope: !15134)
!15158 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2776, file: !2776, line: 1014, type: !14207, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !247)
!15159 = !DILocation(line: 1028, column: 25, scope: !15158)
!15160 = !DILocation(line: 1028, column: 2, scope: !15158)
!15161 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2776, file: !2776, line: 1155, type: !15162, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15164)
!15162 = !DISubroutineType(types: !15163)
!15163 = !{!131, !2705, !2705}
!15164 = !{!15165, !15166, !15167, !15168, !15169}
!15165 = !DILocalVariable(name: "a", arg: 1, scope: !15161, file: !2776, line: 1155, type: !2705)
!15166 = !DILocalVariable(name: "b", arg: 2, scope: !15161, file: !2776, line: 1155, type: !2705)
!15167 = !DILocalVariable(name: "thread_a", scope: !15161, file: !2776, line: 1157, type: !2676)
!15168 = !DILocalVariable(name: "thread_b", scope: !15161, file: !2776, line: 1157, type: !2676)
!15169 = !DILocalVariable(name: "cmp", scope: !15161, file: !2776, line: 1158, type: !413)
!15170 = !DILocation(line: 0, scope: !15161)
!15171 = !DILocation(line: 1160, column: 13, scope: !15161)
!15172 = !DILocation(line: 1161, column: 13, scope: !15161)
!15173 = !DILocation(line: 1163, column: 8, scope: !15161)
!15174 = !DILocation(line: 1165, column: 10, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15161, file: !2776, line: 1165, column: 6)
!15176 = !DILocation(line: 1165, column: 6, scope: !15161)
!15177 = !DILocation(line: 1167, column: 17, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15175, file: !2776, line: 1167, column: 13)
!15179 = !DILocation(line: 1167, column: 13, scope: !15175)
!15180 = !DILocation(line: 1170, column: 25, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15178, file: !2776, line: 1169, column: 9)
!15182 = !DILocation(line: 1170, column: 52, scope: !15181)
!15183 = !DILocation(line: 1170, column: 35, scope: !15181)
!15184 = !DILocation(line: 1170, column: 3, scope: !15181)
!15185 = !DILocation(line: 0, scope: !15175)
!15186 = !DILocation(line: 1173, column: 1, scope: !15161)
!15187 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2776, file: !2776, line: 1175, type: !15188, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15203)
!15188 = !DISubroutineType(types: !15189)
!15189 = !{null, !15190, !2676}
!15190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15191, size: 32)
!15191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15192, line: 37, size: 128, elements: !15193)
!15192 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15193 = !{!15194, !15202}
!15194 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15191, file: !15192, line: 38, baseType: !15195, size: 96)
!15195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !302, line: 83, size: 96, elements: !15196)
!15196 = !{!15197, !15198, !15201}
!15197 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15195, file: !302, line: 84, baseType: !2705, size: 32)
!15198 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15195, file: !302, line: 85, baseType: !15199, size: 32, offset: 32)
!15199 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !302, line: 81, baseType: !15200)
!15200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15162, size: 32)
!15201 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15195, file: !302, line: 86, baseType: !111, size: 32, offset: 64)
!15202 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15191, file: !15192, line: 39, baseType: !111, size: 32, offset: 96)
!15203 = !{!15204, !15205, !15206, !15207, !15216}
!15204 = !DILocalVariable(name: "pq", arg: 1, scope: !15187, file: !2776, line: 1175, type: !15190)
!15205 = !DILocalVariable(name: "thread", arg: 2, scope: !15187, file: !2776, line: 1175, type: !2676)
!15206 = !DILocalVariable(name: "t", scope: !15187, file: !2776, line: 1177, type: !2676)
!15207 = !DILocalVariable(name: "__f", scope: !15208, file: !2776, line: 1190, type: !15211)
!15208 = distinct !DILexicalBlock(scope: !15209, file: !2776, line: 1190, column: 3)
!15209 = distinct !DILexicalBlock(scope: !15210, file: !2776, line: 1189, column: 27)
!15210 = distinct !DILexicalBlock(scope: !15187, file: !2776, line: 1189, column: 6)
!15211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !302, line: 155, size: 96, elements: !15212)
!15212 = !{!15213, !15214, !15215}
!15213 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15211, file: !302, line: 156, baseType: !2771, size: 32)
!15214 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15211, file: !302, line: 157, baseType: !178, size: 32, offset: 32)
!15215 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15211, file: !302, line: 158, baseType: !413, size: 32, offset: 64)
!15216 = !DILocalVariable(name: "n", scope: !15217, file: !2776, line: 1190, type: !2705)
!15217 = distinct !DILexicalBlock(scope: !15218, file: !2776, line: 1190, column: 3)
!15218 = distinct !DILexicalBlock(scope: !15208, file: !2776, line: 1190, column: 3)
!15219 = !DILocation(line: 0, scope: !15187)
!15220 = !DILocation(line: 1181, column: 31, scope: !15187)
!15221 = !DILocation(line: 1181, column: 45, scope: !15187)
!15222 = !DILocation(line: 1181, column: 15, scope: !15187)
!15223 = !DILocation(line: 1181, column: 25, scope: !15187)
!15224 = !DILocation(line: 1189, column: 11, scope: !15210)
!15225 = !DILocation(line: 1189, column: 7, scope: !15210)
!15226 = !DILocation(line: 1189, column: 6, scope: !15187)
!15227 = !DILocation(line: 1190, column: 3, scope: !15208)
!15228 = !DILocation(line: 1190, column: 3, scope: !15217)
!15229 = !DILocation(line: 0, scope: !15217)
!15230 = !DILocation(line: 1190, column: 3, scope: !15218)
!15231 = !DILocation(line: 1193, column: 2, scope: !15209)
!15232 = !DILocation(line: 1191, column: 42, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15218, file: !2776, line: 1190, column: 54)
!15234 = !DILocation(line: 1191, column: 12, scope: !15233)
!15235 = !DILocation(line: 1191, column: 22, scope: !15233)
!15236 = distinct !{!15236, !15227, !15237}
!15237 = !DILocation(line: 1192, column: 3, scope: !15208)
!15238 = !DILocation(line: 1195, column: 17, scope: !15187)
!15239 = !DILocation(line: 1195, column: 37, scope: !15187)
!15240 = !DILocation(line: 1195, column: 2, scope: !15187)
!15241 = !DILocation(line: 1196, column: 1, scope: !15187)
!15242 = !DISubprogram(name: "z_rb_foreach_next", scope: !302, file: !302, line: 176, type: !15243, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !247)
!15243 = !DISubroutineType(types: !15244)
!15244 = !{!2705, !15245, !15246}
!15245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15195, size: 32)
!15246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15211, size: 32)
!15247 = !DISubprogram(name: "rb_insert", scope: !302, file: !302, line: 105, type: !15248, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !247)
!15248 = !DISubroutineType(types: !15249)
!15249 = !{null, !15245, !2705}
!15250 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2776, file: !2776, line: 1198, type: !15188, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15251)
!15251 = !{!15252, !15253}
!15252 = !DILocalVariable(name: "pq", arg: 1, scope: !15250, file: !2776, line: 1198, type: !15190)
!15253 = !DILocalVariable(name: "thread", arg: 2, scope: !15250, file: !2776, line: 1198, type: !2676)
!15254 = !DILocation(line: 0, scope: !15250)
!15255 = !DILocation(line: 1202, column: 17, scope: !15250)
!15256 = !DILocation(line: 1202, column: 37, scope: !15250)
!15257 = !DILocation(line: 1202, column: 2, scope: !15250)
!15258 = !DILocation(line: 1204, column: 16, scope: !15259)
!15259 = distinct !DILexicalBlock(scope: !15250, file: !2776, line: 1204, column: 6)
!15260 = !DILocation(line: 1204, column: 7, scope: !15259)
!15261 = !DILocation(line: 1204, column: 6, scope: !15250)
!15262 = !DILocation(line: 1205, column: 7, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15259, file: !2776, line: 1204, column: 22)
!15264 = !DILocation(line: 1205, column: 22, scope: !15263)
!15265 = !DILocation(line: 1206, column: 2, scope: !15263)
!15266 = !DILocation(line: 1207, column: 1, scope: !15250)
!15267 = !DISubprogram(name: "rb_remove", scope: !302, file: !302, line: 110, type: !15248, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !247)
!15268 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2776, file: !2776, line: 1209, type: !15269, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15271)
!15269 = !DISubroutineType(types: !15270)
!15270 = !{!2676, !15190}
!15271 = !{!15272, !15273, !15274}
!15272 = !DILocalVariable(name: "pq", arg: 1, scope: !15268, file: !2776, line: 1209, type: !15190)
!15273 = !DILocalVariable(name: "thread", scope: !15268, file: !2776, line: 1211, type: !2676)
!15274 = !DILocalVariable(name: "n", scope: !15268, file: !2776, line: 1212, type: !2705)
!15275 = !DILocation(line: 0, scope: !15268)
!15276 = !DILocation(line: 1212, column: 37, scope: !15268)
!15277 = !DILocation(line: 1212, column: 21, scope: !15268)
!15278 = !DILocation(line: 1217, column: 2, scope: !15268)
!15279 = distinct !DISubprogram(name: "rb_get_min", scope: !302, file: !302, line: 115, type: !15280, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15282)
!15280 = !DISubroutineType(types: !15281)
!15281 = !{!2705, !15245}
!15282 = !{!15283}
!15283 = !DILocalVariable(name: "tree", arg: 1, scope: !15279, file: !302, line: 115, type: !15245)
!15284 = !DILocation(line: 0, scope: !15279)
!15285 = !DILocation(line: 117, column: 9, scope: !15279)
!15286 = !DILocation(line: 117, column: 2, scope: !15279)
!15287 = !DISubprogram(name: "z_rb_get_minmax", scope: !302, file: !302, line: 100, type: !15288, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !247)
!15288 = !DISubroutineType(types: !15289)
!15289 = !{!2705, !15245, !128}
!15290 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2776, file: !2776, line: 1246, type: !15291, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15299)
!15291 = !DISubroutineType(types: !15292)
!15292 = !{!2676, !15293}
!15293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15294, size: 32)
!15294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15192, line: 53, size: 2080, elements: !15295)
!15295 = !{!15296, !15298}
!15296 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15294, file: !15192, line: 54, baseType: !15297, size: 2048)
!15297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2712, size: 2048, elements: !354)
!15298 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15294, file: !15192, line: 55, baseType: !32, size: 32, offset: 2048)
!15299 = !{!15300, !15301, !15302, !15303}
!15300 = !DILocalVariable(name: "pq", arg: 1, scope: !15290, file: !2776, line: 1246, type: !15293)
!15301 = !DILocalVariable(name: "thread", scope: !15290, file: !2776, line: 1252, type: !2676)
!15302 = !DILocalVariable(name: "l", scope: !15290, file: !2776, line: 1253, type: !14102)
!15303 = !DILocalVariable(name: "n", scope: !15290, file: !2776, line: 1254, type: !2772)
!15304 = !DILocation(line: 0, scope: !15290)
!15305 = !DILocation(line: 1248, column: 11, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15290, file: !2776, line: 1248, column: 6)
!15307 = !DILocation(line: 1248, column: 7, scope: !15306)
!15308 = !DILocation(line: 1248, column: 6, scope: !15290)
!15309 = !DILocation(line: 1253, column: 31, scope: !15290)
!15310 = !DILocation(line: 1253, column: 20, scope: !15290)
!15311 = !DILocation(line: 1254, column: 19, scope: !15290)
!15312 = !DILocation(line: 1260, column: 1, scope: !15290)
!15313 = distinct !DISubprogram(name: "z_unpend_all", scope: !2776, file: !2776, line: 1262, type: !15314, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15316)
!15314 = !DISubroutineType(types: !15315)
!15315 = !{!111, !2707}
!15316 = !{!15317, !15318, !15319}
!15317 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15313, file: !2776, line: 1262, type: !2707)
!15318 = !DILocalVariable(name: "need_sched", scope: !15313, file: !2776, line: 1264, type: !111)
!15319 = !DILocalVariable(name: "thread", scope: !15313, file: !2776, line: 1265, type: !2676)
!15320 = !DILocation(line: 0, scope: !15313)
!15321 = !DILocation(line: 1267, column: 19, scope: !15313)
!15322 = !DILocation(line: 1267, column: 41, scope: !15313)
!15323 = !DILocation(line: 1267, column: 2, scope: !15313)
!15324 = !DILocation(line: 1268, column: 3, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15313, file: !2776, line: 1267, column: 50)
!15326 = !DILocation(line: 1269, column: 3, scope: !15325)
!15327 = distinct !{!15327, !15323, !15328}
!15328 = !DILocation(line: 1271, column: 2, scope: !15313)
!15329 = !DILocation(line: 1273, column: 2, scope: !15313)
!15330 = distinct !DISubprogram(name: "z_waitq_head", scope: !12763, file: !12763, line: 52, type: !14948, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15331)
!15331 = !{!15332}
!15332 = !DILocalVariable(name: "w", arg: 1, scope: !15330, file: !12763, line: 52, type: !2707)
!15333 = !DILocation(line: 0, scope: !15330)
!15334 = !DILocation(line: 54, column: 52, scope: !15330)
!15335 = !DILocation(line: 54, column: 28, scope: !15330)
!15336 = !DILocation(line: 54, column: 9, scope: !15330)
!15337 = !DILocation(line: 54, column: 2, scope: !15330)
!15338 = distinct !DISubprogram(name: "init_ready_q", scope: !2776, file: !2776, line: 1276, type: !15339, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15346)
!15339 = !DISubroutineType(types: !15340)
!15340 = !{null, !15341}
!15341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15342, size: 32)
!15342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !225, line: 83, size: 96, elements: !15343)
!15343 = !{!15344, !15345}
!15344 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15342, file: !225, line: 86, baseType: !2676, size: 32)
!15345 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15342, file: !225, line: 90, baseType: !2712, size: 64, offset: 32)
!15346 = !{!15347}
!15347 = !DILocalVariable(name: "rq", arg: 1, scope: !15338, file: !2776, line: 1276, type: !15341)
!15348 = !DILocation(line: 0, scope: !15338)
!15349 = !DILocation(line: 1289, column: 22, scope: !15338)
!15350 = !DILocation(line: 1289, column: 2, scope: !15338)
!15351 = !DILocation(line: 1291, column: 1, scope: !15338)
!15352 = distinct !DISubprogram(name: "sys_dlist_init", scope: !230, file: !230, line: 197, type: !15353, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15355)
!15353 = !DISubroutineType(types: !15354)
!15354 = !{null, !14102}
!15355 = !{!15356}
!15356 = !DILocalVariable(name: "list", arg: 1, scope: !15352, file: !230, line: 197, type: !14102)
!15357 = !DILocation(line: 0, scope: !15352)
!15358 = !DILocation(line: 199, column: 8, scope: !15352)
!15359 = !DILocation(line: 199, column: 13, scope: !15352)
!15360 = !DILocation(line: 200, column: 8, scope: !15352)
!15361 = !DILocation(line: 200, column: 13, scope: !15352)
!15362 = !DILocation(line: 201, column: 1, scope: !15352)
!15363 = distinct !DISubprogram(name: "z_sched_init", scope: !2776, file: !2776, line: 1293, type: !416, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !247)
!15364 = !DILocation(line: 1302, column: 2, scope: !15363)
!15365 = !DILocation(line: 1306, column: 2, scope: !15363)
!15366 = !DILocation(line: 1309, column: 1, scope: !15363)
!15367 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2776, file: !2776, line: 1311, type: !15368, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15371)
!15368 = !DISubroutineType(types: !15369)
!15369 = !{!111, !15370}
!15370 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !290, line: 347, baseType: !2676)
!15371 = !{!15372}
!15372 = !DILocalVariable(name: "thread", arg: 1, scope: !15367, file: !2776, line: 1311, type: !15370)
!15373 = !DILocation(line: 0, scope: !15367)
!15374 = !DILocation(line: 1313, column: 22, scope: !15367)
!15375 = !DILocation(line: 1313, column: 9, scope: !15367)
!15376 = !DILocation(line: 1313, column: 2, scope: !15367)
!15377 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2776, file: !2776, line: 1325, type: !15378, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15380)
!15378 = !DISubroutineType(types: !15379)
!15379 = !{null, !15370, !111}
!15380 = !{!15381, !15382, !15383}
!15381 = !DILocalVariable(name: "thread", arg: 1, scope: !15377, file: !2776, line: 1325, type: !15370)
!15382 = !DILocalVariable(name: "prio", arg: 2, scope: !15377, file: !2776, line: 1325, type: !111)
!15383 = !DILocalVariable(name: "th", scope: !15377, file: !2776, line: 1334, type: !2676)
!15384 = !DILocation(line: 0, scope: !15377)
!15385 = !DILocation(line: 1336, column: 2, scope: !15377)
!15386 = !DILocation(line: 1337, column: 1, scope: !15377)
!15387 = distinct !DISubprogram(name: "k_can_yield", scope: !2776, file: !2776, line: 1384, type: !8506, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !247)
!15388 = !DILocation(line: 1386, column: 11, scope: !15387)
!15389 = !DILocation(line: 1386, column: 29, scope: !15387)
!15390 = !DILocation(line: 1386, column: 32, scope: !15387)
!15391 = !DILocation(line: 1386, column: 46, scope: !15387)
!15392 = !DILocation(line: 1387, column: 28, scope: !15387)
!15393 = !DILocation(line: 1387, column: 4, scope: !15387)
!15394 = !DILocation(line: 1386, column: 2, scope: !15387)
!15395 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !221, file: !221, line: 989, type: !8506, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !247)
!15396 = !DILocation(line: 993, column: 10, scope: !15395)
!15397 = !DILocation(line: 993, column: 2, scope: !15395)
!15398 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2776, file: !2776, line: 1390, type: !416, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15399)
!15399 = !{!15400}
!15400 = !DILocalVariable(name: "key", scope: !15398, file: !2776, line: 1396, type: !13889)
!15401 = !DILocation(line: 0, scope: !13897, inlinedAt: !15402)
!15402 = distinct !DILocation(line: 1396, column: 25, scope: !15398)
!15403 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !15404)
!15404 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !15402)
!15405 = !DILocation(line: 0, scope: !13906, inlinedAt: !15404)
!15406 = !DILocation(line: 0, scope: !15398)
!15407 = !DILocation(line: 1400, column: 18, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15409, file: !2776, line: 1399, column: 36)
!15409 = distinct !DILexicalBlock(scope: !15398, file: !2776, line: 1398, column: 6)
!15410 = !DILocation(line: 0, scope: !14068, inlinedAt: !15411)
!15411 = distinct !DILocation(line: 1400, column: 3, scope: !15408)
!15412 = !DILocation(line: 266, column: 15, scope: !14068, inlinedAt: !15411)
!15413 = !DILocation(line: 266, column: 28, scope: !14068, inlinedAt: !15411)
!15414 = !DILocation(line: 0, scope: !14076, inlinedAt: !15415)
!15415 = distinct !DILocation(line: 268, column: 3, scope: !14080, inlinedAt: !15411)
!15416 = !DILocation(line: 234, column: 2, scope: !14076, inlinedAt: !15415)
!15417 = !DILocation(line: 1402, column: 15, scope: !15398)
!15418 = !DILocation(line: 0, scope: !14085, inlinedAt: !15419)
!15419 = distinct !DILocation(line: 1402, column: 2, scope: !15398)
!15420 = !DILocation(line: 252, column: 15, scope: !14085, inlinedAt: !15419)
!15421 = !DILocation(line: 252, column: 28, scope: !14085, inlinedAt: !15419)
!15422 = !DILocation(line: 0, scope: !14092, inlinedAt: !15423)
!15423 = distinct !DILocation(line: 254, column: 3, scope: !14096, inlinedAt: !15419)
!15424 = !DILocation(line: 0, scope: !14099, inlinedAt: !15425)
!15425 = distinct !DILocation(line: 229, column: 2, scope: !14092, inlinedAt: !15423)
!15426 = !DILocation(line: 188, column: 2, scope: !14109, inlinedAt: !15425)
!15427 = !DILocation(line: 188, column: 2, scope: !14111, inlinedAt: !15425)
!15428 = !DILocation(line: 0, scope: !14109, inlinedAt: !15425)
!15429 = !DILocation(line: 189, column: 7, scope: !14114, inlinedAt: !15425)
!15430 = !DILocation(line: 189, column: 35, scope: !14114, inlinedAt: !15425)
!15431 = !DILocation(line: 189, column: 7, scope: !14115, inlinedAt: !15425)
!15432 = !DILocation(line: 191, column: 21, scope: !14119, inlinedAt: !15425)
!15433 = !DILocation(line: 190, column: 4, scope: !14119, inlinedAt: !15425)
!15434 = !DILocation(line: 192, column: 4, scope: !14119, inlinedAt: !15425)
!15435 = distinct !{!15435, !15426, !15436}
!15436 = !DILocation(line: 194, column: 2, scope: !14109, inlinedAt: !15425)
!15437 = !DILocation(line: 196, column: 37, scope: !14099, inlinedAt: !15425)
!15438 = !DILocation(line: 196, column: 2, scope: !14099, inlinedAt: !15425)
!15439 = !DILocation(line: 197, column: 1, scope: !14099, inlinedAt: !15425)
!15440 = !DILocation(line: 1403, column: 2, scope: !15398)
!15441 = !DILocation(line: 0, scope: !14508, inlinedAt: !15442)
!15442 = distinct !DILocation(line: 1404, column: 2, scope: !15398)
!15443 = !DILocation(line: 196, column: 9, scope: !14508, inlinedAt: !15442)
!15444 = !DILocation(line: 1405, column: 1, scope: !15398)
!15445 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2776, file: !2776, line: 1459, type: !15446, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15448)
!15446 = !DISubroutineType(types: !15447)
!15447 = !{!413, !14688}
!15448 = !{!15449, !15450, !15451}
!15449 = !DILocalVariable(name: "timeout", arg: 1, scope: !15445, file: !2776, line: 1459, type: !14688)
!15450 = !DILocalVariable(name: "ticks", scope: !15445, file: !2776, line: 1461, type: !202)
!15451 = !DILocalVariable(name: "ret", scope: !15445, file: !2776, line: 1480, type: !413)
!15452 = !DILocation(line: 0, scope: !15445)
!15453 = !DILocation(line: 1468, column: 6, scope: !15454)
!15454 = distinct !DILexicalBlock(scope: !15445, file: !2776, line: 1468, column: 6)
!15455 = !DILocation(line: 1468, column: 6, scope: !15445)
!15456 = !DILocation(line: 1469, column: 20, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15454, file: !2776, line: 1468, column: 40)
!15458 = !DILocation(line: 1469, column: 3, scope: !15457)
!15459 = !DILocation(line: 1473, column: 3, scope: !15457)
!15460 = !DILocation(line: 1478, column: 10, scope: !15445)
!15461 = !DILocation(line: 1480, column: 16, scope: !15445)
!15462 = !DILocation(line: 1485, column: 1, scope: !15445)
!15463 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3900, file: !3900, line: 310, type: !15464, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15466)
!15464 = !DISubroutineType(types: !15465)
!15465 = !{null, !15370}
!15466 = !{!15467}
!15467 = !DILocalVariable(name: "thread", arg: 1, scope: !15463, file: !3900, line: 310, type: !15370)
!15468 = !DILocation(line: 0, scope: !15463)
!15469 = !DILocation(line: 319, column: 2, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15463, file: !3900, line: 319, column: 2)
!15471 = !{i64 2151081401}
!15472 = !DILocation(line: 320, column: 2, scope: !15463)
!15473 = !DILocation(line: 321, column: 1, scope: !15463)
!15474 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2776, file: !2776, line: 1415, type: !15475, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15477)
!15475 = !DISubroutineType(types: !15476)
!15476 = !{!413, !202}
!15477 = !{!15478, !15479, !15480, !15481}
!15478 = !DILocalVariable(name: "ticks", arg: 1, scope: !15474, file: !2776, line: 1415, type: !202)
!15479 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15474, file: !2776, line: 1418, type: !158)
!15480 = !DILocalVariable(name: "timeout", scope: !15474, file: !2776, line: 1430, type: !14688)
!15481 = !DILocalVariable(name: "key", scope: !15474, file: !2776, line: 1437, type: !13889)
!15482 = !DILocation(line: 0, scope: !15474)
!15483 = !DILocation(line: 1425, column: 12, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15474, file: !2776, line: 1425, column: 6)
!15485 = !DILocation(line: 1425, column: 6, scope: !15474)
!15486 = !DILocation(line: 1426, column: 3, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15484, file: !2776, line: 1425, column: 18)
!15488 = !DILocation(line: 1427, column: 3, scope: !15487)
!15489 = !DILocation(line: 1431, column: 24, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15474, file: !2776, line: 1431, column: 6)
!15491 = !DILocation(line: 1431, column: 6, scope: !15474)
!15492 = !DILocation(line: 1432, column: 35, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15490, file: !2776, line: 1431, column: 30)
!15494 = !DILocation(line: 1432, column: 27, scope: !15493)
!15495 = !DILocation(line: 1433, column: 2, scope: !15493)
!15496 = !DILocation(line: 1434, column: 27, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15490, file: !2776, line: 1433, column: 9)
!15498 = !DILocation(line: 0, scope: !15490)
!15499 = !DILocation(line: 0, scope: !13897, inlinedAt: !15500)
!15500 = distinct !DILocation(line: 1437, column: 25, scope: !15474)
!15501 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !15502)
!15502 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !15500)
!15503 = !DILocation(line: 0, scope: !13906, inlinedAt: !15502)
!15504 = !DILocation(line: 1440, column: 20, scope: !15474)
!15505 = !DILocation(line: 1440, column: 18, scope: !15474)
!15506 = !DILocation(line: 1442, column: 2, scope: !15474)
!15507 = !DILocation(line: 1443, column: 23, scope: !15474)
!15508 = !DILocation(line: 1443, column: 2, scope: !15474)
!15509 = !DILocation(line: 1444, column: 29, scope: !15474)
!15510 = !DILocation(line: 1444, column: 2, scope: !15474)
!15511 = !DILocation(line: 0, scope: !14508, inlinedAt: !15512)
!15512 = distinct !DILocation(line: 1446, column: 8, scope: !15474)
!15513 = !DILocation(line: 196, column: 9, scope: !14508, inlinedAt: !15512)
!15514 = !DILocation(line: 1450, column: 10, scope: !15474)
!15515 = !DILocation(line: 1450, column: 45, scope: !15474)
!15516 = !DILocation(line: 1450, column: 43, scope: !15474)
!15517 = !DILocation(line: 1451, column: 6, scope: !15474)
!15518 = !DILocation(line: 1457, column: 1, scope: !15474)
!15519 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3858, file: !3858, line: 1103, type: !3859, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15520)
!15520 = !{!15521}
!15521 = !DILocalVariable(name: "t", arg: 1, scope: !15519, file: !3858, line: 1103, type: !207)
!15522 = !DILocation(line: 0, scope: !15519)
!15523 = !DILocation(line: 0, scope: !13946, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 1106, column: 9, scope: !15519)
!15525 = !DILocation(line: 139, column: 13, scope: !15526, inlinedAt: !15524)
!15526 = distinct !DILexicalBlock(scope: !15527, file: !3858, line: 138, column: 10)
!15527 = distinct !DILexicalBlock(scope: !15528, file: !3858, line: 136, column: 7)
!15528 = distinct !DILexicalBlock(scope: !13967, file: !3858, line: 134, column: 17)
!15529 = !DILocation(line: 1106, column: 2, scope: !15519)
!15530 = distinct !DISubprogram(name: "k_yield", scope: !3900, file: !3900, line: 140, type: !416, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !247)
!15531 = !DILocation(line: 148, column: 2, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15530, file: !3900, line: 148, column: 2)
!15533 = !{i64 2151080721}
!15534 = !DILocation(line: 149, column: 2, scope: !15530)
!15535 = !DILocation(line: 150, column: 1, scope: !15530)
!15536 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2776, file: !2776, line: 1495, type: !15537, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15539)
!15537 = !DISubroutineType(types: !15538)
!15538 = !{!413, !111}
!15539 = !{!15540, !15541}
!15540 = !DILocalVariable(name: "us", arg: 1, scope: !15536, file: !2776, line: 1495, type: !111)
!15541 = !DILocalVariable(name: "ticks", scope: !15536, file: !2776, line: 1497, type: !413)
!15542 = !DILocation(line: 0, scope: !15536)
!15543 = !DILocation(line: 1501, column: 31, scope: !15536)
!15544 = !DILocation(line: 1501, column: 10, scope: !15536)
!15545 = !DILocation(line: 1502, column: 23, scope: !15536)
!15546 = !DILocation(line: 1502, column: 10, scope: !15536)
!15547 = !DILocation(line: 1506, column: 31, scope: !15536)
!15548 = !DILocation(line: 1506, column: 9, scope: !15536)
!15549 = !DILocation(line: 1506, column: 2, scope: !15536)
!15550 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3858, file: !3858, line: 571, type: !3859, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15551)
!15551 = !{!15552}
!15552 = !DILocalVariable(name: "t", arg: 1, scope: !15550, file: !3858, line: 571, type: !207)
!15553 = !DILocation(line: 0, scope: !15550)
!15554 = !DILocation(line: 0, scope: !13946, inlinedAt: !15555)
!15555 = distinct !DILocation(line: 574, column: 9, scope: !15550)
!15556 = !DILocation(line: 135, column: 5, scope: !15528, inlinedAt: !15555)
!15557 = !DILocation(line: 139, column: 13, scope: !15526, inlinedAt: !15555)
!15558 = !DILocation(line: 574, column: 2, scope: !15550)
!15559 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3858, file: !3858, line: 1187, type: !3859, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15560)
!15560 = !{!15561}
!15561 = !DILocalVariable(name: "t", arg: 1, scope: !15559, file: !3858, line: 1187, type: !207)
!15562 = !DILocation(line: 0, scope: !15559)
!15563 = !DILocation(line: 0, scope: !13946, inlinedAt: !15564)
!15564 = distinct !DILocation(line: 1190, column: 9, scope: !15559)
!15565 = !DILocation(line: 145, column: 13, scope: !15566, inlinedAt: !15564)
!15566 = distinct !DILexicalBlock(scope: !13964, file: !3858, line: 144, column: 10)
!15567 = !DILocation(line: 1190, column: 2, scope: !15559)
!15568 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2776, file: !2776, line: 1517, type: !15464, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15569)
!15569 = !{!15570}
!15570 = !DILocalVariable(name: "thread", arg: 1, scope: !15568, file: !2776, line: 1517, type: !15370)
!15571 = !DILocation(line: 0, scope: !15568)
!15572 = !DILocation(line: 1521, column: 6, scope: !15573)
!15573 = distinct !DILexicalBlock(scope: !15568, file: !2776, line: 1521, column: 6)
!15574 = !DILocation(line: 1521, column: 6, scope: !15568)
!15575 = !DILocation(line: 1525, column: 6, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !15568, file: !2776, line: 1525, column: 6)
!15577 = !DILocation(line: 1525, column: 37, scope: !15576)
!15578 = !DILocation(line: 1525, column: 6, scope: !15568)
!15579 = !DILocation(line: 1527, column: 20, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15581, file: !2776, line: 1527, column: 7)
!15581 = distinct !DILexicalBlock(scope: !15576, file: !2776, line: 1525, column: 42)
!15582 = !DILocation(line: 1527, column: 33, scope: !15580)
!15583 = !DILocation(line: 1527, column: 7, scope: !15581)
!15584 = !DILocation(line: 1532, column: 2, scope: !15568)
!15585 = !DILocation(line: 1533, column: 2, scope: !15568)
!15586 = !DILocation(line: 1031, column: 3, scope: !14541, inlinedAt: !15587)
!15587 = distinct !DILocation(line: 48, column: 10, scope: !14545, inlinedAt: !15588)
!15588 = distinct !DILocation(line: 1537, column: 7, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15568, file: !2776, line: 1537, column: 6)
!15590 = !DILocation(line: 0, scope: !14541, inlinedAt: !15587)
!15591 = !DILocation(line: 48, column: 9, scope: !14545, inlinedAt: !15588)
!15592 = !DILocation(line: 1537, column: 6, scope: !15568)
!15593 = !DILocation(line: 1538, column: 3, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15589, file: !2776, line: 1537, column: 25)
!15595 = !DILocation(line: 1539, column: 2, scope: !15594)
!15596 = !DILocation(line: 1540, column: 1, scope: !15568)
!15597 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12422, file: !12422, line: 101, type: !14017, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15598)
!15598 = !{!15599}
!15599 = !DILocalVariable(name: "thread", arg: 1, scope: !15597, file: !12422, line: 101, type: !2676)
!15600 = !DILocation(line: 0, scope: !15597)
!15601 = !DILocation(line: 103, column: 23, scope: !15597)
!15602 = !DILocation(line: 103, column: 36, scope: !15597)
!15603 = !DILocation(line: 103, column: 55, scope: !15597)
!15604 = !DILocation(line: 103, column: 2, scope: !15597)
!15605 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2776, file: !2776, line: 1567, type: !15606, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15608)
!15606 = !DISubroutineType(types: !15607)
!15607 = !{!15370}
!15608 = !{!15609}
!15609 = !DILocalVariable(name: "ret", scope: !15605, file: !2776, line: 1577, type: !15370)
!15610 = !DILocation(line: 1577, column: 30, scope: !15605)
!15611 = !DILocation(line: 0, scope: !15605)
!15612 = !DILocation(line: 1582, column: 2, scope: !15605)
!15613 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2776, file: !2776, line: 1593, type: !15614, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !247)
!15614 = !DISubroutineType(types: !15615)
!15615 = !{!111}
!15616 = !DILocation(line: 1031, column: 3, scope: !14541, inlinedAt: !15617)
!15617 = distinct !DILocation(line: 48, column: 10, scope: !14545, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 1595, column: 10, scope: !15613)
!15619 = !DILocation(line: 0, scope: !14541, inlinedAt: !15617)
!15620 = !DILocation(line: 48, column: 9, scope: !14545, inlinedAt: !15618)
!15621 = !DILocation(line: 1595, column: 27, scope: !15613)
!15622 = !DILocation(line: 1595, column: 41, scope: !15613)
!15623 = !DILocation(line: 1595, column: 30, scope: !15613)
!15624 = !DILocation(line: 1595, column: 2, scope: !15613)
!15625 = distinct !DISubprogram(name: "z_thread_abort", scope: !2776, file: !2776, line: 1725, type: !13855, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15626)
!15626 = !{!15627, !15628}
!15627 = !DILocalVariable(name: "thread", arg: 1, scope: !15625, file: !2776, line: 1725, type: !2676)
!15628 = !DILocalVariable(name: "key", scope: !15625, file: !2776, line: 1727, type: !13889)
!15629 = !DILocation(line: 0, scope: !15625)
!15630 = !DILocation(line: 0, scope: !13897, inlinedAt: !15631)
!15631 = distinct !DILocation(line: 1727, column: 25, scope: !15625)
!15632 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !15633)
!15633 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !15631)
!15634 = !DILocation(line: 0, scope: !13906, inlinedAt: !15633)
!15635 = !DILocation(line: 1729, column: 20, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15625, file: !2776, line: 1729, column: 6)
!15637 = !DILocation(line: 1729, column: 33, scope: !15636)
!15638 = !DILocation(line: 1729, column: 48, scope: !15636)
!15639 = !DILocation(line: 1729, column: 6, scope: !15625)
!15640 = !DILocation(line: 0, scope: !13924, inlinedAt: !15641)
!15641 = distinct !DILocation(line: 1730, column: 3, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15636, file: !2776, line: 1729, column: 54)
!15643 = !DILocation(line: 0, scope: !13932, inlinedAt: !15644)
!15644 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !15641)
!15645 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !15644)
!15646 = !DILocation(line: 1732, column: 3, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15642, file: !2776, line: 1732, column: 3)
!15648 = !{i64 2155445501, i64 2155445517, i64 2155445543, i64 2155445571, i64 2155445591}
!15649 = !DILocation(line: 1733, column: 3, scope: !15642)
!15650 = !DILocation(line: 1736, column: 20, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15625, file: !2776, line: 1736, column: 6)
!15652 = !DILocation(line: 1736, column: 33, scope: !15651)
!15653 = !DILocation(line: 1736, column: 49, scope: !15651)
!15654 = !DILocation(line: 1736, column: 6, scope: !15625)
!15655 = !DILocation(line: 0, scope: !13924, inlinedAt: !15656)
!15656 = distinct !DILocation(line: 1737, column: 3, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15651, file: !2776, line: 1736, column: 56)
!15658 = !DILocation(line: 0, scope: !13932, inlinedAt: !15659)
!15659 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !15656)
!15660 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !15659)
!15661 = !DILocation(line: 1738, column: 3, scope: !15657)
!15662 = !DILocation(line: 1775, column: 2, scope: !15625)
!15663 = !DILocation(line: 1776, column: 16, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15625, file: !2776, line: 1776, column: 6)
!15665 = !DILocation(line: 1776, column: 13, scope: !15664)
!15666 = !DILocation(line: 1776, column: 25, scope: !15664)
!15667 = !DILocation(line: 1031, column: 3, scope: !14541, inlinedAt: !15668)
!15668 = distinct !DILocation(line: 48, column: 10, scope: !14545, inlinedAt: !15669)
!15669 = distinct !DILocation(line: 1776, column: 29, scope: !15664)
!15670 = !DILocation(line: 0, scope: !14541, inlinedAt: !15668)
!15671 = !DILocation(line: 48, column: 9, scope: !14545, inlinedAt: !15669)
!15672 = !DILocation(line: 1776, column: 6, scope: !15625)
!15673 = !DILocation(line: 0, scope: !14508, inlinedAt: !15674)
!15674 = distinct !DILocation(line: 1777, column: 3, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15664, file: !2776, line: 1776, column: 47)
!15676 = !DILocation(line: 196, column: 9, scope: !14508, inlinedAt: !15674)
!15677 = !DILocation(line: 1779, column: 2, scope: !15675)
!15678 = !DILocation(line: 0, scope: !13924, inlinedAt: !15679)
!15679 = distinct !DILocation(line: 1780, column: 2, scope: !15625)
!15680 = !DILocation(line: 0, scope: !13932, inlinedAt: !15681)
!15681 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !15679)
!15682 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !15681)
!15683 = !DILocation(line: 1781, column: 1, scope: !15625)
!15684 = distinct !DISubprogram(name: "end_thread", scope: !2776, file: !2776, line: 1690, type: !13855, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15685)
!15685 = !{!15686}
!15686 = !DILocalVariable(name: "thread", arg: 1, scope: !15684, file: !2776, line: 1690, type: !2676)
!15687 = !DILocation(line: 0, scope: !15684)
!15688 = !DILocation(line: 1695, column: 20, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15684, file: !2776, line: 1695, column: 6)
!15690 = !DILocation(line: 1695, column: 33, scope: !15689)
!15691 = !DILocation(line: 1695, column: 49, scope: !15689)
!15692 = !DILocation(line: 1695, column: 6, scope: !15684)
!15693 = !DILocation(line: 1697, column: 29, scope: !15694)
!15694 = distinct !DILexicalBlock(scope: !15689, file: !2776, line: 1695, column: 56)
!15695 = !DILocation(line: 1698, column: 7, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15694, file: !2776, line: 1698, column: 7)
!15697 = !DILocation(line: 1698, column: 7, scope: !15694)
!15698 = !DILocation(line: 0, scope: !14068, inlinedAt: !15699)
!15699 = distinct !DILocation(line: 1699, column: 4, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15696, file: !2776, line: 1698, column: 35)
!15701 = !DILocation(line: 266, column: 28, scope: !14068, inlinedAt: !15699)
!15702 = !DILocation(line: 0, scope: !14076, inlinedAt: !15703)
!15703 = distinct !DILocation(line: 268, column: 3, scope: !14080, inlinedAt: !15699)
!15704 = !DILocation(line: 234, column: 2, scope: !14076, inlinedAt: !15703)
!15705 = !DILocation(line: 1700, column: 3, scope: !15700)
!15706 = !DILocation(line: 1701, column: 20, scope: !15707)
!15707 = distinct !DILexicalBlock(scope: !15694, file: !2776, line: 1701, column: 7)
!15708 = !DILocation(line: 1701, column: 30, scope: !15707)
!15709 = !DILocation(line: 1701, column: 7, scope: !15694)
!15710 = !DILocation(line: 1702, column: 4, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15707, file: !2776, line: 1701, column: 39)
!15712 = !DILocation(line: 1703, column: 3, scope: !15711)
!15713 = !DILocation(line: 1704, column: 9, scope: !15694)
!15714 = !DILocation(line: 1705, column: 23, scope: !15694)
!15715 = !DILocation(line: 1705, column: 3, scope: !15694)
!15716 = !DILocation(line: 1706, column: 3, scope: !15694)
!15717 = !DILocation(line: 1722, column: 2, scope: !15694)
!15718 = !DILocation(line: 1723, column: 1, scope: !15684)
!15719 = distinct !DISubprogram(name: "unpend_all", scope: !2776, file: !2776, line: 1674, type: !15720, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15722)
!15720 = !DISubroutineType(types: !15721)
!15721 = !{null, !2707}
!15722 = !{!15723, !15724}
!15723 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15719, file: !2776, line: 1674, type: !2707)
!15724 = !DILocalVariable(name: "thread", scope: !15719, file: !2776, line: 1676, type: !2676)
!15725 = !DILocation(line: 0, scope: !15719)
!15726 = !DILocation(line: 1678, column: 19, scope: !15719)
!15727 = !DILocation(line: 1678, column: 41, scope: !15719)
!15728 = !DILocation(line: 1678, column: 2, scope: !15719)
!15729 = !DILocation(line: 1679, column: 3, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15719, file: !2776, line: 1678, column: 50)
!15731 = !DILocation(line: 1680, column: 9, scope: !15730)
!15732 = !DILocalVariable(name: "thread", arg: 1, scope: !15733, file: !12442, line: 65, type: !2676)
!15733 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12442, file: !12442, line: 65, type: !15734, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15736)
!15734 = !DISubroutineType(types: !15735)
!15735 = !{null, !2676, !32}
!15736 = !{!15732, !15737}
!15737 = !DILocalVariable(name: "value", arg: 2, scope: !15733, file: !12442, line: 65, type: !32)
!15738 = !DILocation(line: 0, scope: !15733, inlinedAt: !15739)
!15739 = distinct !DILocation(line: 1681, column: 3, scope: !15730)
!15740 = !DILocation(line: 67, column: 15, scope: !15733, inlinedAt: !15739)
!15741 = !DILocation(line: 67, column: 33, scope: !15733, inlinedAt: !15739)
!15742 = !DILocation(line: 1682, column: 3, scope: !15730)
!15743 = distinct !{!15743, !15728, !15744}
!15744 = !DILocation(line: 1683, column: 2, scope: !15719)
!15745 = !DILocation(line: 1684, column: 1, scope: !15719)
!15746 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2776, file: !2776, line: 1794, type: !15747, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15749)
!15747 = !DISubroutineType(types: !15748)
!15748 = !{!111, !2676, !14688}
!15749 = !{!15750, !15751, !15752, !15753}
!15750 = !DILocalVariable(name: "thread", arg: 1, scope: !15746, file: !2776, line: 1794, type: !2676)
!15751 = !DILocalVariable(name: "timeout", arg: 2, scope: !15746, file: !2776, line: 1794, type: !14688)
!15752 = !DILocalVariable(name: "key", scope: !15746, file: !2776, line: 1796, type: !13889)
!15753 = !DILocalVariable(name: "ret", scope: !15746, file: !2776, line: 1797, type: !111)
!15754 = !DILocation(line: 0, scope: !15746)
!15755 = !DILocation(line: 0, scope: !13897, inlinedAt: !15756)
!15756 = distinct !DILocation(line: 1796, column: 25, scope: !15746)
!15757 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !15758)
!15758 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !15756)
!15759 = !DILocation(line: 0, scope: !13906, inlinedAt: !15758)
!15760 = !DILocation(line: 1801, column: 20, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15746, file: !2776, line: 1801, column: 6)
!15762 = !DILocation(line: 1801, column: 33, scope: !15761)
!15763 = !DILocation(line: 1801, column: 49, scope: !15761)
!15764 = !DILocation(line: 1801, column: 6, scope: !15746)
!15765 = !DILocation(line: 1803, column: 13, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15761, file: !2776, line: 1803, column: 13)
!15767 = !DILocation(line: 1803, column: 13, scope: !15761)
!15768 = !DILocation(line: 1805, column: 24, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15766, file: !2776, line: 1805, column: 13)
!15770 = !DILocation(line: 1805, column: 21, scope: !15769)
!15771 = !DILocation(line: 1805, column: 34, scope: !15769)
!15772 = !DILocation(line: 1806, column: 20, scope: !15769)
!15773 = !DILocation(line: 1806, column: 44, scope: !15769)
!15774 = !DILocation(line: 1806, column: 30, scope: !15769)
!15775 = !DILocation(line: 1805, column: 13, scope: !15766)
!15776 = !DILocation(line: 1810, column: 42, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15769, file: !2776, line: 1808, column: 9)
!15778 = !DILocation(line: 1810, column: 3, scope: !15777)
!15779 = !DILocation(line: 1811, column: 22, scope: !15777)
!15780 = !DILocation(line: 1811, column: 3, scope: !15777)
!15781 = !DILocation(line: 0, scope: !14508, inlinedAt: !15782)
!15782 = distinct !DILocation(line: 1814, column: 9, scope: !15777)
!15783 = !DILocation(line: 196, column: 9, scope: !14508, inlinedAt: !15782)
!15784 = !DILocation(line: 1817, column: 3, scope: !15777)
!15785 = !DILocation(line: 0, scope: !15761)
!15786 = !DILocation(line: 0, scope: !13924, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 1822, column: 2, scope: !15746)
!15788 = !DILocation(line: 0, scope: !13932, inlinedAt: !15789)
!15789 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !15787)
!15790 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !15789)
!15791 = !DILocation(line: 1823, column: 2, scope: !15746)
!15792 = !DILocation(line: 1824, column: 1, scope: !15746)
!15793 = distinct !DISubprogram(name: "z_sched_wake", scope: !2776, file: !2776, line: 1882, type: !15794, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15796)
!15794 = !DISubroutineType(types: !15795)
!15795 = !{!131, !2707, !111, !133}
!15796 = !{!15797, !15798, !15799, !15800, !15801, !15802, !15804}
!15797 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15793, file: !2776, line: 1882, type: !2707)
!15798 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15793, file: !2776, line: 1882, type: !111)
!15799 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15793, file: !2776, line: 1882, type: !133)
!15800 = !DILocalVariable(name: "thread", scope: !15793, file: !2776, line: 1884, type: !2676)
!15801 = !DILocalVariable(name: "ret", scope: !15793, file: !2776, line: 1885, type: !131)
!15802 = !DILocalVariable(name: "__i", scope: !15803, file: !2776, line: 1887, type: !13889)
!15803 = distinct !DILexicalBlock(scope: !15793, file: !2776, line: 1887, column: 2)
!15804 = !DILocalVariable(name: "__key", scope: !15803, file: !2776, line: 1887, type: !13889)
!15805 = !DILocation(line: 0, scope: !15793)
!15806 = !DILocation(line: 0, scope: !15803)
!15807 = !DILocation(line: 0, scope: !13897, inlinedAt: !15808)
!15808 = distinct !DILocation(line: 1887, column: 2, scope: !15803)
!15809 = !DILocation(line: 55, column: 2, scope: !13906, inlinedAt: !15810)
!15810 = distinct !DILocation(line: 145, column: 10, scope: !13897, inlinedAt: !15808)
!15811 = !DILocation(line: 0, scope: !13906, inlinedAt: !15810)
!15812 = !DILocation(line: 1888, column: 12, scope: !15813)
!15813 = distinct !DILexicalBlock(scope: !15814, file: !2776, line: 1887, column: 26)
!15814 = distinct !DILexicalBlock(scope: !15803, file: !2776, line: 1887, column: 2)
!15815 = !DILocation(line: 1890, column: 14, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15813, file: !2776, line: 1890, column: 7)
!15817 = !DILocation(line: 1890, column: 7, scope: !15813)
!15818 = !DILocalVariable(name: "thread", arg: 1, scope: !15819, file: !13192, line: 134, type: !2676)
!15819 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13192, file: !13192, line: 134, type: !15820, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15822)
!15820 = !DISubroutineType(types: !15821)
!15821 = !{null, !2676, !32, !133}
!15822 = !{!15818, !15823, !15824}
!15823 = !DILocalVariable(name: "value", arg: 2, scope: !15819, file: !13192, line: 135, type: !32)
!15824 = !DILocalVariable(name: "data", arg: 3, scope: !15819, file: !13192, line: 136, type: !133)
!15825 = !DILocation(line: 0, scope: !15819, inlinedAt: !15826)
!15826 = distinct !DILocation(line: 1891, column: 4, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15816, file: !2776, line: 1890, column: 23)
!15828 = !DILocation(line: 0, scope: !15733, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 138, column: 2, scope: !15819, inlinedAt: !15826)
!15830 = !DILocation(line: 67, column: 15, scope: !15733, inlinedAt: !15829)
!15831 = !DILocation(line: 67, column: 33, scope: !15733, inlinedAt: !15829)
!15832 = !DILocation(line: 139, column: 15, scope: !15819, inlinedAt: !15826)
!15833 = !DILocation(line: 139, column: 25, scope: !15819, inlinedAt: !15826)
!15834 = !DILocation(line: 1894, column: 4, scope: !15827)
!15835 = !DILocation(line: 1895, column: 10, scope: !15827)
!15836 = !DILocation(line: 1896, column: 4, scope: !15827)
!15837 = !DILocation(line: 1898, column: 3, scope: !15827)
!15838 = !DILocation(line: 0, scope: !13924, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 1887, column: 2, scope: !15814)
!15840 = !DILocation(line: 0, scope: !13932, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 215, column: 2, scope: !13924, inlinedAt: !15839)
!15842 = !DILocation(line: 95, column: 2, scope: !13932, inlinedAt: !15841)
!15843 = !DILocation(line: 1901, column: 2, scope: !15793)
!15844 = distinct !DISubprogram(name: "z_sched_wait", scope: !2776, file: !2776, line: 1904, type: !15845, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !15848)
!15845 = !DISubroutineType(types: !15846)
!15846 = !{!111, !13900, !13889, !2707, !14688, !15847}
!15847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!15848 = !{!15849, !15850, !15851, !15852, !15853, !15854}
!15849 = !DILocalVariable(name: "lock", arg: 1, scope: !15844, file: !2776, line: 1904, type: !13900)
!15850 = !DILocalVariable(name: "key", arg: 2, scope: !15844, file: !2776, line: 1904, type: !13889)
!15851 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15844, file: !2776, line: 1905, type: !2707)
!15852 = !DILocalVariable(name: "timeout", arg: 4, scope: !15844, file: !2776, line: 1905, type: !14688)
!15853 = !DILocalVariable(name: "data", arg: 5, scope: !15844, file: !2776, line: 1905, type: !15847)
!15854 = !DILocalVariable(name: "ret", scope: !15844, file: !2776, line: 1907, type: !111)
!15855 = !DILocation(line: 0, scope: !15844)
!15856 = !DILocation(line: 1907, column: 12, scope: !15844)
!15857 = !DILocation(line: 1909, column: 11, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15844, file: !2776, line: 1909, column: 6)
!15859 = !DILocation(line: 1909, column: 6, scope: !15844)
!15860 = !DILocation(line: 1910, column: 11, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !15858, file: !2776, line: 1909, column: 20)
!15862 = !DILocation(line: 1910, column: 26, scope: !15861)
!15863 = !DILocation(line: 1910, column: 9, scope: !15861)
!15864 = !DILocation(line: 1911, column: 2, scope: !15861)
!15865 = !DILocation(line: 1912, column: 2, scope: !15844)
!15866 = distinct !DISubprogram(name: "z_data_copy", scope: !15867, file: !15867, line: 22, type: !416, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3586, retainedNodes: !247)
!15867 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15868 = !DILocation(line: 24, column: 2, scope: !15866)
!15869 = !DILocation(line: 27, column: 2, scope: !15866)
!15870 = !DILocation(line: 71, column: 1, scope: !15866)
!15871 = distinct !DISubprogram(name: "z_add_timeout", scope: !2813, file: !2813, line: 88, type: !15872, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !15878)
!15872 = !DISubroutineType(types: !15873)
!15873 = !{null, !2786, !2805, !15874}
!15874 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !203, line: 67, baseType: !15875)
!15875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !203, line: 65, size: 64, elements: !15876)
!15876 = !{!15877}
!15877 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15875, file: !203, line: 66, baseType: !202, size: 64)
!15878 = !{!15879, !15880, !15881, !15882, !15888, !15889, !15892, !15895}
!15879 = !DILocalVariable(name: "to", arg: 1, scope: !15871, file: !2813, line: 88, type: !2786)
!15880 = !DILocalVariable(name: "fn", arg: 2, scope: !15871, file: !2813, line: 88, type: !2805)
!15881 = !DILocalVariable(name: "timeout", arg: 3, scope: !15871, file: !2813, line: 89, type: !15874)
!15882 = !DILocalVariable(name: "__i", scope: !15883, file: !2813, line: 102, type: !15884)
!15883 = distinct !DILexicalBlock(scope: !15871, file: !2813, line: 102, column: 2)
!15884 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !246, line: 106, baseType: !15885)
!15885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !246, line: 32, size: 32, elements: !15886)
!15886 = !{!15887}
!15887 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15885, file: !246, line: 33, baseType: !111, size: 32)
!15888 = !DILocalVariable(name: "__key", scope: !15883, file: !2813, line: 102, type: !15884)
!15889 = !DILocalVariable(name: "t", scope: !15890, file: !2813, line: 103, type: !2786)
!15890 = distinct !DILexicalBlock(scope: !15891, file: !2813, line: 102, column: 24)
!15891 = distinct !DILexicalBlock(scope: !15883, file: !2813, line: 102, column: 2)
!15892 = !DILocalVariable(name: "ticks", scope: !15893, file: !2813, line: 107, type: !202)
!15893 = distinct !DILexicalBlock(scope: !15894, file: !2813, line: 106, column: 39)
!15894 = distinct !DILexicalBlock(scope: !15890, file: !2813, line: 105, column: 7)
!15895 = !DILocalVariable(name: "next_time", scope: !15896, file: !2813, line: 137, type: !413)
!15896 = distinct !DILexicalBlock(scope: !15897, file: !2813, line: 127, column: 22)
!15897 = distinct !DILexicalBlock(scope: !15890, file: !2813, line: 127, column: 7)
!15898 = !DILocation(line: 0, scope: !15871)
!15899 = !DILocation(line: 91, column: 6, scope: !15900)
!15900 = distinct !DILexicalBlock(scope: !15871, file: !2813, line: 91, column: 6)
!15901 = !DILocation(line: 91, column: 6, scope: !15871)
!15902 = !DILocation(line: 100, column: 6, scope: !15871)
!15903 = !DILocation(line: 100, column: 9, scope: !15871)
!15904 = !DILocation(line: 0, scope: !15883)
!15905 = !DILocalVariable(name: "l", arg: 1, scope: !15906, file: !246, line: 136, type: !15909)
!15906 = distinct !DISubprogram(name: "k_spin_lock", scope: !246, file: !246, line: 136, type: !15907, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !15910)
!15907 = !DISubroutineType(types: !15908)
!15908 = !{!15884, !15909}
!15909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!15910 = !{!15905, !15911}
!15911 = !DILocalVariable(name: "k", scope: !15906, file: !246, line: 139, type: !15884)
!15912 = !DILocation(line: 0, scope: !15906, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 102, column: 2, scope: !15883)
!15914 = !DILocation(line: 55, column: 2, scope: !15915, inlinedAt: !15919)
!15915 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7659, file: !7659, line: 42, type: !9702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !15916)
!15916 = !{!15917, !15918}
!15917 = !DILocalVariable(name: "key", scope: !15915, file: !7659, line: 44, type: !32)
!15918 = !DILocalVariable(name: "tmp", scope: !15915, file: !7659, line: 53, type: !32)
!15919 = distinct !DILocation(line: 145, column: 10, scope: !15906, inlinedAt: !15913)
!15920 = !{i64 2847914}
!15921 = !DILocation(line: 0, scope: !15915, inlinedAt: !15919)
!15922 = !DILocation(line: 106, column: 33, scope: !15894)
!15923 = !DILocation(line: 105, column: 7, scope: !15890)
!15924 = !DILocation(line: 107, column: 50, scope: !15893)
!15925 = !DILocation(line: 107, column: 48, scope: !15893)
!15926 = !DILocation(line: 0, scope: !15893)
!15927 = !DILocation(line: 109, column: 17, scope: !15893)
!15928 = !DILocation(line: 110, column: 3, scope: !15893)
!15929 = !DILocation(line: 111, column: 31, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15894, file: !2813, line: 110, column: 10)
!15931 = !DILocation(line: 111, column: 37, scope: !15930)
!15932 = !DILocation(line: 111, column: 35, scope: !15930)
!15933 = !DILocation(line: 0, scope: !15894)
!15934 = !DILocation(line: 109, column: 8, scope: !15893)
!15935 = !DILocation(line: 109, column: 15, scope: !15893)
!15936 = !DILocation(line: 114, column: 12, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15890, file: !2813, line: 114, column: 3)
!15938 = !DILocation(line: 0, scope: !15890)
!15939 = !DILocation(line: 114, column: 3, scope: !15937)
!15940 = !DILocation(line: 115, column: 24, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15942, file: !2813, line: 115, column: 8)
!15942 = distinct !DILexicalBlock(scope: !15943, file: !2813, line: 114, column: 45)
!15943 = distinct !DILexicalBlock(scope: !15937, file: !2813, line: 114, column: 3)
!15944 = !DILocation(line: 115, column: 11, scope: !15941)
!15945 = !DILocation(line: 115, column: 18, scope: !15941)
!15946 = !DILocation(line: 115, column: 8, scope: !15942)
!15947 = !DILocation(line: 116, column: 15, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15941, file: !2813, line: 115, column: 32)
!15949 = !DILocation(line: 117, column: 26, scope: !15948)
!15950 = !DILocation(line: 117, column: 37, scope: !15948)
!15951 = !DILocation(line: 117, column: 5, scope: !15948)
!15952 = !DILocation(line: 123, column: 7, scope: !15890)
!15953 = !DILocation(line: 120, column: 15, scope: !15942)
!15954 = !DILocation(line: 114, column: 36, scope: !15943)
!15955 = distinct !{!15955, !15939, !15956}
!15956 = !DILocation(line: 121, column: 3, scope: !15937)
!15957 = !DILocation(line: 124, column: 41, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15959, file: !2813, line: 123, column: 18)
!15959 = distinct !DILexicalBlock(scope: !15890, file: !2813, line: 123, column: 7)
!15960 = !DILocation(line: 124, column: 4, scope: !15958)
!15961 = !DILocation(line: 125, column: 3, scope: !15958)
!15962 = !DILocation(line: 127, column: 13, scope: !15897)
!15963 = !DILocation(line: 127, column: 10, scope: !15897)
!15964 = !DILocation(line: 127, column: 7, scope: !15890)
!15965 = !DILocation(line: 137, column: 24, scope: !15896)
!15966 = !DILocation(line: 0, scope: !15896)
!15967 = !DILocation(line: 139, column: 18, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15896, file: !2813, line: 139, column: 8)
!15969 = !DILocation(line: 139, column: 23, scope: !15968)
!15970 = !DILocation(line: 141, column: 5, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15968, file: !2813, line: 140, column: 48)
!15972 = !DILocation(line: 142, column: 4, scope: !15971)
!15973 = !DILocalVariable(name: "key", arg: 2, scope: !15974, file: !246, line: 190, type: !15884)
!15974 = distinct !DISubprogram(name: "k_spin_unlock", scope: !246, file: !246, line: 189, type: !15975, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !15977)
!15975 = !DISubroutineType(types: !15976)
!15976 = !{null, !15909, !15884}
!15977 = !{!15978, !15973}
!15978 = !DILocalVariable(name: "l", arg: 1, scope: !15974, file: !246, line: 189, type: !15909)
!15979 = !DILocation(line: 0, scope: !15974, inlinedAt: !15980)
!15980 = distinct !DILocation(line: 102, column: 2, scope: !15891)
!15981 = !DILocalVariable(name: "key", arg: 1, scope: !15982, file: !7659, line: 84, type: !32)
!15982 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !15983)
!15983 = !{!15981}
!15984 = !DILocation(line: 0, scope: !15982, inlinedAt: !15985)
!15985 = distinct !DILocation(line: 215, column: 2, scope: !15974, inlinedAt: !15980)
!15986 = !DILocation(line: 95, column: 2, scope: !15982, inlinedAt: !15985)
!15987 = !{i64 2848731}
!15988 = !DILocation(line: 148, column: 1, scope: !15871)
!15989 = distinct !DISubprogram(name: "elapsed", scope: !2813, file: !2813, line: 62, type: !15990, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !247)
!15990 = !DISubroutineType(types: !15991)
!15991 = !{!413}
!15992 = !DILocation(line: 64, column: 9, scope: !15989)
!15993 = !DILocation(line: 64, column: 28, scope: !15989)
!15994 = !DILocation(line: 64, column: 35, scope: !15989)
!15995 = !DILocation(line: 64, column: 2, scope: !15989)
!15996 = distinct !DISubprogram(name: "first", scope: !2813, file: !2813, line: 39, type: !15997, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !15999)
!15997 = !DISubroutineType(types: !15998)
!15998 = !{!2786}
!15999 = !{!16000}
!16000 = !DILocalVariable(name: "t", scope: !15996, file: !2813, line: 41, type: !16001)
!16001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 32)
!16002 = !DILocation(line: 41, column: 19, scope: !15996)
!16003 = !DILocation(line: 0, scope: !15996)
!16004 = !DILocation(line: 43, column: 9, scope: !15996)
!16005 = !DILocation(line: 43, column: 2, scope: !15996)
!16006 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !230, file: !230, line: 443, type: !16007, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16009)
!16007 = !DISubroutineType(types: !16008)
!16008 = !{null, !16001, !16001}
!16009 = !{!16010, !16011, !16012}
!16010 = !DILocalVariable(name: "successor", arg: 1, scope: !16006, file: !230, line: 443, type: !16001)
!16011 = !DILocalVariable(name: "node", arg: 2, scope: !16006, file: !230, line: 443, type: !16001)
!16012 = !DILocalVariable(name: "prev", scope: !16006, file: !230, line: 445, type: !16013)
!16013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16001)
!16014 = !DILocation(line: 0, scope: !16006)
!16015 = !DILocation(line: 445, column: 39, scope: !16006)
!16016 = !DILocation(line: 447, column: 8, scope: !16006)
!16017 = !DILocation(line: 447, column: 13, scope: !16006)
!16018 = !DILocation(line: 448, column: 8, scope: !16006)
!16019 = !DILocation(line: 448, column: 13, scope: !16006)
!16020 = !DILocation(line: 449, column: 8, scope: !16006)
!16021 = !DILocation(line: 449, column: 13, scope: !16006)
!16022 = !DILocation(line: 450, column: 18, scope: !16006)
!16023 = !DILocation(line: 451, column: 1, scope: !16006)
!16024 = distinct !DISubprogram(name: "next", scope: !2813, file: !2813, line: 46, type: !16025, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16027)
!16025 = !DISubroutineType(types: !16026)
!16026 = !{!2786, !2786}
!16027 = !{!16028, !16029}
!16028 = !DILocalVariable(name: "t", arg: 1, scope: !16024, file: !2813, line: 46, type: !2786)
!16029 = !DILocalVariable(name: "n", scope: !16024, file: !2813, line: 48, type: !16001)
!16030 = !DILocation(line: 0, scope: !16024)
!16031 = !DILocation(line: 48, column: 58, scope: !16024)
!16032 = !DILocation(line: 48, column: 19, scope: !16024)
!16033 = !DILocation(line: 50, column: 9, scope: !16024)
!16034 = !DILocation(line: 50, column: 2, scope: !16024)
!16035 = distinct !DISubprogram(name: "sys_dlist_append", scope: !230, file: !230, line: 404, type: !16036, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16039)
!16036 = !DISubroutineType(types: !16037)
!16037 = !{null, !16038, !16001}
!16038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 32)
!16039 = !{!16040, !16041, !16042}
!16040 = !DILocalVariable(name: "list", arg: 1, scope: !16035, file: !230, line: 404, type: !16038)
!16041 = !DILocalVariable(name: "node", arg: 2, scope: !16035, file: !230, line: 404, type: !16001)
!16042 = !DILocalVariable(name: "tail", scope: !16035, file: !230, line: 406, type: !16013)
!16043 = !DILocation(line: 0, scope: !16035)
!16044 = !DILocation(line: 406, column: 34, scope: !16035)
!16045 = !DILocation(line: 408, column: 8, scope: !16035)
!16046 = !DILocation(line: 408, column: 13, scope: !16035)
!16047 = !DILocation(line: 409, column: 8, scope: !16035)
!16048 = !DILocation(line: 409, column: 13, scope: !16035)
!16049 = !DILocation(line: 411, column: 8, scope: !16035)
!16050 = !DILocation(line: 411, column: 13, scope: !16035)
!16051 = !DILocation(line: 412, column: 13, scope: !16035)
!16052 = !DILocation(line: 413, column: 1, scope: !16035)
!16053 = distinct !DISubprogram(name: "next_timeout", scope: !2813, file: !2813, line: 67, type: !15990, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16054)
!16054 = !{!16055, !16056, !16057}
!16055 = !DILocalVariable(name: "to", scope: !16053, file: !2813, line: 69, type: !2786)
!16056 = !DILocalVariable(name: "ticks_elapsed", scope: !16053, file: !2813, line: 70, type: !413)
!16057 = !DILocalVariable(name: "ret", scope: !16053, file: !2813, line: 71, type: !413)
!16058 = !DILocation(line: 69, column: 24, scope: !16053)
!16059 = !DILocation(line: 0, scope: !16053)
!16060 = !DILocation(line: 70, column: 26, scope: !16053)
!16061 = !DILocation(line: 73, column: 10, scope: !16062)
!16062 = distinct !DILexicalBlock(scope: !16053, file: !2813, line: 73, column: 6)
!16063 = !DILocation(line: 73, column: 19, scope: !16062)
!16064 = !DILocation(line: 74, column: 21, scope: !16062)
!16065 = !DILocation(line: 74, column: 30, scope: !16062)
!16066 = !DILocation(line: 74, column: 28, scope: !16062)
!16067 = !DILocation(line: 74, column: 45, scope: !16062)
!16068 = !DILocation(line: 73, column: 6, scope: !16053)
!16069 = !DILocation(line: 77, column: 9, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !16062, file: !2813, line: 76, column: 9)
!16071 = !DILocation(line: 0, scope: !16062)
!16072 = !DILocation(line: 81, column: 20, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16053, file: !2813, line: 81, column: 6)
!16074 = !DILocation(line: 81, column: 6, scope: !16073)
!16075 = !DILocation(line: 81, column: 32, scope: !16073)
!16076 = !DILocation(line: 85, column: 2, scope: !16053)
!16077 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !230, file: !230, line: 341, type: !16078, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16080)
!16078 = !DISubroutineType(types: !16079)
!16079 = !{!16001, !16038, !16001}
!16080 = !{!16081, !16082}
!16081 = !DILocalVariable(name: "list", arg: 1, scope: !16077, file: !230, line: 341, type: !16038)
!16082 = !DILocalVariable(name: "node", arg: 2, scope: !16077, file: !230, line: 342, type: !16001)
!16083 = !DILocation(line: 0, scope: !16077)
!16084 = !DILocation(line: 344, column: 15, scope: !16077)
!16085 = !DILocation(line: 344, column: 9, scope: !16077)
!16086 = !DILocation(line: 344, column: 26, scope: !16077)
!16087 = !DILocation(line: 344, column: 2, scope: !16077)
!16088 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !230, file: !230, line: 325, type: !16078, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16089)
!16089 = !{!16090, !16091}
!16090 = !DILocalVariable(name: "list", arg: 1, scope: !16088, file: !230, line: 325, type: !16038)
!16091 = !DILocalVariable(name: "node", arg: 2, scope: !16088, file: !230, line: 326, type: !16001)
!16092 = !DILocation(line: 0, scope: !16088)
!16093 = !DILocation(line: 328, column: 24, scope: !16088)
!16094 = !DILocation(line: 328, column: 15, scope: !16088)
!16095 = !DILocation(line: 328, column: 9, scope: !16088)
!16096 = !DILocation(line: 328, column: 45, scope: !16088)
!16097 = !DILocation(line: 328, column: 2, scope: !16088)
!16098 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !230, file: !230, line: 294, type: !16099, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16101)
!16099 = !DISubroutineType(types: !16100)
!16100 = !{!16001, !16038}
!16101 = !{!16102}
!16102 = !DILocalVariable(name: "list", arg: 1, scope: !16098, file: !230, line: 294, type: !16038)
!16103 = !DILocation(line: 0, scope: !16098)
!16104 = !DILocation(line: 296, column: 9, scope: !16098)
!16105 = !DILocation(line: 296, column: 2, scope: !16098)
!16106 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !230, file: !230, line: 266, type: !16107, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16109)
!16107 = !DISubroutineType(types: !16108)
!16108 = !{!131, !16038}
!16109 = !{!16110}
!16110 = !DILocalVariable(name: "list", arg: 1, scope: !16106, file: !230, line: 266, type: !16038)
!16111 = !DILocation(line: 0, scope: !16106)
!16112 = !DILocation(line: 268, column: 15, scope: !16106)
!16113 = !DILocation(line: 268, column: 20, scope: !16106)
!16114 = !DILocation(line: 268, column: 2, scope: !16106)
!16115 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2813, file: !2813, line: 150, type: !16116, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16118)
!16116 = !DISubroutineType(types: !16117)
!16117 = !{!111, !2786}
!16118 = !{!16119, !16120, !16121, !16123}
!16119 = !DILocalVariable(name: "to", arg: 1, scope: !16115, file: !2813, line: 150, type: !2786)
!16120 = !DILocalVariable(name: "ret", scope: !16115, file: !2813, line: 152, type: !111)
!16121 = !DILocalVariable(name: "__i", scope: !16122, file: !2813, line: 154, type: !15884)
!16122 = distinct !DILexicalBlock(scope: !16115, file: !2813, line: 154, column: 2)
!16123 = !DILocalVariable(name: "__key", scope: !16122, file: !2813, line: 154, type: !15884)
!16124 = !DILocation(line: 0, scope: !16115)
!16125 = !DILocation(line: 0, scope: !16122)
!16126 = !DILocation(line: 0, scope: !15906, inlinedAt: !16127)
!16127 = distinct !DILocation(line: 154, column: 2, scope: !16122)
!16128 = !DILocation(line: 55, column: 2, scope: !15915, inlinedAt: !16129)
!16129 = distinct !DILocation(line: 145, column: 10, scope: !15906, inlinedAt: !16127)
!16130 = !DILocation(line: 0, scope: !15915, inlinedAt: !16129)
!16131 = !DILocation(line: 155, column: 7, scope: !16132)
!16132 = distinct !DILexicalBlock(scope: !16133, file: !2813, line: 155, column: 7)
!16133 = distinct !DILexicalBlock(scope: !16134, file: !2813, line: 154, column: 24)
!16134 = distinct !DILexicalBlock(scope: !16122, file: !2813, line: 154, column: 2)
!16135 = !DILocation(line: 155, column: 7, scope: !16133)
!16136 = !DILocation(line: 156, column: 4, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16132, file: !2813, line: 155, column: 39)
!16138 = !DILocation(line: 158, column: 3, scope: !16137)
!16139 = !DILocation(line: 0, scope: !15974, inlinedAt: !16140)
!16140 = distinct !DILocation(line: 154, column: 2, scope: !16134)
!16141 = !DILocation(line: 0, scope: !15982, inlinedAt: !16142)
!16142 = distinct !DILocation(line: 215, column: 2, scope: !15974, inlinedAt: !16140)
!16143 = !DILocation(line: 95, column: 2, scope: !15982, inlinedAt: !16142)
!16144 = !DILocation(line: 161, column: 2, scope: !16115)
!16145 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !230, file: !230, line: 225, type: !16146, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16150)
!16146 = !DISubroutineType(types: !16147)
!16147 = !{!131, !16148}
!16148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16149, size: 32)
!16149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2790)
!16150 = !{!16151}
!16151 = !DILocalVariable(name: "node", arg: 1, scope: !16145, file: !230, line: 225, type: !16148)
!16152 = !DILocation(line: 0, scope: !16145)
!16153 = !DILocation(line: 227, column: 15, scope: !16145)
!16154 = !DILocation(line: 227, column: 20, scope: !16145)
!16155 = !DILocation(line: 227, column: 2, scope: !16145)
!16156 = distinct !DISubprogram(name: "remove_timeout", scope: !2813, file: !2813, line: 53, type: !2807, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16157)
!16157 = !{!16158}
!16158 = !DILocalVariable(name: "t", arg: 1, scope: !16156, file: !2813, line: 53, type: !2786)
!16159 = !DILocation(line: 0, scope: !16156)
!16160 = !DILocation(line: 55, column: 6, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16156, file: !2813, line: 55, column: 6)
!16162 = !DILocation(line: 55, column: 14, scope: !16161)
!16163 = !DILocation(line: 55, column: 6, scope: !16156)
!16164 = !DILocation(line: 56, column: 25, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16161, file: !2813, line: 55, column: 23)
!16166 = !DILocation(line: 56, column: 12, scope: !16165)
!16167 = !DILocation(line: 56, column: 19, scope: !16165)
!16168 = !DILocation(line: 57, column: 2, scope: !16165)
!16169 = !DILocation(line: 59, column: 23, scope: !16156)
!16170 = !DILocation(line: 59, column: 2, scope: !16156)
!16171 = !DILocation(line: 60, column: 1, scope: !16156)
!16172 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !230, file: !230, line: 496, type: !16173, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16175)
!16173 = !DISubroutineType(types: !16174)
!16174 = !{null, !16001}
!16175 = !{!16176, !16177, !16178}
!16176 = !DILocalVariable(name: "node", arg: 1, scope: !16172, file: !230, line: 496, type: !16001)
!16177 = !DILocalVariable(name: "prev", scope: !16172, file: !230, line: 498, type: !16013)
!16178 = !DILocalVariable(name: "next", scope: !16172, file: !230, line: 499, type: !16013)
!16179 = !DILocation(line: 0, scope: !16172)
!16180 = !DILocation(line: 498, column: 34, scope: !16172)
!16181 = !DILocation(line: 499, column: 34, scope: !16172)
!16182 = !DILocation(line: 501, column: 8, scope: !16172)
!16183 = !DILocation(line: 501, column: 13, scope: !16172)
!16184 = !DILocation(line: 502, column: 8, scope: !16172)
!16185 = !DILocation(line: 502, column: 13, scope: !16172)
!16186 = !DILocation(line: 503, column: 2, scope: !16172)
!16187 = !DILocation(line: 504, column: 1, scope: !16172)
!16188 = distinct !DISubprogram(name: "sys_dnode_init", scope: !230, file: !230, line: 211, type: !16173, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16189)
!16189 = !{!16190}
!16190 = !DILocalVariable(name: "node", arg: 1, scope: !16188, file: !230, line: 211, type: !16001)
!16191 = !DILocation(line: 0, scope: !16188)
!16192 = !DILocation(line: 213, column: 8, scope: !16188)
!16193 = !DILocation(line: 213, column: 13, scope: !16188)
!16194 = !DILocation(line: 214, column: 8, scope: !16188)
!16195 = !DILocation(line: 214, column: 13, scope: !16188)
!16196 = !DILocation(line: 215, column: 1, scope: !16188)
!16197 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2813, file: !2813, line: 183, type: !16198, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16202)
!16198 = !DISubroutineType(types: !16199)
!16199 = !{!202, !16200}
!16200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16201, size: 32)
!16201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2787)
!16202 = !{!16203, !16204, !16205, !16207}
!16203 = !DILocalVariable(name: "timeout", arg: 1, scope: !16197, file: !2813, line: 183, type: !16200)
!16204 = !DILocalVariable(name: "ticks", scope: !16197, file: !2813, line: 185, type: !202)
!16205 = !DILocalVariable(name: "__i", scope: !16206, file: !2813, line: 187, type: !15884)
!16206 = distinct !DILexicalBlock(scope: !16197, file: !2813, line: 187, column: 2)
!16207 = !DILocalVariable(name: "__key", scope: !16206, file: !2813, line: 187, type: !15884)
!16208 = !DILocation(line: 0, scope: !16197)
!16209 = !DILocation(line: 0, scope: !16206)
!16210 = !DILocation(line: 0, scope: !15906, inlinedAt: !16211)
!16211 = distinct !DILocation(line: 187, column: 2, scope: !16206)
!16212 = !DILocation(line: 55, column: 2, scope: !15915, inlinedAt: !16213)
!16213 = distinct !DILocation(line: 145, column: 10, scope: !15906, inlinedAt: !16211)
!16214 = !DILocation(line: 0, scope: !15915, inlinedAt: !16213)
!16215 = !DILocation(line: 188, column: 11, scope: !16216)
!16216 = distinct !DILexicalBlock(scope: !16217, file: !2813, line: 187, column: 24)
!16217 = distinct !DILexicalBlock(scope: !16206, file: !2813, line: 187, column: 2)
!16218 = !DILocation(line: 0, scope: !15974, inlinedAt: !16219)
!16219 = distinct !DILocation(line: 187, column: 2, scope: !16217)
!16220 = !DILocation(line: 0, scope: !15982, inlinedAt: !16221)
!16221 = distinct !DILocation(line: 215, column: 2, scope: !15974, inlinedAt: !16219)
!16222 = !DILocation(line: 95, column: 2, scope: !15982, inlinedAt: !16221)
!16223 = !DILocation(line: 191, column: 2, scope: !16197)
!16224 = distinct !DISubprogram(name: "timeout_rem", scope: !2813, file: !2813, line: 165, type: !16198, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16225)
!16225 = !{!16226, !16227, !16228}
!16226 = !DILocalVariable(name: "timeout", arg: 1, scope: !16224, file: !2813, line: 165, type: !16200)
!16227 = !DILocalVariable(name: "ticks", scope: !16224, file: !2813, line: 167, type: !202)
!16228 = !DILocalVariable(name: "t", scope: !16229, file: !2813, line: 173, type: !2786)
!16229 = distinct !DILexicalBlock(scope: !16224, file: !2813, line: 173, column: 2)
!16230 = !DILocation(line: 0, scope: !16224)
!16231 = !DILocation(line: 169, column: 6, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16224, file: !2813, line: 169, column: 6)
!16233 = !DILocation(line: 169, column: 6, scope: !16224)
!16234 = !DILocation(line: 173, column: 28, scope: !16229)
!16235 = !DILocation(line: 0, scope: !16229)
!16236 = !DILocation(line: 173, column: 39, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16229, file: !2813, line: 173, column: 2)
!16238 = !DILocation(line: 173, column: 2, scope: !16229)
!16239 = !DILocation(line: 174, column: 15, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16237, file: !2813, line: 173, column: 61)
!16241 = !DILocation(line: 174, column: 9, scope: !16240)
!16242 = !DILocation(line: 175, column: 15, scope: !16243)
!16243 = distinct !DILexicalBlock(scope: !16240, file: !2813, line: 175, column: 7)
!16244 = !DILocation(line: 175, column: 7, scope: !16240)
!16245 = !DILocation(line: 173, column: 52, scope: !16237)
!16246 = distinct !{!16246, !16238, !16247}
!16247 = !DILocation(line: 178, column: 2, scope: !16229)
!16248 = !DILocation(line: 180, column: 17, scope: !16224)
!16249 = !DILocation(line: 180, column: 15, scope: !16224)
!16250 = !DILocation(line: 180, column: 2, scope: !16224)
!16251 = !DILocation(line: 181, column: 1, scope: !16224)
!16252 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12815, file: !12815, line: 35, type: !16253, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16255)
!16253 = !DISubroutineType(types: !16254)
!16254 = !{!131, !16200}
!16255 = !{!16256}
!16256 = !DILocalVariable(name: "to", arg: 1, scope: !16252, file: !12815, line: 35, type: !16200)
!16257 = !DILocation(line: 0, scope: !16252)
!16258 = !DILocation(line: 37, column: 35, scope: !16252)
!16259 = !DILocation(line: 37, column: 10, scope: !16252)
!16260 = !DILocation(line: 37, column: 9, scope: !16252)
!16261 = !DILocation(line: 37, column: 2, scope: !16252)
!16262 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2813, file: !2813, line: 194, type: !16198, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16263)
!16263 = !{!16264, !16265, !16266, !16268}
!16264 = !DILocalVariable(name: "timeout", arg: 1, scope: !16262, file: !2813, line: 194, type: !16200)
!16265 = !DILocalVariable(name: "ticks", scope: !16262, file: !2813, line: 196, type: !202)
!16266 = !DILocalVariable(name: "__i", scope: !16267, file: !2813, line: 198, type: !15884)
!16267 = distinct !DILexicalBlock(scope: !16262, file: !2813, line: 198, column: 2)
!16268 = !DILocalVariable(name: "__key", scope: !16267, file: !2813, line: 198, type: !15884)
!16269 = !DILocation(line: 0, scope: !16262)
!16270 = !DILocation(line: 0, scope: !16267)
!16271 = !DILocation(line: 0, scope: !15906, inlinedAt: !16272)
!16272 = distinct !DILocation(line: 198, column: 2, scope: !16267)
!16273 = !DILocation(line: 55, column: 2, scope: !15915, inlinedAt: !16274)
!16274 = distinct !DILocation(line: 145, column: 10, scope: !15906, inlinedAt: !16272)
!16275 = !DILocation(line: 0, scope: !15915, inlinedAt: !16274)
!16276 = !DILocation(line: 199, column: 11, scope: !16277)
!16277 = distinct !DILexicalBlock(scope: !16278, file: !2813, line: 198, column: 24)
!16278 = distinct !DILexicalBlock(scope: !16267, file: !2813, line: 198, column: 2)
!16279 = !DILocation(line: 199, column: 23, scope: !16277)
!16280 = !DILocation(line: 0, scope: !15974, inlinedAt: !16281)
!16281 = distinct !DILocation(line: 198, column: 2, scope: !16278)
!16282 = !DILocation(line: 0, scope: !15982, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 215, column: 2, scope: !15974, inlinedAt: !16281)
!16284 = !DILocation(line: 95, column: 2, scope: !15982, inlinedAt: !16283)
!16285 = !DILocation(line: 199, column: 21, scope: !16277)
!16286 = !DILocation(line: 202, column: 2, scope: !16262)
!16287 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2813, file: !2813, line: 205, type: !15990, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16288)
!16288 = !{!16289, !16290, !16292}
!16289 = !DILocalVariable(name: "ret", scope: !16287, file: !2813, line: 207, type: !413)
!16290 = !DILocalVariable(name: "__i", scope: !16291, file: !2813, line: 209, type: !15884)
!16291 = distinct !DILexicalBlock(scope: !16287, file: !2813, line: 209, column: 2)
!16292 = !DILocalVariable(name: "__key", scope: !16291, file: !2813, line: 209, type: !15884)
!16293 = !DILocation(line: 0, scope: !16287)
!16294 = !DILocation(line: 0, scope: !16291)
!16295 = !DILocation(line: 0, scope: !15906, inlinedAt: !16296)
!16296 = distinct !DILocation(line: 209, column: 2, scope: !16291)
!16297 = !DILocation(line: 55, column: 2, scope: !15915, inlinedAt: !16298)
!16298 = distinct !DILocation(line: 145, column: 10, scope: !15906, inlinedAt: !16296)
!16299 = !DILocation(line: 0, scope: !15915, inlinedAt: !16298)
!16300 = !DILocation(line: 210, column: 9, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16302, file: !2813, line: 209, column: 24)
!16302 = distinct !DILexicalBlock(scope: !16291, file: !2813, line: 209, column: 2)
!16303 = !DILocation(line: 0, scope: !15974, inlinedAt: !16304)
!16304 = distinct !DILocation(line: 209, column: 2, scope: !16302)
!16305 = !DILocation(line: 0, scope: !15982, inlinedAt: !16306)
!16306 = distinct !DILocation(line: 215, column: 2, scope: !15974, inlinedAt: !16304)
!16307 = !DILocation(line: 95, column: 2, scope: !15982, inlinedAt: !16306)
!16308 = !DILocation(line: 212, column: 2, scope: !16287)
!16309 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2813, file: !2813, line: 215, type: !10361, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16310)
!16310 = !{!16311, !16312, !16313, !16315, !16316, !16319, !16320}
!16311 = !DILocalVariable(name: "ticks", arg: 1, scope: !16309, file: !2813, line: 215, type: !413)
!16312 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16309, file: !2813, line: 215, type: !131)
!16313 = !DILocalVariable(name: "__i", scope: !16314, file: !2813, line: 217, type: !15884)
!16314 = distinct !DILexicalBlock(scope: !16309, file: !2813, line: 217, column: 2)
!16315 = !DILocalVariable(name: "__key", scope: !16314, file: !2813, line: 217, type: !15884)
!16316 = !DILocalVariable(name: "next_to", scope: !16317, file: !2813, line: 218, type: !111)
!16317 = distinct !DILexicalBlock(scope: !16318, file: !2813, line: 217, column: 24)
!16318 = distinct !DILexicalBlock(scope: !16314, file: !2813, line: 217, column: 2)
!16319 = !DILocalVariable(name: "sooner", scope: !16317, file: !2813, line: 219, type: !131)
!16320 = !DILocalVariable(name: "imminent", scope: !16317, file: !2813, line: 221, type: !131)
!16321 = !DILocation(line: 0, scope: !16309)
!16322 = !DILocation(line: 0, scope: !16314)
!16323 = !DILocation(line: 0, scope: !15906, inlinedAt: !16324)
!16324 = distinct !DILocation(line: 217, column: 2, scope: !16314)
!16325 = !DILocation(line: 55, column: 2, scope: !15915, inlinedAt: !16326)
!16326 = distinct !DILocation(line: 145, column: 10, scope: !15906, inlinedAt: !16324)
!16327 = !DILocation(line: 0, scope: !15915, inlinedAt: !16326)
!16328 = !DILocation(line: 218, column: 17, scope: !16317)
!16329 = !DILocation(line: 0, scope: !16317)
!16330 = !DILocation(line: 221, column: 27, scope: !16317)
!16331 = !DILocation(line: 233, column: 17, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16317, file: !2813, line: 233, column: 7)
!16333 = !DILocation(line: 234, column: 26, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16332, file: !2813, line: 233, column: 56)
!16335 = !DILocation(line: 234, column: 4, scope: !16334)
!16336 = !DILocation(line: 235, column: 3, scope: !16334)
!16337 = !DILocation(line: 0, scope: !15974, inlinedAt: !16338)
!16338 = distinct !DILocation(line: 217, column: 2, scope: !16318)
!16339 = !DILocation(line: 0, scope: !15982, inlinedAt: !16340)
!16340 = distinct !DILocation(line: 215, column: 2, scope: !15974, inlinedAt: !16338)
!16341 = !DILocation(line: 95, column: 2, scope: !15982, inlinedAt: !16340)
!16342 = !DILocation(line: 237, column: 1, scope: !16309)
!16343 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2813, file: !2813, line: 239, type: !16344, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16346)
!16344 = !DISubroutineType(types: !16345)
!16345 = !{null, !413}
!16346 = !{!16347, !16348, !16349, !16351}
!16347 = !DILocalVariable(name: "ticks", arg: 1, scope: !16343, file: !2813, line: 239, type: !413)
!16348 = !DILocalVariable(name: "key", scope: !16343, file: !2813, line: 245, type: !15884)
!16349 = !DILocalVariable(name: "t", scope: !16350, file: !2813, line: 262, type: !2786)
!16350 = distinct !DILexicalBlock(scope: !16343, file: !2813, line: 261, column: 67)
!16351 = !DILocalVariable(name: "dt", scope: !16350, file: !2813, line: 263, type: !111)
!16352 = !DILocation(line: 0, scope: !16343)
!16353 = !DILocation(line: 242, column: 2, scope: !16343)
!16354 = !DILocation(line: 0, scope: !15906, inlinedAt: !16355)
!16355 = distinct !DILocation(line: 245, column: 25, scope: !16343)
!16356 = !DILocation(line: 55, column: 2, scope: !15915, inlinedAt: !16357)
!16357 = distinct !DILocation(line: 145, column: 10, scope: !15906, inlinedAt: !16355)
!16358 = !DILocation(line: 0, scope: !15915, inlinedAt: !16357)
!16359 = !DILocation(line: 261, column: 9, scope: !16343)
!16360 = !DILocation(line: 261, column: 17, scope: !16343)
!16361 = !DILocation(line: 261, column: 25, scope: !16343)
!16362 = !DILocation(line: 261, column: 37, scope: !16343)
!16363 = !DILocation(line: 261, column: 47, scope: !16343)
!16364 = !DILocation(line: 261, column: 44, scope: !16343)
!16365 = !DILocation(line: 261, column: 2, scope: !16343)
!16366 = !DILocation(line: 0, scope: !16350)
!16367 = !DILocation(line: 263, column: 12, scope: !16350)
!16368 = !DILocation(line: 265, column: 16, scope: !16350)
!16369 = !DILocation(line: 265, column: 13, scope: !16350)
!16370 = !DILocation(line: 266, column: 13, scope: !16350)
!16371 = !DILocation(line: 267, column: 3, scope: !16350)
!16372 = !DILocation(line: 0, scope: !15974, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 269, column: 3, scope: !16350)
!16374 = !DILocation(line: 0, scope: !15982, inlinedAt: !16375)
!16375 = distinct !DILocation(line: 215, column: 2, scope: !15974, inlinedAt: !16373)
!16376 = !DILocation(line: 95, column: 2, scope: !15982, inlinedAt: !16375)
!16377 = !DILocation(line: 270, column: 6, scope: !16350)
!16378 = !DILocation(line: 270, column: 3, scope: !16350)
!16379 = !DILocation(line: 0, scope: !15906, inlinedAt: !16380)
!16380 = distinct !DILocation(line: 271, column: 9, scope: !16350)
!16381 = !DILocation(line: 55, column: 2, scope: !15915, inlinedAt: !16382)
!16382 = distinct !DILocation(line: 145, column: 10, scope: !15906, inlinedAt: !16380)
!16383 = !DILocation(line: 0, scope: !15915, inlinedAt: !16382)
!16384 = !DILocation(line: 272, column: 22, scope: !16350)
!16385 = distinct !{!16385, !16365, !16386}
!16386 = !DILocation(line: 273, column: 2, scope: !16343)
!16387 = !DILocation(line: 276, column: 19, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16389, file: !2813, line: 275, column: 23)
!16389 = distinct !DILexicalBlock(scope: !16343, file: !2813, line: 275, column: 6)
!16390 = !DILocation(line: 277, column: 2, scope: !16388)
!16391 = !DILocation(line: 279, column: 15, scope: !16343)
!16392 = !DILocation(line: 279, column: 12, scope: !16343)
!16393 = !DILocation(line: 280, column: 21, scope: !16343)
!16394 = !DILocation(line: 282, column: 24, scope: !16343)
!16395 = !DILocation(line: 282, column: 2, scope: !16343)
!16396 = !DILocation(line: 0, scope: !15974, inlinedAt: !16397)
!16397 = distinct !DILocation(line: 284, column: 2, scope: !16343)
!16398 = !DILocation(line: 0, scope: !15982, inlinedAt: !16399)
!16399 = distinct !DILocation(line: 215, column: 2, scope: !15974, inlinedAt: !16397)
!16400 = !DILocation(line: 95, column: 2, scope: !15982, inlinedAt: !16399)
!16401 = !DILocation(line: 285, column: 1, scope: !16343)
!16402 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2813, file: !2813, line: 287, type: !16403, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16405)
!16403 = !DISubroutineType(types: !16404)
!16404 = !{!204}
!16405 = !{!16406, !16407, !16409}
!16406 = !DILocalVariable(name: "t", scope: !16402, file: !2813, line: 289, type: !207)
!16407 = !DILocalVariable(name: "__i", scope: !16408, file: !2813, line: 291, type: !15884)
!16408 = distinct !DILexicalBlock(scope: !16402, file: !2813, line: 291, column: 2)
!16409 = !DILocalVariable(name: "__key", scope: !16408, file: !2813, line: 291, type: !15884)
!16410 = !DILocation(line: 0, scope: !16402)
!16411 = !DILocation(line: 0, scope: !16408)
!16412 = !DILocation(line: 0, scope: !15906, inlinedAt: !16413)
!16413 = distinct !DILocation(line: 291, column: 2, scope: !16408)
!16414 = !DILocation(line: 55, column: 2, scope: !15915, inlinedAt: !16415)
!16415 = distinct !DILocation(line: 145, column: 10, scope: !15906, inlinedAt: !16413)
!16416 = !DILocation(line: 0, scope: !15915, inlinedAt: !16415)
!16417 = !DILocation(line: 292, column: 7, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16419, file: !2813, line: 291, column: 24)
!16419 = distinct !DILexicalBlock(scope: !16408, file: !2813, line: 291, column: 2)
!16420 = !DILocation(line: 292, column: 19, scope: !16418)
!16421 = !DILocation(line: 0, scope: !15974, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 291, column: 2, scope: !16419)
!16423 = !DILocation(line: 0, scope: !15982, inlinedAt: !16424)
!16424 = distinct !DILocation(line: 215, column: 2, scope: !15974, inlinedAt: !16422)
!16425 = !DILocation(line: 95, column: 2, scope: !15982, inlinedAt: !16424)
!16426 = !DILocation(line: 292, column: 17, scope: !16418)
!16427 = !DILocation(line: 294, column: 2, scope: !16402)
!16428 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2813, file: !2813, line: 297, type: !7625, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !247)
!16429 = !DILocation(line: 300, column: 19, scope: !16428)
!16430 = !DILocation(line: 300, column: 9, scope: !16428)
!16431 = !DILocation(line: 300, column: 2, scope: !16428)
!16432 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2813, file: !2813, line: 306, type: !16403, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !247)
!16433 = !DILocation(line: 308, column: 9, scope: !16432)
!16434 = !DILocation(line: 308, column: 2, scope: !16432)
!16435 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2813, file: !2813, line: 319, type: !7635, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16436)
!16436 = !{!16437, !16438, !16439, !16440}
!16437 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16435, file: !2813, line: 319, type: !158)
!16438 = !DILocalVariable(name: "start_cycles", scope: !16435, file: !2813, line: 328, type: !158)
!16439 = !DILocalVariable(name: "cycles_to_wait", scope: !16435, file: !2813, line: 331, type: !158)
!16440 = !DILocalVariable(name: "current_cycles", scope: !16441, file: !2813, line: 338, type: !158)
!16441 = distinct !DILexicalBlock(scope: !16442, file: !2813, line: 337, column: 11)
!16442 = distinct !DILexicalBlock(scope: !16443, file: !2813, line: 337, column: 2)
!16443 = distinct !DILexicalBlock(scope: !16435, file: !2813, line: 337, column: 2)
!16444 = !DILocation(line: 0, scope: !16435)
!16445 = !DILocation(line: 322, column: 19, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16435, file: !2813, line: 322, column: 6)
!16447 = !DILocation(line: 322, column: 6, scope: !16435)
!16448 = !DILocation(line: 328, column: 26, scope: !16435)
!16449 = !DILocation(line: 333, column: 43, scope: !16435)
!16450 = !DILocation(line: 337, column: 2, scope: !16435)
!16451 = !DILocation(line: 338, column: 29, scope: !16441)
!16452 = !DILocation(line: 0, scope: !16441)
!16453 = !DILocation(line: 341, column: 23, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16441, file: !2813, line: 341, column: 7)
!16455 = !DILocation(line: 341, column: 39, scope: !16454)
!16456 = !DILocation(line: 349, column: 1, scope: !16435)
!16457 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !221, file: !221, line: 1675, type: !7625, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !247)
!16458 = !DILocation(line: 1677, column: 9, scope: !16457)
!16459 = !DILocation(line: 1677, column: 2, scope: !16457)
!16460 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16461, file: !16461, line: 24, type: !7625, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !247)
!16461 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16462 = !DILocation(line: 26, column: 9, scope: !16460)
!16463 = !DILocation(line: 26, column: 2, scope: !16460)
!16464 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2813, file: !2813, line: 364, type: !16465, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !16467)
!16465 = !DISubroutineType(types: !16466)
!16466 = !{!207, !15874}
!16467 = !{!16468, !16469}
!16468 = !DILocalVariable(name: "timeout", arg: 1, scope: !16464, file: !2813, line: 364, type: !15874)
!16469 = !DILocalVariable(name: "dt", scope: !16464, file: !2813, line: 366, type: !202)
!16470 = !DILocation(line: 0, scope: !16464)
!16471 = !DILocation(line: 368, column: 6, scope: !16464)
!16472 = !DILocation(line: 371, column: 10, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16474, file: !2813, line: 370, column: 47)
!16474 = distinct !DILexicalBlock(scope: !16475, file: !2813, line: 370, column: 13)
!16475 = distinct !DILexicalBlock(scope: !16464, file: !2813, line: 368, column: 6)
!16476 = !DILocation(line: 371, column: 3, scope: !16473)
!16477 = !DILocation(line: 376, column: 58, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !16479, file: !2813, line: 376, column: 7)
!16479 = distinct !DILexicalBlock(scope: !16474, file: !2813, line: 372, column: 9)
!16480 = !DILocation(line: 376, column: 7, scope: !16479)
!16481 = !DILocation(line: 376, column: 43, scope: !16478)
!16482 = !DILocation(line: 377, column: 4, scope: !16483)
!16483 = distinct !DILexicalBlock(scope: !16478, file: !2813, line: 376, column: 64)
!16484 = !DILocation(line: 379, column: 10, scope: !16479)
!16485 = !DILocation(line: 379, column: 33, scope: !16479)
!16486 = !DILocation(line: 379, column: 31, scope: !16479)
!16487 = !DILocation(line: 379, column: 3, scope: !16479)
!16488 = !DILocation(line: 0, scope: !16475)
!16489 = !DILocation(line: 381, column: 1, scope: !16464)
!16490 = distinct !DISubprogram(name: "main", scope: !16491, file: !16491, line: 27, type: !416, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3589, retainedNodes: !247)
!16491 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16492 = !DILocation(line: 38, column: 2, scope: !16493, inlinedAt: !16494)
!16493 = distinct !DISubprogram(name: "arch_nop", scope: !16461, file: !16461, line: 36, type: !416, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3589, retainedNodes: !247)
!16494 = distinct !DILocation(line: 31, column: 2, scope: !16490)
!16495 = !{i64 2843825}
!16496 = !DILocation(line: 36, column: 1, scope: !16490)
!16497 = distinct !DISubprogram(name: "boot_banner", scope: !16498, file: !16498, line: 26, type: !416, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !247)
!16498 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16499 = !DILocation(line: 34, column: 2, scope: !16497)
!16500 = !DILocation(line: 36, column: 1, scope: !16497)
!16501 = distinct !DISubprogram(name: "statics_init", scope: !2841, file: !2841, line: 21, type: !1304, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16502)
!16502 = !{!16503, !16504}
!16503 = !DILocalVariable(name: "unused", arg: 1, scope: !16501, file: !2841, line: 21, type: !1306)
!16504 = !DILocalVariable(name: "h", scope: !16505, file: !2841, line: 24, type: !16506)
!16505 = distinct !DILexicalBlock(scope: !16501, file: !2841, line: 24, column: 2)
!16506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16507, size: 32)
!16507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !221, line: 5073, size: 160, elements: !16508)
!16508 = !{!16509, !16515, !16521}
!16509 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16507, file: !221, line: 5074, baseType: !16510, size: 96)
!16510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !363, line: 56, size: 96, elements: !16511)
!16511 = !{!16512, !16513, !16514}
!16512 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16510, file: !363, line: 57, baseType: !366, size: 32)
!16513 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16510, file: !363, line: 58, baseType: !133, size: 32, offset: 32)
!16514 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16510, file: !363, line: 59, baseType: !249, size: 32, offset: 64)
!16515 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16507, file: !221, line: 5075, baseType: !16516, size: 64, offset: 96)
!16516 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !225, line: 233, baseType: !16517)
!16517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !225, line: 231, size: 64, elements: !16518)
!16518 = !{!16519}
!16519 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16517, file: !225, line: 232, baseType: !16520, size: 64)
!16520 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !230, line: 48, baseType: !2827)
!16521 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16507, file: !221, line: 5076, baseType: !16522, offset: 160)
!16522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !246, line: 43, elements: !247)
!16523 = !DILocation(line: 0, scope: !16501)
!16524 = !DILocation(line: 0, scope: !16505)
!16525 = !DILocation(line: 24, column: 2, scope: !16505)
!16526 = !DILocation(line: 52, column: 2, scope: !16501)
!16527 = !DILocation(line: 49, column: 27, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16529, file: !2841, line: 48, column: 3)
!16529 = distinct !DILexicalBlock(scope: !16530, file: !2841, line: 24, column: 36)
!16530 = distinct !DILexicalBlock(scope: !16505, file: !2841, line: 24, column: 2)
!16531 = !DILocation(line: 49, column: 45, scope: !16528)
!16532 = !DILocation(line: 49, column: 4, scope: !16528)
!16533 = !DILocation(line: 24, column: 2, scope: !16530)
!16534 = !DILocation(line: 24, column: 2, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16530, file: !2841, line: 24, column: 2)
!16536 = distinct !{!16536, !16525, !16537}
!16537 = !DILocation(line: 51, column: 2, scope: !16505)
!16538 = distinct !DISubprogram(name: "k_heap_init", scope: !2841, file: !2841, line: 13, type: !16539, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16541)
!16539 = !DISubroutineType(types: !16540)
!16540 = !{null, !16506, !133, !249}
!16541 = !{!16542, !16543, !16544}
!16542 = !DILocalVariable(name: "h", arg: 1, scope: !16538, file: !2841, line: 13, type: !16506)
!16543 = !DILocalVariable(name: "mem", arg: 2, scope: !16538, file: !2841, line: 13, type: !133)
!16544 = !DILocalVariable(name: "bytes", arg: 3, scope: !16538, file: !2841, line: 13, type: !249)
!16545 = !DILocation(line: 0, scope: !16538)
!16546 = !DILocation(line: 15, column: 19, scope: !16538)
!16547 = !DILocation(line: 15, column: 2, scope: !16538)
!16548 = !DILocation(line: 16, column: 20, scope: !16538)
!16549 = !DILocation(line: 16, column: 2, scope: !16538)
!16550 = !DILocation(line: 19, column: 1, scope: !16538)
!16551 = distinct !DISubprogram(name: "z_waitq_init", scope: !12763, file: !12763, line: 47, type: !16552, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16555)
!16552 = !DISubroutineType(types: !16553)
!16553 = !{null, !16554}
!16554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16516, size: 32)
!16555 = !{!16556}
!16556 = !DILocalVariable(name: "w", arg: 1, scope: !16551, file: !12763, line: 47, type: !16554)
!16557 = !DILocation(line: 0, scope: !16551)
!16558 = !DILocation(line: 49, column: 21, scope: !16551)
!16559 = !DILocation(line: 49, column: 2, scope: !16551)
!16560 = !DILocation(line: 50, column: 1, scope: !16551)
!16561 = distinct !DISubprogram(name: "sys_dlist_init", scope: !230, file: !230, line: 197, type: !16562, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16565)
!16562 = !DISubroutineType(types: !16563)
!16563 = !{null, !16564}
!16564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16520, size: 32)
!16565 = !{!16566}
!16566 = !DILocalVariable(name: "list", arg: 1, scope: !16561, file: !230, line: 197, type: !16564)
!16567 = !DILocation(line: 0, scope: !16561)
!16568 = !DILocation(line: 199, column: 8, scope: !16561)
!16569 = !DILocation(line: 199, column: 13, scope: !16561)
!16570 = !DILocation(line: 200, column: 8, scope: !16561)
!16571 = !DILocation(line: 200, column: 13, scope: !16561)
!16572 = !DILocation(line: 201, column: 1, scope: !16561)
!16573 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2841, file: !2841, line: 64, type: !16574, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16580)
!16574 = !DISubroutineType(types: !16575)
!16575 = !{!133, !16506, !249, !249, !16576}
!16576 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !203, line: 67, baseType: !16577)
!16577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !203, line: 65, size: 64, elements: !16578)
!16578 = !{!16579}
!16579 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16577, file: !203, line: 66, baseType: !202, size: 64)
!16580 = !{!16581, !16582, !16583, !16584, !16585, !16586, !16587, !16588, !16593}
!16581 = !DILocalVariable(name: "h", arg: 1, scope: !16573, file: !2841, line: 64, type: !16506)
!16582 = !DILocalVariable(name: "align", arg: 2, scope: !16573, file: !2841, line: 64, type: !249)
!16583 = !DILocalVariable(name: "bytes", arg: 3, scope: !16573, file: !2841, line: 64, type: !249)
!16584 = !DILocalVariable(name: "timeout", arg: 4, scope: !16573, file: !2841, line: 65, type: !16576)
!16585 = !DILocalVariable(name: "now", scope: !16573, file: !2841, line: 67, type: !204)
!16586 = !DILocalVariable(name: "end", scope: !16573, file: !2841, line: 67, type: !204)
!16587 = !DILocalVariable(name: "ret", scope: !16573, file: !2841, line: 68, type: !133)
!16588 = !DILocalVariable(name: "key", scope: !16573, file: !2841, line: 72, type: !16589)
!16589 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !246, line: 106, baseType: !16590)
!16590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !246, line: 32, size: 32, elements: !16591)
!16591 = !{!16592}
!16592 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16590, file: !246, line: 33, baseType: !111, size: 32)
!16593 = !DILocalVariable(name: "blocked_alloc", scope: !16573, file: !2841, line: 78, type: !131)
!16594 = !DILocation(line: 0, scope: !16573)
!16595 = !DILocation(line: 67, column: 21, scope: !16573)
!16596 = !DILocation(line: 70, column: 8, scope: !16573)
!16597 = !DILocation(line: 72, column: 41, scope: !16573)
!16598 = !DILocalVariable(name: "l", arg: 1, scope: !16599, file: !246, line: 136, type: !16602)
!16599 = distinct !DISubprogram(name: "k_spin_lock", scope: !246, file: !246, line: 136, type: !16600, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16603)
!16600 = !DISubroutineType(types: !16601)
!16601 = !{!16589, !16602}
!16602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16522, size: 32)
!16603 = !{!16598, !16604}
!16604 = !DILocalVariable(name: "k", scope: !16599, file: !246, line: 139, type: !16589)
!16605 = !DILocation(line: 0, scope: !16599, inlinedAt: !16606)
!16606 = distinct !DILocation(line: 72, column: 25, scope: !16573)
!16607 = !DILocation(line: 55, column: 2, scope: !16608, inlinedAt: !16612)
!16608 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7659, file: !7659, line: 42, type: !9702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16609)
!16609 = !{!16610, !16611}
!16610 = !DILocalVariable(name: "key", scope: !16608, file: !7659, line: 44, type: !32)
!16611 = !DILocalVariable(name: "tmp", scope: !16608, file: !7659, line: 53, type: !32)
!16612 = distinct !DILocation(line: 145, column: 10, scope: !16599, inlinedAt: !16606)
!16613 = !{i64 2842968}
!16614 = !DILocation(line: 0, scope: !16608, inlinedAt: !16612)
!16615 = !DILocation(line: 81, column: 9, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16573, file: !2841, line: 80, column: 22)
!16617 = !DILocation(line: 83, column: 9, scope: !16616)
!16618 = !DILocation(line: 85, column: 12, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16616, file: !2841, line: 84, column: 7)
!16620 = !DILocation(line: 85, column: 21, scope: !16619)
!16621 = !DILocation(line: 85, column: 30, scope: !16619)
!16622 = !DILocation(line: 85, column: 37, scope: !16619)
!16623 = !DILocation(line: 84, column: 7, scope: !16616)
!16624 = !DILocation(line: 99, column: 10, scope: !16616)
!16625 = !DILocation(line: 0, scope: !16599, inlinedAt: !16626)
!16626 = distinct !DILocation(line: 101, column: 9, scope: !16616)
!16627 = !DILocation(line: 55, column: 2, scope: !16608, inlinedAt: !16628)
!16628 = distinct !DILocation(line: 145, column: 10, scope: !16599, inlinedAt: !16626)
!16629 = !DILocation(line: 0, scope: !16608, inlinedAt: !16628)
!16630 = distinct !{!16630, !16631, !16632}
!16631 = !DILocation(line: 80, column: 2, scope: !16573)
!16632 = !DILocation(line: 102, column: 2, scope: !16573)
!16633 = !DILocalVariable(name: "key", arg: 2, scope: !16634, file: !246, line: 190, type: !16589)
!16634 = distinct !DISubprogram(name: "k_spin_unlock", scope: !246, file: !246, line: 189, type: !16635, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16637)
!16635 = !DISubroutineType(types: !16636)
!16636 = !{null, !16602, !16589}
!16637 = !{!16638, !16633}
!16638 = !DILocalVariable(name: "l", arg: 1, scope: !16634, file: !246, line: 189, type: !16602)
!16639 = !DILocation(line: 0, scope: !16634, inlinedAt: !16640)
!16640 = distinct !DILocation(line: 106, column: 2, scope: !16573)
!16641 = !DILocalVariable(name: "key", arg: 1, scope: !16642, file: !7659, line: 84, type: !32)
!16642 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7659, file: !7659, line: 84, type: !7495, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16643)
!16643 = !{!16641}
!16644 = !DILocation(line: 0, scope: !16642, inlinedAt: !16645)
!16645 = distinct !DILocation(line: 215, column: 2, scope: !16634, inlinedAt: !16640)
!16646 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !16645)
!16647 = !{i64 2843785}
!16648 = !DILocation(line: 107, column: 2, scope: !16573)
!16649 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2841, file: !2841, line: 110, type: !16650, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16652)
!16650 = !DISubroutineType(types: !16651)
!16651 = !{!133, !16506, !249, !16576}
!16652 = !{!16653, !16654, !16655, !16656}
!16653 = !DILocalVariable(name: "h", arg: 1, scope: !16649, file: !2841, line: 110, type: !16506)
!16654 = !DILocalVariable(name: "bytes", arg: 2, scope: !16649, file: !2841, line: 110, type: !249)
!16655 = !DILocalVariable(name: "timeout", arg: 3, scope: !16649, file: !2841, line: 110, type: !16576)
!16656 = !DILocalVariable(name: "ret", scope: !16649, file: !2841, line: 114, type: !133)
!16657 = !DILocation(line: 0, scope: !16649)
!16658 = !DILocation(line: 114, column: 14, scope: !16649)
!16659 = !DILocation(line: 118, column: 2, scope: !16649)
!16660 = distinct !DISubprogram(name: "k_heap_free", scope: !2841, file: !2841, line: 121, type: !16661, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !16663)
!16661 = !DISubroutineType(types: !16662)
!16662 = !{null, !16506, !133}
!16663 = !{!16664, !16665, !16666}
!16664 = !DILocalVariable(name: "h", arg: 1, scope: !16660, file: !2841, line: 121, type: !16506)
!16665 = !DILocalVariable(name: "mem", arg: 2, scope: !16660, file: !2841, line: 121, type: !133)
!16666 = !DILocalVariable(name: "key", scope: !16660, file: !2841, line: 123, type: !16589)
!16667 = !DILocation(line: 0, scope: !16660)
!16668 = !DILocation(line: 0, scope: !16599, inlinedAt: !16669)
!16669 = distinct !DILocation(line: 123, column: 25, scope: !16660)
!16670 = !DILocation(line: 55, column: 2, scope: !16608, inlinedAt: !16671)
!16671 = distinct !DILocation(line: 145, column: 10, scope: !16599, inlinedAt: !16669)
!16672 = !DILocation(line: 0, scope: !16608, inlinedAt: !16671)
!16673 = !DILocation(line: 125, column: 20, scope: !16660)
!16674 = !DILocation(line: 125, column: 2, scope: !16660)
!16675 = !DILocation(line: 128, column: 60, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16660, file: !2841, line: 128, column: 6)
!16677 = !DILocation(line: 128, column: 43, scope: !16676)
!16678 = !DILocation(line: 128, column: 68, scope: !16676)
!16679 = !DILocation(line: 128, column: 6, scope: !16660)
!16680 = !DILocation(line: 123, column: 41, scope: !16660)
!16681 = !DILocation(line: 129, column: 3, scope: !16682)
!16682 = distinct !DILexicalBlock(scope: !16676, file: !2841, line: 128, column: 74)
!16683 = !DILocation(line: 130, column: 2, scope: !16682)
!16684 = !DILocation(line: 0, scope: !16634, inlinedAt: !16685)
!16685 = distinct !DILocation(line: 131, column: 3, scope: !16686)
!16686 = distinct !DILexicalBlock(scope: !16676, file: !2841, line: 130, column: 9)
!16687 = !DILocation(line: 0, scope: !16642, inlinedAt: !16688)
!16688 = distinct !DILocation(line: 215, column: 2, scope: !16634, inlinedAt: !16685)
!16689 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !16688)
!16690 = !DILocation(line: 133, column: 1, scope: !16660)
